[
    {
        "content": "<p>Hello! I just noticed this channel today and glad to see many people interested in Lean and physics.</p>\n<p>I am working on mathematical quantum field theory (a.k.a. axiomatic/algebraic/constructive QFT). There are many quantum field theories that have been rigorously constructed and I would like to see them fomalised. However, many things are still missing in mathlib, so I am currently trying to add some basic tools to it, a bit randomly.</p>\n<p>If anyone is interested in any of the following, we might able to organize!</p>\n<ul>\n<li>distribution theory (Fourier/Laplace transform, analytic continuation)</li>\n<li>unitary representations of groups</li>\n<li>spectral decomposition for (self-adjoint/normal) operators on a Hilbert space</li>\n<li>von Neumann algebras</li>\n</ul>",
        "id": 447475511,
        "sender_full_name": "Yoh Tanimoto",
        "timestamp": 1719494172
    },
    {
        "content": "<p>Hey! I used to work on functorial quantum  field theories, which aren't too far in spirit from AQFTs.</p>\n<p>In case you haven't seen this: I'm working on a project `HepLean' with the goal of trying to formalise high energy physics (very broadly defined) in Lean. If/when you get around to formalising parts of AQFTs, it would be great to have them included in this project (if not in Mathlib).</p>\n<p>In any case, I'm certainly interested  in unitary representations of groups (and Lie algebras), and potentially von Neumann algebras and things related (from a CFT perspective).</p>",
        "id": 447482069,
        "sender_full_name": "Joseph Tooby-Smith",
        "timestamp": 1719495959
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"382902\">Yoh Tanimoto</span> <a href=\"#narrow/stream/395462-Natural-sciences/topic/mathematical.20tools.20for.20.28axiomatic.2Falgebraic.29.20QFT/near/447475511\">said</a>:</p>\n<blockquote>\n<p>If anyone is interested in any of the following, we might able to organize!</p>\n<ul>\n<li>distribution theory (Fourier/Laplace transform, analytic continuation)</li>\n<li>unitary representations of groups</li>\n<li>spectral decomposition for (self-adjoint/normal) operators on a Hilbert space</li>\n<li>von Neumann algebras</li>\n</ul>\n</blockquote>\n<p>All those topics are more or less actively worked on already. Before starting anything serious in those direction you should make sure to post a message in the mathlib4 stream.</p>",
        "id": 447518022,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1719504956
    },
    {
        "content": "<p>Indeed, for example I have just PRed <a href=\"https://github.com/leanprover-community/mathlib4/pull/14177\">#14177</a> with a view towards getting started on von Neumann algebras.</p>",
        "id": 447518797,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1719505200
    },
    {
        "content": "<p>Hi Joseph! I saw your project, very nice!<br>\nFormalizing AQFT is still a bit far, we need more definitions to start with.<br>\nBut you have already have Lorentz metric and Lorentz group!<br>\nI defined the Poincaré group here as a subgroup of the affine group, without thinking about PR'ing or so<br>\n<a href=\"https://github.com/yoh-tanimoto/mathlib4/blob/yoh/yoh/wightman/minkowski.lean\">https://github.com/yoh-tanimoto/mathlib4/blob/yoh/yoh/wightman/minkowski.lean</a><br>\nI was wondering which is the best definition. Maybe at some point  one wants to classify the positive-energy representations, so it might be better to define it as the semidirect product of the translation group and the Lorentz group. Any thought?</p>",
        "id": 447520991,
        "sender_full_name": "Yoh Tanimoto",
        "timestamp": 1719505871
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  thanks, I know that there are some works going on, but I will keep in mind to post a message.</p>\n<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span>  Great that you PR'ed WOT! I also tried to define SOT but not really in a useful form. Are you going to do that and/or the double commutant theorem?</p>",
        "id": 447522627,
        "sender_full_name": "Yoh Tanimoto",
        "timestamp": 1719506360
    },
    {
        "content": "<p>Yes, that's the general direction I'd like to go in!</p>",
        "id": 447536425,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1719509524
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"382902\">@Yoh Tanimoto</span> Nice! I like your notation for the metric.</p>\n<p>C.f. the definition of the Poincare Group, one can always define an equivalence to the semidirect product of translations and the Lorentz Group. I think defining it as the group</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"o\">{</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">R2</span><span class=\"w\"> </span><span class=\"bp\">→ᵃ</span><span class=\"o\">[</span><span class=\"n\">ℝ</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">R2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">∀</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">R2</span><span class=\"o\">),</span><span class=\"w\"> </span><span class=\"bp\">‖</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"bp\">‖</span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"bp\">‖</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"bp\">‖</span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"o\">}</span>\n</code></pre></div>\n<p>is a slightly better variation on what you have. Then invertibility becomes a theorem rather than a definition.</p>\n<p>C.f. what is in HepLean about the Lorentz metric and group, it needs refactoring a bit, and generalising to any dimension d.</p>",
        "id": 447536904,
        "sender_full_name": "Joseph Tooby-Smith",
        "timestamp": 1719509677
    },
    {
        "content": "<p>thanks for your comment!<br>\nWhy do you think it's better to define it as <code>g : R2 →ᵃ[ℝ] R2</code>? With <code>g : R2 ≃ᵃ[ℝ] R2</code> you can benefit from theorems for <code>AffineEquiv</code> and <code>LinearEquiv</code>...</p>",
        "id": 447568353,
        "sender_full_name": "Yoh Tanimoto",
        "timestamp": 1719517524
    },
    {
        "content": "<p>When I first defined the Lorentz group I did it similar to what you did, as an element of <code>`(Fin 4 → ℝ) ≃ₗ[ℝ] (Fin 4 → ℝ)</code> preserving the metric. The problem was that every time I wanted to show <code>M</code> was part of the Lorentz group, it wasn't enough to show it preserved the metric, I also had to show it was invertible (which follows from it preserving the metric). It ended up being easier to make this manifest. (By defining it through <code>R2 →ᵃ[ℝ] R2</code> you can also explicitly tell lean what the inverse is in terms of traces etc.)</p>\n<p>You can still benefit from <code>AffineEquiv</code>, just define a map <code>Poincare -&gt; AffineEquiv</code>.</p>",
        "id": 447575206,
        "sender_full_name": "Joseph Tooby-Smith",
        "timestamp": 1719519255
    },
    {
        "content": "<p>I see, if you want to treat concrete example.</p>\n<p>maybe it is more practical to keep two definitions, one as `AffineEquiv\" and proving that it is isomorphic to the usual semidirect product, where the latter is defined as you do? In this way, examples can be checked in the latter definition, while the former acts on the Minkowski space by definition.</p>",
        "id": 447578405,
        "sender_full_name": "Yoh Tanimoto",
        "timestamp": 1719520481
    },
    {
        "content": "<p>Even non-concrete examples like defining the homomorphism a group into it. </p>\n<p>The latter will also act on Minkowski space by definition. And if you really wanted you could just define the way it acts on Minkowski space through the map <code>Poincare -&gt; AffineEquiv</code>. I'm struggling to see the benefits one would get rom defining it through <code>AffineEquiv</code>.</p>",
        "id": 447730596,
        "sender_full_name": "Joseph Tooby-Smith",
        "timestamp": 1719571233
    },
    {
        "content": "<p>you could, but if every time you have to compose it with an isomorphism it's tedious.</p>\n<p>if you consider the action of <code>g : Poincare</code> on the space of functions, then it is <code>f (g⁻¹ x)</code>.</p>",
        "id": 447811790,
        "sender_full_name": "Yoh Tanimoto",
        "timestamp": 1719591124
    }
]