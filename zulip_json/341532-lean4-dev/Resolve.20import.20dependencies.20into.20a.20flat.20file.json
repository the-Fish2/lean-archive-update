[
    {
        "content": "<p>Is it possible to compile a .lean file into a format where all imports are replaced recursively with their contents (e.g. import Mathlib.Algebra.CharP.Basic should be replaced with the contents of <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Algebra/CharP/Basic.lean\">https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Algebra/CharP/Basic.lean</a>, and so on recursively), somehow similarly to the output of the C++ preprocessor with all headers replaced with instructions?</p>",
        "id": 444278976,
        "sender_full_name": "Alex D",
        "timestamp": 1718209506
    },
    {
        "content": "<p>Almost, but not quite. The meaning of <code>import</code> is indeed essentially, 'pretend that the imported file (and its dependencies, etc.) has been pasted here'. However, there are special <code>initialize</code> blocks which are executed only when a file is imported, and these are used quite pervasively under the hood.</p>",
        "id": 444282719,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1718210495
    },
    {
        "content": "<p>Thank you for the quick reply Jannis!</p>",
        "id": 444403343,
        "sender_full_name": "Alex D",
        "timestamp": 1718264449
    }
]