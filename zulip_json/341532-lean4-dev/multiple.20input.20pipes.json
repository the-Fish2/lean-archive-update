[
    {
        "content": "<p>Is there a way to pass multiple input pipes to a process I'm spawning from Lean?</p>\n<p>In bash for example I can do <code>cat &lt;(echo \"hi\") &lt;(echo \"bye\")</code> and bash will make file descriptors for each of these sub-processes and pass <code>/dev/fd/X</code> in the arg list of <code>cat</code> so when it opens those files it is actually opening the pipe.</p>\n<p>Does core provide a way to do this? Is it even possible to do platform independently (i.e. on Windows)? I know very little about how OS primitives work but am seeing something called \"named pipes\" that exist in both unix and windows maybe? <span aria-label=\"frowning\" class=\"emoji emoji-1f626\" role=\"img\" title=\"frowning\">:frowning:</span></p>",
        "id": 425401255,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1709848224
    },
    {
        "content": "<p>On linux you can probably wrap C's <code>mkfifo</code></p>",
        "id": 425401616,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1709848350
    },
    {
        "content": "<p>Yeah... I'm trying to decide in the short-term whether it's easier to give an API for mkfifo or to just spawn a <code>bash</code> process with the command substitution</p>",
        "id": 425402062,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1709848554
    },
    {
        "content": "<p>A related issue, if I have a <code>Handle</code> that I want to set as the stdout of a new process, I think the only way I can do so right now is spawn the process as <code>stdout := .piped</code> and then spawn another thread copying from one handle to the other?</p>",
        "id": 425413783,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1709853648
    },
    {
        "content": "<p>I think you can set the stdout directly to the handle?</p>",
        "id": 425811917,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710110472
    },
    {
        "content": "<p>Ah, <a href=\"https://github.com/leanprover/lean4/blob/1d3ef577c28b6298f4edf8aef86b23ca3ba99b66/src/runtime/process.cpp#L331\">you're right</a>, you can't pass a handle of your own making</p>",
        "id": 425812289,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710110849
    },
    {
        "content": "<p>Ah, <a href=\"https://github.com/leanprover/lean4/blob/1d3ef577c28b6298f4edf8aef86b23ca3ba99b66/src/runtime/process.cpp#L331\">you're right</a>, you can't pass a handle of your own making</p>",
        "id": 425812381,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710110928
    },
    {
        "content": "<p>Yeah... Maybe it can just be added as an option for the pipe configuration? Not sure what correctness issues come up with doing so.</p>",
        "id": 425833738,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1710129893
    }
]