[
    {
        "content": "<p>Today I chose issue 5463 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib4/issues/5463\">Review all names with <code>'</code></a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> (@urkud) on 2023-06-24<br>\nLabels: </p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 412964190,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1705327524
    },
    {
        "content": "<p>I commented on the issue with the <a href=\"https://gist.github.com/semorrison/1e7c65b175a3b1177e6c183c7670f854\">list of all primed names</a> (over 7000!) and the code to produce the list.</p>\n<p>Presumably it will require a more targeted approach to make progress here.</p>",
        "id": 413052250,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1705365259
    },
    {
        "content": "<p>I hope that we might aspire to one day not having primed names, but I'm not sure how we would ever get there.</p>",
        "id": 413052329,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1705365293
    },
    {
        "content": "<p>How do I restrict the list to the definitions and lemmas defined in <code>Mathlib</code>, not its dependencies?</p>",
        "id": 413052646,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705365420
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">primedNames</span> <span class=\"o\">:</span> <span class=\"n\">CoreM</span> <span class=\"o\">(</span><span class=\"n\">Array</span> <span class=\"n\">Name</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">env</span> <span class=\"bp\">←</span> <span class=\"n\">getEnv</span>\n  <span class=\"k\">let</span> <span class=\"n\">mut</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[]</span>\n  <span class=\"n\">for</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">env.constants.map₁.toList</span> <span class=\"k\">do</span>\n    <span class=\"k\">if</span> <span class=\"k\">let</span> <span class=\"n\">some</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"n\">env.getModuleFor</span><span class=\"bp\">?</span> <span class=\"n\">n</span> <span class=\"k\">then</span>\n      <span class=\"k\">if</span> <span class=\"n\">m.components.head</span><span class=\"bp\">!</span> <span class=\"bp\">=</span> <span class=\"bp\">`</span><span class=\"n\">Mathlib</span> <span class=\"k\">then</span>\n        <span class=\"k\">if</span> <span class=\"n\">n.toString.endsWith</span> <span class=\"s2\">\"'\"</span> <span class=\"k\">then</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">r.push</span> <span class=\"n\">n</span>\n  <span class=\"n\">return</span> <span class=\"n\">r</span>\n\n<span class=\"n\">run_meta</span> <span class=\"k\">do</span> <span class=\"n\">for</span> <span class=\"n\">n</span> <span class=\"k\">in</span> <span class=\"bp\">←</span> <span class=\"n\">primedNames</span> <span class=\"k\">do</span> <span class=\"n\">IO.println</span> <span class=\"n\">n</span>\n</code></pre></div>",
        "id": 413054994,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1705366270
    },
    {
        "content": "<p>(Although arguably going via <code>Environment.moduleData</code> would be more efficient. For a small library like Mathlib the above code is no problem, however. :-)</p>",
        "id": 413055393,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1705366402
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 413055649,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705366472
    }
]