[
    {
        "content": "<p>When updating mathlib after a change to core, I find most of the time is spent running <code>lake build</code>, looking at the error message, finding the file name and location, opening it in VSCode, jumping to the right location, and only then doing the edit.</p>\n<p>Is there a way to say “run <code>lake build</code> and jump to the next error”?</p>",
        "id": 430037367,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1711621940
    },
    {
        "content": "<p>Ah, simply using the VSCode built-in terminal turns the file locations into links. That helps.</p>",
        "id": 430037577,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1711622036
    },
    {
        "content": "<p>I have a script which I run as <code>errors lake build</code> which opens all the files mentioned in errors.</p>",
        "id": 430043661,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711624411
    },
    {
        "content": "<p>I'm away from a computer for the weekend so can't post the script now, but will later.</p>",
        "id": 430043699,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711624431
    },
    {
        "content": "<p>It is helpful, but unfortunately it grabs focus as it opens each file.</p>",
        "id": 430043798,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711624458
    },
    {
        "content": "<p>Nice! But no hurry, clicking in the terminal is pretty close to optimal – I can even do it while it still works on more files.</p>",
        "id": 430043806,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1711624463
    },
    {
        "content": "<p>I usually run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>lake<span class=\"w\"> </span>build<span class=\"w\"> </span><span class=\"p\">|</span>\n<span class=\"w\">  </span>sed<span class=\"w\"> </span>-n<span class=\"w\"> </span><span class=\"s1\">'s=[./]*\\(Mathlib[^ ]*\\): .*=code -r -g \\1=p'</span>\n</code></pre></div>\n<p>which produces an output with many lines like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">code</span> <span class=\"bp\">-</span><span class=\"n\">r</span> <span class=\"bp\">-</span><span class=\"n\">g</span> <span class=\"bp\">&lt;</span><span class=\"n\">filename</span><span class=\"o\">:</span><span class=\"n\">lin</span><span class=\"o\">:</span><span class=\"n\">col</span><span class=\"bp\">&gt;</span>\n</code></pre></div>\n<p>and copy-pasting those lines <code>-r</code>ecycles an open VSCode and <code>-g</code>oes to the specified file-line-column.</p>",
        "id": 430045337,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1711625104
    }
]