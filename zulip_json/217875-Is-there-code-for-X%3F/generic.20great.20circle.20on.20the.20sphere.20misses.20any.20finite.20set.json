[
    {
        "content": "<p>Do we have something like the following already? I want to know that given any finite set of points on the sphere, there is a great circle that misses all of them... Thanks!</p>",
        "id": 438834545,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1715788042
    },
    {
        "content": "<p>That sounds like something that might not even be obvious to state. Unless it exists in sphere eversion?</p>",
        "id": 438843242,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715790666
    },
    {
        "content": "<p>I assume the sphere is centered in Euclidean space? In that case it could be stated in terms of the intersection of the sphere with some generic hyperplane.</p>",
        "id": 438844227,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1715790980
    },
    {
        "content": "<p>(Does our <code>EuclideanSpace</code> have a center?)</p>\n<p>Easy to prove on paper: let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">S^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> be the unit sphere center the origin in the real inner-product space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span>. Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> be a finite set of points of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">S^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>Choose an antipodal pair <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">-p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\">p</span></span></span></span> of points of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">S^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> [edit: disjoint from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span>] and choose an orthogonal basis <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathscr{E}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7em;\"></span><span class=\"mord mathscr\" style=\"margin-right:0.18583em;\">E</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"script\">E</mi></msub></mrow><annotation encoding=\"application/x-tex\">p = (0, 0, 1)_{\\mathscr{E}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathscr mtight\" style=\"margin-right:0.18583em;\">E</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>\n<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>θ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mi>x</mi><mo>∈</mo><mi>s</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">t = \\{\\theta(x) : x \\in s\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">}</span></span></span></span>, a finite set, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\theta(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is the azimuth of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mi>sin</mi><mo>⁡</mo><mi>ϕ</mi><mo separator=\"true\">,</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mi>sin</mi><mo>⁡</mo><mi>ϕ</mi><mo separator=\"true\">,</mo><mi>cos</mi><mo>⁡</mo><mi>ϕ</mi><msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"script\">E</mi></msub></mrow><annotation encoding=\"application/x-tex\">x = (\\cos\\theta\\sin\\phi, \\sin\\theta\\sin\\phi, \\cos\\phi)_{\\mathscr{E}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathscr mtight\" style=\"margin-right:0.18583em;\">E</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><msup><mi>S</mi><mn>2</mn></msup><mo>∖</mo><mo stretchy=\"false\">{</mo><mi>p</mi><mo separator=\"true\">,</mo><mo>−</mo><mi>p</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">x \\in S^2 \\setminus \\{p, -p\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">}</span></span></span></span>.</p>\n<p>Choose an angle <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi><mo mathvariant=\"normal\">∉</mo><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">\\theta \\notin t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord\"><span class=\"mrel\">∈</span></span><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"llap\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mord\">/</span><span class=\"mspace\" style=\"margin-right:0.0556em;\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>. Then the great circle <del>is</del> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mi>sin</mi><mo>⁡</mo><mi>ϕ</mi><mo separator=\"true\">,</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mi>sin</mi><mo>⁡</mo><mi>ϕ</mi><mo separator=\"true\">,</mo><mi>cos</mi><mo>⁡</mo><mi>ϕ</mi><msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"script\">E</mi></msub></mrow><annotation encoding=\"application/x-tex\">(\\cos\\theta\\sin\\phi, \\sin\\theta\\sin\\phi, \\cos\\phi)_{\\mathscr{E}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathscr mtight\" style=\"margin-right:0.18583em;\">E</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> has the desired property.</p>",
        "id": 438851159,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715793350
    },
    {
        "content": "<p>Oh, I was thinking that one should prove the more general fact that given a finite set of nonzero points in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span> (n &gt; 1) you can find some hyperplane which misses them all.</p>",
        "id": 438851336,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1715793407
    },
    {
        "content": "<p>Hmm, ok. Choose an origin [edit: outside the finite set], then do the above (the distance of each of the points considered from the origin is irrelevant).</p>",
        "id": 438851731,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715793543
    },
    {
        "content": "<p>Alternatively, there is a linear functional that doesn't vanish at any of the finitely many points.</p>",
        "id": 438852748,
        "sender_full_name": "Scott Carnahan",
        "timestamp": 1715793897
    },
    {
        "content": "<p>That sounds like something we may actually have...</p>",
        "id": 438852912,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1715793948
    },
    {
        "content": "<p>This is too easy if we're allowed to use any plane (or equivalently, if we desire a subspace but we are allowed to choose the origin): use the plane <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">x=X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>&gt;</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">X &gt; x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>z</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">(x_i, y_i, z_i)\\in s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span>.</p>",
        "id": 438854988,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715794694
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> yep, nonzero points, and a linear subspace, not just a hyperplane</p>",
        "id": 438855474,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715794887
    },
    {
        "content": "<p>Yeah of course</p>",
        "id": 438855577,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1715794923
    },
    {
        "content": "<p>Another alternative: Finitely many nonzero points describe a finite union of hyperplanes in the dual space, and this is not the whole dual space.</p>",
        "id": 438864292,
        "sender_full_name": "Scott Carnahan",
        "timestamp": 1715798314
    },
    {
        "content": "<p>I think that's probably the best approach for mathlib: prove that over an infinite field a vector space cannot be the union of finitely many proper subspaces (or better, provide a bound on the cardinality of the field given the fact that a vector space <em>is</em> the union of finitely many subspaces). Then use Scott's argument in the dual space, etc.</p>",
        "id": 438871370,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1715801151
    },
    {
        "content": "<p>This works for countably many points too, right?</p>",
        "id": 438902073,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1715815334
    },
    {
        "content": "<p>And if you're willing to be teasing, it even works for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>&lt;</mo><msup><mn>2</mn><msub><mi mathvariant=\"normal\">ℵ</mi><mn>0</mn></msub></msup></mrow><annotation encoding=\"application/x-tex\">&lt;2^{\\aleph_0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8491em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">ℵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> points.</p>",
        "id": 438904095,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1715816722
    },
    {
        "content": "<p>There's a nice proof <a href=\"https://math.stackexchange.com/a/4797985/411545\">here</a></p>",
        "id": 438910553,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715821564
    },
    {
        "content": "<p>And there's a not-nice formalization of (the inside bit of) it below. I only did the  &lt; ℵ₀ case.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">false</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"bp\">𝕜</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">RCLike</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">inst</span><span class=\"o\">:</span> <span class=\"n\">Module</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n\n<span class=\"c1\">-- If `s` is a finite set of submodules properly included in the submodule `m`,</span>\n<span class=\"c1\">-- the union of the submodules in `s` is a proper subset of `m`.</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">Submodule</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"bp\">⊥</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Submodule</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">),</span>\n    <span class=\"n\">s.card</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"bp\">⋃</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">classical</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₀</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">Submodule</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Submodule</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">s.card</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n      <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"bp\">⋃</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.card_eq_zero.mp</span> <span class=\"n\">hn</span><span class=\"o\">,</span> <span class=\"n\">Set.not_subset</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">zero_mem</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Set.mem_iUnion₂</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">nofun</span><span class=\"o\">⟩</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">rintro</span> <span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"n\">s</span> <span class=\"n\">hn</span> <span class=\"bp\">-</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₀</span> <span class=\"n\">m</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"n\">Nat.eq_zero_of_le_zero</span> <span class=\"n\">hn</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"n\">n</span> <span class=\"n\">ih</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">intro</span> <span class=\"n\">m</span> <span class=\"n\">hm</span> <span class=\"n\">s</span> <span class=\"n\">hn</span> <span class=\"n\">hproper</span>\n    <span class=\"n\">by_cases</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">s.card</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n    <span class=\"bp\">.</span> <span class=\"n\">exact</span> <span class=\"n\">h₀</span> <span class=\"n\">m</span> <span class=\"n\">s</span> <span class=\"n\">h</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.card_eq_zero</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">Finset.nonempty_iff_ne_empty</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n    <span class=\"k\">have</span> <span class=\"o\">⟨</span><span class=\"n\">m'</span><span class=\"o\">,</span> <span class=\"n\">hm'</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h</span>\n    <span class=\"n\">by_cases</span> <span class=\"n\">hinc</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">s.erase</span> <span class=\"n\">m'</span><span class=\"o\">,</span> <span class=\"n\">m'</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span>\n    <span class=\"bp\">.</span> <span class=\"k\">have</span> <span class=\"o\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">hym'</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hinc</span>\n      <span class=\"k\">have</span> <span class=\"n\">herase</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⋃</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s.erase</span> <span class=\"n\">m'</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">⋃</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">conv_rhs</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">Finset.insert_erase</span> <span class=\"n\">hm'</span><span class=\"o\">,</span> <span class=\"n\">Finset.set_biUnion_insert</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">Finset.insert_erase</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">Finset.set_biUnion_insert</span><span class=\"o\">]</span>\n        <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">Set.union_eq_self_of_subset_left</span> <span class=\"o\">(</span><span class=\"n\">Set.subset_union_of_subset_left</span> <span class=\"n\">hym'</span> <span class=\"n\">_</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n      <span class=\"k\">have</span> <span class=\"n\">hcard</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">s.erase</span> <span class=\"n\">m'</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"n\">Finset.card_erase_of_mem</span> <span class=\"n\">hm'</span> <span class=\"bp\">▸</span> <span class=\"n\">Nat.sub_le_of_le_add</span> <span class=\"n\">hn</span>\n      <span class=\"k\">have</span> <span class=\"n\">hlt</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s.erase</span> <span class=\"n\">m'</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">hproper</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Finset.mem_of_mem_erase</span> <span class=\"n\">hx</span><span class=\"o\">)</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">herase</span><span class=\"o\">]</span>\n      <span class=\"n\">exact</span> <span class=\"n\">ih</span> <span class=\"n\">m</span> <span class=\"n\">hm</span> <span class=\"o\">((</span><span class=\"n\">s.erase</span> <span class=\"n\">m'</span><span class=\"o\">))</span> <span class=\"n\">hcard</span> <span class=\"n\">hlt</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">not_exists</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hinc</span>\n    <span class=\"n\">by_cases</span> <span class=\"n\">hempty</span> <span class=\"o\">:</span> <span class=\"n\">s.erase</span> <span class=\"n\">m'</span> <span class=\"bp\">=</span> <span class=\"bp\">∅</span>\n    <span class=\"bp\">.</span> <span class=\"n\">obtain</span> <span class=\"n\">rfl</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">m'</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.nonempty_iff_ne_empty</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.erase_eq_empty_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hempty</span>\n        <span class=\"n\">exact</span> <span class=\"n\">hempty.resolve_left</span> <span class=\"n\">h</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.set_biUnion_singleton</span><span class=\"o\">]</span>\n      <span class=\"n\">exact</span> <span class=\"n\">not_subset_of_ssubset</span> <span class=\"o\">(</span><span class=\"n\">hproper</span> <span class=\"n\">m'</span> <span class=\"n\">hm'</span><span class=\"o\">)</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">Finset.nonempty_iff_ne_empty</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hempty</span>\n    <span class=\"k\">have</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hempty</span>\n    <span class=\"k\">have</span> <span class=\"n\">hbot</span> <span class=\"o\">:</span> <span class=\"bp\">⊥</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m'</span> <span class=\"o\">:=</span> <span class=\"n\">lt_of_le_of_lt</span> <span class=\"n\">bot_le</span> <span class=\"o\">(</span><span class=\"n\">inf_lt_right.mpr</span> <span class=\"o\">(</span><span class=\"n\">not_and.mp</span> <span class=\"o\">(</span><span class=\"n\">hinc</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">hx</span><span class=\"o\">))</span>\n    <span class=\"k\">have</span> <span class=\"n\">hcard</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Finset.image</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">y</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">y</span> <span class=\"bp\">⊓</span> <span class=\"n\">m'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s.erase</span> <span class=\"n\">m'</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n      <span class=\"n\">Finset.card_image_le.trans</span> <span class=\"o\">(</span><span class=\"n\">Finset.card_erase_of_mem</span> <span class=\"n\">hm'</span> <span class=\"bp\">▸</span> <span class=\"n\">Nat.sub_le_of_le_add</span> <span class=\"n\">hn</span><span class=\"o\">)</span>\n    <span class=\"n\">specialize</span> <span class=\"n\">ih</span> <span class=\"n\">m'</span> <span class=\"n\">hbot</span> <span class=\"o\">((</span><span class=\"n\">s.erase</span> <span class=\"n\">m'</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">image</span> <span class=\"k\">fun</span> <span class=\"n\">y</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">y</span> <span class=\"bp\">⊓</span> <span class=\"n\">m'</span><span class=\"o\">)</span> <span class=\"n\">hcard</span> <span class=\"bp\">&lt;|</span> <span class=\"kd\">by</span>\n      <span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">hx</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.mem_image</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span>\n      <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hx</span>\n      <span class=\"n\">exact</span> <span class=\"n\">inf_lt_right.mpr</span> <span class=\"o\">(</span><span class=\"n\">not_and.mp</span> <span class=\"o\">(</span><span class=\"n\">hinc</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">hy</span><span class=\"o\">)</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.set_biUnion_finset_image</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">ih</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Set.not_subset_iff_exists_mem_not_mem</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">ih</span>\n    <span class=\"k\">have</span> <span class=\"o\">⟨</span><span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">hum'</span><span class=\"o\">,</span> <span class=\"n\">hu</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">ih</span>\n    <span class=\"k\">have</span> <span class=\"o\">⟨</span><span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">hvm</span><span class=\"o\">,</span> <span class=\"n\">hvm'</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">SetLike.lt_iff_le_and_exists.mp</span> <span class=\"o\">(</span><span class=\"n\">hproper</span> <span class=\"n\">m'</span> <span class=\"n\">hm'</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"mi\">2</span>\n    <span class=\"n\">replace</span> <span class=\"n\">hu</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s.erase</span> <span class=\"n\">m'</span><span class=\"o\">,</span> <span class=\"n\">u</span> <span class=\"bp\">∉</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">hu</span>\n      <span class=\"k\">have</span> <span class=\"o\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">huy</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hu</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Set.subset_iUnion₂_of_subset</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"n\">subset_rfl</span> <span class=\"o\">(</span><span class=\"n\">Submodule.mem_inf.mpr</span> <span class=\"o\">⟨</span><span class=\"n\">huy</span><span class=\"o\">,</span> <span class=\"n\">hum'</span><span class=\"o\">⟩)</span>\n    <span class=\"k\">have</span> <span class=\"o\">⟨</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">hcard</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"bp\">𝕜</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">r.card</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">apply</span> <span class=\"n\">Cardinal.exists_finset_le_card</span>\n      <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">Cardinal.nat_lt_aleph0</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">le.trans</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Cardinal.infinite_iff.mp</span> <span class=\"n\">inferInstance</span>\n    <span class=\"k\">have</span> <span class=\"o\">⟨</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">t</span> <span class=\"bp\">∈</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">•</span> <span class=\"n\">u</span> <span class=\"bp\">∉</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">not_forall_not</span><span class=\"o\">]</span>\n      <span class=\"n\">intro</span> <span class=\"n\">h</span>\n      <span class=\"n\">replace</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">s.erase</span> <span class=\"n\">m'</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"bp\">+</span> <span class=\"n\">t.val</span> <span class=\"bp\">•</span> <span class=\"n\">u</span> <span class=\"bp\">∈</span> <span class=\"n\">x.val</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">intro</span> <span class=\"n\">t</span>\n        <span class=\"k\">have</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx'</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">not_forall.mp</span> <span class=\"o\">(</span><span class=\"n\">not_and.mp</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">t.val</span><span class=\"o\">)</span> <span class=\"n\">t.property</span><span class=\"o\">)</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">not_and</span><span class=\"o\">,</span> <span class=\"n\">not_not</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx'</span>\n        <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">m'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">rintro</span> <span class=\"n\">rfl</span>\n          <span class=\"n\">apply</span> <span class=\"n\">hvm'</span>\n          <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">Submodule.add_mem_iff_left</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Submodule.smul_mem</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">hum'</span><span class=\"o\">)]</span>\n          <span class=\"n\">exact</span> <span class=\"n\">hx'.2</span>\n        <span class=\"n\">exact</span> <span class=\"o\">⟨⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">Finset.mem_erase_of_ne_of_mem</span> <span class=\"n\">this</span> <span class=\"n\">hx'.1</span><span class=\"o\">⟩,</span> <span class=\"n\">hx'.2</span><span class=\"o\">⟩</span>\n      <span class=\"n\">choose</span> <span class=\"n\">g</span> <span class=\"n\">hfg</span> <span class=\"n\">using</span> <span class=\"n\">h</span>\n      <span class=\"n\">refine</span> <span class=\"n\">not_lt_of_le</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">Nat.add_one_le_iff.mp</span> <span class=\"n\">hcard</span><span class=\"o\">)</span>\n      <span class=\"n\">trans</span> <span class=\"o\">(</span><span class=\"n\">s.erase</span> <span class=\"n\">m'</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">card</span>\n      <span class=\"bp\">.</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">Nat.card_eq_finsetCard</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">Nat.card_eq_finsetCard</span><span class=\"o\">]</span>\n        <span class=\"n\">apply</span> <span class=\"n\">Finite.card_le_of_injective</span> <span class=\"n\">g</span>\n        <span class=\"n\">intro</span> <span class=\"n\">t₁</span> <span class=\"n\">t₂</span> <span class=\"n\">hg</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Subtype.ext_iff</span><span class=\"o\">]</span>\n        <span class=\"n\">by_contra</span><span class=\"bp\">!</span> <span class=\"n\">ht</span>\n        <span class=\"n\">apply</span> <span class=\"n\">hu</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">t₁</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">t₁</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">property</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">one_smul</span> <span class=\"bp\">𝕜</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">inv_mul_cancel</span> <span class=\"o\">(</span><span class=\"n\">sub_ne_zero_of_ne</span> <span class=\"n\">ht.symm</span><span class=\"o\">),</span> <span class=\"bp\">←</span> <span class=\"n\">smul_smul</span><span class=\"o\">]</span>\n        <span class=\"n\">apply</span> <span class=\"n\">Submodule.smul_mem</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">Submodule.add_mem_iff_right</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">hfg</span> <span class=\"n\">t₁</span><span class=\"o\">),</span> <span class=\"n\">sub_smul</span><span class=\"o\">,</span> <span class=\"n\">add_add_sub_cancel</span><span class=\"o\">]</span>\n        <span class=\"n\">exact</span> <span class=\"n\">hg</span> <span class=\"bp\">▸</span> <span class=\"n\">hfg</span> <span class=\"n\">t₂</span>\n      <span class=\"bp\">.</span> <span class=\"n\">exact</span> <span class=\"n\">Finset.card_erase_of_mem</span> <span class=\"n\">hm'</span> <span class=\"bp\">▸</span> <span class=\"n\">Nat.sub_le_of_le_add</span> <span class=\"n\">hn</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Set.not_subset</span><span class=\"o\">]</span>\n    <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">v</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">•</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n    <span class=\"bp\">.</span> <span class=\"n\">exact</span> <span class=\"n\">Submodule.add_mem</span> <span class=\"n\">_</span> <span class=\"n\">hvm</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">Submodule.smul_mem</span> <span class=\"n\">_</span> <span class=\"n\">t</span> <span class=\"o\">((</span><span class=\"n\">hproper</span> <span class=\"n\">m'</span> <span class=\"n\">hm'</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">le</span> <span class=\"n\">hum'</span><span class=\"o\">)</span>\n    <span class=\"bp\">.</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Set.mem_iUnion₂</span><span class=\"o\">,</span> <span class=\"n\">not_exists</span><span class=\"o\">]</span>\n      <span class=\"n\">intro</span> <span class=\"n\">x</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">not_exists</span><span class=\"o\">]</span>\n      <span class=\"n\">intro</span> <span class=\"n\">hx</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h</span> <span class=\"n\">x</span> <span class=\"n\">hx</span>\n</code></pre></div>\n</div></div>",
        "id": 438921522,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715828714
    },
    {
        "content": "<p>Another option, fix the big circle but move the points using a uniformly chosen element of SO3, by a union bound you just have to show that one point is moved a.s. to the complement of the circle, which in turn is the statement that the circle has measure 0. (Which also works for countably many points.)</p>",
        "id": 438974339,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1715850801
    },
    {
        "content": "<p>Yet another option: prove that a union of nontrivial polynomial hypersurfaces misses one point. (Works over any infinite field, with strictly less hypersurfaces than the cardinality of the field.)</p>",
        "id": 438980404,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1715852872
    },
    {
        "content": "<p>One can (and should) replace <code>[RCLike 𝕜]</code> with <code>[Field 𝕜] [Infinite 𝕜]</code> in my proof but, as written, it does rely on <code>n : ℕ</code>.</p>",
        "id": 438984038,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715854162
    },
    {
        "content": "<p>Neither more nor less generally:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Measure.Lebesgue.EqHaar</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NormedSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">BorelSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">FiniteDimensional</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"n\">E</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">μ.IsAddHaarMeasure</span><span class=\"o\">]</span> <span class=\"k\">in</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">Submodule.biUnion_countable_ne_top</span>\n    <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Submodule</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s.Countable</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">⊤</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n      <span class=\"bp\">⋃</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"n\">Set.univ</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">huniv</span>\n  <span class=\"n\">apply</span> <span class=\"n\">IsOpen.measure_ne_zero</span> <span class=\"n\">μ</span> <span class=\"n\">isOpen_univ</span> <span class=\"n\">Set.univ_nonempty</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">huniv</span><span class=\"o\">,</span> <span class=\"n\">measure_biUnion_null_iff</span> <span class=\"n\">hs</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Measure.addHaar_submodule</span> <span class=\"n\">μ</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">ne</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Submodule</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)))</span>\n    <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s.Countable</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">⊤</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n      <span class=\"bp\">⋃</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"n\">Set.univ</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Submodule.biUnion_countable_ne_top</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"n\">volume</span> <span class=\"n\">s</span> <span class=\"n\">hs</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 438998314,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715859724
    },
    {
        "content": "<p>The result is also needed to show <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/GaussianRat/near/412623612\">an algebraic extension of fields is determined by the set of all minimal polynomials</a>. You might try to formalize <a href=\"https://mathoverflow.net/a/17398/3332\">this more general result</a> if you feel like doing it.</p>",
        "id": 439361300,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1716044448
    },
    {
        "content": "<p>Thanks for the suggestion. There is a WIP PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/13040\">#13040</a>. The first sub-lemma is proved.</p>",
        "id": 439460080,
        "sender_full_name": "Richard Copley",
        "timestamp": 1716146079
    },
    {
        "content": "<p>Funnily I had proved the end of the paper. <a href=\"https://github.com/leanprover-community/mathlib4/pull/13047\">#13047</a><br>\nIt seems that if we merge our two PR,  only the middle part has to be proved (that the cosets of subgroups of finite index still cover the group).</p>",
        "id": 439486079,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716172508
    },
    {
        "content": "<p>I have added a commit with the middle part,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Let the group `G` be the union of finitely many left cosets `g i • H i`.</span>\n<span class=\"sd\">Then the cosets of subgroups of infinite index may be omitted from the covering. -/</span>\n<span class=\"kd\">theorem</span><span class=\"w\"> </span><span class=\"n\">Fintype.covers_finiteIndex_of_covers</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">G</span><span class=\"w\"> </span><span class=\"n\">ι</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Fintype</span><span class=\"w\"> </span><span class=\"n\">ι</span><span class=\"o\">]</span>\n<span class=\"w\">    </span><span class=\"o\">[</span><span class=\"n\">DecidablePred</span><span class=\"w\"> </span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">H</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Subgroup</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">H.FiniteIndex</span><span class=\"o\">]</span>\n<span class=\"w\">    </span><span class=\"o\">(</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ι</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">H</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ι</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">Subgroup</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">hcovers</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">⋃</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"bp\">•</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">H</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Set</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Set.univ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"bp\">⋃</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"bp\">∈</span><span class=\"w\"> </span><span class=\"n\">Finset.univ.filter</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">H</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">FiniteIndex</span><span class=\"o\">),</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"bp\">•</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">H</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Set</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Set.univ</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"kd\">by</span>\n<span class=\"w\">  </span><span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>There is a lot of scope for simplification and golfing, and I wasn't working with your PR in mind, <span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span>, so I expect changes will be needed to make the two compatible.</p>",
        "id": 439891319,
        "sender_full_name": "Richard Copley",
        "timestamp": 1716320856
    },
    {
        "content": "<p>Great! I borrowed your code, added your name to my branch and made the necessary modifications to conclude AFAP.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">BHNeumann</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">s.sum</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">index</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"k\">#print</span> <span class=\"kd\">axioms</span> <span class=\"n\">BHNeumann</span>\n<span class=\"bp\">'</span><span class=\"n\">BHNeumann'</span> <span class=\"n\">depends</span> <span class=\"n\">on</span> <span class=\"kd\">axioms</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"n\">propext</span><span class=\"o\">,</span> <span class=\"n\">Quot.sound</span><span class=\"o\">,</span> <span class=\"n\">Classical.choice</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>It remains to deduce the conclusion about the number of cosets (it is immediate).</p>",
        "id": 439938326,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716341167
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 440079719,
        "sender_full_name": "Richard Copley",
        "timestamp": 1716380605
    },
    {
        "content": "<p>False alarm. I mixed up my <code>s</code> (the set of subgroups) with your <code>s</code> (the index set for the family of cosets).</p>",
        "id": 440080530,
        "sender_full_name": "Richard Copley",
        "timestamp": 1716380935
    },
    {
        "content": "<p>No worry.</p>",
        "id": 440084441,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716382231
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/generic.20great.20circle.20on.20the.20sphere.20misses.20any.20finite.20set/near/439938326\">said</a>:</p>\n<blockquote>\n<p>It remains to deduce the conclusion about the number of cosets (it is immediate).</p>\n</blockquote>\n<p>Done. (Easy, but can you make it <em>look</em> easy?)</p>",
        "id": 440094289,
        "sender_full_name": "Richard Copley",
        "timestamp": 1716385148
    },
    {
        "content": "<p>(I'll try, but this pigeonhole stuff is never so easy fo formalize, and one needs to cast back from Rat…)</p>",
        "id": 440100830,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716386895
    }
]