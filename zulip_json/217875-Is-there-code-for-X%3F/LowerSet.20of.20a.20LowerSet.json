[
    {
        "content": "<p>Do we have the result that a <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LowerSet#doc\">docs#LowerSet</a> of <code>LowerSet</code> is a <code>LowerSet</code> of the ambient type?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Set.Functor</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Order.UpperLower.Basic</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">LowerSet</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Set</span>\n\n<span class=\"sd\">/--</span>\n<span class=\"sd\">The relation of being a lower-set is transitive.</span>\n<span class=\"sd\">-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">IsLowerSet_of_IsLowerSet</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">C</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hC</span> <span class=\"o\">:</span> <span class=\"n\">IsLowerSet</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hS</span> <span class=\"o\">:</span> <span class=\"n\">IsLowerSet</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IsLowerSet</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rintro</span> <span class=\"n\">_</span> <span class=\"n\">b</span> <span class=\"n\">b_le_a</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span><span class=\"n\">a_in_S</span><span class=\"o\">,</span><span class=\"n\">rfl</span><span class=\"o\">⟩</span>\n  <span class=\"n\">exact</span> <span class=\"n\">mem_image_val_of_mem</span> <span class=\"o\">(</span><span class=\"n\">hC</span> <span class=\"n\">b_le_a</span> <span class=\"n\">a.property</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hS</span> <span class=\"n\">b_le_a</span> <span class=\"n\">a_in_S</span><span class=\"o\">)</span>\n\n<span class=\"sd\">/--</span>\n<span class=\"sd\">Lifting a lower-set from inside another.</span>\n<span class=\"sd\">-/</span>\n<span class=\"kd\">def</span> <span class=\"n\">lift</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">LowerSet</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">LowerSet</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">LowerSet</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"n\">S.carrier</span><span class=\"o\">,</span> <span class=\"n\">IsLowerSet_of_IsLowerSet</span> <span class=\"n\">C.lower'</span> <span class=\"n\">S.lower'</span><span class=\"o\">⟩</span>\n</code></pre></div>\n<p>Do we want it?</p>\n<p>Context: I was trying to use this infrastructure for a mini-project, and I needed these lemmas. It finally happened that I had to work with down-sets <em>qua</em> sets very much, so I ended up defining “<code>C</code> is a down-set of <code>D</code>”, for  <code>C D : Set α</code>.  But perhaps they come up again.</p>\n<p>A second lemma was about “inducing” a <code>LowerSet</code> inside another (have it? want it?):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/--</span>\n<span class=\"sd\">The trace of a lower-set on any subset is a lower-set.</span>\n<span class=\"sd\">-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">IsLowerSet_trace</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hS</span> <span class=\"o\">:</span> <span class=\"n\">IsLowerSet</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsLowerSet</span> <span class=\"o\">{</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n    <span class=\"c1\">-- Alternate spelling: `IsLowerSet ((↑) ⁻¹' S : Set C)`</span>\n  <span class=\"k\">fun</span> <span class=\"o\">⦃</span><span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">⦄</span> <span class=\"n\">b_le_a</span> <span class=\"n\">a_in_S</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">hS</span> <span class=\"n\">b_le_a</span> <span class=\"n\">a_in_S</span>\n\n<span class=\"sd\">/--</span>\n<span class=\"sd\">The trace of a lower-set on a subset.</span>\n<span class=\"sd\">-/</span>\n<span class=\"kd\">def</span> <span class=\"n\">trace</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">LowerSet</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">LowerSet</span> <span class=\"n\">C</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨{</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">},</span> <span class=\"n\">IsLowerSet_trace</span> <span class=\"n\">S.lower'</span><span class=\"o\">⟩</span>\n\n<span class=\"sd\">/--</span>\n<span class=\"sd\">The trace operation preserves the carrier if already included.</span>\n<span class=\"sd\">-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">trace_of_subset</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">LowerSet</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">sub</span> <span class=\"o\">:</span> <span class=\"n\">S.carrier</span> <span class=\"bp\">⊆</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">)</span> <span class=\"bp\">''</span> <span class=\"o\">((</span><span class=\"n\">trace</span> <span class=\"n\">S</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">carrier</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">S.carrier</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">calc</span>\n    <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">)</span> <span class=\"bp\">''</span> <span class=\"o\">((</span><span class=\"n\">trace</span> <span class=\"n\">S</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">carrier</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"bp\">↑</span><span class=\"o\">)</span> <span class=\"bp\">''</span> <span class=\"o\">((</span><span class=\"bp\">↑</span><span class=\"o\">)</span> <span class=\"bp\">⁻¹'</span> <span class=\"n\">S.carrier</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">S.carrier</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Subtype.image_preimage_coe</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">simp_all</span>\n</code></pre></div>\n<p>(<strong>Edit</strong>: corrected code for latest Mathlib)</p>",
        "id": 416461403,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1705533309
    },
    {
        "content": "<p>We don't have them and I don't know whether we want them but we could. Thought needs to be given in whether you want to use <code>IsLowerSet</code> or <code>LowerSet</code> in both places where they appear.</p>",
        "id": 416517738,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705565672
    },
    {
        "content": "<p>Is this not a general property of order embeddings whose <del>image</del> range is a LowerSet?</p>",
        "id": 416535945,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1705572021
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/LowerSet.20of.20a.20LowerSet/near/416517738\">said</a>:</p>\n<blockquote>\n<p>Thought needs to be given in whether you want to use <code>IsLowerSet</code> or <code>LowerSet</code> in both places where they appear.</p>\n</blockquote>\n<p>I'm not sure what you mean; in my application? Any hints welcome!</p>",
        "id": 416565937,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1705582722
    },
    {
        "content": "<p>Or, are you saying that I should restrict myself to use <em>either</em> <code>IsLowerSet</code> or <code>LowerSet</code>? I put both because I was trying to API it a little bit.</p>",
        "id": 416566255,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1705582814
    }
]