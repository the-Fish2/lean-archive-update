[
    {
        "content": "<p>Sometimes I want to quote a definition of an inductive type that has already been defined, but if I separate it with namespace, I cannot guarantee that it is equal to the source of the quote. Is there a way to cite the definitions as in <code>recall</code>, making sure they match?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">hoge</span> <span class=\"o\">:=</span> <span class=\"s2\">\"hello\"</span>\n\n<span class=\"n\">recall</span> <span class=\"n\">hoge</span> <span class=\"o\">:=</span> <span class=\"s2\">\"hello\"</span>\n\n<span class=\"sd\">/-- error: constant 'Nat' has no defined value -/</span>\n<span class=\"bp\">#</span><span class=\"n\">guard_msgs</span> <span class=\"k\">in</span>\n<span class=\"n\">recall</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 433144690,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1713110145
    },
    {
        "content": "<p>Not really. It's not impossible that one could implement a <code>recall inductive Nat </code> by modifying the name, compiling the inductive, and then checking that everything generated matches, but it seems a lot of work for a niche use case.</p>",
        "id": 433189517,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713149441
    }
]