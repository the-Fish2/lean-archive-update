[
    {
        "content": "<p>We have <code>ContinuousOn f U</code> and <code>DifferentiableOn k f U</code>; is there something like <code>ContinuouslyDifferentiable</code>? Or is the way people handle this to just say that there is both <code>f</code> and <code>f'</code> and <code>f'</code> is continuous and <code>HasDerivAt f (f' x) x</code>? Thanks!</p>",
        "id": 409929067,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1703526138
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContDiff#doc\">docs#ContDiff</a> (and all the usual variants). But it may be annoying to specialize to get nice statements specialized for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></p>",
        "id": 409929179,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1703526290
    },
    {
        "content": "<p>Got it, thanks! Ok so for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>, it might be easier just to do it \"bare hands\"..?</p>",
        "id": 409929793,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1703527198
    },
    {
        "content": "<p>I haven’t tried, but it might indeed be easier. OTOH it will never get better if everyone avoids it, and certainly in mathlib we would very much prefer having better API for the general case rather than doing it manually…</p>",
        "id": 409930150,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1703527403
    },
    {
        "content": "<p>So it would be \"nice\" if someone were to develop API for ContDiff in the case <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>...?</p>",
        "id": 409930586,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1703527825
    },
    {
        "content": "<p>What kind of API specific to the case <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> are you looking for?</p>",
        "id": 409946542,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703546029
    },
    {
        "content": "<p>What I meant is: in an ideal world where you have an infinite amount of time, you should try to use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContDiff#doc\">docs#ContDiff</a> and fix the API so that it's not annoying to use in your case</p>",
        "id": 409946814,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1703546332
    }
]