[
    {
        "content": "<p>I have to prove the following lemma:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">∀</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℝ</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">&lt;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Does this exist in Mathlib?</p>",
        "id": 443700755,
        "sender_full_name": "Brandon Harad",
        "timestamp": 1718004618
    },
    {
        "content": "<p>Why can't <code>x</code> be -1 ?</p>",
        "id": 443700945,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1718004704
    },
    {
        "content": "<p>Ah</p>",
        "id": 443701034,
        "sender_full_name": "Brandon Harad",
        "timestamp": 1718004724
    },
    {
        "content": "<p>I always did struggle with negative numbers</p>",
        "id": 443701062,
        "sender_full_name": "Brandon Harad",
        "timestamp": 1718004732
    },
    {
        "content": "<p>Also, it is better to write fully working code, including imports. See <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 443701072,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1718004734
    },
    {
        "content": "<p>The amended goal:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n<span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">∀</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">≥</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">∀</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℝ</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">&lt;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 443701276,
        "sender_full_name": "Brandon Harad",
        "timestamp": 1718004823
    },
    {
        "content": "<p>It looks like you want <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=eq_of_le_of_forall_le_of_dense#doc\">docs#eq_of_le_of_forall_le_of_dense</a></p>",
        "id": 443701965,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1718005071
    },
    {
        "content": "<p>I found it by looking for \"le of forall lt\" in the search field of the docs, clicking on a lemma with a promising name, which was not quite what I was looking for, then scolling a bit in the file</p>",
        "id": 443702246,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1718005164
    },
    {
        "content": "<p>Ah, thank you</p>",
        "id": 443702326,
        "sender_full_name": "Brandon Harad",
        "timestamp": 1718005193
    },
    {
        "content": "<p>The incorrect statement was tripping me up</p>",
        "id": 443702398,
        "sender_full_name": "Brandon Harad",
        "timestamp": 1718005209
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699800\">Brandon Harad</span> has marked this topic as resolved.</p>",
        "id": 443702406,
        "sender_full_name": "Notification Bot",
        "timestamp": 1718005213
    }
]