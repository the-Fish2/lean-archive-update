[
    {
        "content": "<p>Any suggestions for how to prove the below?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Interval</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a_lt_b</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∀ᵐ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">∂</span><span class=\"n\">MeasureTheory.Measure.restrict</span> <span class=\"n\">MeasureTheory.volume</span> <span class=\"o\">[[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">]],</span>\n      <span class=\"bp\">‖</span><span class=\"o\">(</span><span class=\"bp\">⌊</span><span class=\"n\">x</span><span class=\"bp\">⌋</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>That is, for almost all (in fact, all) <code>x</code> with respect to the <em>restriction</em> of Lebesgue measure to <code>[[a,b]]</code>, the floor of x (coerced into <code>ℂ</code> for some annoying reason) has norm at most <code>b</code>. How can I <code>filter_upwards</code> in such a way to retain the fact that <code>x</code> is in <code>[[a, b]]</code>? Thanks!</p>",
        "id": 431168322,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1712175251
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.ae_restrict_iff#doc\">docs#MeasureTheory.ae_restrict_iff</a> (or <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.ae_restrict_iff%27#doc\">docs#MeasureTheory.ae_restrict_iff'</a>) could be useful here to answer the question \"how can I <code>filter_upwards</code> in such a way to retain the fact that <code>x</code> is in <code>[[a, b]]</code>?\"</p>",
        "id": 431168739,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1712175428
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Interval</span> <span class=\"n\">MeasureTheory</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a_lt_b</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∀ᵐ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">∂</span><span class=\"n\">volume.restrict</span> <span class=\"o\">[[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">]],</span> <span class=\"bp\">‖</span><span class=\"o\">(</span><span class=\"bp\">⌊</span><span class=\"n\">x</span><span class=\"bp\">⌋</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ae_restrict_iff'</span><span class=\"o\">]</span>\n  <span class=\"n\">swap</span><span class=\"bp\">;</span> <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">measurableSet_Icc</span>\n  <span class=\"n\">refine</span> <span class=\"n\">ae_of_all</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"bp\">↦</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">)</span>\n  <span class=\"c1\">-- need 0 ≤ a ?</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 431169540,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1712175730
    },
    {
        "content": "<p>Great thanks!!</p>",
        "id": 431170022,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1712175913
    }
]