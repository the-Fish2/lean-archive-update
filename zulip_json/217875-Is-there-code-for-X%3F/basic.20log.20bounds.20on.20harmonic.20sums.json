[
    {
        "content": "<p>I have the following bounds lying around:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.SumIntegralComparisons</span>\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">log_add_one_le_sum_inv</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Real.log</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"bp\">∑</span> <span class=\"n\">d</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">d</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">sum_inv_le_log</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∑</span> <span class=\"n\">d</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">Real.log</span> <span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"c1\">-- and corollaries</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">log_le_sum_one_div</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Real.log</span> <span class=\"n\">y</span> <span class=\"bp\">≤</span> <span class=\"bp\">∑</span> <span class=\"n\">d</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Icc</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"bp\">⌊</span><span class=\"n\">y</span><span class=\"bp\">⌋₊</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">d</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">sum_inv_le_log_real</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∑</span> <span class=\"n\">d</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Icc</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"bp\">⌊</span><span class=\"n\">y</span><span class=\"bp\">⌋₊</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">d</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">Real.log</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Am I right to say we don't have any results of this form in mathlib? And if so where should these go?</p>",
        "id": 396647405,
        "sender_full_name": "Arend Mellendijk",
        "timestamp": 1697286781
    },
    {
        "content": "<p>I was also surprised I couldn't find anything like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">inv_sub_antitoneOn_gt</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedField</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">AntitoneOn</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">R</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">c</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Set.Ioi</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 396647440,
        "sender_full_name": "Arend Mellendijk",
        "timestamp": 1697286823
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116448\">@Koundinya Vajjha</span> recently added Mathlib/NumberTheory/Padics/Harmonic.lean I think the basic definition there should be factored out into a new file with some basic properties, including yours</p>",
        "id": 396677013,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1697316728
    },
    {
        "content": "<p>Do you use integrals or induction/estimates on <code>Real.log</code>?</p>",
        "id": 396717953,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1697347523
    },
    {
        "content": "<p>Integrals. (note the import)</p>",
        "id": 396733608,
        "sender_full_name": "Arend Mellendijk",
        "timestamp": 1697360404
    },
    {
        "content": "<p>Got a bit distracted, but this is covered by <a href=\"https://github.com/leanprover-community/mathlib4/pull/9984\">#9984</a></p>",
        "id": 418335678,
        "sender_full_name": "Arend Mellendijk",
        "timestamp": 1706296023
    },
    {
        "content": "<p>I have a personal project <a href=\"https://github.com/teorth/asymptotic\">https://github.com/teorth/asymptotic</a> which is aimed at proving bounds like this. A sample result is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">sum_approx_eq_integral_antitone_nat</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h0</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">:</span> <span class=\"n\">AntitoneOn</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Set.Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hf'</span><span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">n</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Ico</span> <span class=\"bp\">⌈</span> <span class=\"n\">a</span> <span class=\"bp\">⌉₊</span> <span class=\"bp\">⌈</span> <span class=\"n\">b</span> <span class=\"bp\">⌉₊</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">=</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"bp\">∫</span> <span class=\"n\">t</span> <span class=\"k\">in</span> <span class=\"n\">Set.Ico</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">t</span> <span class=\"bp\">∂</span> <span class=\"n\">volume</span> <span class=\"bp\">+</span> <span class=\"n\">O</span><span class=\"o\">(</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"o\">)</span>\n</code></pre></div>\n<p>where <code>X =[C] Y + O( Z )</code> is my notation for <code>|X-Y| ≤ C * Z</code>; there will also be a similar result for Set.Icc that I plan to put in shortly.  This would give a slight variant of your bounds, namely <code>| ∑ d in Finset.Icc 1 n, (d:ℝ)⁻¹ - log n | ≤ 1</code>.  I plan to fold this code into a forthcoming project in analytic number theory, and perhaps at that point it might eventually be ported into Mathlib.</p>",
        "id": 418364089,
        "sender_full_name": "Terence Tao",
        "timestamp": 1706310719
    }
]