[
    {
        "content": "<p>given some instance of <code>SMul G M</code>, <code>G</code> acts <code>k</code>-transitively on <code>M</code> (and the action of <code>G</code> on <code>M</code> is <code>k</code>-transitive) when every function defined on <code>k</code> elements of <code>M</code> is the restriction of the action of <code>(g:G)</code> on <code>M</code></p>\n<p>given some instance of <code>SMul G M</code>, <code>G</code> acts primitively on <code>M</code> (and the action of <code>G</code> on <code>M</code> is primitive) when given some partition of <code>M</code> (dictated by an equivalence relation <code>R</code>) such that the action of every <code>(g:G)</code> keeps the partition intact, that partition is either top or bottom (i.e. either you have a single subset containing all elements of <code>M</code>, or you have a singleton for every element)</p>\n<p>is there code for this? i couldn't find it.</p>",
        "id": 419932544,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1707169082
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> Did you define this as part of your work on permutation groups ?</p>",
        "id": 419935413,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1707170250
    },
    {
        "content": "<p>Yes ! but it's not in mathlib yet. (To be in mathlib, I need to have <a href=\"https://github.com/leanprover-community/mathlib4/tree/SMulSemiHom\">branch#SMulSemiHom</a> mergedâ€¦) <br>\nHowever, it can be accessed at <a href=\"https://github.com/AntoineChambert-Loir/Jordan4/tree/main/Jordan\">https://github.com/AntoineChambert-Loir/Jordan4/tree/main/Jordan</a> </p>\n<p>Multiple transitivity is at <a href=\"https://github.com/AntoineChambert-Loir/Jordan4/blob/735924420678d50f4618b8c11057fe1c3b9d50be/Jordan/MultipleTransitivity.lean#L115\">https://github.com/AntoineChambert-Loir/Jordan4/blob/735924420678d50f4618b8c11057fe1c3b9d50be/Jordan/MultipleTransitivity.lean#L115</a></p>\n<p>Primitivity is at <a href=\"https://github.com/AntoineChambert-Loir/Jordan4/blob/735924420678d50f4618b8c11057fe1c3b9d50be/Jordan/Primitive.lean#L112\">https://github.com/AntoineChambert-Loir/Jordan4/blob/735924420678d50f4618b8c11057fe1c3b9d50be/Jordan/Primitive.lean#L112</a></p>",
        "id": 419936257,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707170590
    },
    {
        "content": "<p>in case someone else is searching for the same thing: 1-transitivity is already defined, see <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.IsPretransitive\">here in the docs</a></p>",
        "id": 419938668,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1707171721
    }
]