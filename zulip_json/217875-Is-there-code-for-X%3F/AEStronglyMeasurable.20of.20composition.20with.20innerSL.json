[
    {
        "content": "<p>I can't seem to find any good API to handle something like the below, an <code>AEStronglyMeasurable</code> function <code>f</code> turned into a continuous linear map by <code>toSpanSingleton</code>, composed with <code>innerSL</code>. It should just be a chain of continuities on top of <code>hf_AE</code>, right?... Any help here would be much appreciated, thanks!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Algebra.Module.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.InnerProductSpace.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Function.StronglyMeasurable.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Function.L1Space</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">inst</span> <span class=\"o\">:</span> <span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">InnerProductSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasureSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">BorelSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">FiniteDimensional</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">inst_6</span> <span class=\"o\">:</span> <span class=\"n\">NormedSpace</span> <span class=\"n\">ℂ</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">inst_7</span> <span class=\"o\">:</span> <span class=\"n\">CompleteSpace</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">F</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hf_AE</span> <span class=\"o\">:</span> <span class=\"n\">AEStronglyMeasurable</span> <span class=\"n\">f</span> <span class=\"n\">volume</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">AEStronglyMeasurable</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">w</span> <span class=\"bp\">↦</span> <span class=\"n\">ContinuousLinearMap.comp</span> <span class=\"o\">(</span><span class=\"n\">ContinuousLinearMap.toSpanSingleton</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">w</span><span class=\"o\">))</span>\n    <span class=\"o\">((</span><span class=\"n\">innerSL</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"n\">w</span><span class=\"o\">))</span> <span class=\"n\">volume</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 411749051,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1704724189
    },
    {
        "content": "<p>Paging <span class=\"user-mention\" data-user-id=\"110050\">@Sébastien Gouëzel</span> <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> in case you can help here? (FYI This is the last remaining step in a project with <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> to compute the derivative of the Fourier transform. The latter itself is a step towards showing that the Fourier transform of a Schwartz function is also Schwartz...)</p>",
        "id": 412223328,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1704922597
    },
    {
        "content": "<p>What's the codomain of the new function?</p>",
        "id": 412227414,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704924415
    },
    {
        "content": "<p>I see. Working on it.</p>",
        "id": 412228667,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704924977
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">ContinuousLinearMap.compL</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span> <span class=\"n\">ℝ</span> <span class=\"n\">F</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">aestronglyMeasurable_comp₂</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n  <span class=\"bp\">·</span> <span class=\"n\">refine</span> <span class=\"n\">Continuous.comp_aestronglyMeasurable</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"n\">hf_AE</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">innerSL</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">continuous.aestronglyMeasurable</span>\n</code></pre></div>\n<p>leaves a <code>sorry</code> saying that <code>toSpanSingleton</code> is continuous. Please add a <code>LinearIsometry</code> version of this map using <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContinuousLinearMap.norm_toSpanSingleton#doc\">docs#ContinuousLinearMap.norm_toSpanSingleton</a></p>",
        "id": 412230340,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704925765
    },
    {
        "content": "<p>Here is a sorry-free version:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">ContinuousLinearMap.compL</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span> <span class=\"n\">ℝ</span> <span class=\"n\">F</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">aestronglyMeasurable_comp₂</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n  <span class=\"bp\">·</span> <span class=\"n\">refine</span> <span class=\"n\">Continuous.comp_aestronglyMeasurable</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"n\">hf_AE</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">ContinuousLinearMap.smulRightL</span> <span class=\"n\">ℝ</span> <span class=\"n\">ℝ</span> <span class=\"n\">F</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">continuous</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">innerSL</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">continuous.aestronglyMeasurable</span>\n</code></pre></div>",
        "id": 412230862,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704925970
    },
    {
        "content": "<p>Amazing thank you!!!</p>",
        "id": 412234243,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1704927702
    }
]