[
    {
        "content": "<p>Do we have any definitions and API for the discrete Fourier transform for a function <code>ZMod N → ℂ</code>?</p>",
        "id": 425708347,
        "sender_full_name": "David Loeffler",
        "timestamp": 1710008293
    },
    {
        "content": "<p>Yes, <a href=\"https://yaeldillies.github.io/LeanAPAP/docs/find/?pattern=dft#doc\">LeanAPAP#dft</a></p>",
        "id": 425709016,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710008846
    },
    {
        "content": "<p>My plan for integration in mathlib is:</p>\n<ul>\n<li>general prerequisites</li>\n<li><code>NNRat.cast</code> (<a href=\"https://github.com/leanprover-community/mathlib4/pull/11203\">#11203</a>)</li>\n<li>discuss how we expect discrete analysis to look like in mathlib, in particular whether we can satisfyingly avoid the <a href=\"https://yaeldillies.github.io/LeanAPAP/docs/find/?pattern=dft#doc\">LeanAPAP#dft</a> vs <a href=\"https://yaeldillies.github.io/LeanAPAP/docs/find/?pattern=cft#doc\">LeanAPAP#cft</a> duplication without making everything full of measurability side conditions</li>\n<li>Discrete Fourier transform, finally</li>\n</ul>",
        "id": 425709330,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710009099
    },
    {
        "content": "<p>This is for general fg abelian groups , right? I just want the case of cyclic gps with a canonical generator, so the dual of G is identified with G.</p>",
        "id": 425750472,
        "sender_full_name": "David Loeffler",
        "timestamp": 1710053812
    },
    {
        "content": "<p>So what you want is my DFT conposed with an identification between the dual of ZMod n and ZMod n. Correct? That identification already exists in LeanAPAP, but it's <code>private</code>.</p>",
        "id": 425753863,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710057578
    },
    {
        "content": "<p>What kind of timescale do you envisage for merging this? It sounds like it might not be soon, particularly since there are evidently nontrivial design decisions unsettled. </p>\n<p>Perhaps it is best if for now I code up the very simple special cases I need myself, and we can reconcile it with the general treatment from APAP later.</p>",
        "id": 425755937,
        "sender_full_name": "David Loeffler",
        "timestamp": 1710059711
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481963\">David Loeffler</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Discrete.20Fourier.20transform.20on.20.60ZMod.20N.60/near/425750472\">said</a>:</p>\n<blockquote>\n<p>This is for general fg abelian groups , right? I just want the case of cyclic gps with a canonical generator, so the dual of G is identified with G.</p>\n</blockquote>\n<p>Don't you also need to dix a primitve root of unity of the order the order of your group to get this identification?</p>",
        "id": 425756300,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1710060136
    },
    {
        "content": "<p>I’m fixing exp (2 * pi * I / n).</p>",
        "id": 425766645,
        "sender_full_name": "David Loeffler",
        "timestamp": 1710070877
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481963\">David Loeffler</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Discrete.20Fourier.20transform.20on.20.60ZMod.20N.60/near/425755937\">said</a>:</p>\n<blockquote>\n<p>What kind of timescale do you envisage for merging this?</p>\n</blockquote>\n<p>When I started moving things to mathlib five months ago, my project had 170 files. Now it has 55 and I am getting really close to PRing some nontrivial stuff. I envisage it will take another two weeks before <a href=\"https://github.com/leanprover-community/mathlib4/pull/11203\">#11203</a> is in, then discrete Fourier analysis will probably take 2-3 months to be absorbed by mathlib + maybe 1-2 months delay because I will be revising for exams.</p>",
        "id": 425768129,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710072315
    },
    {
        "content": "<p>Can we somehow avoid needing NNRat.cast before DFTs? I can imagine it's slightly cleaner, but we've managed without it so far elsewhere, so presumably in the short term we can get something in mathlib using <code>Rat</code>?</p>",
        "id": 425770844,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710075004
    },
    {
        "content": "<p>I mean, sure. If you want to skip <code>NNRat.cast</code>, the next step is <a href=\"https://yaeldillies.github.io/LeanAPAP/docs/find/?pattern=Finset.expect#doc\">LeanAPAP#Finset.expect</a></p>",
        "id": 425773580,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710077421
    },
    {
        "content": "<p>In particular, I want to know whether people think it should exist as a definition</p>",
        "id": 425773589,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710077441
    },
    {
        "content": "<p>I assume you meant to use a different linkifier?</p>",
        "id": 425775268,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710078896
    },
    {
        "content": "<p>Yes, fixed</p>",
        "id": 425775381,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710078981
    },
    {
        "content": "<p>Let me start a new thread because there is more to discuss than just the discrete Fourier transform</p>",
        "id": 425775802,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710079301
    }
]