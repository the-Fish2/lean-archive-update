[
    {
        "content": "<p>Do we have this inequality?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 424005162,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709208245
    },
    {
        "content": "<p>It's definitely false for n = 0</p>",
        "id": 424005484,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1709208382
    },
    {
        "content": "<p>Ah right, <code>0 &lt; n</code> is missing, but that should be it</p>",
        "id": 424005714,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709208476
    },
    {
        "content": "<p>Ah no, I made another typo above <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span></p>",
        "id": 424005825,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709208507
    },
    {
        "content": "<p>Why is it false for <code>n = 0</code>?</p>",
        "id": 424028700,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1709216349
    },
    {
        "content": "<p><del>Also, when <code>a ≤ b</code>, the LHS vanishes, so the inequality should still hold.</del> I thought <code>a b : ℕ</code>!</p>",
        "id": 424029400,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709216556
    },
    {
        "content": "<p>I fixed the above snippet after <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> 's comment <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 424029496,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709216587
    },
    {
        "content": "<p>Does anyone have a slick way to prove it? I found it <a href=\"https://math.stackexchange.com/questions/368725/proving-inequality-using-induction-an-bn-leq-nan-1a-b\">here</a> but the proofs don't seem minimal to me</p>",
        "id": 424063494,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709225453
    },
    {
        "content": "<p>That's the maths proof I was thinking of; you could do this very nicely with a calc block in Lean I think.</p>",
        "id": 424094871,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709235778
    },
    {
        "content": "<p>Here's the <code>n = 0</code> case, by the way.  Unless I've misread?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">0</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 424105089,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1709239603
    },
    {
        "content": "<p>It was <code>(a - b) ^ 0</code> when I commented</p>",
        "id": 424105430,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1709239743
    },
    {
        "content": "<p>You can see edit history of any post on a desktop app by clicking on \"edited\"</p>",
        "id": 424107189,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709240393
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/power.20of.20difference/near/424094871\">said</a>:</p>\n<blockquote>\n<p>That's the maths proof I was thinking of; you could do this very nicely with a calc block in Lean I think.</p>\n</blockquote>\n<p>Will try and PR if successful</p>",
        "id": 424194046,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709286578
    },
    {
        "content": "<p>Note that the proof using the intermediate value theorem has the advantage to work for (positive) real exponent.</p>",
        "id": 424196058,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1709287245
    },
    {
        "content": "<p>Why do we want this inequality? And if we do want it, should we consider replacing n by m + 1 and removing the n&gt;0 hypothesis and the horrible <code>n - 1</code>, which we can easily avoid in this case?</p>",
        "id": 424198968,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709288338
    },
    {
        "content": "<p>Agree to removing <code>n &gt; 0</code>. Well I need it for some error estimates in fixed point arithmetics, and I've certainly seen it before in numerical maths.</p>",
        "id": 424201960,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709289240
    },
    {
        "content": "<p>If you have an application, then that's a fine response to \"why do we want this\".</p>",
        "id": 424214565,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709292688
    },
    {
        "content": "<p>The geometric series proof generalises nicely to <code>StrictOrderedCommRing</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">pow_sub_pow_le</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StrictOrderedCommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n    <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">geom_sum₂_mul</span><span class=\"o\">]</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mul_le_mul_of_nonneg_right</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">sub_nonneg.mpr</span> <span class=\"n\">ha</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"bp\">@</span><span class=\"n\">geom_sum₂_self</span><span class=\"o\">]</span>\n  <span class=\"n\">apply</span> <span class=\"n\">sum_le_sum</span>\n  <span class=\"n\">intros</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mul_le_mul_of_nonneg_left</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">pow_nonneg</span> <span class=\"o\">(</span><span class=\"n\">le_trans</span> <span class=\"n\">hb</span> <span class=\"n\">ha</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n  <span class=\"n\">apply</span> <span class=\"n\">pow_le_pow_of_le_left</span> <span class=\"n\">hb</span> <span class=\"n\">ha</span>\n</code></pre></div>",
        "id": 424222534,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709295274
    },
    {
        "content": "<p>As for the <code>n - 1</code>, should I bring one <code>a</code> it to the other side for mathlib even if I need it in the form above?</p>",
        "id": 424222671,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709295336
    }
]