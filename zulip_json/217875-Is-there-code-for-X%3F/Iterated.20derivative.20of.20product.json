[
    {
        "content": "<p>Do we have this (under the right assumptions of course)?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">blo</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">iteratedDeriv</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">n.choose</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">iteratedDeriv</span> <span class=\"n\">k</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">iteratedDeriv</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>It is kind of hidden in the proof of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContinuousLinearMap.norm_iteratedFDerivWithin_le_of_bilinear_aux#doc\">docs#ContinuousLinearMap.norm_iteratedFDerivWithin_le_of_bilinear_aux</a></p>",
        "id": 431887731,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1712563873
    },
    {
        "content": "<p>I don't think we have it, and we definitely should (for a general bilinear form, then specialized to multiplication). Note however that if you just need to bound some integrals, a bound (like the one you mention or the one given by <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=norm_iteratedFDeriv_mul_le#doc\">docs#norm_iteratedFDeriv_mul_le</a>) could be enough for your needs.</p>",
        "id": 431893292,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1712565063
    }
]