[
    {
        "content": "<p>Do we not have this? Is it a bad idea?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"kt\">Sort</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">DFunLike</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span><span class=\"o\">]</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">trace.Meta.synthInstance</span> <span class=\"n\">true</span> <span class=\"k\">in</span>\n<span class=\"bp\">#</span><span class=\"n\">synth</span> <span class=\"n\">DFunLike</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">//</span> <span class=\"n\">p</span> <span class=\"n\">f</span><span class=\"o\">}</span> <span class=\"n\">β</span> <span class=\"n\">γ</span>\n\n<span class=\"bp\">#</span><span class=\"n\">synth</span> <span class=\"n\">CoeFun</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">//</span> <span class=\"n\">p</span> <span class=\"n\">f</span><span class=\"o\">}</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span> <span class=\"n\">b</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">instDFunLikeSubtype</span> <span class=\"o\">:</span> <span class=\"n\">DFunLike</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">//</span> <span class=\"n\">p</span> <span class=\"n\">f</span><span class=\"o\">}</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"n\">where</span>\n  <span class=\"n\">coe</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">f.val</span> <span class=\"n\">b</span>\n  <span class=\"n\">coe_injective'</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Subtype.coe_injective</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">DFunLike.coe_injective'</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 437843891,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715270418
    },
    {
        "content": "<p>Yes, see my closed PR</p>",
        "id": 437845467,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715270912
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/10631\">#10631</a></p>",
        "id": 437845644,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715270973
    },
    {
        "content": "<p>There's a closed PR with a message that says \"it does seem like a bad idea\", but what was the reason you decided it was a bad idea?</p>",
        "id": 437849707,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715272505
    },
    {
        "content": "<p><code>FunLike</code> is a bad idea (because it introduces a second canonical spelling and confluence issues), but CoeFun should be harmless and probably convenient.</p>",
        "id": 437854270,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715274297
    },
    {
        "content": "<p>I was going through the helper instances in mathlib to see what ones might suffer for discrimination tree  issues. <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Submodule.instFunLikeSubtypeDualMemDualAnnihilator#doc\">docs#Submodule.instFunLikeSubtypeDualMemDualAnnihilator</a> doesn't but seems like a prime motivator for such a thing</p>",
        "id": 437857158,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715275564
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> what is the other spelling here? The confluence issues are what made it a bad idea I imagine (or at least de-motivated).</p>",
        "id": 437857502,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715275720
    },
    {
        "content": "<p>Subtype.val vs DFunlike.coe</p>",
        "id": 437863807,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715278437
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/FunLike.20for.20subtype.20of.20FunLike/near/437849707\">said</a>:</p>\n<blockquote>\n<p>There's a closed PR with a message that says \"it does seem like a bad idea\", but what was the reason you decided it was a bad idea?</p>\n</blockquote>\n<p>Checkout the branch and check out the CI errors</p>",
        "id": 437869457,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715280940
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> It'd be useful to document the results of your experiment so that when this question comes up we don't have to re-evaluate build results. It's fine if you don't want to summarize your findings, but that just means that the PR isn't showing anything on its own.</p>",
        "id": 437871548,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715281844
    }
]