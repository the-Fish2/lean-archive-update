[
    {
        "content": "<p>Is there a theorem stating <a href=\"https://en.wikipedia.org/wiki/Leibniz_integral_rule#General_form:_differentiation_under_the_integral_sign\">differentiation under the integral sign</a>?</p>\n<p>I have found <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=hasFDerivAt_integral_of_dominated_loc_of_lip#doc\">docs#hasFDerivAt_integral_of_dominated_loc_of_lip</a> but that does not allow for the measure to vary.</p>\n<p>Here is the statement I would like to have:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Calculus.FDeriv.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Integral.Bochner</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span>\n\n<span class=\"kd\">variable</span>\n  <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NormedSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">Y</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">Z</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NormedSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">Z</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">deriv_under_integral_sign</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Measure</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span> <span class=\"bp\">→</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">dx</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n    <span class=\"c\">/-</span><span class=\"cm\"> some conditions on f and μ   -/</span> <span class=\"o\">:</span>\n    <span class=\"n\">fderiv</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">∫</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">∂</span><span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"n\">x</span> <span class=\"n\">dx</span>\n    <span class=\"bp\">=</span>\n    <span class=\"n\">fderiv</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x'</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">∫</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">∂</span><span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"n\">x'</span><span class=\"o\">))</span> <span class=\"n\">x</span> <span class=\"n\">dx</span>\n    <span class=\"bp\">+</span>\n    <span class=\"bp\">∫</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">fderiv</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">·</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">dx</span> <span class=\"bp\">∂</span><span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">sorr</span>\n</code></pre></div>\n<p>Not entirely sure what the condition on <code>μ</code> should be, on <code>f</code> I'm expecting:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>    <span class=\"o\">(</span><span class=\"n\">bound</span> <span class=\"o\">:</span> <span class=\"n\">Y</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hf_integ</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">Integrable</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">hf_diff</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x'</span><span class=\"o\">,</span> <span class=\"bp\">∀ᵐ</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">∂</span><span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"n\">x'</span><span class=\"o\">),</span> <span class=\"n\">Differentiable</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">·</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">hf_bound</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x'</span><span class=\"o\">,</span> <span class=\"bp\">∀ᵐ</span> <span class=\"n\">y</span> <span class=\"bp\">∂</span><span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"n\">x'</span><span class=\"o\">),</span> <span class=\"bp\">‖</span><span class=\"n\">fderiv</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">·</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">bound</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hbound_integ</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">Integrable</span> <span class=\"n\">bound</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n</code></pre></div>",
        "id": 420913933,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1707678300
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 420915265,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1707679442
    },
    {
        "content": "<p>Alternatively one could ask under what conditions on <code>μ</code> and <code>f</code> is true that:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>   <span class=\"n\">Differentiable</span> <span class=\"n\">ℝ</span> <span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"bp\">×</span><span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">∫</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x.1</span> <span class=\"n\">y</span> <span class=\"bp\">∂</span><span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"n\">x.2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Then the desired result can be obtained using differentiation of uncurried function and  <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=hasFDerivAt_integral_of_dominated_loc_of_lip#doc\">docs#hasFDerivAt_integral_of_dominated_loc_of_lip</a></p>",
        "id": 420915875,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1707679984
    },
    {
        "content": "<p>I’m pretty sure we don’t have anything about the case where the measure is moving.</p>",
        "id": 420943550,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1707705542
    },
    {
        "content": "<p>Not even a 1D case where you integrate over an interval?</p>",
        "id": 420943680,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1707705665
    },
    {
        "content": "<p>My source of information may be outdated but there was nothing at all in this direction when I needed it for the sphere eversion project and I definitely didn’t add things about moving measures.</p>",
        "id": 420943886,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1707705895
    },
    {
        "content": "<p>In order to get your statement, you want to know that the function <code>fun (a, b) =&gt; ∫ y, f a y ∂(μ b)</code> is differentiable as a function of 2 variables.</p>",
        "id": 420944894,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707706889
    },
    {
        "content": "<p>UPD: wrote this before reading the whole message, sorry.</p>",
        "id": 420944976,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707706933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Do you know the right assumptions?</p>",
        "id": 420946038,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707707970
    },
    {
        "content": "<p>No</p>",
        "id": 420950717,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1707712498
    }
]