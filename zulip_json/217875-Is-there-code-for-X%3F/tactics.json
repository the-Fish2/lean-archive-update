[
    {
        "content": "<p>Is there a tactic that does nothing but evaluate the result of a function? Is there also a tactic that does nothing but evaluate a decidable proposition?<br>\nIs there a list of all of the tactics somewhere with descriptions of each? I thought there was one, but I can't seem to find it.</p>",
        "id": 441167023,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1716960322
    },
    {
        "content": "<p>See the discussion here for a list: <a href=\"#narrow/stream/113489-new-members/topic/Lean.204.20tactics.20list/near/439268892\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Lean.204.20tactics.20list/near/439268892</a></p>",
        "id": 441167600,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716960738
    },
    {
        "content": "<p>Ahh. Thank you.</p>",
        "id": 441167685,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1716960828
    },
    {
        "content": "<p>For your second question, <code>decide</code> is the tactic.<br>\nI should probably add it to my list <a href=\"https://github.com/madvorak/lean4-tactics\">https://github.com/madvorak/lean4-tactics</a> because it pops up quite often.</p>",
        "id": 441168843,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1716961654
    },
    {
        "content": "<p>Thank you. Do you know what the tactic for the first would be, if the function is one I defined and not just a <code>fun</code> in the proof?</p>",
        "id": 441169228,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1716961928
    },
    {
        "content": "<p>Ie, should <code>beta_reduce</code> work?</p>",
        "id": 441169254,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1716961950
    },
    {
        "content": "<p>What about <code>dsimp</code>?</p>",
        "id": 441169430,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1716962060
    },
    {
        "content": "<p>Oh. Ok, maybe, yeah. Thank you.</p>",
        "id": 441169509,
        "sender_full_name": "Kayla Thomas",
        "timestamp": 1716962144
    }
]