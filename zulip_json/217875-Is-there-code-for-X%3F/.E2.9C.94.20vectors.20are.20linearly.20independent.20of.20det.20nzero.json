[
    {
        "content": "<p>i would like to prove that a specific set of vectors over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">F_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is linearly independent, in order to give a basis of the Submodule which is its span. Doing the algebra by hand is a lot more work than if i would be able to leverage the fact that the determinant (given an appropriate set of indexes) is not zero.<br>\nspecifically, something like this would be nice:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">linearlyIndependent_of_det_nzero</span>\n    <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"n\">M</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">K</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n    <span class=\"o\">{</span><span class=\"n\">ι₁</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}[</span><span class=\"n\">Fintype</span> <span class=\"n\">ι₁</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">b</span><span class=\"o\">:</span><span class=\"n\">Basis</span> <span class=\"n\">ι₁</span> <span class=\"n\">K</span> <span class=\"n\">M</span><span class=\"o\">}</span>\n    <span class=\"o\">{</span><span class=\"n\">ι₂</span><span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}[</span><span class=\"n\">Fintype</span> <span class=\"n\">ι₂</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">ι₂</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">:</span><span class=\"n\">ι₂</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">):</span>\n    <span class=\"n\">LinearIndependent</span> <span class=\"n\">K</span> <span class=\"n\">v</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"n\">ι₂</span> <span class=\"bp\">→</span> <span class=\"n\">ι₁</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span><span class=\"o\">:</span> <span class=\"n\">s.Injective</span> <span class=\"o\">),</span>\n    <span class=\"o\">(</span><span class=\"n\">Matrix.of</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">b.repr</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">j</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">K</span><span class=\"o\">)</span>\n  <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>do we have something like this? asking loogle about <code>LinearIndependent, Matrix.det</code> yields no results</p>",
        "id": 427143869,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1710688708
    },
    {
        "content": "<p>There's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=is_basis_iff_det#doc\">docs#is_basis_iff_det</a></p>",
        "id": 427155725,
        "sender_full_name": "Richard Copley",
        "timestamp": 1710691774
    },
    {
        "content": "<p>thanks, i think that works!</p>",
        "id": 427156770,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1710692041
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"684366\">Edward van de Meent</span> has marked this topic as resolved.</p>",
        "id": 427157882,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710692321
    }
]