[
    {
        "content": "<p>Do we have that a compact metric space is separable? I just came across the statement in a textbook I'm reading (I forgot about it) and I didn't recall proving the analogous result for Lindelöf spaces when I added the basic API for Lindelöf spaces, so thought I'd quickly modify the proof to work for Lindelöf and deduce compact/sigma-compact from there.</p>",
        "id": 420484291,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1707406702
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MetricSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">CompactSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"bp\">#</span><span class=\"n\">synth</span> <span class=\"n\">TopologicalSpace.SeparableSpace</span> <span class=\"n\">α</span>\n</code></pre></div>\n<p>succeeds. So the answer is yes, we have it. And <code>#synth</code> will even tell you how it got there.</p>",
        "id": 420485270,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1707407000
    },
    {
        "content": "<p>Thank you, I tried moogle and loogle, but I wasn’t successful there… I didn’t think of this way!</p>",
        "id": 420485497,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1707407063
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"673728\">Josha Dekker</span> has marked this topic as resolved.</p>",
        "id": 420485683,
        "sender_full_name": "Notification Bot",
        "timestamp": 1707407126
    },
    {
        "content": "<p>It's gonna be pretty indirect, unless you use the minimal classes, so <code>#synth</code> is really your best friend here. (It will go through second countable topology, and proper spaces...)</p>",
        "id": 420485936,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1707407191
    },
    {
        "content": "<p>Note that our library is not optimal:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace.MetrizableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">CompactSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"bp\">#</span><span class=\"n\">synth</span> <span class=\"n\">SecondCountableTopology</span> <span class=\"n\">α</span>\n</code></pre></div>\n<p>fails.</p>",
        "id": 420486287,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1707407286
    },
    {
        "content": "<p>Yes, I think there are a lot of things that never moved to <code>MetrizableSpace</code> when it was introduced.</p>",
        "id": 420546819,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1707428533
    },
    {
        "content": "<p>I’ll write up that metric (metrizable?) Lindelöf spaces are second countable. If I’ve got time I’ll do it tomorrow, I’m not very familiar with the metric spaces part of the topology library, so not sure how quickly I’ll get it done.</p>",
        "id": 420549151,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1707429563
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"673728\">Josha Dekker</span> has marked this topic as unresolved.</p>",
        "id": 420616748,
        "sender_full_name": "Notification Bot",
        "timestamp": 1707472061
    },
    {
        "content": "<p>In the small PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/10376\">#10376</a> I add that a Pseudometric Lindelöf space is a SecondCountableTopology, from which SeparableSpace can be synthesised.</p>",
        "id": 420616980,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1707472148
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sébastien Gouëzel</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/CompactSpace.20.2B.20MetricSpace.20gives.20SeparableSpace/near/420486287\">said</a>:</p>\n<blockquote>\n<p>Note that our library is not optimal:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace.MetrizableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">CompactSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"bp\">#</span><span class=\"n\">synth</span> <span class=\"n\">SecondCountableTopology</span> <span class=\"n\">α</span>\n</code></pre></div>\n<p>fails.</p>\n</blockquote>\n<p>I've incorporated your suggestion on <a href=\"https://github.com/leanprover-community/mathlib4/pull/10376\">#10376</a>, now this instance also works (via CompactSpace -&gt; LindelofSpace and Metrizable -&gt; PseudoMetrizable)) (after dropping [TopologicalSpace α])</p>",
        "id": 420652495,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1707485366
    }
]