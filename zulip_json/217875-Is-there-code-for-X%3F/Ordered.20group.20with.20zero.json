[
    {
        "content": "<p>Is there an ordered group-with-zero class that I can put on <code>FractionalIdeal A⁰ K</code> for a dedekind domain <code>A</code>?<br>\nIn particular I would like the lemma <code>I ≠ 0 → J ≠ 0 → I⁻¹ ≤ J ↔ J⁻¹ ≤ I</code> for free.</p>",
        "id": 408060451,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1702594311
    },
    {
        "content": "<p>Or maybe <code>0 &lt; I → 0 &lt; J → I⁻¹ ≤ J ↔ J⁻¹ ≤ I</code></p>",
        "id": 408060547,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1702594344
    },
    {
        "content": "<p>I think the answer is no -- we only have linearly ordered groups with zero.</p>",
        "id": 408061397,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1702594786
    },
    {
        "content": "<p>While typeclasses like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=PosMulStrictMono#doc\">docs#PosMulStrictMono</a> help?</p>",
        "id": 408065446,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1702596910
    },
    {
        "content": "<p>(not sure which one of these)</p>",
        "id": 408065453,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1702596917
    },
    {
        "content": "<p>don't you need fractional ideals here to talk about inverses?</p>",
        "id": 408084941,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1702606311
    },
    {
        "content": "<p>Seems like we don't. What algebraic order properties do fractional ideals have? They are a semifield, right?</p>",
        "id": 408128188,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702624391
    },
    {
        "content": "<p>Are they all nonnegative?</p>",
        "id": 408128219,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702624399
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Ordered.20group.20with.20zero/near/408128188\">said</a>:</p>\n<blockquote>\n<p>Seems like we don't. What algebraic order properties do fractional ideals have? They are a semifield, right?</p>\n</blockquote>\n<p>I think they're a semifield, yes.</p>",
        "id": 408170852,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1702640863
    },
    {
        "content": "<p><code>I ≠ 0 → J ≠ 0 → I⁻¹ ≤ J ↔ J⁻¹ ≤ I</code> should follow from <code>[OrderedCommMonoid M] [GroupWithZero M]</code>. As for fractional ideals, it is a lattice and a semifield with monotone addition and multiplication and <code>0 ≤ I</code> for all <code>I</code>.</p>",
        "id": 408172028,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1702641329
    },
    {
        "content": "<p><del>Fractional ideals are not all &lt;= 1, are they?</del></p>",
        "id": 408172889,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702641653
    },
    {
        "content": "<p>Oops yes of course</p>",
        "id": 408174859,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1702642353
    },
    {
        "content": "<p>Are they canonically ordered? <code>A &lt;= B iff exist C, A + C = B</code></p>",
        "id": 408178676,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702643857
    },
    {
        "content": "<p>If you tell me enough info about them, I will refactor the algebraic order hierarchy so that lemmas apply to them.</p>",
        "id": 408178807,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702643902
    },
    {
        "content": "<p>I am afraid fractional ideals don't have a lot of nice properties wrt to the sum</p>",
        "id": 408187537,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1702647166
    },
    {
        "content": "<p>I should think that this is true though, isn't it? If A&lt;=B then just set C=B. Yael the simple mental model is additive subgroups of a field, with 1 being the subgroup generated by 1.</p>",
        "id": 408199850,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702651679
    },
    {
        "content": "<p>Well spotted!</p>",
        "id": 408201002,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1702652044
    },
    {
        "content": "<p>That's precisely the argument I had in mind but I wasn't sure whether my mental model of fractional ideals was correct!</p>",
        "id": 408205039,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702653321
    },
    {
        "content": "<p>Then can you prove they are a <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CanonicallyOrderedAddCommMonoid#doc\">docs#CanonicallyOrderedAddCommMonoid</a> ?</p>",
        "id": 408205672,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702653530
    },
    {
        "content": "<p>Yes:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Algebra</span> <span class=\"n\">A</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Submonoid</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">FractionalIdeal</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">CanonicallyOrderedAddCommMonoid</span> <span class=\"o\">(</span><span class=\"n\">FractionalIdeal</span> <span class=\"n\">S</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">add_le_add_left</span> <span class=\"n\">J</span> <span class=\"n\">J'</span> <span class=\"n\">e</span> <span class=\"n\">I</span> <span class=\"o\">:=</span> <span class=\"n\">add_le_add_left</span> <span class=\"n\">e</span> <span class=\"n\">I</span>\n  <span class=\"n\">exists_add_of_le</span> <span class=\"o\">{</span><span class=\"n\">I</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">J</span><span class=\"o\">}</span> <span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">J</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">sup_eq_add</span><span class=\"o\">,</span> <span class=\"n\">right_eq_sup</span><span class=\"o\">]⟩</span>\n  <span class=\"n\">le_self_add</span> <span class=\"n\">I</span> <span class=\"n\">J</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"n\">add_le_add_left</span> <span class=\"o\">(</span><span class=\"n\">zero_le</span> <span class=\"n\">J</span><span class=\"o\">)</span> <span class=\"n\">I</span>\n</code></pre></div>\n<p>I'm not sure if this helps though, since my original question is about the multiplicative structure.</p>",
        "id": 408207361,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1702654097
    },
    {
        "content": "<p>Then can you prove they are a <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CanonicallyOrderedAddCommMonoid#doc\">docs#CanonicallyOrderedAddCommMonoid</a> ?</p>",
        "id": 408213594,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702656252
    },
    {
        "content": "<p>It should be easy given that we have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Submodule.instCanonicallyOrderedAddCommMonoidSubmodule#doc\">docs#Submodule.instCanonicallyOrderedAddCommMonoidSubmodule</a></p>",
        "id": 408213595,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702656253
    },
    {
        "content": "<p>Isn't that what I proved above? Or do you mean <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CanonicallyOrderedCommSemiring%3F#doc\">docs#CanonicallyOrderedCommSemiring?</a></p>",
        "id": 408213755,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1702656312
    },
    {
        "content": "<p>Uh, I sent those messages 50 minutes ago.</p>",
        "id": 408214117,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702656415
    },
    {
        "content": "<p>Yes it would be interesting to know whether they are a <code>CanonicallyOrderedCommSemiring</code>.</p>",
        "id": 408214402,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702656492
    },
    {
        "content": "<p>If they are, then we could consider adding a <code>CanonicallyOrderedSemifield</code> typeclass.</p>",
        "id": 408214654,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702656570
    },
    {
        "content": "<p>I believe they are, assuming <code>[IsDomain A]</code></p>",
        "id": 408215543,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1702656834
    },
    {
        "content": "<p>I think I spotted what was wrong with our current theorems. Expect a PR soon.</p>",
        "id": 408222684,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702659436
    },
    {
        "content": "<p>I reached out to Yaël to help out with this and have an initial WIP/draft branch at <a href=\"https://github.com/leanprover-community/mathlib4/pull/9234\">#9234</a> which shows that a substantial amount of lemmas from <code>Mathlib.Algebra.Order.Field.Basic</code> can be refactored to <code>Mathlib.Algebra.Order.Ring.Lemmas</code>.  Which begs the question if we should have a new typeclass <code>OrderedSemiField</code> that helps organize some of this?  The next question then is for the Ring theorists: What are the  properties  we can expect from fractional ideals?</p>",
        "id": 409846688,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1703456484
    },
    {
        "content": "<p>It is a lattice and a canonically ordered semifield. And that's about it.</p>",
        "id": 409848998,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1703459184
    },
    {
        "content": "<p>By canonical do you mean a <code>PartialOrder</code>?  The word canonical is confusing sometimes (at least for me).</p>",
        "id": 409850006,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1703460435
    },
    {
        "content": "<p>It is <code>A &lt;= B iff exist C, A + C = B</code> as discussed above.</p>",
        "id": 409850033,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1703460471
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"439483\">Andrew Yang</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Ordered.20group.20with.20zero/near/409850033\">said</a>:</p>\n<blockquote>\n<p>It is <code>A &lt;= B iff exist C, A + C = B</code> as discussed above.</p>\n</blockquote>\n<p>Thanks for verifying.</p>",
        "id": 409850086,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1703460498
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> do you think we should create an <code>OrderedSemifield</code> typeclass that relaxes the linear order of <code>LinearOrderedSemifield</code> to bundle a bunch of these lemmas together?</p>",
        "id": 409850332,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1703460803
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"439483\">@Andrew Yang</span>, the kind of properties we're after are:</p>\n<ol>\n<li><code>0 ≤ a → b₁ ≤ b₂ → a * b₁ ≤ a * b₂</code></li>\n<li><code>0 &lt; a → b₁ &lt; b₂ → a * b₁ &lt; a * b₂</code></li>\n<li><code>0 ≤ a → a * b₁ &lt; a * b₂ → b₁ &lt; b₂</code></li>\n<li><code>0 &lt; a → a * b₁ ≤ a * b₂ → b₁ ≤ b₂</code></li>\n</ol>",
        "id": 409883340,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703488697
    },
    {
        "content": "<p>Because fractional ideals form a partial order and a semifield, they should all be equivalent.</p>",
        "id": 409883420,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703488791
    },
    {
        "content": "<p>Doesn't this hold for every CanonicallyOrderedCommSemiring? Anyway it indeed holds in this case.</p>",
        "id": 409883517,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1703488876
    },
    {
        "content": "<p>Okay great! So it seems fractional ideals really are the first non-linearly ordered semifield mathlib cares about <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 409883604,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703488946
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"443984\">Newell Jensen</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Ordered.20group.20with.20zero/near/409850332\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> do you think we should create an <code>OrderedSemifield</code> typeclass that relaxes the linear order of <code>LinearOrderedSemifield</code> to bundle a bunch of these lemmas together?</p>\n</blockquote>\n<p>In that case, I would say yes</p>",
        "id": 409883614,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703488959
    },
    {
        "content": "<p>Fractional ideals of the rationals are the nonnegative rationals, with multiplication defined as usual and a+b defined as gcd(a,b) (by which I mean \"multiply by some large integer N to make a and b integral, now take gcd, and then divide by N again, and note that this is independent of N\". I'm not sure I've ever really internalised that this was a thing before.</p>",
        "id": 409900292,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1703501418
    }
]