[
    {
        "content": "<p>Do we have this? If an integral domain A is a subring of a ring L, and if x in L is algebraic over A, then there's some nonzero a such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">ax</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span></span></span></span> is integral over A. The maths proof: if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>d</mi></msubsup><msub><mi>p</mi><mi>i</mi></msub><msup><mi>x</mi><mi>i</mi></msup><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=0}^dp_ix^i=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2887em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.989em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> is a nonzero poly of degree <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span> then use a=p_d and multiply the previous equation by a^{d-1} to see what is obviously a monic polynomial in ax. I found it quite painful:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.Localization.NormTrace</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Algebra</span> <span class=\"n\">Polynomial</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">BigOperators</span> <span class=\"n\">nonZeroDivisors</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Ring</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Algebra</span> <span class=\"n\">A</span> <span class=\"n\">L</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">IsIntegral.exists_multiple_integral_of_isAlgebraic</span>\n    <span class=\"o\">(</span><span class=\"n\">hinj</span> <span class=\"o\">:</span> <span class=\"n\">Function.Injective</span> <span class=\"o\">(</span><span class=\"n\">algebraMap</span> <span class=\"n\">A</span> <span class=\"n\">L</span><span class=\"o\">))</span>\n    <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">L</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">IsAlgebraic</span> <span class=\"n\">A</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">m</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">IsIntegral</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">•</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">hp0</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hx</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">leadingCoeff_ne_zero.mpr</span> <span class=\"n\">hp0</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">p.leadingCoeff</span><span class=\"o\">,</span> <span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"k\">have</span> <span class=\"n\">this</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">p.natDegree</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">natDegree_pos_of_aeval_root</span> <span class=\"n\">hp0</span> <span class=\"n\">hpx</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"bp\">↦</span> <span class=\"n\">hinj</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">hx</span> <span class=\"bp\">▸</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">hn</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">p.natDegree</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">Nat.exists_eq_add_of_le'</span> <span class=\"n\">this</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">aeval_eq_sum_range</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hpx</span>\n  <span class=\"n\">apply_fun</span> <span class=\"o\">((</span><span class=\"n\">p.leadingCoeff</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">•</span> <span class=\"bp\">.</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">hpx</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">smul_zero</span><span class=\"o\">,</span> <span class=\"n\">Finset.smul_sum</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hpx</span>\n  <span class=\"n\">use</span> <span class=\"n\">monomial</span> <span class=\"n\">p.natDegree</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span>  <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">Finset.range</span> <span class=\"n\">p.natDegree</span><span class=\"o\">,</span> <span class=\"n\">Polynomial.monomial</span> <span class=\"n\">i</span> <span class=\"o\">((</span><span class=\"n\">p.leadingCoeff</span><span class=\"o\">)</span><span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">p.coeff</span> <span class=\"n\">i</span><span class=\"o\">))</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"bp\">·</span> <span class=\"n\">apply</span> <span class=\"n\">monic_of_natDegree_le_of_coeff_eq_one</span> <span class=\"n\">p.natDegree</span>\n    <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">natDegree_add_le_iff_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">natDegree_monomial_le</span> <span class=\"mi\">1</span><span class=\"o\">)]</span>\n      <span class=\"n\">refine</span> <span class=\"n\">natDegree_sum_le_of_forall_le</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"n\">hi</span> <span class=\"bp\">↦</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">)</span>\n      <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">natDegree_monomial_le</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Finset.mem_range.1</span> <span class=\"n\">hi</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">le</span>\n    <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">coeff_monomial</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.sum_range_succ</span><span class=\"o\">,</span> <span class=\"n\">add_comm</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hpx</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Submonoid.mk_smul</span><span class=\"o\">,</span> <span class=\"n\">eval₂_add</span><span class=\"o\">,</span> <span class=\"n\">eval₂_monomial</span><span class=\"o\">,</span> <span class=\"n\">map_one</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">,</span> <span class=\"n\">eval₂_finset_sum</span><span class=\"o\">,</span>\n      <span class=\"n\">map_mul</span><span class=\"o\">,</span> <span class=\"n\">map_pow</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hn</span><span class=\"o\">]</span>\n    <span class=\"n\">congr</span> <span class=\"mi\">1</span>\n    <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">leadingCoeff</span><span class=\"o\">,</span> <span class=\"n\">hn</span><span class=\"o\">,</span> <span class=\"n\">smul_pow</span><span class=\"o\">,</span> <span class=\"n\">smul_smul</span><span class=\"o\">]</span>\n      <span class=\"n\">ring_nf</span>\n    <span class=\"bp\">·</span> <span class=\"n\">apply</span> <span class=\"n\">Finset.sum_congr</span> <span class=\"n\">rfl</span>\n      <span class=\"n\">intro</span> <span class=\"n\">i</span> <span class=\"n\">hi</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.mem_range_succ_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hi</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">smul_pow</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">map_pow</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">map_mul</span><span class=\"o\">,</span> <span class=\"n\">smul_def</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">map_mul</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">smul_assoc</span><span class=\"o\">,</span>\n          <span class=\"n\">smul_eq_mul</span><span class=\"o\">,</span> <span class=\"n\">smul_def</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"n\">p.coeff</span> <span class=\"n\">i</span><span class=\"o\">),</span> <span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span>\n          <span class=\"n\">pow_sub_mul_pow</span> <span class=\"n\">p.leadingCoeff</span> <span class=\"n\">hi</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>The reason I want this is because I think the AKLB people have missed a trick. They are trying to move from stuff involving K,L (e.g. Aut(L/K)) directly to stuff involving A,B (e.g. Aut(B/A); see <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=galRestrict#doc\">docs#galRestrict</a> . I think all of this stuff factors through the (A,L) picture (e.g. Aut(L/A) ) and I think this will clear the proofs up a lot. I needed the above lemma because I wanted to replace the assumption \"K is the field of fractions of A and L is finite-dimensional over K\" by an assumption which didn't involve K at all, and <code>Algebraic A L</code> works great, but now I need to prove that if L is algebraic then some multiple is integral, and the proof I'm mimicking unnecessarily goes through K when it could go via the above.</p>",
        "id": 437557294,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715130640
    },
    {
        "content": "<p>You almost guessed the name: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=exists_integral_multiple#doc\">docs#exists_integral_multiple</a><br>\nI <a href=\"https://www.moogle.ai/search/raw?q=if%20an%20element%20is%20algebraic%20over%20a%20ring%2C%20then%20some%20multiple%20of%20it%20is%20integral\">Moogled</a> and it appears as the 8th result</p>",
        "id": 437565593,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1715136397
    },
    {
        "content": "<p>In the root namespace <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span> <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 437571429,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715140381
    }
]