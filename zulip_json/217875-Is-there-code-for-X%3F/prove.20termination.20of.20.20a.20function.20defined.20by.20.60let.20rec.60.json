[
    {
        "content": "<p>I'm working on <a href=\"https://github.com/lean-ja/lean99\">Lean 99</a>, which is lean translation of Haskell 99. This is Problem 24.</p>\n<p>Why does the proof of termination fail while <code>fuel</code> trick is used? Can it be rewritten so that termination is clear without using fuel?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Draw `N` different random numbers from the set `1..M`. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">diffSelect</span> <span class=\"o\">(</span><span class=\"n\">count</span> <span class=\"n\">range</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"o\">(</span><span class=\"n\">List</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">count</span> <span class=\"bp\">&gt;</span> <span class=\"n\">range</span> <span class=\"k\">then</span>\n    <span class=\"n\">dbg_trace</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"can't draw {count} different numbers from 1..{range}\"</span>\n    <span class=\"n\">pure</span> <span class=\"o\">[]</span>\n  <span class=\"k\">else</span>\n    <span class=\"k\">let</span> <span class=\"n\">rec</span> <span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">count</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acc</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fuel</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"o\">(</span><span class=\"n\">List</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n      <span class=\"k\">match</span> <span class=\"n\">count</span><span class=\"o\">,</span> <span class=\"n\">fuel</span> <span class=\"k\">with</span>\n      <span class=\"bp\">|</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">pure</span> <span class=\"n\">acc</span>\n      <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"n\">dbg_trace</span> <span class=\"s2\">\"out of fuel!\"</span>\n        <span class=\"n\">pure</span> <span class=\"o\">[]</span>\n      <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"k\">let</span> <span class=\"n\">pick</span> <span class=\"bp\">←</span> <span class=\"n\">IO.rand</span> <span class=\"mi\">1</span> <span class=\"n\">range</span>\n        <span class=\"k\">if</span> <span class=\"n\">acc.contains</span> <span class=\"n\">pick</span> <span class=\"k\">then</span>\n          <span class=\"n\">loop</span> <span class=\"n\">count</span> <span class=\"n\">acc</span> <span class=\"o\">(</span><span class=\"n\">fuel</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"c1\">-- failed to prove termination</span>\n        <span class=\"k\">else</span>\n          <span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">count</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">pick</span> <span class=\"o\">::</span> <span class=\"n\">acc</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fuel</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n      <span class=\"n\">termination_by</span> <span class=\"n\">fuel</span>\n    <span class=\"n\">loop</span> <span class=\"n\">count</span> <span class=\"o\">[]</span> <span class=\"mi\">10000</span>\n</code></pre></div>",
        "id": 429156790,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1711258290
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Draw `N` different random numbers from the set `1..M`. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">diffSelect</span> <span class=\"o\">(</span><span class=\"n\">count</span> <span class=\"n\">range</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"o\">(</span><span class=\"n\">List</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">count</span> <span class=\"bp\">&gt;</span> <span class=\"n\">range</span> <span class=\"k\">then</span>\n    <span class=\"n\">dbg_trace</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"can't draw {count} different numbers from 1..{range}\"</span>\n    <span class=\"n\">pure</span> <span class=\"o\">[]</span>\n  <span class=\"k\">else</span>\n    <span class=\"k\">let</span> <span class=\"n\">rec</span> <span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">count</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">acc</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fuel</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"o\">(</span><span class=\"n\">List</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n      <span class=\"k\">match</span> <span class=\"n\">count</span><span class=\"o\">,</span> <span class=\"n\">fuel</span> <span class=\"k\">with</span>\n      <span class=\"bp\">|</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">pure</span> <span class=\"n\">acc</span>\n      <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"n\">dbg_trace</span> <span class=\"s2\">\"out of fuel!\"</span>\n        <span class=\"n\">pure</span> <span class=\"o\">[]</span>\n      <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">fuel</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"k\">let</span> <span class=\"n\">pick</span> <span class=\"bp\">←</span> <span class=\"n\">IO.rand</span> <span class=\"mi\">1</span> <span class=\"n\">range</span>\n        <span class=\"k\">if</span> <span class=\"n\">acc.contains</span> <span class=\"n\">pick</span> <span class=\"k\">then</span>\n          <span class=\"n\">loop</span> <span class=\"n\">count</span> <span class=\"n\">acc</span> <span class=\"n\">fuel</span>\n        <span class=\"k\">else</span>\n          <span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">count</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">pick</span> <span class=\"o\">::</span> <span class=\"n\">acc</span><span class=\"o\">)</span> <span class=\"n\">fuel</span>\n      <span class=\"n\">termination_by</span> <span class=\"n\">fuel</span>\n    <span class=\"n\">loop</span> <span class=\"n\">count</span> <span class=\"o\">[]</span> <span class=\"mi\">10000</span>\n</code></pre></div>",
        "id": 429161669,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711261780
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 429208068,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1711289153
    }
]