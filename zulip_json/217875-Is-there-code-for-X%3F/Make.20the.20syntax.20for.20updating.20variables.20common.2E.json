[
    {
        "content": "<p>This is a part of my code in <a href=\"https://github.com/Seasawher/mdgen\">mdgen</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- new notaion to represent `x := x ++ e`. -/</span>\n<span class=\"n\">syntax</span> <span class=\"n\">ident</span> <span class=\"s2\">\"++=\"</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">doElem</span>\n\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">doElem</span><span class=\"bp\">|</span> <span class=\"bp\">$</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"bp\">++=</span> <span class=\"bp\">$</span><span class=\"n\">e</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">doElem</span><span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">++</span> <span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">e</span><span class=\"o\">))</span>\n\n<span class=\"sd\">/-- A chunk of grouped code for conversion to markdown. -/</span>\n<span class=\"kd\">structure</span> <span class=\"n\">Block</span> <span class=\"n\">where</span>\n  <span class=\"n\">content</span> <span class=\"o\">:</span> <span class=\"n\">String</span>\n  <span class=\"n\">toCodeBlock</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span>\n  <span class=\"n\">deriving</span> <span class=\"n\">Repr</span>\n\n<span class=\"kn\">private</span> <span class=\"kd\">def</span> <span class=\"n\">buildBlocks</span> <span class=\"o\">(</span><span class=\"n\">lines</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Block</span> <span class=\"o\">:=</span> <span class=\"n\">Id.run</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">mut</span> <span class=\"n\">toCodeBlock</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n  <span class=\"k\">let</span> <span class=\"n\">mut</span> <span class=\"n\">blocks</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Block</span> <span class=\"o\">:=</span> <span class=\"o\">[]</span>\n  <span class=\"k\">let</span> <span class=\"n\">mut</span> <span class=\"n\">content</span> <span class=\"o\">:=</span> <span class=\"s2\">\"\"</span>\n  <span class=\"n\">for</span> <span class=\"n\">line</span> <span class=\"k\">in</span> <span class=\"n\">lines</span> <span class=\"k\">do</span>\n    <span class=\"k\">if</span> <span class=\"n\">line.endsWith</span> <span class=\"s2\">\"--#\"</span> <span class=\"k\">then</span>\n      <span class=\"n\">continue</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">line.startsWith</span> <span class=\"s2\">\"/-\"</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"bp\">!</span> <span class=\"n\">line.startsWith</span> <span class=\"s2\">\"/--\"</span> <span class=\"k\">then</span>\n      <span class=\"n\">blocks</span> <span class=\"bp\">++=</span> <span class=\"o\">[{</span><span class=\"n\">content</span> <span class=\"o\">:=</span> <span class=\"n\">content.trim</span><span class=\"o\">,</span> <span class=\"n\">toCodeBlock</span> <span class=\"o\">:=</span> <span class=\"n\">toCodeBlock</span><span class=\"o\">}]</span>\n      <span class=\"n\">toCodeBlock</span> <span class=\"o\">:=</span> <span class=\"bp\">!</span> <span class=\"n\">toCodeBlock</span>\n      <span class=\"n\">content</span> <span class=\"o\">:=</span> <span class=\"n\">line</span> <span class=\"bp\">++</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n      <span class=\"k\">if</span> <span class=\"n\">line.endsWith</span> <span class=\"s2\">\"-/\"</span> <span class=\"k\">then</span>\n        <span class=\"n\">blocks</span> <span class=\"bp\">++=</span> <span class=\"o\">[{</span><span class=\"n\">content</span> <span class=\"o\">:=</span> <span class=\"n\">content.trim</span><span class=\"o\">,</span> <span class=\"n\">toCodeBlock</span> <span class=\"o\">:=</span> <span class=\"n\">toCodeBlock</span><span class=\"o\">}]</span>\n        <span class=\"n\">toCodeBlock</span> <span class=\"o\">:=</span> <span class=\"bp\">!</span> <span class=\"n\">toCodeBlock</span>\n        <span class=\"n\">content</span> <span class=\"o\">:=</span> <span class=\"s2\">\"\"</span>\n\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"n\">line.endsWith</span> <span class=\"s2\">\"-/\"</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"bp\">!</span> <span class=\"n\">toCodeBlock</span> <span class=\"k\">then</span>\n      <span class=\"n\">content</span> <span class=\"bp\">++=</span> <span class=\"n\">line</span>\n      <span class=\"n\">blocks</span> <span class=\"bp\">++=</span> <span class=\"o\">[{</span><span class=\"n\">content</span> <span class=\"o\">:=</span> <span class=\"n\">content.trim</span><span class=\"o\">,</span> <span class=\"n\">toCodeBlock</span> <span class=\"o\">:=</span> <span class=\"n\">toCodeBlock</span><span class=\"o\">}]</span>\n      <span class=\"n\">toCodeBlock</span> <span class=\"o\">:=</span> <span class=\"bp\">!</span> <span class=\"n\">toCodeBlock</span>\n      <span class=\"n\">content</span> <span class=\"o\">:=</span> <span class=\"s2\">\"\"</span>\n    <span class=\"k\">else</span>\n      <span class=\"n\">content</span> <span class=\"bp\">++=</span> <span class=\"n\">line</span> <span class=\"bp\">++</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n  <span class=\"k\">if</span> <span class=\"n\">content</span> <span class=\"bp\">!=</span> <span class=\"s2\">\"\"</span> <span class=\"k\">then</span>\n    <span class=\"n\">blocks</span> <span class=\"bp\">++=</span> <span class=\"o\">[{</span><span class=\"n\">content</span> <span class=\"o\">:=</span> <span class=\"n\">content.trim</span><span class=\"o\">,</span> <span class=\"n\">toCodeBlock</span> <span class=\"o\">:=</span> <span class=\"n\">toCodeBlock</span><span class=\"o\">}]</span>\n  <span class=\"n\">return</span> <span class=\"n\">blocks</span>\n</code></pre></div>\n<p>The following codes appear repeatedly in the above code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>      <span class=\"n\">blocks</span> <span class=\"bp\">++=</span> <span class=\"o\">[{</span><span class=\"n\">content</span> <span class=\"o\">:=</span> <span class=\"n\">content.trim</span><span class=\"o\">,</span> <span class=\"n\">toCodeBlock</span> <span class=\"o\">:=</span> <span class=\"n\">toCodeBlock</span><span class=\"o\">}]</span>\n      <span class=\"n\">toCodeBlock</span> <span class=\"o\">:=</span> <span class=\"bp\">!</span> <span class=\"n\">toCodeBlock</span>\n</code></pre></div>\n<p>Could this be made common? Obviously this can be done using macros, but I want to make it common as a function rather than a macro.<br>\nThank you.</p>",
        "id": 430792367,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1712065097
    }
]