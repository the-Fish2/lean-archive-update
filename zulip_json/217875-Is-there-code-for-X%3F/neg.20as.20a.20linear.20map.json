[
    {
        "content": "<p>I'm still lost in the maze of naming conventions for linear maps. What is the name of the linear map mapping <code>x</code> to <code>-x</code> in a module? I've found <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsLinearMap.isLinearMap_neg#doc\">docs#IsLinearMap.isLinearMap_neg</a>, which is almost this but not exactly. I'm missing a tool for which I would give the <code>toFun</code> field, and which would browse through all the definitions of linear maps we have to find me a map with this field.</p>",
        "id": 433158460,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1713122619
    },
    {
        "content": "<p>Does <code>-id</code> work?</p>",
        "id": 433158555,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1713122693
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Module/LinearMap/Basic.html#LinearMap.instNegLinearMapToAddCommMonoid\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Module/LinearMap/Basic.html#LinearMap.instNegLinearMapToAddCommMonoid</a></p>",
        "id": 433158588,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1713122724
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearEquiv.neg#doc\">docs#LinearEquiv.neg</a> ?</p>",
        "id": 433166746,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713130341
    },
    {
        "content": "<p>Should we have <code>Neg</code> instance on <code>LinearEquiv</code> instead of <code>LinearEquiv.neg</code>?</p>",
        "id": 433168473,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1713131973
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> LinearEquiv, Neg</p>",
        "id": 433218615,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713165673
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> nothing found</p>",
        "id": 433218616,
        "sender_full_name": "loogle",
        "timestamp": 1713165674
    },
    {
        "content": "<p>Maybe? Though we can't do the same for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddEquiv.neg%27#doc\">docs#AddEquiv.neg'</a></p>",
        "id": 433218808,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713165736
    },
    {
        "content": "<p>So it would leave us with a primed name and no unprimed counterpart</p>",
        "id": 433218900,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713165769
    },
    {
        "content": "<p>For the record, in the end I used <code>LinearIsometryEquiv.neg</code> (which I found by redefining it and then getting a complaint from Lean that there was a name collision :-)</p>",
        "id": 433219762,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1713166059
    },
    {
        "content": "<p>BTW, the docstring for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddEquiv.neg%27#doc\">docs#AddEquiv.neg'</a> mentions <code>AddEquiv.inv</code> which doesn't exist.</p>",
        "id": 433417037,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1713229717
    }
]