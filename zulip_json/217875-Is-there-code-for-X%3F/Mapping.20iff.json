[
    {
        "content": "<p>Hello, i'm trying to prove a theorem, and i've reached a stage where I have to prove <code>a = b &lt;-&gt; b = a</code>.<br>\nHow do I apply <code>symm</code> only to one side of the iff?</p>\n<p>Here's the theorem I'm trying to prove</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Group.Defs</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.GroupPower.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">=</span><span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_two</span><span class=\"o\">,</span> <span class=\"n\">pow_two</span><span class=\"o\">,</span> <span class=\"n\">pow_two</span><span class=\"o\">]</span> <span class=\"c1\">-- fully expand</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">b</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_left_cancel_iff</span><span class=\"o\">,</span> <span class=\"n\">mul_right_cancel_iff</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 421859917,
        "sender_full_name": "Waelwindows",
        "timestamp": 1708090710
    },
    {
        "content": "<p><code>Eq.symm</code> is an implication, so you could split your goal into the two directions and then apply it</p>",
        "id": 421860411,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708090886
    },
    {
        "content": "<p>But we also have <code>eq_comm</code> which you can <code>rw</code> with</p>",
        "id": 421860453,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708090899
    },
    {
        "content": "<p>Thank you, <code>eq_comm</code> is exactly what I wanted.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Mapping.20iff/near/421860411\">said</a>:</p>\n<blockquote>\n<p><code>Eq.symm</code> is an implication, so you could split your goal into the two directions and then apply it</p>\n</blockquote>\n<p>How can I split the goal in this case?</p>",
        "id": 421860754,
        "sender_full_name": "Waelwindows",
        "timestamp": 1708090999
    },
    {
        "content": "<p><code>constructor</code></p>",
        "id": 421860837,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708091029
    },
    {
        "content": "<p>Note that in general you can't apply an implication <code>P -&gt; Q</code> to one side of an iff <code>P &lt;-&gt; R</code>, because the resulting goal <code>Q &lt;-&gt; R</code> might be true in cases where the original goal <code>P &lt;-&gt; R</code> is false. This shows that it's not just a case of figuring out how to do what you asked to do, you really need <code>eq_comm</code>. The <code>symm</code> tactic works fine with just implications.</p>",
        "id": 421863785,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708092056
    },
    {
        "content": "<p>On the other hand, you don't need to rewrite - you can also say that this is exactly the theorem <code>eq_comm</code>; i.e. <code>exact eq_comm</code>.</p>",
        "id": 421864434,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1708092254
    }
]