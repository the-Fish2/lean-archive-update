[
    {
        "content": "<p>i have defined a bundled structure <code>Metric X</code>, which bundels a metric on the space <code>X</code>. i'd like to define <code>hammingDist' ... : Metric X</code> in such a way that <code>T</code> with <code>[DFunLike T ι β]</code> and the appropriate assumptions on <code>ι</code> and <code>β</code>, <code>hammingDist' : Metric T</code> succeeds, while <code>hammingDist : Metric (∀ i, β i)</code> does too. is there some way to do this?</p>\n<p>my guess would be to have <code>hammingDist'</code> take <code>{X:Type*}</code> and <code>[DFunLike T ι β]</code>, and define an <code>instance : DFunLike (∀ i, β i) ι β</code>, but that seems like such a straightforward idea that i suspect it doesn't exist because it would result in some kind of synthesis/diamond/etc. problem...</p>\n<p>is there some other way around this?</p>",
        "id": 429083511,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1711202543
    }
]