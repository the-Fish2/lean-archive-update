[
    {
        "content": "<p>Hi everybody, to prove that the category of group objects in a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> has limits of a certain type whenever <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> does, I need the fact that limits commute with binary products. Now mathlib has a very general Fubini theorem for limits (and colimits) <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Limits/Fubini.html\">there</a>, but I run into universe problems when I try to use it. For example, I wanted to use <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Limits/Fubini.html#CategoryTheory.Limits.limitUncurryIsoLimitCompLim\">this statement</a> with <code>K</code> equal to my indexing category and <code>J</code> equal to <code>Discrete WalkingPair</code>, but the statement in question requires <code>J</code> and <code>K</code> to be in the same universe as the hom sets of <code>C</code>. This would be okay for <code>K</code>, but <code>Discrete WalkingPair</code> has a fixed universe level, which is <code>0</code>, and that's a pretty strong constraint to put on <code>C</code> (what if it's a presheaf category, for instance?). <br>\nDid I miss something? I really don't look forward to playing around with <code>ULift</code>...</p>",
        "id": 442197560,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1717406870
    },
    {
        "content": "<p>I think we (maybe you!) can try to generalize the universe arguments in that file?</p>",
        "id": 442198560,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1717407115
    },
    {
        "content": "<p>Er maybe, but not today, I had to get up at 3:30 am to catch the Eurostar...<br>\nMore importantly, I'd like to be sure that it is <em>really</em> necessary before I start on something like that.</p>",
        "id": 442199192,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1717407268
    },
    {
        "content": "<p>Well guess what, I removed all universe constraints in <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Limits/Fubini.html\">the mathlib file on Fubini for limits</a>, and it still compiles... The only issue was that at some point there's an instance <code>HasLimits C</code> that only gives limits of size the Hom sets of <code>C</code>, but you can just replace it with hypotheses that the needed limits exist (maybe they are very big limits, but who cares).</p>",
        "id": 442201633,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1717407878
    },
    {
        "content": "<p>There is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Limits.HasLimitsOfSize#doc\">docs#CategoryTheory.Limits.HasLimitsOfSize</a> (of which <code>HasLimits</code> is an abbreviation)</p>",
        "id": 442201840,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1717407940
    },
    {
        "content": "<p>I think it's better anyway to only put the hypotheses that are needed. I need limits indexed by like 4 categories, it's massive overkill to suppose that <code>C</code> has all limits indexed by categories of the same size.</p>",
        "id": 442202502,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1717408096
    }
]