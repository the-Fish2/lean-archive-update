[
    {
        "content": "<p>I understand that continuous things don't play well with theorem provers, but I've seen that there's a lot of topology and analysis code. I'd really like dynamical systems research to play a bigger role in theorem proving (or vice versa)</p>",
        "id": 436919924,
        "sender_full_name": "André Muricy Santos",
        "timestamp": 1714754091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>'s original motivation for getting into Lean was to formalise dynamical system theorems. I'm sure he would love to talk to you about it, although I don't think he could afford to provide much more than talking given his current job.</p>",
        "id": 436920590,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714754359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"705293\">André Muricy Santos</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Dynamical.20systems.20theory.20results.20like.20Takens'.20theorem/near/436919924\">said</a>:</p>\n<blockquote>\n<p>I understand that continuous things don't play well with theorem provers</p>\n</blockquote>\n<p>Where did you get this idea? Did you see the <a href=\"https://leanprover-community.github.io/sphere-eversion/\">sphere eversion project</a>?</p>",
        "id": 436922030,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1714754948
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Dynamical.20systems.20theory.20results.20like.20Takens'.20theorem/near/436922030\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"705293\">André Muricy Santos</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Dynamical.20systems.20theory.20results.20like.20Takens'.20theorem/near/436919924\">said</a>:</p>\n<blockquote>\n<p>I understand that continuous things don't play well with theorem provers</p>\n</blockquote>\n<p>Where did you get this idea? Did you see the <a href=\"https://leanprover-community.github.io/sphere-eversion/\">sphere eversion project</a>?</p>\n</blockquote>\n<p>No, I haven't but i'll check it out. I got this idea from implementing such systems in Agda for my thesis, i just ended up discretizing everything. it seems Lean has an advantage over Agda in this regard, not only wrt theorems but also running simulations via SciLean.</p>",
        "id": 436922588,
        "sender_full_name": "André Muricy Santos",
        "timestamp": 1714755152
    },
    {
        "content": "<p>The ease of formalising certain topics in a given theorem prover is greatly a function of who uses that theorem prover. For example, Isabelle is (currently) much better for classical analysis than Lean simply because they have Manuel Eberl.</p>",
        "id": 436923455,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714755472
    },
    {
        "content": "<p>Very interesting, I'd never thought of that...</p>",
        "id": 436925257,
        "sender_full_name": "André Muricy Santos",
        "timestamp": 1714756147
    },
    {
        "content": "<p>Yaël’s message is a bit simplified. Manuel Eberl is of course amazing but one should not forget the role of John Harrison’s work, ported by Larry Paulson. Also Isabelle’s automation works very well in this context.</p>",
        "id": 436933940,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1714759522
    },
    {
        "content": "<p>I thought Isabelle wasnt a \"big player\" in the theorem proving space, but I guess I was wrong. I'll take a closer look at it :)</p>",
        "id": 436937179,
        "sender_full_name": "André Muricy Santos",
        "timestamp": 1714760786
    },
    {
        "content": "<p>I'd say the three big players in interactive theorem proving are Isabelle, Coq and Lean. There are of course other systems like the various variants of Agda or to mention a non dependently typed one HOL Light but I don't think they enjoy the same amount of popularity.</p>",
        "id": 436938204,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1714761164
    },
    {
        "content": "<p>No, that statement is not wrong. I'm pretty sure Isabelle + AFP is larger than mathlib in terms of theorems proved, although it has a slightly different demographic / focus</p>",
        "id": 436938210,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714761166
    },
    {
        "content": "<p>What kind of dynamical systems results do you want to formalize? I have some plans but my day job takes too much time and energy.</p>",
        "id": 436970607,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714776662
    },
    {
        "content": "<p>Note that we don't have the right version of Whitney's embedding theorem, because we don't have Sard's theorem yet.</p>",
        "id": 436984660,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714790149
    },
    {
        "content": "<p>Fabian Immler's work on the Lorenz attractor is impressive:<br>\n<a href=\"https://link.springer.com/article/10.1007/s10817-017-9448-y\">https://link.springer.com/article/10.1007/s10817-017-9448-y</a></p>\n<p>See also the work with Yong Kiam Tan on Poincaré-Bendixson:<br>\n<a href=\"https://saloranta.de/immler/fabian/documents/immler_tan_2020_poincare_bendixson.pdf\">https://saloranta.de/immler/fabian/documents/immler_tan_2020_poincare_bendixson.pdf</a></p>",
        "id": 437055800,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1714860735
    }
]