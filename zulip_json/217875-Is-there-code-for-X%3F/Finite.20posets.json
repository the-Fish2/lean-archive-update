[
    {
        "content": "<p>Howdy. I have a question that is a mixture of \"is there code\" and \"I don't even know how to do it\". I would like to construct a (large) number of finite posets by their Hasse diagrams (covering relations), and then work with them like proving \"this one is modular\", \"these are all possible posets on 7 elements\" etc. How should I go about this? To start with, is there code that would take a cover relation and give me a poset (PartialOrder)? What would be a good \"carrier type\" for such finite posets? If I have 7 elements, <code>Fin 7</code> would seem natural...?</p>",
        "id": 410431133,
        "sender_full_name": "Jukka Kohonen",
        "timestamp": 1703855400
    },
    {
        "content": "<p>Don't use <code>Fin 7</code>! It already carries an order which will conflict with whatever you're trying to do. I would suggest you define your own inductive type for each finite order you care about (or find a family of finite orders it belongs to and define it instead). For locally finite orders (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LocallyFiniteOrder#doc\">docs#LocallyFiniteOrder</a>), <code>a ≤ b</code> iff there exists a sequence of elements each covering the next starting from <code>a</code> and ending at <code>b</code>. Namely, <code>a &lt; b ↔ TransGen (· ⋖ ·) a b</code> (and <code>a ≤ b ↔ ReflTransGen (· ⋖ ·) a b ↔ TransGen (· ⩿ ·) a b</code>).</p>",
        "id": 410431470,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703855613
    },
    {
        "content": "<p>I've been meaning to add this result but I had no need for it so it was very low priority for me. Feel free to open a PR for it and ask for my review!</p>",
        "id": 410431559,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703855655
    },
    {
        "content": "<p>To create a (locally finite) preorder from a covering relation, you should use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ReflTransGen#doc\">docs#ReflTransGen</a>.</p>",
        "id": 410431729,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703855797
    },
    {
        "content": "<p>I don't think it will be super easy to prove you get a preorder, though. The problem is that your covering relation needs to be acyclic, and this is not super easy to check.</p>",
        "id": 410431945,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703855980
    },
    {
        "content": "<p>Thanks for the advice! I'll try along those lines.</p>",
        "id": 410434782,
        "sender_full_name": "Jukka Kohonen",
        "timestamp": 1703858075
    }
]