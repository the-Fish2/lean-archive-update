[
    {
        "content": "<p>I can't seem to find this in the library: If <code>g</code> is integrable on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span>, say, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f=O(g)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span></span></span></span> <code>atTop</code>, then <code>f</code> is integrable:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Integral.IntegrableOn</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Order.Filter.AtTopBot</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Measure.Haar.OfBasis</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span> <span class=\"n\">Set</span> <span class=\"n\">Filter</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g_integrableOn</span> <span class=\"o\">:</span> <span class=\"n\">IntegrableOn</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">Ioi</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)))</span>\n    <span class=\"o\">(</span><span class=\"n\">f_le_g_atTop</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span><span class=\"n\">O</span><span class=\"o\">[</span><span class=\"n\">atTop</span><span class=\"o\">]</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IntegrableOn</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Ioi</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Any hints would be much appreciated; thanks!</p>",
        "id": 438615156,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1715705048
    },
    {
        "content": "<p>I don't think this is true because you need a hypothesis about the behavior of <code>f</code> on <code>atBot</code> as well.</p>",
        "id": 438615917,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1715705347
    },
    {
        "content": "<p>Also, that <code>f</code> is locally integrable.</p>",
        "id": 438616154,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1715705416
    },
    {
        "content": "<p>Sure, not <code>atBot</code> I think (since I'm only integrating down to <code>0</code>), but local integrability might be needed. Is there some theorem like this one, with sufficient hypotheses?... Thanks!</p>",
        "id": 438616335,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1715705492
    },
    {
        "content": "<p>What about this?</p>",
        "id": 438616494,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1715705544
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs////Mathlib/MeasureTheory/Integral/Asymptotics.html#Asymptotics.IsBigO.integrable\">https://leanprover-community.github.io/mathlib4_docs////Mathlib/MeasureTheory/Integral/Asymptotics.html#Asymptotics.IsBigO.integrable</a></p>",
        "id": 438616510,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1715705549
    },
    {
        "content": "<p>Or this one: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.LocallyIntegrable.integrable_of_isBigO_cocompact#doc\">docs#MeasureTheory.LocallyIntegrable.integrable_of_isBigO_cocompact</a></p>",
        "id": 438616739,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1715705631
    },
    {
        "content": "<p>Great, thanks! This should do what I needed: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.LocallyIntegrableOn.integrableOn_of_isBigO_atTop#doc\">docs#MeasureTheory.LocallyIntegrableOn.integrableOn_of_isBigO_atTop</a></p>",
        "id": 438617140,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1715705759
    }
]