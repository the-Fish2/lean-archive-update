[
    {
        "content": "<p>Is there a theorem like this already in mathlib that I did not find? Or other theorems to for <code>Finset.sum</code> and <code>ofNat</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Finset.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.BigOperators.Order</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">extracted</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">Finset.sum</span> <span class=\"n\">X</span> <span class=\"n\">f</span> <span class=\"bp\">&lt;</span> <span class=\"n\">Finset.sum</span> <span class=\"n\">Y</span> <span class=\"n\">f</span>\n  <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">Finset.sum</span> <span class=\"n\">X</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Int</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">Finset.sum</span> <span class=\"n\">Y</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 418446318,
        "sender_full_name": "Malvin Gattinger",
        "timestamp": 1706389540
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"mi\">32</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">extracted</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">Finset.sum</span> <span class=\"n\">X</span> <span class=\"n\">f</span> <span class=\"bp\">&lt;</span> <span class=\"n\">Finset.sum</span> <span class=\"n\">Y</span> <span class=\"n\">f</span>\n  <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">Finset.sum</span> <span class=\"n\">X</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Int</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">Finset.sum</span> <span class=\"n\">Y</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span> <span class=\"n\">zify</span>\n</code></pre></div>",
        "id": 418448476,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706391721
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 418486054,
        "sender_full_name": "Malvin Gattinger",
        "timestamp": 1706432952
    }
]