[
    {
        "content": "<p>Think this is any use? </p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"center center center\" columnspacing=\"0.5em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>b</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munderover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow></mrow></mpadded><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow><mo stretchy=\"false\">(</mo><mo>↑</mo><mo stretchy=\"false\">)</mo></mrow></mpadded></munderover></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>M</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow><mstyle displaystyle=\"false\" scriptlevel=\"1\"><mpadded width=\"0\" lspace=\"-1width\" voffset=\"0.7em\"><mrow><mo lspace=\"0em\" rspace=\"0em\">≃</mo></mrow></mpadded></mstyle><mo fence=\"false\" stretchy=\"true\" minsize=\"1.8em\" maxsize=\"1.8em\">↑</mo><mstyle displaystyle=\"false\" scriptlevel=\"1\"><mpadded width=\"0\" voffset=\"0.7em\"><mrow><mi>e</mi></mrow></mpadded></mstyle></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow><mstyle displaystyle=\"false\" scriptlevel=\"1\"><mpadded width=\"0\" lspace=\"-1width\" voffset=\"0.7em\"><mrow><mrow></mrow></mrow></mpadded></mstyle><mo fence=\"false\" stretchy=\"true\" minsize=\"1.8em\" maxsize=\"1.8em\">↑</mo><mstyle displaystyle=\"false\" scriptlevel=\"1\"><mpadded width=\"0\" voffset=\"0.7em\"><mrow><mi>b</mi></mrow></mpadded></mstyle></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>s</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munderover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow></mrow></mpadded><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow><mo stretchy=\"false\">(</mo><mo>↑</mo><mo stretchy=\"false\">)</mo></mrow></mpadded></munderover></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>ι</mi></mstyle></mtd></mtr><mtr></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{CD}\nb(s) @&gt;{(↑)}&gt;&gt; M \\\\\n@A≃AeA @AAbA \\\\\ns @&gt;{(↑)}&gt;&gt; ι\n\\end{CD}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.7708em;vertical-align:-1.8389em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9319em;\"><span style=\"top:-5.9359em;\"><span class=\"pstrut\" style=\"height:3.151em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span><span style=\"top:-4.097em;\"><span class=\"pstrut\" style=\"height:3.151em;\"></span><span class=\"mord cd-vert-arrow\"><span class=\"sizing reset-size6 size3 mtight cd-label-left\" style=\"bottom:0.8em;\"><span class=\"mord mtight\"><span class=\"mrel mtight\">≃</span></span></span><span class=\"mord\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.151em;\"><span style=\"top:-1.966em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span class=\"delimsizinginner delim-size1\"><span>⏐</span></span></span><span style=\"top:-2.559em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span style=\"height:0.616em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='0.616em' style='width:0.6667em' viewBox='0 0 666.67 616' preserveAspectRatio='xMinYMin'><path d='M312 0 H355 V616 H312z M312 0 H355 V616 H312z'/></svg></span></span><span style=\"top:-3.167em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span class=\"delimsizinginner delim-size1\"><span>↑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.65em;\"><span></span></span></span></span></span></span><span class=\"sizing reset-size6 size3 mtight cd-label-right\" style=\"bottom:0.8em;\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span></span><span style=\"top:-2em;\"><span class=\"pstrut\" style=\"height:3.151em;\"></span><span class=\"mord mathnormal\">s</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8389em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.25em;\"></span><span class=\"arraycolsep\" style=\"width:0.25em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9319em;\"><span style=\"top:-5.9359em;\"><span class=\"pstrut\" style=\"height:3.151em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.147em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight cd-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mrel mtight\">↑</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:3em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span><span style=\"top:-2.578em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight cd-arrow-pad\"><span class=\"mord mtight\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.122em;\"><span></span></span></span></span></span></span><span style=\"top:-4.097em;\"><span class=\"pstrut\" style=\"height:3.151em;\"></span></span><span style=\"top:-2em;\"><span class=\"pstrut\" style=\"height:3.151em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.147em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight cd-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mrel mtight\">↑</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:3em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span><span style=\"top:-2.578em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight cd-arrow-pad\"><span class=\"mord mtight\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.122em;\"><span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8389em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.25em;\"></span><span class=\"arraycolsep\" style=\"width:0.25em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9319em;\"><span style=\"top:-5.9359em;\"><span class=\"pstrut\" style=\"height:3.151em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span><span style=\"top:-4.097em;\"><span class=\"pstrut\" style=\"height:3.151em;\"></span><span class=\"mord cd-vert-arrow\"><span class=\"sizing reset-size6 size3 mtight cd-label-left\" style=\"bottom:0.8em;\"><span class=\"mord mtight\"></span></span><span class=\"mord\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.151em;\"><span style=\"top:-1.966em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span class=\"delimsizinginner delim-size1\"><span>⏐</span></span></span><span style=\"top:-2.559em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span style=\"height:0.616em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='0.616em' style='width:0.6667em' viewBox='0 0 666.67 616' preserveAspectRatio='xMinYMin'><path d='M312 0 H355 V616 H312z M312 0 H355 V616 H312z'/></svg></span></span><span style=\"top:-3.167em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span class=\"delimsizinginner delim-size1\"><span>↑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.65em;\"><span></span></span></span></span></span></span><span class=\"sizing reset-size6 size3 mtight cd-label-right\" style=\"bottom:0.8em;\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span style=\"top:-2em;\"><span class=\"pstrut\" style=\"height:3.151em;\"></span><span class=\"mord mathnormal\">ι</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8389em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Basis</span>\n\n<span class=\"sd\">/-- If `b` is a basis for a `Module` over a semiring and `s` is a set of indices then the image</span>\n<span class=\"sd\">`b '' s` (a set of basis vectors) is linearly independent. Compare `LinearIndependent.image`,</span>\n<span class=\"sd\">which holds in a module over a ring. -/</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">Basis.linearIndependent_image</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Basis</span> <span class=\"n\">ι</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">LinearIndependent</span> <span class=\"n\">R</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">''</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">nontriviality</span> <span class=\"n\">R</span>\n  <span class=\"k\">let</span> <span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">≃</span> <span class=\"n\">b</span> <span class=\"bp\">''</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">Equiv.Set.image</span> <span class=\"n\">b</span> <span class=\"n\">s</span> <span class=\"n\">b.injective</span>\n  <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"n\">e.symm</span> <span class=\"k\">from</span> <span class=\"n\">funext</span> <span class=\"k\">fun</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">w</span><span class=\"o\">,</span> <span class=\"n\">hws</span><span class=\"o\">,</span> <span class=\"n\">hwx</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"n\">Function.comp_apply</span><span class=\"o\">,</span> <span class=\"n\">Function.comp_apply</span><span class=\"o\">]</span>\n    <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">hwx</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Equiv.Set.image_symm_apply</span><span class=\"o\">]]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">b.linearIndependent.comp</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">Subtype.val_injective.comp</span> <span class=\"n\">e.symm.injective</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 411514630,
        "sender_full_name": "Richard Copley",
        "timestamp": 1704554566
    },
    {
        "content": "<p>I think <code>LinearIndependent.image_of_comp</code> (and thus <code>LinearIndependent.image</code>) generalizes to semirings just fine?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">LinearIndependent.image_of_comp</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"n\">ι'</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">ι'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ι'</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">LinearIndependent</span> <span class=\"n\">R</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"n\">LinearIndependent</span> <span class=\"n\">R</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">''</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">linearIndependent_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hs</span> <span class=\"bp\">⊢</span>\n  <span class=\"n\">intros</span> <span class=\"n\">l</span> <span class=\"n\">hl</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">''</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">surjective_onto_image.hasRightInverse</span>\n  <span class=\"k\">have</span> <span class=\"n\">hi'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">congr_arg</span> <span class=\"n\">Subtype.val</span> <span class=\"o\">(</span><span class=\"n\">hi</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n  <span class=\"n\">ext</span> <span class=\"n\">j</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">FunLike.congr_fun</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">(</span><span class=\"n\">l.mapDomain</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Finsupp.total_mapDomain</span><span class=\"o\">,</span> <span class=\"n\">Function.comp</span><span class=\"o\">,</span> <span class=\"n\">hi'</span><span class=\"o\">]))</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n  <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">Finsupp.mapDomain_apply</span> <span class=\"n\">hi.injective</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n</code></pre></div>",
        "id": 411517551,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1704556887
    },
    {
        "content": "<p>Great, much better! It's in a section with a comment <code>/-! ### Properties which require `Ring R` -/</code>, so I didn't even consider that.</p>",
        "id": 411518431,
        "sender_full_name": "Richard Copley",
        "timestamp": 1704557527
    },
    {
        "content": "<p>No reason not to PR that, I think? <span class=\"user-mention\" data-user-id=\"439483\">@Andrew Yang</span>, would you care to do the honours, so that the credit goes where it is due?</p>",
        "id": 411523183,
        "sender_full_name": "Richard Copley",
        "timestamp": 1704562035
    },
    {
        "content": "<p>Unfortunately the current behavior of behavior of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearIndependent#doc\">docs#LinearIndependent</a> is pathologic for semirings. See:<br>\n<span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/.E2.9C.94.20.60E.2FL.2FF.60.20and.20.60K.2FL'.2FF.60.20isomorphic.20.3D.3E.20.60.5BE.3AL.5D.3D.5BK.3AL'.5D.60/near/408999160\">said</a>:</p>\n<blockquote>\n<p>If we really want <code>rank</code> to work with Semirings we should replace LinearIndependent by an injection from Finsupp. As it stands, Nat as a Nat-module has rank aleph0 ({1,2,3,...} is linearly independent!).</p>\n</blockquote>\n<p>So I'm not sure it's useful to generalize linear independence lemmas to semirings; if we change the definition the proofs would need small fixes.</p>",
        "id": 411528313,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1704566724
    },
    {
        "content": "<p>As far as I can tell this notion of linear algebra over semirings hasn't really been investigated - it'd be a fun experiment to try it out!</p>",
        "id": 411528455,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1704566829
    }
]