[
    {
        "content": "<p>I cannot find a lemma for this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">u'</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">v'</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyp</span> <span class=\"o\">:</span> <span class=\"n\">Sum.elim</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"n\">Sum.elim</span> <span class=\"n\">u'</span> <span class=\"n\">v'</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"n\">u'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 421219035,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1707821482
    },
    {
        "content": "<p>Also this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">sumElim_le_sumElim_iff</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LE</span> <span class=\"n\">γ</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">u'</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">v'</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Sum.elim</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">≤</span> <span class=\"n\">Sum.elim</span> <span class=\"n\">u'</span> <span class=\"n\">v'</span> <span class=\"bp\">↔</span> <span class=\"n\">u</span> <span class=\"bp\">≤</span> <span class=\"n\">u'</span> <span class=\"bp\">∧</span> <span class=\"n\">v</span> <span class=\"bp\">≤</span> <span class=\"n\">v'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">constructor</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">intro</span> <span class=\"n\">hyp</span>\n  <span class=\"bp\">·</span> <span class=\"n\">constructor</span>\n    <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">a</span>\n      <span class=\"k\">have</span> <span class=\"n\">hypa</span> <span class=\"o\">:=</span> <span class=\"n\">hyp</span> <span class=\"o\">(</span><span class=\"n\">Sum.inl</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n      <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">Sum.elim_inl</span><span class=\"o\">,</span> <span class=\"n\">Sum.elim_inl</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hypa</span>\n    <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">b</span>\n      <span class=\"k\">have</span> <span class=\"n\">hypb</span> <span class=\"o\">:=</span> <span class=\"n\">hyp</span> <span class=\"o\">(</span><span class=\"n\">Sum.inr</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n      <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">Sum.elim_inr</span><span class=\"o\">,</span> <span class=\"n\">Sum.elim_inr</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hypb</span>\n  <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">i</span>\n    <span class=\"n\">cases</span> <span class=\"n\">i</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">inl</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Sum.elim_inl</span><span class=\"o\">,</span> <span class=\"n\">Sum.elim_inl</span><span class=\"o\">]</span>\n      <span class=\"n\">exact</span> <span class=\"n\">hyp.left</span> <span class=\"n\">a</span>\n    <span class=\"bp\">|</span> <span class=\"n\">inr</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Sum.elim_inr</span><span class=\"o\">,</span> <span class=\"n\">Sum.elim_inr</span><span class=\"o\">]</span>\n      <span class=\"n\">exact</span> <span class=\"n\">hyp.right</span> <span class=\"n\">b</span>\n</code></pre></div>\n<p>Should I PR it? I didn't find it in the libraries.</p>",
        "id": 421228444,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1707825350
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">u'</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">v'</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyp</span> <span class=\"o\">:</span> <span class=\"n\">Sum.elim</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"n\">Sum.elim</span> <span class=\"n\">u'</span> <span class=\"n\">v'</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"n\">u'</span> <span class=\"o\">:=</span> <span class=\"n\">funext</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">congr_fun</span> <span class=\"n\">hyp</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n\n<span class=\"c1\">-- weird that this fails:</span>\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">u'</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">v'</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hyp</span> <span class=\"o\">:</span> <span class=\"n\">Sum.elim</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"n\">Sum.elim</span> <span class=\"n\">u'</span> <span class=\"n\">v'</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"n\">u'</span> <span class=\"o\">:=</span> <span class=\"n\">funext</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">congr</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">hyp</span> <span class=\"o\">(</span><span class=\"n\">Sum.inl</span> <span class=\"n\">x</span><span class=\"o\">)))</span> <span class=\"c1\">-- function expected `x α β`</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">sumElim_le_sumElim_iff</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LE</span> <span class=\"n\">γ</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">u'</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">v'</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Sum.elim</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">≤</span> <span class=\"n\">Sum.elim</span> <span class=\"n\">u'</span> <span class=\"n\">v'</span> <span class=\"bp\">↔</span> <span class=\"n\">u</span> <span class=\"bp\">≤</span> <span class=\"n\">u'</span> <span class=\"bp\">∧</span> <span class=\"n\">v</span> <span class=\"bp\">≤</span> <span class=\"n\">v'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">le_def</span><span class=\"o\">]</span>\n  <span class=\"n\">aesop</span>\n</code></pre></div>",
        "id": 421236877,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1707828439
    },
    {
        "content": "<p>You could add <code>Sum.elim_inj</code>, <code>Sum.elim_le_elim</code>, <code>Sum.elim_lt_elim</code>, yes.</p>",
        "id": 421256921,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707835293
    },
    {
        "content": "<p>Something like the following code should go to Mathlib?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">Sum.elim_inj</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">u'</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">v'</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Sum.elim</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"n\">Sum.elim</span> <span class=\"n\">u'</span> <span class=\"n\">v'</span> <span class=\"bp\">↔</span> <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"n\">u'</span> <span class=\"bp\">∧</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"n\">v'</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">hyp</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">⟨</span><span class=\"n\">funext</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">congr_fun</span> <span class=\"n\">hyp</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">x</span><span class=\"o\">)),</span> <span class=\"n\">funext</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">congr_fun</span> <span class=\"n\">hyp</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"n\">x</span><span class=\"o\">))⟩,</span> <span class=\"kd\">by</span> <span class=\"n\">aesop</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">Sum.elim_le_elim</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LE</span> <span class=\"n\">γ</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">u'</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">v'</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Sum.elim</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">≤</span> <span class=\"n\">Sum.elim</span> <span class=\"n\">u'</span> <span class=\"n\">v'</span> <span class=\"bp\">↔</span> <span class=\"n\">u</span> <span class=\"bp\">≤</span> <span class=\"n\">u'</span> <span class=\"bp\">∧</span> <span class=\"n\">v</span> <span class=\"bp\">≤</span> <span class=\"n\">v'</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">le_def</span><span class=\"o\">]</span>\n  <span class=\"n\">aesop</span>\n</code></pre></div>\n<p>I was unsuccessful in proving the former lemma in the same style as the latter lemma.</p>",
        "id": 421286071,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1707843393
    }
]