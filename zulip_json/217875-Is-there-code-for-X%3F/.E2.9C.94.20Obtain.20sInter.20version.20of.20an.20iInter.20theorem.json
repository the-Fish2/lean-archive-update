[
    {
        "content": "<p>Specifically Cantor's intersection theorem is written as an<code> iInter</code> but I wanted to apply it in a <code>sInter</code> version. I thought I understood the idea of switching between <code>iInter</code> and <code>sInter</code> but I failed. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> Probably I'm missing something really foolish. </p>\n<p>Any suggestions much appreciated!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Set.Lattice</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"sd\">/-- Cantor's intersection theorem - sInter version -/</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">IsCompact.nonempty_sInter_of_directed_nonempty_compact_closed</span>\n    <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hS</span> <span class=\"o\">:</span> <span class=\"n\">Set.Nonempty</span> <span class=\"n\">S</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hSd</span> <span class=\"o\">:</span> <span class=\"n\">DirectedOn</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">⊇</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hSn</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">U</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">Set.Nonempty</span> <span class=\"n\">U</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hSc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">U</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">IsCompact</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hScl</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">U</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⋂₀</span> <span class=\"n\">S</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">Nonempty</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">htd</span> <span class=\"o\">:</span> <span class=\"n\">Directed</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">↦</span> <span class=\"n\">U</span> <span class=\"bp\">⊇</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">U</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">U</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h0</span> <span class=\"o\">:=</span>  <span class=\"o\">(</span><span class=\"n\">directedOn_iff_directed.mp</span> <span class=\"n\">hSd</span><span class=\"o\">)</span> <span class=\"c1\">-- Directed (fun x x_1 ↦ x ⊇ x_1) Subtype.val</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"k\">have</span> <span class=\"n\">htn</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set.Nonempty</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">V</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:=</span> <span class=\"n\">hSn</span> <span class=\"n\">V</span> <span class=\"c1\">-- V ∈ S → Set.Nonempty V</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"k\">have</span> <span class=\"n\">htc</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IsCompact</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">V</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:=</span> <span class=\"n\">hSc</span> <span class=\"n\">V</span> <span class=\"c1\">-- V ∈ S → IsCompact V</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"k\">have</span> <span class=\"n\">htcl</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IsClosed</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">V</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h3</span> <span class=\"o\">:=</span> <span class=\"n\">hScl</span> <span class=\"n\">V</span> <span class=\"c1\">-- V ∈ S → IsClosed V</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"n\">refine</span> <span class=\"n\">Set.nonempty_iInter.mp</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n  <span class=\"n\">refine</span>\n    <span class=\"n\">IsCompact.nonempty_iInter_of_directed_nonempty_compact_closed</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">U</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">U</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"n\">htd</span> <span class=\"n\">htn</span> <span class=\"n\">htc</span> <span class=\"n\">htcl</span>\n</code></pre></div>",
        "id": 422989153,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1708684282
    },
    {
        "content": "<p>What about</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Cantor's intersection theorem - sInter version -/</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">IsCompact.nonempty_sInter_of_directed_nonempty_isCompact_isClosed</span>\n    <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hS</span> <span class=\"o\">:</span> <span class=\"n\">Set.Nonempty</span> <span class=\"n\">S</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hSd</span> <span class=\"o\">:</span> <span class=\"n\">DirectedOn</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">⊇</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hSn</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">U</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">Set.Nonempty</span> <span class=\"n\">U</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hSc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">U</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">IsCompact</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hScl</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">U</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⋂₀</span> <span class=\"n\">S</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">Nonempty</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Set.sInter_eq_iInter</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">Nonempty</span> <span class=\"n\">S</span> <span class=\"o\">:=</span> <span class=\"n\">Set.nonempty_coe_sort.mpr</span> <span class=\"n\">hS</span>\n  <span class=\"n\">exact</span> <span class=\"n\">IsCompact.nonempty_iInter_of_directed_nonempty_compact_closed</span> <span class=\"n\">_</span>\n    <span class=\"o\">(</span><span class=\"n\">DirectedOn.directed_val</span> <span class=\"n\">hSd</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"n\">hSn</span> <span class=\"n\">i</span> <span class=\"n\">i.2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"n\">hSc</span> <span class=\"n\">i</span> <span class=\"n\">i.2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"n\">hScl</span> <span class=\"n\">i</span> <span class=\"n\">i.2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>PR welcome, by the way!</p>",
        "id": 422998624,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1708688049
    },
    {
        "content": "<p>Wonderful! Thank you so much. I see I was systematically messing up the way I was transforming the <code>sInter</code> into an indexed set.</p>",
        "id": 422999654,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1708688451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"613177\">Oliver Butterley</span> has marked this topic as resolved.</p>",
        "id": 423250072,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708855240
    }
]