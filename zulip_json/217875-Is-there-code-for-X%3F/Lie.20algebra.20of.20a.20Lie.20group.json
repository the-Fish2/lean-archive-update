[
    {
        "content": "<p>I'm asking it on \"is there code for X\" but I'm pretty sure there isn't. So what I'm really asking for is whether the community has some kind of strategy for the construction of the Lie algebra structure on the tangent space at the identity of a Lie group. I have never used the manifold side of the library but my understanding is that we have Lie groups and we have the tangent space at the identity, but as far as I know we're missing the structure of the bracket.</p>\n<p>The entire construction can be done algebraically; if H is a commutative Hopf algebra over a commutative ring R then Spec(H) is an affine algebraic group scheme over Spec(R) and hence an analogue of a Lie group in the algebro-geometric category (especially if you imagine R is a field, for example the real numbers, so Spec(R) is just one point). The identity section Spec(R) -&gt; Spec(H) corresponds to the counit map H -&gt; R, and if m is its kernel then Hom_{R-mod}(m/m^2,R) (at least if R is a field) will have a Lie algebra structure on it which looks like a project I would be much clearer about how to tackle. NB The algebraic construction raises the issue of proving that the construction commutes with the analytification functor, something which I suspect will not be treated in the literature because \"how could it be any other way\". </p>\n<p>For the definition of an automorphic representation, something I plan on working on this week, we will need the analytic (Lie group) version of everything, and also the definition of the action of the Lie algebra on C^infty functions on the Lie group via first order differential operators. I am very unclear about how much work this project is in practice.</p>\n<p>Could someone even suggest a roadmap to this basic construction?</p>",
        "id": 443467794,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717852920
    },
    {
        "content": "<p>All this should be pretty direct:</p>\n<ul>\n<li>First, define the adjoint representation: for fixed <code>g</code>, consider <code>h -&gt; g h g^{-1}</code>. It's a smooth map, stabilizing the identity, so its derivative <code>ad h</code> is a linear map of the Lie algebra (aka the tangent space at the identity).</li>\n<li>Check that, given <code>v</code> in the Lie algebra, then <code>h -&gt; ad h v</code> is smooth. Therefore, its derivative at the identity is a linear map from the Lie algebra to the tangent space of the Lie algebra, which is canonically identified with the Lie algebra. This is the Lie bracket.</li>\n<li>Check that it satisfies all the axioms of a Lie algebra. This will probably be a little bit cumbersome, but that's the way it has to be, I think. For the Jacobi identity, you probably need to know that the second derivative is symmetric, but this is true for analytic manifolds over any field (not sure we have that, but since we have explicit formulas for the iterated derivative of analytic maps it shouldn't be hard).</li>\n<li>To let the Lie algebra act on smooth functions, just let <code>L_v f (g)</code> be the derivative of  the function <code>f</code> at the point <code>g</code> applied to the vector <code>g v</code> (well, the derivative at the identity of left multiplication by <code>g</code>, applied to the vector <code>v</code>).</li>\n</ul>",
        "id": 443473302,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1717855650
    },
    {
        "content": "<p>It's just notation, but maybe write <code>Ad g</code> for the derivative at <code>1_G</code> of  <code>h -&gt; g h g ^ {-1}</code>  and then <code>ad : Lie(G) -&gt; End(Lie (G))</code> for the derivative at <code>1_G</code> of <code>Ad : G -&gt; GL(Lie(G))</code> ? One can also see tangent vectors at <code>1_G</code> as left-invariant vector fields / derivations of the coordinate ring, depending on your point of view, and then define the bracket as a commutator of those. The upshot is that this gives Jacobi for free.</p>",
        "id": 443483257,
        "sender_full_name": "Flo (Florent Schaffhauser)",
        "timestamp": 1717861684
    },
    {
        "content": "<p>Wasn't there a mathlib3 PR that did left-invariant <del>differential forms</del> derivation?</p>",
        "id": 443501659,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1717867934
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LeftInvariantDerivation#doc\">docs#LeftInvariantDerivation</a></p>",
        "id": 443504817,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1717869599
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sébastien Gouëzel</span> Care has to be taken re: infinite dimensional manifolds, where the Lie algebra at the identity (consisting of differential operators) cannot in general be identified with the tangent vectors (members of the model vector space, or equivalence classes of smooth curves through the identity).</p>",
        "id": 443505720,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1717870038
    },
    {
        "content": "<p>In the current mathlib, the latter kind of tangent vectors do not form a Lie algebra.</p>",
        "id": 443505972,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1717870166
    },
    {
        "content": "<p>There was a thread some months ago about properly developing infinite dimensional manifolds, but I have neither the time nor the expertise at the moment to envision a road map.</p>",
        "id": 443506425,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1717870392
    },
    {
        "content": "<p>I only need Lie algebras for real reductive groups which are by definition finite-dimensional</p>",
        "id": 443528904,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717885181
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> can you tell your students that any of them who are coming to my course and want to work on the Lie algebra of a Lie group should DM me on Zulip and ask for access to the private course channel?</p>",
        "id": 443529057,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717885323
    },
    {
        "content": "<p>I did, but I think that the students that are planning to come are already part of that channel.</p>",
        "id": 443596162,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1717940578
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"416472\">Winston Yin (尹維晨)</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Lie.20algebra.20of.20a.20Lie.20group/near/443504817\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LeftInvariantDerivation#doc\">docs#LeftInvariantDerivation</a></p>\n</blockquote>\n<p>Sorry for taking so long to reply <span class=\"user-mention\" data-user-id=\"416472\">@Winston Yin (尹維晨)</span> . This is exactly what I want! And thank you to Patrick Massot for making this clear to me :-) </p>\n<p>The final step is to write down the Lie algebra morphism from the real Lie algebra of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> to the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span>-endomorphisms of the smooth complex-valued functions on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> (which has a complex Lie algebra structure <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>a</mi><mi>b</mi><mo>−</mo><mi>b</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">[a,b]=ab-ba</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">ab</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">ba</span></span></span></span> where multiplication is function composition). I can't formalise the statement unfortunately, because I don't know my way around the manifold library, but I know I can definitely take it from there.</p>",
        "id": 444055451,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1718125480
    }
]