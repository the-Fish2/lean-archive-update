[
    {
        "content": "<p>I think it would be a good idea to define ideals for semigroups/monoids, and then define also such prime ideals. Of course, an ideal for a <code>Monoid M</code> is just <code>SubMulAction M M</code>, but there are some results that are just for ideals, and not general <code>SubMulAction M N</code>.  My question is about the name, since I have not find another name in the literature, and I guess we don't want to be called just Ideals. How about MonoidIdeals or any other similar option?</p>",
        "id": 420788406,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1707560224
    },
    {
        "content": "<p>LeftIdeal :-)</p>",
        "id": 420788513,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707560339
    },
    {
        "content": "<p>Actually I guess ideal shouldn't be mentioned at all because in my head at least it implies closed under addition</p>",
        "id": 420788561,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707560397
    },
    {
        "content": "<p>Nevertheless, it seems to be customary, in the theory of monoids, to speak of ideals. </p>\n<p>That poses again the question of having a reverse documentation of mathlib: given a mathematical topic, how is it addressed in mathlib, or how should it be? (Example: limits are addressed from filters, vector spaces from modules, etc.) <br>\nIf you already know a bit of the relevant part of mathlib, you can guess what file to open and study its documentation, otherwise, nopeâ€¦</p>",
        "id": 420794229,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707566085
    },
    {
        "content": "<p>How about <code>Monoid.Ideal</code>?</p>",
        "id": 420794244,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707566110
    },
    {
        "content": "<p>But am I right in thinking that it's only closed under multiplication on one side? Is <code>Monoid.LeftIdeal</code> more appropriate?</p>",
        "id": 420797199,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707569074
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Prime.20ideals.20for.20semigroups.2Fmonoids/near/420794229\">said</a>:</p>\n<blockquote>\n<p>That poses again the question of having a reverse documentation of mathlib: given a mathematical topic, how is it addressed in mathlib, or how should it be?</p>\n</blockquote>\n<p>The <a href=\"https://leanprover-community.github.io/mathlib-overview.html\">Mathlib overview</a> and <a href=\"https://leanprover-community.github.io/mathematics_in_lean/\">#mil</a> are meant to do that. But of course they are very incomplete. Contributing  to the overview is very easy, you only have to edit a file. Each item is only a link to a declaration but then the module docstring is meant to give a lot more information. Contributing to these docstrings is also a very valuable kind of contribution.</p>",
        "id": 420810666,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1707580505
    },
    {
        "content": "<p>In fact, <code>Ideal</code>is technically also a left ideal, as it is defined as <code>Submodule R R</code>. So my proposal is to follow the same type of construction.</p>",
        "id": 420921563,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1707685374
    }
]