[
    {
        "content": "<p>If the domain is finite-dimensional: say</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">LinearEquiv.of_injective_finiteDimensional</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NormedField</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">SeminormedAddCommGroup</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NormedSpace</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">FiniteDimensional</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n    <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"n\">E</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">Function.Injective</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">LinearEquiv</span> <span class=\"o\">(</span><span class=\"n\">RingHom.id</span> <span class=\"bp\">𝕜</span><span class=\"o\">)</span> <span class=\"n\">E</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 417075881,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1705833683
    },
    {
        "content": "<p><code>by exact? using hf</code> answers this</p>",
        "id": 417086136,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1705843007
    },
    {
        "content": "<p>(with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearEquiv.ofInjectiveEndo#doc\">docs#LinearEquiv.ofInjectiveEndo</a>)</p>",
        "id": 417086167,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1705843049
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"634338\">Michael Rothgang</span> has marked this topic as resolved.</p>",
        "id": 417088995,
        "sender_full_name": "Notification Bot",
        "timestamp": 1705845383
    }
]