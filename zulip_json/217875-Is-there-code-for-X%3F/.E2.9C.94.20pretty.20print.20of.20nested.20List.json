[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">NestedList</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n<span class=\"bp\">|</span> <span class=\"n\">elem</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">NestedList</span> <span class=\"n\">α</span>\n<span class=\"bp\">|</span> <span class=\"n\">list</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">NestedList</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">NestedList</span> <span class=\"n\">α</span>\n\n<span class=\"c1\">-- For NestedList, I want to provide a Repr implementation.</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Std</span>\n\n<span class=\"kn\">protected</span> <span class=\"kd\">def</span> <span class=\"n\">NestedList.repr</span> <span class=\"o\">[</span><span class=\"n\">Repr</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">NestedList</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Format</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">ToFormat</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">repr</span><span class=\"o\">⟩</span>\n  <span class=\"k\">match</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">elem</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">reprPrec</span> <span class=\"n\">x</span> <span class=\"n\">n</span>\n  <span class=\"bp\">|</span> <span class=\"n\">list</span> <span class=\"n\">as</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"c1\">-- I have tried to imitate Repr's implementation for List, but have not been successful.</span>\n    <span class=\"c1\">-- this code raise an error! :(</span>\n    <span class=\"n\">Format.bracket</span> <span class=\"s2\">\"[\"</span> <span class=\"o\">(</span><span class=\"n\">Format.joinSep</span> <span class=\"n\">as</span> <span class=\"o\">(</span><span class=\"s2\">\",\"</span> <span class=\"bp\">++</span> <span class=\"n\">Format.line</span><span class=\"o\">))</span> <span class=\"s2\">\"]\"</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">[</span><span class=\"n\">Repr</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Repr</span> <span class=\"o\">(</span><span class=\"n\">NestedList</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">reprPrec</span> <span class=\"o\">:=</span> <span class=\"n\">NestedList.repr</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">NestedList</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">sample</span> <span class=\"o\">:</span> <span class=\"n\">NestedList</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n  <span class=\"n\">list</span> <span class=\"o\">[</span><span class=\"n\">elem</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">list</span> <span class=\"o\">[</span><span class=\"n\">elem</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">elem</span> <span class=\"mi\">3</span><span class=\"o\">],</span> <span class=\"n\">elem</span> <span class=\"mi\">4</span><span class=\"o\">]</span>\n\n<span class=\"c\">/-</span>\n<span class=\"cm\">What I want is:</span>\n\n<span class=\"cm\">[1, [2, 3], 4]</span>\n<span class=\"cm\">-/</span>\n<span class=\"k\">#eval</span> <span class=\"n\">sample</span>\n</code></pre></div>",
        "id": 427130603,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1710685133
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">protected</span> <span class=\"n\">partial</span> <span class=\"kd\">def</span> <span class=\"n\">NestedList.repr</span> <span class=\"o\">[</span><span class=\"n\">Repr</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">NestedList</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Format</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">ToFormat</span> <span class=\"o\">(</span><span class=\"n\">NestedList</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨(</span><span class=\"n\">NestedList.repr</span> <span class=\"bp\">·</span> <span class=\"mi\">0</span><span class=\"o\">)⟩</span>\n  <span class=\"k\">match</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">elem</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">reprPrec</span> <span class=\"n\">x</span> <span class=\"n\">n</span>\n  <span class=\"bp\">|</span> <span class=\"n\">list</span> <span class=\"n\">as</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Format.bracket</span> <span class=\"s2\">\"[\"</span> <span class=\"o\">(</span><span class=\"n\">Format.joinSep</span> <span class=\"n\">as</span> <span class=\"o\">(</span><span class=\"s2\">\",\"</span> <span class=\"bp\">++</span> <span class=\"n\">Format.line</span><span class=\"o\">))</span> <span class=\"s2\">\"]\"</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">[</span><span class=\"n\">Repr</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Repr</span> <span class=\"o\">(</span><span class=\"n\">NestedList</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">reprPrec</span> <span class=\"o\">:=</span> <span class=\"n\">NestedList.repr</span>\n</code></pre></div>",
        "id": 427178262,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710697747
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Thank you very much!!!!</p>",
        "id": 427265745,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1710721244
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 427265972,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710721305
    }
]