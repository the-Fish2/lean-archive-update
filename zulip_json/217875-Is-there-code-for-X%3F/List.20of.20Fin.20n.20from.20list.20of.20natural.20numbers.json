[
    {
        "content": "<p>Hi all - I have a list <code>a</code> of natural numbers, and I know it is bounded above by some constant <code>n</code>. I want to convert this to a list of <code>Fin n</code>. I have as a hypothesis</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">h</span> <span class=\"o\">:</span>  <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span>\n</code></pre></div>\n<p>I want to do something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Fin.mk</span> <span class=\"n\">i</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>Where the underscore is, I need to apply <code>h</code> and the fact that  <code>x ∈ a</code> ... which is only true because we're mapping the function onto <code>a</code>.</p>\n<p>Is there a neat way to do this?</p>\n<p>My other thought was to use option types and clean the final list later, but that feels so gross</p>",
        "id": 420910349,
        "sender_full_name": "Hannah Fechtner",
        "timestamp": 1707675179
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=List.attach#doc\">docs#List.attach</a> is the general approach here</p>",
        "id": 420911028,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707675805
    },
    {
        "content": "<p>For anyone looking at this later, List.attach works fine, but List.pmap is easier to use induction with :)</p>",
        "id": 429283097,
        "sender_full_name": "Hannah Fechtner",
        "timestamp": 1711340081
    }
]