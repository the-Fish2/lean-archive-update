[
    {
        "content": "<p>How to prove the following?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Filter</span> <span class=\"n\">Topology</span> <span class=\"k\">in</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">Tendsto</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span><span class=\"o\">[</span><span class=\"bp\">≠</span><span class=\"o\">]</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"n\">z</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Tendsto</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 410893884,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1704223402
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> (Filter.Tendsto ?f (nhdsWithin ?w ?_) (nhds ?z)), (Filter.Tendsto ?f (nhds ?w) (nhds ?z))</p>",
        "id": 410893898,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1704223410
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> nothing found</p>",
        "id": 410893901,
        "sender_full_name": "loogle",
        "timestamp": 1704223411
    },
    {
        "content": "<p>Why not just rewrite <code>h₂</code>?</p>",
        "id": 410894019,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704223467
    },
    {
        "content": "<p>So, how to prove</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Filter</span> <span class=\"n\">Topology</span> <span class=\"k\">in</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">Tendsto</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span><span class=\"o\">[</span><span class=\"bp\">≠</span><span class=\"o\">]</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">w</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n    <span class=\"n\">Tendsto</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">w</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>then? (Still no match in Loogle.)</p>",
        "id": 410894454,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1704223702
    },
    {
        "content": "<p>Ah: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=continuousWithinAt_compl_self#doc\">docs#continuousWithinAt_compl_self</a> .</p>",
        "id": 410894515,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1704223742
    },
    {
        "content": "<p>Need to write this as a continuity statement (which is what I came from originally).</p>",
        "id": 410894558,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1704223767
    },
    {
        "content": "<p>You can also rewrite using <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=nhdsWithin_compl_singleton_sup_pure#doc\">docs#nhdsWithin_compl_singleton_sup_pure</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.tendsto_sup#doc\">docs#Filter.tendsto_sup</a>, and then use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=tendsto_pure_nhds#doc\">docs#tendsto_pure_nhds</a></p>",
        "id": 410896608,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1704224808
    }
]