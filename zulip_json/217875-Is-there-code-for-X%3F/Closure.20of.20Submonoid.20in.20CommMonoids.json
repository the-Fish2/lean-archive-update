[
    {
        "content": "<p>I am not sure something like this is in Mathlib4. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Submonoid.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommMonoid</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Submonoid</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Submonoid.Closure</span><span class=\"o\">:</span> <span class=\"n\">Submonoid</span> <span class=\"n\">G</span> <span class=\"n\">where</span>\n  <span class=\"n\">carrier</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"bp\">|</span> <span class=\"bp\">∃</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">r</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">}</span>\n  <span class=\"n\">one_mem'</span><span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"mi\">1</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">Submonoid.one_mem</span> <span class=\"n\">S</span>\n  <span class=\"n\">mul_mem'</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">let</span> <span class=\"o\">⟨</span> <span class=\"n\">ra</span> <span class=\"o\">,</span><span class=\"n\">ha</span> <span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">a</span>\n    <span class=\"k\">let</span> <span class=\"o\">⟨</span> <span class=\"n\">rb</span> <span class=\"o\">,</span><span class=\"n\">hb</span> <span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">b</span>\n    <span class=\"n\">use</span> <span class=\"n\">ra</span> <span class=\"bp\">*</span> <span class=\"n\">rb</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_mul_mul_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Submonoid.mul_mem</span> <span class=\"n\">S</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">Submonoid.Closure.mem</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"n\">G</span><span class=\"o\">):</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">Submonoid.Closure</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">r</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span> <span class=\"o\">:=</span> <span class=\"n\">Iff.rfl</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">Submonoid.Closure.sub</span><span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">Submonoid.Closure</span> <span class=\"n\">S</span><span class=\"o\">):=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">SetLike.le_def</span><span class=\"o\">]</span>\n  <span class=\"n\">intro</span> <span class=\"n\">a</span> <span class=\"n\">ha</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Submonoid.Closure.mem</span><span class=\"o\">]</span>\n  <span class=\"n\">use</span> <span class=\"mi\">1</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">mul_one</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">ha</span>\n</code></pre></div>",
        "id": 419085413,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1706720747
    },
    {
        "content": "<p>I think <code>closure</code> generally refers to the subobject generated by a subset. I would call this <code>Submonoid.saturation</code> or something like that.</p>",
        "id": 419085895,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1706720901
    },
    {
        "content": "<p>And I do recall seeing something along these lines in mathlib... maybe somewhere in the localization library?</p>",
        "id": 419085941,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1706720918
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Subgroup.Saturated#doc\">docs#Subgroup.Saturated</a> that says the \"saturation\" isn't bigger.</p>",
        "id": 419087023,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1706721281
    },
    {
        "content": "<p>But it seems saturated isn't used elsewhere.</p>",
        "id": 419087131,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1706721316
    },
    {
        "content": "<p>That seems to be a weaker condition than the condition being discussed (<code>∀ ⦃a b : α⦄, b ∈ s → a ∣ b → a ∈ s</code>, which also appeared <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Working.20with.20polynomial.20factorizations/near/276145008\">here</a>). I guess it's what people use to talk about a saturated lattice in a real vector space, while the version discussed here is used as in a <a href=\"https://en.wikipedia.org/wiki/Multiplicatively_closed_set\">saturated multiplicatively closed set</a>.</p>",
        "id": 419087778,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1706721541
    },
    {
        "content": "<p>Is it <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsLocalization.invSubmonoid#doc\">docs#IsLocalization.invSubmonoid</a> ?</p>",
        "id": 419088715,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1706721832
    },
    {
        "content": "<p>I mean, related</p>",
        "id": 419088905,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1706721872
    },
    {
        "content": "<p>No sorry</p>",
        "id": 419088945,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1706721885
    },
    {
        "content": "<p>It is in some sense related, yes. Indirectly...</p>",
        "id": 419092368,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1706723006
    },
    {
        "content": "<p>In fact, the idea is that the localization w.r.t a submonoid  and w.r.t. its saturation are isomorphic (the natural map is an isomorphism).</p>",
        "id": 419093022,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1706723233
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 419093889,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1706723498
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315546\">Xavier Xarles</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Closure.20of.20Submonoid.20in.20CommMonoids/near/419093022\">said</a>:</p>\n<blockquote>\n<p>In fact, the idea is that the localization w.r.t a submonoid  and w.r.t. its saturation are isomorphic (the natural map is an isomorphism).</p>\n</blockquote>\n<p>I think we have this stated somehow. I have to go now, but there is file called localization_localozation or something similar</p>",
        "id": 419095473,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1706723969
    },
    {
        "content": "<p>In <a href=\"https://en.wikipedia.org/wiki/Localization_(commutative_algebra)\">Localization</a> there is a part about the saturation of a submonoid. It explains exactly what I was interested (two submonoids give \"the same\" localization iff they have the same saturation). <br>\nDo you think it can be interesting to have it in mathlib?</p>",
        "id": 419193426,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1706775224
    },
    {
        "content": "<p>Yes this seems to be an interesting result; I didn't know the \"only if\" direction. I think for IsLocalization you can state that <code>IsLocalization M S</code>, <code>IsLocalization N S</code>, and <code>M.saturation = N.saturation</code> satisfy the two-out-of-three property, i.e. any two imply the third. For LocalizationMap it would be trickier to state (something like an isomorphism forming an edge of a commuting triangle) because the map is bundled.</p>",
        "id": 419293930,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1706807420
    },
    {
        "content": "<p>Note that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Subgroup.Saturated#doc\">docs#Subgroup.Saturated</a> is called \"root closed\" in <a href=\"https://link.springer.com/article/10.1007/s00233-019-10022-3\">this paper</a>, and I think we should rename. However, \"root\" suggests multiplicative, and I'm not sure what a good additive name is.<br>\n<a href=\"/user_uploads/3121/E_KJ1q-h2nW5jOJlwwnyTqPC/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/E_KJ1q-h2nW5jOJlwwnyTqPC/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/E_KJ1q-h2nW5jOJlwwnyTqPC/image.png\"></a></div>",
        "id": 419878781,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1707150263
    },
    {
        "content": "<p><code>div_closed</code>?</p>",
        "id": 419920495,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707164073
    },
    {
        "content": "<p>But what's wrong with saturated? I think this is a standard term (in the sense that I've heard the term before and I'd never heard of \"root closed\" until I read this thread)</p>",
        "id": 419920631,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707164131
    },
    {
        "content": "<p>The issue is that it clashes with the notion of <a href=\"https://en.wikipedia.org/wiki/Multiplicatively_closed_set\">saturated multiplicative closed set (aka submonoid)</a>.</p>",
        "id": 419921715,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1707164554
    },
    {
        "content": "<p>In <a href=\"https://arxiv.org/pdf/2107.03154.pdf\">this paper</a>, proposition 1.11, the authors call it pure (also propose radical closed). See <br>\n<a href=\"/user_uploads/3121/eIX8yLLdj5Cy6V7CA8gSZhhH/Captura-de-pantalla-2024-02-07-094929.png\">ipure.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/eIX8yLLdj5Cy6V7CA8gSZhhH/Captura-de-pantalla-2024-02-07-094929.png\" title=\"ipure.png\"><img src=\"/user_uploads/3121/eIX8yLLdj5Cy6V7CA8gSZhhH/Captura-de-pantalla-2024-02-07-094929.png\"></a></div>",
        "id": 420204293,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1707295943
    },
    {
        "content": "<p>I like root-closed because it really is a name which makes you guess the definition. My comment earlier about \"what's wrong with saturated\" is in retrospect silly -- saturated is I think consistently used in the literature to mean \"closed under divisors\", whereas this means \"closed under roots\".</p>",
        "id": 420206449,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707296776
    }
]