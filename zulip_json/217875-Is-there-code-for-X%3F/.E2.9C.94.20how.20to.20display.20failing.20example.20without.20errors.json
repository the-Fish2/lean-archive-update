[
    {
        "content": "<p>I am working on eliminating errors in the code examples in the lean4 metaprogramming book without compromising the intent of the code examples.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">declare_syntax_cat</span> <span class=\"n\">boolean_expr</span>\n<span class=\"n\">syntax</span> <span class=\"s2\">\"⊥\"</span> <span class=\"o\">:</span> <span class=\"n\">boolean_expr</span>\n\n<span class=\"c1\">-- I want to illustrate this without actually making an error.</span>\n<span class=\"k\">#check</span> <span class=\"bp\">⊥</span>\n\n<span class=\"bp\">#</span><span class=\"n\">check_failure</span> <span class=\"bp\">⊥</span> <span class=\"c1\">-- does not work</span>\n\n<span class=\"bp\">#</span><span class=\"n\">guard_msgs</span> <span class=\"k\">in</span> <span class=\"k\">#check</span> <span class=\"bp\">⊥</span> <span class=\"c1\">-- does not work</span>\n</code></pre></div>",
        "id": 434455495,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1713573918
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 434593176,
        "sender_full_name": "Notification Bot",
        "timestamp": 1713710074
    }
]