[
    {
        "content": "<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>  be topological spaces, with a zero in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>. <br>\nThe set  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">C</mi><mi>c</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathscr C_c(X;Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathscr\" style=\"margin-right:0.1689em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1689em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> of continuous compactly supported functions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">f\\colon X\\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> has a natural topology, for which a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><msub><mi mathvariant=\"script\">C</mi><mi>c</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">T\\colon\\mathscr C_c(X;Y)\\to Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord\"><span class=\"mord mathscr\" style=\"margin-right:0.1689em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1689em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> is continuous if and only if, for every compact subset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, the restriction <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>K</mi></msub><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><msub><mi mathvariant=\"script\">C</mi><mi>K</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">T_K\\colon \\mathscr C_K(X;Y)\\to Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord\"><span class=\"mord mathscr\" style=\"margin-right:0.1689em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1689em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> is continuous, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">C</mi><mi>K</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathscr C_K(X;Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathscr\" style=\"margin-right:0.1689em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1689em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> is the set of continuous functions from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> whose support is contained in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>.</p>\n<p>Does Mathlib know about that?</p>",
        "id": 429075376,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1711195654
    },
    {
        "content": "<p>Just to be clear, you are endowing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">C</mi><mi>K</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathscr C_K(X; Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathscr\" style=\"margin-right:0.1689em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1689em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> with the compact open topology, right? That part has been formalized in mathlib. But I'm not aware of a topology on compactly supported functions in mathlib.<br>\n<span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> will know</p>",
        "id": 429077829,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1711197774
    },
    {
        "content": "<p>I'm not sure I can endow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">C</mi><mi>K</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathscr C_K(X;Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathscr\" style=\"margin-right:0.1689em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1689em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> with the compact open topology, because that requires <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> to be a uniform space.<br>\nIn fact, I intended to take simply the product topology, but they probably coincide when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> is a uniform space.</p>",
        "id": 429078407,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1711198265
    },
    {
        "content": "<p>Here is something I could come up with (with a sorry to prove that the topology is the correct one)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Defs.Induced</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Constructions</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Support</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ContinuousMapWithSupport</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span> <span class=\"bp\">//</span> <span class=\"n\">Continuous</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">tsupport</span> <span class=\"n\">f</span> <span class=\"bp\">≤</span> <span class=\"n\">S</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">notation</span><span class=\"o\">:</span><span class=\"mi\">9000</span> <span class=\"s2\">\"C[\"</span> <span class=\"n\">X</span> <span class=\"s2\">\", \"</span> <span class=\"n\">Y</span> <span class=\"s2\">\" | \"</span> <span class=\"n\">S</span> <span class=\"s2\">\"]\"</span><span class=\"bp\">=&gt;</span> <span class=\"n\">ContinuousMapWithSupport</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">S</span> <span class=\"n\">Y</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">TopologicalSpace.continuousMapWithSupport</span>\n    <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">TopologicalSpace</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"bp\">|</span> <span class=\"n\">S</span><span class=\"o\">])</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">refine</span> <span class=\"n\">TopologicalSpace.induced</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">f.val</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">inferInstance</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ContinuousMapWithCompactSupport</span>\n    <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n    <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span> <span class=\"bp\">//</span> <span class=\"n\">Continuous</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">HasCompactSupport</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">notation</span><span class=\"o\">:</span><span class=\"mi\">9000</span> <span class=\"s2\">\"Cc[\"</span> <span class=\"n\">X</span> <span class=\"s2\">\", \"</span> <span class=\"n\">Y</span> <span class=\"s2\">\"]\"</span><span class=\"bp\">=&gt;</span> <span class=\"n\">ContinuousMapWithCompactSupport</span> <span class=\"n\">X</span> <span class=\"n\">Y</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">toContinuousMapWithCompactSupport</span>\n    <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n    <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hK</span> <span class=\"o\">:</span> <span class=\"n\">IsCompact</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"bp\">|</span> <span class=\"n\">K</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">Cc</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"n\">f.val</span><span class=\"o\">,</span> <span class=\"n\">f.prop.1</span><span class=\"o\">,</span> <span class=\"n\">IsCompact.of_isClosed_subset</span> <span class=\"n\">hK</span> <span class=\"o\">(</span><span class=\"n\">isClosed_tsupport</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">f.prop.2</span> <span class=\"o\">⟩</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">TopologicalSpace</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"bp\">|</span> <span class=\"n\">S</span><span class=\"o\">])</span> <span class=\"o\">:=</span>\n  <span class=\"n\">TopologicalSpace.continuousMapWithSupport</span> <span class=\"n\">S</span> <span class=\"n\">Y</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">TopologicalSpace.continuousMapWithCompactSupport</span>\n    <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"n\">TopologicalSpace</span> <span class=\"o\">(</span><span class=\"n\">Cc</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">])</span> <span class=\"o\">:=</span>\n  <span class=\"n\">TopologicalSpace.coinduced</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(⟨</span><span class=\"n\">K</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">Σ</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span> <span class=\"bp\">//</span> <span class=\"n\">IsCompact</span> <span class=\"n\">S</span><span class=\"o\">}),</span> <span class=\"n\">C</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span><span class=\"n\">Y</span> <span class=\"bp\">|</span> <span class=\"n\">K.val</span><span class=\"o\">])</span>\n    <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">toContinuousMapWithCompactSupport</span> <span class=\"n\">K.prop</span> <span class=\"n\">f</span>  <span class=\"o\">:</span> <span class=\"n\">Cc</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">]))</span>\n    <span class=\"n\">instTopologicalSpaceSigma</span>\n\n\n<span class=\"kd\">example</span>\n    <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">Cc</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"bp\">→</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Continuous</span> <span class=\"n\">T</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hK</span> <span class=\"o\">:</span> <span class=\"n\">IsCompact</span> <span class=\"n\">K</span><span class=\"o\">),</span>\n      <span class=\"n\">Continuous</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">toContinuousMapWithCompactSupport</span> <span class=\"n\">hK</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 429081223,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1711200767
    },
    {
        "content": "<p>I have a feeling <span class=\"user-mention\" data-user-id=\"412682\">@Moritz Doll</span> might have been working with such a topology, but maybe not.</p>",
        "id": 429085604,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1711204113
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Topology.20of.20space.20of.20compactly.20supported.20functions/near/429078407\">said</a>:</p>\n<blockquote>\n<p>I'm not sure I can endow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">C</mi><mi>K</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathscr C_K(X;Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathscr\" style=\"margin-right:0.1689em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1689em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> with the compact open topology, because that requires <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> to be a uniform space.</p>\n</blockquote>\n<p>No there is no suh requirement, the compact open topology can be defined for topological codomain. This is a bit of a miracle because the key property is that it coincides with the topology of compact convergence when the codomain is uniform, but Mathlib knows about it.</p>\n<blockquote>\n<p>In fact, I intended to take simply the product topology, but they probably coincide when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> is a uniform space.</p>\n</blockquote>\n<p>I'm pretty sure these do not coincide unless you ask for some equicontinuity.</p>",
        "id": 429097383,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711213680
    },
    {
        "content": "<p>Indeed we do not have this (unless I missed something recently), but I have been thinking about it for the purpose of distribution theory (the vanilla one, I don't need you need anything like this for the tempered case) where you also need to take into account some differentiablility. You can have a look at <a href=\"https://github.com/leanprover-community/mathlib4/compare/master...AD_test_functions\">https://github.com/leanprover-community/mathlib4/compare/master...AD_test_functions</a> (warning: very out of date) to see my first experiments with this kind of thing.<br>\nEDIT: It's important to note that for test functions you only require the universal property for linear map to a LCTVS, which also makes things slightly more annoying.</p>",
        "id": 429097889,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711214095
    },
    {
        "content": "<p>In any case, I think I already said that somewhere, but for me the most annoying part of all this is the boilerplate associated to a new type. If someone just takes care of it I'll happily define the topology and prove the universal property !</p>",
        "id": 429098157,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711214300
    },
    {
        "content": "<p>In the above code, the topology on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">C</mi><mi>K</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathscr C_K(X;Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathscr\" style=\"margin-right:0.1689em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1689em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> is the product topology, which is not the good one. This point corrected, it remains to have a convenient way to define the inductive limit topology, which can be defined via <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Topology.coinduced#doc\">docs#Topology.coinduced</a>, because that function requires a single type. So one has to write the correct Sigma type.</p>",
        "id": 429098810,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1711214824
    },
    {
        "content": "<p>I couldn't find the compact open topology, just the topology of compact convergence, which needs a uniform structure on the target.</p>",
        "id": 429099021,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1711214989
    },
    {
        "content": "<p>Ah, right, I didn’t look at the code snippet <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span> <br>\nThe right way to define the inductive limit topology is to take the supremum of the coinduced topologies. From there the universal property will follow quite easily from the library (I’m not at my computer right now, but I can tinker with it later)</p>",
        "id": 429099556,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711215400
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContinuousMap#doc\">docs#ContinuousMap</a> is endowed by default with the compact open topology, which is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContinuousMap.compactOpen#doc\">docs#ContinuousMap.compactOpen</a></p>",
        "id": 429099591,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711215448
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span> , this works as you said :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Defs.Induced</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Constructions</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Support</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.CompactOpen</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Sets.Compacts</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">ContinuousMap</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">Compacts</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">ContinuousMapWithSupport</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">//</span> <span class=\"n\">tsupport</span> <span class=\"n\">f</span> <span class=\"bp\">≤</span> <span class=\"n\">S</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">notation</span><span class=\"o\">:</span><span class=\"mi\">9000</span> <span class=\"s2\">\"C(\"</span> <span class=\"n\">X</span> <span class=\"s2\">\", \"</span> <span class=\"n\">Y</span> <span class=\"s2\">\" | \"</span> <span class=\"n\">S</span> <span class=\"s2\">\")\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">ContinuousMapWithSupport</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">S</span> <span class=\"n\">Y</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">TopologicalSpace.continuousMapWithSupport</span> <span class=\"o\">:</span>\n    <span class=\"n\">TopologicalSpace</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"bp\">|</span> <span class=\"n\">S</span><span class=\"o\">))</span>  <span class=\"o\">:=</span> <span class=\"n\">induced</span> <span class=\"n\">Subtype.val</span> <span class=\"n\">compactOpen</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">ContinuousMapWithCompactSupport</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">//</span> <span class=\"n\">HasCompactSupport</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">notation</span><span class=\"o\">:</span><span class=\"mi\">9000</span> <span class=\"s2\">\"Cₖ(\"</span> <span class=\"n\">X</span> <span class=\"s2\">\", \"</span> <span class=\"n\">Y</span> <span class=\"s2\">\")\"</span><span class=\"bp\">=&gt;</span> <span class=\"n\">ContinuousMapWithCompactSupport</span> <span class=\"n\">X</span> <span class=\"n\">Y</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">toContinuousMapWithCompactSupport</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"bp\">|</span> <span class=\"n\">K</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">Cₖ</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"n\">f.val</span><span class=\"o\">,</span>\n   <span class=\"n\">IsCompact.of_isClosed_subset</span> <span class=\"n\">K.isCompact</span> <span class=\"o\">(</span><span class=\"n\">isClosed_tsupport</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">f.prop</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">Y</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">TopologicalSpace.continuousMapWithCompactSupport</span> <span class=\"o\">:</span>\n    <span class=\"n\">TopologicalSpace</span> <span class=\"o\">(</span><span class=\"n\">Cₖ</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n  <span class=\"n\">iSup</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">K</span> <span class=\"bp\">↦</span> <span class=\"n\">coinduced</span> <span class=\"o\">(</span><span class=\"n\">toContinuousMapWithCompactSupport</span> <span class=\"n\">K</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">continuousMapWithSupport</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">))</span>\n\n<span class=\"kn\">local</span> <span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">Cₖ</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">continuousMapWithCompactSupport</span>\n\n<span class=\"kn\">local</span> <span class=\"kd\">instance</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">C</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span> <span class=\"bp\">|</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">continuousMapWithSupport</span> <span class=\"n\">S</span> <span class=\"n\">Y</span>\n\n<span class=\"kd\">example</span>\n    <span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">Cₖ</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Continuous</span> <span class=\"n\">T</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">Compacts</span> <span class=\"n\">X</span><span class=\"o\">),</span>\n      <span class=\"n\">Continuous</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">toContinuousMapWithCompactSupport</span> <span class=\"n\">K</span> <span class=\"n\">Y</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">constructor</span>\n  <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">hT</span> <span class=\"n\">K</span>\n    <span class=\"n\">apply</span> <span class=\"n\">Continuous.comp</span> <span class=\"n\">hT</span>\n    <span class=\"n\">apply</span> <span class=\"n\">continuous_iSup_rng</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">continuous_iff_coinduced_le</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">le_rfl</span>\n  <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">hT</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">continuous_iSup_dom</span><span class=\"o\">]</span>\n    <span class=\"n\">intro</span> <span class=\"n\">K</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">continuous_iff_coinduced_le</span><span class=\"o\">,</span> <span class=\"n\">coinduced_compose</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">continuous_iff_coinduced_le</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">hT</span> <span class=\"n\">K</span>\n</code></pre></div>",
        "id": 429103534,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1711218535
    },
    {
        "content": "<p>For your last proof you can just do:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span>\n    <span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Z</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">Cₖ</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Continuous</span> <span class=\"n\">T</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">Compacts</span> <span class=\"n\">X</span><span class=\"o\">),</span>\n      <span class=\"n\">Continuous</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">toContinuousMapWithCompactSupport</span> <span class=\"n\">K</span> <span class=\"n\">Y</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">continuous_iSup_dom</span><span class=\"o\">,</span> <span class=\"n\">continuous_coinduced_dom</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 429180368,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711274657
    }
]