[
    {
        "content": "<p>We don't seem to have the fact that <code>abs</code> is measurable (eg. for the reals). It is not difficult to prove, see</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedRing</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableNeg</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">OpensMeasurableSpace</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">OrderClosedTopology</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">SecondCountableTopology</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">measurable_abs</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">↦</span> <span class=\"bp\">|</span><span class=\"n\">x</span><span class=\"bp\">|</span> <span class=\"o\">:=</span> <span class=\"n\">Measurable.max</span> <span class=\"n\">measurable_id'</span> <span class=\"n\">measurable_neg</span>\n</code></pre></div>\n<p>I am not sure about the hypotheses though since I just added everything that Lean was complaining about <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 417202393,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1705920646
    },
    {
        "content": "<p>You should just need <code>MeasurableSup₂</code> and <code>MeasurableNeg</code> (and you can multiplicativise it.</p>",
        "id": 417218686,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705926530
    },
    {
        "content": "<p>Ok, so this is the latest version: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Lattice</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSup₂</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">MeasurableInv</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">to_additive</span> <span class=\"o\">(</span><span class=\"n\">attr</span> <span class=\"o\">:=</span> <span class=\"n\">measurability</span><span class=\"o\">)</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">measurable_mabs</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">↦</span> <span class=\"n\">mabs</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Measurable.sup</span> <span class=\"n\">measurable_id'</span> <span class=\"n\">measurable_inv</span>\n</code></pre></div>\n<p>But, now, I don't know where to put it since the first file to contain all the necessary imports is <code>Mathlib.MeasureTheory.Constructions.BorelSpace.Basic</code> and it's already quite large and does not look like a good fit.</p>",
        "id": 417230631,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1705930726
    },
    {
        "content": "<p>new files are cheap!</p>",
        "id": 417230838,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1705930808
    },
    {
        "content": "<p>I always feel bad about making a new file to put so little...</p>",
        "id": 417230919,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1705930841
    },
    {
        "content": "<p>Put it where <code>MeasurableSup₂</code> is defined.</p>",
        "id": 417231523,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705931056
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/measurable_abs/near/417231523\">said</a>:</p>\n<blockquote>\n<p>Put it where <code>MeasurableSup₂</code> is defined.</p>\n</blockquote>\n<p><code>MeasurableInv</code> is unknown there...</p>",
        "id": 417231801,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1705931147
    },
    {
        "content": "<p>Then create <code>MeasureTheory.Order.Group.Lattice</code></p>",
        "id": 417232521,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705931397
    },
    {
        "content": "<p>... and move <code>MeasureTheory.Lattice</code> to <code>MeasureTheory.Order.Lattice</code></p>",
        "id": 417232605,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705931412
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/9912\">#9912</a></p>",
        "id": 417244334,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1705934695
    }
]