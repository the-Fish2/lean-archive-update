[
    {
        "content": "<p>Do we have a consistent way to talk about finitely-presented algebraic objects?</p>",
        "id": 431317550,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712238454
    },
    {
        "content": "<p>I don't know, but the theory for modules is completely done by hand.</p>",
        "id": 431320275,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1712239239
    },
    {
        "content": "<p>What is the name of the condition saying that a module is finitely-presented?</p>",
        "id": 431320432,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712239276
    },
    {
        "content": "<p>I'm mostly looking for consistent names</p>",
        "id": 431320457,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712239285
    },
    {
        "content": "<p>I am on mobile, but iirc is FinitelyPresented</p>",
        "id": 431320802,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1712239371
    },
    {
        "content": "<p>oh I found <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=RingHom.FinitePresentation#doc\">docs#RingHom.FinitePresentation</a> et al.</p>",
        "id": 431320957,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712239423
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Module.FinitelyPresented#doc\">docs#Module.FinitelyPresented</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Module.FinitePresentation#doc\">docs#Module.FinitePresentation</a> come up short though</p>",
        "id": 431321129,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712239468
    },
    {
        "content": "<p>Ah sorry, I meant finitely presented algebras, not modules</p>",
        "id": 431321644,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1712239601
    },
    {
        "content": "<p>I don't think we have those</p>",
        "id": 431321682,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1712239613
    },
    {
        "content": "<p>Right now I'm mostly interested in finitely-presented rings anyway :)</p>",
        "id": 431322670,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712239873
    },
    {
        "content": "<p>FWIW, I think it would be worthwhile to introduce a \"small\" model for finitely-presented rings (and other algebraic objects), and show that any ring is a colimit of suitable finitely-presented rings. In the case of rings, one approach would be: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">CommRingCat₀</span> <span class=\"n\">where</span>\n  <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n  <span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">Ideal</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">MvPolynomial</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">ℤ</span>\n</code></pre></div>\n<p>Thoughts?</p>",
        "id": 431326145,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712240849
    },
    {
        "content": "<p>Note the key property that <code>CommRingCat₀ : Type</code> and that it's a small category</p>",
        "id": 431326330,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712240887
    },
    {
        "content": "<p>It could be “compact”, because they are the compact objects on the category of modules.</p>",
        "id": 432960351,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1712946397
    },
    {
        "content": "<p>Yes I agree but the type of all compact objects is still “large” from the pov of universe parameters</p>",
        "id": 432962601,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712947285
    },
    {
        "content": "<p>I think we should instead use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.EssentiallySmall#doc\">docs#CategoryTheory.EssentiallySmall</a> and hide the <code>CommRingCat₀</code> you mentioned as an implementation detail.</p>",
        "id": 432977610,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1712953941
    },
    {
        "content": "<p>yeah, probably. How good is the api for essentially small cats? I've never really used it.</p>",
        "id": 432977702,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712953980
    },
    {
        "content": "<p>In fact, I wonder if it makes sense to develop an API for an \"essentially small subcategory\" coming from a fully faithful functor <code>S \\func C</code> where <code>S</code> is small. Once thing that comes up quite often is representing objects of <code>C</code> as filtered colimits of compact objects, and having to deal with just one functor, as opposed to an equivalence followed by a fully faithful inclusion of some subcategory, is probably easier to manage.</p>",
        "id": 432978666,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712954437
    },
    {
        "content": "<p>Does <code>Algebra.FinitePresentation</code> generalize to non-commutative rings by using the tensor algebra instead of multivariate polynomials, or does that not then yield the right meaning when specialize to the commutative case?</p>",
        "id": 432991331,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712960977
    },
    {
        "content": "<p>I think finitely presented should be admits an epi from a free functor applied to a finite set. But I don’t see as much use for either notion in non commutative algebra.</p>",
        "id": 432992334,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1712961643
    },
    {
        "content": "<p>There’s a general notion of finitelypresented/compactobject from universal algebra. It’s a finitely generated free thing modulo a finitely generated congruence relation IIRC. So for noncomm rings, it should indeed be the tensor algebra modulo a f.g. two-sided ideal</p>",
        "id": 432995104,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712963514
    },
    {
        "content": "<p>So I guess for that definition to work we need some notion of <code>RingCon.FG</code>?</p>",
        "id": 432995258,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712963612
    },
    {
        "content": "<p>Yeah I suppose. The categorical notion of compactness is much more general of course</p>",
        "id": 432995272,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712963632
    },
    {
        "content": "<p>In these algebraic cases it’s equivalent to being finitely presented</p>",
        "id": 432995321,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712963647
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306577\">Matthew Ballard</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Finitely.20Presented.20Things/near/432992334\">said</a>:</p>\n<blockquote>\n<p>I think finitely presented should be admits an epi from a free functor applied to a finite set. But I don’t see as much use for either notion in non commutative algebra.</p>\n</blockquote>\n<p>I don’t think this is the right notion in general</p>",
        "id": 432999205,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712966665
    },
    {
        "content": "<p>The “correct” categorical notion is that X is f.p. if <code>Hom(X,-)</code> commutes with filtered colimits.</p>",
        "id": 432999361,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712966790
    },
    {
        "content": "<p>Right. I was thinking finitely generated</p>",
        "id": 433000155,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1712967479
    }
]