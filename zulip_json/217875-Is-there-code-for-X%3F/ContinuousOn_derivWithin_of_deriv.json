[
    {
        "content": "<p>Any suggestions for how to do something like the below, that is, replace <code>derivWithin</code> with <code>deriv</code> (given that I only care about both on the same set as \"Within\"...)?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">ContinuousOn_derivWithin_of_deriv</span> <span class=\"o\">(</span><span class=\"n\">φ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ContinuousOn</span> <span class=\"o\">(</span><span class=\"n\">deriv</span> <span class=\"n\">φ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Set.uIcc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"n\">ContinuousOn</span> <span class=\"o\">(</span><span class=\"n\">derivWithin</span> <span class=\"n\">φ</span> <span class=\"o\">(</span><span class=\"n\">Set.uIcc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">Set.uIcc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 430180872,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1711670638
    },
    {
        "content": "<p>Is this true without assuming differentiability? E.g. one could conceive of a function that is nowhere differentiable but right differentiable at 0 with right derivative 1, then it is differentiable within <code>Icc 0 1</code> at 0, it has <code>deriv</code> identically 0 but <code>derivWithin</code> is discontinuous at 0.</p>",
        "id": 430182019,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711671456
    },
    {
        "content": "<p>Ok sure, let's add differentiability:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">ContinuousOn_derivWithin_of_deriv</span> <span class=\"o\">{</span><span class=\"n\">φ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">φDiff</span> <span class=\"o\">:</span> <span class=\"n\">ContDiffOn</span> <span class=\"n\">ℝ</span> <span class=\"mi\">1</span> <span class=\"n\">φ</span> <span class=\"o\">(</span><span class=\"n\">Set.uIcc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"n\">ContinuousOn</span> <span class=\"o\">(</span><span class=\"n\">derivWithin</span> <span class=\"n\">φ</span> <span class=\"o\">(</span><span class=\"n\">Set.uIcc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">Set.uIcc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 430261760,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1711721358
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> ContDiffOn, ContinuousOn, derivWithin</p>",
        "id": 430264464,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1711722620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> ContDiffOn, ContinuousOn, derivWithin</p>",
        "id": 430264622,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1711722694
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/Calculus/ContDiff/Basic.html#ContDiffOn.continuousOn_derivWithin\">ContDiffOn.continuousOn_derivWithin</a></p>",
        "id": 430264624,
        "sender_full_name": "loogle",
        "timestamp": 1711722695
    },
    {
        "content": "<p>Loogle is amazing, and our library is also amazing :-)</p>",
        "id": 430264759,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1711722738
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">inst</span> <span class=\"o\">:</span> <span class=\"n\">NontriviallyNormedField</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">uF</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n <span class=\"o\">[</span><span class=\"n\">inst_2</span> <span class=\"o\">:</span> <span class=\"n\">NormedSpace</span> <span class=\"bp\">𝕜</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">∞</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f₂</span> <span class=\"o\">:</span> <span class=\"bp\">𝕜</span> <span class=\"bp\">→</span> <span class=\"n\">F</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s₂</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"bp\">𝕜</span><span class=\"o\">},</span> <span class=\"n\">ContDiffOn</span> <span class=\"bp\">𝕜</span> <span class=\"n\">n</span> <span class=\"n\">f₂</span> <span class=\"n\">s₂</span> <span class=\"bp\">→</span> <span class=\"n\">UniqueDiffOn</span> <span class=\"bp\">𝕜</span> <span class=\"n\">s₂</span> <span class=\"bp\">→</span>\n <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ContinuousOn</span> <span class=\"o\">(</span><span class=\"n\">derivWithin</span> <span class=\"n\">f₂</span> <span class=\"n\">s₂</span><span class=\"o\">)</span> <span class=\"n\">s₂</span>\n</code></pre></div>\n<p>Pretty close...</p>",
        "id": 430264805,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1711722754
    },
    {
        "content": "<p>(It won't cover exactly your use case, as for <code>a = b</code> then <code>uIcc a b</code>is not a set of unique differentiability, but since any function is continuous on a singleton you should be fine)</p>",
        "id": 430264946,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1711722826
    }
]