[
    {
        "content": "<p>Is there any theorem related to the existence proof of Rubik's cube solution?<br>\nSomething in group theory, maybe.<br>\nSomething providing an existence proof and list of solutions. It doesn't matter whether it's in lean or not.</p>",
        "id": 411679206,
        "sender_full_name": "chenjulang",
        "timestamp": 1704696141
    },
    {
        "content": "<p>Can you write down the precise theorem statement that you are after?</p>",
        "id": 411680022,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1704696757
    },
    {
        "content": "<p>No, i cannot even state the theorem</p>",
        "id": 411680632,
        "sender_full_name": "chenjulang",
        "timestamp": 1704697208
    },
    {
        "content": "<p>I was thinking Mathlib may has something to do with Rubik's Cube</p>",
        "id": 411680715,
        "sender_full_name": "chenjulang",
        "timestamp": 1704697258
    },
    {
        "content": "<p>Something in Group Theory, and i can climb on it</p>",
        "id": 411680775,
        "sender_full_name": "chenjulang",
        "timestamp": 1704697295
    },
    {
        "content": "<p>Can you state the theorem informally? What is \"the existence proof of Rubik\"?</p>",
        "id": 411680792,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1704697314
    },
    {
        "content": "<p>Maybe what state of a cube can be solved? What is the Iff (Necessary and Sufficient Condition).</p>",
        "id": 411680910,
        "sender_full_name": "chenjulang",
        "timestamp": 1704697387
    },
    {
        "content": "<p>And its most complex moves is under 20(or 26), I was thinking this can be proved.</p>",
        "id": 411681038,
        "sender_full_name": "chenjulang",
        "timestamp": 1704697477
    },
    {
        "content": "<p>All the movements of a cube can be descriped in a \"state graph\", right?</p>",
        "id": 411681176,
        "sender_full_name": "chenjulang",
        "timestamp": 1704697566
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Is.20there.20any.20theorem.20related.20to.20the.20existence.20proof.20of.20Rubik/near/411681038\">said</a>:</p>\n<blockquote>\n<p>And its most complex moves is under 20(or 26), I was thinking this can be proved.</p>\n</blockquote>\n<p>This is something that can be stated in Lean.</p>",
        "id": 411681269,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1704697646
    },
    {
        "content": "<p>Great!</p>",
        "id": 411681288,
        "sender_full_name": "chenjulang",
        "timestamp": 1704697664
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Is.20there.20any.20theorem.20related.20to.20the.20existence.20proof.20of.20Rubik/near/411680910\">said</a>:</p>\n<blockquote>\n<p>Maybe what state of a cube can be solved? What is the Iff (Necessary and Sufficient Condition).</p>\n</blockquote>\n<p>How do you want to describe the possible states. You can not simply list all solvable states. Because that list would be gigantic.</p>",
        "id": 411681297,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1704697674
    },
    {
        "content": "<p>emm...Yeah, but we dont need to list all the \"Perm n\"(for example n=100). We may find the road to the goal only, maybe?</p>",
        "id": 411681425,
        "sender_full_name": "chenjulang",
        "timestamp": 1704697752
    },
    {
        "content": "<p>And considering the most complex road is less than 26 moves, it is not really really big , right?</p>",
        "id": 411681547,
        "sender_full_name": "chenjulang",
        "timestamp": 1704697837
    },
    {
        "content": "<p>i know it is hard even in traditional maths</p>",
        "id": 411681602,
        "sender_full_name": "chenjulang",
        "timestamp": 1704697878
    },
    {
        "content": "<p>Something about  providing and proving an algorithm. (something called Kociemba)</p>",
        "id": 411681840,
        "sender_full_name": "chenjulang",
        "timestamp": 1704698065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Is.20there.20any.20theorem.20related.20to.20the.20existence.20proof.20of.20Rubik/near/411681425\">said</a>:</p>\n<blockquote>\n<p>emm...Yeah, but we dont need to list all the \"Perm n\"(for example n=100). We may find the road to the goal only, maybe?</p>\n</blockquote>\n<p>In that case I don't know what the statement is that you are after...</p>",
        "id": 411683311,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1704698932
    },
    {
        "content": "<p>i dont know either. I think i was looking for an algorithm to solve rubik's cube in lean. And Lean is good at proving things, it may be able to prove the algorithm feasible.</p>",
        "id": 411683571,
        "sender_full_name": "chenjulang",
        "timestamp": 1704699111
    },
    {
        "content": "<p>Proving the existence of an algorithm is \"easy\", because \"brute force\" is an algorithm that works. But if you want an efficient algorithm, then this is going to be a really hard project.</p>",
        "id": 411683731,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1704699200
    },
    {
        "content": "<p>For a start you might want to prove that the Cube can be solved in 52 moves (Thistlethwaite's)</p>",
        "id": 411683812,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1704699248
    },
    {
        "content": "<p>Ok, thanks for advising <span aria-label=\"smiling face with hearts\" class=\"emoji emoji-1f970\" role=\"img\" title=\"smiling face with hearts\">:smiling_face_with_hearts:</span></p>",
        "id": 411684306,
        "sender_full_name": "chenjulang",
        "timestamp": 1704699542
    },
    {
        "content": "<p>The size of the group generated by moves allowed in the Rubik's cube is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">43252003274489856000</span><span class=\"bp\">.</span>\n</code></pre></div>\n<p>This is therefore also the number of solvable configurations.  While this number is much smaller than</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">48</span><span class=\"bp\">!</span> <span class=\"bp\">=</span> <span class=\"mi\">12413915592536072670862289047373375038521486354677760000000000</span>\n</code></pre></div>\n<p>it is still probably not very practical to simply list all the solvable elements and argue on them separately.</p>",
        "id": 411687098,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1704700967
    },
    {
        "content": "<p>(Information taken from <a href=\"https://en.wikipedia.org/wiki/Rubik%27s_Cube_group\">Wikipedia</a>.)</p>",
        "id": 411687147,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1704700994
    },
    {
        "content": "<p>It would be lovely to implement Schreier-Sims!</p>\n<p>Here's a 1-page version of solving the Rubik's cube (=understanding a subgroup of S_n given by generators): <a href=\"https://www.math.toronto.edu/~drorbn/Talks/CUMC-0807/NCGE.pdf\">https://www.math.toronto.edu/~drorbn/Talks/CUMC-0807/NCGE.pdf</a></p>\n<p>It would be tricky to set up nicely, but not particularly harder than Gaussian elimination or Smith Normal Form.</p>",
        "id": 411693076,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1704703759
    },
    {
        "content": "<p>There was some work done on formalizing the Rubik's cube group in Lean 3 by <span class=\"user-mention\" data-user-id=\"322237\">@Kendall Frey</span>: <a href=\"https://github.com/kendfrey/rubiks-cube-group\">https://github.com/kendfrey/rubiks-cube-group</a></p>",
        "id": 411807763,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1704744286
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 411852665,
        "sender_full_name": "chenjulang",
        "timestamp": 1704767232
    },
    {
        "content": "<p>Try this too, this is in LEAN4.<br>\n<a href=\"https://github.com/leanprover-community/ProofWidgets4/blob/main/ProofWidgets/Demos/Rubiks.lean\">https://github.com/leanprover-community/ProofWidgets4/blob/main/ProofWidgets/Demos/Rubiks.lean</a></p>",
        "id": 411853556,
        "sender_full_name": "chenjulang",
        "timestamp": 1704767792
    },
    {
        "content": "<p>And this:<br>\n<a href=\"https://github.com/AlexDuchnowski/rubiks-cube/tree/main/RubiksCube\">https://github.com/AlexDuchnowski/rubiks-cube/tree/main/RubiksCube</a></p>",
        "id": 411853937,
        "sender_full_name": "chenjulang",
        "timestamp": 1704768007
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/XhVtg3JtXUgyR4D4KinFpCB4/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/XhVtg3JtXUgyR4D4KinFpCB4/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/XhVtg3JtXUgyR4D4KinFpCB4/image.png\"></a></div>",
        "id": 411855612,
        "sender_full_name": "chenjulang",
        "timestamp": 1704769040
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Is.20there.20any.20theorem.20related.20to.20the.20existence.20proof.20of.20Rubik/near/411693076\">said</a>:</p>\n<blockquote>\n<p>It would be lovely to implement Schreier-Sims!</p>\n</blockquote>\n<p>I couldn't resist: <a href=\"https://github.com/leanprover-community/mathlib4/tree/schreier_sims\">branch#schreier_sims</a> has the basics of the Schreier-Sims algorithm (algorithm is there, some sorries about invariants needed in the algorithm, and none of the theorems about it).</p>\n<p>It can cope with the Rubik's cube, computing the size of the group correctly just being shown the generators, and it can determine membership. The data structures would need a little updating in order to solve the word problem, but the computation is already happening.</p>\n<p>It would be lovely to get this polished up and usable, but I probably won't do this myself. If anyone would like to adopt it (it could be a great project for someone?) please do. I'm happy to talk through what should be done.</p>",
        "id": 411908328,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1704797010
    },
    {
        "content": "<p>It has a <code>partial</code> step in the algorithm that would be easy to make total. It would be fun (but perhaps unrealistic?) to see if Lean could compute the size of the Rubik's cube group by <code>rfl</code>!</p>",
        "id": 411908641,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1704797114
    }
]