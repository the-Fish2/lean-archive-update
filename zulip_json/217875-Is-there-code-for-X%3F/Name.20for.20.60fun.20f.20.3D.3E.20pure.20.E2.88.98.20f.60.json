[
    {
        "content": "<p>The function <code>fun f =&gt; pure âˆ˜ f</code>, which appears in <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=map_eq_bind_pure_comp#doc\">docs#map_eq_bind_pure_comp</a> , is pretty basic, but I would like to give it a name. Is this function already defined somewhere? Does it have a common name?</p>",
        "id": 433277814,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1713184150
    },
    {
        "content": "<p><code>comp pure</code></p>",
        "id": 433277964,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713184197
    },
    {
        "content": "<p>That's another way to construct that function, and given how short that is, maybe nobody has ever seen the need to give it a name. But I wanted to ask, just to make sure.</p>",
        "id": 433278851,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1713184440
    },
    {
        "content": "<p>I don't think I've seen it show up in practice very much</p>",
        "id": 433279261,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713184556
    },
    {
        "content": "<p>That function defines what one of the functors for the Kleisli adjunction does to morphisms. I'm not sure that has a name, and I couldn't find a name for it in mathlib or Lean.</p>\n<p>The composition for the Kleisli category is defined in core Lean as <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Bind.kleisliLeft#doc\">docs#Bind.kleisliLeft</a>, with notation <code>&lt;=&lt;</code> (one of the \"fish\" operators)</p>",
        "id": 433310491,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713192349
    }
]