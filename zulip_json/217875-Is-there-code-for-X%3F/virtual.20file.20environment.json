[
    {
        "content": "<p>Is it possible to create an environment within the same file as if the files were switched?</p>\n<p>For example, is it possible to virtually ensure that a name defined with the <code>private</code> command is invisible to another file within the same file?</p>",
        "id": 446085937,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1718977277
    },
    {
        "content": "<p>No, not really. Every elaborator session runs in a separate process, and lean uses a lot of global variables so you can't just pause elaboration, recursively call the frontend on a completely separate file, and then go back to elaborating the original file. Lean could plausibly support features that act as though it was in a separate module, like changing the <code>mainModule</code> name in the elaborator state or removing <code>private</code> declarations from name resolution, but there is not currently much need for this (it would be a significant amount of work) and it would probably have to come with a significant amount of other design.</p>\n<p>For what it's worth, this feature does exist in Rust, in the form of module blocks: you normally use <code>mod foo;</code> and then put the code in the <code>foo.rs</code> file but you can also use <code>mod foo { ... }</code> and put all the code in the <code>...</code> instead, and it acts exactly the same as if it was a separate file.</p>",
        "id": 446201803,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719017855
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Thank you!!</p>",
        "id": 446213853,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1719026509
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 446213859,
        "sender_full_name": "Notification Bot",
        "timestamp": 1719026519
    },
    {
        "content": "<p>This would be a useful feature for testing things with <code>initialize</code>, which currently resist attempts to capture in a single-file mwe</p>",
        "id": 446218202,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719029973
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as unresolved.</p>",
        "id": 446222433,
        "sender_full_name": "Notification Bot",
        "timestamp": 1719033151
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> what is <code>initiatile</code>? I dont know the command</p>",
        "id": 446222452,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1719033169
    },
    {
        "content": "<p>Typo, sorry</p>",
        "id": 446235344,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719040197
    }
]