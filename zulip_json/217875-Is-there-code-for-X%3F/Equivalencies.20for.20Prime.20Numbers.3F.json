[
    {
        "content": "<p>What are some equivalencies for prime numbers that have been encoded in Lean? Are there any that are known to mathematics that haven't been encoded in Lean? </p>\n<p>I tried looking via <a href=\"http://moogle.ai\">moogle.ai</a> but, the way some of that stuff was expressed made me wonder if I was looking at equivalencies for prime numbers or some other objects that are called \"prime\".</p>",
        "id": 430398629,
        "sender_full_name": "Jonatas Miguel",
        "timestamp": 1711812551
    },
    {
        "content": "<p>Can you give an example of a statement you are looking for?</p>",
        "id": 430398729,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711812642
    },
    {
        "content": "<p>An equivalency that can break primes up into summative parts. Something like \"for all q, q in Primes iff there exists a, b such that q = a + b and some-other-stuff\"-ish.</p>",
        "id": 430399753,
        "sender_full_name": "Jonatas Miguel",
        "timestamp": 1711813619
    },
    {
        "content": "<p>It's difficult to answer without a precise statement. If you write a precise mathematical statement we can help finding it in the library, or proving it</p>",
        "id": 430400215,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711814018
    },
    {
        "content": "<p>Hmm, I suppose I misunderstood how searching would work. Is there no way to do a search with a portion of the thing we're trying to look for? I suppose I'm trying to search with only some of the statement because I assume that however I have the statement now it may not be expressed exactly that way elsewhere. At the very least I would expect the portion that I wrote above to be a part of whatever exists though. But, that's just an assumption from someone that hasn't worked on this stuff as extensively as others.</p>\n<p>I appreciate your assistance <span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> but if I'm going to have to write out the full statement to search for it, I may just try to do the work in Lean myself at that point I think. I've been wanting to practice working with Lean more, and hopefully this would keep me motivated to do that.</p>",
        "id": 430406443,
        "sender_full_name": "Jonatas Miguel",
        "timestamp": 1711819644
    },
    {
        "content": "<p>I may be misunderstanding your goal. If you want to see characterisations of being prime you can use loogle and look for \"prime\", \"iff\"</p>",
        "id": 430406566,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711819789
    },
    {
        "content": "<p>It is surely possible to look for a partial statement, but we need more information to help</p>",
        "id": 430406648,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711819861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> \"prime\", \"iff\"</p>",
        "id": 430407731,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1711820859
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Std/Data/Nat/Gcd.html#Nat.coprime_iff_gcd_eq_one\">Nat.coprime_iff_gcd_eq_one</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Std/Data/Nat/Gcd.html#Nat.coprime_mul_iff_left\">Nat.coprime_mul_iff_left</a>, and <a href=\"https://loogle.lean-lang.org/?q=%22prime%22%2C%20%22iff%22\">244 more</a></p>",
        "id": 430407732,
        "sender_full_name": "loogle",
        "timestamp": 1711820860
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> Nat.Prime, \"iff\"</p>",
        "id": 430407739,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1711820876
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Nat/Prime.html#Nat.irreducible_iff_nat_prime\">Nat.irreducible_iff_nat_prime</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Nat/Prime.html#Nat.prime_iff\">Nat.prime_iff</a>, and <a href=\"https://loogle.lean-lang.org/?q=Nat.Prime%2C%20%22iff%22\">120 more</a></p>",
        "id": 430407742,
        "sender_full_name": "loogle",
        "timestamp": 1711820877
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> and <span class=\"user-mention\" data-user-id=\"479359\">@Michael Stoll</span> thanks, that's what I was trying to look for. I wanted to know the different ways that primes have been expressed as equivalencies. I have one in mind and was wondering if it was already formalized or even part of mathematical literature. I'm looking through these search results now. Apologies if it felt like I was being difficult.</p>",
        "id": 430407974,
        "sender_full_name": "Jonatas Miguel",
        "timestamp": 1711821082
    },
    {
        "content": "<p>This is maybe more on target:<br>\n<span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> |- Nat.Prime _ &lt;-&gt; _</p>",
        "id": 430408106,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1711821193
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Nat/Prime.html#Nat.prime_iff\">Nat.prime_iff</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Nat/Prime.html#Nat.prime_iff_prime_int\">Nat.prime_iff_prime_int</a>, and <a href=\"https://loogle.lean-lang.org/?q=%7C-%20Nat.Prime%20_%20%3C-%3E%20_\">8 more</a></p>",
        "id": 430408107,
        "sender_full_name": "loogle",
        "timestamp": 1711821194
    },
    {
        "content": "<p>So, these searches would help tell me if what I'm looking for exists in Lean. I am aware that not every part of mathematics has been formalized with Lean. How do you then search mathematical literature for the same kind of thing? Are there tools that are publicly available to me that I could use to try to do this search?</p>",
        "id": 430408775,
        "sender_full_name": "Jonatas Miguel",
        "timestamp": 1711821783
    },
    {
        "content": "<p>Ok, so, just finished looking through those search results (thanks again for those), and it didn't seem like there was anything expressed like what I was searching for. I think I'll make an effort to formalize and prove in Lean the statement I have then. If it's a well known result within mathematics, I'm sure someone can notify me about that fact if/when I post that and I'll add credit where it's due.</p>",
        "id": 430413326,
        "sender_full_name": "Jonatas Miguel",
        "timestamp": 1711826014
    },
    {
        "content": "<p>What <em>are</em> you searching for? It still sounds like you have more information than you are providing to the \"search engine\" here</p>",
        "id": 430426739,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1711840057
    }
]