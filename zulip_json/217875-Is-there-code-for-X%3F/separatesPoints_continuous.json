[
    {
        "content": "<p>Do we have that in reasonable spaces continuous real-valued functions separate points?</p>\n<p>This is a direct consequence of Urysohn's lemma <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=exists_continuous_zero_one_of_isClosed#doc\">docs#exists_continuous_zero_one_of_isClosed</a>, but I expected to find this special case conclusion spelled with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.SeparatesPoints#doc\">docs#Set.SeparatesPoints</a>, since that notion exists. I ended up not needing this, but I was wondering if it exists and if it should exist.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.UrysohnsLemma</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Complex.Abs</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Set</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">separatesPoints_continuous_of_normalSpace_of_T1Space</span> <span class=\"o\">[</span><span class=\"n\">NormalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">T1Space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"n\">SeparatesPoints</span> <span class=\"o\">(</span><span class=\"n\">Continuous</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">x_ne_y</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">f_eq_zero</span><span class=\"o\">,</span> <span class=\"n\">f_eq_one</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span>\n    <span class=\"n\">exists_continuous_zero_one_of_isClosed</span> <span class=\"o\">(</span><span class=\"n\">isClosed_singleton</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">isClosed_singleton</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">y</span><span class=\"o\">))</span>\n      <span class=\"o\">(</span><span class=\"n\">disjoint_singleton.mpr</span> <span class=\"n\">x_ne_y</span><span class=\"o\">)</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">f.continuous</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">aesop</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 430510853,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1711922202
    },
    {
        "content": "<p>Interestingly, <code>#minimize_imports</code> told me that importing <code>Mathlib.Topology.UrysohnsLemma</code> was not good enough, and I certainly wanted <code>Mathlib.Data.Complex.Abs</code>, too. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> I probably did (although removing that second import doesn't break anything...).</p>",
        "id": 430511215,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1711922509
    },
    {
        "content": "<p>I don't think we have any spelling phrased in terms of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.SeparatesPoints#doc\">docs#Set.SeparatesPoints</a>, but I just want to point out that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=T35Space#doc\">docs#T35Space</a> is enough.</p>",
        "id": 430524703,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1711935270
    },
    {
        "content": "<p>Ok, so:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.CompletelyRegular</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Set</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">separatesPoints_continuous_of_T35Space</span> <span class=\"o\">[</span><span class=\"n\">T35Space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n    <span class=\"n\">SeparatesPoints</span> <span class=\"o\">(</span><span class=\"n\">Continuous</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">x_ne_y</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">f_cont</span><span class=\"o\">,</span> <span class=\"n\">f_zero</span><span class=\"o\">,</span> <span class=\"n\">f_one</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span>\n    <span class=\"n\">CompletelyRegularSpace.completely_regular</span> <span class=\"n\">x</span> <span class=\"o\">{</span><span class=\"n\">y</span><span class=\"o\">}</span> <span class=\"n\">isClosed_singleton</span> <span class=\"n\">x_ne_y</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">continuous_subtype_val.comp</span> <span class=\"n\">f_cont</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">aesop</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 430673701,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1712010001
    },
    {
        "content": "<p>And although I don't need it now, I decided to open PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/11831\">#11831</a>, since I'd still expect this spelling to be found in the library.</p>",
        "id": 430674681,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1712010566
    },
    {
        "content": "<p>Thank for working on my file <span class=\"user-mention\" data-user-id=\"373986\">@Kalle Kytölä</span> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> This actually nudged me to polish some code I hadn't shared.</p>\n<p>I would like to prove that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=stoneCechUnit#doc\">docs#stoneCechUnit</a> is a dense embedding for a T35Space X. I have sketched a proof that it's injective (<a href=\"https://github.com/leanprover-community/mathlib4/pull/12536\">#12536</a>). Feedback welcome <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 436192683,
        "sender_full_name": "Matias Heikkilä",
        "timestamp": 1714452795
    },
    {
        "content": "<p>Let me know if I can in some way help getting some feedback on <a href=\"https://github.com/leanprover-community/mathlib4/pull/12536\">#12536</a> <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 437109333,
        "sender_full_name": "Matias Heikkilä",
        "timestamp": 1714913829
    },
    {
        "content": "<p>Thanks! I left a comment.</p>",
        "id": 437226396,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714987820
    }
]