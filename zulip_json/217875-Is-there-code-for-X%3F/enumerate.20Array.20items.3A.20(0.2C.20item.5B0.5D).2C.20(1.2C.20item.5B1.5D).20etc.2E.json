[
    {
        "content": "<p>Is there a way to enumerate the items of a list or an array nicely, similar to Python's <code>enumerate</code>?<br>\nEnabling something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">List</span><span class=\"w\"> </span><span class=\"n\">Int</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">do</span>\n<span class=\"w\">  </span><span class=\"n\">for</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">enumerate</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"k\">do</span>\n<span class=\"w\">    </span><span class=\"c1\">-- real code here</span>\n<span class=\"w\">    </span><span class=\"k\">let</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"mi\">42</span>\n</code></pre></div>",
        "id": 440635887,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716643242
    },
    {
        "content": "<p>I <em>do</em> know work-arounds; this is merely a matter of convenience. Things coming to my mind</p>\n<ul>\n<li>iterating over the indices of the array</li>\n<li>can I <code>zip</code> with the natural numbers, as a list? Not sure if iterators are lazy in Lean...</li>\n</ul>",
        "id": 440636014,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716643326
    },
    {
        "content": "<p>to un-#XY: I want to iterate over all lines in a file and have the line number at hand.<br>\nSure, I <em>can</em> write these are a for loop and manually increment a counter, no problem.<br>\nBut sometimes, writing more functional code would feel nicer.</p>",
        "id": 440636056,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716643366
    },
    {
        "content": "<p>Are you looking for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=List.enum#doc\">docs#List.enum</a> ?</p>",
        "id": 440636331,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716643568
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">List</span><span class=\"w\"> </span><span class=\"n\">Int</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">do</span>\n<span class=\"w\">  </span><span class=\"n\">for</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"bp\">.</span><span class=\"n\">enum</span><span class=\"w\"> </span><span class=\"k\">do</span>\n<span class=\"w\">    </span><span class=\"c1\">-- real code here</span>\n<span class=\"w\">    </span><span class=\"k\">let</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"mi\">42</span>\n</code></pre></div>",
        "id": 440636345,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716643582
    },
    {
        "content": "<p>Oh yes, that's what I want! (I wouldn't mind Array.enum either, but I'm in fact not sure if there's a big difference.)</p>",
        "id": 440636402,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716643632
    }
]