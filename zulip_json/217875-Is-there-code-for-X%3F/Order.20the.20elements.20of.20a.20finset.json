[
    {
        "content": "<p>From a Finset S with n elements, I want to get a sequence of n finsets which is increasing for set inclusion and where the finset number k has k elements from S (n+1 finsets starting at the empty finset would also be fine). What is the right way to do that? By right way, I mean the way that gives me the most Mathlib API.</p>\n<p>Related question: if I want to impose an order on the elements of a finset and I want to refer to element number k, what is the right way to do that?</p>\n<p>I have some old code that did both of those and that I am trying to update, but it feels like the way I did it required way too much new API from me. There are probably some definitions in mathlib that I missed.</p>",
        "id": 410847540,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1704203005
    },
    {
        "content": "<p>No, we don't have a way to index elements of a finset. <span class=\"user-mention\" data-user-id=\"665760\">@Yves Jäckle</span> wrote some API for his master project, and <span class=\"user-mention\" data-user-id=\"588571\">@DogaCanSertbas</span> needs some version of that for Schnirelmann's theorem, so I've been basically waiting to see what the use cases are before writing an API.</p>",
        "id": 410847778,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704203124
    },
    {
        "content": "<p>My use case: I have a finset of sets <code>I</code>. Those sets belong to a set semi-ring <code>C</code> <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.IsSetSemiring#doc\">docs#MeasureTheory.IsSetSemiring</a> . From that finset of sets, I want to build a finset <code>J</code> of sets in <code>C</code> with the same sUnion, with the added property that all sets in <code>J</code> are pairwise disjoint.<br>\nSuppose now that I have <code>I₁ ⊆ I₂ ⊆ ... ⊆ Iₙ = I</code> as described above. Then for all k, by the set semi-ring property, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>⋃</mo><mn>0</mn></msub><msub><mi>I</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\bigcup_0 I_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">⋃</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> can be written as the union of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>⋃</mo><mn>0</mn></msub><msub><mi>I</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\bigcup_0 I_{k-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">⋃</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span> and a finset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>J</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">J_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> of pairwise disjoint sets, which are also disjoint with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>⋃</mo><mn>0</mn></msub><msub><mi>I</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\bigcup_0 I_{k-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">⋃</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span>.  Then the set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo>=</mo><msub><mo>⋃</mo><mi>k</mi></msub><msub><mi>J</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">J = \\bigcup_k J_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">⋃</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1864em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> satisfies all properties I want.</p>",
        "id": 410848890,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1704203721
    },
    {
        "content": "<p>The way to do this \"disjointification\" is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=disjointed#doc\">docs#disjointed</a></p>",
        "id": 410849049,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704203797
    },
    {
        "content": "<p>So your finset is not over a linear order?</p>",
        "id": 410849122,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704203834
    },
    {
        "content": "<p>The set difference of two sets in a set semi-ring might not be in the semi-ring, so I have to do more steps to get my disjointed sets.</p>",
        "id": 410849429,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1704203972
    },
    {
        "content": "<p>I will try to find a way to replace the ordering by an induction on the size of the finset (I vaguely remember that I failed to do that once, but I might just need to try harder).</p>",
        "id": 410849742,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1704204092
    },
    {
        "content": "<p>Oh I see. But the lack of ambient linear order is not necessarily a problem. You can just use an arbitrary total relation.</p>",
        "id": 410849990,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704204181
    },
    {
        "content": "<p>Doing induction on the size of a finset is slightly mathematically stronger than the usual finset induction property, and I've struggled to do it in the past. There's an ugly hack where you define some intermediate statement <code>P n</code> to be \"for all <code>s</code>, <code>s.card = n -&gt; Q s</code> and prove this by induction but I'm sure I've seen some cleverer way</p>",
        "id": 410885601,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1704219155
    },
    {
        "content": "<p><code>induction n : s.card generalizing s</code>, maybe? (Untested)</p>",
        "id": 410888816,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1704220761
    },
    {
        "content": "<p>Yes, I've done it too, although in Lean 3 so I'm not sure what the corresponding syntax in Lean 4 is.</p>",
        "id": 410890152,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704221483
    },
    {
        "content": "<p>Starting with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Fintype.equivFin#doc\">docs#Fintype.equivFin</a>, you probably can copy the more or less obvious blackboard definitions. (Is it interesting to cast the result in a more general structure than sets, as a decomposition in <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Disjoint#doc\">docs#Disjoint</a> parts?)</p>",
        "id": 410964525,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1704264080
    }
]