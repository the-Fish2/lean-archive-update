[
    {
        "content": "<p>Do we agree that (a) this is missing, and (b) we want it?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Logic.Equiv.Defs</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">EquivLike.coe_symm_toEquiv</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">EquivLike</span> <span class=\"n\">F</span> <span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">⇑</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">≃</span> <span class=\"n\">β</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">=</span> <span class=\"n\">EquivLike.inv</span> <span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 413078501,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1705379314
    },
    {
        "content": "<p>Nevermind.</p>",
        "id": 413157187,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1705412824
    },
    {
        "content": "<p><del>symm_apply?</del> Never mind.</p>",
        "id": 413162434,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705414425
    },
    {
        "content": "<p>I think that we usually prefer <code>⇑(e : α ≃ β).symm</code> as the simp-normal form, not <code>EquivLike.inv e</code>.</p>",
        "id": 413166250,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1705415457
    },
    {
        "content": "<p>E.g. <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Equiv.invFun_as_coe#doc\">docs#Equiv.invFun_as_coe</a> is a simp-lemma.</p>",
        "id": 413166606,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1705415554
    },
    {
        "content": "<p>Yeah, sorry. For some reason something was broken, I added this and it was fixed. But then it turned out that I misdiagnosed.</p>",
        "id": 413183855,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1705419999
    }
]