[
    {
        "content": "<p>Want to rewrite the following</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span>\n</code></pre></div>\n<p>as </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">1</span><span class=\"bp\">&lt;</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">ε</span>\n</code></pre></div>\n<p>Epsilon is in the Reals and n in the natural numbers tried using inv_lt_iff_one_lt_mul which is defined as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">inv_lt_iff_one_lt_mul</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">LT</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">CovariantClass</span> <span class=\"n\">α</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">Function.swap</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">x_1</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">x_1</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x_1</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n<span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>but this doesn't work I'm not sure what I'm missing</p>",
        "id": 422801673,
        "sender_full_name": "Timothy Harevy",
        "timestamp": 1708603244
    },
    {
        "content": "<p>The lemma that you mention applies to a <code>Group</code> (under multiplication), which the reals are not.  The lemma <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=div_lt_iff#doc\">docs#div_lt_iff</a> is close to what might be able to use, but it applies to <code>a / b</code>, rather than <code>x⁻¹</code>.</p>",
        "id": 422803367,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1708603902
    },
    {
        "content": "<p>If the form of <code>inv_lt_iff</code> does not really exist, then it might also be a lemma that could be added to Mathlib.</p>",
        "id": 422803593,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1708603973
    },
    {
        "content": "<p>thank you might give it a go then</p>",
        "id": 422804512,
        "sender_full_name": "Timothy Harevy",
        "timestamp": 1708604324
    },
    {
        "content": "<p>Note that the rewrite is impossible in general because n=0 satisfies the first equation but not the second (at least I think it does, android is not displaying the first equation correctly for me because of a known bug, the point is that 1/0=0 in lean)</p>",
        "id": 422806912,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708605233
    },
    {
        "content": "<p>Is this <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=inv_pos_lt_iff_one_lt_mul#doc\">docs#inv_pos_lt_iff_one_lt_mul</a> (or <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=inv_pos_lt_iff_one_lt_mul%27#doc\">docs#inv_pos_lt_iff_one_lt_mul'</a>)?</p>",
        "id": 422844591,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1708616567
    }
]