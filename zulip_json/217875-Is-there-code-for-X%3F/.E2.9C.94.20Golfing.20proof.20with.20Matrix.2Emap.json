[
    {
        "content": "<p>Hello everyone. I expressed my thorem result on saturation of matrices in inequalities and got an <a href=\"https://lean.math.hhu.de/#code=import%20Mathlib.Data.Fin.Tuple.Reflection%0D%0Aimport%20Mathlib.Data.Matrix.Notation%0D%0A%0D%0Aopen%20FinVec%20BigOperators%20Matrix%0D%0A%0D%0A%23eval%20!!%5B4%2C0%5D.map%20(min%203)%0D%0A%0D%0Atheorem%20Saturation%0D%0A%20%20%7Bxs%20%3A%20Fin%20n%20%E2%86%92%20Fin%202%7D%0D%0A%20%20%7Bas%20%3A%20Matrix%20(Fin%20n)%20(Fin%202)%20%E2%84%95%7D%20%7BA%20%3A%20%E2%84%95%7D%0D%0A%20%20(ha%20%3A%20%E2%88%91%20i%20%3A%20Fin%20n%2C%20as%20i%20(xs%20i)%20%E2%89%A5%20A)%0D%0A%20%20%3A%20%E2%88%91%20i%20%3A%20Fin%20n%2C%20as.map%20(min%20A)%20i%20(xs%20i)%20%E2%89%A5%20A%20%3A%3D%0D%0A%20%20sorry%0D%0A%0D%0Aexample%20%0D%0A%20%20%7Bxs%20%3A%20Fin%201%20%E2%86%92%20Fin%202%7D%0D%0A%20%20(ha%20%3A%20%E2%88%91%20i%20%3A%20Fin%201%2C%20of%20!%5B!%5B4%2C%200%5D%5D%20i%20(xs%20i)%20%E2%89%A5%203)%0D%0A%20%20%3A%20%E2%88%91%20i%20%3A%20Fin%201%2C%20of%20!%5B!%5B3%2C%200%5D%5D%20i%20(xs%20i)%20%E2%89%A5%203%20%3A%3D%20by%0D%0A%20%20have%20rmap%20%3A%20!!%5B3%2C0%5D%20%3D%20!!%5B4%2C0%5D.map%20(min%203)%20%3A%3D%20by%20decide%0D%0A%20%20rw%20%5Brmap%5D%0D%0A%20%20apply%20Saturation%20ha%0D%0A%20%20done%0D%0A%0D%0A%2F-%20Desired%20Proof%3A%0D%0Aexample%20%0D%0A%20%20%7Bxs%20%3A%20Fin%201%20%E2%86%92%20Fin%202%7D%0D%0A%20%20(ha%20%3A%20%E2%88%91%20i%20%3A%20Fin%201%2C%20of%20!%5B!%5B4%2C%200%5D%5D%20i%20(xs%20i)%20%E2%89%A5%203)%0D%0A%20%20%3A%20%E2%88%91%20i%20%3A%20Fin%201%2C%20of%20!%5B!%5B3%2C%200%5D%5D%20i%20(xs%20i)%20%E2%89%A5%203%20%3A%3D%20by%0D%0A%20%20apply%20Saturation%20ha%0D%0A%20%20done%0D%0A-%2F%0D%0A\">example</a>. As you can see below, I had to define a rewrite using <code>decide</code> to close the proof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Fin.Tuple.Reflection</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.Notation</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">FinVec</span> <span class=\"n\">BigOperators</span> <span class=\"n\">Matrix</span>\n\n<span class=\"k\">#eval</span> <span class=\"bp\">!!</span><span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"mi\">3</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Saturation</span>\n  <span class=\"o\">{</span><span class=\"n\">xs</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">}</span>\n  <span class=\"o\">{</span><span class=\"n\">as</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">as</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">≥</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">as.map</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">≥</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n  <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">example</span>\n  <span class=\"o\">{</span><span class=\"n\">xs</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">of</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">]]</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">≥</span> <span class=\"mi\">3</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">of</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">]]</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">≥</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">rmap</span> <span class=\"o\">:</span> <span class=\"bp\">!!</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"bp\">!!</span><span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">rmap</span><span class=\"o\">]</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Saturation</span> <span class=\"n\">ha</span>\n  <span class=\"n\">done</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Desired Proof:</span>\n<span class=\"cm\">example</span>\n<span class=\"cm\">  {xs : Fin 1 → Fin 2}</span>\n<span class=\"cm\">  (ha : ∑ i : Fin 1, of ![![4, 0]] i (xs i) ≥ 3)</span>\n<span class=\"cm\">  : ∑ i : Fin 1, of ![![3, 0]] i (xs i) ≥ 3 := by</span>\n<span class=\"cm\">  apply Saturation ha</span>\n<span class=\"cm\">  done</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>\n<p>Is there a way to achieve a more direct proof, like the one in the comment, that will <code>decide</code> implicitly and unify the result? Thanks!</p>",
        "id": 439231952,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1715955154
    },
    {
        "content": "<p>One possible alternative would be to change the way saturation is defined, if it makes <code>apply Saturation ha</code> work as a one liner</p>",
        "id": 439238570,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1715957319
    },
    {
        "content": "<p>This doesn't derive the equality implicitly, but I think you'd need a tactic for that anyway, since the equality doesn't seem to be definitional. Anyway, to get everything into one line, you could demand the equality as an argument:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Saturation'</span>\n  <span class=\"o\">{</span><span class=\"n\">xs</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">}</span>\n  <span class=\"o\">{</span><span class=\"n\">as</span> <span class=\"n\">mas</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">eq</span> <span class=\"o\">:</span> <span class=\"n\">mas</span> <span class=\"bp\">=</span> <span class=\"n\">as.map</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"n\">A</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">as</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">≥</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">mas</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">≥</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"n\">eq.symm</span> <span class=\"bp\">▸</span> <span class=\"n\">Saturation</span> <span class=\"n\">ha</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Almost Desired Proof:</span>\n<span class=\"cm\">-/</span>\n<span class=\"kd\">example</span>\n  <span class=\"o\">{</span><span class=\"n\">xs</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">of</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">]]</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">≥</span> <span class=\"mi\">3</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">of</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">]]</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">≥</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Saturation'</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span> <span class=\"n\">ha</span>\n  <span class=\"n\">done</span>\n</code></pre></div>",
        "id": 439345902,
        "sender_full_name": "Tom Kranz",
        "timestamp": 1716029481
    },
    {
        "content": "<p>For more clarity, this is the current situation of the rules I'm implementing versus support of the <code>apply</code> tactic to close them immediately:</p>\n<table>\n<thead>\n<tr>\n<th>Will <code>apply</code> close it?</th>\n<th>Matrix n 2 Nat</th>\n<th>FinVec (Prod Nat Nat)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Addition</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Multiplication</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Saturation</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Division</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n</tbody>\n</table>",
        "id": 439581185,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1716214015
    },
    {
        "content": "<p>Since I'm not going to use Matrix multiplication, it's just used as a container, i might just change to Products (FInVec of Tuple) instead</p>",
        "id": 439581366,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1716214081
    },
    {
        "content": "<p>Code for comparison of the rules can be seen here: <a href=\"https://pastebin.com/aWvCM4Mn\">https://pastebin.com/aWvCM4Mn</a></p>",
        "id": 439581573,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1716214155
    },
    {
        "content": "<p>The part I have to ponder is, is it worth it to change the format, for this convenience? For example, with a Matrix what I would have to prove next has this type:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"n\">B</span> <span class=\"bp\">≤</span>\n    <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n      <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">as</span> <span class=\"n\">x</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">bs</span> <span class=\"n\">x</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">as</span> <span class=\"n\">x</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">bs</span> <span class=\"n\">x</span> <span class=\"mi\">0</span>\n        <span class=\"k\">then</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">as</span> <span class=\"n\">x</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">bs</span> <span class=\"n\">x</span> <span class=\"mi\">0</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">as</span> <span class=\"n\">x</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">bs</span> <span class=\"n\">x</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"mi\">0</span><span class=\"o\">]</span>\n        <span class=\"k\">else</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">as</span> <span class=\"n\">x</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">bs</span> <span class=\"n\">x</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">as</span> <span class=\"n\">x</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">bs</span> <span class=\"n\">x</span> <span class=\"mi\">0</span><span class=\"o\">)])</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">xs</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n    <span class=\"bp\">+</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">as</span> <span class=\"n\">x</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">bs</span> <span class=\"n\">x</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">as</span> <span class=\"n\">x</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">bs</span> <span class=\"n\">x</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Now with a Tuple my goal has type:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"n\">B</span> <span class=\"bp\">≤</span>\n  <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n      <span class=\"k\">if</span> <span class=\"n\">xs</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"k\">then</span>\n        <span class=\"o\">(</span><span class=\"n\">Decidable.rec</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"o\">((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)))</span>\n            <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"o\">((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">),</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n            <span class=\"o\">(((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">decLt</span> <span class=\"o\">((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n      <span class=\"k\">else</span>\n        <span class=\"o\">(</span><span class=\"n\">Decidable.rec</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"o\">((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)))</span>\n            <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"o\">((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">),</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n            <span class=\"o\">(((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">decLt</span> <span class=\"o\">((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">+</span>\n    <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">min</span> <span class=\"o\">((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">as</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">bs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Where I don't know what <code>Decidablerec</code> means neither <code>decLt</code> and it looks harder. Do you all have any input?</p>",
        "id": 439588059,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1716216248
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> this is the tuple change you mentioned last week</p>",
        "id": 439589568,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1716216741
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"671510\">Bernardo Borges</span> has marked this topic as resolved.</p>",
        "id": 440095444,
        "sender_full_name": "Notification Bot",
        "timestamp": 1716385522
    }
]