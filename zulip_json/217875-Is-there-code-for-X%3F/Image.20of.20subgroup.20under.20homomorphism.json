[
    {
        "content": "<p>How do I express the image of an additive subgroup of some additive group under a given group homomorphism (as a subgroup of the target)?<br>\n<span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> AddMonoidHom, \"image\"</p>",
        "id": 421102741,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707762996
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.closure_preimage_le\">AddMonoidHom.closure_preimage_le</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.closure_preimage_eq_top\">AddSubgroup.closure_preimage_eq_top</a>, and <a href=\"https://loogle.lean-lang.org/?q=AddMonoidHom%2C%20%22image%22\">5 more</a></p>",
        "id": 421102745,
        "sender_full_name": "loogle",
        "timestamp": 1707762997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> AddMonoidHom, Submonoid</p>",
        "id": 421102791,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707763012
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Localization/Basic.html#Localization.mkAddMonoidHom\">Localization.mkAddMonoidHom</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Localization/Basic.html#Localization.mkAddMonoidHom_apply\">Localization.mkAddMonoidHom_apply</a>, and <a href=\"https://loogle.lean-lang.org/?q=AddMonoidHom%2C%20Submonoid\">3 more</a></p>",
        "id": 421102793,
        "sender_full_name": "loogle",
        "timestamp": 1707763012
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> AddMonoidHom, Subgroup</p>",
        "id": 421102857,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707763031
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_toAdditive_range\">MonoidHom.coe_toAdditive_range</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.coe_toMultiplicative_range\">MonoidHom.coe_toMultiplicative_range</a>, and <a href=\"https://loogle.lean-lang.org/?q=AddMonoidHom%2C%20Subgroup\">13 more</a></p>",
        "id": 421102860,
        "sender_full_name": "loogle",
        "timestamp": 1707763031
    },
    {
        "content": "<p>None of these looks promising...</p>",
        "id": 421103002,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707763078
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddSubgroup.map#doc\">docs#AddSubgroup.map</a></p>",
        "id": 421103065,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1707763086
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> AddMonoidHom, AddSubgroup</p>",
        "id": 421103174,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707763117
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.ker\">AddMonoidHom.ker</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a>, and <a href=\"https://loogle.lean-lang.org/?q=AddMonoidHom%2C%20AddSubgroup\">282 more</a></p>",
        "id": 421103180,
        "sender_full_name": "loogle",
        "timestamp": 1707763118
    },
    {
        "content": "<p>OK, I should have thought of adding \"Add\"... Thanks!</p>",
        "id": 421103243,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707763139
    },
    {
        "content": "<p>Follow-up question: How do I write the sum of two additive subgroups of an additive group? Apparently there is no <code>Add</code> instance on <code>AddSubgroup A</code> (even with <code>open scoped Pointwise</code>).</p>",
        "id": 421107986,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707764592
    },
    {
        "content": "<p>Maybe <code>sup</code>?</p>",
        "id": 421108089,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707764631
    },
    {
        "content": "<p>At least this gives no error.</p>",
        "id": 421108191,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707764658
    },
    {
        "content": "<p>Do you mean <code>Subgroup</code> or <code>AddSubgroup</code>?</p>",
        "id": 421109739,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707765235
    },
    {
        "content": "<p><code>AddSubgroup</code> of course (edited above).</p>",
        "id": 421109848,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707765268
    },
    {
        "content": "<p>Ideally we'd have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Submodule.idemSemiring#doc\">docs#Submodule.idemSemiring</a> for AddSubgroup</p>",
        "id": 421110012,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707765327
    },
    {
        "content": "<p>In the meantime you could work with Int-modules...</p>",
        "id": 421110041,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707765341
    },
    {
        "content": "<p>In any case, it would be nice to be able to use <code>+</code> here, as this is the usual notation in mathematical contexts.</p>",
        "id": 421110179,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707765389
    },
    {
        "content": "<p>Like I say, what you're asking for already exists on <code>Submodule Int _</code></p>",
        "id": 421110545,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707765534
    },
    {
        "content": "<p>So I should work with â„¤-modules and linear maps instead of additive groups and group homomorphisms...</p>",
        "id": 421110697,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707765600
    },
    {
        "content": "<p>Or add a <code>Semiring</code> instance for <code>AddSubgroup</code>s</p>",
        "id": 421116149,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707767648
    },
    {
        "content": "<p>That's what Eric suggests above, I think.</p>",
        "id": 421118789,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1707768520
    },
    {
        "content": "<p>There are certain lemmas about pointwise addition of subgroups like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddSubgroup.add_normal#doc\">docs#AddSubgroup.add_normal</a>, but they're stated using pointwise addition of sets, because the sum isn't necessarily a subgroup, unless the ambient group is commutative.</p>",
        "id": 421119925,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1707768931
    }
]