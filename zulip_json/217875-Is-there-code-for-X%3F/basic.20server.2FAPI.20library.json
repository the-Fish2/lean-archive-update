[
    {
        "content": "<p>Are existing frameworks for using Lean as a Backend. I'm thinking about building a web app that is able to interact with Lean. </p>\n<p>There is the game server: <a href=\"https://github.com/leanprover-community/lean4game/tree/main/server/GameServer\">https://github.com/leanprover-community/lean4game/tree/main/server/GameServer</a></p>\n<p>I'm just wondering if this is the best starting point, or if there is a more basic server library. </p>\n<p>Also if anyone knows of any tutorials for using Lean as a backend that would be super helpful.</p>",
        "id": 444136630,
        "sender_full_name": "Avi Craimer",
        "timestamp": 1718161116
    },
    {
        "content": "<p>I think the official documentation is this <a href=\"https://github.com/leanprover/lean4/tree/master/src/Lean/Server#readme\">Lean/Server/README.md</a>.</p>\n<p>In it's current shape I don't really recommend looking at <code>GameServer</code> as a first entry point <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> but I hoped to clean that up over the next month...</p>",
        "id": 444181718,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1718182258
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"385895\">@Jon Eugster</span> </p>\n<p>Does the Lean server extension offer a way to emit JSON about tactics state, type errors, etc, to another process such as a Node.js service?</p>\n<p>I'm thinking this would be useful when running in VSCode to have real time message passing to another service, for example, one which could easily interface with LLM APIs.</p>",
        "id": 444198153,
        "sender_full_name": "Avi Craimer",
        "timestamp": 1718187624
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/repl\">https://github.com/leanprover-community/repl</a></p>",
        "id": 444353011,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718236710
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/basic.20server.2FAPI.20library/near/444353011\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/repl\">https://github.com/leanprover-community/repl</a></p>\n</blockquote>\n<p>Thanks that looks like exactly what I need!</p>",
        "id": 444477398,
        "sender_full_name": "Avi Craimer",
        "timestamp": 1718288461
    },
    {
        "content": "<p>(It's meant to be undergoing a major revision at the moment, but other priorities have been getting in the way for the last two months...)</p>",
        "id": 444569633,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718315672
    },
    {
        "content": "<p>Have you seen this: <a href=\"https://github.com/openai/lean-gym\">https://github.com/openai/lean-gym</a> It's open AI's experiments with Lean.</p>",
        "id": 444588303,
        "sender_full_name": "Mr Proof",
        "timestamp": 1718326312
    },
    {
        "content": "<p>Not sure who you are asking, but yes, \"we\" have seen this. :-) It is quite old by now and that exact direction isn't being pursued.</p>",
        "id": 444588613,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718326551
    },
    {
        "content": "<p>:) Just pointing that out to Avi since he was talking about LLMs and such like.</p>",
        "id": 444590086,
        "sender_full_name": "Mr Proof",
        "timestamp": 1718327265
    },
    {
        "content": "<p>If you are interested in interfacing Lean with LLMs, be sure to check out <a class=\"stream\" data-stream-id=\"219941\" href=\"/#narrow/stream/219941-Machine-Learning-for-Theorem-Proving\">#Machine Learning for Theorem Proving</a>.  There has been a lot of work since Lean-Gym in this area.  (Although most experiments are done in a way where the system is not practical for Lean users to use.)</p>",
        "id": 444978028,
        "sender_full_name": "Jason Rute",
        "timestamp": 1718545918
    }
]