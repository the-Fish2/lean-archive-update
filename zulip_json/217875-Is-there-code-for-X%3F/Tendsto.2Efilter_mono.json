[
    {
        "content": "<p>Is there a name for this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p₁</span> <span class=\"n\">p₂</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p₁</span> <span class=\"bp\">≤</span> <span class=\"n\">p₂</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">Tendsto</span> <span class=\"n\">f</span> <span class=\"n\">p₂</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"mi\">0</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">Tendsto</span> <span class=\"n\">f</span> <span class=\"n\">p₁</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n</code></pre></div>\n<p><code>exact?</code> tells me that it is <code>fun _ a ↦ h (hf a)</code>, it is also <code>map_mono h |&gt;.trans hf</code> but none feel right to me...</p>",
        "id": 424964187,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1709675683
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.Tendsto.mono_left#doc\">docs#Filter.Tendsto.mono_left</a> ?</p>",
        "id": 424966181,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1709676518
    }
]