[
    {
        "content": "<p>Is this anywhere?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">IntervalIntegrable</span><span class=\"w\"> </span><span class=\"n\">rexp</span><span class=\"w\"> </span><span class=\"n\">volume</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">intervalIntegrable_exp</span>\n\n<span class=\"kd\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">IntervalIntegrable</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">cexp</span><span class=\"w\"> </span><span class=\"bp\">∘</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"n\">volume</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"kd\">by</span>\n<span class=\"w\">  </span><span class=\"n\">exact</span><span class=\"bp\">?</span>\n</code></pre></div>",
        "id": 443098943,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1717689604
    },
    {
        "content": "<p>Maybe not, but should be easy using <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Continuous.intervalIntegrable#doc\">docs#Continuous.intervalIntegrable</a></p>",
        "id": 443099822,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1717689830
    },
    {
        "content": "<p>That only works for real-valued functions</p>",
        "id": 443099910,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1717689846
    },
    {
        "content": "<p>it works for functions with domain <code>\\R</code>. Codomain can be different.</p>",
        "id": 443099995,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1717689873
    },
    {
        "content": "<p>Ohh</p>",
        "id": 443100016,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1717689878
    },
    {
        "content": "<p>Wait yes, let me try</p>",
        "id": 443100032,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1717689883
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">IntervalIntegrable</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">cexp</span><span class=\"w\"> </span><span class=\"bp\">∘</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"n\">volume</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"n\">Continuous.intervalIntegrable</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kd\">by</span><span class=\"w\"> </span><span class=\"n\">continuity</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">..</span>\n</code></pre></div>\n<p>Thanks!!</p>",
        "id": 443100208,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1717689932
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"579936\">Gareth Ma</span> has marked this topic as resolved.</p>",
        "id": 443100222,
        "sender_full_name": "Notification Bot",
        "timestamp": 1717689936
    }
]