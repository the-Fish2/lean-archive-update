[
    {
        "content": "<p>Is there a way to extract all the intermediate states of a theorem, like the state before/after a tactic or term?</p>",
        "id": 425845161,
        "sender_full_name": "Justin",
        "timestamp": 1710139687
    },
    {
        "content": "<p>What do you want the output to be like? How do you want to see the \"states\"</p>",
        "id": 425886801,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1710155897
    },
    {
        "content": "<p>do you know about mathlib's <code>extract_goal</code> tactic?</p>",
        "id": 425888727,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1710156675
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"579936\">Gareth Ma</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Extracting.20intermediate.20states/near/425886801\">said</a>:</p>\n<blockquote>\n<p>What do you want the output to be like? How do you want to see the \"states\"</p>\n</blockquote>\n<p>Ideally pretty-printed like how the Tactic state looks like in the Lean interpreter, but also fine with anything that is machine readable. I want to create a dataset that includes the tactic/term, the before state, and the after state.</p>",
        "id": 426006974,
        "sender_full_name": "Justin",
        "timestamp": 1710190529
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"684366\">Edward van de Meent</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Extracting.20intermediate.20states/near/425888727\">said</a>:</p>\n<blockquote>\n<p>do you know about mathlib's <code>extract_goal</code> tactic?</p>\n</blockquote>\n<p>I know this is used to extract a subgoal as a theorem statement, but does this provide useful information beyond what is in the state?<br>\nSeparately, is there a way to use <code>extract_goal</code> after the creation of every subgoal - can you put that in a script?</p>",
        "id": 426008391,
        "sender_full_name": "Justin",
        "timestamp": 1710191053
    },
    {
        "content": "<p>I think you might be interested in the tool that <span class=\"user-mention\" data-user-id=\"243791\">@David Renshaw</span> recently developed, which can run a tactic at every goal step</p>",
        "id": 426051166,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710216626
    },
    {
        "content": "<p>Also see <a href=\"https://github.com/semorrison/lean-training-data\">https://github.com/semorrison/lean-training-data</a> for examples.</p>",
        "id": 426096673,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710240130
    },
    {
        "content": "<p><a href=\"https://github.com/dwrensha/tryAtEachStep\">https://github.com/dwrensha/tryAtEachStep</a> is the thing I made, and I consulted <br>\n<a href=\"https://github.com/semorrison/lean-training-data/blob/master/TrainingData/InfoTree/Basic.lean\">https://github.com/semorrison/lean-training-data/blob/master/TrainingData/InfoTree/Basic.lean</a> and <a href=\"https://github.com/lean-dojo/LeanDojo/blob/main/src/lean_dojo/data_extraction/ExtractData.lean\">https://github.com/lean-dojo/LeanDojo/blob/main/src/lean_dojo/data_extraction/ExtractData.lean</a> for reference.</p>",
        "id": 426109596,
        "sender_full_name": "David Renshaw",
        "timestamp": 1710244946
    },
    {
        "content": "<p>If you only want to print information about the states, a linter might be enough.  You can look at the <a href=\"https://leanprover-community.github.io/mathlib4_docs/Std/Linter/UnreachableTactic.html#Std.Linter.linter.unreachableTactic\">unreachable tactic linter</a> for inspiration.</p>",
        "id": 426119056,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710248259
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243791\">David Renshaw</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Extracting.20intermediate.20states/near/426109596\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/dwrensha/tryAtEachStep\">https://github.com/dwrensha/tryAtEachStep</a> is the thing I made, and I consulted <br>\n<a href=\"https://github.com/semorrison/lean-training-data/blob/master/TrainingData/InfoTree/Basic.lean\">https://github.com/semorrison/lean-training-data/blob/master/TrainingData/InfoTree/Basic.lean</a> and <a href=\"https://github.com/lean-dojo/LeanDojo/blob/main/src/lean_dojo/data_extraction/ExtractData.lean\">https://github.com/lean-dojo/LeanDojo/blob/main/src/lean_dojo/data_extraction/ExtractData.lean</a> for reference.</p>\n</blockquote>\n<p>I noticed that one of your todos is making this work for terms. Is there more difficulty in extracting states after a term?</p>",
        "id": 426284733,
        "sender_full_name": "Justin",
        "timestamp": 1710319361
    }
]