[
    {
        "content": "<p>Is there a way to easily convert between summing over <code>ℤ</code> and over <code>ℕ</code>? E.g.:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">Finset_coe_Nat_Int</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Ioc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Ioc</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Thanks!</p>",
        "id": 433372091,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1713210122
    },
    {
        "content": "<p>You should be able to use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.sum_nbij%27#doc\">docs#Finset.sum_nbij'</a> (or perhaps <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.sum_nbij#doc\">docs#Finset.sum_nbij</a> would be easier) fairly easily, I'm not sure if there's an easier way</p>",
        "id": 433372850,
        "sender_full_name": "Daniel Weber",
        "timestamp": 1713210347
    },
    {
        "content": "<p>No, don't use <code>sum_bij</code> (or friends) here! That's overkill</p>",
        "id": 433374722,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1713210946
    },
    {
        "content": "<p>What you usually want to use in such a situation is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.sum_map#doc\">docs#Finset.sum_map</a></p>",
        "id": 433374847,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1713210968
    },
    {
        "content": "<p>For this, you will need a version of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.image_cast_int_Ioc#doc\">docs#Nat.image_cast_int_Ioc</a> stated using <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.map#doc\">docs#Finset.map</a>. That should be very easy to do</p>",
        "id": 433374932,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1713210994
    },
    {
        "content": "<p>Oh. I already did it...</p>",
        "id": 433375054,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1713211036
    },
    {
        "content": "<p>Well, at least you now know what the mathlib PR should look like <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 433375248,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1713211094
    }
]