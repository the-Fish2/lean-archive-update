[
    {
        "content": "<p>Do we really not have this????</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Constructions</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">B</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">ClosedEmbedding</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">ClosedEmbedding</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">ClosedEmbedding</span> <span class=\"o\">(</span><span class=\"n\">Prod.map</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">hf.toEmbedding.prod_map</span> <span class=\"n\">hg.toEmbedding</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Set.range_prod_map</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">hf.isClosed_range.prod</span> <span class=\"n\">hg.isClosed_range</span>\n</code></pre></div>",
        "id": 429610387,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711444132
    },
    {
        "content": "<p>We also don't have a similar statement about closed maps.</p>",
        "id": 429769771,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1711505006
    },
    {
        "content": "<p>Oh I missed your message. The reason we don't have the closed map version is that it is not true without some properness assumption, see <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=isProperMap_iff_universally_closed#doc\">docs#isProperMap_iff_universally_closed</a></p>",
        "id": 430490407,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711903377
    }
]