[
    {
        "content": "<p>From what I undestand there is very little about Riemann Surfaces in mathlib so far.I am interested in proving some stuff, possibly with the goal of proving the Uniformization Theorem. I am looking for a bit of guidance from more experienced users.<br>\n 1/ mathlib seems to go up to the definition of manifolds, but not much farther. Is the way manifolds are defined really the best one? Nothing is bundled together so you have to introduce a lot of stuff anytime you want to consider a manifold. See for example all the variables introduced at the beginning of <code>SmoothMap</code>.I've tried defining the category of smooth manifolds for example and end up with something like this (please disregard the names), which is a lot more boiler plate than the <code>Bundled</code> I see everywhere else: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NontriviallyNormedField</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">NormedSpaceCat</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n  <span class=\"n\">normed_add_comm_group_E</span> <span class=\"o\">:</span> <span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">E</span>\n  <span class=\"n\">normed_space_E</span> <span class=\"o\">:</span> <span class=\"n\">NormedSpace</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">CoeSort</span> <span class=\"o\">(</span><span class=\"n\">NormedSpaceCat.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"bp\">𝕜</span> <span class=\"o\">:=</span> <span class=\"bp\">𝕜</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">coe</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"n\">E.E</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">NormedSpaceCat_is_normed_add_comm_group</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">NormedSpaceCat</span> <span class=\"o\">(</span><span class=\"bp\">𝕜</span> <span class=\"o\">:=</span> <span class=\"bp\">𝕜</span><span class=\"o\">)):</span> <span class=\"n\">NormedAddCommGroup</span> <span class=\"o\">(</span><span class=\"n\">E.E</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">E.normed_add_comm_group_E</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">NormedSpaceCat_is_normed_space</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">NormedSpaceCat</span> <span class=\"o\">(</span><span class=\"bp\">𝕜</span> <span class=\"o\">:=</span> <span class=\"bp\">𝕜</span><span class=\"o\">)):</span> <span class=\"n\">NormedSpace</span> <span class=\"bp\">𝕜</span> <span class=\"o\">(</span><span class=\"n\">E.E</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">E.normed_space_E</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">SmoothManifoldCat</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">NormedSpaceCat</span> <span class=\"o\">(</span><span class=\"bp\">𝕜</span> <span class=\"o\">:=</span> <span class=\"bp\">𝕜</span><span class=\"o\">)</span>\n  <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">TopCat.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span>\n  <span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">ModelWithCorners</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span> <span class=\"n\">H</span>\n  <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"n\">topo</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">M</span>\n  <span class=\"n\">charted</span> <span class=\"o\">:</span> <span class=\"n\">ChartedSpace</span> <span class=\"n\">H</span> <span class=\"n\">M</span>\n  <span class=\"n\">smooth</span> <span class=\"o\">:</span> <span class=\"n\">SmoothManifoldWithCorners</span> <span class=\"n\">I</span> <span class=\"n\">M</span>\n</code></pre></div>\n<p>2\\ As far as I can tell there is no requirement for a Manifold to be Hausdorff. Is this on purpose or an oversight?<br>\n3\\ There are many proofs of the Uniformization Theorem. Does someone have a good idea of which one would be the more suitable for mathlib? Either the one which requires the less work or the one which requires stuff that would be useful elsewhere perhaps?</p>",
        "id": 439817029,
        "sender_full_name": "Maxime Lucas",
        "timestamp": 1716297971
    },
    {
        "content": "<p>Yes, it's on purpose that things are unbundled. If you bundle things, then you will run in troubles when you want to talk about Lie groups, because on one side you will have bundled manifolds, on the other side you will have unbundled groups, and these won't interact well. The design should be all bundled or all unbundled, and mathlib goes the unbundled way.</p>\n<p>Yes, it's on purpose that manifolds are not Hausdorff (nor second-countable or sigma-compact): with the unbundled design, you can just add that as an assumption when it's needed, in the form of a mixin (like <code>[T2Space M]</code> or the variant you need). This makes it possible to have the right assumption for each statement. For instance, statements about partitions of unity or the Whitney embedding theorem will have this assumption (see for instance <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=exists_embedding_euclidean_of_compact#doc\">docs#exists_embedding_euclidean_of_compact</a>).</p>",
        "id": 439820603,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1716298970
    },
    {
        "content": "<p>Also, the unbundled approach allows you to smoothly (pun intended) treat your Riemann surface as a complex mfld, a real mfld, a topological space, etc...<br>\nBut it is very true that you need a massive amount of variables to introduce a Lie group to Lean. There have been some experiments to make this more user friendly, but nothing conclusive yet. We should work more on that.</p>",
        "id": 439827328,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716300628
    }
]