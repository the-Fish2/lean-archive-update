[
    {
        "content": "<p>Is there a tactic which can do substitutions in inequalities over a CanonicallyOrderedCommMonoid?<br>\nA bit more specifically, I want to prove:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">n</span><span class=\"bp\">^</span><span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>which can be done by substituting <code>a ≤ n</code> and <code>b ≤ n</code> and then showing equality. I know how to do this by using <code>calc</code> and a lot of <code>mul_le_mul_of_nonneg_left</code> and <code>mul_le_mul_of_nonneg_right</code>, but it's quite ugly.<br>\nIf there's a different nice way to solve it that'd also be great. <code>omega</code> and <code>linarith</code> fail.</p>",
        "id": 424524426,
        "sender_full_name": "Daniel Weber",
        "timestamp": 1709484822
    },
    {
        "content": "<p>it might help linarith if you first rewrite <code>n^3</code> to <code>n * n * n</code>?</p>",
        "id": 424524757,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1709485068
    },
    {
        "content": "<p>Nope <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 424524877,
        "sender_full_name": "Daniel Weber",
        "timestamp": 1709485129
    },
    {
        "content": "<p>Does <code>gcongr</code> work?</p>",
        "id": 424524926,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1709485179
    },
    {
        "content": "<p>Once I swap <code>c</code> and <code>n</code> on the RHS. Thanks!</p>",
        "id": 424525057,
        "sender_full_name": "Daniel Weber",
        "timestamp": 1709485237
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"690858\">Daniel Weber</span> has marked this topic as resolved.</p>",
        "id": 424525062,
        "sender_full_name": "Notification Bot",
        "timestamp": 1709485241
    },
    {
        "content": "<p>There is also <a href=\"https://github.com/leanprover-community/mathlib4/pull/8167\">#8167</a>, though for some reason it seems that project has stalled.</p>",
        "id": 424549781,
        "sender_full_name": "Terence Tao",
        "timestamp": 1709505836
    }
]