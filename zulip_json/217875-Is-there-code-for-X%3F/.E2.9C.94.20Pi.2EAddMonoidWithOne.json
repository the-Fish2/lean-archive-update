[
    {
        "content": "<p>I'd like to have <code>CharP (Fin n -&gt; (ZMod 2)) 2</code> but it seems the only pi instances for <code>CharP</code> asume the domain to be a semiring : <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CharP.pi#doc\">docs#CharP.pi</a></p>",
        "id": 440650521,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1716656753
    },
    {
        "content": "<p>trying to make it myself leads to the discovery that there is no <code>AddMonoidWithOne (I -&gt; M)</code> (or <code>AddCommMonoidWithOne (I -&gt; M)</code> for that matter)</p>",
        "id": 440650610,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1716656854
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"684366\">Edward van de Meent</span> has marked this topic as resolved.</p>",
        "id": 440650862,
        "sender_full_name": "Notification Bot",
        "timestamp": 1716657109
    },
    {
        "content": "<p>nevermind, i just got that this is just not an applicable concept and won't work the way i want it to</p>",
        "id": 440650922,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1716657145
    },
    {
        "content": "<p>in case anyone wants to know why i wanted this instance, my intuition suggested to use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=sub_eq_add#doc\">docs#sub_eq_add</a></p>",
        "id": 440651312,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1716657550
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CharTwo.sub_eq_add#doc\">docs#CharTwo.sub_eq_add</a></p>",
        "id": 440651365,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1716657603
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"684366\">Edward van de Meent</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/.E2.9C.94.20Pi.2EAddMonoidWithOne/near/440650610\">said</a>:</p>\n<blockquote>\n<p>trying to make it myself leads to the discovery that there is no <code>AddMonoidWithOne (I -&gt; M)</code> (or <code>AddCommMonoidWithOne (I -&gt; M)</code> for that matter)</p>\n</blockquote>\n<p>I think this instance existing would be uncontroversial, just no one has needed it yet</p>",
        "id": 440651403,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716657614
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Pi.addMonoidWithOne#doc\">docs#Pi.addMonoidWithOne</a> exists already?</p>",
        "id": 440651442,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716657666
    },
    {
        "content": "<p>wait huh?</p>",
        "id": 440651477,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1716657717
    },
    {
        "content": "<p>But the comm versions seems to not be there</p>",
        "id": 440651534,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716657757
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">GroupTheory</span><span class=\"bp\">.</span><span class=\"n\">SemidirectProduct</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">Ring</span><span class=\"bp\">.</span><span class=\"n\">Defs</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">CharP</span><span class=\"bp\">.</span><span class=\"n\">Defs</span>\n\n<span class=\"kn\">variable</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">ι</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Semiring</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">CharP</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Nonempty</span><span class=\"w\"> </span><span class=\"n\">ι</span><span class=\"o\">]</span>\n\n<span class=\"bp\">#</span><span class=\"n\">synth</span><span class=\"w\"> </span><span class=\"n\">AddMonoidWithOne</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">ι</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"c1\">-- fails</span>\n</code></pre></div>",
        "id": 440651668,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1716657886
    },
    {
        "content": "<p>does this not import the proper instances <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 440651705,
        "sender_full_name": "Edward van de Meent",
        "timestamp": 1716657925
    },
    {
        "content": "<p>The easy way to find out is to import mathlib</p>",
        "id": 440652868,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716659169
    }
]