[
    {
        "content": "<p>The partial Lean 3 version is at <a href=\"https://github.com/mariainesdff/ostrowski\">https://github.com/mariainesdff/ostrowski</a>.</p>",
        "id": 429340254,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1711361165
    },
    {
        "content": "<p>I'm in!</p>",
        "id": 429340487,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1711361211
    },
    {
        "content": "<p>Me (and Laura Capuano which is arriving soon) are interested</p>",
        "id": 429340566,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711361228
    },
    {
        "content": "<p>Me too!</p>",
        "id": 429341356,
        "sender_full_name": "Francesco Veneziano",
        "timestamp": 1711361451
    },
    {
        "content": "<p>And me too!</p>",
        "id": 429341478,
        "sender_full_name": "Silvain Rideau-Kikuchi",
        "timestamp": 1711361479
    },
    {
        "content": "<p>Me too</p>",
        "id": 429343781,
        "sender_full_name": "Pietro Monticone",
        "timestamp": 1711361973
    },
    {
        "content": "<p>Unless anyone shows up in the Schur Functions project, in which case I feel like I should contribute, I'm in :)</p>",
        "id": 429351631,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1711363945
    },
    {
        "content": "<p>I'm in! (just arrived)</p>",
        "id": 429356496,
        "sender_full_name": "Laura Capuano",
        "timestamp": 1711365196
    },
    {
        "content": "<p>Great! We will meet at the library after the coffee break to get started <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 429401331,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1711373069
    },
    {
        "content": "<p>I'll arrive later after having contributed to the FLT3 project.</p>",
        "id": 429413361,
        "sender_full_name": "Pietro Monticone",
        "timestamp": 1711374994
    },
    {
        "content": "<p>We wrote three steps for the proof of each of the two lemmas we wrote before (archimedean and not archimedean) following conrad's note as a reference (in the README.md file)</p>",
        "id": 429504947,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711398718
    },
    {
        "content": "<p>I formalized the statements of step 1 and 2 of the Archimedean case, leaving the proofs <code>sorry</code>. I also added some documentation to the file. Feel free to do the same for your outline of the non-Archimedean case.</p>",
        "id": 429592199,
        "sender_full_name": "Sam van G",
        "timestamp": 1711435397
    },
    {
        "content": "<p>some of the steps can probably be split into smaller steps</p>",
        "id": 429608178,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711443384
    },
    {
        "content": "<p>We are at the library.</p>",
        "id": 429614185,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1711445558
    },
    {
        "content": "<p>For the Archimedean part we need the following lemma: is it already in Mathlib? <br>\n<code> lemma MulRingNorm_le (n : ℕ) (f : MulRingNorm ℚ) : f n ≤ n :=</code><br>\nThe proof is easy by induction on n <br>\nIf it is not in Mathlib maybe we should consider adding it to the Basic file</p>",
        "id": 429665503,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711462700
    },
    {
        "content": "<p>I can't find it, but it should be a 3-line induction proof</p>",
        "id": 429666150,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1711462907
    },
    {
        "content": "<p>Good exercise! :)</p>",
        "id": 429666737,
        "sender_full_name": "Sam van G",
        "timestamp": 1711463084
    },
    {
        "content": "<p>Got almost a proof, but it got stuck in the easiest step (using that f(1) = 1) and no idea why</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">MulRingNorm_nat_le_nat</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">MulRingNorm</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">induction'</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">hn</span>\n  <span class=\"bp\">·</span> <span class=\"n\">push_cast</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">le_iff_lt_or_eq</span><span class=\"o\">]</span>\n    <span class=\"n\">right</span>\n    <span class=\"n\">exact</span> <span class=\"n\">f.map_zero'</span>\n  <span class=\"bp\">·</span> <span class=\"n\">push_cast</span>\n    <span class=\"k\">calc</span>\n      <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">f.add_le'</span> <span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"mi\">1</span>\n      <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- rw[f.map_one']</span>\n      <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">add_le_add_right</span> <span class=\"n\">hn</span> <span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 429676618,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711465692
    },
    {
        "content": "<p>What error do you get when you try that <code>rw[f.map_one']</code>?</p>",
        "id": 429677246,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1711465853
    },
    {
        "content": "<p>tactic 'rewrite' failed, did not find instance of the pattern in the target expression<br>\n  f.toFun 1</p>",
        "id": 429677395,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711465893
    },
    {
        "content": "<p>I think <code>rw[map_one]</code> should work</p>",
        "id": 429678340,
        "sender_full_name": "Sam van G",
        "timestamp": 1711466135
    },
    {
        "content": "<p>it does......but why?</p>",
        "id": 429678522,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711466177
    },
    {
        "content": "<p>Because <code>f</code> is a <code>MulRingNorm</code>, so Lean is able to infer that <code>f 1 = 1</code> (it finds a <code>OneHomClass</code> instance).</p>",
        "id": 429679140,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1711466341
    },
    {
        "content": "<p>I <em>think</em> it's because <code>map_one'</code> gives <code>f.toFun 1 = 1</code>, whereas <code>map_one</code> gives directly <code>f 1 = 1</code>. This is a subtle thing that's also been bugging me though.</p>",
        "id": 429679371,
        "sender_full_name": "Sam van G",
        "timestamp": 1711466403
    },
    {
        "content": "<p>Yes, that is why map_one' is failing.</p>",
        "id": 429679478,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1711466428
    },
    {
        "content": "<p>One way to avoid this kind of problem is to write <code>simp?</code>. It suggests <code>simp only [map_one]</code> in this case. This doesn't always work but it's nice when it does.</p>",
        "id": 429679990,
        "sender_full_name": "Sam van G",
        "timestamp": 1711466584
    },
    {
        "content": "<p>The <code>'</code> version is supposed to tell you not to use it <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 429679992,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711466585
    },
    {
        "content": "<p>The file README.md contains now a short list of info that we are planning to use in the presentation</p>",
        "id": 430224649,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711702909
    },
    {
        "content": "<p>if you have any comments or suggestions feel free to tell us!</p>",
        "id": 430224704,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711702923
    },
    {
        "content": "<p>How did the presentation go? <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 430324832,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1711750550
    },
    {
        "content": "<p>I think it went well, we kept it kind of short but hopefully informative enough for the audience</p>",
        "id": 430331406,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711754880
    },
    {
        "content": "<p>How's the PRing to mathlib going? :-)</p>",
        "id": 430331711,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1711755045
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Ostrowski's.20Theorem.20Project/near/430331711\">said</a>:</p>\n<blockquote>\n<p>How's the PRing to mathlib going? :-)</p>\n</blockquote>\n<p>Good question.</p>",
        "id": 430375457,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1711791940
    },
    {
        "content": "<p>Anyway, I'll have a few talks to prepare in the next days, but after that I'm happy to resume this work! :)</p>",
        "id": 430375517,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1711791982
    },
    {
        "content": "<p>Maybe we should start pushing some lemmas soon? Not sure how this is done usually</p>",
        "id": 430376448,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711792912
    },
    {
        "content": "<p>In general it is better to open small PRs. Don't worry if there are only preliminary lemmas, that is totally fine.</p>",
        "id": 430376540,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711792992
    },
    {
        "content": "<p>In practice as soon you have a lemma that you think is ready you can open the PR</p>",
        "id": 430376556,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711793007
    },
    {
        "content": "<p>Would it be better to create a different file which contains some of the lemmas and push that one?</p>",
        "id": 430377334,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711793767
    },
    {
        "content": "<p>Well, it depends on the lemmas. If they're very basic you can probably find a file to put them in mathlib. But the best is to open a PR and discuss it on github</p>",
        "id": 430380053,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711796340
    },
    {
        "content": "<p>note that if you modify, say \"Mathlib.VeryBasic.Basic\", you can push, CI will do its work, after some time <code>lake exe cache get</code> will get the oleans</p>",
        "id": 430380101,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711796395
    },
    {
        "content": "<p><code>#find_home! lemmaName</code> will tell you a good place to put the lemma</p>",
        "id": 430380778,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1711796911
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Ostrowski's.20Theorem.20Project/near/430380778\">said</a>:</p>\n<blockquote>\n<p><code>#find_home! lemmaName</code> will tell you a good place to put the lemma</p>\n</blockquote>\n<p>and if the results do not convince you, try it with <code>import Mathlib</code> or you may have found a bug in <code>#find_home</code>!</p>",
        "id": 430382527,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1711798511
    },
    {
        "content": "<p>I made some small changes to the file. I realized that step 1 Arch is what makes the files very slow (at least in my Mac) so i started pulling out some of the haves that have long proofs into separate lemmas (as <span class=\"user-mention\" data-user-id=\"390622\">@Nirvana Coppola</span> started doing) and already with two lemmas the speed increase is noticeable.</p>",
        "id": 430403792,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1711817225
    },
    {
        "content": "<p>I think that everything in <a href=\"https://github.com/mariainesdff/ostrowski2024/blob/master/Ostrowski2024/Basic.lean\">Basic.lean</a> could be PR'd in the file <code>Mathlib.Analysis.Normed.Ring.Seminorm</code>. This would require adding an import to that file (<code>Mathlib.Analysis.SpecialFunctions.Pow.Real</code>), but since <code>Mathlib.Analysis.Normed.Ring.Seminorm</code> is not imported by anything yet, that is probably ok.</p>",
        "id": 430749566,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1712050355
    },
    {
        "content": "<p>Who wants to PR it? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 430749618,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1712050375
    },
    {
        "content": "<p>If someone who's never made a PR before makes the PR then they get special treatment from reviewers :-)</p>",
        "id": 430756447,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712052794
    },
    {
        "content": "<p>... and if they start it from the current master, their PR should be automatically labeled as <code>new-contributor</code>!</p>\n<p>(This would be a great test of the bot.)</p>",
        "id": 430778109,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1712060477
    },
    {
        "content": "<p>I can do it</p>",
        "id": 430785304,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712062837
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"406490\">@María Inés de Frutos Fernández</span> does it make sense to move any of the lemmas in the first part of <code>Rationals</code> into <code>basic</code>?</p>",
        "id": 430786128,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712063080
    },
    {
        "content": "<p>I would PR what is in <code>Basic.lean</code> first (short PRs are preferred, especially for first contributions).<br>\nWhat lemmas would you like to move?</p>",
        "id": 430789661,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1712064194
    },
    {
        "content": "<p>Ok let's try to PR these and we can discuss what to move later (there are lemmas about the triangle inequality of MulRingNorms with lists like <code>flits_triang</code> but it has probably to be written in a better way (and possibly generalized)</p>",
        "id": 430791010,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712064649
    },
    {
        "content": "<p>Yes, I think that this lemma could be generalized using any ring instead of <code>ℚ</code> and any function satisfying <code>SubadditiveHomClass</code>. There are probably other lemmas in <code>Rationals.lean</code> and <code>MulRingNormRat.lean</code> that are currently stated for <code>ℚ</code> but actually hold in greater generality.</p>",
        "id": 430793948,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1712065577
    },
    {
        "content": "<p>If I did everything correctly we have our first PR:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/11852\">https://github.com/leanprover-community/mathlib4/pull/11852</a></p>",
        "id": 430795598,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712066032
    },
    {
        "content": "<p>Please choose a more descriptive name than <code>my_new_branch</code> in the future <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> (but no need to change it now that the PR is open)</p>",
        "id": 430797518,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1712066538
    },
    {
        "content": "<p>Sorry about that, I was too focused on following every step of the tutorial for the new PR that forgot to change the name</p>",
        "id": 430797696,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712066588
    },
    {
        "content": "<p>No worries!</p>",
        "id": 430797814,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1712066618
    },
    {
        "content": "<p>Sadly, the new-contributor's bot reports</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">continuous</span> <span class=\"n\">integration</span> <span class=\"bp\">/</span> <span class=\"n\">New</span> <span class=\"n\">Contributor</span> <span class=\"n\">Check</span> <span class=\"o\">(</span><span class=\"n\">push</span><span class=\"o\">)</span> <span class=\"bp\">—</span> <span class=\"n\">Found</span> <span class=\"mi\">30</span> <span class=\"n\">PRs</span> <span class=\"kd\">by</span> <span class=\"n\">this</span> <span class=\"n\">author.</span>\n</code></pre></div>\n<p><span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 430802677,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1712068030
    },
    {
        "content": "<p>30? <span aria-label=\"flushed\" class=\"emoji emoji-1f633\" role=\"img\" title=\"flushed\">:flushed:</span></p>",
        "id": 430802909,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712068100
    },
    {
        "content": "<p>In fact, this is just a lower bound: apparently it stops counting at 30.  No one seems to know what it is that it is counting, though, since according to GitHub you have 1 PR...</p>",
        "id": 430803091,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1712068164
    },
    {
        "content": "<p>From the Italian academic perspective, 30 is a nice number... <span aria-label=\"top hat\" class=\"emoji emoji-1f3a9\" role=\"img\" title=\"top hat\">:top_hat:</span></p>",
        "id": 430804308,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1712068516
    },
    {
        "content": "<p>In the meanwhile I removed the last sorry in step 2 of the Archimedean case. There is one sorry left in <code>fn_le_from_expansion</code>, but that should follow from the lemma right before that.</p>",
        "id": 430811610,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1712070382
    },
    {
        "content": "<p>I simplified the proof of the last lemma in MulRingNormRat.lean</p>",
        "id": 430849163,
        "sender_full_name": "Francesco Veneziano",
        "timestamp": 1712082306
    },
    {
        "content": "<p>We have a first sorry-free proof of Ostrowski's Theorem for the rationals!<br>\nThere is a lot of cleaning up to do and comments to add</p>",
        "id": 431355914,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1712248170
    },
    {
        "content": "<p>Great!! I can have a look at it today and see if there's anything I can do to help with cleaning up.</p>",
        "id": 431464407,
        "sender_full_name": "Sam van G",
        "timestamp": 1712302993
    },
    {
        "content": "<p>We should then also start discussing how to PR it into Mathlib. If I've understood correctly the maintainers prefer to review small pieces (it is currently about <a href=\"https://github.com/mariainesdff/ostrowski2024/blob/master/Ostrowski2024/Rationals.lean\">1200 lines</a>. <br>\nMaybe <span class=\"user-mention\" data-user-id=\"406490\">@María Inés de Frutos Fernández</span> and/or <span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> have more suggestions about that?</p>",
        "id": 431464723,
        "sender_full_name": "Sam van G",
        "timestamp": 1712303101
    },
    {
        "content": "<p>I just noticed this file <a href=\"https://github.com/mariainesdff/ostrowski2024/blob/master/Ostrowski2024/Prova.lean\">Prova.lean</a>, I guess it was not intended to be committed?</p>",
        "id": 431464899,
        "sender_full_name": "Sam van G",
        "timestamp": 1712303133
    },
    {
        "content": "<p>I won't be at the computer until next Monday, but smaller PR are surely a good idea.</p>",
        "id": 431465173,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1712303180
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"411579\">Sam van G</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Ostrowski's.20Theorem.20Project/near/431464899\">said</a>:</p>\n<blockquote>\n<p>I just noticed this file <a href=\"https://github.com/mariainesdff/ostrowski2024/blob/master/Ostrowski2024/Prova.lean\">Prova.lean</a>, I guess it was not intended to be committed?</p>\n</blockquote>\n<p>Sorry, that one is some file I pushed by mistake... I erase it...</p>",
        "id": 431488615,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1712310585
    },
    {
        "content": "<p>There are some lemmas in the file MulRingNormRat that sounds the easiest to clean up/generalize/PR as a smaller PR</p>",
        "id": 431509121,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712318502
    },
    {
        "content": "<p>There’s also stuff about lists that looks simpler to move into a separate smaller PR</p>",
        "id": 431509250,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712318541
    },
    {
        "content": "<p>But I agree that someone with more experience can give better suggestions</p>",
        "id": 431509333,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712318577
    },
    {
        "content": "<p>I agree that facts about lists can make a reasonable small PR</p>",
        "id": 431514398,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1712320408
    },
    {
        "content": "<p>If you want I think you can already go ahead and put those facts about lists into one PR, mentioning that it is part of Ostrowski for rationals. If I remember right Johan helped you with those facts, so he can probably tell you where in Mathlib they should go.</p>",
        "id": 431545248,
        "sender_full_name": "Sam van G",
        "timestamp": 1712329149
    },
    {
        "content": "<p>Probably in the folder on digits... <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 431627659,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1712367666
    },
    {
        "content": "<p>For future use, what is the command that tries to find a folder where some lemma could fit? Someone told me last week but I forgot</p>",
        "id": 431651072,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1712389793
    },
    {
        "content": "<p>I think <code>find_home!</code>? Or possibly <code>#find_home!</code>?</p>",
        "id": 431651835,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712390457
    },
    {
        "content": "<p><code>#find_home &lt;name&gt;</code> or <code>#find_home! &lt;name&gt;</code>.</p>",
        "id": 431652086,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1712390695
    },
    {
        "content": "<p>Thanks!!!</p>",
        "id": 431652940,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1712391361
    },
    {
        "content": "<p>First PR is now officially merged to mathlib!</p>",
        "id": 431660508,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712398198
    },
    {
        "content": "<p>What up next? :) I'll be back in Strasbourg soon, and I'm ready to start working again!</p>",
        "id": 432197474,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1712659224
    },
    {
        "content": "<p>Well getting this stuff into mathlib is important. If you're looking for more maths to do then there's the extension to number fields. This doesn't involve redoing everything: you have a valuation on a number field and you want to show that it's either P-adic or an embedding into \\C, and you can do this by restricting to \\Q and then using techniques that Maria Ines has developed</p>",
        "id": 432199604,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712659728
    },
    {
        "content": "<p>I think one first step would be to start polishing the lemmas in the file <code>MulRingNormRat</code>, see what can be written in a more general setting, and probably start a PR for those</p>",
        "id": 432269460,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712675837
    },
    {
        "content": "<p>I'm planning to do the same for some of the Lemmas with the lists and Nat.digits that can also be PR separately</p>",
        "id": 432269598,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712675873
    },
    {
        "content": "<p>then at one point there would probably be a \"bigger\" PR with the whole Ostrowski for Q</p>",
        "id": 432269784,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1712675914
    },
    {
        "content": "<p>There were also some lemmas about limits that could be PR'd separately, right?</p>",
        "id": 432280669,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1712678580
    },
    {
        "content": "<p>After the general lemmas are PR'd, the proof of Ostrowski could be split in two PRs (one for each case).</p>",
        "id": 432280900,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1712678641
    },
    {
        "content": "<p>Ok then since this NormRat lemma I wrote looks hideous I'll try to polish that. Also, I just noticed that I called it Norm_Rat_bla as opposed to NormRat_bla like the others so I'll fix that too. Sahll we also get rid of the comments that refer to the old lean3 version?</p>",
        "id": 432870878,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1712916026
    },
    {
        "content": "<p>Ok, thinking about how to write things more generally I added this lemma (NormRat_equiv_iff_equiv_on_Nat1) even though then we need a slight specialization of it. Please let me know if it's worth PRing it (or the other one, or both, or neither)</p>",
        "id": 432898835,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1712926796
    },
    {
        "content": "<p>Hi all, the main file now only calls one version of NormRat_equiv_iff_equiv_on_Nat , the one added by Nirvana. I commented the other ones. I have also commented the imports of Basic.lean, since now everything there is in Mathlib. I think the four uncommented lemmas in MulRingNormRat.lean can all be PRd to Mathlib. <span class=\"user-mention\" data-user-id=\"390622\">@Nirvana Coppola</span> , do you want to do it?</p>",
        "id": 436055161,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714399434
    },
    {
        "content": "<p>Great thanks! Sure, but it's my first PR so it will take a while, don't get alarmed if you don't see it immediately.</p>",
        "id": 436066138,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714402121
    },
    {
        "content": "<p>Please keep in mind that we have the <code>new contributor</code> label that you can add to PR's.</p>",
        "id": 436072460,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1714403610
    },
    {
        "content": "<p>I think a machine now adds this label!</p>",
        "id": 436075177,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714404254
    },
    {
        "content": "<p>can the label be used for the first contribution only? or for the first few ones?</p>",
        "id": 436081339,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714405705
    },
    {
        "content": "<p>I think the label is added as long as fewer than 5 (or so) PRs have been merged (or perhaps closed).</p>",
        "id": 436083642,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714406269
    },
    {
        "content": "<p>The new version of mathlib messed up some imports and name of theorems we were using and I just fixed it for our repo, I think. If any of you has time, can you check it compiles?</p>",
        "id": 436092526,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714408712
    },
    {
        "content": "<p>It doesn't compile for me... <br>\nBefore doing the last changes the other day, I had to manually update Mathlib. Maybe you have to do it too.<br>\nI see you changed Real.rpow_natCast to Real.rpow_nat_cast. If you look in the documentation the second does not exist. I think someone changed these names recently because I actually changed the second to the first after the update.<br>\nBut it is possible I messed up, I don't know...</p>",
        "id": 436096124,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714409834
    },
    {
        "content": "<p>I'm confused. It compiled till the other day, today I updated mathlib and it didn't anymore, because it wanted these other names :|</p>",
        "id": 436097220,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714410132
    },
    {
        "content": "<p>The names changed in mathlib, it's not at all strange</p>",
        "id": 436097351,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714410173
    },
    {
        "content": "<p>Mathlib changes like 20 times a day, with additions but also with modifications</p>",
        "id": 436097437,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714410202
    },
    {
        "content": "<p>but does one have to update it manually?</p>",
        "id": 436097525,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714410233
    },
    {
        "content": "<p>Yes</p>",
        "id": 436097546,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714410241
    },
    {
        "content": "<p>That's fair enough, what I'm surprised about is that now that I made the changes that should be consistent it broke for Fabrizio. Maybe you just have to reupdate mathlib and that's all though</p>",
        "id": 436097620,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714410256
    },
    {
        "content": "<p>Feel free to write a tool to do it automatically <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 436097635,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714410261
    },
    {
        "content": "<p>There are partial tools, but atm the authors are busy on other stuff</p>",
        "id": 436097707,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714410299
    },
    {
        "content": "<p>Where \"you\" means \"Fabrizio\" <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 436097740,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714410310
    },
    {
        "content": "<p>If someone (Nirvana) update mathlib, with <code>lake update</code> and push, the others (Fabrizio) must, after <code>git pull</code> do <code>lake exe cache get</code> and restart vs code</p>",
        "id": 436097981,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714410379
    },
    {
        "content": "<p>Note that of course the modifications to mathlib are most of the time harmless, so it's not really complicated</p>",
        "id": 436098104,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714410428
    },
    {
        "content": "<p>I updated Mathlib. It still doesn't work for me...</p>",
        "id": 436099227,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714410830
    },
    {
        "content": "<p>Thanks for the explanation, Riccardo</p>",
        "id": 436099820,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714411038
    },
    {
        "content": "<p>How did you update it?</p>",
        "id": 436100641,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714411324
    },
    {
        "content": "<p>Lake update</p>",
        "id": 436100744,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714411353
    },
    {
        "content": "<p>Well, then both of you updated it, probably to different versions</p>",
        "id": 436100907,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714411411
    },
    {
        "content": "<p>D:</p>",
        "id": 436100936,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714411421
    },
    {
        "content": "<p>I guess that <code>git pull</code> complains about conflicts or stuff like that</p>",
        "id": 436101000,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714411442
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"390622\">@Nirvana Coppola</span> , if you had to uncomment <code>import Ostrowski2024.Basic</code> it means your Mathlib does not see what Amos PRd some weeks ago</p>",
        "id": 436101765,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714411680
    },
    {
        "content": "<p>I strongly suggest you synchronize your repositories</p>",
        "id": 436101904,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714411718
    },
    {
        "content": "<p>That's interesting.</p>",
        "id": 436101913,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714411721
    },
    {
        "content": "<p>Is the online version ok?</p>",
        "id": 436101924,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714411724
    },
    {
        "content": "<p>But it's also strange because I made the lake exe cache get before doing anything else.</p>",
        "id": 436102012,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714411746
    },
    {
        "content": "<p>I have the impression you are misunderstanding something about lake and git</p>",
        "id": 436102427,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714411849
    },
    {
        "content": "<p>This is very possible.</p>",
        "id": 436102471,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714411864
    },
    {
        "content": "<p>This is clear... I still have so much to learn about that</p>",
        "id": 436102501,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714411872
    },
    {
        "content": "<p>But we don't even know who of us is... or maybe we both are! <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span></p>",
        "id": 436102580,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714411898
    },
    {
        "content": "<p>The mathlib version is written in a normal file, tracked by git</p>",
        "id": 436102620,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714411914
    },
    {
        "content": "<p><code>lake update </code> changes it, and it downloads the new cache, that is a precompiled version of mathlib, and it is ignored by git</p>",
        "id": 436102797,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714411964
    },
    {
        "content": "<p>I am not at the computer right now so I cannot check it, but is the online version ok?</p>",
        "id": 436102904,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714412005
    },
    {
        "content": "<p>I am about to get off my train right now, so I cannot check either</p>",
        "id": 436103082,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714412054
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Ostrowski's.20Theorem.20Project/near/436102904\">said</a>:</p>\n<blockquote>\n<p>but is the online version ok?</p>\n</blockquote>\n<p>At this point I would not know how to check and answer this question.</p>",
        "id": 436104840,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714412701
    },
    {
        "content": "<p>Luckily, the stuff I was supposed to PR aren't touched by this, and I'm finally done.</p>",
        "id": 436104892,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714412722
    },
    {
        "content": "<p>Ok, let me phrase the question differently: does anyone have a version you all would like to have?</p>",
        "id": 436105270,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714412863
    },
    {
        "content": "<p>Forget about mathlib errors, the point is local work done by people on their own computer and not pushed</p>",
        "id": 436105377,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714412891
    },
    {
        "content": "<p>I don't know, let's hear if the others complain. Otherwise tomorrow I'll try to figure out what's wrong with my computer.</p>",
        "id": 436105461,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714412932
    },
    {
        "content": "<p>Anyway <code>git reset --hard</code> makes everything like the online version. BEWARE THAT THIS DESTROYS LOCAL CHANGES</p>",
        "id": 436105968,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714413109
    },
    {
        "content": "<p>I will have a look.</p>",
        "id": 436106074,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1714413137
    },
    {
        "content": "<p>Quick recap: the version I pushed a few hours ago was working on my computer and not on Nirvana’s. She fixed it for hers and now it doesn’t work for me</p>",
        "id": 436106891,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714413401
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"390622\">Nirvana Coppola</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Ostrowski's.20Theorem.20Project/near/436092526\">said</a>:</p>\n<blockquote>\n<p>The new version of mathlib messed up some imports and name of theorems we were using and I just fixed it for our repo, I think. If any of you has time, can you check it compiles?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"390622\">@Nirvana Coppola</span>  , it seems that you are using an old version of Mathlib (in the latest changes you pushed, you reverted to old lemma names).<br>\nMore importantly, the online repo had outdated versions of the <code>lean-toolchain</code> and <code>lake-manifest.json</code> files. <br>\nI have just pushed. Could either of you do <code>git pull</code> followed by <code>lake exe cache get</code> to confirm if it now works for you?</p>",
        "id": 436110889,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1714414714
    },
    {
        "content": "<p>I won’t be able to do it until tomorrow, but thanks</p>",
        "id": 436114261,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714415866
    },
    {
        "content": "<p>I tried doing that just now and got this strange GIT error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">amos</span><span class=\"bp\">/</span><span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">LEAN4</span><span class=\"bp\">/</span><span class=\"n\">ostrowski2024</span><span class=\"bp\">/</span><span class=\"n\">Ostrowski2024</span><span class=\"bp\">/</span><span class=\"n\">Rationals.lean</span> <span class=\"n\">Init</span> <span class=\"n\">Ostrowski2024.MulRingNormRat</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Log.Base</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Pow.Asymptotics</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Pow.Real</span> <span class=\"c1\">--no-build` failed:</span>\n\n<span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">rev</span><span class=\"bp\">-</span><span class=\"n\">parse</span> <span class=\"c1\">--verify HEAD    # in directory ./.lake/packages/mathlib</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">fatal</span><span class=\"o\">:</span> <span class=\"n\">Needed</span> <span class=\"n\">a</span> <span class=\"n\">single</span> <span class=\"n\">revision</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`</span><span class=\"n\">git</span><span class=\"bp\">`</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">code</span> <span class=\"mi\">128</span>\n<span class=\"n\">Invalid</span> <span class=\"n\">Lake</span> <span class=\"n\">configuration.</span>  <span class=\"n\">Please</span> <span class=\"n\">restart</span> <span class=\"n\">the</span> <span class=\"n\">server</span> <span class=\"n\">after</span> <span class=\"n\">fixing</span> <span class=\"n\">the</span> <span class=\"n\">Lake</span> <span class=\"n\">configuration</span> <span class=\"n\">file.</span>\n</code></pre></div>",
        "id": 436130293,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1714421454
    },
    {
        "content": "<p>Seems to be related to something other than our project:</p>\n<p><a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435877290\">https://leanprover.zulipchat.com/#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435877290</a></p>",
        "id": 436133162,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1714422486
    },
    {
        "content": "<p>Also</p>\n<p><a href=\"#narrow/stream/270676-lean4/topic/Lean.20error.20codes.20.28e.2Eg.2E.20code.20139.29\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Lean.20error.20codes.20.28e.2Eg.2E.20code.20139.29</a></p>",
        "id": 436133233,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1714422517
    },
    {
        "content": "<p>I pulled what María Inés pushed, typed <code>git reset --hard</code> and <code>lake exe cache get</code>.<br>\nIt works now, Thanks <span class=\"user-mention\" data-user-id=\"406490\">@María Inés de Frutos Fernández</span> !</p>",
        "id": 436156374,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714431653
    },
    {
        "content": "<p>Just a warning that <code>git reset --hard</code> can make you lose local work. Would it have worked if you didn't type that?</p>",
        "id": 436202838,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714458324
    },
    {
        "content": "<p>Without the <code>git reset --hard</code> I got the error above (ie I only did<code>git pull</code> followed by <code>lake exe cache get</code>)</p>",
        "id": 436203799,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1714458792
    },
    {
        "content": "<p>Sorry, I typed git reset —hard because vs code wasn’t letting me pull María Inés’ version.</p>",
        "id": 436203835,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714458812
    },
    {
        "content": "<p>So, I did that before pulling, not after as I wrote above</p>",
        "id": 436204041,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714458901
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"319141\">Amos Turchet</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Ostrowski's.20Theorem.20Project/near/436203799\">said</a>:</p>\n<blockquote>\n<p>Without the <code>git reset --hard</code> I got the error above (ie I only did<code>git pull</code> followed by <code>lake exe cache get</code>)</p>\n</blockquote>\n<p>Does it work for you now?</p>",
        "id": 436204118,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714458938
    },
    {
        "content": "<p>Ok just as long as everyone is aware that <code>git reset --hard</code> means something like \"delete all commits I made which I didn't push\" and in particular it means \"possibly delete some of my stuff\"</p>",
        "id": 436205273,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714459439
    },
    {
        "content": "<p>Yes yes, I learnt it the hard way some time ago… <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>thanks!</p>",
        "id": 436206870,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1714460124
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"406490\">María Inés de Frutos Fernández</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Ostrowski's.20Theorem.20Project/near/436110889\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"390622\">Nirvana Coppola</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Ostrowski's.20Theorem.20Project/near/436092526\">said</a>:</p>\n<blockquote>\n<p>The new version of mathlib messed up some imports and name of theorems we were using and I just fixed it for our repo, I think. If any of you has time, can you check it compiles?</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"390622\">Nirvana Coppola</span>  , it seems that you are using an old version of Mathlib (in the latest changes you pushed, you reverted to old lemma names).<br>\nMore importantly, the online repo had outdated versions of the <code>lean-toolchain</code> and <code>lake-manifest.json</code> files. <br>\nI have just pushed. Could either of you do <code>git pull</code> followed by <code>lake exe cache get</code> to confirm if it now works for you?</p>\n</blockquote>\n<p>This worked for me, thanks!</p>",
        "id": 436219818,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714465280
    },
    {
        "content": "<p>Question about the PR: the lint check failed (because I didn't think about it). Do I have to do something or just wait?</p>",
        "id": 436220435,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714465504
    },
    {
        "content": "<p>Which PR?</p>",
        "id": 436220474,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714465517
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/87937\">#87937</a> (I d'on't know how to make the short link, sorry)</p>",
        "id": 436220941,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714465721
    },
    {
        "content": "<p>The number does not exist... it is enough to write # 12345, without the space</p>",
        "id": 436221021,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714465768
    },
    {
        "content": "<p>Is it <a href=\"https://github.com/leanprover-community/mathlib4/pull/12517\">#12517</a>?</p>",
        "id": 436221076,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714465795
    },
    {
        "content": "<p>Ah sorry, don't know where I found that, yes, it's correct</p>",
        "id": 436221176,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1714465826
    },
    {
        "content": "<p>The linter is complaining that there lines with more than 100 characters, for example line 402. It is enough to go to a newline just before the last word. Note that in VSCode you have a vertical bar at the 100th character, nothing should be longer than that line.</p>",
        "id": 436221518,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714465963
    },
    {
        "content": "<p>Also, don't forget to mark the PR \"awaiting review\", otherwise nobody will have a look at it.</p>",
        "id": 436221587,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714465994
    },
    {
        "content": "<p>In the PR description you can use <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> as in Zulip.</p>",
        "id": 436221744,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714466049
    },
    {
        "content": "<p>No i still get the message </p>\n<div class=\"codehilite\" data-code-language=\"stderr\"><pre><span></span><code>error: &gt; git rev-parse --verify HEAD    # in directory ./.lake/packages/mathlib\nerror: stderr:\nfatal: Needed a single revision\nerror: external command `git` exited with code 128\nInvalid Lake configuration.  Please restart the server after fixing the Lake configuration file.\n</code></pre></div>",
        "id": 436236467,
        "sender_full_name": "Amos Turchet",
        "timestamp": 1714471412
    },
    {
        "content": "<p>If you only want the exact version online you can just reclone the whole repo.</p>",
        "id": 436236714,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714471509
    },
    {
        "content": "<p>Hello everyone, I just formalized Ostrowski's theorem in Lean4 as a part of my project in the formalizing course following my old lean3 code lead by Maria, you can check it here: <a href=\"https://github.com/Biiiilly/ostrowski_project\">https://github.com/Biiiilly/ostrowski_project</a>. Is there anything I can help with it here?</p>",
        "id": 437049642,
        "sender_full_name": "Jiale Miao",
        "timestamp": 1714854431
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"471791\">Jiale Miao</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Ostrowski's.20Theorem.20Project/near/437049642\">said</a>:</p>\n<blockquote>\n<p>Hello everyone, I just formalized Ostrowski's theorem in Lean4 as a part of my project in the formalizing course following my old lean3 code lead by Maria, you can check it here: <a href=\"https://github.com/Biiiilly/ostrowski_project\">https://github.com/Biiiilly/ostrowski_project</a>. Is there anything I can help with it here?</p>\n</blockquote>\n<p>Hi! You could help by reviewing our PRs. We have been waiting for a while for <a href=\"https://github.com/leanprover-community/mathlib4/pull/12517\">#12517</a> to be merged (anybody knows what's going on with that?) and we are ready to open more. <br>\nAfter that we could start with Ostrowski for number fields. If you are interested and the rest of the team agrees, you can join the project.</p>",
        "id": 438172621,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1715506935
    },
    {
        "content": "<p>I believe you should open a full string of PRs that leads to the final statement, that would help evaluate the individual steps. The content of the present one doesn't look so useful once one will have Ostrowski.</p>",
        "id": 438184668,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1715520291
    },
    {
        "content": "<p>I added some review comments to <a href=\"https://github.com/leanprover-community/mathlib4/pull/12517\">#12517</a>. As Antoine said, you could start opening PRs for the rest of the proof without waiting for this one to be merged.</p>",
        "id": 438318669,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1715593530
    },
    {
        "content": "<p>Hi, thanks Maria and Antoine. I just implemented Maria's suggestions, hoping I didn't mess anything up!</p>",
        "id": 438322476,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1715594670
    },
    {
        "content": "<p>Hi everyone, hope you are doing well! I pushed a header to the new file (thanks <span class=\"user-mention\" data-user-id=\"626233\">@Fabrizio Barroero</span> ), but since I've never written one I'd appreciate feedback, just so I know we didn't write anything inappropriate. Secondly, there is now a new error about the imports: what's to be done to fix it? :)</p>",
        "id": 441652088,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1717145252
    },
    {
        "content": "<p>Hi Nirvana! The error is that you added a new file (<a href=\"https://github.com/leanprover-community/mathlib4/pull/12517/files#diff-accabbe84c1e8af38a79b467a363dc8601aa7f20a73c779711faad795bb614b3\">Mathlib/NumberTheory/Ostrowski.lean</a>), but you have not added it as an import to the file <code>Mathlib.lean</code>.</p>",
        "id": 441667719,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1717150041
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"s2\">\"*.lean\"</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">env</span><span class=\"w\"> </span><span class=\"n\">LC_ALL</span><span class=\"bp\">=</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">sort</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">sed</span><span class=\"w\"> </span><span class=\"bp\">'</span><span class=\"n\">s</span><span class=\"bp\">/\\.</span><span class=\"n\">lean</span><span class=\"bp\">//;</span><span class=\"n\">s</span><span class=\"o\">,</span><span class=\"bp\">/</span><span class=\"o\">,</span><span class=\"bp\">.</span><span class=\"o\">,</span><span class=\"n\">g</span><span class=\"bp\">;</span><span class=\"n\">s</span><span class=\"bp\">/^/</span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"bp\">/'</span><span class=\"w\"> </span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">lean</span>\n</code></pre></div>\n<p>does it automatically</p>",
        "id": 441667886,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1717150086
    },
    {
        "content": "<p>Thanks!!</p>",
        "id": 441670492,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1717150850
    },
    {
        "content": "<p>Congrats on getting <a href=\"https://github.com/leanprover-community/mathlib4/pull/12517\">#12517</a> merged! What's next? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 445130977,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1718630340
    },
    {
        "content": "<p>I think we could start with the non-Archimedean part. If it’s ok with everyone I’m gonna do it, hopefully I can do it by the end of the week. Should I just make a PR with the whole non-arch case? It’s about 200 lines</p>",
        "id": 445165047,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1718639126
    },
    {
        "content": "<p>200 lines should be fine.</p>",
        "id": 445199751,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1718649572
    },
    {
        "content": "<p>We have a PR with the non-archimedean case of Ostrowski's Theorem. <br>\nIt can be found here <a href=\"https://github.com/leanprover-community/mathlib4/pull/14026\">#14026</a>.</p>",
        "id": 446244719,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1719043969
    },
    {
        "content": "<p>Wow, that was fast! :D</p>",
        "id": 446876398,
        "sender_full_name": "Nirvana Coppola",
        "timestamp": 1719320680
    },
    {
        "content": "<p>It helps if you have a maintainer who (a) was not involved with writing the code and (b) is definitely interested in the material :-)</p>",
        "id": 446903165,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719326403
    },
    {
        "content": "<p>Many thanks to <span class=\"user-mention\" data-user-id=\"479359\">@Michael Stoll</span>  for the review and to <span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span>  for the suggestion to add the uniqueness of the prime p in the statement and for the final approval!</p>",
        "id": 446903814,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1719326569
    },
    {
        "content": "<p>Will the infinity/Archimedean case be added as well?</p>",
        "id": 446930544,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1719332279
    },
    {
        "content": "<p>Yes, we have a proof, but there’s still some work to do on it</p>",
        "id": 446933613,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1719332909
    }
]