[
    {
        "content": "<p>Hello everyone,</p>\n<p>This is the stream for the project on the Cantor set.</p>",
        "id": 429352399,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1711364129
    },
    {
        "content": "<p>I would like to join this project</p>",
        "id": 429353771,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711364469
    },
    {
        "content": "<p>Hello ! I'm interested, but i'm a total beginner. I can also go to the group project about proper grouo actions if we are too many in here</p>",
        "id": 429353927,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711364511
    },
    {
        "content": "<p>I'm in. Isabelle</p>",
        "id": 429354649,
        "sender_full_name": "Isabelle Dubois",
        "timestamp": 1711364696
    },
    {
        "content": "<p>I'm interested</p>",
        "id": 429355784,
        "sender_full_name": "Alina Yan",
        "timestamp": 1711364987
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"704145\">Isabelle Dubois</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429354649\">said</a>:</p>\n<blockquote>\n<p>I'm in. Isabelle</p>\n</blockquote>\n<p>My first thought was that you want to implement it in Isabelle theorem prover <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 429355974,
        "sender_full_name": "Alina Yan",
        "timestamp": 1711365035
    },
    {
        "content": "<p>Hello, i checked and the Hausdorff distance is already implemented in Lean (and the even stronger version of Gromov): <a href=\"https://www.moogle.ai/search/raw?q=haussdorf%20distance\">https://www.moogle.ai/search/raw?q=haussdorf%20distance</a><br>\nIt might be usefull for defining the Cantor set, because it is an attractor for this distance. But maybe it's not realistic, i'm new to Lean</p>",
        "id": 429399900,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711372850
    },
    {
        "content": "<p>This is a third equivalent definition, and it would also be nice. We might meet after all talks in the library and discuss where to go....</p>",
        "id": 429416988,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711375848
    },
    {
        "content": "<p>What kind of equivalent definitions are we interested in? Is it feasible to prove that the Cantor set is the only compact second countable zero-dimensional perfect topological space, up to homeomorphism?</p>",
        "id": 429427339,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711378321
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 429428543,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711378543
    },
    {
        "content": "<p>Apparently Filippo has a pdf with a proof of that, which we could implement</p>",
        "id": 429428673,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711378562
    },
    {
        "content": "<p>This is the interesting fact that is useful</p>",
        "id": 429429000,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711378606
    },
    {
        "content": "<p>If you do so I think it will make your life much easier (and make the theorem much more useful) to prove that the only space such that [...] is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><msup><mo stretchy=\"false\">}</mo><mi mathvariant=\"double-struck\">N</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\{0, 1\\}^\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0952em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">}</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8452em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbb mtight\">N</span></span></span></span></span></span></span></span></span></span></span> and then show that triadic Cantor satisfies [...]</p>",
        "id": 429429816,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711378725
    },
    {
        "content": "<p>yeah but then it doesn't make much sense in here to show that 1/4 is in the set... but then again, the interesting fact is the theorem</p>",
        "id": 429430360,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711378832
    },
    {
        "content": "<p>But what is our starting definition for the Cantor Set? The triadic one? Or is the Cantor Set not even defined at all in Lean</p>",
        "id": 429430676,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711378898
    },
    {
        "content": "<p>I don't think we have anything in the library. Let's talk about this during the coffee break maybe?</p>",
        "id": 429431034,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711378982
    },
    {
        "content": "<p>Sure :)</p>",
        "id": 429436339,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711380093
    },
    {
        "content": "<p>I checked and I think that there is no definition of cantor set in lean</p>",
        "id": 429440974,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711380944
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/atYo_abkAGMZ9mgA5AVrKOJ6/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/atYo_abkAGMZ9mgA5AVrKOJ6/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/atYo_abkAGMZ9mgA5AVrKOJ6/image.png\"></a></div>",
        "id": 429450977,
        "sender_full_name": "Alina Yan",
        "timestamp": 1711382720
    },
    {
        "content": "<p>The best thing to do is to create a fork and to push there; is this OK?</p>",
        "id": 429453000,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711383116
    },
    {
        "content": "<p>When <span class=\"user-mention\" data-user-id=\"556717\">@Emilie Uthaiwat</span> was pushing, she got an error \"cannot push to master branch: create a fork instead\"? Click yes, and then share the url of this fork with the others who can clone/push.</p>",
        "id": 429453347,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711383185
    },
    {
        "content": "<p><a href=\"https://github.com/EmilieUthaiwat/LFTCM2024/tree/master/LFTCM2024\">https://github.com/EmilieUthaiwat/LFTCM2024/tree/master/LFTCM2024</a></p>",
        "id": 429457370,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1711384037
    },
    {
        "content": "<p>This is the link to the file on which we can work.</p>",
        "id": 429457376,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1711384038
    },
    {
        "content": "<p>Please post your GitHub usernames here so that Emilie can add you as collaborators to the project</p>",
        "id": 429468621,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711386553
    },
    {
        "content": "<p>If you need push rights to the main repo just ask me, no problem</p>",
        "id": 429469787,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711386886
    },
    {
        "content": "<p>I was using why my intuition is all wrong when trying to prove some of the lemmas, turns out that our pre_Cantor_set functino is wrong. There should be no (n-1) in the definition.</p>",
        "id": 429508470,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1711400216
    },
    {
        "content": "<p>Absolutely. I'm sorry about that.</p>",
        "id": 429509184,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1711400520
    },
    {
        "content": "<p>No problem ;-)</p>",
        "id": 429510739,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1711401137
    },
    {
        "content": "<p>I'll fix it</p>",
        "id": 429511222,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1711401241
    },
    {
        "content": "<p>So I have a working proof that zero is in the Cantor set</p>",
        "id": 429511849,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1711401359
    },
    {
        "content": "<p>I used the rewriting tricks from Isabelle's file</p>",
        "id": 429511931,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1711401369
    },
    {
        "content": "<p>I pushed a file to the project, with a proof of zero_in_Cantor. I don't know how my proof differs from that of <span class=\"user-mention\" data-user-id=\"573474\">@Tomáš Jakl</span>. Would be happy if someone with better Lean proficiency helps me understand :)</p>",
        "id": 429599505,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711439677
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"573474\">Tomáš Jakl</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429508470\">said</a>:</p>\n<blockquote>\n<p>I was using why my intuition is all wrong when trying to prove some of the lemmas, turns out that our pre_Cantor_set functino is wrong. There should be no (n-1) in the definition.</p>\n</blockquote>\n<p>Thanks for discovering this!</p>",
        "id": 429599592,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711439721
    },
    {
        "content": "<p>Can I check what the <code>git</code> status of the project is? Are we all aligned using <span class=\"user-mention\" data-user-id=\"556717\">@Emilie Uthaiwat</span> 's fork? Is it updated with everybody's results?</p>",
        "id": 429603934,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711441778
    },
    {
        "content": "<p>I was able to push mine.</p>",
        "id": 429604693,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711442053
    },
    {
        "content": "<p>So, now that we a working definition and working push rights, I believe we are finally ready to work on the following goals, split into teams: I propose, for now:<br>\nTeam 1 works on the alternative definition found on Wikipedia and on proving they're the same<br>\nTeam 2 works on proving that 1/4 is in the Cantor set<br>\nTeam 3 starts working on  proving the basic properties topological of the Cantor set.</p>",
        "id": 429606945,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711442894
    },
    {
        "content": "<p>A proof for Team 2 should be inductive, as the one provided by John here: <a href=\"https://math.stackexchange.com/questions/289803/1-4-is-in-the-cantor-set\">https://math.stackexchange.com/questions/289803/1-4-is-in-the-cantor-set</a></p>",
        "id": 429607118,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711442980
    },
    {
        "content": "<p>I think that the following is slightly easier for 2.:</p>\n<p>To say that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo>∈</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">1/4\\in C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/4</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> means that for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> there is a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><msup><mn>3</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">0\\le k\\le 3^{n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span> such that either <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>3</mn><mi>k</mi><mi mathvariant=\"normal\">/</mi><msup><mn>3</mn><mi>n</mi></msup><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mn>3</mn><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>3</mn><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">1/4 \\in [3k/3^n,(3k+1)/3n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/4</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">3</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord\">/3</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo>∈</mo><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">(</mo><mn>3</mn><mi>k</mi><mo>+</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><msup><mn>3</mn><mi>n</mi></msup><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><msup><mn>3</mn><mi>n</mi></msup><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">1/4\\in [(3k+2)/3^n,3(k+1)/3^n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/4</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[(</span><span class=\"mord\">3</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>. In turns this means that we need to find an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">a\\in \\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span> such that</p>\n<ol>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mo stretchy=\"false\">(</mo><msup><mn>3</mn><mi>n</mi></msup><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo>≤</mo><mi>a</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">a≤(3^n)/4≤a+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">/4</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≢</mo><mn>1</mn><mspace></mspace><mspace width=\"0.4444em\"/><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow><mspace width=\"0.3333em\"/><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">a\\not\\equiv 1\\pmod{3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4637em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.4444em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">mod</span></span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span>.</li>\n</ol>\n<p>Now, since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> is fixed we can look at <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>3</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">3^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span>, that would be either <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mspace></mspace><mspace width=\"0.4444em\"/><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow><mspace width=\"0.3333em\"/><mn>4</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">1\\pmod{4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.4444em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">mod</span></span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord\">4</span><span class=\"mclose\">)</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mspace></mspace><mspace width=\"0.4444em\"/><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow><mspace width=\"0.3333em\"/><mn>4</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">3\\pmod{4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.4444em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">mod</span></span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord\">4</span><span class=\"mclose\">)</span></span></span></span>. The first condition then becomes, respectively,<br>\n1a. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo>+</mo><mi>m</mi><mo>≤</mo><mi>a</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">a≤1/4+m≤a+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> (where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>3</mn><mi>n</mi></msup><mo>=</mo><mn>1</mn><mo>+</mo><mn>4</mn><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">3^n=1+4m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span><span class=\"mord mathnormal\">m</span></span></span></span>); or<br>\n1b. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mn>3</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo>+</mo><mi>m</mi><mo>≤</mo><mi>a</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">a≤3/4+m≤a+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3/4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> (where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>3</mn><mi>n</mi></msup><mo>=</mo><mn>3</mn><mo>+</mo><mn>4</mn><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">3^n=3+4m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span><span class=\"mord mathnormal\">m</span></span></span></span>).</p>\n<p>In both cases, I suggest to take <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>=</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">a=m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span>, that clearly satisfies both 1a and 1b, so 1 is satisfied. We are left to prove that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>≢</mo><mn>1</mn><mspace></mspace><mspace width=\"0.4444em\"/><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow><mspace width=\"0.3333em\"/><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">m\\not\\equiv 1\\pmod{3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4637em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.4444em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">mod</span></span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span> (remember that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> is the number such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>3</mn><mi>n</mi></msup><mo>=</mo><mi>x</mi><mo>+</mo><mn>4</mn><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">3^n=x+4m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span><span class=\"mord mathnormal\">m</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">x\\in\\{1,3\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">}</span></span></span></span>). Reducing the above equation modulo <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span> it becomes either <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≡</mo><mn>1</mn><mo>+</mo><mi>m</mi><mspace></mspace><mspace width=\"0.4444em\"/><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow><mspace width=\"0.3333em\"/><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">0\\equiv 1+m\\pmod{3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.4444em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">mod</span></span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≡</mo><mn>0</mn><mo>+</mo><mi>m</mi><mspace></mspace><mspace width=\"0.4444em\"/><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow><mspace width=\"0.3333em\"/><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">0\\equiv 0+m\\pmod{3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.4444em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">mod</span></span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span>, and in both cases <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> is not <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> modulo 3.</p>\n<p>But of course also the \"analytic\" argument above is fine, do the one that you prefer!</p>",
        "id": 429609313,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711443811
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429603934\">said</a>:</p>\n<blockquote>\n<p>Can I check what the <code>git</code> status of the project is? Are we all aligned using <span class=\"user-mention silent\" data-user-id=\"556717\">Emilie Uthaiwat</span> 's fork? Is it updated with everybody's results?</p>\n</blockquote>\n<p>I would need help to manage all this push/pull stuff in VSCode. I'm not able to do resolve my problems by myself.</p>",
        "id": 429610039,
        "sender_full_name": "Isabelle Dubois",
        "timestamp": 1711444027
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"704145\">Isabelle Dubois</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429610039\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429603934\">said</a>:</p>\n<blockquote>\n<p>Can I check what the <code>git</code> status of the project is? Are we all aligned using <span class=\"user-mention silent\" data-user-id=\"556717\">Emilie Uthaiwat</span> 's fork? Is it updated with everybody's results?</p>\n</blockquote>\n<p>I would need help to manage all this push/pull stuff in VSCode. I'm not able to do resolve my problems by myself.</p>\n</blockquote>\n<p>I will come right after the talk.</p>",
        "id": 429610300,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711444105
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429610300\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"704145\">Isabelle Dubois</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429610039\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429603934\">said</a>:</p>\n<blockquote>\n<p>Can I check what the <code>git</code> status of the project is? Are we all aligned using <span class=\"user-mention silent\" data-user-id=\"556717\">Emilie Uthaiwat</span> 's fork? Is it updated with everybody's results?</p>\n</blockquote>\n<p>I would need help to manage all this push/pull stuff in VSCode. I'm not able to do resolve my problems by myself.</p>\n</blockquote>\n<p>I will come right after the talk.</p>\n</blockquote>\n<p>thanks!</p>",
        "id": 429611102,
        "sender_full_name": "Isabelle Dubois",
        "timestamp": 1711444424
    },
    {
        "content": "<p>shall we meet somewhere soon? Maybe in the same place as yesterday in the library?</p>",
        "id": 429613474,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711445293
    },
    {
        "content": "<p>yes ! when everybody finish there teas, we could meet in the library like yesterday ?</p>",
        "id": 429614507,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711445658
    },
    {
        "content": "<p>Filippo told me that we can now go to the library to work on the project</p>",
        "id": 429614692,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1711445733
    },
    {
        "content": "<p>Just a reminder that while our files are named Cantor_Set, the actual Cantor set is named Cantor_set... pay attention!</p>",
        "id": 429649218,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711457911
    },
    {
        "content": "<p>Major change necessary for my team! The definition of Cantor space must be adjusted: we need TL, TR in the definition to be homeomorphisms, otherwise proving  the topological properties will be impossible.</p>",
        "id": 429655559,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711459961
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"704117\">Lorenzo Zanichelli</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429655559\">said</a>:</p>\n<blockquote>\n<p>Major change necessary for my team! The definition of Cantor space must be adjusted: we need TL, TR in the definition to be homeomorphisms, otherwise proving  the topological properties will be impossible.</p>\n</blockquote>\n<p>Can these properties be proved for the two functions without modifying the definition? Changing the definition might make it more cumbersome as we don't use any topology there.</p>",
        "id": 429657883,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711460624
    },
    {
        "content": "<p>Being an isomorphism is not a property that exists in mathlib (I think). The property is bundled.. but  leaveI the experienced users in your team explain what this means <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 429658287,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711460728
    },
    {
        "content": "<p>In particular this means that the required change is only Lean related, mathematically nothing happens</p>",
        "id": 429658601,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711460806
    },
    {
        "content": "<p>You can also prove that your function satisfies <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsClosedMap#doc\">docs#IsClosedMap</a>, but maybe at some point you will need it is an homeomorphism, and it is probably better to have it as homeomorphism from the beginning</p>",
        "id": 429662193,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711461771
    },
    {
        "content": "<p>Can I discuss a bit about this with you ? I haven't followed everything closely but I want to make sure you're not making your life harder</p>",
        "id": 429662447,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711461840
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"704117\">Lorenzo Zanichelli</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429655559\">said</a>:</p>\n<blockquote>\n<p>Major change necessary for my team! The definition of Cantor space must be adjusted: we need TL, TR in the definition to be homeomorphisms, otherwise proving  the topological properties will be impossible.</p>\n</blockquote>\n<p>Aren't they homeomorphisms?</p>",
        "id": 429672382,
        "sender_full_name": "Artur Szafarczyk",
        "timestamp": 1711464628
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"704117\">Lorenzo Zanichelli</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429655559\">said</a>:</p>\n<blockquote>\n<p>Major change necessary for my team! The definition of Cantor space must be adjusted: we need TL, TR in the definition to be homeomorphisms, otherwise proving  the topological properties will be impossible.</p>\n</blockquote>\n<p>At any rate to define that something is a homeo you need that it is a function first of all <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> We discuss this after the talk.</p>",
        "id": 429675335,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711465374
    },
    {
        "content": "<p>BTW, all current goals of Group 3 are now properly stated in Lorenzo.Zanichelli.lean, and I've started working on some of them if you want to take a look <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 429680273,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711466650
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"704248\">Artur Szafarczyk</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429672382\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"704117\">Lorenzo Zanichelli</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429655559\">said</a>:</p>\n<blockquote>\n<p>Major change necessary for my team! The definition of Cantor space must be adjusted: we need TL, TR in the definition to be homeomorphisms, otherwise proving  the topological properties will be impossible.</p>\n</blockquote>\n<p>Aren't they homeomorphisms?</p>\n</blockquote>\n<p>Yes, they are, and you could use some of the techniques Jireh is explaining to try to find something in the library that lets you to prove this to Lean!</p>",
        "id": 429680555,
        "sender_full_name": "Sam van G",
        "timestamp": 1711466735
    },
    {
        "content": "<p>The 1/4 is in Cantor is done</p>",
        "id": 429706502,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711474509
    },
    {
        "content": "<p>Let's all meet tomorrow at 10:30 in the same room downstairs at the library. So that we update each other on our progress, synchronize (e.g. maybe merge some files) and agree on how to continue</p>",
        "id": 429714616,
        "sender_full_name": "Alina Yan",
        "timestamp": 1711477369
    },
    {
        "content": "<p>Here is something that fits in the margin<br>\n<a href=\"/user_uploads/3121/bDSQke-EKBZS9X4jpKYfs8Tq/report5.pdf\">report5.pdf</a></p>",
        "id": 429736503,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711485794
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429736503\">said</a>:</p>\n<blockquote>\n<p>Here is something that fits in the margin<br>\n<a href=\"/user_uploads/3121/bDSQke-EKBZS9X4jpKYfs8Tq/report5.pdf\">report5.pdf</a></p>\n</blockquote>\n<p>the proof for stage 4) starts on page 9. <br>\npage 6 might be of interest to prove that Cantor is perfect.</p>",
        "id": 429738586,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711486574
    },
    {
        "content": "<p>tomorrow we're going to the sea</p>",
        "id": 429739318,
        "sender_full_name": "Lorenzo Zanichelli",
        "timestamp": 1711486875
    },
    {
        "content": "<p>Is the proof of 1/4 in Cantor finished in the end?</p>",
        "id": 429742455,
        "sender_full_name": "Artur Szafarczyk",
        "timestamp": 1711488304
    },
    {
        "content": "<p>Ah, ok I see now.</p>",
        "id": 429742638,
        "sender_full_name": "Artur Szafarczyk",
        "timestamp": 1711488393
    },
    {
        "content": "<p>Where did you guys go? I can't find you in the library.</p>",
        "id": 429823782,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1711534068
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"704248\">@Artur Szafarczyk</span> heading to library now</p>",
        "id": 429908611,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711559258
    },
    {
        "content": "<p>I'm coming</p>",
        "id": 429908987,
        "sender_full_name": "Artur Szafarczyk",
        "timestamp": 1711559382
    },
    {
        "content": "<p>I pushed</p>",
        "id": 429946763,
        "sender_full_name": "Artur Szafarczyk",
        "timestamp": 1711572586
    },
    {
        "content": "<p>thaaaaanks  <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span><span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span><span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span><span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span><span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 429947001,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711572645
    },
    {
        "content": "<p>For Team 1 - in your definition there's a lack of parenthesis I think : ((3*k+1)/3^n) instead of (3*k+1/3^n)</p>",
        "id": 430013977,
        "sender_full_name": "Isabelle Dubois",
        "timestamp": 1711612882
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"704145\">Isabelle Dubois</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430013977\">said</a>:</p>\n<blockquote>\n<p>For Team 1 - in your definition there's a lack of parenthesis I think : ((3*k+1)/3^n) instead of (3*k+1/3^n)</p>\n</blockquote>\n<p>Indeed. Thanks. Will fix it.</p>",
        "id": 430014704,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711613240
    },
    {
        "content": "<p>/poll Do you want to participate in a the Rocq practice session or rather work on the Cantor project?<br>\nI want to work on Cantor project<br>\nI want to practice some Rocq</p>",
        "id": 430015057,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711613445
    },
    {
        "content": "<p>Hey! I am not really interested in Rocq right now and would like to continue on the project. I thought maybe someone else would like to join?</p>",
        "id": 430015238,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711613541
    },
    {
        "content": "<p>also I would love to meet up again today with the whole group at some point. Tomorrow we should present the project, so it would be a goo idea to discuss the further progress and also how we present</p>",
        "id": 430015452,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711613665
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430015238\">said</a>:</p>\n<blockquote>\n<p>Hey! I am not really interested in Rocq right now and would like to continue on the project. I thought maybe someone else would like to join?</p>\n</blockquote>\n<p>I want to practice Rocq but feel free to work on the project without me, especially team 3.</p>",
        "id": 430015495,
        "sender_full_name": "Isabelle Dubois",
        "timestamp": 1711613692
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/429736503\">said</a>:</p>\n<blockquote>\n<p>Here is something that fits in the margin<br>\n<a href=\"/user_uploads/3121/bDSQke-EKBZS9X4jpKYfs8Tq/report5.pdf\">report5.pdf</a></p>\n</blockquote>\n<p>I have a slight remark on this. The lemma 2.7 states: <br>\n\"Any compact perfect totally disconnected subset E <em>of the real line</em> is homeomorphic to the Cantor set C\".<br>\nAnd the proof uses the fact that we are in \\R (with inf and sup). This is okay to prove that the Z_p are homeomorphic (as we see them in \\R). But i thought that the lemma is more general (= not needing to be a subset of \\R). I'll look for a proof of that, if it's easy i'll post it here.</p>",
        "id": 430037868,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711622130
    },
    {
        "content": "<p>Okay so i found this paper that explains it quite well (btw the lemma 2.7 is a Brouwer's theorem): <a href=\"https://arxiv.org/pdf/1210.1008.pdf\">https://arxiv.org/pdf/1210.1008.pdf</a><br>\nTo prove the most general statement, they first prove the ordered version. I'll try to write a skeleton of the proof from the first paper then : )</p>",
        "id": 430042924,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711624113
    },
    {
        "content": "<p>I suggest we meet at 17:30 in the usual room then :)</p>",
        "id": 430054858,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711628156
    },
    {
        "content": "<p>i'm on the first floor of the library if someone want to work with me before the conference resumes</p>",
        "id": 430062943,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711631050
    },
    {
        "content": "<p>Oliver Nash is currently given a tutorial on Topology and Filters: I believe it can be very useful for everbody in the project!</p>",
        "id": 430068989,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711633078
    },
    {
        "content": "<p>I noticed that we can characterize what it means to be totally disconnected in the reals, which will be useful for this project.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Calculus.ContDiff.Basic</span> <span class=\"c1\">-- an arbitrarily large import</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Set</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">ordConnected_inter_Icc_of_subset</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LinearOrder</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Ioo</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">OrdConnected</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">∩</span> <span class=\"n\">Icc</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">ordConnected_iff</span><span class=\"o\">]</span>\n  <span class=\"n\">intros</span> <span class=\"n\">u</span> <span class=\"n\">hu</span> <span class=\"n\">v</span> <span class=\"n\">hv</span> <span class=\"n\">_huv</span> <span class=\"n\">w</span> <span class=\"n\">hw</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2w</span> <span class=\"o\">:</span> <span class=\"n\">w</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">hu.2.1.trans</span> <span class=\"n\">hw.1</span><span class=\"o\">,</span> <span class=\"n\">hw.2.trans</span> <span class=\"n\">hv.2.2</span><span class=\"o\">⟩</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">h2w</span><span class=\"o\">⟩</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hwu</span> <span class=\"o\">:</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"n\">u</span>\n  <span class=\"bp\">·</span> <span class=\"n\">subst</span> <span class=\"n\">w</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hu.1</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hwv</span> <span class=\"o\">:</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"n\">v</span>\n  <span class=\"bp\">·</span> <span class=\"n\">subst</span> <span class=\"n\">w</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hv.1</span>\n  <span class=\"n\">refine</span> <span class=\"n\">h</span> <span class=\"o\">⟨</span><span class=\"n\">h2w.1.lt_of_ne</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">h2w.2.lt_of_ne</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rintro</span> <span class=\"n\">rfl</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hwu</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">hu.2.1.antisymm</span> <span class=\"n\">hw.1</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rintro</span> <span class=\"n\">rfl</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hwv</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">hw.2.antisymm</span> <span class=\"n\">hv.2.2</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">exists_nmem_between_of_not_OrdConnected</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LinearOrder</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">OrdConnected</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">∩</span> <span class=\"n\">Icc</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">z</span> <span class=\"bp\">∉</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">z</span> <span class=\"bp\">∈</span> <span class=\"n\">Ioo</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">mt</span> <span class=\"n\">ordConnected_inter_Icc_of_subset</span> <span class=\"n\">h</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">subset_def</span><span class=\"o\">,</span> <span class=\"n\">not_forall</span><span class=\"o\">,</span> <span class=\"n\">exists_prop</span><span class=\"o\">,</span> <span class=\"n\">and_comm</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">_</span> <span class=\"bp\">∉</span> <span class=\"n\">_</span><span class=\"o\">)]</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n  <span class=\"n\">exact</span> <span class=\"n\">this</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">ordConnected_inter_Icc_iff</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LinearOrder</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">OrdConnected</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">∩</span> <span class=\"n\">Icc</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">Ioo</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"n\">z</span> <span class=\"n\">hz</span> <span class=\"bp\">↦</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">ordConnected_inter_Icc_of_subset</span><span class=\"o\">⟩</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">ordConnected_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"k\">have</span> <span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"n\">hz.1.trans</span> <span class=\"n\">hz.2</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">le</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span> <span class=\"n\">x</span> <span class=\"o\">⟨</span><span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">le_rfl</span><span class=\"o\">,</span> <span class=\"n\">hxy</span><span class=\"o\">⟩</span> <span class=\"n\">y</span> <span class=\"o\">⟨</span><span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"n\">le_rfl</span><span class=\"o\">⟩</span> <span class=\"n\">hxy</span> <span class=\"o\">⟨</span><span class=\"n\">hz.1.le</span><span class=\"o\">,</span> <span class=\"n\">hz.2.le</span><span class=\"o\">⟩</span> <span class=\"bp\">|&gt;.</span><span class=\"mi\">1</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">not_ordConnected_inter_Icc_iff</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LinearOrder</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">OrdConnected</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">∩</span> <span class=\"n\">Icc</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"n\">z</span> <span class=\"bp\">∉</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">z</span> <span class=\"bp\">∈</span> <span class=\"n\">Ioo</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">ordConnected_inter_Icc_iff</span> <span class=\"n\">hx</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">subset_def</span><span class=\"o\">,</span> <span class=\"n\">not_forall</span><span class=\"o\">,</span> <span class=\"n\">exists_prop</span><span class=\"o\">,</span> <span class=\"n\">and_comm</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">isTotallyDisconnected_iff_le</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n    <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">ConditionallyCompleteLinearOrder</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">OrderTopology</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DenselyOrdered</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsTotallyDisconnected</span> <span class=\"n\">s</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">z</span> <span class=\"bp\">∉</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span> <span class=\"bp\">∧</span> <span class=\"n\">z</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">IsTotallyDisconnected</span><span class=\"o\">,</span> <span class=\"n\">isPreconnected_iff_ordConnected</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">not_nontrivial_iff</span><span class=\"o\">]</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"n\">hxy</span> <span class=\"bp\">↦</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"n\">t</span> <span class=\"n\">hts</span> <span class=\"n\">ht</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">hxy</span><span class=\"o\">⟩</span> <span class=\"bp\">↦</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">mem_Ioo</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">not_ordConnected_inter_Icc_iff</span> <span class=\"n\">hx</span> <span class=\"n\">hy</span><span class=\"o\">]</span>\n    <span class=\"n\">refine</span> <span class=\"k\">fun</span> <span class=\"n\">hs</span> <span class=\"bp\">↦</span> <span class=\"n\">h</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">inter_subset_left</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">hs</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">le_rfl</span><span class=\"o\">,</span> <span class=\"n\">hxy.le</span><span class=\"o\">⟩,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">hxy.le</span><span class=\"o\">,</span> <span class=\"n\">le_rfl</span><span class=\"o\">⟩,</span> <span class=\"n\">hxy.ne</span><span class=\"o\">⟩</span>\n  <span class=\"bp\">·</span> <span class=\"n\">obtain</span> <span class=\"n\">hxy</span><span class=\"bp\">|</span><span class=\"n\">hxy</span> <span class=\"o\">:=</span> <span class=\"n\">hxy.lt_or_lt</span>\n    <span class=\"bp\">·</span> <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">h1z</span><span class=\"o\">,</span> <span class=\"n\">h2z</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">hts</span> <span class=\"n\">hx</span><span class=\"o\">)</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"n\">hts</span> <span class=\"n\">hy</span><span class=\"o\">)</span> <span class=\"n\">hxy</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h1z</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">hts</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">ht.1</span> <span class=\"n\">hx</span> <span class=\"n\">hy</span> <span class=\"o\">⟨</span><span class=\"n\">h2z.1.le</span><span class=\"o\">,</span> <span class=\"n\">h2z.2.le</span><span class=\"o\">⟩</span>\n    <span class=\"bp\">·</span> <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">h1z</span><span class=\"o\">,</span> <span class=\"n\">h2z</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"n\">hts</span> <span class=\"n\">hy</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">hts</span> <span class=\"n\">hx</span><span class=\"o\">)</span> <span class=\"n\">hxy</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h1z</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">hts</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">ht.1</span> <span class=\"n\">hy</span> <span class=\"n\">hx</span> <span class=\"o\">⟨</span><span class=\"n\">h2z.1.le</span><span class=\"o\">,</span> <span class=\"n\">h2z.2.le</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 430090086,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1711638641
    },
    {
        "content": "<p>wow, this is great, thanks !<br>\nI have a question for you: do you know if the theorem \"an open of R is a countable union of open intervals\" is in mathlib ? I couldn't find it...</p>",
        "id": 430090834,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711638863
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Real.isTopologicalBasis_Ioo_rat#doc\">docs#Real.isTopologicalBasis_Ioo_rat</a> together with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=TopologicalSpace.IsTopologicalBasis.open_iff_eq_sUnion#doc\">docs#TopologicalSpace.IsTopologicalBasis.open_iff_eq_sUnion</a> gives you that an open of R is a union of open intervals with rational endpoints.<br>\nLet me think how you get countability...</p>",
        "id": 430092016,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1711639180
    },
    {
        "content": "<p>I guess <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=TopologicalSpace.isOpen_sUnion_countable#doc\">docs#TopologicalSpace.isOpen_sUnion_countable</a> then gives you a countable subcollection.</p>",
        "id": 430093129,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1711639481
    },
    {
        "content": "<p>I found it using <br>\n@loogle IsOpen, Set.Countable</p>",
        "id": 430093332,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1711639547
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> IsOpen, Set.Countable</p>",
        "id": 430093365,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1711639561
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Bases.html#TopologicalSpace.isOpen_sUnion_countable\">TopologicalSpace.isOpen_sUnion_countable</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Bases.html#TopologicalSpace.isOpen_iUnion_countable\">TopologicalSpace.isOpen_iUnion_countable</a>, and <a href=\"https://loogle.lean-lang.org/?q=IsOpen%2C%20Set.Countable\">14 more</a></p>",
        "id": 430093372,
        "sender_full_name": "loogle",
        "timestamp": 1711639561
    },
    {
        "content": "<p>plan change: we meet in 10min</p>",
        "id": 430095376,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711639937
    },
    {
        "content": "<p><a href=\"/user_uploads/312p1/QUB8oKjVTVixUQTMJ3WIZUYq/IMG_20240328_170119.jpg\">IMG_20240328_170119.jpg</a><br>\nThe plan for team 1</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/312p1/QUB8oKjVTVixUQTMJ3WIZUYq/IMG_20240328_170119.jpg\" title=\"IMG_20240328_170119.jpg\"><img src=\"/user_uploads/312p1/QUB8oKjVTVixUQTMJ3WIZUYq/IMG_20240328_170119.jpg\"></a></div>",
        "id": 430111308,
        "sender_full_name": "JB Stiegler",
        "timestamp": 1711643320
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"704119\">@Alina Yan</span> Are you somewhere, do you want to meet?</p>",
        "id": 430118897,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711644780
    },
    {
        "content": "<p>Team 1 is still working, so we won't join for the meeting now</p>",
        "id": 430135234,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711649018
    },
    {
        "content": "<p>I managed to push.</p>",
        "id": 430140521,
        "sender_full_name": "Artur Szafarczyk",
        "timestamp": 1711650645
    },
    {
        "content": "<p>Okay so I just tried and did a first PR :3 However \"Lint Style\" and \"Check all files imported\" failed. But I guess this is a good opportunity to get to know the process of a PR while we are still here and can ask experts . <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 430193200,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711680405
    },
    {
        "content": "<p>I get the following error when I open the Team 1 file: stderr:<br>\ninfo: [1499/1500] Building LFTCM2024.Cantor_Set.Cantor_Set<br>\nerror: &gt; LEAN_PATH=./.lake/packages/std/.lake/build/lib:./.lake/packages/Qq/.lake/build/lib:./.lake/packages/aesop/.lake/build/lib:./.lake/packages/proofwidgets/.lake/build/lib:./.lake/packages/Cli/.lake/build/lib:./.lake/packages/importGraph/.lake/build/lib:./.lake/packages/mathlib/.lake/build/lib:./.lake/build/lib DYLD_LIBRARY_PATH=./.lake/packages/std/.lake/build/lib:./.lake/packages/Qq/.lake/build/lib:./.lake/packages/aesop/.lake/build/lib:./.lake/packages/proofwidgets/.lake/build/lib:./.lake/packages/Cli/.lake/build/lib:./.lake/packages/importGraph/.lake/build/lib:./.lake/packages/mathlib/.lake/build/lib:./.lake/build/lib:/Users/suraj/.elan/toolchains/leanprover--lean4---v4.7.0-rc2/lib/lean:/Users/suraj/.elan/toolchains/leanprover--lean4---v4.7.0-rc2/lib:./.lake/build/lib /Users/suraj/.elan/toolchains/leanprover--lean4---v4.7.0-rc2/bin/lean ./././LFTCM2024/Cantor_Set/Cantor_Set.lean -R ././. -o ./.lake/build/lib/LFTCM2024/Cantor_Set/Cantor_Set.olean -i ./.lake/build/lib/LFTCM2024/Cantor_Set/Cantor_Set.ilean -c ./.lake/build/ir/LFTCM2024/Cantor_Set/Cantor_Set.c</p>\n<p>Does anyone know what this means?</p>",
        "id": 430220781,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711700930
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430193200\">said</a>:</p>\n<blockquote>\n<p>Okay so I just tried and did a first PR :3 However \"Lint Style\" and \"Check all files imported\" failed. But I guess this is a good opportunity to get to know the process of a PR while we are still here and can ask experts . <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>\n</blockquote>\n<p>Congrats! <br>\nThere are a bunch of style requirements for Mathlib files. You can read them here:<br>\n<a href=\"https://leanprover-community.github.io/contribute/style.html\">https://leanprover-community.github.io/contribute/style.html</a><br>\nI'm happy to help later.</p>",
        "id": 430221046,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1711701089
    },
    {
        "content": "<p>Thanks! Yeah that would be great! :D</p>",
        "id": 430221575,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711701374
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430193200\">said</a>:</p>\n<blockquote>\n<p>Okay so I just tried and did a first PR :3 However \"Lint Style\" and \"Check all files imported\" failed. But I guess this is a good opportunity to get to know the process of a PR while we are still here and can ask experts . <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>\n</blockquote>\n<p>Looks great!</p>",
        "id": 430222147,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711701604
    },
    {
        "content": "<p>You can write here a link to your PR, and someone will surely have a look (just write # 123456, without the space)</p>",
        "id": 430222298,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711701701
    },
    {
        "content": "<p>Yes, I agree. Tom did a lot of golfing yesterday together with Floris!^^</p>",
        "id": 430222400,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711701742
    },
    {
        "content": "<p>Sure! <a href=\"https://github.com/leanprover-community/mathlib4/pull/11761\">#11761</a></p>",
        "id": 430222848,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711701975
    },
    {
        "content": "<p>The style guide linked above explains how to solve most issues, it is essentially a matter of starting the file with a copyright header and to add a documentation to any <code>def</code>. Concerning the <code>continuous integration / Check all files imported (push)</code> error, it is enough to do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">find</span> <span class=\"n\">Mathlib</span> <span class=\"bp\">-</span><span class=\"n\">name</span> <span class=\"s2\">\"*.lean\"</span> <span class=\"bp\">|</span> <span class=\"n\">env</span> <span class=\"n\">LC_ALL</span><span class=\"bp\">=</span><span class=\"n\">C</span> <span class=\"n\">sort</span> <span class=\"bp\">|</span> <span class=\"n\">sed</span> <span class=\"bp\">'</span><span class=\"n\">s</span><span class=\"bp\">/\\.</span><span class=\"n\">lean</span><span class=\"bp\">//;</span><span class=\"n\">s</span><span class=\"o\">,</span><span class=\"bp\">/</span><span class=\"o\">,</span><span class=\"bp\">.</span><span class=\"o\">,</span><span class=\"n\">g</span><span class=\"bp\">;</span><span class=\"n\">s</span><span class=\"bp\">/^/</span><span class=\"kn\">import</span> <span class=\"bp\">/'</span> <span class=\"bp\">&gt;</span> <span class=\"n\">Mathlib.lean</span>\n</code></pre></div>\n<p>I have no idea why we don't do this automatically or at least suggest the solution <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 430223578,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711702375
    },
    {
        "content": "<p>Okay thanks!</p>",
        "id": 430223652,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711702419
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430193200\">said</a>:</p>\n<blockquote>\n<p>Okay so I just tried and did a first PR :3 However \"Lint Style\" and \"Check all files imported\" failed. But I guess this is a good opportunity to get to know the process of a PR while we are still here and can ask experts . <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>\n</blockquote>\n<p>Can you please link the PR from Github here?</p>",
        "id": 430234910,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1711708109
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"351560\">Suraj Krishna M S</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430220781\">said</a>:</p>\n<blockquote>\n<p>I get the following error when I open the Team 1 file: stderr:<br>\ninfo: [1499/1500] Building LFTCM2024.Cantor_Set.Cantor_Set<br>\nerror: &gt; LEAN_PATH=./.lake/packages/std/.lake/build/lib:./.lake/packages/Qq/.lake/build/lib:./.lake/packages/aesop/.lake/build/lib:./.lake/packages/proofwidgets/.lake/build/lib:./.lake/packages/Cli/.lake/build/lib:. ....</p>\n<p>Does anyone know what this means?</p>\n</blockquote>\n<p>Are you still having this problem?</p>",
        "id": 430235011,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1711708168
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430222848\">schrieb</a>:</p>\n<blockquote>\n<p>Sure! <a href=\"https://github.com/leanprover-community/mathlib4/pull/11761\">#11761</a></p>\n</blockquote>\n<p>It's this one ^^</p>",
        "id": 430235395,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711708339
    },
    {
        "content": "<p>A little warning, after including the content of all teams into the main file we were told by some of the Lean experts how to make the code leaner. One result of this is that we defined \"Homeomorph_T_L\" and \"Homeomorph_T_R\" by using certain combinators that give you that these are homeomorphisms for free. This caused minor breakage. Please ask here if it cases any big problems.</p>",
        "id": 430235560,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1711708410
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430235395\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430222848\">schrieb</a>:</p>\n<blockquote>\n<p>Sure! <a href=\"https://github.com/leanprover-community/mathlib4/pull/11761\">#11761</a></p>\n</blockquote>\n<p>It's this one ^^</p>\n</blockquote>\n<p>Thanks!</p>\n<p>This PR is from 3am! You really delivered on what I promised <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 430238302,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1711709637
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430223578\">schrieb</a>:</p>\n<blockquote>\n<p>The style guide linked above explains how to solve most issues, it is essentially a matter of starting the file with a copyright header and to add a documentation to any <code>def</code>. Concerning the <code>continuous integration / Check all files imported (push)</code> error, it is enough to do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">find</span> <span class=\"n\">Mathlib</span> <span class=\"bp\">-</span><span class=\"n\">name</span> <span class=\"s2\">\"*.lean\"</span> <span class=\"bp\">|</span> <span class=\"n\">env</span> <span class=\"n\">LC_ALL</span><span class=\"bp\">=</span><span class=\"n\">C</span> <span class=\"n\">sort</span> <span class=\"bp\">|</span> <span class=\"n\">sed</span> <span class=\"bp\">'</span><span class=\"n\">s</span><span class=\"bp\">/\\.</span><span class=\"n\">lean</span><span class=\"bp\">//;</span><span class=\"n\">s</span><span class=\"o\">,</span><span class=\"bp\">/</span><span class=\"o\">,</span><span class=\"bp\">.</span><span class=\"o\">,</span><span class=\"n\">g</span><span class=\"bp\">;</span><span class=\"n\">s</span><span class=\"bp\">/^/</span><span class=\"kn\">import</span> <span class=\"bp\">/'</span> <span class=\"bp\">&gt;</span> <span class=\"n\">Mathlib.lean</span>\n</code></pre></div>\n<p>If I try to put that line somewhere in the beginning of my file it always gives me error messages:<br>\nCantorSet.lean:12:0<br>\nunexpected identifier; expected command<br>\nCantorSet.lean:12:78<br>\ninvalid 'import' command, it must be used in the beginning of the file</p>\n<p>Do you have any idea why this is?</p>\n</blockquote>",
        "id": 430238613,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711709762
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"573474\">Tomáš Jakl</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430238302\">schrieb</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430235395\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430222848\">schrieb</a>:</p>\n<blockquote>\n<p>Sure! <a href=\"https://github.com/leanprover-community/mathlib4/pull/11761\">#11761</a></p>\n</blockquote>\n<p>It's this one ^^</p>\n</blockquote>\n<p>Thanks!</p>\n<p>This PR is from 3am! You really delivered on what I promised <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>Well I told you to push for a reason <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 430239208,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711710040
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430238613\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430223578\">schrieb</a>:</p>\n<blockquote>\n<p>The style guide linked above explains how to solve most issues, it is essentially a matter of starting the file with a copyright header and to add a documentation to any <code>def</code>. Concerning the <code>continuous integration / Check all files imported (push)</code> error, it is enough to do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">find</span> <span class=\"n\">Mathlib</span> <span class=\"bp\">-</span><span class=\"n\">name</span> <span class=\"s2\">\"*.lean\"</span> <span class=\"bp\">|</span> <span class=\"n\">env</span> <span class=\"n\">LC_ALL</span><span class=\"bp\">=</span><span class=\"n\">C</span> <span class=\"n\">sort</span> <span class=\"bp\">|</span> <span class=\"n\">sed</span> <span class=\"bp\">'</span><span class=\"n\">s</span><span class=\"bp\">/\\.</span><span class=\"n\">lean</span><span class=\"bp\">//;</span><span class=\"n\">s</span><span class=\"o\">,</span><span class=\"bp\">/</span><span class=\"o\">,</span><span class=\"bp\">.</span><span class=\"o\">,</span><span class=\"n\">g</span><span class=\"bp\">;</span><span class=\"n\">s</span><span class=\"bp\">/^/</span><span class=\"kn\">import</span> <span class=\"bp\">/'</span> <span class=\"bp\">&gt;</span> <span class=\"n\">Mathlib.lean</span>\n</code></pre></div>\n<p>If I try to put that line somewhere in the beginning of my file it always gives me error messages:<br>\nCantorSet.lean:12:0<br>\nunexpected identifier; expected command<br>\nCantorSet.lean:12:78<br>\ninvalid 'import' command, it must be used in the beginning of the file</p>\n<p>Do you have any idea why this is?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Sorry</span><span class=\"o\">,</span> <span class=\"n\">you</span> <span class=\"k\">have</span> <span class=\"n\">to</span> <span class=\"n\">type</span> <span class=\"n\">it</span> <span class=\"k\">in</span> <span class=\"n\">a</span> <span class=\"n\">terminal</span><span class=\"o\">,</span> <span class=\"n\">not</span> <span class=\"k\">in</span> <span class=\"n\">a</span> <span class=\"n\">Lean</span> <span class=\"n\">file.</span>\n</code></pre></div>\n</blockquote>\n</blockquote>",
        "id": 430239351,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711710109
    },
    {
        "content": "<p>If you open the terminal inside VS Code it should already be in the right place. It modifies a file that you have to stage and commit as usual.</p>",
        "id": 430239461,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1711710145
    },
    {
        "content": "<p>ohhhh okay I will try</p>",
        "id": 430239551,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711710194
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430239551\">said</a>:</p>\n<blockquote>\n<p>ohhhh okay I will try</p>\n</blockquote>\n<p>I guess you are trying to propose our file somewhere for Mathlib. Thanks for that and your work. I might add that I don't understand anything about the  problems you encounter, and all the process to do it.</p>",
        "id": 430240092,
        "sender_full_name": "Isabelle Dubois",
        "timestamp": 1711710445
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"573474\">Tomáš Jakl</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430235011\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"351560\">Suraj Krishna M S</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430220781\">said</a>:</p>\n<blockquote>\n<p>I get the following error when I open the Team 1 file: stderr:<br>\ninfo: [1499/1500] Building LFTCM2024.Cantor_Set.Cantor_Set<br>\nerror: &gt; LEAN_PATH=./.lake/packages/std/.lake/build/lib:./.lake/packages/Qq/.lake/build/lib:./.lake/packages/aesop/.lake/build/lib:./.lake/packages/proofwidgets/.lake/build/lib:./.lake/packages/Cli/.lake/build/lib:. ....</p>\n<p>Does anyone know what this means?</p>\n</blockquote>\n<p>Are you still having this problem?</p>\n</blockquote>\n<p>Filippo helped me solve it: it happened because my file was importing the main Cantor set file and this one had errors. So some of the errors in the Cantor set file now appear below a #exit command so they don't actually compile. </p>\n<p>Some of the problems were caused by someone copying our code to the Cantor set file. That has been fixed now.</p>",
        "id": 430241466,
        "sender_full_name": "Suraj Krishna M S",
        "timestamp": 1711711248
    },
    {
        "content": "<p>If you are still struggling with it I am happy to help</p>",
        "id": 430252740,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1711717218
    },
    {
        "content": "<p>While on the train, I proved some small things in Is_TotallyDisconnected_Cantor_attempt2 in Jana's file.</p>",
        "id": 430327285,
        "sender_full_name": "Artur Szafarczyk",
        "timestamp": 1711752348
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"704145\">Isabelle Dubois</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430240092\">schrieb</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/430239551\">said</a>:</p>\n<blockquote>\n<p>ohhhh okay I will try</p>\n</blockquote>\n<p>I guess you are trying to propose our file somewhere for Mathlib. Thanks for that and your work. I might add that I don't understand anything about the  problems you encounter, and all the process to do it.</p>\n</blockquote>\n<p>Exactly^^ No problem</p>",
        "id": 430382252,
        "sender_full_name": "Jana Göken",
        "timestamp": 1711798270
    },
    {
        "content": "<p>Hey guys! I hope you all had some great easter days! <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span> I wanted to thank you all for the great time and also for your work! I really enjoyed the collaboration on the cantor set project with you guys and I admire how everybody did their best, it was a great week!<br>\nEven during easter days, Tom has been working quite a lot on the PR, special thanks for that! I guess we will keep you updated about its status. :)</p>",
        "id": 431169929,
        "sender_full_name": "Jana Göken",
        "timestamp": 1712175879
    },
    {
        "content": "<p>Hey guys! Just wanted to keep you updated. The merge is complete now! :D Feel free to add some of your further theorems if you want ^_^</p>",
        "id": 432269217,
        "sender_full_name": "Jana Göken",
        "timestamp": 1712675774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"631462\">@Jana Göken</span> This is my fault (because I suggested the text in the docstring), but <span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> pointed out after merging that the second function in <code>preCantorSet</code> is described wrong in the docstring (and hence also in the module documentation). If you fix it and ping me, I'll merge it quickly.</p>",
        "id": 432302442,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1712684751
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/432269217\">said</a>:</p>\n<blockquote>\n<p>Hey guys! Just wanted to keep you updated. The merge is complete now! :D Feel free to add some of your further theorems if you want ^_^</p>\n</blockquote>\n<p>Congrats to <span class=\"user-mention\" data-user-id=\"631462\">@Jana Göken</span> and <span class=\"user-mention\" data-user-id=\"573474\">@Tomáš Jakl</span>!<br>\n(and all the reviewers too!)</p>",
        "id": 432958721,
        "sender_full_name": "Artur Szafarczyk",
        "timestamp": 1712945838
    },
    {
        "content": "<p>I didn't follow all the work you did in Luminy. Some nice follow-up could be to generalize to fat Cantor sets and compute the Lebesgue measure.</p>",
        "id": 432997896,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1712965698
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/432269217\">said</a>:</p>\n<blockquote>\n<p>Hey guys! Just wanted to keep you updated. The merge is complete now! :D Feel free to add some of your further theorems if you want ^_^</p>\n</blockquote>\n<p>Thanks! I'm still working on the bijection between the Cantor set and triadic expansion of a real in the unit interval, and its topological consequences.<br>\nWhere can we find what we have done, and how to proceed if we want to add new theorems?</p>",
        "id": 434303666,
        "sender_full_name": "Isabelle Dubois",
        "timestamp": 1713512252
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"631462\">@Jana Göken</span> Do you want to answer this, especially concerning how you learned about adding new theorems?</p>",
        "id": 434306685,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1713513161
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"704145\">@Isabelle Dubois</span> I think you can freely ignore what we've pushed to the mathlib. Feel free to work in your own file, as before, and at the end I'll merge it into the main one once this is done.</p>",
        "id": 434318033,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1713517087
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"573474\">Tomáš Jakl</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/434318033\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"704145\">Isabelle Dubois</span> I think you can freely ignore what we've pushed to the mathlib. Feel free to work in your own file, as before, and at the end I'll merge it into the main one once this is done.</p>\n</blockquote>\n<p>Ok, thanks!</p>",
        "id": 434318887,
        "sender_full_name": "Isabelle Dubois",
        "timestamp": 1713517372
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"704145\">Isabelle Dubois</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/434303666\">schrieb</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"631462\">Jana Göken</span> <a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20Cantor.20set/near/432269217\">said</a>:</p>\n<blockquote>\n<p>Hey guys! Just wanted to keep you updated. The merge is complete now! :D Feel free to add some of your further theorems if you want ^_^</p>\n</blockquote>\n<p>Thanks! I'm still working on the bijection between the Cantor set and triadic expansion of a real in the unit interval, and its topological consequences.<br>\nWhere can we find what we have done, and how to proceed if we want to add new theorems?</p>\n</blockquote>\n<p>That's great to hear! What you could also do is clone the mathlib4 project. Then create a new branch. On that branch you can add work to the cantor set file. The advantage would be that you see if your code compiles in that file. Because we had to change some of our work. For example we deleted the homeomorphisms, meaning they dont have names anymore. <br>\nBut feel free to do it either way! ^_^</p>",
        "id": 434320545,
        "sender_full_name": "Jana Göken",
        "timestamp": 1713518012
    },
    {
        "content": "<p>Let me remind you of the existence of the tag <code>lftcm24</code> for PR's coming from the conference.</p>",
        "id": 434321818,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1713518432
    },
    {
        "content": "<p>Ok, I'll try to find out in Mathlib where to find the new files. I have to say I'm still not at ease with all the cloning and merging stuff.</p>",
        "id": 434322307,
        "sender_full_name": "Isabelle Dubois",
        "timestamp": 1713518602
    },
    {
        "content": "<p>Do not hesitate to ask for help!</p>",
        "id": 434322806,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1713518795
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/contribute/index.html\">This</a> might help</p>",
        "id": 434322984,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1713518873
    },
    {
        "content": "<p>But please do not get stuck with it. If you just want to have fun and do Lean, instead of figuring out how all this git+github+mathlib combo works then feel free to do so.</p>",
        "id": 434324315,
        "sender_full_name": "Tomáš Jakl",
        "timestamp": 1713519305
    }
]