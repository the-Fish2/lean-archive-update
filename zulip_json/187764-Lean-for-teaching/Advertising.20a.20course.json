[
    {
        "content": "<p>What's a good and eye-grabbing way of advertising an introductory course on Lean and formalising mathematics in lean to PhD students? What has worked well in the past?</p>",
        "id": 413005229,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705340044
    },
    {
        "content": "<p>I can only hint what did NOT work well for me:<br>\n[deleted on request]</p>",
        "id": 413011406,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705343113
    },
    {
        "content": "<p>can't believe you've actually done that hahaha</p>",
        "id": 413011533,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705343193
    },
    {
        "content": "<p>Well, my friends were mocking me for being a Lean user for so long that I decided to own it...</p>",
        "id": 413011613,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705343244
    },
    {
        "content": "<p>how did the school let you do that though?! it's <em>subliminally</em> advertising drugs to students</p>",
        "id": 413011921,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705343404
    },
    {
        "content": "<p>Well, my online Lean course featuring our fox mascots has been much more popular:<br>\n<a href=\"/user_uploads/3121/04c074kt-QvPPvwyFYgUuU4p/image.png\">image.png</a><br>\nIt is the one I mention here:<br>\n<a href=\"https://leanprover-community.github.io/teaching/courses.html\">https://leanprover-community.github.io/teaching/courses.html</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/04c074kt-QvPPvwyFYgUuU4p/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/04c074kt-QvPPvwyFYgUuU4p/image.png\"></a></div>",
        "id": 413012231,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705343560
    },
    {
        "content": "<p>awww that's adorable! but what does that have to do with Lean?</p>",
        "id": 413012329,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705343621
    },
    {
        "content": "<p><img alt=\":leanie:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/30872.png\" title=\"leanie\"> is the link I think</p>",
        "id": 413012357,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1705343634
    },
    {
        "content": "<p>I don't think mathlib is the largest library of formal proof, isn't Isabelle's one bigger?</p>",
        "id": 413014269,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1705344774
    },
    {
        "content": "<p>I think Riccardo is correct.</p>",
        "id": 413014435,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1705344853
    },
    {
        "content": "<p>think they meant to say the largest library of formal <em>pure abstract mathematical</em> proof</p>",
        "id": 413014646,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705344986
    },
    {
        "content": "<p>How is that different?</p>",
        "id": 413014867,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1705345100
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413014269\">said</a>:</p>\n<blockquote>\n<p>I don't think mathlib is the largest library of formal proof, isn't Isabelle's one bigger?</p>\n</blockquote>\n<p>Maybe I was wrong! I only checked Mizar; it had less than 10^5 theorems, so I concluded that Mathlib was probably the largest.</p>",
        "id": 413015447,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705345444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413011613\">said</a>:</p>\n<blockquote>\n<p>Well, my friends were mocking me for being a Lean user for so long that I decided to own it...</p>\n</blockquote>\n<p>To be fair, my friends were also making fun of me for having played with Coq. Hence I conclude that no name is completely free of problems.</p>",
        "id": 413016221,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705345874
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413014269\">said</a>:</p>\n<blockquote>\n<p>I don't think mathlib is the largest library of formal proof, isn't Isabelle's one bigger?</p>\n</blockquote>\n<p>I think the more plausible claim is probably that mathlib is the \"largest <em>interconnected</em> library of formal proof\", but that's much harder to quantify</p>",
        "id": 413017806,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1705346651
    },
    {
        "content": "<p>To be honest, the simplest correction will be to admit that I was simply wrong.</p>",
        "id": 413018139,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705346839
    },
    {
        "content": "<p>Another issue you might rightfully criticize me for is that I used something that resembles the Lean logo but isn't the official Lean logo.</p>",
        "id": 413018558,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705347049
    },
    {
        "content": "<p>I just mean that usually it is better to say things like \"one of the largest\" or similar :)</p>",
        "id": 413023858,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1705350117
    },
    {
        "content": "<p>Isabelle's AFP might be bigger than mathlib, but a lot of what is in AFP is quite far from what I would call mathematics -- it is far more CS-oriented.</p>",
        "id": 413030337,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705353608
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413023858\">said</a>:</p>\n<blockquote>\n<p>I just mean that usually it is better to say things like \"one of the largest\" or similar :)</p>\n</blockquote>\n<p>I agree with you, but I feel that saying \"Mathlib is one of the largest\" is a terrible understatement.</p>",
        "id": 413118662,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705399171
    },
    {
        "content": "<p>it's not though</p>",
        "id": 413118837,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705399209
    },
    {
        "content": "<p>There are other very large libraries out there</p>",
        "id": 413118934,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705399241
    },
    {
        "content": "<p>Sorry for the OT but...<br>\nHow is it with Isabelle's AFP or Mizar's MML?<br>\nCan you download and import the entire library somehow?<br>\nAre the \"papers\" mutually compatible?</p>",
        "id": 413119203,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705399311
    },
    {
        "content": "<p>The MML yes, AFP I'm not sure but I think so</p>",
        "id": 413119353,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705399341
    },
    {
        "content": "<p>it would be pretty weird to import the whole AFP</p>",
        "id": 413119391,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705399352
    },
    {
        "content": "<p>that's kind of like doing <code>apt install &lt;everything&gt;</code></p>",
        "id": 413119514,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705399384
    },
    {
        "content": "<p>Ah, it's cool that MML maintainers managed to keep the library consistent for so many decades! I just learnt something new.</p>",
        "id": 413119847,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705399481
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413119514\">said</a>:</p>\n<blockquote>\n<p>that's kind of like doing <code>apt install &lt;everything&gt;</code></p>\n</blockquote>\n<p>I don't do <code>import Mathlib</code> either, but I find it very important that it can be done in principle (and many Lean users appreciate that it can be done in practice as well, but...).</p>",
        "id": 413120180,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705399590
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413118934\">said</a>:</p>\n<blockquote>\n<p>There are other very large libraries out there</p>\n</blockquote>\n<p>not sure if this is the right channel for this question, but it seems like a natural follow up. It is also probably a phenomenon worth understanding in the history of theorem provers: why do we keep reinventing formal math in new theorem provers? I kinda get that some provers were experimenting with different approaches at the foundational levels and maybe ways to embed proof automation, but it does seem wasteful effort to redo the  math part again and again. For example, what was lean doing differently that it made sense to not do it in Coq? I read Sebastian's thesis (specifically motivations in Page 9), but I don't know why these goals were unachievable in existing provers.  Why did current mathlib devs choose a new theorem prover over something well established like Isabelle or Mizar? I got a partial answer to the last one from Kevin about post-Grothendieck math and simple type theory, but the explanation doesn't translate to Coq. I also recall an article that Kevin tried Coq and then switched to Lean. But all this suggests is that one or two mathematicians got the ball rolling based on their experiences and it snowballed. It doesn't explain the \"why it didnt happen before or differently\"</p>",
        "id": 413129683,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1705402821
    },
    {
        "content": "<p>For me personally, it was an aesthetic preference. Coq is ugly syntax. Lean is beautiful.</p>",
        "id": 413130640,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705403119
    },
    {
        "content": "<p>The problem with the community, as I percieved it, in 2017  was precisely that it was <em>not</em> doing the mathematics which we teach to the undergraduates in mathematics departments across the world! This is because at that time the area was dominated by computer scientists who typically had no feeling for what was actually important to mathematicians (for example there was a big emphasis on constructivism, which has not been taught in mathematics departments for 100 years). The computer scientists would pick and choose from the curriculum or do mathematics which was relevant to whatever theory groups were studying or whatever. There was no coherent development of an undergraduate mathematics curriculum in any theorem prover before the mathlib effort. I am pretty sure that it could have been done in pretty much any theorem prover, it could well have just been chance that it was done in Lean.</p>",
        "id": 413130921,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705403217
    },
    {
        "content": "<p>exactly ^</p>",
        "id": 413131042,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705403278
    },
    {
        "content": "<p>Also, when I was an undergraduate trying to learn Coq and others on my own, I found it pretty difficult. Lean was far easier for me personally.</p>",
        "id": 413131211,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705403336
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413130640\">said</a>:</p>\n<blockquote>\n<p>For me personally, it was an aesthetic preference. Coq is ugly syntax. Lean is beautiful.</p>\n</blockquote>\n<p>As Martin said, Lean has a nicer and easier syntax</p>",
        "id": 413131323,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705403387
    },
    {
        "content": "<p>Although, I feel Lean3 has a nicer syntax than Lean4, in my opinion <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 413131546,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705403459
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"477483\">Monica Omar</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413131211\">said</a>:</p>\n<blockquote>\n<p>Also, when I was an undergraduate trying to learn Coq and others on my own, I found it pretty difficult. Lean was far easier for me personally.</p>\n</blockquote>\n<p>Also for me, a huge part of Lean's appeal in the beginning was its accessibility via the NNG.</p>",
        "id": 413131725,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705403525
    },
    {
        "content": "<p>There you go. Gamifying it made it far more appealing.</p>",
        "id": 413131832,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705403576
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413130921\">said</a>:</p>\n<blockquote>\n<p>I am pretty sure that it could have been done in pretty much any theorem prover, it could well have just been chance that it was done in Lean.</p>\n</blockquote>\n<p>Then I am really thankful for the fluke that Lean happened to be the language!</p>",
        "id": 413131979,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705403636
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"477483\">Monica Omar</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413131832\">said</a>:</p>\n<blockquote>\n<p>There you go. Gamifying it made it far more appealing.</p>\n</blockquote>\n<p>I guess that's what we should advertise in the course advert then? That we can gamify things in mathematics and make it more appealing? or something along those lines?</p>",
        "id": 413132252,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705403707
    },
    {
        "content": "<p>I think it's not just chance. Lean offers many little quality-of-life improvements over other systems. Even if the underlying foundations are basically the same as in Coq, that is only a tiny aspect of the story. To name a somewhat trivial example: back in 2017, Coq didn't have a VScode extension. It's sounds silly, but I think those things matter.</p>",
        "id": 413132543,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1705403797
    },
    {
        "content": "<p>If they are very advanced math students, printing some posts by Terence Tao from his Mathstodon page will probably appeal to them.</p>",
        "id": 413132642,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705403833
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413132642\">said</a>:</p>\n<blockquote>\n<p>If they are very advanced math students, printing some posts by Terence Tao from his Mathstodon page will probably appeal to them.</p>\n</blockquote>\n<p>I wouldn't say very advanced lol, just advanced enough. But, that's smart!</p>",
        "id": 413132944,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705403936
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413130921\">said</a>:</p>\n<blockquote>\n<p>The problem with the community, as I percieved it, in 2017  was precisely that it was <em>not</em> doing the mathematics which we teach to the undergraduates in mathematics departments across the world! This is because at that time the area was dominated by computer scientists who typically had no feeling for what was actually important to mathematicians (for example there was a big emphasis on constructivism</p>\n</blockquote>\n<p>Was this also the case for Isabelle? I thought their HOL was just classical stuff</p>",
        "id": 413133176,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1705404022
    },
    {
        "content": "<blockquote>\n<p>To name a somewhat trivial example: back in 2017, Coq didn't have a VScode extension. It's sounds silly, but I think those things matter.</p>\n</blockquote>\n<p>Note that Coq's vscode extensions (VsCoq 1 &amp; 2, coq-lsp) still don't have go-to-definition across files, it seems to be vaguely in the \"open research question\" camp</p>",
        "id": 413135101,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705404824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413133176\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413130921\">said</a>:</p>\n<blockquote>\n<p>The problem with the community, as I percieved it, in 2017  was precisely that it was <em>not</em> doing the mathematics which we teach to the undergraduates in mathematics departments across the world! This is because at that time the area was dominated by computer scientists who typically had no feeling for what was actually important to mathematicians (for example there was a big emphasis on constructivism</p>\n</blockquote>\n<p>Was this also the case for Isabelle? I thought their HOL was just classical stuff</p>\n</blockquote>\n<p>Isabelle has never been constructivist, this is a Coq / Agda thing mostly. Isabelle, Mizar, Metamath, HOL4, HOL light are all classical</p>",
        "id": 413135344,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705404937
    },
    {
        "content": "<p>Also, Lean's Mathlib has awesome documentation, where it's easy-to-read. Not so sure about the rest?</p>",
        "id": 413138270,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705406085
    },
    {
        "content": "<p>Let's be honest tho, if Kevin and other mathematicians didn't go for Lean at the time, then Lean wouldn't be this big right now.</p>",
        "id": 413138488,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705406164
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413129683\">said</a>:</p>\n<blockquote>\n<p>Why did current mathlib devs choose a new theorem prover over something well established like Isabelle or Mizar?</p>\n</blockquote>\n<p>I think this is the wrong way to look at it. When it comes to language use and evolution, society as a whole is always exploring all paths to some extent. There are people working in existing languages, and there are people trying something new, and then there is an evolutionary selection process that builds on itself to determine what actually takes hold in the large scale. So there are some small nudges here and there due to the language design itself, leading some influential people to have a preference in one direction, leading others to join in and then after a few more doubling iterations the new language becomes another contender next to the old guard.</p>",
        "id": 413139451,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705406513
    },
    {
        "content": "<p>^ kind of like natural language</p>",
        "id": 413139606,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705406561
    },
    {
        "content": "<p>The thing about the HOL languages is I suspect that they're not really suitable for a big chunk of post 1950s mathematics (all the homological algebra / category theory stuff). Of course you can <em>do</em> it, but it might be super-painful. On the other hand they are probably better at automation (because they have a simpler type theory), at least historically, so there is a certain amount of swings and roundabouts here.</p>",
        "id": 413150938,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705410799
    },
    {
        "content": "<blockquote>\n<p>Of course you can <em>do</em> it, but it might be super-painful.</p>\n</blockquote>\n<p>Keep in mind that what this actually means is that the tooling isn't there, this isn't an argument for one foundation vs another</p>",
        "id": 413151515,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705410994
    },
    {
        "content": "<p>HOL is also not particularly suited to direct ATP applications. People have tried to do so, but the SOTA is all FOL not HOL. So this is really another tooling issue</p>",
        "id": 413151688,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705411072
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413139451\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413129683\">said</a>:</p>\n<blockquote>\n<p>Why did current mathlib devs choose a new theorem prover over something well established like Isabelle or Mizar?</p>\n</blockquote>\n<p>I think this is the wrong way to look at it. When it comes to language use and evolution, society as a whole is always exploring all paths to some extent. There are people working in existing languages, and there are people trying something new, and then there is an evolutionary selection process that builds on itself to determine what actually takes hold in the large scale. So there are some small nudges here and there due to the language design itself, leading some influential people to have a preference in one direction, leading others to join in and then after a few more doubling iterations the new language becomes another contender next to the old guard.</p>\n</blockquote>\n<p>As an overarching narrative this makes sense. But it needs some details to be fleshed out. Much of Lean's mathlib community comes from academia which has a publish or perish incentive structure. Formalisation would have been a fairly risky endeavour for an academic mathematician (funding, tenure eval, positions etc). Further I can't imagine that it would be helpful to say \"we verified a trivial piece of undergrad math\" as opposed to some frontier results. Lean would have (at that time, say 2017)  compounded this with the uncertainties of a new and untried system.</p>",
        "id": 413195237,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1705423204
    },
    {
        "content": "<blockquote>\n<p>Much of Lean's mathlib community comes from academia which has a publish or perish incentive structure. Formalisation would have been a fairly risky endeavour for an academic mathematician (funding, tenure eval, positions etc).</p>\n</blockquote>\n<p>Seems like you have it backwards: Academia likes new things, so working on a new system is encouraged if you can describe some unique benefits as a result. That's why if you watch a CS conference you will see 10 never before seen languages presented, because the language is the vehicle for a new idea</p>",
        "id": 413195840,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705423400
    },
    {
        "content": "<blockquote>\n<p>Further I can't imagine that it would be helpful to say \"we verified a trivial piece of undergrad math\"</p>\n</blockquote>\n<p>That's why I spent three years training undergraduates to do this.</p>",
        "id": 413196183,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705423493
    },
    {
        "content": "<p>However, this is clearly not an attractive proposition for mathematics departments: formalization circa 2017 is mostly dead math, so it's not clear why you would want to invest in it.</p>",
        "id": 413196188,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705423495
    },
    {
        "content": "<p>That's why formalization circa 2017 is CS dominated, it's a new tech validating old math</p>",
        "id": 413196316,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705423542
    },
    {
        "content": "<p>The actual academic mathematicians only started flowing in in the past 2-3 years, once we got past the boring stuff built by people like me (with a hybrid CS/Math background) and undergraduates (who aren't yet at the point of risking their careers). Before then all the mathematicians involved were definitely taking a risk</p>",
        "id": 413197081,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705423766
    },
    {
        "content": "<p>Even now it's somewhat risky to get heavily involved in formalization as a pure mathematician</p>",
        "id": 413197203,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705423803
    },
    {
        "content": "<p>For example I could afford to take that risk because when my line manager asked me where all my brilliant new number theory papers were I just replied that for technical reasons there were not going to be any such papers in the foreseeable future, and because I am an established professor and a popular teacher my line manager reluctantly agreed that this was OK. But I was/am in an extremely privileged position.</p>",
        "id": 413197486,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705423888
    },
    {
        "content": "<p>Attracting undergrads takes decent UX. Makes sense. As long as only PhDs and above (in the academic career ladder) are doing formalization </p>\n<ol>\n<li>there would be a disincentive to work on basic stuff. Even in CS, I don't know of many pure math formalization projects targeting undergrad math.</li>\n<li>Once they are committed to formalization, they would be willing to swallow the bitter pill of poor UX to get the job done. It happened to me in a different context and I have seen it happen to people in formalization heavy areas like PL</li>\n</ol>",
        "id": 413204362,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1705426033
    },
    {
        "content": "<p>\"Get them early\" and all that</p>",
        "id": 413204431,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1705426064
    },
    {
        "content": "<p>Likewise, I'm in a department with modest research expectations, and after I published enough to get tenure, I was able to spend two years not publishing much to focus on Lean.</p>",
        "id": 413221399,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1705432044
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413011406\">said</a>:</p>\n<blockquote>\n<p>I can only hint what did NOT work well for me:<br>\n<a href=\"/user_uploads/3121/GEVjxTDztci4yOZEQga37ySq/image.png\">image.png</a></p>\n<p>This is what the whole advertisement looked like:<br>\n<a href=\"/user_uploads/3121/O4LYBv6LZCjSDJ6R2p8hjECP/image.png\">image.png</a></p>\n</blockquote>\n<p>LMFAO</p>",
        "id": 413234929,
        "sender_full_name": "Alok Singh",
        "timestamp": 1705437485
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413221399\">said</a>:</p>\n<blockquote>\n<p>Likewise, I'm in a department with modest research expectations, and after I published enough to get tenure, I was able to spend two years not publishing much to focus on Lean.</p>\n</blockquote>\n<p>that's deffo the smart way to do it</p>\n<p>I'm a PhD, and I focus on Lean to focus on my research, which is definitely such a backwards way of doing research and a big waste of time in everyone's opinion. Think of something -&gt; prove it on paper -&gt; Lean it for week(s) -&gt; move on</p>",
        "id": 413240014,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705439703
    },
    {
        "content": "<p>By weeks do you mean months?</p>",
        "id": 416080102,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1705511330
    },
    {
        "content": "<p>sometimes haha. I guess it depends</p>",
        "id": 416083450,
        "sender_full_name": "Monica Omar",
        "timestamp": 1705512440
    },
    {
        "content": "<p>I mean years.</p>",
        "id": 416103730,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705519723
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/187764-Lean-for-teaching/topic/Advertising.20a.20course/near/413011406\">said</a>:</p>\n<blockquote>\n<p>I can only hint what did NOT work well for me:<br>\n<a href=\"/user_uploads/3121/GEVjxTDztci4yOZEQga37ySq/image.png\">image.png</a></p>\n<p>This is what the whole advertisement looked like:<br>\n<a href=\"/user_uploads/3121/O4LYBv6LZCjSDJ6R2p8hjECP/image.png\">image.png</a></p>\n</blockquote>\n<p>this reminds me a lot of a slide by <span class=\"user-mention\" data-user-id=\"443812\">@Orestis Melkonian</span></p>",
        "id": 417233932,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1705931834
    },
    {
        "content": "<p>(from <a href=\"https://www.youtube.com/watch?v=7unXXl_v8GY\">this talk</a>)</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"7unXXl_v8GY\" href=\"https://www.youtube.com/watch?v=7unXXl_v8GY\"><img src=\"https://uploads.zulipusercontent.net/70477b6fdd3855773e1123fb872b850b50f211ba/68747470733a2f2f692e7974696d672e636f6d2f76692f37756e58586c5f763847592f64656661756c742e6a7067\"></a></div>",
        "id": 417233978,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1705931849
    }
]