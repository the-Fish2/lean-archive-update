[
    {
        "content": "<p>I'm working on formalising some type systems in Lean. In trying to apply typing rules I frequently have to do several tedious set-related rewrites before Lean can unify successfully. I've included the most minimal example of this kind of difficulty I can come up with. Is there a better way of allowing the rule to unify than rewriting manually? Ideally I'd just like to let aesop do this, but even after the rewrite it still fails for me. Am I missing something there?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">aesop</span> <span class=\"n\">unsafe</span> <span class=\"n\">constructors</span><span class=\"kd\">]</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">Cons</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n  <span class=\"bp\">|</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">Γ</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Cons</span> <span class=\"o\">(</span><span class=\"bp\">Γ</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">A</span><span class=\"o\">})</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Cons</span> <span class=\"o\">{</span><span class=\"mi\">5</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">--apply Cons.A ∅ 5              -- This doesn't work</span>\n  <span class=\"c1\">--exact?                        -- This doesn't work</span>\n  <span class=\"c1\">--aesop                         -- This doesn't work</span>\n\n  <span class=\"c1\">-- With a preceding rewrite:</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">Set.empty_union</span> <span class=\"o\">{</span><span class=\"mi\">5</span><span class=\"o\">}]</span>\n  <span class=\"c1\">--apply Cons.A                  -- This works</span>\n  <span class=\"c1\">--exact?                        -- This works</span>\n  <span class=\"c1\">--aesop                         -- This doesn't work</span>\n</code></pre></div>",
        "id": 419280123,
        "sender_full_name": "James Reynolds",
        "timestamp": 1706803821
    }
]