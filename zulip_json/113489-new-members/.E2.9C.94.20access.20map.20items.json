[
    {
        "content": "<p>I have a Mapping from unique keys to values, i use the std:RBMap for this (seems to be the best built in choice?).<br>\nhow would i write a function that safely returns a value to a key, given the proof that the key is contained by the list</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">Lean.mkRBMap</span> <span class=\"n\">String</span> <span class=\"n\">Unit</span> <span class=\"n\">str_order</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">insert</span> <span class=\"s2\">\"hello\"</span> <span class=\"o\">()</span>\n<span class=\"kd\">def</span> <span class=\"n\">fn</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">m.contains</span> <span class=\"s2\">\"hello\"</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n  <span class=\"k\">let</span> <span class=\"n\">o</span> <span class=\"o\">:=</span> <span class=\"n\">m.find</span><span class=\"bp\">?</span> <span class=\"s2\">\"hello\"</span> <span class=\"c1\">-- gives option</span>\n  <span class=\"k\">let</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">m.find</span><span class=\"bp\">!</span> <span class=\"s2\">\"hello\"</span> <span class=\"c1\">-- might return default value</span>\n  <span class=\"o\">()</span>\n</code></pre></div>\n<p>there does not seem to be a builtin function, is there a reason for this?<br>\nand how do i pass default String ordering to the RBMap, im currently constructing the ordering object manually</p>",
        "id": 420973504,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1707726328
    },
    {
        "content": "<p>Is what is below what you are looking for?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">fn</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">m.find</span><span class=\"bp\">?</span> <span class=\"s2\">\"hello\"</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">get</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">)</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">fn</span>  <span class=\"c1\">-- ()</span>\n</code></pre></div>",
        "id": 420991045,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707732048
    },
    {
        "content": "<p>there is no get function on Option or did you mean getD?</p>",
        "id": 420997390,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1707733795
    },
    {
        "content": "<p>I meant <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Option.get#doc\">docs#Option.get</a>.</p>",
        "id": 420998363,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707734062
    },
    {
        "content": "<p>#check Option.get<br>\nshows that this function is not available. is this a mathlib function?</p>",
        "id": 420998934,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1707734207
    },
    {
        "content": "<p>According to the link above, it is in <code>Std.Data.Option.Basic</code>.</p>",
        "id": 420999392,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707734333
    },
    {
        "content": "<p>i was appearently running an old Lean Version without that function (i guess), running elan update worked for me</p>",
        "id": 421017307,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1707740198
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"684702\">Simon Daniel</span> has marked this topic as resolved.</p>",
        "id": 421017329,
        "sender_full_name": "Notification Bot",
        "timestamp": 1707740207
    }
]