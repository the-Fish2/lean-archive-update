[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Choose.Sum</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Nat</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Finset</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">idt1_Pascal's_Recurrence</span><span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"o\">:</span><span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)(</span><span class=\"n\">h2</span><span class=\"o\">:</span><span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">k</span>  <span class=\"bp\">+</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">choose_eq_choose_sub_add</span> <span class=\"o\">:</span>  <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Nat.sub_add_cancel</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">Nat.sub_add_cancel</span> <span class=\"n\">h2</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">choose_eq_choose_sub_add</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">add_comm</span> <span class=\"o\">(</span><span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))]</span>\n  <span class=\"k\">have</span> <span class=\"n\">choose_sub_eq_choose_sub_add</span> <span class=\"o\">:</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Nat.sub_add_cancel</span> <span class=\"n\">h2</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">choose_sub_eq_choose_sub_add</span><span class=\"o\">,</span> <span class=\"n\">choose_succ_succ</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">idt6_Absorption_Idt</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hkn</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hsk</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span>  <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"k\">have</span> <span class=\"n\">choose_mul_eq_choose_mul</span> <span class=\"o\">:</span>  <span class=\"n\">choose</span> <span class=\"n\">k</span> <span class=\"mi\">1</span>  <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"bp\">=</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">choose_mul</span> <span class=\"n\">hkn</span> <span class=\"n\">hsk</span><span class=\"o\">]</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">choose_one_right</span><span class=\"o\">,</span> <span class=\"n\">choose_one_right</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">choose_mul_eq_choose_mul</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">choose_mul_eq_choose_mul</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Idt21</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">):=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">d1</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Nat.zero_mul</span> <span class=\"o\">(</span><span class=\"n\">Nat.choose</span> <span class=\"n\">n</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n    <span class=\"k\">have</span> <span class=\"n\">d2</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n    <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">d2</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Iff.mpr</span> <span class=\"n\">add_left_eq_self</span> <span class=\"n\">d1</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span>  <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span>  <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"k\">have</span> <span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">h0</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">h1</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">h2</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">h3</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>When I want to solve the first sorry, I need to fix a <code>k</code> and <code>n</code>, and the equation holds for any k and n. Does anyone know how I can fix k,n? I can only use <code>rintro</code> but it doesn't work in this case</p>",
        "id": 411151167,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1704359074
    },
    {
        "content": "<p>Where are you getting all these identity exercises from?</p>",
        "id": 411151955,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1704359354
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598052\">Jeremy Tan</span> <a href=\"#narrow/stream/270676-lean4/topic/How.20to.20fix.20k.20n.3F/near/411151955\">said</a>:</p>\n<blockquote>\n<p>Where are you getting all these identity exercises from?</p>\n</blockquote>\n<p>It is from \"The Art of Proving Binomial Identities\"</p>",
        "id": 411160777,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1704362894
    },
    {
        "content": "<p>Anyone want to do <a href=\"https://www2.math.upenn.edu/~wilf/AeqB.html\">https://www2.math.upenn.edu/~wilf/AeqB.html</a>?</p>",
        "id": 411161328,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1704363129
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Choose.Sum</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Nat</span> <span class=\"n\">Finset</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Idt21</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">sum_range_reflect</span><span class=\"o\">,</span> <span class=\"n\">add_tsub_cancel_right</span><span class=\"o\">]</span>\n    <span class=\"n\">congr</span><span class=\"bp\">!</span> <span class=\"mi\">2</span> <span class=\"k\">with</span> <span class=\"n\">k</span> <span class=\"n\">h</span>\n    <span class=\"n\">exact</span> <span class=\"n\">choose_symm</span> <span class=\"o\">(</span><span class=\"n\">mem_range_succ_iff.mp</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">nth_rw</span> <span class=\"mi\">1</span> <span class=\"o\">[</span><span class=\"n\">two_mul</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">sum_add_distrib</span><span class=\"o\">]</span>\n    <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">add_mul</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n.choose</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">rfl</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n      <span class=\"n\">congr</span> <span class=\"mi\">1</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">tsub_add_cancel_iff_le.mpr</span> <span class=\"o\">(</span><span class=\"n\">mem_range_succ_iff.mp</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n      <span class=\"bp\">←</span> <span class=\"n\">mul_sum</span><span class=\"o\">,</span> <span class=\"n\">sum_range_choose</span><span class=\"o\">]</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mul_right_injective₀</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">2</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">)</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"bp\">*</span> <span class=\"n\">_</span><span class=\"o\">),</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">cases'</span> <span class=\"n\">n.eq_zero_or_pos</span> <span class=\"k\">with</span> <span class=\"n\">h</span> <span class=\"n\">h</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">Nat.pow_succ</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">pred_eq_sub_one</span><span class=\"o\">,</span> <span class=\"n\">succ_pred</span> <span class=\"n\">h.ne'</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 411163831,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1704364192
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598052\">Jeremy Tan</span> <a href=\"#narrow/stream/270676-lean4/topic/How.20to.20fix.20k.20n.3F/near/411163831\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Choose.Sum</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Nat</span> <span class=\"n\">Finset</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Idt21</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">sum_range_reflect</span><span class=\"o\">,</span> <span class=\"n\">add_tsub_cancel_right</span><span class=\"o\">]</span>\n    <span class=\"n\">congr</span><span class=\"bp\">!</span> <span class=\"mi\">2</span> <span class=\"k\">with</span> <span class=\"n\">k</span> <span class=\"n\">h</span>\n    <span class=\"n\">exact</span> <span class=\"n\">choose_symm</span> <span class=\"o\">(</span><span class=\"n\">mem_range_succ_iff.mp</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">nth_rw</span> <span class=\"mi\">1</span> <span class=\"o\">[</span><span class=\"n\">two_mul</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">sum_add_distrib</span><span class=\"o\">]</span>\n    <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">add_mul</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n.choose</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">rfl</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n      <span class=\"n\">congr</span> <span class=\"mi\">1</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">tsub_add_cancel_iff_le.mpr</span> <span class=\"o\">(</span><span class=\"n\">mem_range_succ_iff.mp</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n      <span class=\"bp\">←</span> <span class=\"n\">mul_sum</span><span class=\"o\">,</span> <span class=\"n\">sum_range_choose</span><span class=\"o\">]</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mul_right_injective₀</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">2</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">)</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"bp\">*</span> <span class=\"n\">_</span><span class=\"o\">),</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">cases'</span> <span class=\"n\">n.eq_zero_or_pos</span> <span class=\"k\">with</span> <span class=\"n\">h</span> <span class=\"n\">h</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">pred_eq_sub_one</span><span class=\"o\">,</span> <span class=\"n\">succ_pred</span> <span class=\"n\">h.ne'</span><span class=\"o\">]</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Thank you!</p>",
        "id": 411164923,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1704364649
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598052\">Jeremy Tan</span> <a href=\"#narrow/stream/270676-lean4/topic/How.20to.20fix.20k.20n.3F/near/411163831\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Choose.Sum</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Nat</span> <span class=\"n\">Finset</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Idt21</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">sum_range_reflect</span><span class=\"o\">,</span> <span class=\"n\">add_tsub_cancel_right</span><span class=\"o\">]</span>\n    <span class=\"n\">congr</span><span class=\"bp\">!</span> <span class=\"mi\">2</span> <span class=\"k\">with</span> <span class=\"n\">k</span> <span class=\"n\">h</span>\n    <span class=\"n\">exact</span> <span class=\"n\">choose_symm</span> <span class=\"o\">(</span><span class=\"n\">mem_range_succ_iff.mp</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">nth_rw</span> <span class=\"mi\">1</span> <span class=\"o\">[</span><span class=\"n\">two_mul</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">sum_add_distrib</span><span class=\"o\">]</span>\n    <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">add_mul</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n.choose</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">rfl</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n      <span class=\"n\">congr</span> <span class=\"mi\">1</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">tsub_add_cancel_iff_le.mpr</span> <span class=\"o\">(</span><span class=\"n\">mem_range_succ_iff.mp</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n      <span class=\"bp\">←</span> <span class=\"n\">mul_sum</span><span class=\"o\">,</span> <span class=\"n\">sum_range_choose</span><span class=\"o\">]</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mul_right_injective₀</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">2</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">)</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"bp\">*</span> <span class=\"n\">_</span><span class=\"o\">),</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">cases'</span> <span class=\"n\">n.eq_zero_or_pos</span> <span class=\"k\">with</span> <span class=\"n\">h</span> <span class=\"n\">h</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">pred_eq_sub_one</span><span class=\"o\">,</span> <span class=\"n\">succ_pred</span> <span class=\"n\">h.ne'</span><span class=\"o\">]</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Choose.Sum</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Nat</span> <span class=\"n\">Finset</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Idt21</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">sum_range_reflect</span><span class=\"o\">,</span> <span class=\"n\">add_tsub_cancel_right</span><span class=\"o\">]</span>\n    <span class=\"n\">congr</span><span class=\"bp\">!</span> <span class=\"mi\">2</span> <span class=\"k\">with</span> <span class=\"n\">k</span> <span class=\"n\">h</span>\n    <span class=\"n\">exact</span> <span class=\"n\">choose_symm</span> <span class=\"o\">(</span><span class=\"n\">mem_range_succ_iff.mp</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">nth_rw</span> <span class=\"mi\">1</span> <span class=\"o\">[</span><span class=\"n\">two_mul</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">sum_add_distrib</span><span class=\"o\">]</span>\n    <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">add_mul</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_congr</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n.choose</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">rfl</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n      <span class=\"n\">congr</span> <span class=\"mi\">1</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">tsub_add_cancel_iff_le.mpr</span> <span class=\"o\">(</span><span class=\"n\">mem_range_succ_iff.mp</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n      <span class=\"bp\">←</span> <span class=\"n\">mul_sum</span><span class=\"o\">,</span> <span class=\"n\">sum_range_choose</span><span class=\"o\">]</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mul_right_injective₀</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">2</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">)</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"bp\">*</span> <span class=\"n\">_</span><span class=\"o\">),</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">cases'</span> <span class=\"n\">n.eq_zero_or_pos</span> <span class=\"k\">with</span> <span class=\"n\">h</span> <span class=\"n\">h</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"n\">d1</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">induction</span> <span class=\"n\">n</span>\n      <span class=\"bp\">·</span> <span class=\"n\">linarith</span>\n      <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n    <span class=\"n\">exact</span> <span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">HMul.hMul</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">d1</span>\n</code></pre></div>\n<p>I don’t know why the last sentence of the above code doesn’t work for me. Maybe it can be changed to this</p>",
        "id": 411166767,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1704365345
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631681\">tsuki  hao</span> has marked this topic as resolved.</p>",
        "id": 411167362,
        "sender_full_name": "Notification Bot",
        "timestamp": 1704365574
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/.E2.9C.94.20How.20to.20fix.20k.20n.3F\">#lean4 &gt; ✔ How to fix k n?</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 411173981,
        "sender_full_name": "Notification Bot",
        "timestamp": 1704368354
    }
]