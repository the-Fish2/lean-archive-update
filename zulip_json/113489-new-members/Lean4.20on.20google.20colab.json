[
    {
        "content": "<p>Is it possible to run Lean4 on google colab? I tried googleing a bit but nothing came out of it.</p>",
        "id": 432559179,
        "sender_full_name": "Baran Zadeoglu",
        "timestamp": 1712772307
    },
    {
        "content": "<p>Making this a pleasant experience would amount to embedding a full lean editor inside a single google colab cell</p>",
        "id": 432568849,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712776157
    },
    {
        "content": "<p>Of course, the other end of the spectrum is \"yes, use <code>subprocess.run([\"lean\", \"some_lean_file.lean\"])</code></p>",
        "id": 432569981,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712776644
    },
    {
        "content": "<p>I see. Not quite what I hoped for. Perhaps I should reformulate. I am hoping for a way to share lean code online in \"blocks\". Something like an online Jupyter notebook was the first thing that came to my mind. But as far as I understand, Jupyter notebooks don't work for lean to begin with.</p>",
        "id": 432575208,
        "sender_full_name": "Baran Zadeoglu",
        "timestamp": 1712778856
    },
    {
        "content": "<p>You might already know this, but there is a lean4 webeditor which stores the code in the url, so you can share code like <a href=\"https://lean.math.hhu.de/#code=%23eval%20%22Hello%20Zulip%22\">this</a></p>",
        "id": 432576990,
        "sender_full_name": "Christian K",
        "timestamp": 1712779608
    },
    {
        "content": "<p>Thank you! It may work. I will keep this question open for now in case someone else has a better idea.</p>",
        "id": 432580065,
        "sender_full_name": "Baran Zadeoglu",
        "timestamp": 1712780982
    },
    {
        "content": "<p>What's your concern with the webeditor/what features are you missing?</p>",
        "id": 432580348,
        "sender_full_name": "Christian K",
        "timestamp": 1712781100
    },
    {
        "content": "<p>we would need to recommunicate links after each itteration. Plus I was hoping to collapse the blocks of code. I had in mind hundreds of small examples where someone can hopefully browse through with some relative ease.</p>",
        "id": 432580801,
        "sender_full_name": "Baran Zadeoglu",
        "timestamp": 1712781259
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"677650\">Baran Zadeoglu</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean4.20on.20google.20colab/near/432580801\">said</a>:</p>\n<blockquote>\n<p>we would need to recommunicate links after each itteration. </p>\n</blockquote>\n<p>Yeah, i had this problem too. I built a modified version of the webeditor which clones a copy of the github repo to the language server which also allows importing from your own files. The links are also static (They store the file path, not the code). But this version isn't currently running on a public server but it could be released after some cleanup</p>",
        "id": 432581580,
        "sender_full_name": "Christian K",
        "timestamp": 1712781627
    },
    {
        "content": "<p>I would be happy to use it if you were to release it. I am not literate enough to help you clean it up I am afraid.</p>",
        "id": 432582593,
        "sender_full_name": "Baran Zadeoglu",
        "timestamp": 1712782076
    },
    {
        "content": "<p>No problem, it would be amazing though to find some community members to help developing this, especially in regards to safety.</p>",
        "id": 432582781,
        "sender_full_name": "Christian K",
        "timestamp": 1712782153
    },
    {
        "content": "<p>I think you might be interested in Verso, which lets you do 'literate programming', and compiles to interactive (but non-editable) html for sharing.</p>",
        "id": 432584870,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712782980
    },
    {
        "content": "<p>I think at one point <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> built a Jupyter kernel for Lean, but it might have been an old version?</p>",
        "id": 432584961,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712783022
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"652766\">Christian K</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean4.20on.20google.20colab/near/432581580\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"677650\">Baran Zadeoglu</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean4.20on.20google.20colab/near/432580801\">said</a>:</p>\n<blockquote>\n<p>we would need to recommunicate links after each itteration. </p>\n</blockquote>\n<p>Yeah, i had this problem too. I built a modified version of the webeditor which clones a copy of the github repo to the language server which also allows importing from your own files. The links are also static (They store the file path, not the code). But this version isn't currently running on a public server but it could be released after some cleanup</p>\n</blockquote>\n<p>You could also see what you could integrate back into the webeditor, and create PRs! I think it would be quite cool to add more functionality alongside the option to store the code in the URL (which was primarily inteded for short code snipets from Zulip).</p>\n<p>Of course then one needs to think about garbage collection, safety, and also a few other things...</p>\n<p><span class=\"user-mention silent\" data-user-id=\"652766\">Christian K</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean4.20on.20google.20colab/near/432582781\">said</a>:</p>\n<blockquote>\n<p>No problem, it would be amazing though to find some community members to help developing this, especially in regards to safety.</p>\n</blockquote>\n<p>I don't intent to spent lots of time on developing anything around the web editor, but I generally have a bit of time allocated for maintaining that code (i.e. don't hesitate to DM me<span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span>)</p>",
        "id": 432594091,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1712786521
    },
    {
        "content": "<p>Nice, but I'm not really sure if this would really make sense on the public lean4 web severs. The workflow is, that the server has a local copy of the github repo. On the website, the user has a filepicker to select a file (or just inputs a url with the path directly). The user can then view the code of the file, but the changes are only committed to the github repo if the user is logged in. The question is if it would be more viable to have this tool avaible so big projects could host it themselves for their project or if the lean4 web servers should have the ability to clone github repos etc.</p>",
        "id": 432632452,
        "sender_full_name": "Christian K",
        "timestamp": 1712814721
    }
]