[
    {
        "content": "<p>I have a function <code>f: X → X → Prop</code> that I can restrict to <code>f' : myset → X → Prop</code>. How can I restrict it further and get a function <code>f'' : myset → myset → Prop</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Set.Function</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Set</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">myset</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">f'</span> <span class=\"o\">:</span> <span class=\"n\">myset</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">myset.restrict</span> <span class=\"n\">f</span>\n</code></pre></div>",
        "id": 435186007,
        "sender_full_name": "Abdullah Uyu",
        "timestamp": 1713964269
    },
    {
        "content": "<p>I guess I can write</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f''</span> <span class=\"o\">:</span>\n    <span class=\"n\">myset</span> <span class=\"bp\">→</span> <span class=\"n\">myset</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">myset</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">myset.restrict</span> <span class=\"o\">(</span><span class=\"n\">myset.restrict</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">b</span>\n</code></pre></div>\n<p>Can I make this shorter? My original f actually is of type <code>X → X → X → Prop</code>, so I have to apply the restrict three times and it'll become very hard to read.</p>",
        "id": 435190957,
        "sender_full_name": "Abdullah Uyu",
        "timestamp": 1713965646
    },
    {
        "content": "<p>I think you're getting into trouble with your variables. If you check the type of <code>f'</code>, you'll see that it takes all three of your variable types before accepting an argument of type <code>myset</code>.  So you could write </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f''</span> <span class=\"o\">:</span> <span class=\"n\">myset</span> <span class=\"bp\">→</span> <span class=\"n\">myset</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">myset.restrict</span> <span class=\"o\">(</span><span class=\"n\">f'</span> <span class=\"n\">X</span> <span class=\"n\">f</span> <span class=\"n\">myset</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>But I'm guessing you don't intend for those to be arguments to <code>f'</code> (and might not be in your real work)`. So you might be able to get away with </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f''</span> <span class=\"o\">:</span> <span class=\"n\">myset</span> <span class=\"bp\">→</span> <span class=\"n\">myset</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span>  <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">myset.restrict</span> <span class=\"o\">(</span><span class=\"n\">f'</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>in your real code.</p>",
        "id": 435200453,
        "sender_full_name": "Paul Rowe",
        "timestamp": 1713968257
    }
]