[
    {
        "content": "<p>Hi everyone, I'm brand new here/to lean so sorry if I'm posting this in the wrong place.</p>\n<p>I'm working through the mathematics in lean book and I'm now a bit stuck. I'm at the end of section 2.2, trying to prove mul_right_inv for groups. I have the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">mul_left_cancel</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">one_mul</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">one_mul</span> <span class=\"n\">c</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">mul_left_inv</span> <span class=\"n\">a</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">mul_right_inv</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"o\">[</span><span class=\"n\">mul_left_cancel</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>I'm getting the following error message:</p>\n<p>tactic 'apply' failed, failed to unify<br>\n  List ?m.53168<br>\nwith<br>\n  a * a⁻¹ = 1</p>\n<p>G: Type u_1<br>\ninst✝: Group G<br>\na: G<br>\n⊢ a * a⁻¹ = 1</p>\n<p>I thought that the way the apply tactic works is that it checks to see if the goal is the same type as the conclusion of the theorem, and if it is, it replaces it with the hypothesis of the theorem. Is that understanding correct? If so, why can't I apply mul_left_cancel to mul_right_inv? The conclusion of mul_left_cancel and the goal of mul_right_inv are both equalities.</p>\n<p>I don't actually know if this is the right way to solve the problem but I wanted to correct my understanding on the way apply works anyway. Thanks!</p>",
        "id": 418434617,
        "sender_full_name": "Lukas Krause",
        "timestamp": 1706377430
    },
    {
        "content": "<p>You're right about how <code>apply</code> works. The correct syntax is <code>apply mul_left_cancel</code>, though.</p>",
        "id": 418435018,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706377805
    },
    {
        "content": "<p>ahh, that makes sense. Thank you!</p>",
        "id": 418435322,
        "sender_full_name": "Lukas Krause",
        "timestamp": 1706378120
    },
    {
        "content": "<p>actually, when I do that my goal changes to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">?</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"bp\">\\</span><span class=\"n\">inv</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">?</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>Is there a way I can use apply so that I can choose what to replace ?a with?</p>",
        "id": 418435426,
        "sender_full_name": "Lukas Krause",
        "timestamp": 1706378235
    },
    {
        "content": "<p>The arguments for <code>mul_left_cancel</code> are called a, b and c, so you can call <code>apply mul_left_cancel (a := whatever)</code></p>",
        "id": 418435921,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706378719
    },
    {
        "content": "<p>awesome, thanks</p>",
        "id": 418436317,
        "sender_full_name": "Lukas Krause",
        "timestamp": 1706379085
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"687103\">Lukas Krause</span> has marked this topic as resolved.</p>",
        "id": 418458058,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706401527
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"687103\">Lukas Krause</span> has marked this topic as unresolved.</p>",
        "id": 418458059,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706401530
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"687103\">Lukas Krause</span> has marked this topic as resolved.</p>",
        "id": 418458063,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706401535
    }
]