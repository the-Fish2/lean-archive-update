[
    {
        "content": "<p>Hey, I'm fairly new to lean. I'm trying to prove some basic facts about statistics, but I am already stuck at trying to prove the last lemma. On Paper this prove is quite simple and works by constructing a specific set. I thought that the same argument should probably work in lean, however I am not sure how I can define such a set. I tried the following, but I'm not sure if the equality can be proven. Is this the right way to formalize the argument in lean or is there an alternative? (Also any comments on the rest of the code are welcome)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span>\n<span class=\"kn\">open</span> <span class=\"n\">ProbabilityTheory</span>\n<span class=\"kn\">open</span> <span class=\"n\">ProbabilityMeasure</span>\n<span class=\"kn\">open</span> <span class=\"n\">ENNReal</span>\n<span class=\"kn\">open</span> <span class=\"n\">Set</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Statistic</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">StatisticalSpace</span> <span class=\"o\">(</span><span class=\"bp\">Ω</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">MeasurableSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">where</span>\n  <span class=\"n\">DistributionAssumption'</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">ProbabilityMeasure</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">DistributionAssumption</span> <span class=\"o\">(</span><span class=\"bp\">Ω</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">ProbabilityMeasure</span> <span class=\"bp\">Ω</span> <span class=\"bp\">//</span> <span class=\"o\">‹</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">›</span><span class=\"bp\">.</span><span class=\"n\">DistributionAssumption'</span> <span class=\"n\">P</span><span class=\"o\">}</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">DecisionSpace</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">D</span><span class=\"o\">,</span> <span class=\"n\">MeasurableSingletonClass</span> <span class=\"n\">D</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">InferenceSpace</span> <span class=\"o\">(</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"n\">where</span>\n  <span class=\"n\">LossFunction'</span> <span class=\"o\">:</span> <span class=\"n\">DistributionAssumption</span> <span class=\"bp\">Ω</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">D</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span>\n  <span class=\"n\">IsLossFunction</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">P</span><span class=\"o\">,</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">e</span> <span class=\"bp\">↦</span> <span class=\"n\">LossFunction'</span> <span class=\"n\">P</span> <span class=\"n\">e</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">LossFunction</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n  <span class=\"o\">‹</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">›</span><span class=\"bp\">.</span><span class=\"n\">LossFunction'</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">RSDF</span> <span class=\"o\">(</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span><span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">kernel</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"bp\">//</span> <span class=\"n\">IsMarkovKernel</span> <span class=\"n\">δ</span><span class=\"o\">}</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">RiskFunction</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">DistributionAssumption</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∫⁻</span> <span class=\"n\">ω</span><span class=\"o\">,</span> <span class=\"bp\">∫⁻</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">LossFunction</span> <span class=\"n\">P</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">∂</span><span class=\"o\">(</span><span class=\"n\">δ.val</span> <span class=\"n\">ω</span><span class=\"o\">)</span> <span class=\"bp\">∂</span><span class=\"o\">(</span><span class=\"n\">toMeasure</span> <span class=\"n\">P.val</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">RiskLe</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">δ₀</span> <span class=\"n\">δ₁</span> <span class=\"o\">:</span> <span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">P</span><span class=\"o\">,</span> <span class=\"n\">RiskFunction</span> <span class=\"n\">P</span> <span class=\"n\">δ₀</span> <span class=\"bp\">≤</span> <span class=\"n\">RiskFunction</span> <span class=\"n\">P</span> <span class=\"n\">δ₁</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">RiskIsPreorder</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Preorder</span> <span class=\"o\">(</span><span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">le</span> <span class=\"o\">(</span><span class=\"n\">δ₀</span> <span class=\"n\">δ₁</span> <span class=\"o\">:</span> <span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">RiskLe</span> <span class=\"n\">δ₀</span> <span class=\"n\">δ₁</span>\n  <span class=\"n\">le_refl</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">intro</span> <span class=\"n\">δ</span> <span class=\"n\">P</span><span class=\"bp\">;</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">le_trans</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">intro</span> <span class=\"n\">δ₀</span> <span class=\"n\">δ₁</span> <span class=\"n\">δ₂</span> <span class=\"n\">δ₀_le_δ₁</span> <span class=\"n\">δ₁_le_δ₂</span> <span class=\"n\">P</span>\n    <span class=\"k\">calc</span>\n      <span class=\"n\">RiskFunction</span> <span class=\"n\">P</span> <span class=\"n\">δ₀</span> <span class=\"bp\">≤</span> <span class=\"n\">RiskFunction</span> <span class=\"n\">P</span> <span class=\"n\">δ₁</span> <span class=\"o\">:=</span> <span class=\"n\">δ₀_le_δ₁</span> <span class=\"n\">P</span>\n      <span class=\"n\">_</span> <span class=\"bp\">≤</span>  <span class=\"n\">RiskFunction</span> <span class=\"n\">P</span> <span class=\"n\">δ₂</span> <span class=\"o\">:=</span> <span class=\"n\">δ₁_le_δ₂</span> <span class=\"n\">P</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">IsInvalidRSDF</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">δ'</span> <span class=\"o\">:</span> <span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">,</span> <span class=\"n\">δ'</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">IsValidRSDF</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">¬</span> <span class=\"n\">IsInvalidRSDF</span> <span class=\"n\">δ</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">ValidRSDF</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span><span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"bp\">|</span> <span class=\"n\">IsValidRSDF</span> <span class=\"n\">δ</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Complete</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"bp\">Δ</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">δ'</span> <span class=\"bp\">∈</span> <span class=\"bp\">Δ</span><span class=\"o\">,</span>  <span class=\"n\">δ'</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">MinComplete</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"bp\">Δ</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Complete</span> <span class=\"bp\">Δ</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"bp\">Δ'</span> <span class=\"bp\">⊂</span> <span class=\"bp\">Δ</span><span class=\"o\">,</span> <span class=\"n\">Complete</span> <span class=\"bp\">Δ'</span> <span class=\"bp\">-&gt;</span> <span class=\"bp\">Δ'</span> <span class=\"bp\">=</span> <span class=\"bp\">Δ</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">MinComplete_implies_Complete</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"bp\">Δ</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">MinComplete</span> <span class=\"bp\">Δ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Complete</span> <span class=\"bp\">Δ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"o\">⟨</span><span class=\"bp\">Δ</span><span class=\"n\">_complete</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"n\">exact</span> <span class=\"bp\">Δ</span><span class=\"n\">_complete</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">ValidRSDF_complete</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"bp\">Δ</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">Complete</span> <span class=\"bp\">Δ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ValidRSDF</span> <span class=\"bp\">⊆</span> <span class=\"bp\">Δ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"bp\">Δ</span><span class=\"n\">_complete</span> <span class=\"n\">δ</span> <span class=\"n\">δ_valid</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">δ</span> <span class=\"bp\">∈</span> <span class=\"bp\">Δ</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">h</span>\n  <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"o\">⟨</span><span class=\"n\">δ'</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">δ'_lt_δ</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"bp\">Δ</span><span class=\"n\">_complete</span> <span class=\"n\">δ</span>\n    <span class=\"k\">have</span> <span class=\"n\">δ_invalid</span> <span class=\"o\">:</span> <span class=\"n\">IsInvalidRSDF</span> <span class=\"n\">δ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">use</span> <span class=\"n\">δ'</span>\n    <span class=\"n\">contradiction</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">MinComplete_eq_ValidRSDF</span> <span class=\"o\">{</span><span class=\"bp\">Ω</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">StatisticalSpace</span> <span class=\"bp\">Ω</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecisionSpace</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InferenceSpace</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"bp\">Δ</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">RSDF</span> <span class=\"bp\">Ω</span> <span class=\"n\">D</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">MinComplete</span> <span class=\"bp\">Δ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ValidRSDF</span> <span class=\"bp\">=</span> <span class=\"bp\">Δ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"bp\">Δ</span><span class=\"n\">_mincomplete</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Subset.antisymm_iff.mpr</span>\n  <span class=\"n\">constructor</span>\n  <span class=\"bp\">·</span> <span class=\"n\">apply</span> <span class=\"n\">ValidRSDF_complete</span> <span class=\"bp\">Δ</span> <span class=\"o\">(</span><span class=\"n\">MinComplete_implies_Complete</span> <span class=\"bp\">Δ</span> <span class=\"bp\">Δ</span><span class=\"n\">_mincomplete</span><span class=\"o\">)</span>\n  <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">δ</span> <span class=\"n\">δ_in_</span><span class=\"bp\">Δ</span>\n    <span class=\"n\">by_cases</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">δ</span> <span class=\"bp\">∈</span> <span class=\"bp\">Δ</span> <span class=\"bp\">\\</span> <span class=\"n\">ValidRSDF</span>\n    <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"bp\">Δ'</span> <span class=\"o\">:=</span> <span class=\"bp\">Δ</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">δ</span><span class=\"o\">}</span>\n      <span class=\"k\">have</span> <span class=\"bp\">Δ'</span><span class=\"n\">_eq_</span><span class=\"bp\">Δ</span><span class=\"n\">_without_δ</span> <span class=\"o\">:</span> <span class=\"bp\">Δ'</span> <span class=\"bp\">=</span> <span class=\"bp\">Δ</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">δ</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n      <span class=\"gr\">sorry</span>\n    <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"n\">δ_in_valid</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mem_diff</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">not.mp</span> <span class=\"n\">h</span>\n      <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">δ_in_valid</span>\n      <span class=\"n\">exact</span> <span class=\"n\">δ_in_valid</span> <span class=\"n\">δ_in_</span><span class=\"bp\">Δ</span>\n</code></pre></div>",
        "id": 409643254,
        "sender_full_name": "Marmare314",
        "timestamp": 1703279857
    },
    {
        "content": "<p>I didn't look at anything but the <code>sorry</code> line but if you use <code>set</code> rather than <code>have</code> then Lean \"remembers\" what you've defined delta' to be (so the next line would be provable by <code>rfl</code>)</p>",
        "id": 409645120,
        "sender_full_name": "Julian Berman",
        "timestamp": 1703281077
    },
    {
        "content": "<p>Ah great, thank you! That is exactly what I was looking for. Somehow I haven't encountered <code>set</code> yet.</p>",
        "id": 409645777,
        "sender_full_name": "Marmare314",
        "timestamp": 1703281518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"650736\">Marmare314</span> has marked this topic as resolved.</p>",
        "id": 409645792,
        "sender_full_name": "Notification Bot",
        "timestamp": 1703281530
    }
]