[
    {
        "content": "<ol>\n<li>\n<p>Consider the scenario where you need to locate a straightforward lemma such as <code>n ≠ 0 → (a % n) ≤ n - 1</code> (where <code>a</code> and <code>n</code> are natural numbers) in Mathlib. Assuming this lemma exists in Mathlib (which is reasonable in this case), what practical steps would you take to find it? Which tools would be most effective for this search?</p>\n</li>\n<li>\n<p>In the context of Lean/Mathlib, which one of the following equivalent formulations is typically regarded as more idiomatic?</p>\n</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">%</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">%</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 426026701,
        "sender_full_name": "Isak Colboubrani",
        "timestamp": 1710199332
    },
    {
        "content": "<p>It is very likely that</p>\n<ul>\n<li>the version with the subtraction is not in mathlib</li>\n<li>all hypotheses appear on the left of <code>:</code>.</li>\n</ul>\n<p>Somewhat strangely, the available lemma for the second form has a <code>n &gt; 0</code> hypothesis, which is almost unheard of for mathlib (and indeed the lemma is in <code>Init</code>).  So, I would have expected</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"c1\">-- you should probably expect this lemma, unsure whether `a` should be explicit or not</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">mathlib_like_version</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">%</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Nat.mod_lt</span> <span class=\"n\">_</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">Nat.pos_of_ne_zero</span> <span class=\"n\">h</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">%</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span><span class=\"bp\">?</span>  <span class=\"c1\">-- now works and suggests the lemma above</span>\n</code></pre></div>",
        "id": 426029854,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710201537
    },
    {
        "content": "<p>Perfect! Thanks <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span>!</p>",
        "id": 426053733,
        "sender_full_name": "Isak Colboubrani",
        "timestamp": 1710218951
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"683979\">Isak Colboubrani</span> has marked this topic as resolved.</p>",
        "id": 426053740,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710218956
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"683979\">Isak Colboubrani</span> has marked this topic as unresolved.</p>",
        "id": 426053746,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710218961
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"683979\">Isak Colboubrani</span> has marked this topic as resolved.</p>",
        "id": 426053753,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710218968
    }
]