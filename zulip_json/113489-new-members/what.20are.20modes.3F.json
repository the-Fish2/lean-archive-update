[
    {
        "content": "<p>After 2 weeks of starting to work through beginner tutorials - I am still not clear what a <strong>mode</strong> is?</p>\n<p>Tactic mode. Calc mode. Term mode. Conv mode?</p>\n<p>Is there a simple way of explaining what they are and they even exist?</p>",
        "id": 443868741,
        "sender_full_name": "rzeta0",
        "timestamp": 1718055576
    },
    {
        "content": "<p>All proofs are terms.<br>\nModes are different kinds of ways to construct these terms.</p>\n<p>Term mode lets you input terms directly.<br>\nTactic mode lets you call tactics which end up generating terms programatically.<br>\nThere are also calc and conv, they're a bit more specific.<br>\nCalc mode lets you chain transitive relations. Conv mode lets you focus on various parts of terms.</p>\n<p>Why do they exist?<br>\nBecause they are more convenient to express proofs in.</p>",
        "id": 443872511,
        "sender_full_name": "Franti코ek Silv치코i 游불",
        "timestamp": 1718057436
    },
    {
        "content": "<p>I am not an expert when it comes to using the correct words/terms, but I'd say that the word \"mode\" is more colloquial rather than a concept that's clearly distinct from the notion of a <code>term</code>. In technical terms they might be more like different Parsers:</p>\n<p>Your proof (a-priori a string of symbols in your text file) is parsed into one big term and there are different rules on how to parse this. <code>by</code>, <code>calc</code>, <code>conv</code>, etc. are all of these kind, for example <code>by</code> is defined as</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">byTactic</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Parser</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">leading_parser</span><span class=\"o\">:</span><span class=\"n\">leadPrec</span>\n<span class=\"w\">  </span><span class=\"n\">ppAllowUngrouped</span><span class=\"w\"> </span><span class=\"bp\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"s2\">\"by \"</span><span class=\"w\"> </span><span class=\"bp\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">Tactic</span><span class=\"bp\">.</span><span class=\"n\">tacticSeqIndentGt</span>\n</code></pre></div>\n<p>which essentially says 'after you see the string \"by \" you should parse the stuff afterwards as indented tactic sequence'.<br>\nand creating this tactic sequence is what we call \"Tactic mode\".</p>\n<p>Or <code>calc</code> is defined this way:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">syntax</span><span class=\"w\"> </span><span class=\"n\">calcStep</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">ppIndent</span><span class=\"o\">(</span><span class=\"n\">colGe</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"w\"> </span><span class=\"s2\">\" := \"</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"o\">)</span>\n<span class=\"kn\">syntax</span><span class=\"w\"> </span><span class=\"n\">calcSteps</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">ppLine</span><span class=\"w\"> </span><span class=\"n\">withPosition</span><span class=\"o\">(</span><span class=\"n\">calcFirstStep</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">withPosition</span><span class=\"o\">((</span><span class=\"n\">ppLine</span><span class=\"w\"> </span><span class=\"n\">linebreak</span><span class=\"w\"> </span><span class=\"n\">calcStep</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"kn\">syntax</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">calc</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"s2\">\"calc\"</span><span class=\"w\"> </span><span class=\"n\">calcSteps</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">term</span>\n</code></pre></div>\n<p>So <code>calc</code> is followed by a <code>calcSteps</code> sequence and each of these steps is of the form <code>term \" := \" term</code>. So \"calc mode\" is somehow being inside the constructing of such a calc-step sequence.</p>\n<p>(Lean then elaborates these terms into Expressions, where it can also do stuff like having holes (aka open goals) and checking types which it then uses to feedback you the interactive stuff you see in the infoview)</p>",
        "id": 443896654,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1718069657
    },
    {
        "content": "<p>thanks Jon - the insight that these keywords trigger different parsing is helpful</p>",
        "id": 443977689,
        "sender_full_name": "rzeta0",
        "timestamp": 1718105228
    }
]