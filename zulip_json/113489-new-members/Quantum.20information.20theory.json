[
    {
        "content": "<p>Hi,</p>\n<p>I am a postdoctoral researcher on quantum information and I am new to Lean. I am trying to learn the basics (starting from the Natural Numbers Game, for example). I find it really hard to keep myself going on this without a goal, so I was thinking of taking the book by Nielsen and Chuang and (very) slowly formalize each chapter as a goalpost.</p>\n<p>I did a bit of search and I found that formalization of quantum information/quantum computing is somewhat limited. That said, this is probably me missing important works from very brief searches. That said, I know formalization is highly non-trivial task and I would like to better understand if (1) this is already an ongoing active project by a sub-community, and/or (2) whether this is an interesting sub-field to formalize. Given life's limitations I want to be more informed about whether it makes sense for me to be part of this effort before committing. </p>\n<p>I would very much appreciate any input/concern/question/recommendations/contacts. Thanks!</p>",
        "id": 425693728,
        "sender_full_name": "Erickson Tjoa",
        "timestamp": 1709996739
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 425937425,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1710171575
    },
    {
        "content": "<p>Hi and welcome!</p>\n<p>My main field of research is also quantum information, and I think it's definitely a field that would benefit from formalization -- that's why I'm here! (The ongoing saga of the generalized quantum Stein's lemma should be enough to convince anyone...) For the moment, there's nothing really specific to quantum information theory in mathlib, but you've arrived at a very interesting time. Right now, we have the basics of Hilbert spaces, and C*-algebra theory is advancing at a very rapid pace. Very recently, <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span>  has PRed the <a href=\"https://en.wikipedia.org/wiki/Continuous_functional_calculus\">continuous functional calculus</a>, which allows us to apply functions to normal operators. (For the finite-dimensional case, this could have been done a bit faster via the spectral decomposition, but in mathlib we tend to aim directly for high levels of generality to avoid having to redo the work later.) This will open up a lot of very interesting avenues; I think very soon we'll be able to define CP maps, Schatten norms, fidelity, and so on.</p>\n<p>Also, this might sound a bit counter-intuitive, but if one wants to start formalizing the results from a particular book, I think something like \"Matrix Analysis\" or \"Positive Definite Matrices\" by Rajendra Bhatia might be a better choice than Nielsen and Chuang, at least if the goal is to contribute to mathlib. Nielsen and Chuang is a great book to starting learning about quantum information, but it contains a lot of concrete examples, special cases, etc, that are not necessarily the best choice of material to formalize, whereas the Bhatia books are full of theorems we want to have and that would be relevant for formalizing quantum information papers down the road.</p>\n<p>If you're interested in representation theory, this could be another area where there's a lot of work to be done. For instance, formalizing Young tableaux could be a nice first project to work on. In any case, I'd be happy to discuss this further!</p>",
        "id": 425996031,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1710185933
    },
    {
        "content": "<p>Young tableaux are already in mathlib</p>",
        "id": 426004411,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710189393
    },
    {
        "content": "<p>Hi Frédéric,</p>\n<p>Thanks for your response, that's really helpful and insightful! Your suggestions about not going through Nielsen/Chuang makes a lot of sense, and maybe I should flesh out in more detail what I have in mind given what you said above. Most importantly I am glad that the progress is much more than I expected. </p>\n<p>A disclaimer first is that I am in no capacity a mathematician and I don't prove theorems in my daily work or PhD, although I have benefitted from some (though limited) amount of rigorous background in quantum information (I guess at the level of Watrous and Wolf's lecture notes) along the way. That said, I was interested in this program partly because, indeed, of the quantum Stein's lemma (I met/know some of the authors involved in the saga). My PhD was closer to physics involving quantum field theory, and that's where I learnt more about C* and von Neumann algebras (the whole stuff about algebra of observables and classification of factors, for example). Right now I am working in quantum many-body and quantum information theory, where to my pleasant surprise some of these things do crop up. In any case, all the terminology you mentioned above (CP maps, Schatten p-norms, fidelity, C* algebras) are familiar to me to some extent, so I guess that's good news.</p>\n<p>Actually your suggestion is very nice, since Bhatia has a lot of things one can really use (majorization, matrix inequalities) and I would love to see the strong subadditivity theorem being formalized properly. This would hopefully bring in convex stuffs into mathlib one day (if it is not already started). As for representation theory, that is of course also very nice since I came from QFT where representations of Lorentz group are crucial, and in my current group where a lot of work is done about many-body physics, this also matters when it comes to symmetry-protected phases.</p>\n<p>Let me know if I should pm you instead of continuing this thread if this is more convenient. Right now, perhaps I could use some suggestions about what would be nice to start with (while I learn the basics of Lean). I can probably only spare my evenings to work on this but better than zero, probably. I guess the ones you mentioned above are:</p>\n<ol>\n<li>Matrix analysis (Bhatia/Petz-Hiai kind)</li>\n<li>C* algebra (which part of C* is this? Is the focus on von Neumann algebras or or something else?)</li>\n<li>Continuous functional calculus (how much has it started?), towards CP maps etc.</li>\n<li>Representation theory (finite? Lie group?)</li>\n<li>Anything else?</li>\n</ol>\n<p>Actually, since I am new, I was wondering if there is a rough estimate/intuition about what would constitute good \"first project\"? It looks like the community is ready to even formalize Fermat's Last Theorem (FLT), but I am guessing the \"hardness of the subject\" is less of a problem than the \"hardness of formalizing in Lean\" (whatever that means).</p>",
        "id": 426004800,
        "sender_full_name": "Erickson Tjoa",
        "timestamp": 1710189580
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Quantum.20information.20theory/near/426004411\">said</a>:</p>\n<blockquote>\n<p>Young tableaux are already in mathlib</p>\n</blockquote>\n<p>Nice, I had missed that! Before I suggest anything else in that direction, Schur-Weyl duality is not yet in mathlib, is it? :-)</p>",
        "id": 426081911,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1710234663
    },
    {
        "content": "<p>Don't think so!</p>",
        "id": 426082093,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710234725
    },
    {
        "content": "<p>For C*-algebras, so far the focus has been on getting the continuous function calculus to work, since this was a major bottleneck; we have the definition of von Neumann algebras (see <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=VonNeumannAlgebra#doc\">docs#VonNeumannAlgebra</a>), but very little else. For representation theory, you can have a look at what we have so far by poking around <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Representation#doc\">docs#Representation</a> in the docs.</p>\n<p>For a first project, as you can imagine there's a big difference between a good first project for one person and a big multiyear project for a team with funding :-) My guess is that some simple representation theory would be a good place to start. To bounce back on my earlier suggestion about Young tableaux, it looks like Young diagrams (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=YoungDiagram#doc\">docs#YoungDiagram</a>) and semistandard Young tableaux (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Ssyt#doc\">docs#Ssyt</a>) are there, but not standard Young tableaux -- that could be a good start by itself. This can later be continued by working towards the connection to irreps of the symmetric group, Schur-Weyl duality, etc. Working out irreps of you favorite group is likely to be a decent project also. Once we get a good API for the continuous functional calculus with operator square roots and so on (which I expect will be very soon), there should be good first projects opening up in more \"standard\" quantum information material.</p>\n<p>Also, I'm happy to keep the discussion going here, there are not so many people interested specifically in quantum information here yet, but there is fairly broad interest in pretty much all of the relevant areas of math.</p>",
        "id": 426089780,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1710237643
    },
    {
        "content": "<p>Regarding representation theory: I am slightly concerned by the following issue. The representation theory of finite groups, even up to orthonormality of characters, is being developed via objects in the category <code>FdRep</code>. This seems like quite a lot of pain away from, for example, a homomorphism <code>G -&gt;* \\C</code>.</p>",
        "id": 426093212,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1710238837
    },
    {
        "content": "<p>Indeed it would be nice to have a more down-to-earth development of this material.</p>",
        "id": 426097131,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1710240304
    },
    {
        "content": "<p>Another good first project might be to define creation, annihilitation, position and momentum operators. We have the underlying Hilbert space, but I don't think we have those yet.</p>",
        "id": 426100762,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1710241551
    },
    {
        "content": "<p>Surely <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Ssyt#doc\">docs#Ssyt</a> should be renamed to <code>SSYT</code>.</p>",
        "id": 426108543,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1710244584
    },
    {
        "content": "<p>(or even something more informative)</p>",
        "id": 426108614,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1710244610
    },
    {
        "content": "<p>So do I understand correctly that for matrix analysis it is actually better to wait for continuous functional calculus to happen?</p>",
        "id": 426120643,
        "sender_full_name": "Erickson Tjoa",
        "timestamp": 1710248771
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/113489-new-members/topic/Quantum.20information.20theory/near/426108543\">said</a>:</p>\n<blockquote>\n<p>Surely <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Ssyt#doc\">docs#Ssyt</a> should be renamed to <code>SSYT</code>.</p>\n</blockquote>\n<p>Yes, like <code>SemistandardYoungTableau</code>!</p>",
        "id": 426134633,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1710252898
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699417\">Erickson Tjoa</span> <a href=\"#narrow/stream/113489-new-members/topic/Quantum.20information.20theory/near/426120643\">said</a>:</p>\n<blockquote>\n<p>So do I understand correctly that for matrix analysis it is actually better to wait for continuous functional calculus to happen?</p>\n</blockquote>\n<p>Well, we're pretty much there already! The unital CFC is there, but at this point I guess we might as well define the square root using the non-unital CFC which is almost there now.</p>",
        "id": 426135504,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1710253145
    },
    {
        "content": "<p>hello, I would like very much to see quantum physics in mathlib, too!<br>\nIs there any ongoing project on the spectral decomposition (infinite-dimensional)?<br>\nI see that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=rieszContentAux#doc\">docs#rieszContentAux</a> is under development (one would have to show that this gives a measure). Is anyone working on that?</p>",
        "id": 426180328,
        "sender_full_name": "Yoh Tanimoto",
        "timestamp": 1710265155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span> <a href=\"https://github.com/leanprover-community/mathlib4/pull/11328\">#11328</a></p>",
        "id": 426183997,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1710266363
    },
    {
        "content": "<p>The continuous functional calculus for unital C⋆-algebras is now available (with all the bells and whistles as of about an hour ago, so you need a <em>really</em> fresh Mathlib for it). You can do things like existence and uniqueness of positive semidefinite square roots:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">PartialOrder</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NormedRing</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">StarOrderedRing</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">NormedAlgebra</span> <span class=\"n\">ℂ</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">CstarRing</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">CompleteSpace</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">StarModule</span> <span class=\"n\">ℂ</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">NNReal</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">cfc_sqrt</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"n\">cfc</span> <span class=\"n\">a</span> <span class=\"n\">sqrt</span>\n\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">fun_prop</span><span class=\"o\">]</span> <span class=\"n\">continuous_sqrt</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">sq_cfc_sqrt</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">cfc_sqrt</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">cfc_sqrt</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">cfc_pow</span> <span class=\"n\">a</span> <span class=\"n\">sqrt</span> <span class=\"mi\">2</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">sq_sqrt</span><span class=\"o\">,</span> <span class=\"n\">cfc_id'</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span> <span class=\"n\">a</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">cfc_sqrt_unique</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">cfc_sqrt</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">cfc_comp_pow</span> <span class=\"n\">b</span> <span class=\"mi\">2</span> <span class=\"n\">sqrt</span><span class=\"o\">,</span> <span class=\"n\">sqrt_sq</span><span class=\"o\">,</span> <span class=\"n\">cfc_id'</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span> <span class=\"n\">b</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">congr_arg</span> <span class=\"o\">(</span><span class=\"n\">cfc</span> <span class=\"bp\">·</span> <span class=\"n\">sqrt</span><span class=\"o\">)</span> <span class=\"n\">hab</span>\n</code></pre></div>\n<p>I hope that within the next few weeks we'll have the non-unital version up and running.</p>",
        "id": 426213533,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1710277985
    },
    {
        "content": "<p>You can activate this for matrices <em>today</em> by adding</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">local</span> <span class=\"kd\">instance</span><span class=\"o\">]</span> <span class=\"n\">Matrix.instL2OpNormedRing</span> <span class=\"n\">Matrix.instL2OpNormedAlgebra</span> <span class=\"n\">Matrix.instCstarRing</span>\n</code></pre></div>",
        "id": 426213546,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1710277992
    }
]