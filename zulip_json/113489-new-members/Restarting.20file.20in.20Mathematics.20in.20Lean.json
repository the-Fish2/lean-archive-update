[
    {
        "content": "<p>Hi all, I'm new here. I am just starting to work through the Mathematics in Lean book using VS Code. When I close VS code, I have to restart the file, and so various libraries need to get rebuilt. I am surprised at this because I haven't pulled anything from the main branch that I would expect to change and need to get rebuilt. (I'm experienced using Git, but not Lean or VS Code.) Is there something I'm doing wrong that I can do so that I don't have to rebuild Mathlib every time I close VS code?</p>\n<p>(Sorry if this is the wrong place to post this, but if it is, would you please redirect me to the correct place? Thanks!)</p>",
        "id": 436951837,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714766907
    },
    {
        "content": "<p>Have you used <code>lake exe cache get</code>?</p>",
        "id": 436954345,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714768154
    },
    {
        "content": "<p>I have not. I'll try that. What does it do?</p>",
        "id": 436954545,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714768250
    },
    {
        "content": "<p>As you have noticed, Lean files need <em>building</em> in order to be imported. We don't want everyone to have to build everything, so the Lean FRO is kindly paying a server storing the result of the builds of all major Lean libraries. <code>lake exe cache get</code> fetches those results.</p>",
        "id": 436954761,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714768365
    },
    {
        "content": "<p>Ah I see. Thanks Lean FRO!  I see that I need to run <code>lake exe cache get</code> in the same directory as my local copy of Mathematics in Lean. Should I take this to mean that if I want to use Lean in another project, then I would also need to run <code>lake exe cache get</code> in the directory of the project I want to work on?</p>",
        "id": 436955071,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714768555
    },
    {
        "content": "<p>Yes, and you will also need to run it every time you change the version of one of the major Lean libraries you're using</p>",
        "id": 436955174,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714768600
    },
    {
        "content": "<p>Got it that makes sense. I have run <code>lake exe cache get</code> and restarted VS Code, but I am still getting a message that the libraries are out of date and need to be rebuilt.</p>",
        "id": 436955452,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714768744
    },
    {
        "content": "<p>Try <code>Ctrl + Shift + X</code>, let it run for 30 seconds and see</p>",
        "id": 436955935,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714768978
    },
    {
        "content": "<p>Thanks for the suggestion. Nothing seems to have changed. I do see </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1037</span><span class=\"bp\">/</span><span class=\"mi\">1963</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Star.SelfAdjoint</span>\n</code></pre></div>\n<p>in the Lean Infoview window</p>",
        "id": 436956446,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714769224
    },
    {
        "content": "<p>Did you already get things rebuilt before posting here for help?</p>",
        "id": 436956551,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714769282
    },
    {
        "content": "<p>I had previously built them successfully, yesterday or the day before, but not yet today</p>",
        "id": 436956727,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714769360
    },
    {
        "content": "<p>I guess I was hoping that I was just doing something dumb and I could add some configuration option when bulding in order to avoid having to build again. If I understand, it seems like using the lake cache is supposed to accomplish that goal?</p>",
        "id": 436957149,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714769549
    },
    {
        "content": "<p>What environment are you in? Your computer? Gitpod? Codespaces?</p>",
        "id": 436957241,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714769592
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"715416\">Trevor Karn</span> <a href=\"#narrow/stream/113489-new-members/topic/Restarting.20file.20in.20Mathematics.20in.20Lean/near/436956446\">said</a>:</p>\n<blockquote>\n<p>Thanks for the suggestion. Nothing seems to have changed. I do see </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1037</span><span class=\"bp\">/</span><span class=\"mi\">1963</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Star.SelfAdjoint</span>\n</code></pre></div>\n<p>in the Lean Infoview window</p>\n</blockquote>\n<p>Is that a slow or a fast progress counter? I.e. seconds or hours?</p>",
        "id": 436957271,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714769604
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Restarting.20file.20in.20Mathematics.20in.20Lean/near/436957241\">said</a>:</p>\n<blockquote>\n<p>What environment are you in? Your computer? Gitpod? Codespaces?</p>\n</blockquote>\n<p>Computer</p>",
        "id": 436957981,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714769938
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113489-new-members/topic/Restarting.20file.20in.20Mathematics.20in.20Lean/near/436957271\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"715416\">Trevor Karn</span> <a href=\"#narrow/stream/113489-new-members/topic/Restarting.20file.20in.20Mathematics.20in.20Lean/near/436956446\">said</a>:</p>\n<blockquote>\n<p>Thanks for the suggestion. Nothing seems to have changed. I do see </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1037</span><span class=\"bp\">/</span><span class=\"mi\">1963</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Star.SelfAdjoint</span>\n</code></pre></div>\n<p>in the Lean Infoview window</p>\n</blockquote>\n<p>Is that a slow or a fast progress counter? I.e. seconds or hours?</p>\n</blockquote>\n<p>It seems to be slow. At this point several minutes, not yet an hour</p>",
        "id": 436958169,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714770012
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Restarting.20file.20in.20Mathematics.20in.20Lean/near/436957241\">said</a>:</p>\n<blockquote>\n<p>What environment are you in? Your computer? Gitpod? Codespaces?</p>\n</blockquote>\n<p>I haven't used Gitpod or Codespaces before. Do you prefer one over the other?</p>",
        "id": 436958499,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714770152
    },
    {
        "content": "<p>I highly rate gitpod, especially because they give 250h/month free if you tell them you contribute to free software (which this community is)</p>",
        "id": 436958806,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714770320
    },
    {
        "content": "<p>I haven't tried codespaces</p>",
        "id": 436958824,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714770332
    },
    {
        "content": "<p>It turns out that it takes &lt; 10 min to get Mathematics in Lean running on VS code in Gitpod. This seems like a good option when it is taking longer than that to build locally on my machine.</p>",
        "id": 436959954,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714770983
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"715416\">Trevor Karn</span> <a href=\"#narrow/stream/113489-new-members/topic/Restarting.20file.20in.20Mathematics.20in.20Lean/near/436958169\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113489-new-members/topic/Restarting.20file.20in.20Mathematics.20in.20Lean/near/436957271\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"715416\">Trevor Karn</span> <a href=\"#narrow/stream/113489-new-members/topic/Restarting.20file.20in.20Mathematics.20in.20Lean/near/436956446\">said</a>:</p>\n<blockquote>\n<p>Thanks for the suggestion. Nothing seems to have changed. I do see </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1037</span><span class=\"bp\">/</span><span class=\"mi\">1963</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Star.SelfAdjoint</span>\n</code></pre></div>\n<p>in the Lean Infoview window</p>\n</blockquote>\n<p>Is that a slow or a fast progress counter? I.e. seconds or hours?</p>\n</blockquote>\n<p>It seems to be slow. At this point several minutes, not yet an hour</p>\n</blockquote>\n<p>It did take several hours on my previous build.</p>",
        "id": 436960602,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714771337
    },
    {
        "content": "<p>You didn't post the cache output on the cmdline, did it say it was 100% successful?</p>",
        "id": 436960972,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714771507
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113489-new-members/topic/Restarting.20file.20in.20Mathematics.20in.20Lean/near/436960972\">said</a>:</p>\n<blockquote>\n<p>You didn't post the cache output on the cmdline, did it say it was 100% successful?</p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">base</span><span class=\"o\">)</span> <span class=\"n\">trevorkarn</span><span class=\"bp\">@</span><span class=\"n\">MacBook</span><span class=\"bp\">-</span><span class=\"n\">Air</span><span class=\"bp\">-</span><span class=\"mi\">196</span> <span class=\"n\">mathematics_in_lean</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">recommended</span> <span class=\"bp\">`</span><span class=\"n\">curl</span><span class=\"bp\">`</span> <span class=\"n\">version</span> <span class=\"bp\">≥</span><span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">70</span><span class=\"bp\">.</span> <span class=\"n\">Found</span> <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">68</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span> <span class=\"n\">Can't</span> <span class=\"n\">use</span> <span class=\"bp\">`</span><span class=\"c1\">--parallel`.</span>\n<span class=\"n\">No</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">download</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">4198</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"mi\">9422</span> <span class=\"n\">ms</span>\n</code></pre></div>\n<p>This is what I got</p>",
        "id": 436961245,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714771653
    },
    {
        "content": "<p>I didn't see the phrase \"successful\" in there, but I am interpreting it to be good other than my outdated curl. Does that seem right?</p>",
        "id": 436961823,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714771906
    },
    {
        "content": "<p>It does seem good, yeah</p>",
        "id": 436962815,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714772383
    },
    {
        "content": "<p>Thanks everyone for all of your help with this. I decided to try starting over from scratch, following the directions here <a href=\"https://leanprover-community.github.io/install/project.html#working-on-an-existing-project\">https://leanprover-community.github.io/install/project.html#working-on-an-existing-project</a> diligently. When I get to the lake cache step I get the following output</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">trevorkarn</span><span class=\"bp\">@</span><span class=\"n\">MacBook</span><span class=\"bp\">-</span><span class=\"n\">Air</span><span class=\"bp\">-</span><span class=\"mi\">196</span> <span class=\"n\">mathematics_in_lean</span> <span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span> <span class=\"n\">to</span> <span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">std</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">std4</span> <span class=\"n\">to</span> <span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Qq</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">quote4</span> <span class=\"n\">to</span> <span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">aesop</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">proofwidgets</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets4</span> <span class=\"n\">to</span> <span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Cli</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli</span> <span class=\"n\">to</span> <span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">importGraph</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"kn\">import</span><span class=\"bp\">-</span><span class=\"n\">graph.git</span> <span class=\"n\">to</span> <span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">importGraph'</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">1</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">some</span> <span class=\"n\">files</span> <span class=\"n\">were</span> <span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">cache.</span>\n<span class=\"n\">This</span> <span class=\"n\">usually</span> <span class=\"n\">means</span> <span class=\"n\">that</span> <span class=\"n\">your</span> <span class=\"kn\">local</span> <span class=\"n\">checkout</span> <span class=\"n\">of</span> <span class=\"n\">mathlib4</span> <span class=\"n\">has</span> <span class=\"n\">diverged</span> <span class=\"k\">from</span> <span class=\"n\">upstream.</span>\n<span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">push</span> <span class=\"n\">your</span> <span class=\"n\">commits</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">branch</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">mathlib4</span> <span class=\"n\">repository</span><span class=\"o\">,</span> <span class=\"n\">CI</span> <span class=\"n\">will</span> <span class=\"n\">build</span> <span class=\"n\">the</span> <span class=\"n\">oleans</span> <span class=\"n\">and</span> <span class=\"n\">they</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">available</span> <span class=\"n\">later.</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">4449</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"mi\">74247</span> <span class=\"n\">ms</span>\n</code></pre></div>\n<p>Does anyone know why the local checkout of <code>mathlib4</code> would have diverged from upstream, especially when it looks like the upstream was just cloned?</p>",
        "id": 437150376,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714931325
    },
    {
        "content": "<p>And, can I ask, is there an easy way to tell which file is the one that download failed on?</p>",
        "id": 437150699,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714931668
    },
    {
        "content": "<p>When I opened VS Code the first time, it seemed to build the missing file (took ~3 min), and now the \"rebuilding\" step takes a very short amount of time when I restart VS Code.</p>",
        "id": 437151514,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714932439
    },
    {
        "content": "<p>Can you run <code>lean --version</code> and paste the output here?</p>",
        "id": 437154250,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714934988
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">trevorkarn</span><span class=\"bp\">@</span><span class=\"n\">MacBook</span><span class=\"bp\">-</span><span class=\"n\">Air</span><span class=\"bp\">-</span><span class=\"mi\">196</span> <span class=\"n\">mathematics_in_lean</span> <span class=\"bp\">%</span> <span class=\"n\">lean</span> <span class=\"c1\">--version</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span><span class=\"o\">,</span> <span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">apple</span><span class=\"bp\">-</span><span class=\"n\">darwin22.6.0</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"n\">dcccfb73cb24</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 437154312,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714935032
    },
    {
        "content": "<p>That's good. Unfortunately that means I still don't have a clue</p>",
        "id": 437154482,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714935227
    },
    {
        "content": "<p>Even worse, I'm now hitting it on a new clone of flt-regular</p>",
        "id": 437155784,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714936407
    },
    {
        "content": "<p>the easy way to find out which file is missing is to run <code>lake build</code></p>",
        "id": 437155919,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714936502
    },
    {
        "content": "<p>...although with the new lake output issue (<a href=\"https://github.com/leanprover/lean4/pull/4069\">lean4#4069</a>) it may not be so easy anymore</p>",
        "id": 437155945,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714936531
    },
    {
        "content": "<p>Maybe <code>Mathlib.NumberTheory.NumberField.Basic</code></p>",
        "id": 437156116,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714936631
    },
    {
        "content": "<p>At least, that's the one that stays on screen for a while</p>",
        "id": 437156135,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714936670
    },
    {
        "content": "<p>When I run lake build it seems to build a bunch of Math in Lean files, not any Mathlib files.  It is a sort of long output, should I post it here?</p>",
        "id": 437156851,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714937310
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113489-new-members/topic/Restarting.20file.20in.20Mathematics.20in.20Lean/near/437156135\">said</a>:</p>\n<blockquote>\n<p>At least, that's the one that stays on screen for a while</p>\n</blockquote>\n<p>Can you say more what you mean by this? On which screen do you see it?</p>",
        "id": 437157534,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714937956
    },
    {
        "content": "<p>I opened a new file and put <code>import Mathlib</code> in it. Then ctrl+shift+x to tell vs code that it's ok to rebuild the missing dependencies. Then the infoview flickered through [X/X] Building Mathlib....</p>",
        "id": 437157692,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714938118
    },
    {
        "content": "<p>And that was the first module name that remained fixed for long enough to see it</p>",
        "id": 437157752,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714938138
    },
    {
        "content": "<p>Gotcha! When I do the same it seems like <code>[4450/4451] Building Mathlib.Util.Time</code> sticks around for the longest</p>",
        "id": 437157974,
        "sender_full_name": "Trevor Karn",
        "timestamp": 1714938317
    }
]