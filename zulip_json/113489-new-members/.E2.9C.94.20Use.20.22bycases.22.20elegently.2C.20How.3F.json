[
    {
        "content": "<p>Check this lemma , If I continue writing like this , it would be tons of layers. Any other ways to write \"by_cases\"  from top to bottom ? Avoiding so many layers ?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">lemma1</span>\n  <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">RubiksSuperType</span><span class=\"o\">,</span> <span class=\"c1\">-- RubiksSuperType即手写的H。</span>\n  <span class=\"n\">Finset.sum</span> <span class=\"o\">({</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">}:</span><span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">8</span><span class=\"o\">))</span> <span class=\"n\">g.fst.orient</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"c1\">--角块方形数求和后，模3为0。</span>\n  <span class=\"bp\">→</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">h</span> <span class=\"bp\">∈</span> <span class=\"n\">RubiksGroup</span> <span class=\"o\">,</span>\n  <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">*</span> <span class=\"n\">h</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fst.orient</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">intro</span> <span class=\"n\">g</span> <span class=\"n\">hsum0</span><span class=\"bp\">;</span>\n    <span class=\"k\">let</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">Solved</span><span class=\"bp\">;</span>\n    <span class=\"k\">let</span> <span class=\"n\">UFR_index</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"bp\">;</span>\n    <span class=\"n\">by_cases</span> <span class=\"o\">(</span><span class=\"n\">g.1.orient</span> <span class=\"n\">UFR_index</span><span class=\"o\">)</span><span class=\"bp\">=</span><span class=\"mi\">0</span>\n    <span class=\"o\">{</span>\n      <span class=\"k\">let</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">h</span><span class=\"bp\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">by_cases</span> <span class=\"o\">(</span><span class=\"n\">g.1.orient</span> <span class=\"n\">UFR_index</span><span class=\"o\">)</span><span class=\"bp\">=</span><span class=\"mi\">1</span>\n      <span class=\"o\">{</span> <span class=\"k\">let</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"bp\">*</span> <span class=\"n\">G1Perm</span><span class=\"bp\">;</span>\n        <span class=\"o\">}</span>\n      <span class=\"o\">{</span> <span class=\"k\">let</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"bp\">*</span> <span class=\"n\">G1Perm</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">;</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 424827965,
        "sender_full_name": "chenjulang",
        "timestamp": 1709630976
    },
    {
        "content": "<p>What is the type of <code>g.1.orient UFR_index</code>? If it is <code>Fin 8</code> then you could just do <code>rcases</code> on <code>foo g.1.orient UFR_index</code> where <code>foo (x : Fin 8) : x = 0 \\or x = 1 \\or ... \\or x 7</code>.</p>",
        "id": 424828391,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709631133
    },
    {
        "content": "<p>Fin 3<br>\n<a href=\"/user_uploads/3121/Xg8biHtzy1Cc3scQwGjhJPMa/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Xg8biHtzy1Cc3scQwGjhJPMa/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/Xg8biHtzy1Cc3scQwGjhJPMa/image.png\"></a></div>",
        "id": 424828456,
        "sender_full_name": "chenjulang",
        "timestamp": 1709631167
    },
    {
        "content": "<p>Or maybe even <code>fin_cases</code>.</p>",
        "id": 424828733,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709631270
    },
    {
        "content": "<p>I mean , in the \"cases\" , there will be so many other \"cases\" for Categorical discussion</p>",
        "id": 424828751,
        "sender_full_name": "chenjulang",
        "timestamp": 1709631278
    },
    {
        "content": "<p>something like this , i predict : <br>\n<a href=\"/user_uploads/3121/UfqAVZfz-VdZpXK-jdE8-0YA/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/UfqAVZfz-VdZpXK-jdE8-0YA/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/UfqAVZfz-VdZpXK-jdE8-0YA/image.png\"></a></div>",
        "id": 424828869,
        "sender_full_name": "chenjulang",
        "timestamp": 1709631335
    },
    {
        "content": "<p>This won't look elegent , right ?</p>",
        "id": 424828962,
        "sender_full_name": "chenjulang",
        "timestamp": 1709631364
    },
    {
        "content": "<p>I was wondering how you guys deal with these kind of “Multiple classification discussions”</p>",
        "id": 424829117,
        "sender_full_name": "chenjulang",
        "timestamp": 1709631442
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 424834372,
        "sender_full_name": "Notification Bot",
        "timestamp": 1709633291
    }
]