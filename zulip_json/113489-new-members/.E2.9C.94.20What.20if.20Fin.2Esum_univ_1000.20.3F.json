[
    {
        "content": "<p>Check this solved question : <br>\n<a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20sum.20i.20in.20.7B0.2C1.2C2.7D.2C.20fn.20i.20.3D.20fn.200.20.2B.20fn.201.20.2B.20fn.202.20.3F\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/.E2.9C.94.20sum.20i.20in.20.7B0.2C1.2C2.7D.2C.20fn.20i.20.3D.20fn.200.20.2B.20fn.201.20.2B.20fn.202.20.3F</a></p>\n<p>What if the amount of sum is very big , like 1000 or more ?</p>",
        "id": 427006206,
        "sender_full_name": "chenjulang",
        "timestamp": 1710650995
    },
    {
        "content": "<p>certainly this is the wrong approach if you need n theorems for fin n</p>",
        "id": 427006494,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710651068
    },
    {
        "content": "<p>I think last time I looked into a similar problem I ended up rewriting the sum as a sum over <code>Fin.range</code> and then using the theorems <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.sum_fin_eq_sum_range#doc\">docs#Finset.sum_fin_eq_sum_range</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.sum_range_succ#doc\">docs#Finset.sum_range_succ</a></p>",
        "id": 427006827,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710651157
    },
    {
        "content": "<p>Thanks</p>",
        "id": 427006938,
        "sender_full_name": "chenjulang",
        "timestamp": 1710651187
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 427007029,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710651216
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=FinVec.sum_eq#doc\">docs#FinVec.sum_eq</a> works for the n=1000 case</p>",
        "id": 427068274,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710668363
    },
    {
        "content": "<p><code>norm_num</code> is meant to work here but it doesn't</p>",
        "id": 427494439,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1710771298
    },
    {
        "content": "<p>(always)</p>",
        "id": 427494536,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1710771319
    }
]