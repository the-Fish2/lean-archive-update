[
    {
        "content": "<p>Example spelling</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"o\">(</span><span class=\"n\">mut</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">mut</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 411245871,
        "sender_full_name": "Alok Singh",
        "timestamp": 1704395378
    },
    {
        "content": "<p>I <em>think</em> <code>let mut</code> is only allowed in <code>do</code> notation.</p>\n<p>In that case the following works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"n\">Id.run</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">mut</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">x</span>\n</code></pre></div>\n<p>Also see <a href=\"https://lean-lang.org/functional_programming_in_lean/monad-transformers/do.html?highlight=let%20mut#mutable-variables\">https://lean-lang.org/functional_programming_in_lean/monad-transformers/do.html?highlight=let%20mut#mutable-variables</a></p>",
        "id": 411246442,
        "sender_full_name": "Philipp",
        "timestamp": 1704395636
    },
    {
        "content": "<p>thanks!</p>",
        "id": 411690622,
        "sender_full_name": "Alok Singh",
        "timestamp": 1704702667
    }
]