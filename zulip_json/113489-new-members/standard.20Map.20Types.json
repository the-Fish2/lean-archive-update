[
    {
        "content": "<p>i was wondering if there is a built in type like Lean.AssocList where keys are unique. I know about HashMaps/RBMap, but those seem to more for performance optimizing.<br>\nif not would this be a sensible implementation?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">uniqueAssocList</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">BEq</span> <span class=\"n\">a</span><span class=\"o\">]:=</span>\n    <span class=\"o\">{</span><span class=\"n\">l</span><span class=\"o\">:</span> <span class=\"n\">Lean.AssocList</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">//</span> <span class=\"bp\">âˆ€</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">:</span><span class=\"n\">a</span><span class=\"o\">),</span> <span class=\"n\">l.contains</span> <span class=\"n\">k</span> <span class=\"bp\">-&gt;</span> <span class=\"bp\">!</span> <span class=\"o\">(</span><span class=\"n\">l.erase</span> <span class=\"n\">k</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">k</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 422987044,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1708683441
    },
    {
        "content": "<p>Hmm, I might have written it as something like \"length of filter (equal to k) \\le 1\", but probably this works too</p>",
        "id": 422991764,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708685173
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AList#doc\">docs#AList</a> IIRC</p>",
        "id": 422994327,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708686202
    }
]