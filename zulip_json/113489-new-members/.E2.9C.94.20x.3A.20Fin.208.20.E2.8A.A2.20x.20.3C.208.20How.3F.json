[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">8</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">8</span>\n</code></pre></div>",
        "id": 423900230,
        "sender_full_name": "chenjulang",
        "timestamp": 1709153265
    },
    {
        "content": "<p><span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 423900260,
        "sender_full_name": "chenjulang",
        "timestamp": 1709153281
    },
    {
        "content": "<p>Does <code>exact x.2</code> work?</p>",
        "id": 423900403,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709153328
    },
    {
        "content": "<p>No</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">x.isLt</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">8</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">8</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n</code></pre></div>",
        "id": 423900554,
        "sender_full_name": "chenjulang",
        "timestamp": 1709153391
    },
    {
        "content": "<p>So close</p>",
        "id": 423900767,
        "sender_full_name": "chenjulang",
        "timestamp": 1709153469
    },
    {
        "content": "<p>I'm not at a computer, but try <code>cases x; exact?</code>, maybe?</p>",
        "id": 423901364,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709153683
    },
    {
        "content": "<p>i will try</p>",
        "id": 423901447,
        "sender_full_name": "chenjulang",
        "timestamp": 1709153720
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/BeVfR9-ypc8IVq_8hik_Zdu9/image.png\">image.png</a><br>\n<code>exact?</code> could not close the goal. Try <code>apply?</code> to see partial suggestions.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/BeVfR9-ypc8IVq_8hik_Zdu9/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/BeVfR9-ypc8IVq_8hik_Zdu9/image.png\"></a></div>",
        "id": 423901518,
        "sender_full_name": "chenjulang",
        "timestamp": 1709153754
    },
    {
        "content": "<p>Neither does \"apply?\" works</p>",
        "id": 423901745,
        "sender_full_name": "chenjulang",
        "timestamp": 1709153831
    },
    {
        "content": "<p>what about <code>Fin.is_lt</code>?</p>",
        "id": 423902019,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1709153911
    },
    {
        "content": "<p>This may be unprovable if the &lt; is between two values of type <code>Fin 8</code>, and the literal <code>8</code> is wrapped around to 0?</p>",
        "id": 423902036,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1709153917
    },
    {
        "content": "<p>good point, it depends on the type of <code>8</code></p>",
        "id": 423902072,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1709153936
    },
    {
        "content": "<p>Did you want to write <code>x.val &lt; 8</code>?</p>",
        "id": 423902145,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1709153970
    },
    {
        "content": "<p>it's suspicious that <code>x</code> doesn't seem to be coerced</p>",
        "id": 423902198,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1709153999
    },
    {
        "content": "<p>This seems yet another situation where a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> would clear a lot of ambiguities...</p>",
        "id": 423902375,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709154057
    },
    {
        "content": "<p>yeah I'm pretty sure this is trying to do <code>(x : Fin 8) &lt; (8 : Fin 8)</code> and Joachim is right</p>",
        "id": 423902777,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1709154238
    },
    {
        "content": "<p>If that is the case, then you'd better have some contradiction among your assumptions...</p>",
        "id": 423903224,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709154424
    },
    {
        "content": "<p>In fact , i want to prove this sorry :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">hhh</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">):</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">8</span> <span class=\"bp\">↔</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">6</span> <span class=\"bp\">∨</span>  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">obtain</span> <span class=\"n\">_</span> <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">simp</span>\n            <span class=\"c1\">-- change 8 ≤ n + 8</span>\n            <span class=\"n\">exact</span> <span class=\"n\">le_add_self</span>\n            <span class=\"n\">done</span>\n          <span class=\"k\">have</span> <span class=\"n\">hhh1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">8</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">6</span> <span class=\"bp\">∨</span>  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 423903800,
        "sender_full_name": "chenjulang",
        "timestamp": 1709154677
    },
    {
        "content": "<p>try <code>fin_cases x</code></p>",
        "id": 423903962,
        "sender_full_name": "David Renshaw",
        "timestamp": 1709154752
    },
    {
        "content": "<p>That's why i want to prove this \"<br>\nx: Fin 8 ⊢ x &lt; 8\". I am confused too <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 423903963,
        "sender_full_name": "chenjulang",
        "timestamp": 1709154753
    },
    {
        "content": "<p>I'll try</p>",
        "id": 423904325,
        "sender_full_name": "chenjulang",
        "timestamp": 1709154933
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/-rEDr3X6iZj-ARkE5W1Sr0A3/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/-rEDr3X6iZj-ARkE5W1Sr0A3/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/-rEDr3X6iZj-ARkE5W1Sr0A3/image.png\"></a></div><p><span class=\"user-mention silent\" data-user-id=\"243791\">David Renshaw</span> <a href=\"#narrow/stream/113489-new-members/topic/x.3A.20Fin.208.20.E2.8A.A2.20x.20.3C.208.20How.3F/near/423903962\">said</a>:</p>\n<blockquote>\n<p>try <code>fin_cases x</code></p>\n</blockquote>\n<p>All the way to a very strange hint.</p>",
        "id": 423904552,
        "sender_full_name": "chenjulang",
        "timestamp": 1709155032
    },
    {
        "content": "<p>I wonder if perhaps there's an <a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a> problem here, where this <code>or</code> statement could have been avoided somehow</p>",
        "id": 423904735,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1709155110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"665035\">@chenjulang</span> if you're still having trouble, I think <code>fin_cases x &lt;;&gt; aesop</code> will do it</p>",
        "id": 423905232,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1709155338
    },
    {
        "content": "<p>I'll try</p>",
        "id": 423905492,
        "sender_full_name": "chenjulang",
        "timestamp": 1709155455
    },
    {
        "content": "<p>It doesn't seem to work, i'll leave alone this problem for now.</p>",
        "id": 423905799,
        "sender_full_name": "chenjulang",
        "timestamp": 1709155595
    },
    {
        "content": "<p>fair enough, though I'll note that this seems to work in the web UI:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">8</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">6</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span>\n  <span class=\"n\">fin_cases</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">aesop</span>\n</code></pre></div>",
        "id": 423905992,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1709155680
    },
    {
        "content": "<p>really?i will try</p>",
        "id": 423906545,
        "sender_full_name": "chenjulang",
        "timestamp": 1709155871
    },
    {
        "content": "<p>You are right, but my computer is dead...</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">deterministic</span><span class=\"o\">)</span> <span class=\"n\">timeout</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">aesop'</span><span class=\"o\">,</span> <span class=\"n\">maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">heartbeats</span> <span class=\"o\">(</span><span class=\"mi\">400000</span><span class=\"o\">)</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">reached</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">'</span><span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"bp\">&lt;</span><span class=\"n\">num</span><span class=\"bp\">&gt;'</span> <span class=\"n\">to</span> <span class=\"n\">set</span> <span class=\"n\">the</span> <span class=\"n\">limit</span><span class=\"o\">)</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/3121/tN_VwcPit28BvUnVBc95PReb/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/tN_VwcPit28BvUnVBc95PReb/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/tN_VwcPit28BvUnVBc95PReb/image.png\"></a></div>",
        "id": 423907092,
        "sender_full_name": "chenjulang",
        "timestamp": 1709156097
    },
    {
        "content": "<p>ah, I see</p>",
        "id": 423907367,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1709156222
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">deterministic</span><span class=\"o\">)</span> <span class=\"n\">timeout</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">whnf'</span><span class=\"o\">,</span> <span class=\"n\">maximum</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">heartbeats</span> <span class=\"o\">(</span><span class=\"mi\">800000</span><span class=\"o\">)</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">reached</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">'</span><span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"bp\">&lt;</span><span class=\"n\">num</span><span class=\"bp\">&gt;'</span> <span class=\"n\">to</span> <span class=\"n\">set</span> <span class=\"n\">the</span> <span class=\"n\">limit</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 423907398,
        "sender_full_name": "chenjulang",
        "timestamp": 1709156235
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 423907876,
        "sender_full_name": "Notification Bot",
        "timestamp": 1709156418
    }
]