[
    {
        "content": "<p>I have the following</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Finset.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Finset.Powerset</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">α</span>\n  <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">Multiset</span> <span class=\"o\">{</span> <span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"n\">x</span> <span class=\"bp\">⊆</span> <span class=\"n\">V</span> <span class=\"o\">}</span>\n  <span class=\"n\">double_cover</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">V</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">E.filter</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">e</span> <span class=\"bp\">↦</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">e.val</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">sizeOf</span> <span class=\"bp\">≥</span> <span class=\"mi\">2</span>\n</code></pre></div>\n<p>and I am getting the error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"kd\">instance</span>\n  <span class=\"n\">DecidablePred</span> <span class=\"k\">fun</span> <span class=\"n\">e</span> <span class=\"bp\">↦</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"bp\">↑</span><span class=\"n\">e</span>\n</code></pre></div>\n<p>Replacing <code>x ∈ e.val</code> with something trivial like <code>1 = 1</code> does not lead to the error. So I guess the former is not decidable? But it seems easy enough that there must be a way to do this and this is where I am stuck. Any help greatly appreciated.</p>",
        "id": 439242417,
        "sender_full_name": "Kevin Cheung",
        "timestamp": 1715958461
    },
    {
        "content": "<p>Probably easiest is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"n\">where</span>\n</code></pre></div>\n<p>because if you can check if elements are equal, you can check if an element is in a finite set</p>",
        "id": 439245527,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715959416
    },
    {
        "content": "<p>Thank you. That worked!</p>",
        "id": 439246414,
        "sender_full_name": "Kevin Cheung",
        "timestamp": 1715959693
    }
]