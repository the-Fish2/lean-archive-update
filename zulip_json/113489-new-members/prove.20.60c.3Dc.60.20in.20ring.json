[
    {
        "content": "<p>I was doing the exercises in Mathematics in Lean, and I was trying to prove the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">add_left_cancel</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">neg_add_cancel_left</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">add_assoc</span><span class=\"o\">,</span> <span class=\"n\">add_left_neg</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Everything worked except the rfl in the last. The error message was</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">tactic</span> <span class=\"bp\">'</span><span class=\"n\">rewrite'</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">pattern</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"n\">metavariable</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.3545</span>\n<span class=\"k\">from</span> <span class=\"n\">equation</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.3545</span> <span class=\"bp\">=</span> <span class=\"bp\">?</span><span class=\"n\">m.3545</span>\n<span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span>\n<span class=\"n\">inst</span><span class=\"bp\">✝</span> <span class=\"o\">:</span> <span class=\"n\">Ring</span> <span class=\"n\">R</span>\n<span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">R</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">c</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">c</span>\n</code></pre></div>\n<p>Changing rfl to refl didn't work either.</p>",
        "id": 434787364,
        "sender_full_name": "Hank",
        "timestamp": 1713801418
    },
    {
        "content": "<p>Try just removing it</p>",
        "id": 434790344,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713802162
    },
    {
        "content": "<p>It might help to look through the following example and try to understand what is happening. Note that <code>rewrite</code> is <code>rw</code>, but it does not try to close the goal with <code>rfl</code> after rewriting. Also, note that <code>rfl</code> is both a tactic and a term. In particular, the example can just be solved with the tactic <code>rfl</code> alone.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"n\">Eq.refl</span> <span class=\"c1\">-- Eq.refl.{u_1} {α : Sort u_1} (a : α) : a = a</span>\n<span class=\"k\">#check</span> <span class=\"n\">rfl</span>     <span class=\"c1\">-- rfl.{u} {α : Sort u} {a : α} : a = a</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"n\">Eq.refl</span> <span class=\"n\">c</span><span class=\"o\">]</span>\n  <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"n\">rfl</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">)]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 434793494,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1713803039
    },
    {
        "content": "<p>I don't think <code>rw [rfl]</code> is ever correct (in the sense that it's never useful and very likely to fail)</p>",
        "id": 434838110,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713817068
    },
    {
        "content": "<p>You can just remove the <code>rfl</code> in the <code>rw</code> tactic as <code>rw</code> does it for you.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">add_left_cancel</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">neg_add_cancel_left</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">add_assoc</span><span class=\"o\">,</span> <span class=\"n\">add_left_neg</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 434843313,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1713818955
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 435171806,
        "sender_full_name": "Hank",
        "timestamp": 1713959607
    }
]