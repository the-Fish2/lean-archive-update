[
    {
        "content": "<p>Hello, i wanna use the equality of two types two be able to treat a type a like a type b</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">fn</span> <span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">:</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n  <span class=\"n\">v</span>\n</code></pre></div>\n<p>is this possible? thanks</p>",
        "id": 420813932,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1707583185
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=cast#doc\">docs#cast</a> is that function</p>",
        "id": 420814319,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707583486
    },
    {
        "content": "<p>oh well thats quite intuitive !<br>\ndid not find that in the manual / functional programming book</p>",
        "id": 420815547,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1707584323
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"684702\">Simon Daniel</span> has marked this topic as resolved.</p>",
        "id": 420815558,
        "sender_full_name": "Notification Bot",
        "timestamp": 1707584329
    }
]