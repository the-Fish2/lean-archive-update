[
    {
        "content": "<p>I analyzed the use of \"zero-argument tactics\" in the Mathlib repo (excluding tests), focusing on those used to prove theorems or lemmas in one step, like this:</p>\n<p><code>theorem […] := by tactic</code><br>\n<code>lemma […] := by tactic</code></p>\n<p>While the method has obvious limitations (for example, missing tactics not on the same line as the theorem or lemma), it hopefully gives a rough idea of which tactics that are used in said situations in Mathlib:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\"></th>\n<th>Tactic</th>\n<th>Defined in</th>\n<th style=\"text-align: right;\">Used in # files</th>\n<th style=\"text-align: right;\"># uses</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">1.</td>\n<td><code>simp</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">164 files</td>\n<td style=\"text-align: right;\">385 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">2.</td>\n<td><code>rfl</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">9 files</td>\n<td style=\"text-align: right;\">13 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">3.</td>\n<td><code>aesop_cat</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">6 files</td>\n<td style=\"text-align: right;\">13 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">4.</td>\n<td><code>decide</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">5 files</td>\n<td style=\"text-align: right;\">29 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">5.</td>\n<td><code>aesop</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">4 files</td>\n<td style=\"text-align: right;\">6 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">6.</td>\n<td><code>tauto</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">3 files</td>\n<td style=\"text-align: right;\">4 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">7.</td>\n<td><code>ext</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">2 files</td>\n<td style=\"text-align: right;\">11 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">8.</td>\n<td><code>infer_instance</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">2 files</td>\n<td style=\"text-align: right;\">7 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">9.</td>\n<td><code>linarith</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">2 files</td>\n<td style=\"text-align: right;\">4 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">10.</td>\n<td><code>trivial</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">2 files</td>\n<td style=\"text-align: right;\">3 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">11.</td>\n<td><code>norm_cast</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">2 files</td>\n<td style=\"text-align: right;\">2 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">12.</td>\n<td><code>map_fun_tac</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">1 file</td>\n<td style=\"text-align: right;\">9 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">13.</td>\n<td><code>congr</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">1 file</td>\n<td style=\"text-align: right;\">1 use</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">14.</td>\n<td><code>constructor</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">1 file</td>\n<td style=\"text-align: right;\">1 use</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">15.</td>\n<td><code>measurability</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">1 file</td>\n<td style=\"text-align: right;\">1 use</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">16.</td>\n<td><code>positivity</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">1 file</td>\n<td style=\"text-align: right;\">1 use</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">17.</td>\n<td><code>transfer</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">1 file</td>\n<td style=\"text-align: right;\">1 use</td>\n</tr>\n</tbody>\n</table>\n<p>Any surprises?</p>\n<p>I was surprised to see <code>aesop_cat</code> being used more than <code>aesop</code>.</p>",
        "id": 419349760,
        "sender_full_name": "Isak Colboubrani",
        "timestamp": 1706828983
    },
    {
        "content": "<p>I was surprised that you only found 13 <code>:= by rfl</code> proofs. But actually since you're not capturing <code> := rfl</code> proofs that makes more sense, and in most of these 13 cases it would probably be good mathlib style to remove the <code>by</code>, too.</p>\n<p>You're probably getting quite a skewed picture if you're search is some regex ensitive to newlines, as the manual 100-char line breaks (and the style guide in general) will cause a lot of statements to be written on multiple lines...</p>",
        "id": 419410388,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1706862847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"385895\">@Jon Eugster</span> note that sometimes you <em>can't</em> replace <code>by rfl</code> with <code>rfl</code>. The tactic version is \"smarter\" in certain ways.</p>",
        "id": 419467410,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1706883847
    },
    {
        "content": "<p>That's of course absolutely true, my bad.</p>",
        "id": 419478309,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1706887222
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"385895\">@Jon Eugster</span> Indeed, your observation regarding the complications introduced by the 100-character line break is spot on. Thanks for notifying! I have subsequently developed an enhanced parser that addresses this specific problem. Here are the revised results:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\"></th>\n<th>Tactic</th>\n<th>Defined in</th>\n<th style=\"text-align: right;\"># uses</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">1.</td>\n<td><code>simp</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">600 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">2.</td>\n<td><code>rfl</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">87 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">3.</td>\n<td><code>aesop_cat</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">67 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">4.</td>\n<td><code>decide</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">30 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">5.</td>\n<td><code>aesop</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">18 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">6.</td>\n<td><code>linarith</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">11 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">7.</td>\n<td><code>ext</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">11 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">8.</td>\n<td><code>coherence</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">11 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">9.</td>\n<td><code>ring</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">9 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">10.</td>\n<td><code>map_fun_tac</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">9 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">11.</td>\n<td><code>witt_truncateFun_tac</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">7 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">12.</td>\n<td><code>norm_cast</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">7 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">13.</td>\n<td><code>infer_instance</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">7 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">14.</td>\n<td><code>simp_all</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">6 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">15.</td>\n<td><code>pgame_wf_tac</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">5 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">16.</td>\n<td><code>congr</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">5 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">17.</td>\n<td><code>tauto</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">5 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">18.</td>\n<td><code>simpa</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">4 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">19.</td>\n<td><code>trivial</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">3 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">20.</td>\n<td><code>bitwise_assoc_tac</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">3 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">21.</td>\n<td><code>positivity</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">2 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">22.</td>\n<td><code>mfld_set_tac</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">2 uses</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">23.</td>\n<td><code>continuity</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">1 use</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">24.</td>\n<td><code>constructor</code></td>\n<td>Lean</td>\n<td style=\"text-align: right;\">1 use</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">25.</td>\n<td><code>measurability</code></td>\n<td>Mathlib</td>\n<td style=\"text-align: right;\">1 use</td>\n</tr>\n</tbody>\n</table>",
        "id": 419610366,
        "sender_full_name": "Isak Colboubrani",
        "timestamp": 1706968158
    },
    {
        "content": "<p>This is kind of a weird sample, because often if you can prove a fact with one tactic application, that's a reason not to make it a stand-alone theorem at all.</p>\n<p>Of course there are exceptions, like if you're stating it to tag it as a simp or ext lemma.</p>",
        "id": 419631522,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1706985364
    },
    {
        "content": "<p>IMO, a more interesting study would be to analyse the no-argument tactics which occur as \"finishing\" tactics (closing a goal) anywhere in a mathlib proof.</p>",
        "id": 419631784,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1706985556
    },
    {
        "content": "<p>That will give you a much higher count than 9 for <code>ring</code>.</p>",
        "id": 419631954,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1706985661
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113489-new-members/topic/Zero-argument.20tactic.20usage.20in.20Mathlib/near/419631784\">said</a>:</p>\n<blockquote>\n<p>IMO, a more interesting study would be to analyse the no-argument tactics which occur as \"finishing\" tactics (closing a goal) anywhere in a mathlib proof.</p>\n</blockquote>\n<p>Thank you for the valuable feedback! I believe I can modify my parser to accommodate that extraction.</p>\n<p>To make sure I understand the proposed modification, I will demonstrate how my somewhat heuristic parser processes theorems of varying complexity.</p>\n<p>The numeration preceding each line of proof represents a tuple where the first number is a counter for each <code>:= by</code> block, and the second number counts the lines within such a \"block.\"</p>\n<p>In the following situation, <code>aesop_cat</code> would be acknowledged for its role, consistent with the logic in previous analyses?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Theorem</span><span class=\"o\">:</span> <span class=\"kd\">theorem</span> <span class=\"n\">NatTrans.mapHomologicalComplex_id</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ComplexShape</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">⥤</span> <span class=\"n\">W</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">F.Additive</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">NatTrans.mapHomologicalComplex</span> <span class=\"o\">(</span><span class=\"mi\">𝟙</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">𝟙</span> <span class=\"o\">(</span><span class=\"n\">F.mapHomologicalComplex</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>  <span class=\"n\">aesop_cat</span>\n</code></pre></div>\n<p>In the following situation is <code>simp</code> the tactic to be credited?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Theorem</span><span class=\"o\">:</span> <span class=\"kd\">theorem</span> <span class=\"n\">iSupLift_comp_inclusion</span> <span class=\"o\">{</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">K</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">iSupLift</span> <span class=\"n\">K</span> <span class=\"n\">dir</span> <span class=\"n\">f</span> <span class=\"n\">hf</span> <span class=\"n\">T</span> <span class=\"n\">hT</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">inclusion</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">i</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>  <span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">simp</span>\n</code></pre></div>\n<p>In the following situation is <code>rfl</code> the tactic to be credited?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Theorem</span><span class=\"o\">:</span> <span class=\"kd\">theorem</span> <span class=\"n\">symm_symm</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">A₁</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">A₂</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">e.symm.symm</span> <span class=\"bp\">=</span> <span class=\"n\">e</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">ext</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>In the following situation is <code>linarith</code> the tactic to be credited?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Theorem</span><span class=\"o\">:</span> <span class=\"kd\">theorem</span> <span class=\"n\">sum_Ico_Ico_comm</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Ico</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Ico</span> <span class=\"n\">i</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Ico</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">Finset.Ico</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"n\">j</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.sum_sigma'</span><span class=\"o\">,</span> <span class=\"n\">Finset.sum_sigma'</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">refine'</span> <span class=\"n\">sum_nbij'</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"o\">⟨</span><span class=\"n\">x.2</span><span class=\"o\">,</span> <span class=\"n\">x.1</span><span class=\"o\">⟩)</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"o\">⟨</span><span class=\"n\">x.2</span><span class=\"o\">,</span> <span class=\"n\">x.1</span><span class=\"o\">⟩)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"bp\">&lt;;&gt;</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Finset.mem_Ico</span><span class=\"o\">,</span> <span class=\"n\">Sigma.forall</span><span class=\"o\">,</span> <span class=\"n\">Finset.mem_sigma</span><span class=\"o\">]</span> <span class=\"bp\">&lt;;&gt;</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">rintro</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">⟨⟨</span><span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">h₂</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">h₃</span><span class=\"o\">,</span> <span class=\"n\">h₄</span><span class=\"o\">⟩⟩</span> <span class=\"bp\">&lt;;&gt;</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">refine'</span> <span class=\"o\">⟨⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩⟩</span> <span class=\"bp\">&lt;;&gt;</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">linarith</span>\n</code></pre></div>\n<p>In the following situation is <code>assumption</code> the tactic to be credited?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Theorem</span><span class=\"o\">:</span> <span class=\"kd\">theorem</span> <span class=\"n\">prod_add_prod_le'</span> <span class=\"o\">(</span><span class=\"n\">hi</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2i</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"n\">h</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hgf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">j</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">j</span> <span class=\"bp\">≠</span> <span class=\"n\">i</span> <span class=\"bp\">→</span> <span class=\"n\">g</span> <span class=\"n\">j</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hhf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">j</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">j</span> <span class=\"bp\">≠</span> <span class=\"n\">i</span> <span class=\"bp\">→</span> <span class=\"n\">h</span> <span class=\"n\">j</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">classical</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">prod_eq_mul_prod_diff_singleton</span> <span class=\"n\">hi</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">refine'</span> <span class=\"n\">le_trans</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">mul_le_mul_right'</span> <span class=\"n\">h2i</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">right_distrib</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">apply</span> <span class=\"n\">add_le_add</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">mul_le_mul_left'</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">prod_le_prod'</span> <span class=\"bp\">&lt;;&gt;</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"o\">]</span>             <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">and_imp</span><span class=\"o\">,</span> <span class=\"n\">mem_sdiff</span><span class=\"o\">,</span> <span class=\"n\">mem_singleton</span><span class=\"o\">]</span> <span class=\"bp\">&lt;;&gt;</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"o\">]</span>           <span class=\"n\">intros</span> <span class=\"bp\">&lt;;&gt;</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"n\">apply_assumption</span> <span class=\"bp\">&lt;;&gt;</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">9</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>In the following situation is <code>tauto</code> the tactic to be credited? Only for the <code>tauto</code> on the last line?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Theorem</span><span class=\"o\">:</span> <span class=\"kd\">theorem</span> <span class=\"n\">mem_range_mulIndicator</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"bp\">∈</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">mulIndicator</span> <span class=\"n\">s</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">r</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">s</span> <span class=\"bp\">≠</span> <span class=\"n\">univ</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"bp\">''</span> <span class=\"n\">s</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_range</span><span class=\"o\">,</span> <span class=\"n\">mulIndicator</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">mem_image</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">eq_univ_iff_forall</span><span class=\"o\">,</span> <span class=\"n\">not_forall</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">⟩</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"bp\">·</span> <span class=\"n\">rintro</span> <span class=\"o\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">⟩</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">split_ifs</span> <span class=\"n\">at</span> <span class=\"n\">hy</span> <span class=\"k\">with</span> <span class=\"n\">hys</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"bp\">·</span> <span class=\"n\">tauto</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"bp\">·</span> <span class=\"n\">left</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">tauto</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">9</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"bp\">·</span> <span class=\"n\">rintro</span> <span class=\"o\">(⟨</span><span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">⟩⟩</span> <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">hxs</span><span class=\"o\">⟩⟩)</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">use</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">split_ifs</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">tauto</span>\n</code></pre></div>\n<p>In the following \"multiple <code>:= by</code>\" situation: should multiple credits be given or only one?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Theorem</span><span class=\"o\">:</span> <span class=\"kd\">lemma</span> <span class=\"n\">sum_mul_sq_le_sq_mul_sq</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">nontriviality</span> <span class=\"n\">α</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">obtain</span> <span class=\"n\">h'</span> <span class=\"bp\">|</span> <span class=\"n\">h'</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">sum_nonneg</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">sq_nonneg</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">g</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">eq_or_lt</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"n\">h''</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"n\">hi</span> <span class=\"bp\">↦</span> <span class=\"kd\">by</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"o\">(</span><span class=\"n\">sum_eq_zero_iff_of_nonneg</span> <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">sq_nonneg</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">i</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">h'.symm</span> <span class=\"n\">i</span> <span class=\"n\">hi</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">h'</span><span class=\"o\">,</span> <span class=\"n\">sum_congr</span> <span class=\"n\">rfl</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">from</span> <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"n\">hi</span> <span class=\"bp\">↦</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h''</span> <span class=\"n\">i</span> <span class=\"n\">hi</span><span class=\"o\">])]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">simp</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">refine</span> <span class=\"n\">le_of_mul_le_mul_of_pos_left</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"o\">(</span><span class=\"n\">le_of_add_le_add_left</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">j</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">h'</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">9</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"k\">calc</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">j</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">j</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">2</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">mul_mul_mul_comm</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">mul_sum</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">sum_mul</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">ring</span>\n  <span class=\"o\">[</span> <span class=\"mi\">2</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">j</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">j</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">[</span> <span class=\"mi\">2</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"n\">sum_le_sum</span> <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">two_mul_le_add_sq</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">j</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">j</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">2</span><span class=\"bp\">.</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">_</span>\n  <span class=\"o\">[</span> <span class=\"mi\">3</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">sum_add_distrib</span><span class=\"o\">,</span> <span class=\"n\">mul_pow</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">sum_mul</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">ring</span>\n</code></pre></div>\n<p>In the following \"multiple <code>:= by</code>\" situation: should multiple credits be given or only one?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Theorem</span><span class=\"o\">:</span> <span class=\"kd\">theorem</span> <span class=\"n\">sub_convergents_eq</span> <span class=\"o\">{</span><span class=\"n\">ifp</span> <span class=\"o\">:</span> <span class=\"n\">IntFractPair</span> <span class=\"n\">K</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">stream_nth_eq</span> <span class=\"o\">:</span> <span class=\"n\">IntFractPair.stream</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"n\">ifp</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">let</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"n\">of</span> <span class=\"n\">v</span> <span class=\"k\">let</span> <span class=\"n\">B</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">g.continuantsAux</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">b</span> <span class=\"k\">let</span> <span class=\"n\">pB</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">g.continuantsAux</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span>\n<span class=\"n\">b</span> <span class=\"n\">v</span> <span class=\"bp\">-</span> <span class=\"n\">g.convergents</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"k\">if</span> <span class=\"n\">ifp.fr</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">pB</span><span class=\"o\">))</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"k\">let</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"n\">of</span> <span class=\"n\">v</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"k\">let</span> <span class=\"n\">conts</span> <span class=\"o\">:=</span> <span class=\"n\">g.continuantsAux</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"k\">let</span> <span class=\"n\">pred_conts</span> <span class=\"o\">:=</span> <span class=\"n\">g.continuantsAux</span> <span class=\"n\">n</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"k\">have</span> <span class=\"n\">g_finite_correctness</span> <span class=\"o\">:</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"n\">GeneralizedContinuedFraction.compExactValue</span> <span class=\"n\">pred_conts</span> <span class=\"n\">conts</span> <span class=\"n\">ifp.fr</span> <span class=\"o\">:=</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">compExactValue_correctness_of_stream_eq_some</span> <span class=\"n\">stream_nth_eq</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"n\">obtain</span> <span class=\"o\">(</span><span class=\"n\">ifp_fr_eq_zero</span> <span class=\"bp\">|</span> <span class=\"n\">ifp_fr_ne_zero</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">eq_or_ne</span> <span class=\"n\">ifp.fr</span> <span class=\"mi\">0</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"bp\">·</span> <span class=\"k\">suffices</span> <span class=\"n\">v</span> <span class=\"bp\">-</span> <span class=\"n\">g.convergents</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">ifp_fr_eq_zero</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span> <span class=\"mi\">9</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">replace</span> <span class=\"n\">g_finite_correctness</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"n\">g.convergents</span> <span class=\"n\">n</span><span class=\"bp\">;</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"bp\">·</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">GeneralizedContinuedFraction.compExactValue</span><span class=\"o\">,</span> <span class=\"n\">ifp_fr_eq_zero</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">g_finite_correctness</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">exact</span> <span class=\"n\">sub_eq_zero.2</span> <span class=\"n\">g_finite_correctness</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">12</span><span class=\"bp\">.</span><span class=\"o\">]</span>   <span class=\"bp\">·</span> <span class=\"c1\">-- more shorthand notation</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">13</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">let</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"n\">conts.a</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">14</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">let</span> <span class=\"n\">B</span> <span class=\"o\">:=</span> <span class=\"n\">conts.b</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">15</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">let</span> <span class=\"n\">pA</span> <span class=\"o\">:=</span> <span class=\"n\">pred_conts.a</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">16</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">let</span> <span class=\"n\">pB</span> <span class=\"o\">:=</span> <span class=\"n\">pred_conts.b</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">17</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">suffices</span> <span class=\"n\">v</span> <span class=\"bp\">-</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">pB</span><span class=\"o\">))</span> <span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">ifp_fr_ne_zero</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">18</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"n\">replace</span> <span class=\"n\">g_finite_correctness</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">pA</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">pB</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">19</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"bp\">·</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">GeneralizedContinuedFraction.compExactValue</span><span class=\"o\">,</span> <span class=\"n\">ifp_fr_ne_zero</span><span class=\"o\">,</span> <span class=\"n\">nextContinuants</span><span class=\"o\">,</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">20</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"n\">nextNumerator</span><span class=\"o\">,</span> <span class=\"n\">nextDenominator</span><span class=\"o\">,</span> <span class=\"n\">add_comm</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">g_finite_correctness</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">21</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">suffices</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">22</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"o\">(</span><span class=\"n\">pA</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">pB</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">pB</span><span class=\"o\">))</span> <span class=\"kd\">by</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">23</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">g_finite_correctness</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">24</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">have</span> <span class=\"n\">n_eq_zero_or_not_terminated_at_pred_n</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"bp\">¬</span><span class=\"n\">g.TerminatedAt</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">2</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">cases'</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n'</span>\n  <span class=\"o\">[</span> <span class=\"mi\">2</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"bp\">·</span> <span class=\"n\">simp</span>\n  <span class=\"o\">[</span> <span class=\"mi\">2</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">IntFractPair.stream</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">n'</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"n\">none</span>\n  <span class=\"o\">[</span> <span class=\"mi\">3</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">stream_nth_eq</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">3</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">g.TerminatedAt</span> <span class=\"n\">n'</span> <span class=\"o\">:=</span>\n  <span class=\"o\">[</span> <span class=\"mi\">3</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>           <span class=\"o\">(</span><span class=\"n\">not_congr</span> <span class=\"n\">of_terminatedAt_n_iff_succ_nth_intFractPair_stream_eq_none</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">this</span>\n  <span class=\"o\">[</span> <span class=\"mi\">3</span><span class=\"bp\">.</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"n\">exact</span> <span class=\"n\">Or.inr</span> <span class=\"n\">this</span>\n  <span class=\"o\">[</span> <span class=\"mi\">3</span><span class=\"bp\">.</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">have</span> <span class=\"n\">determinant_eq</span> <span class=\"o\">:</span> <span class=\"n\">pA</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">-</span> <span class=\"n\">pB</span> <span class=\"bp\">*</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n  <span class=\"o\">[</span> <span class=\"mi\">3</span><span class=\"bp\">.</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">determinant_aux</span> <span class=\"n\">n_eq_zero_or_not_terminated_at_pred_n</span>\n  <span class=\"o\">[</span> <span class=\"mi\">3</span><span class=\"bp\">.</span> <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">have</span> <span class=\"n\">pB_ineq</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fib</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">pB</span> <span class=\"o\">:=</span>\n  <span class=\"o\">[</span> <span class=\"mi\">3</span><span class=\"bp\">.</span> <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"bp\">¬</span><span class=\"n\">g.TerminatedAt</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">4</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"n\">cases'</span> <span class=\"n\">n_eq_zero_or_not_terminated_at_pred_n</span> <span class=\"k\">with</span> <span class=\"n\">n_eq_zero</span> <span class=\"n\">not_terminated_at_pred_n</span>\n  <span class=\"o\">[</span> <span class=\"mi\">4</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">n_eq_zero</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">4</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">Or.inr</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">mt</span> <span class=\"o\">(</span><span class=\"n\">terminated_stable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">pred_le</span><span class=\"o\">)</span> <span class=\"n\">not_terminated_at_pred_n</span>\n  <span class=\"o\">[</span> <span class=\"mi\">4</span><span class=\"bp\">.</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">fib_le_of_continuantsAux_b</span> <span class=\"n\">this</span>\n  <span class=\"o\">[</span> <span class=\"mi\">4</span><span class=\"bp\">.</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">have</span> <span class=\"n\">B_ineq</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fib</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n  <span class=\"o\">[</span> <span class=\"mi\">4</span><span class=\"bp\">.</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"bp\">¬</span><span class=\"n\">g.TerminatedAt</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">5</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"n\">cases'</span> <span class=\"n\">n_eq_zero_or_not_terminated_at_pred_n</span> <span class=\"k\">with</span> <span class=\"n\">n_eq_zero</span> <span class=\"n\">not_terminated_at_pred_n</span>\n  <span class=\"o\">[</span> <span class=\"mi\">5</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">n_eq_zero</span><span class=\"o\">,</span> <span class=\"n\">le_refl</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">5</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">Or.inr</span> <span class=\"n\">not_terminated_at_pred_n</span>\n  <span class=\"o\">[</span> <span class=\"mi\">5</span><span class=\"bp\">.</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">fib_le_of_continuantsAux_b</span> <span class=\"n\">this</span>\n  <span class=\"o\">[</span> <span class=\"mi\">5</span><span class=\"bp\">.</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">have</span> <span class=\"n\">zero_lt_B</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">B</span> <span class=\"o\">:=</span> <span class=\"n\">B_ineq.trans_lt'</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">cast_pos.2</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">fib_pos.2</span> <span class=\"n\">n.succ_pos</span>\n  <span class=\"o\">[</span> <span class=\"mi\">5</span><span class=\"bp\">.</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">pB</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">cast_nonneg</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"n\">pB_ineq</span>\n  <span class=\"o\">[</span> <span class=\"mi\">5</span><span class=\"bp\">.</span> <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ifp.fr</span> <span class=\"o\">:=</span>\n  <span class=\"o\">[</span> <span class=\"mi\">5</span><span class=\"bp\">.</span> <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">ifp_fr_ne_zero.lt_of_le'</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">IntFractPair.nth_stream_fr_nonneg</span> <span class=\"n\">stream_nth_eq</span>\n  <span class=\"o\">[</span> <span class=\"mi\">5</span><span class=\"bp\">.</span> <span class=\"mi\">9</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">pB</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span>\n  <span class=\"o\">[</span> <span class=\"mi\">6</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>  <span class=\"n\">positivity</span>\n  <span class=\"o\">[</span> <span class=\"mi\">6</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>     <span class=\"k\">calc</span>\n  <span class=\"o\">[</span> <span class=\"mi\">6</span><span class=\"bp\">.</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"o\">(</span><span class=\"n\">pA</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">pB</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"n\">B</span> <span class=\"bp\">=</span>\n  <span class=\"o\">[</span> <span class=\"mi\">6</span><span class=\"bp\">.</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"o\">]</span>           <span class=\"o\">((</span><span class=\"n\">pA</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">pB</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"n\">pB</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">7</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>         <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">div_sub_div</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">this</span> <span class=\"n\">zero_lt_B.ne'</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">7</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">pA</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">A</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">pB</span> <span class=\"bp\">*</span> <span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">*</span> <span class=\"n\">A</span><span class=\"o\">))</span> <span class=\"bp\">/</span> <span class=\"n\">_</span>\n  <span class=\"o\">[</span> <span class=\"mi\">8</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>  <span class=\"n\">repeat'</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_mul</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span> <span class=\"mi\">8</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">pA</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">-</span> <span class=\"n\">pB</span> <span class=\"bp\">*</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"n\">pB</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span> <span class=\"mi\">9</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>  <span class=\"n\">ring</span>\n  <span class=\"o\">[</span> <span class=\"mi\">9</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"n\">pB</span> <span class=\"bp\">+</span> <span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"mi\">10</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">determinant_eq</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"mi\">10</span><span class=\"bp\">.</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"o\">]</span>       <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ifp.fr</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"bp\">+</span> <span class=\"n\">pB</span><span class=\"o\">))</span>\n  <span class=\"o\">[</span><span class=\"mi\">11</span><span class=\"bp\">.</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"o\">]</span>  <span class=\"n\">ac_rfl</span>\n</code></pre></div>",
        "id": 419640154,
        "sender_full_name": "Isak Colboubrani",
        "timestamp": 1706993163
    }
]