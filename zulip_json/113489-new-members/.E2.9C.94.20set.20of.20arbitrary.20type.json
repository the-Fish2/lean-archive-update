[
    {
        "content": "<p>I was wondering if there exists a better way to write that \"it exists a set A (among sets of all types) such that P A\" than in this example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kn\">open</span> <span class=\"n\">Set</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">v</span><span class=\"o\">),</span> <span class=\"n\">A.Nonempty</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span>\n  <span class=\"n\">use</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">univ</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"n\">exact</span> <span class=\"n\">univ_nonempty</span>\n</code></pre></div>\n<p>By the way, I guess one can prove this small example with less lines. Feel free to tell me how I can prove this kind of stuff more efficiently!</p>",
        "id": 425395679,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1709845860
    },
    {
        "content": "<p>If you want short:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kn\">open</span> <span class=\"n\">Set</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">V</span><span class=\"o\">),</span> <span class=\"n\">A.Nonempty</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">univ</span><span class=\"o\">,</span> <span class=\"n\">univ_nonempty</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 425396131,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1709846100
    },
    {
        "content": "<p>Thank you very much, I did not remember the Type ordering explanations from Functional Programming in Lean <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 425396610,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1709846308
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"635099\">Gaëtan Serré</span> has marked this topic as resolved.</p>",
        "id": 425582752,
        "sender_full_name": "Notification Bot",
        "timestamp": 1709927566
    }
]