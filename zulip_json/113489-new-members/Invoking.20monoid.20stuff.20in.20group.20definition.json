[
    {
        "content": "<p>Is there something wrong with <code>MyAdditiveGroup2</code>? The <code>add_neg</code> and <code>neg_add</code> components at the bottom of this segment don't have the types I was expecting: it seems to want me to prove that all <code>a b</code> are each others inverses.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">MyAddMonoid</span> <span class=\"n\">where</span>\n  <span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">add</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n  <span class=\"n\">add_zero</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"n\">a</span> <span class=\"n\">zero</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n  <span class=\"n\">zero_add</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"n\">zero</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">NatAdditiveMonoid</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">MyAddMonoid</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">HAdd.hAdd</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">MyMultiplicativeMonoid</span> <span class=\"n\">where</span>\n  <span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n  <span class=\"n\">mul_one</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">mul</span> <span class=\"n\">a</span> <span class=\"n\">one</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n  <span class=\"n\">one_mul</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">mul</span> <span class=\"n\">one</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">MyAdditiveGroup1</span> <span class=\"n\">where</span>\n  <span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">add</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n  <span class=\"n\">add_zero</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"n\">a</span> <span class=\"n\">zero</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n  <span class=\"n\">zero_add</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"n\">zero</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n  <span class=\"n\">neg</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n  <span class=\"n\">add_neg</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">zero</span>\n  <span class=\"n\">neg_add</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">zero</span>\n\n\n<span class=\"kd\">structure</span> <span class=\"n\">MyAdditiveGroup2</span> <span class=\"n\">where</span>\n  <span class=\"n\">additive_monoid</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">MyAddMonoid</span> <span class=\"n\">α</span>\n  <span class=\"n\">neg</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n  <span class=\"n\">add_neg</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">additive_monoid.add</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">zero</span>\n  <span class=\"n\">neg_add</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">additive_monoid.add</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">zero</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">MyAdditiveGroup.add</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">MyAdditiveGroup1</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n  <span class=\"n\">s.add</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">MyAdditiveGroup.sub</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">MyAdditiveGroup1</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n  <span class=\"n\">s.add</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">s.neg</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">int_add_neg</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">linarith</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">int_neg_add</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">linarith</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">MyIntAdditiveGroup1</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">MyAdditiveGroup1</span> <span class=\"n\">ℤ</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℤ</span><span class=\"o\">),</span> <span class=\"n\">HAdd.hAdd</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">,</span> <span class=\"n\">Neg.neg</span><span class=\"o\">,</span> <span class=\"n\">int_add_neg</span><span class=\"o\">,</span> <span class=\"n\">int_neg_add</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">MyIntAdditiveGroup2</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">MyAdditiveGroup2</span> <span class=\"n\">ℤ</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨⟨(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℤ</span><span class=\"o\">),</span> <span class=\"n\">HAdd.hAdd</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">⟩,</span> <span class=\"n\">Neg.neg</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"o\">{</span>\n<span class=\"c\">/-</span>\n<span class=\"cm\">α : Type</span>\n<span class=\"cm\">⊢ ∀ {zero : ℤ} (a : ℤ), { zero := 0, add := HAdd.hAdd, add_zero := ⋯, zero_add := ⋯ }.add a (-a) = zero</span>\n<span class=\"cm\">-/</span>\n\n  <span class=\"o\">}),</span> <span class=\"gr\">sorry</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 433907081,
        "sender_full_name": "Iocta",
        "timestamp": 1713408509
    },
    {
        "content": "<p><code>set_option autoImplicit false</code></p>",
        "id": 433951992,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713422119
    }
]