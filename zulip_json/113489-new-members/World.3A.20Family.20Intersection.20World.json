[
    {
        "content": "<p>I am in Set theory game at level:<br>\n<a href=\"https://adam.math.hhu.de/#/g/djvelleman/stg4/world/FamInter/level/5\">https://adam.math.hhu.de/#/g/djvelleman/stg4/world/FamInter/level/5</a><br>\nObjects:<br>\nU: Type<br>\nA: Set U<br>\nF: Set (Set U)<br>\nB: Set U<br>\nAssumptions:<br>\nh: A ⊆ ⋂₀ F<br>\nh0: B ∈ F<br>\nGoal:<br>\nA ⊆ B</p>\n<p>I tried </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">apply</span> <span class=\"n\">h</span> <span class=\"n\">at</span> <span class=\"n\">h0</span>\n</code></pre></div>\n<p>but it gives strange results. What do you recommend?</p>",
        "id": 417172599,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1705909192
    },
    {
        "content": "<p>Is <code>apply ... at ...</code> covered in this? When I clicked on <code>apply</code> it doesn't mention this form. (Incidentally, you can make progress with it if you understand what the <code>?</code> variables mean, and how you got to the goal state given the definition of subset and <code>⋂₀</code>, but I don't think that is a very understandable proof.)</p>\n<p>In any case, I would suggest using <code>intro</code> as a next step.</p>",
        "id": 417173608,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1705909724
    },
    {
        "content": "<p>No, <code>apply ... at ...</code> is not covered in the set theory game.</p>\n<p>Throughout the game, the advice for proving a subset statement has been to introduce first an arbitrary object and then the assumption that the object is an element of the left side of the subset statement.</p>",
        "id": 417226306,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1705929218
    },
    {
        "content": "<p>I recommend a \"put off thinking as long as possible\" approach to proofs--especially for beginners.  There are certain steps in proofs that you can do without thinking, and it is usually best to do those steps <em>before</em> you start thinking about why the theorem is true.</p>\n<p>This proof is a good example of that.  If your goal is <code>A ⊆ B</code>, then <em>without even thinking about why the theorem is true</em>, you can do two steps: introduce an arbitrary <code>x</code>, and assume that <code>x</code> is an element of <code>A</code>.  It is only once you have done those steps that you are ready to think about the central issue in this proof, which is: if <code>x</code> is an element of <code>A</code>, why should it be an element of <code>B</code>?</p>\n<p>Yes, there are exceptions.  Occasionally some other approach works better.  But if your goal is <code>A ⊆ B</code> and you're stuck, then I would say that you're thinking too soon.  Do the automatic steps first; then start thinking.</p>",
        "id": 417245548,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1705935040
    },
    {
        "content": "<p>I did intro and solved one direction (h1). I am stuck with the opposite direction :-(</p>\n<p>Objects:<br>\nU: Type<br>\nA: Set U<br>\nF: Set (Set U)<br>\nB: Set U<br>\na: U<br>\nS: Set U<br>\nAssumptions:<br>\nh1: A ⊆ ⋂₀ F → ∀ B ∈ F, A ⊆ B<br>\nh0: B ∈ F<br>\nh9: A ⊆ B<br>\nh: a ∈ B<br>\nh8: S ∈ F<br>\nGoal:<br>\na ∈ S</p>",
        "id": 417278995,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1705944076
    },
    {
        "content": "<p>I don't think your  current assumptions imply your goal, so you've gone wrong somewhere.</p>\n<p>I'm going to take a wild guess at how you got to where you are.  You should be proving the implication <code>(∀ B ∈ F, A ⊆ B) → A ⊆ ⋂₀ F</code>.  If you typed that in, but left out the parentheses, then Lean would interpret it as <code>∀ B ∈ F, (A ⊆ B → A ⊆ ⋂₀ F)</code>.  That statement is not, in general, true, so if you try to prove it you'll get stuck.  Is that how you got to where you are?</p>",
        "id": 417290291,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1705947968
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 417304077,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1705953066
    },
    {
        "content": "<p>This is the goal state I get from <code>intro</code>ducing blindly:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">H</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">B</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"bp\">⊆</span> <span class=\"n\">B</span>\n<span class=\"n\">hx</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span>\n<span class=\"n\">hs</span><span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span>\n<span class=\"n\">Goal</span><span class=\"o\">:</span>\n<span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span>\n</code></pre></div>\n<p>which is straightforward to finish</p>",
        "id": 417305266,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1705953579
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> <br>\nThe mistake was with parentheses. I successfully completed the task after correction.</p>",
        "id": 417355098,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1705975631
    },
    {
        "content": "<p>I am now at level:<br>\n<a href=\"https://adam.math.hhu.de/#/g/djvelleman/stg4/world/FamUnion/level/4\">https://adam.math.hhu.de/#/g/djvelleman/stg4/world/FamUnion/level/4</a></p>\n<p>I did one direction (h1). I am stuck here.</p>\n<p>Objects:<br>\nU: Type<br>\nAB: Set U<br>\nx: U<br>\nw: Set U<br>\nAssumptions:<br>\nh1: A ∪ B ⊆ ⋃₀ {A, B}<br>\nhw: w ∈ {A, B} ∧ x ∈ w<br>\nhA: w = A<br>\nGoal:<br>\nx ∈ A</p>",
        "id": 417427895,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1706010233
    },
    {
        "content": "<p>Do you know the maths proof of how you want to continue?</p>",
        "id": 417431944,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706011690
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/World.3A.20Family.20Intersection.20World/near/417431944\">said</a>:</p>\n<blockquote>\n<p>Do you know the maths proof of how you want to continue?</p>\n</blockquote>\n<p>From mathematics side it is kind of obvious. If  w ∈ {A, B} ∧ x ∈ w<br>\nand w = A, then for sure x ∈ A. No? I don't know how to do this in Lean.</p>",
        "id": 417433426,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1706012216
    },
    {
        "content": "<p>Which part of this argument can't you do in Lean? You need to (1) access the fact that <code>x \\in w</code> (2) deduce <code>x \\in A</code> from <code>x \\in w</code> and <code>w = A</code>. I'm not sure how you've been playing this game (my impression is that you have switched off the \"learn the tactics in order\" switch and are just applying tactics randomly to anything) but surely the tactics which you have learnt so far in the game will get you through here.</p>",
        "id": 417433794,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706012348
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/World.3A.20Family.20Intersection.20World/near/417433794\">said</a>:</p>\n<blockquote>\n<p>Which part of this argument can't you do in Lean? You need to (1) access the fact that <code>x \\in w</code> (2) deduce <code>x \\in A</code> from <code>x \\in w</code> and <code>w = A</code>. I'm not sure how you've been playing this game (my impression is that you have switched off the \"learn the tactics in order\" switch and are just applying tactics randomly to anything) but surely the tactics which you have learnt so far in the game will get you through here.</p>\n</blockquote>\n<p>I could do (1) but can't do (2)</p>\n<p>(1) access the fact that <code>x \\in w</code><br>\ndone!</p>\n<p>(2) deduce <code>x \\in A</code> from <code>x \\in w</code> and <code>w = A</code>.<br>\n?</p>\n<p>I was trying many different tactics throughout the game but it seems I missed somewhere the tactic to use equality of sets or substitution tactic. I am stuck for real :/</p>\n<p>Current status looks like this</p>\n<p>U: Type<br>\nAB: Set U<br>\nx: U<br>\nw: Set U<br>\nAssumptions:<br>\nh1: A ∪ B ⊆ ⋃₀ {A, B}<br>\nhw: w ∈ {A, B} ∧ x ∈ w<br>\nhA: w = A<br>\nh6: x ∈ w<br>\nGoal:<br>\nx ∈ A</p>",
        "id": 417489109,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1706029196
    },
    {
        "content": "<p>Take a look at the <code>rewrite</code> tactic.</p>",
        "id": 417490594,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1706029649
    },
    {
        "content": "<p>The <code>rewrite</code> tactic was introduced in Complement World.  The use of <code>rewrite</code> with statements of the form <code>P ↔ Q</code> was introduced in level 3 of that world, and the use with statements of the form <code>P = Q</code> was introduced in level 5.</p>",
        "id": 417492125,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1706030137
    },
    {
        "content": "<p>Thank you I completed.</p>",
        "id": 417580187,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1706075768
    }
]