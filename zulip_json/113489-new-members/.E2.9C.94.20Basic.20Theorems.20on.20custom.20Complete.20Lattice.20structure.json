[
    {
        "content": "<p>So, I needed my Complete Lattice structure to be based on a certain Poset, so I defined it like this. </p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">class</span><span class=\"w\"> </span><span class=\"n\">MyCompleteLattice</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">PartialOrder</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"kn\">extends</span><span class=\"w\"> </span><span class=\"n\">Sup</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Inf</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">SupSet</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">InfSet</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">OrderTop</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">OrderBot</span><span class=\"w\"> </span><span class=\"n\">α</span>\n</code></pre></div>\n<p>Now though, many of the very basic theorems of Complete Lattices defined in mathlib, I need to prove manually (this trivial one for example <code>sSup {a, b} = a ⊔ b</code>). So, I was wondering what the best way to approach this is, I want to avoid reinventing the wheel as much as possible. Any general advice would be appreciated.</p>",
        "id": 441900449,
        "sender_full_name": "George Kojonis",
        "timestamp": 1717245806
    },
    {
        "content": "<p>You can define</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">instance</span><span class=\"w\"> </span><span class=\"n\">MyCompleteLattice</span><span class=\"bp\">.</span><span class=\"n\">toCompleteLattice</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">MyCompleteLattice</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">CompleteLattice</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"bp\">__</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"bp\">‹</span><span class=\"n\">MyCompleteLattice</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"bp\">›</span>\n<span class=\"w\"> </span><span class=\"c1\">-- Complete here</span>\n</code></pre></div>",
        "id": 441900578,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717245884
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>  And that would allow me to use the theorems of the Complete Lattice in my bare bones version? Got it thanks!</p>",
        "id": 441901151,
        "sender_full_name": "George Kojonis",
        "timestamp": 1717246152
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"720043\">George Kojonis</span> has marked this topic as resolved.</p>",
        "id": 441901577,
        "sender_full_name": "Notification Bot",
        "timestamp": 1717246327
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"720043\">George Kojonis</span> has marked this topic as unresolved.</p>",
        "id": 441903800,
        "sender_full_name": "Notification Bot",
        "timestamp": 1717247395
    },
    {
        "content": "<p>Okay, this forces me to write explicit correlations between my bare bones implementation and the mathlib one, which is something I want to avoid (because it makes proving that something is a Complete Lattice a lot more tedious). </p>\n<p>Would \"translating\" the Complete Lattice theorems I am interested in, in a more fundamental form that doesn't make use of all those high level theorems plausible?</p>",
        "id": 441904373,
        "sender_full_name": "George Kojonis",
        "timestamp": 1717247759
    },
    {
        "content": "<p>Depends on what you want to do!</p>",
        "id": 441905227,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717248163
    },
    {
        "content": "<p>Heh, I guess so. Not going to lie, those ready made theorems are tempting me but it is also nice only having to prove the existence of a bottom and supremum on any subset, for a poset to be a complete lattice. Anyway, thanks for the help, I really appreciate it!</p>",
        "id": 441905601,
        "sender_full_name": "George Kojonis",
        "timestamp": 1717248357
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"720043\">George Kojonis</span> has marked this topic as resolved.</p>",
        "id": 441905667,
        "sender_full_name": "Notification Bot",
        "timestamp": 1717248375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"720043\">George Kojonis</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Basic.20Theorems.20on.20custom.20Complete.20Lattice.20structure/near/441905601\">said</a>:</p>\n<blockquote>\n<p>it is also nice only having to prove the existence of a bottom and supremum on any subset, for a poset to be a complete lattice</p>\n</blockquote>\n<p>You know you can simply define</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">myCompleteLatticeConstructor</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">PartialOrder</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">there_is_a_bottom_element</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"o\">(</span><span class=\"n\">h'</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">all_subsets_have_a_supremum</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">CompleteLattice</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n</code></pre></div>\n<p>right?</p>",
        "id": 441905884,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717248483
    },
    {
        "content": "<p>In fact, this already exists: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=completeLatticeOfSup#doc\">docs#completeLatticeOfSup</a></p>",
        "id": 441905963,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717248513
    },
    {
        "content": "<p>This is embarrassing, can't thank you enough.</p>",
        "id": 441906345,
        "sender_full_name": "George Kojonis",
        "timestamp": 1717248695
    }
]