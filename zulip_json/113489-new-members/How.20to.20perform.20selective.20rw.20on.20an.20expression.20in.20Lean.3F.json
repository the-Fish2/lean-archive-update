[
    {
        "content": "<p>Hey there! I'm Noah and I'm new to LEAN. I've been going through the Natural Number Game and have been loving it. One thing I came across is being unable to selectively apply the <code>rw</code> tactic where I match by an expression. </p>\n<p>I'll give an example to show what I mean. </p>\n<p><a href=\"/user_uploads/3121/DV0yWEzWAKAfRkcNBcORaiPi/Screenshot-2024-06-02-at-1.14.06PM.png\">Screenshot-2024-06-02-at-1.14.06PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/DV0yWEzWAKAfRkcNBcORaiPi/Screenshot-2024-06-02-at-1.14.06PM.png\" title=\"Screenshot-2024-06-02-at-1.14.06PM.png\"><img src=\"/user_uploads/3121/DV0yWEzWAKAfRkcNBcORaiPi/Screenshot-2024-06-02-at-1.14.06PM.png\"></a></div><p>In the screenshot above, I'd effectively like to perform <code>rw [mul_comm b^d a]</code> to flip the <code>b^d</code> and <code>a</code> but LEAN won't let me do this. Instead, I do <code>nth_rewrite 3 [mul_comm]</code>. Is there a way to apply tactics on expressions like <code>b^d</code>?</p>\n<p>Thank you for taking the time to read this!</p>",
        "id": 442077613,
        "sender_full_name": "Noah Stebbins",
        "timestamp": 1717348583
    },
    {
        "content": "<p>Parentheses around <code>b^d</code></p>",
        "id": 442077779,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717348660
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> ! That worked</p>",
        "id": 442079140,
        "sender_full_name": "Noah Stebbins",
        "timestamp": 1717349213
    },
    {
        "content": "<p>It's a pretty common issue :)</p>",
        "id": 442079740,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717349517
    },
    {
        "content": "<p>Is there a way of changing the way <code>rw</code> parses in NNG to make this issue go away?</p>",
        "id": 442090115,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717354959
    },
    {
        "content": "<p>An easy (but severe!) way would be to make the precedence for <code>^</code> higher than the precedence for function application. That would affect other things too though, like <code>Nat.succ a^b</code> would be the same as <code>Nat.succ (a^b)</code> rather than <code>(Nat.succ a)^b</code>.</p>",
        "id": 442090328,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717355097
    },
    {
        "content": "<p>It might be possible to make arguments to lemmas in <code>rw</code> parse at a different precedence level, but I'm afraid <code>mul_comm b^d a</code> might come out as <code>mul_comm (b^(d a))</code></p>",
        "id": 442090601,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717355260
    }
]