[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Idt36</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span>  <span class=\"o\">(</span><span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">):=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span>  <span class=\"o\">(</span><span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">induction'</span> <span class=\"n\">m</span> <span class=\"k\">with</span> <span class=\"n\">m</span> <span class=\"n\">ih</span>\n      <span class=\"bp\">·</span> <span class=\"n\">simp</span>\n      <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"n\">d1</span> <span class=\"o\">:</span> <span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">descFactorial_succ</span>\n        <span class=\"k\">have</span> <span class=\"n\">d2</span> <span class=\"o\">:</span> <span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">descFactorial_succ</span>\n        <span class=\"k\">have</span> <span class=\"n\">ih2</span> <span class=\"o\">:</span> <span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">Nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span>  <span class=\"n\">Nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">exact</span> <span class=\"n\">Nat.mul_comm</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">d1</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">d2</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">mul_assoc</span> <span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">ih2</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">ih</span><span class=\"o\">]</span>\n        <span class=\"k\">have</span> <span class=\"n\">d3</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Nat.choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Nat.choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">succ</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">succ</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">idt6_Absorption_Idt</span>\n          <span class=\"bp\">·</span> <span class=\"n\">simp</span>\n            <span class=\"k\">have</span> <span class=\"n\">l1</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n              <span class=\"n\">linarith</span>\n</code></pre></div>\n<p>I found that during my proof process, linarith failed to work in many situations where I thought it could work. Does anyone know why?</p>",
        "id": 413092792,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1705389137
    },
    {
        "content": "<p>It is hard to answer, without being able to see what are really the assumptions, but maybe this helps:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">},</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">not_forall</span><span class=\"o\">]</span>\n  <span class=\"n\">use</span> <span class=\"mi\">1</span>\n  <span class=\"n\">use</span> <span class=\"mi\">0</span>\n  <span class=\"n\">decide</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Int</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">linarith</span>\n</code></pre></div>",
        "id": 413094435,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1705390112
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/Why.20linarith.20does.20not.20work.3F/near/413094435\">said</a>:</p>\n<blockquote>\n<p>It is hard to answer, without being able to see what are really the assumptions, but maybe this helps:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">},</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">not_forall</span><span class=\"o\">]</span>\n  <span class=\"n\">use</span> <span class=\"mi\">1</span>\n  <span class=\"n\">use</span> <span class=\"mi\">0</span>\n  <span class=\"n\">decide</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Int</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">linarith</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Thank you!</p>",
        "id": 413098619,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1705392197
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631681\">tsuki  hao</span> has marked this topic as resolved.</p>",
        "id": 413098628,
        "sender_full_name": "Notification Bot",
        "timestamp": 1705392203
    }
]