[
    {
        "content": "<p>Maybe this question is overly general, but I've recently proven two things:</p>\n<p>a) That the complex numbers can't be linearly ordered in a way that is compatible with their field structure<br>\nb) That every 2d field extension of R is isomorphic to C</p>\n<p>For a), I haven't found a way to directly state that an instance <code>LinearOrderedField ℂ</code> is impossible, so I ended up with:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">c_no_order</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedField</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">iso</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span> <span class=\"bp\">≃+*</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">False</span>\n</code></pre></div>\n<p>And for b) I went with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">c_unique_2d</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Algebra</span> <span class=\"n\">ℝ</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module.Finite</span> <span class=\"n\">ℝ</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">dim2</span> <span class=\"o\">:</span> <span class=\"n\">finrank</span> <span class=\"n\">ℝ</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"bp\">≃+*</span> <span class=\"n\">ℂ</span>\n</code></pre></div>\n<p>The proofs work, but I don't know if these are idiomatic ways of writing those statements. In particular, for b), it seems \"odd\" to me to have a theorem whose type is not <code>Prop</code>, but maybe that's fine and natural?</p>",
        "id": 435914332,
        "sender_full_name": "Tainnor",
        "timestamp": 1714343602
    },
    {
        "content": "<p>Either <code>c_unique_2d</code> should be a <code>def</code>, or you should state it as <code>Nonempty (F ≃+* ℂ)</code>, which is <code>Prop</code></p>",
        "id": 435914796,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714344033
    },
    {
        "content": "<p>Both look pretty reasonable to me</p>",
        "id": 435914829,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714344067
    },
    {
        "content": "<p>The first could be stated as <code>IsEmpty (ℂ ≃+* F)</code>.</p>",
        "id": 435914843,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714344089
    },
    {
        "content": "<p>Cool, I didn't know about <code>Nonempty</code> / <code>IsEmpty</code>. I changed the statements with minimal modifications to the proofs.</p>",
        "id": 435916046,
        "sender_full_name": "Tainnor",
        "timestamp": 1714345200
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"685366\">Tainnor</span> has marked this topic as resolved.</p>",
        "id": 435916070,
        "sender_full_name": "Notification Bot",
        "timestamp": 1714345203
    }
]