[
    {
        "content": "<p>Given that Mathlib contains …</p>\n<p><code>Mathlib/Data/Nat/ModEq.lean:lemma cancel_left_of_coprime (hmc : gcd m c = 1) (h : c * a ≡ c * b [MOD m]) : a ≡ b [MOD m] := by</code></p>\n<p>… shouldn't …</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hmc</span> <span class=\"o\">:</span> <span class=\"n\">Nat.gcd</span> <span class=\"n\">m</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">≡</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">[</span><span class=\"n\">MOD</span> <span class=\"n\">m</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≡</span> <span class=\"n\">b</span> <span class=\"o\">[</span><span class=\"n\">MOD</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span><span class=\"bp\">?</span>\n</code></pre></div>\n<p>… suggest <code>cancel_left_of_coprime</code>? What am I missing?</p>",
        "id": 424336444,
        "sender_full_name": "Isak Colboubrani",
        "timestamp": 1709332558
    },
    {
        "content": "<p>Sometimes <code>exact?</code> will miss lemmas whose conclusion is of the form <code>a = b</code> and my understanding is that it's somehow too expensive to look through all of these lemmas, but here I am surprised it doesn't work.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hmc</span> <span class=\"o\">:</span> <span class=\"n\">Nat.gcd</span> <span class=\"n\">m</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">≡</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">[</span><span class=\"n\">MOD</span> <span class=\"n\">m</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≡</span> <span class=\"n\">b</span> <span class=\"o\">[</span><span class=\"n\">MOD</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Nat.ModEq.cancel_left_of_coprime</span> <span class=\"n\">hmc</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 424337623,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709333175
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"683979\">Isak Colboubrani</span> has marked this topic as resolved.</p>",
        "id": 424366847,
        "sender_full_name": "Notification Bot",
        "timestamp": 1709357199
    }
]