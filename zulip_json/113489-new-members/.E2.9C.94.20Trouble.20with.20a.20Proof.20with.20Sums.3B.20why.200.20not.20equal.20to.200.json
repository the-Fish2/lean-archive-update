[
    {
        "content": "<p>I was trying to prove a fact about linear regression models but I ran into a strange issue. For some reason Lean would not let me prove that 0 = 0 or that n<em>x + x = n</em>x + x. Both goals were products of an induction proof, and their error messages are where the comments are. </p>\n<p>I tried everything to prove them, using simp [*], ring, gcongr, tauto; nothing worked. Sorry for the MWE. I couldn't reduce it down any further than this below.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Choose.Sum</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">0</span>\n<span class=\"n\">macro_rules</span> <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"bp\">$</span><span class=\"n\">y</span><span class=\"o\">)</span>   <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">HPow.hPow</span> <span class=\"bp\">$</span><span class=\"n\">x</span> <span class=\"bp\">$</span><span class=\"n\">y</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Nat</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Finset</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Yhat</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">Ymean</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">F</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">n</span>\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">SSE</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Yhat</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">SSE_Rewrite</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Yhat</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">ℝ</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">SSE</span> <span class=\"n\">Y</span> <span class=\"n\">n</span> <span class=\"n\">Yhat</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"bp\">*</span><span class=\"o\">((</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">SSE</span><span class=\"o\">]</span><span class=\"bp\">;</span>\n  <span class=\"k\">have</span> <span class=\"n\">ConsSum</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">refine</span> <span class=\"n\">sum_range_induction</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">k</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">base</span> <span class=\"bp\">?</span><span class=\"n\">step</span> <span class=\"n\">n</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">*</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- HERE IS THE ISSUE: CANNOT PROVE 0 = 0</span>\n    <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">*</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"c1\">-- SAME ISSUE CANNOT PROVE n*x + x = n*x + x</span>\n  <span class=\"k\">have</span> <span class=\"n\">Endterm</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">ConsSum</span>\n  <span class=\"k\">calc</span>\n    <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">Y</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">))</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">*</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">Y</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">sum_congr</span> <span class=\"n\">rfl</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">;</span> <span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">Eq.symm</span> <span class=\"o\">(</span><span class=\"n\">add_sq</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">))</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">Y</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">sum_add_distrib</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"bp\">*</span><span class=\"o\">((</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">Yhat</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"n\">i</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">Ymean</span> <span class=\"n\">F</span> <span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Please help. Why is 0 not 0?</p>",
        "id": 412207822,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1704915659
    },
    {
        "content": "<p><code>[AddCommMonoid ℝ]</code> means \"let's put an arbitrary commutative monoid structure on the reals, unrelated to the usual one\" and in particular it means \"let's make a second zero\". Remove this line! Lean already knows one AddCommMonoid structure on the reals, you don't need to assume the existence of another one.</p>",
        "id": 412208189,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1704915804
    },
    {
        "content": "<p>Oh okay I see. However, I need that line to fix up another error at \"exact sum_add_distrib\". Without the AddCommMonoid, \"exact sum_add_distrib\" can't figure out that the Reals are a AddCommMonoid.</p>",
        "id": 412208632,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1704916006
    },
    {
        "content": "<p><code>sum_add_distrib</code> splits a sum into two. You have three summation symbols, so you need to use the lemma twice. <code>simp</code> can take care of applying lemmas multiple times to simplify an expression, so <code>by simp [sum_add_distrib]</code> works (<code>by rw [sum_add_distrib, sum_add_distrib]; rfl</code> also works)</p>",
        "id": 412209683,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704916501
    },
    {
        "content": "<p>The macro_rules thing you shouldn't need anymore, BTW</p>",
        "id": 412210236,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1704916693
    },
    {
        "content": "<p>Without the macro_rules my lean still causes issues, but it works perfect when macro_rules. It might be my version or something.</p>",
        "id": 412211185,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1704917061
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span>. It worked. I forgot that sum_add_distrib only worked on two sums.</p>",
        "id": 412211324,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1704917118
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"628490\">Colin Jones ⚛️</span> has marked this topic as resolved.</p>",
        "id": 412211342,
        "sender_full_name": "Notification Bot",
        "timestamp": 1704917124
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"628490\">Colin Jones ⚛️</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Trouble.20with.20a.20Proof.20with.20Sums.3B.20why.200.20not.20equal.20to.200/near/412211185\">said</a>:</p>\n<blockquote>\n<p>Without the macro_rules my lean still causes issues, but it works perfect when macro_rules. It might be my version or something.</p>\n</blockquote>\n<p>You should perhaps update the version of <code>mathlib</code> you're working with -- this bug was fixed a while ago now (mid-November maybe?)</p>",
        "id": 412212830,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1704917792
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Indeed: <a href=\"#narrow/stream/116290-rss/topic/Recent.20Commits.20to.20mathlib4.3Amaster/near/402627752\">https://leanprover.zulipchat.com/#narrow/stream/116290-rss/topic/Recent.20Commits.20to.20mathlib4.3Amaster/near/402627752</a></p>\n<p>Nobody should be using this <code>macro_rules</code> workaround anymore, and I hope it becomes but a distant memory!</p>",
        "id": 412213133,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1704917966
    }
]