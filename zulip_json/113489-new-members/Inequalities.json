[
    {
        "content": "<p>I was doing a project for uni and needed an inequality that wasn't In mathlib .  So I've proved them the code is below</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Field.Basic</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">mul_lt_mul_of_nonneg_left</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedSemifield</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span><span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">&lt;</span><span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">≤</span><span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span><span class=\"o\">{</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h'</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">zero_mul</span><span class=\"o\">,</span><span class=\"n\">zero_mul</span><span class=\"o\">]</span>\n  <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"k\">have</span> <span class=\"n\">h''</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span><span class=\"o\">{</span>\n    <span class=\"n\">by_contra</span> <span class=\"n\">sub</span>\n    <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">sub</span>\n    <span class=\"k\">have</span> <span class=\"n\">sub2</span> <span class=\"o\">:</span> <span class=\"n\">c</span><span class=\"bp\">=</span><span class=\"mi\">0</span><span class=\"o\">:=</span><span class=\"kd\">by</span><span class=\"o\">{</span>\n      <span class=\"n\">apply</span> <span class=\"n\">LE.le.antisymm</span> <span class=\"n\">sub</span> <span class=\"n\">hc</span>\n    <span class=\"o\">}</span>\n    <span class=\"n\">apply</span> <span class=\"n\">h</span> <span class=\"n\">sub2</span>\n  <span class=\"o\">}</span>\n  <span class=\"k\">have</span> <span class=\"n\">h'''</span><span class=\"o\">:</span> <span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">&lt;</span><span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"o\">:=</span><span class=\"kd\">by</span><span class=\"o\">{</span>\n    <span class=\"n\">apply</span> <span class=\"n\">mul_lt_mul_of_pos_left</span> <span class=\"n\">h'</span> <span class=\"n\">h''</span>\n  <span class=\"o\">}</span>\n  <span class=\"n\">apply</span> <span class=\"n\">LT.lt.le</span> <span class=\"n\">h'''</span>\n<span class=\"o\">}</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">mul_lt_mul_of_nonneg_right</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LinearOrderedSemifield</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hc</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span><span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">&lt;</span><span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">c</span><span class=\"bp\">≤</span><span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span><span class=\"o\">{</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h'</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">mul_zero</span><span class=\"o\">,</span><span class=\"n\">mul_zero</span><span class=\"o\">]</span>\n  <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"k\">have</span> <span class=\"n\">h''</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span><span class=\"o\">{</span>\n    <span class=\"n\">by_contra</span> <span class=\"n\">sub</span>\n    <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">sub</span>\n    <span class=\"k\">have</span> <span class=\"n\">sub2</span> <span class=\"o\">:</span> <span class=\"n\">c</span><span class=\"bp\">=</span><span class=\"mi\">0</span><span class=\"o\">:=</span><span class=\"kd\">by</span><span class=\"o\">{</span>\n      <span class=\"n\">apply</span> <span class=\"n\">LE.le.antisymm</span> <span class=\"n\">sub</span> <span class=\"n\">hc</span>\n    <span class=\"o\">}</span>\n    <span class=\"n\">apply</span> <span class=\"n\">h</span> <span class=\"n\">sub2</span>\n  <span class=\"o\">}</span>\n  <span class=\"k\">have</span> <span class=\"n\">h'''</span><span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">c</span><span class=\"bp\">&lt;</span><span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"o\">:=</span><span class=\"kd\">by</span><span class=\"o\">{</span>\n    <span class=\"n\">apply</span> <span class=\"n\">mul_lt_mul_of_pos_right</span> <span class=\"n\">h'</span> <span class=\"n\">h''</span>\n  <span class=\"o\">}</span>\n  <span class=\"n\">apply</span> <span class=\"n\">LT.lt.le</span> <span class=\"n\">h'''</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 425723052,
        "sender_full_name": "Timothy Harevy",
        "timestamp": 1710022884
    },
    {
        "content": "<p>Is it not just <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=mul_le_mul_of_nonneg_left#doc\">docs#mul_le_mul_of_nonneg_left</a> ?</p>",
        "id": 425723115,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710022949
    },
    {
        "content": "<p>Oh lol sorry guess I didn't see that</p>",
        "id": 425723238,
        "sender_full_name": "Timothy Harevy",
        "timestamp": 1710023078
    },
    {
        "content": "<p>Note you would have noticed had you guessed the name right!</p>",
        "id": 425723341,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710023179
    },
    {
        "content": "<p>You could also have tried <code>apply?</code> or <code>gcongr</code></p>",
        "id": 425723352,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710023197
    }
]