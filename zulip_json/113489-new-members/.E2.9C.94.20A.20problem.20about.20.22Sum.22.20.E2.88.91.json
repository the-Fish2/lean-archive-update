[
    {
        "content": "<p>Check theorem \"MainGoal4\",  i think h3 is nearly the same with the \"goal\",<br>\nwhat's going wrong?<br>\n<a href=\"/user_uploads/3121/erk4XGhvaZBv1-zc2PzpsTXf/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/erk4XGhvaZBv1-zc2PzpsTXf/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/erk4XGhvaZBv1-zc2PzpsTXf/image.png\"></a></div><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n\n          <span class=\"kd\">theorem</span> <span class=\"n\">MainGoal4_1</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n          <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n          <span class=\"o\">:</span>\n          <span class=\"n\">mulVec</span> <span class=\"n\">A</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"k\">fun</span> <span class=\"n\">yi</span> <span class=\"bp\">↦</span> <span class=\"bp\">∑</span> <span class=\"n\">xi</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"n\">xi</span> <span class=\"bp\">•</span> <span class=\"n\">A</span> <span class=\"n\">yi</span> <span class=\"n\">xi</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mulVec</span><span class=\"o\">]</span>\n            <span class=\"n\">ext</span> <span class=\"n\">h7_x</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">dotProduct</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">smul_eq_mul</span><span class=\"o\">]</span>\n            <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n            <span class=\"bp\">·</span> <span class=\"n\">rfl</span>\n            <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">x_1</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span> <span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">h7_x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span>\n\n      <span class=\"kd\">theorem</span> <span class=\"n\">MainGoal4</span>\n      <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n      <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">}</span>\n      <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"bp\">∃!</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">A.mulVec</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"c1\">-- mulVec就是矩阵和向量的乘法运算</span>\n      <span class=\"o\">:</span><span class=\"n\">LinearIndependent</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"n\">A.transpose</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n        <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">linearIndependent_iff'.2</span> <span class=\"n\">_</span>\n        <span class=\"k\">have</span> <span class=\"n\">h6</span><span class=\"o\">:=</span> <span class=\"n\">hA</span> <span class=\"mi\">0</span>\n        <span class=\"k\">have</span> <span class=\"n\">_h6</span><span class=\"o\">:=</span> <span class=\"n\">hA</span> <span class=\"mi\">0</span>\n        <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">h6_1</span><span class=\"o\">,</span> <span class=\"n\">h6_2</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h6</span>\n        <span class=\"k\">have</span> <span class=\"n\">h7</span><span class=\"o\">:</span> <span class=\"n\">mulVec</span> <span class=\"n\">A</span> <span class=\"n\">x</span> <span class=\"c1\">-- 这个引理可以单独抽出来</span>\n        <span class=\"bp\">=</span> <span class=\"k\">fun</span> <span class=\"n\">yi</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">∑</span> <span class=\"n\">xi</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">xi</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">yi</span> <span class=\"n\">xi</span><span class=\"o\">)</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">MainGoal4_1</span> <span class=\"n\">A</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h7</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h6_1</span>\n        <span class=\"n\">intro</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span>\n        <span class=\"n\">by_contra</span> <span class=\"n\">oppo</span>\n        <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">oppo</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Matrix.transpose</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h3</span>\n        <span class=\"k\">have</span> <span class=\"n\">h3_2</span> <span class=\"o\">:</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">h2</span> <span class=\"n\">x</span> <span class=\"bp\">•</span> <span class=\"n\">of</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">↦</span> <span class=\"n\">A</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span>\n        <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">h2</span> <span class=\"n\">x</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">↦</span> <span class=\"n\">A</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h3_2</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h3</span>\n        <span class=\"n\">clear</span> <span class=\"n\">h3_2</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"n\">at</span> <span class=\"n\">h3</span>\n        <span class=\"n\">clear</span> <span class=\"n\">hA</span>\n        <span class=\"k\">have</span> <span class=\"n\">h6_oppo</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">,(</span><span class=\"n\">x</span><span class=\"bp\">≠</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">A.mulVec</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">A.mulVec</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">use</span> <span class=\"mi\">0</span>\n          <span class=\"n\">use</span> <span class=\"n\">h2</span>\n          <span class=\"n\">constructor</span>\n          <span class=\"bp\">·</span> <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">oppo</span> <span class=\"c1\">-- 机器和人一样对于这种双重否定的问题一样很难理解</span>\n            <span class=\"n\">intros</span> <span class=\"n\">oppo1</span> <span class=\"n\">oppo2</span>\n            <span class=\"n\">exact</span> <span class=\"n\">congrFun</span> <span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"n\">oppo.symm</span><span class=\"o\">)</span> <span class=\"n\">oppo1</span>\n            <span class=\"n\">done</span>\n          <span class=\"n\">constructor</span>\n          <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">mulVec_zero</span> <span class=\"n\">A</span>\n          <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">MainGoal4_1</span> <span class=\"n\">A</span> <span class=\"n\">h2</span><span class=\"o\">]</span>\n            <span class=\"c1\">-- ext i</span>\n            <span class=\"c1\">-- simp only [mulVec, dotProduct, smul_eq_mul]</span>\n            <span class=\"c1\">-- rw [← Finset.sum_hom (λ j =&gt; h2 j • (A i j))]</span>\n            <span class=\"c1\">-- rw [← Finset.sum_hom h2 (A i)]</span>\n            <span class=\"c1\">-- exact h3</span>\n            <span class=\"gr\">sorry</span>\n            <span class=\"c1\">-- exact h3</span>\n            <span class=\"c1\">-- rw [← Multiset.sum_sum] at h3</span>\n          <span class=\"n\">done</span>\n        <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x1</span><span class=\"o\">,</span><span class=\"n\">x2</span><span class=\"o\">,</span><span class=\"n\">x3</span><span class=\"o\">,</span><span class=\"n\">x4</span><span class=\"o\">,</span><span class=\"n\">x5</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h6_oppo</span>\n        <span class=\"k\">have</span> <span class=\"n\">h4</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">ExistsUnique.unique</span> <span class=\"n\">_h6</span> <span class=\"n\">x4</span> <span class=\"n\">x5</span><span class=\"o\">)</span>\n        <span class=\"n\">exact</span> <span class=\"n\">x3</span> <span class=\"n\">h4</span>\n        <span class=\"n\">done</span>\n\n\n      <span class=\"kd\">theorem</span> <span class=\"n\">MainGoal5</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"c1\">-- 一个大神的证明</span>\n      <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"bp\">∃!</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">A.mulVec</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n      <span class=\"n\">LinearIndependent</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"n\">A.transpose</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n        <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">exact</span> <span class=\"n\">Matrix.mulVec_injective_iff.1</span> <span class=\"o\">((</span><span class=\"n\">Function.bijective_iff_existsUnique</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">hA</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">injective</span>\n        <span class=\"n\">done</span>\n</code></pre></div>",
        "id": 410005571,
        "sender_full_name": "chenjulang",
        "timestamp": 1703585896
    },
    {
        "content": "<p>We can see MainGoal5 is same as MainGoal4, but different proof.<br>\nSo MainGoal4 is indeed true.How to solve this in this way?</p>",
        "id": 410005788,
        "sender_full_name": "chenjulang",
        "timestamp": 1703586004
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/ctDD1HnWGRWxIx5wf_Ia6UKa/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ctDD1HnWGRWxIx5wf_Ia6UKa/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/ctDD1HnWGRWxIx5wf_Ia6UKa/image.png\"></a></div>",
        "id": 410006491,
        "sender_full_name": "chenjulang",
        "timestamp": 1703586376
    },
    {
        "content": "<p>Do you spot the difference between <code>h3</code> and the goal?</p>",
        "id": 410006620,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1703586445
    },
    {
        "content": "<p>Again, in one of them, you sum over a specific finset, in the other over the entire type.</p>",
        "id": 410006663,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1703586468
    },
    {
        "content": "<p>em...</p>",
        "id": 410007320,
        "sender_full_name": "chenjulang",
        "timestamp": 1703586828
    },
    {
        "content": "<p>Get it !!!:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n\n          <span class=\"kd\">theorem</span> <span class=\"n\">MainGoal4_1</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n          <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n          <span class=\"o\">:</span>\n          <span class=\"n\">mulVec</span> <span class=\"n\">A</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"k\">fun</span> <span class=\"n\">yi</span> <span class=\"bp\">↦</span> <span class=\"bp\">∑</span> <span class=\"n\">xi</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"n\">xi</span> <span class=\"bp\">•</span> <span class=\"n\">A</span> <span class=\"n\">yi</span> <span class=\"n\">xi</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mulVec</span><span class=\"o\">]</span>\n            <span class=\"n\">ext</span> <span class=\"n\">h7_x</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">dotProduct</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">smul_eq_mul</span><span class=\"o\">]</span>\n            <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n            <span class=\"bp\">·</span> <span class=\"n\">rfl</span>\n            <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">x_1</span> <span class=\"n\">a</span> <span class=\"bp\">↦</span> <span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">h7_x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span>\n\n      <span class=\"kd\">theorem</span> <span class=\"n\">MainGoal4</span>\n      <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n      <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">}</span>\n      <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"bp\">∃!</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">A.mulVec</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"c1\">-- mulVec就是矩阵和向量的乘法运算</span>\n      <span class=\"o\">:</span><span class=\"n\">LinearIndependent</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"n\">A.transpose</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n        <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"c1\">-- refine' linearIndependent_iff'.2 _</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Fintype.linearIndependent_iff.mpr</span> <span class=\"n\">_</span>\n        <span class=\"k\">have</span> <span class=\"n\">h6</span><span class=\"o\">:=</span> <span class=\"n\">hA</span> <span class=\"mi\">0</span>\n        <span class=\"k\">have</span> <span class=\"n\">_h6</span><span class=\"o\">:=</span> <span class=\"n\">hA</span> <span class=\"mi\">0</span>\n        <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">h6_1</span><span class=\"o\">,</span> <span class=\"n\">h6_2</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h6</span>\n        <span class=\"k\">have</span> <span class=\"n\">h7</span><span class=\"o\">:</span> <span class=\"n\">mulVec</span> <span class=\"n\">A</span> <span class=\"n\">x</span> <span class=\"c1\">-- 这个引理可以单独抽出来</span>\n        <span class=\"bp\">=</span> <span class=\"k\">fun</span> <span class=\"n\">yi</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">∑</span> <span class=\"n\">xi</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">xi</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">yi</span> <span class=\"n\">xi</span><span class=\"o\">)</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">MainGoal4_1</span> <span class=\"n\">A</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h7</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h6_1</span>\n        <span class=\"n\">intro</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span> <span class=\"n\">h3</span>\n        <span class=\"n\">by_contra</span> <span class=\"n\">oppo</span>\n        <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">oppo</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Matrix.transpose</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h2</span>\n        <span class=\"n\">clear</span> <span class=\"n\">hA</span>\n        <span class=\"k\">have</span> <span class=\"n\">h6_oppo</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">,(</span><span class=\"n\">x</span><span class=\"bp\">≠</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">A.mulVec</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">A.mulVec</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">use</span> <span class=\"mi\">0</span>\n          <span class=\"n\">use</span> <span class=\"n\">h1</span>\n          <span class=\"n\">constructor</span>\n          <span class=\"bp\">·</span> <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">oppo</span> <span class=\"c1\">-- 机器和人一样对于这种双重否定的问题一样很难理解</span>\n            <span class=\"n\">exact</span> <span class=\"n\">congrFun</span> <span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"n\">oppo.symm</span><span class=\"o\">)</span> <span class=\"n\">h3</span>\n            <span class=\"n\">done</span>\n          <span class=\"n\">constructor</span>\n          <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">mulVec_zero</span> <span class=\"n\">A</span>\n          <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">MainGoal4_1</span> <span class=\"n\">A</span> <span class=\"n\">h1</span><span class=\"o\">]</span>\n            <span class=\"k\">have</span> <span class=\"n\">h8</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">h1</span> <span class=\"n\">x</span> <span class=\"bp\">•</span> <span class=\"k\">fun</span> <span class=\"n\">y</span> <span class=\"bp\">↦</span> <span class=\"n\">A</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n            <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">yi</span> <span class=\"bp\">↦</span> <span class=\"bp\">∑</span> <span class=\"n\">xi</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">h1</span> <span class=\"n\">xi</span> <span class=\"bp\">•</span> <span class=\"n\">A</span> <span class=\"n\">yi</span> <span class=\"n\">xi</span><span class=\"o\">)</span>\n              <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n              <span class=\"n\">ext</span> <span class=\"n\">h8_1</span>\n              <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Finset.sum_apply</span><span class=\"o\">,</span> <span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">smul_apply</span><span class=\"o\">,</span> <span class=\"n\">smul_eq_mul</span><span class=\"o\">]</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">h8</span><span class=\"o\">]</span>\n            <span class=\"n\">clear</span> <span class=\"n\">h8</span>\n            <span class=\"n\">exact</span> <span class=\"n\">h2</span>\n          <span class=\"n\">done</span>\n        <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x1</span><span class=\"o\">,</span><span class=\"n\">x2</span><span class=\"o\">,</span><span class=\"n\">x3</span><span class=\"o\">,</span><span class=\"n\">x4</span><span class=\"o\">,</span><span class=\"n\">x5</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h6_oppo</span>\n        <span class=\"k\">have</span> <span class=\"n\">h4</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">ExistsUnique.unique</span> <span class=\"n\">_h6</span> <span class=\"n\">x4</span> <span class=\"n\">x5</span><span class=\"o\">)</span>\n        <span class=\"n\">exact</span> <span class=\"n\">x3</span> <span class=\"n\">h4</span>\n        <span class=\"n\">done</span>\n\n\n      <span class=\"kd\">theorem</span> <span class=\"n\">MainGoal5</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"c1\">-- 一个大神的证明</span>\n      <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"bp\">∃!</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">A.mulVec</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n      <span class=\"n\">LinearIndependent</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"n\">A.transpose</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n        <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">exact</span> <span class=\"n\">Matrix.mulVec_injective_iff.1</span> <span class=\"o\">((</span><span class=\"n\">Function.bijective_iff_existsUnique</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">hA</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">injective</span>\n        <span class=\"n\">done</span>\n</code></pre></div>",
        "id": 410035924,
        "sender_full_name": "chenjulang",
        "timestamp": 1703602995
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 410035936,
        "sender_full_name": "Notification Bot",
        "timestamp": 1703603001
    }
]