[
    {
        "content": "<p>I was able to access Classical.em, but for some reason 'not_imp' gives me the error <code>error: unknown identifier 'not_imp'</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">Classical</span>\n<span class=\"bp\">#</span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"n\">em</span>\n<span class=\"bp\">#</span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"n\">not_imp</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">Building</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">spearman</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"bp\">./././</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">olean</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">ilean</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">ir</span><span class=\"bp\">/</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"n\">Classical</span><span class=\"bp\">.</span><span class=\"n\">em</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">∨</span><span class=\"w\"> </span><span class=\"bp\">¬</span><span class=\"n\">p</span>\n<span class=\"bp\">./././</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"o\">:</span><span class=\"mi\">7</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">unknown</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"w\"> </span><span class=\"bp\">'</span><span class=\"n\">not_imp'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">external</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">spearman</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">exited</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 442111916,
        "sender_full_name": "Spearman",
        "timestamp": 1717366552
    },
    {
        "content": "<p>That's gonna need more information on your setup to debug, it works in the browser version: <a href=\"https://live.lean-lang.org/#code=open%20Classical%0A%0A%23check%20not_imp\">https://live.lean-lang.org/#code=open%20Classical%0A%0A%23check%20not_imp</a> . What Lean version are you running?</p>",
        "id": 442112633,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1717367167
    },
    {
        "content": "<p><code>Lean (version 4.7.0, x86_64-unknown-linux-gnu, commit 6fce8f7d5cd1, Release)</code></p>",
        "id": 442215328,
        "sender_full_name": "Spearman",
        "timestamp": 1717411233
    },
    {
        "content": "<p><code>Classical.not_imp</code> is in 4.8.0, and <code>not_imp</code> needs you to import Mathlib.Logic.Basic</p>",
        "id": 442220233,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717412643
    },
    {
        "content": "<p>I was able to update now to 4.8.0 and use 'not_imp'.</p>\n<p>I'm confused though, because I have to 'import Init.Classical' or 'open Classical' to access <code>em</code>, but I don't have to import or open Classical to access <code>not_imp</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"n\">em</span>\n<span class=\"bp\">#</span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"n\">not_imp</span>\n\n<span class=\"bp\">✖</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">Building</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">.&gt;</span><span class=\"w\"> </span><span class=\"n\">LEAN_PATH</span><span class=\"bp\">=././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">spearman</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">stable</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"bp\">././././</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"bp\">./././.</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">olean</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">ilean</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">ir</span><span class=\"bp\">/</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"c1\">--json</span>\n<span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././././</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">7</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">unknown</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"w\"> </span><span class=\"bp\">'</span><span class=\"n\">em'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././././</span><span class=\"n\">Main</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Classical</span><span class=\"bp\">.</span><span class=\"n\">not_imp</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">↔</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">∧</span><span class=\"w\"> </span><span class=\"bp\">¬</span><span class=\"n\">b</span>\n<span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Lean</span><span class=\"w\"> </span><span class=\"n\">exited</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 443641574,
        "sender_full_name": "Spearman",
        "timestamp": 1717967022
    },
    {
        "content": "<p>When you do <code>open Classical</code> it makes it so you can refer to <code>Classical.em</code> as <code>em</code> for short.</p>\n<p><code>not_imp</code> is also short for <code>Classical.not_imp</code>, but <a href=\"https://github.com/leanprover/lean4/blob/be6c4894e0a6c542d56a6f4bb1238087267d21a0/src/Init/Classical.lean#L170\">there's an <code>export</code> line</a> that makes it permanently able to be referred to without qualification. The command is making it so that it's like <code>open Classical (not_imp)</code> is automatically at the top of every file.</p>",
        "id": 443642677,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717967903
    }
]