[
    {
        "content": "<p>(deleted)</p>",
        "id": 445750199,
        "sender_full_name": "Lewis",
        "timestamp": 1718853839
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 445750275,
        "sender_full_name": "Lewis",
        "timestamp": 1718853865
    },
    {
        "content": "<p>How to fix this?</p>\n<p>All Messages (3)<br>\nf.lean:14:12</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20fix.20this.3F/near/445750730\">said</a>:</p>\n<p>f.lean:27:2<br>\ninvalid 'end', insufficient scopes<br>\nf.lean:27:5<br>\nunexpected token ','; expected command</p>\n<p>For the lean 4 code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Tactic</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Nat</span><span class=\"bp\">.</span><span class=\"n\">Prime</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Nat</span><span class=\"bp\">.</span><span class=\"n\">Factorial</span><span class=\"bp\">.</span><span class=\"n\">Basic</span>\n\n<span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">Nat</span>\n\n<span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">infinite_primes</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">∃</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">≥</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"bp\">∧</span><span class=\"w\"> </span><span class=\"n\">Prime</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"k\">let</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">factorial</span><span class=\"w\"> </span><span class=\"n\">n</span>\n<span class=\"k\">let</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">minFac</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"bp\">⟨</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"bp\">⟨</span>\n<span class=\"c1\">-- Prove p ≥ n</span>\n<span class=\"n\">begin</span>\n<span class=\"n\">intro</span><span class=\"w\"> </span><span class=\"n\">hp</span><span class=\"o\">,</span>\n<span class=\"n\">push_neg</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">hp</span><span class=\"o\">,</span>\n<span class=\"c1\">-- Since p &lt; n, p should divide factorial of n</span>\n<span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h1</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">∣</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">dvd_factorial</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">minFac_pos</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">le_of_lt</span><span class=\"w\"> </span><span class=\"n\">hp</span><span class=\"o\">),</span>\n<span class=\"c1\">-- p also divides (m + 1)</span>\n<span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h2</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">∣</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">minFac_dvd</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">),</span>\n<span class=\"c1\">-- Thus, p divides the difference, which is 1</span>\n<span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h3</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">∣</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">nat_dvd_sub</span><span class=\"w\"> </span><span class=\"n\">h2</span><span class=\"w\"> </span><span class=\"n\">h1</span><span class=\"o\">,</span>\n<span class=\"c1\">-- p cannot be greater than 1</span>\n<span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h4</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">le_of_dvd</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">decide</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">h3</span><span class=\"o\">,</span>\n<span class=\"c1\">-- But prime p must be at least 2</span>\n<span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h5</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">Prime</span><span class=\"bp\">.</span><span class=\"n\">two_le</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">minFac_prime</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)),</span>\n<span class=\"c1\">-- Contradiction arises</span>\n<span class=\"n\">linarith</span>\n<span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"c1\">-- Prove p is prime</span>\n<span class=\"n\">minFac_prime</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"bp\">⟩⟩</span>\n</code></pre></div>\n<p>Thanks a lot!</p>",
        "id": 445750350,
        "sender_full_name": "Lewis",
        "timestamp": 1718853913
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a></p>",
        "id": 445750512,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718853987
    },
    {
        "content": "<p>2 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"116395\" href=\"/#narrow/stream/116395-maths/topic/How.20to.20fix.20this.3F\">#maths &gt; How to fix this?</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span>.</p>",
        "id": 445750543,
        "sender_full_name": "Notification Bot",
        "timestamp": 1718854004
    },
    {
        "content": "<p>(Please don't double post.)</p>",
        "id": 445750562,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718854020
    },
    {
        "content": "<p><a href=\"#narrow/stream/113489-new-members/topic/How.20to.20fix.20this.3F/near/445750275\">A message</a> was moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/How.20to.20fix.20this.3F\">#mathlib4 &gt; How to fix this?</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span>.</p>",
        "id": 445750665,
        "sender_full_name": "Notification Bot",
        "timestamp": 1718854065
    },
    {
        "content": "<p>Err.. triple post. Really, please do not ever do this again, okay?</p>",
        "id": 445750730,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718854088
    },
    {
        "content": "<p>Deleted; How to fix the errors? Thanks.</p>",
        "id": 445779223,
        "sender_full_name": "Lewis",
        "timestamp": 1718869606
    },
    {
        "content": "<p>Please read <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> and edit your post above</p>",
        "id": 445782805,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718870605
    },
    {
        "content": "<p><code>begin</code>, <code>end</code> and the commas at the ends of lines are all Lean 3 Syntax. You can read the first chapters of one or both of the Lean 4 books <a href=\"https://leanprover.github.io/theorem_proving_in_lean4/\">#tpil</a> or <a href=\"https://leanprover-community.github.io/mathematics_in_lean/\">#mil</a> to get introduced to the Lean 4 syntax.</p>\n<p>Here is a version of your proof in Lean 4 syntax with the errors corrected. If you still have questions, please ask.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib.Data.Nat.Prime</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib.Data.Nat.Factorial.Basic</span>\n\n<span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">Nat</span>\n\n<span class=\"kd\">theorem</span><span class=\"w\"> </span><span class=\"n\">infinite_primes</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">∃</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">≥</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"bp\">∧</span><span class=\"w\"> </span><span class=\"n\">p.Prime</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"k\">let</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">factorial</span><span class=\"w\"> </span><span class=\"n\">n</span>\n<span class=\"w\">  </span><span class=\"k\">let</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">minFac</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h00</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">Nat.one_le_of_lt</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Nat.factorial_pos</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h01</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"bp\">≠</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"kd\">by</span><span class=\"w\"> </span><span class=\"n\">linarith</span>\n<span class=\"w\">  </span><span class=\"o\">⟨</span><span class=\"n\">p</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"kd\">by</span>\n<span class=\"w\">      </span><span class=\"c1\">-- Prove p ≥ n</span>\n<span class=\"w\">      </span><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">ge_iff_le</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"bp\">←</span><span class=\"w\"> </span><span class=\"n\">not_lt</span><span class=\"o\">]</span>\n<span class=\"w\">      </span><span class=\"n\">intro</span><span class=\"w\"> </span><span class=\"n\">hp</span>\n<span class=\"w\">      </span><span class=\"c1\">-- Since p &lt; n, p should divide factorial of n</span>\n<span class=\"w\">      </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h1</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">∣</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">dvd_factorial</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">minFac_pos</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">le_of_lt</span><span class=\"w\"> </span><span class=\"n\">hp</span><span class=\"o\">)</span>\n<span class=\"w\">      </span><span class=\"c1\">-- p also divides (m + 1)</span>\n<span class=\"w\">      </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h2</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">∣</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">minFac_dvd</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"w\">      </span><span class=\"c1\">-- Thus, p divides the difference, which is 1</span>\n<span class=\"w\">      </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h3</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">∣</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">Nat.add_sub_cancel_left</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"bp\">▸</span><span class=\"w\"> </span><span class=\"n\">Nat.dvd_sub</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Nat.le_add_right</span><span class=\"w\"> </span><span class=\"bp\">..</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">h2</span><span class=\"w\"> </span><span class=\"n\">h1</span>\n<span class=\"w\">      </span><span class=\"c1\">-- p cannot be greater than 1</span>\n<span class=\"w\">      </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h4</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">le_of_dvd</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kd\">by</span><span class=\"w\"> </span><span class=\"n\">decide</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">h3</span>\n<span class=\"w\">      </span><span class=\"c1\">-- But prime p must be at least 2</span>\n<span class=\"w\">      </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">h5</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">Prime.two_le</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">minFac_prime</span><span class=\"w\"> </span><span class=\"n\">h01</span><span class=\"o\">)</span>\n<span class=\"w\">      </span><span class=\"c1\">-- Contradiction arises</span>\n<span class=\"w\">      </span><span class=\"n\">linarith</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"c1\">-- Prove p is prime</span>\n<span class=\"w\">    </span><span class=\"n\">minFac_prime</span><span class=\"w\"> </span><span class=\"n\">h01</span><span class=\"o\">⟩</span>\n</code></pre></div>\n</div></div>",
        "id": 445828167,
        "sender_full_name": "Richard Copley",
        "timestamp": 1718885327
    }
]