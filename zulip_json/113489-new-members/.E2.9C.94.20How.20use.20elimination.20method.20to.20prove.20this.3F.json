[
    {
        "content": "<p>Check this goal , and notice that \"Corner_Absolute_Orient g.1 UFL_index : Fin 3\"</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">ha0</span><span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">Corner_Absolute_Orient</span> <span class=\"n\">g.1</span> <span class=\"n\">UFL_index</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">ha1</span><span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">Corner_Absolute_Orient</span> <span class=\"n\">g.1</span> <span class=\"n\">UFL_index</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">Corner_Absolute_Orient</span> <span class=\"n\">g.1</span> <span class=\"n\">UFL_index</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span>\n</code></pre></div>",
        "id": 426348481,
        "sender_full_name": "chenjulang",
        "timestamp": 1710338947
    },
    {
        "content": "<p>How use elimination method to prove this?</p>",
        "id": 426348505,
        "sender_full_name": "chenjulang",
        "timestamp": 1710338954
    },
    {
        "content": "<p>Here is what an <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> for this question could look like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h0</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 426391841,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710350685
    },
    {
        "content": "<p>Thanks</p>",
        "id": 426391898,
        "sender_full_name": "chenjulang",
        "timestamp": 1710350701
    },
    {
        "content": "<p>Does that make sense? It's very helpful to have code we can copy and paste so we can answer your question efficiently. If you don't do this, then anyone who wants to help has to write this themselves.</p>",
        "id": 426391965,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710350727
    },
    {
        "content": "<p>Oh, i see.</p>",
        "id": 426392050,
        "sender_full_name": "chenjulang",
        "timestamp": 1710350757
    },
    {
        "content": "<p>And we might not get the right context, so we might be answering the wrong question.</p>",
        "id": 426392056,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710350761
    },
    {
        "content": "<p>You are right <span aria-label=\"pensive\" class=\"emoji emoji-1f614\" role=\"img\" title=\"pensive\">:pensive:</span></p>",
        "id": 426392173,
        "sender_full_name": "chenjulang",
        "timestamp": 1710350793
    },
    {
        "content": "<p>You can use the <code>generalize</code> tactic in your original goal to turn <code>Corner_Absolute_Orient g.1 UFL_index</code> into <code>a</code>, and then</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h0</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">fin_cases</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"bp\">*</span>\n</code></pre></div>",
        "id": 426392268,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710350829
    },
    {
        "content": "<p>There's also this magic:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h0</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">match</span> <span class=\"n\">a</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">2</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 426392326,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710350856
    },
    {
        "content": "<p>I'll try</p>",
        "id": 426392474,
        "sender_full_name": "chenjulang",
        "timestamp": 1710350893
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 426392494,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710350900
    }
]