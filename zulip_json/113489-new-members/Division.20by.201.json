[
    {
        "content": "<p>Can someone point me in the right direction? Likely I just haven't read enough docs but I can't find the page explaining how to do this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">div_one</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">/</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 420493380,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1707409223
    },
    {
        "content": "<p>what is <code>m</code>?</p>",
        "id": 420493614,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1707409293
    },
    {
        "content": "<p>Also, probably <code>theorem</code> or <code>example</code>, rather than <code>def</code>.</p>",
        "id": 420493740,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707409324
    },
    {
        "content": "<p>Ah, I would like it to be a number, but if it makes things easier assume it is a Nat!</p>",
        "id": 420493793,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1707409331
    },
    {
        "content": "<p>I just noticed there is also <code>div_eq</code>, so probably I can force push my way through this, but if there is an elegant way of doing it I would love to hear so</p>",
        "id": 420493929,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1707409376
    },
    {
        "content": "<p>In <code>std</code> this lemma already exists: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.div_one#doc\">docs#Nat.div_one</a>`.  Is this what you are looking for?</p>",
        "id": 420494285,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707409484
    },
    {
        "content": "<p>Yes! I guess I don't have matlib4 installed because simp doesn't close the goal for me...?</p>",
        "id": 420494454,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1707409544
    },
    {
        "content": "<p>You do not even have <code>Std</code>, it seems.</p>",
        "id": 420494684,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707409609
    },
    {
        "content": "<p>At some point you will have to prove something by induction, that's just the way it is. What do you mean by \"number\"? Real, rational?</p>",
        "id": 420494709,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1707409619
    },
    {
        "content": "<p>This can be proved for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=DivInvMonoid#doc\">docs#DivInvMonoid</a> s, I think, but it's somewhat cheating...</p>\n<p>e: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=DivInvOneMonoid#doc\">docs#DivInvOneMonoid</a> !</p>",
        "id": 420494798,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1707409643
    },
    {
        "content": "<p>I guess I just want to prove it for Nat, then, I'm not looking to prove it for anything else.</p>",
        "id": 420495050,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1707409720
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/Division.20by.201/near/420494684\">said</a>:</p>\n<blockquote>\n<p>You do not even have <code>Std</code>, it seems.</p>\n</blockquote>\n<p>If I do \"#check Std\" indeed I can't ctrl+click to anything. Is this part of matlib or a more general package?</p>",
        "id": 420495131,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1707409745
    },
    {
        "content": "<p>Rather than <code>#check</code>, try <code>import Std</code>.  <code>Mathlib</code> depends on <code>Std</code>, so, in some sense, it is <code>Std</code> that is a part of <code>Mathlib</code>, not the other way round.</p>",
        "id": 420495845,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707409946
    },
    {
        "content": "<p>If you intend to do anything at all mathematical, almost certainly it will be beneficial to use <code>Mathlib</code>.  Not depending on <code>Std</code> means really going way back!</p>",
        "id": 420496090,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707410021
    },
    {
        "content": "<p>This answers many more questions than I intended to ask. Thanks!</p>",
        "id": 420496739,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1707410209
    }
]