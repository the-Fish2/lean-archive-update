[
    {
        "content": "<p>I found some ways to use Lean like a Computer Algebra System (CAS) to do simple calculations. This doesn't produce proofs but by looking in the output window you can see the calculations:</p>\n<p><strong>Expand</strong><br>\nSay I want to find the expansion of <code>(x+y)^3</code></p>\n<p>I can write:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n<span class=\"kn\">example</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">expr</span><span class=\"o\">:</span><span class=\"n\">Rat</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">+</span><span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">ring_nf</span>\n</code></pre></div>\n<p><strong>Multiply matrices</strong><br>\nMultiplying matrices of variables.  (Have to specify the type of at least one).</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n<span class=\"kn\">example</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"n\">expr</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"bp\">!!</span><span class=\"o\">[(</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"n\">Rat</span><span class=\"o\">),</span><span class=\"n\">b</span><span class=\"bp\">;</span><span class=\"n\">c</span><span class=\"o\">,</span><span class=\"n\">d</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"bp\">!!</span><span class=\"o\">[</span><span class=\"n\">e</span><span class=\"o\">,</span><span class=\"n\">f</span><span class=\"bp\">;</span><span class=\"n\">g</span><span class=\"o\">,</span><span class=\"n\">h</span><span class=\"o\">]</span><span class=\"w\">  </span><span class=\"o\">:=</span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n</code></pre></div>\n<p><strong>Expand numerical expesssions</strong><br>\nIsn't always easiest to get it to the simplest form:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">example</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">expr</span><span class=\"o\">:</span><span class=\"n\">Real</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">âˆš</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">ring_nf</span><span class=\"bp\">;</span><span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Real</span><span class=\"bp\">.</span><span class=\"n\">sq_sqrt</span><span class=\"o\">]</span><span class=\"bp\">;</span><span class=\"n\">ring_nf</span>\n</code></pre></div>\n<p>I don't think it can do factorisation. Do you know any other simple \"hacks\" to do CAS-like calculations?</p>",
        "id": 444940843,
        "sender_full_name": "Mr Proof",
        "timestamp": 1718513338
    }
]