[
    {
        "content": "<p>Does <code>cashflowExample22</code> below correctly create the cashflow sequence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><msub><mi>t</mi><mi>k</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a_k, t_k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>k</mi></msub><mo>=</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">a_k = 1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1000</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>k</mi></msub><mo>=</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">t_k = k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">k = 1,\\ldots, 10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">10</span></span></span></span>? How could I check?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Cashflow</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">time</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">amount</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">CashflowSequence</span> <span class=\"o\">:=</span> <span class=\"n\">List</span> <span class=\"n\">Cashflow</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">sampleCashflowdonethelongway</span> <span class=\"o\">:</span> <span class=\"n\">CashflowSequence</span> <span class=\"o\">:=</span>\n  <span class=\"o\">[</span>\n    <span class=\"o\">{</span> <span class=\"n\">time</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">amount</span> <span class=\"o\">:=</span> <span class=\"mi\">1000</span> <span class=\"o\">},</span>    <span class=\"c1\">-- Principal payment at time 0</span>\n    <span class=\"o\">{</span> <span class=\"n\">time</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">amount</span> <span class=\"o\">:=</span> <span class=\"mi\">60</span> <span class=\"o\">},</span>      <span class=\"c1\">-- Coupon payment at time 1</span>\n    <span class=\"o\">{</span> <span class=\"n\">time</span> <span class=\"o\">:=</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">amount</span> <span class=\"o\">:=</span> <span class=\"mi\">60</span> <span class=\"o\">},</span>      <span class=\"c1\">-- Coupon payment at time 2</span>\n    <span class=\"o\">{</span> <span class=\"n\">time</span> <span class=\"o\">:=</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">amount</span> <span class=\"o\">:=</span> <span class=\"mi\">1060</span> <span class=\"o\">}</span>     <span class=\"c1\">-- Coupon payment + principal at maturity</span>\n  <span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">cashflowExample22</span> <span class=\"o\">:</span> <span class=\"n\">CashflowSequence</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">List.range</span> <span class=\"mi\">10</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">k</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">{</span> <span class=\"n\">time</span> <span class=\"o\">:=</span> <span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">amount</span> <span class=\"o\">:=</span> <span class=\"mi\">1000</span> <span class=\"o\">})</span>\n</code></pre></div>\n<p>I learned about <code>List.range</code> from ChatGPT. But then I couldn't find anything about <code>range</code> in the docs. Where should I have looked? Where should I look to find things about lists in general?</p>",
        "id": 422287122,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1708366651
    },
    {
        "content": "<blockquote>\n<p>But then I couldn't find anything about range in the docs.</p>\n</blockquote>\n<p>Did you find <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=List.range#doc\">docs#List.range</a> ?</p>",
        "id": 422289997,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708368309
    },
    {
        "content": "<p>No I didn't. Thanks for the pointer.</p>",
        "id": 422290955,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1708368888
    },
    {
        "content": "<p>The first place you should look in the docs for to find out about<code>Foo.bar</code> is in the search bar in the docs by typing <code>Foo.bar</code>, which is what docs# does for you</p>",
        "id": 422296268,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708371778
    },
    {
        "content": "<p>Side question: what do the <code>&lt;|</code>'s mean in <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=List.foldr#doc\">docs#List.foldr</a> 's <code>foldr f init [a, b, c] = f a &lt;| f b &lt;| f c &lt;| init</code>?</p>",
        "id": 422296628,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1708371963
    },
    {
        "content": "<p>If you type it in vscode (as part of a working example), vscode will tell you if you hover over it</p>",
        "id": 422297704,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708372526
    },
    {
        "content": "<p>They're like open parentheses that don't need to be closed.</p>",
        "id": 422299140,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1708373339
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245476\">Quinn Culver</span> has marked this topic as resolved.</p>",
        "id": 423204474,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708809655
    }
]