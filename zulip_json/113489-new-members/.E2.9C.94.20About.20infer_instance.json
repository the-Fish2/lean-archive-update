[
    {
        "content": "<p>Is test001 same as test002 ?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">test001</span> <span class=\"o\">:</span> <span class=\"n\">CompleteLattice</span> <span class=\"o\">(</span><span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"bp\">@</span><span class=\"n\">Subgroup.instCompleteLatticeSubgroup</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">test002</span> <span class=\"o\">:</span> <span class=\"n\">CompleteLattice</span> <span class=\"o\">(</span><span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">infer_instance</span>\n</code></pre></div>",
        "id": 435756872,
        "sender_full_name": "chenjulang",
        "timestamp": 1714224109
    },
    {
        "content": "<p>Well you can't tell, because you make them <code>lemma</code>s but <code>CompleteLattice (Subgroup G)</code> is not a theorem statement, it's data. If you make them definitions then you can test with <code>rfl</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">test001</span> <span class=\"o\">:</span> <span class=\"n\">CompleteLattice</span> <span class=\"o\">(</span><span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"bp\">@</span><span class=\"n\">Subgroup.instCompleteLatticeSubgroup</span>\n<span class=\"kd\">def</span> <span class=\"n\">test002</span> <span class=\"o\">:</span> <span class=\"n\">CompleteLattice</span> <span class=\"o\">(</span><span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">infer_instance</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">test001</span> <span class=\"bp\">=</span> <span class=\"bp\">@</span><span class=\"n\">test002</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span> <span class=\"c1\">-- they are definitionally equal</span>\n</code></pre></div>",
        "id": 435757261,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714224453
    },
    {
        "content": "<p>If <code>CompleteLattice (Subgroup G)</code> _had_ been a Prop then the answer to your question would have been \"yes, by an axiom of Lean\":</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">test001</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">test002</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">test001</span> <span class=\"bp\">=</span> <span class=\"n\">test002</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 435757349,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714224534
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 435758491,
        "sender_full_name": "Notification Bot",
        "timestamp": 1714225559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> By the way , the \"FormalisingMathematics2024\" course is Fantastic for new learners. Looking forward to more undergraduate courses.</p>",
        "id": 435759801,
        "sender_full_name": "chenjulang",
        "timestamp": 1714226563
    },
    {
        "content": "<p>I'm glad that you find it useful!</p>",
        "id": 435761022,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714227555
    }
]