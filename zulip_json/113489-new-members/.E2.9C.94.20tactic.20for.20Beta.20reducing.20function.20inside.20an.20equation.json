[
    {
        "content": "<p>Hi,</p>\n<p>I know this is a super basic question. I'm doing proof and I've got all the cases covered, but I just need to tell Lean to fully reduce all the function applications inside the equation. I don't know what tactic achieves this. I've been searching the docs, but I can't figure it out. </p>\n<p><a href=\"/user_uploads/3121/qU0njGTrBm3QR_hnxLRvU34n/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/qU0njGTrBm3QR_hnxLRvU34n/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/qU0njGTrBm3QR_hnxLRvU34n/image.png\"></a></div><p>This is from the infoview. </p>\n<p><code>Morph.comp f id_E</code> simply equals <code>f</code> by definition. I've tried using simp, dsimp, rfl, and decide but it doesn't accept it.</p>\n<p>I guess I need to tell it to apply  beta reduction to the left side of each case equation. I could do this one at a time by proving the reduction for all four of my cases and then using those with <code>rw</code>, but that seems highly tedious and I assume it shouldn't be necessary.</p>",
        "id": 411254279,
        "sender_full_name": "Avi Craimer",
        "timestamp": 1704398982
    },
    {
        "content": "<p>Update, I figured out something that worked. </p>\n<p>My complete proof looks like this::</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">unit_right</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">intro</span> <span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">f</span>\n     <span class=\"n\">cases</span> <span class=\"n\">f</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 411256379,
        "sender_full_name": "Avi Craimer",
        "timestamp": 1704400010
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"346046\">Avi Craimer</span> has marked this topic as resolved.</p>",
        "id": 411256423,
        "sender_full_name": "Notification Bot",
        "timestamp": 1704400039
    },
    {
        "content": "<p>BTW if <code>rfl</code> doesn't work then your claim that the two sides are definitely equal is probably incorrect. Definitions made by recursion are sometimes more complex under the hood than you might think.</p>",
        "id": 411298872,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1704421838
    }
]