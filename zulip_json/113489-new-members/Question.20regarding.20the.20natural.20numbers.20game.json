[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">Objects</span><span class=\"o\">:</span>\n<span class=\"bp\">**</span><span class=\"n\">ab</span><span class=\"bp\">**</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span>\n\n<span class=\"n\">Goal</span><span class=\"o\">:</span>\n\n<span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Why can't i use the tactic add_left_cancel here?</p>",
        "id": 442111225,
        "sender_full_name": "metakuntyyy",
        "timestamp": 1717365990
    },
    {
        "content": "<p>I have tried for 20 minutes with rw and apply nothing worked</p>",
        "id": 442111272,
        "sender_full_name": "metakuntyyy",
        "timestamp": 1717366023
    },
    {
        "content": "<p>First, see <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>. Also, <code>add_left_cancel</code> takes a proof of <code>a + b = a + c</code> and generates <code>b = c</code>. You want the theorem which takes <code>b = c</code> and proves <code>a + b = a + c</code>. Remember that the goal is not something you can give to theorems. It is something that needs to be proven true. What other theorems do you have available to you?</p>",
        "id": 442117144,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1717370741
    }
]