[
    {
        "content": "<p>Hi I am stuck at the following lemma:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.CategoryTheory.Limits.Shapes.Pullbacks</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.CategoryTheory.Limits.Preserves.Limits</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">CategoryTheory</span> <span class=\"n\">Category</span> <span class=\"n\">Functor</span> <span class=\"n\">Limits</span> <span class=\"n\">IsLimit</span>\n<span class=\"kd\">universe</span> <span class=\"n\">v</span> <span class=\"n\">u</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">C</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">D</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">D</span><span class=\"o\">]</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">C</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">HasLimits</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">D</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">HasLimits</span> <span class=\"n\">D</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">X₁</span> <span class=\"n\">X₂</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">}</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">f₁</span><span class=\"o\">:</span> <span class=\"n\">X₁</span> <span class=\"bp\">⟶</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f₂</span><span class=\"o\">:</span> <span class=\"n\">X₂</span> <span class=\"bp\">⟶</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">Y</span> <span class=\"bp\">⟶</span> <span class=\"n\">Z</span><span class=\"o\">)</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">F</span><span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">⥤</span> <span class=\"n\">D</span><span class=\"o\">)</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">eq1</span> <span class=\"o\">:</span>  <span class=\"n\">pullback</span> <span class=\"o\">(</span><span class=\"n\">F.map</span> <span class=\"o\">(</span><span class=\"n\">f₁</span> <span class=\"bp\">≫</span> <span class=\"n\">g</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">F.map</span> <span class=\"o\">(</span><span class=\"n\">f₂</span> <span class=\"bp\">≫</span> <span class=\"n\">g</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">pullback</span> <span class=\"o\">(</span><span class=\"n\">F.map</span> <span class=\"n\">f₁</span> <span class=\"bp\">≫</span> <span class=\"n\">F.map</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F.map</span> <span class=\"n\">f₂</span> <span class=\"bp\">≫</span> <span class=\"n\">F.map</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">congr</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">apply</span> <span class=\"n\">F.map_comp</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">eq2</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">eqToHom</span> <span class=\"o\">(</span><span class=\"n\">eq1</span> <span class=\"n\">f₁</span> <span class=\"n\">f₂</span> <span class=\"n\">g</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"bp\">≫</span> <span class=\"n\">pullback.fst</span> <span class=\"bp\">=</span> <span class=\"n\">pullback.fst</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Is it any way to prove this? Directly rewrite <code>eqToHom</code> seems giving a harder goal</p>",
        "id": 438174251,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1715508675
    },
    {
        "content": "<p>It is possible to prove, but a better approach would be to use <code>pullback.congrHom</code>.</p>",
        "id": 438175896,
        "sender_full_name": "Joël Riou",
        "timestamp": 1715510485
    },
    {
        "content": "<p>Oh I didn't notice it before. Thank you very much for mentioning <code>pullback.congrHom</code>. Yeah I am switching to use it.</p>",
        "id": 438176357,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1715511003
    }
]