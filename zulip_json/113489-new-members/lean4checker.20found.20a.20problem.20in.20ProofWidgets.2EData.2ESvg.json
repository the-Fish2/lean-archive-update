[
    {
        "content": "<p>I'm trying to use lean4checker. In a basically empty project that depends on Mathlib, I get a \"problem\" reported in <code>ProofWidgets.Data.Svg</code>. Does anyone know how to investigate this? It doesn't seem like Lean4checker has built-in ways to get  more information?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">&gt;</span> <span class=\"n\">lake</span> <span class=\"n\">env</span> <span class=\"bp\">../</span><span class=\"n\">lean4checker</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean4checker</span>\n<span class=\"n\">lean4checker</span> <span class=\"n\">found</span> <span class=\"n\">a</span> <span class=\"n\">problem</span> <span class=\"k\">in</span> <span class=\"n\">ProofWidgets.Data.Svg</span>\n</code></pre></div>",
        "id": 420064958,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707231268
    },
    {
        "content": "<p>Likely this issue:<br>\nThe ProofWidgets “cloud release”, which you download for the <code>.js</code> files,  contains <code>.oleans</code> that may not be compatible with your version of lean/lean4checker, but are still picked up because <code>lean4checker</code> simply checks all of <code>**/*.olean</code>.</p>\n<p>A work-around (also used by mathlib ci) is to delete </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">rf</span> <span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span>\n<span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">rf</span> <span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">ir</span>\n</code></pre></div>\n<p>More context in <a href=\"#narrow/stream/287929-mathlib4/topic/nightly-testing/near/411225235\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/nightly-testing/near/411225235</a></p>",
        "id": 420130339,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1707251489
    },
    {
        "content": "<p>Thanks! Now I get no issues locally but on GitHub Actions I get \"lean4checker found a problem in Mathlib\", which is weirdly unspecific. Could it be due to the .oleans downloaded in the cache being incompatible somehow? On the other hand, people use lean4checker in GitHub Actions, so I'm puzzled...</p>",
        "id": 420247815,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707311258
    },
    {
        "content": "<p>\"lean4checker found a problem in Mathlib\" isn't actually unspecific, it's saying it found a problem in the root file, which is also the first file read, so probably there is some issue that affects every .olean file</p>",
        "id": 420248305,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707311414
    },
    {
        "content": "<p>The most likely issue is that your lean4checker is not built for the same version of lean as the olean files you are downloading</p>",
        "id": 420248373,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707311439
    },
    {
        "content": "<p>try setting the lean-toolchain of lean4checker to match mathlib and recompile it</p>",
        "id": 420248438,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707311463
    },
    {
        "content": "<p>I did copy over the toolchain from mathlib to lean4checker (even in the CI).</p>",
        "id": 420248504,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707311486
    },
    {
        "content": "<p>For reference, this is my <a href=\"https://github.com/adomasbaliuka/lean4-hacking/blob/main/.github/workflows/push.yml\">Github workflow</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>      <span class=\"bp\">-</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">Get</span> <span class=\"n\">cache</span>\n        <span class=\"n\">run</span><span class=\"o\">:</span> <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lake</span> <span class=\"bp\">-</span><span class=\"n\">Kenv</span><span class=\"bp\">=</span><span class=\"n\">dev</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n\n      <span class=\"bp\">-</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">Build</span> <span class=\"n\">project</span>\n        <span class=\"n\">run</span><span class=\"o\">:</span> <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lake</span> <span class=\"bp\">-</span><span class=\"n\">Kenv</span><span class=\"bp\">=</span><span class=\"n\">dev</span> <span class=\"n\">build</span> <span class=\"n\">Lean4Hacking</span>\n\n      <span class=\"bp\">-</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">check</span> <span class=\"n\">that</span> <span class=\"n\">all</span> <span class=\"n\">files</span> <span class=\"n\">are</span> <span class=\"n\">imported</span>\n        <span class=\"n\">run</span><span class=\"o\">:</span> <span class=\"n\">git</span> <span class=\"n\">diff</span> <span class=\"c1\">--exit-code</span>\n\n      <span class=\"bp\">-</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">check</span> <span class=\"n\">environments</span> <span class=\"n\">using</span> <span class=\"n\">lean4checker</span>\n        <span class=\"n\">id</span><span class=\"o\">:</span> <span class=\"n\">lean4checker</span>\n        <span class=\"n\">run</span><span class=\"o\">:</span> <span class=\"bp\">|</span>\n          <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4checker</span>\n          <span class=\"n\">cd</span> <span class=\"n\">lean4checker</span>\n          <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"n\">toolchain</span><span class=\"bp\">/</span><span class=\"n\">v4.5.0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span>\n          <span class=\"bp\">#</span> <span class=\"n\">Now</span> <span class=\"n\">that</span> <span class=\"n\">the</span> <span class=\"n\">git</span> <span class=\"n\">hash</span> <span class=\"n\">is</span> <span class=\"n\">embedded</span> <span class=\"k\">in</span> <span class=\"n\">each</span> <span class=\"n\">olean</span><span class=\"o\">,</span>\n          <span class=\"bp\">#</span> <span class=\"n\">we</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">compile</span> <span class=\"n\">lean4checker</span> <span class=\"n\">on</span> <span class=\"n\">the</span> <span class=\"n\">same</span> <span class=\"n\">toolchain</span>\n          <span class=\"n\">cp</span> <span class=\"bp\">../</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span> <span class=\"bp\">.</span>\n          <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lake</span> <span class=\"n\">build</span>\n          <span class=\"bp\">#</span> <span class=\"n\">sed</span> <span class=\"bp\">-</span><span class=\"n\">i</span> <span class=\"bp\">'</span><span class=\"n\">s</span><span class=\"bp\">/</span><span class=\"n\">lake</span><span class=\"bp\">/~\\/.</span><span class=\"n\">elan</span><span class=\"bp\">\\/</span><span class=\"n\">bin</span><span class=\"bp\">\\/</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">g'</span> <span class=\"bp\">./</span><span class=\"n\">test.sh</span>\n          <span class=\"bp\">#</span> <span class=\"bp\">./</span><span class=\"n\">test.sh</span>\n          <span class=\"n\">cd</span> <span class=\"bp\">..</span>\n\n          <span class=\"bp\">#</span> <span class=\"n\">Remove</span> <span class=\"n\">proofwidgets</span> <span class=\"n\">because</span> <span class=\"n\">it</span> <span class=\"n\">uses</span> <span class=\"n\">oleans</span> <span class=\"n\">built</span> <span class=\"n\">on</span> <span class=\"n\">another</span> <span class=\"n\">system</span><span class=\"o\">,</span> <span class=\"n\">which</span> <span class=\"n\">lean4checker</span> <span class=\"n\">rejects</span>\n          <span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">rf</span> <span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span>\n          <span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">rf</span> <span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">ir</span>\n          <span class=\"bp\">~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lake</span> <span class=\"n\">env</span> <span class=\"n\">lean4checker</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean4checker</span>\n</code></pre></div>",
        "id": 420248872,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707311611
    },
    {
        "content": "<blockquote>\n<p><code>git checkout toolchain/v4.5.0-rc1</code></p>\n</blockquote>\n<p>Isn't mathlib on v4.6.0-rc1 now?</p>",
        "id": 420249095,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707311682
    },
    {
        "content": "<p>I copied this from some other CI... but yeah, that might be a problem. Will look at the versions</p>",
        "id": 420249402,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707311790
    },
    {
        "content": "<p>I think it's okay, it's saying that this is the 4.5.0-rc1 version of leanchecker but the toolchain is replaced afterwards so as long as the build works it should be fine</p>",
        "id": 420249553,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707311849
    },
    {
        "content": "<p>can you replicate the issue locally?</p>",
        "id": 420249693,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707311891
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/lean4checker.20found.20a.20problem.20in.20ProofWidgets.2EData.2ESvg/near/420249693\">said</a>:</p>\n<blockquote>\n<p>can you replicate the issue locally?</p>\n</blockquote>\n<p>Unfortunately not</p>",
        "id": 420249728,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707311904
    },
    {
        "content": "<p>do you have a CI run you can link to?</p>",
        "id": 420249795,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707311919
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/lean4checker.20found.20a.20problem.20in.20ProofWidgets.2EData.2ESvg/near/420249795\">said</a>:</p>\n<blockquote>\n<p>do you have a CI run you can link to?</p>\n</blockquote>\n<p><a href=\"https://github.com/adomasbaliuka/lean4-hacking/actions/runs/7811927086/job/21307917732\">https://github.com/adomasbaliuka/lean4-hacking/actions/runs/7811927086/job/21307917732</a></p>",
        "id": 420249866,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707311947
    },
    {
        "content": "<p>your lean-toolchain says v4.5.0</p>",
        "id": 420249936,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707311974
    },
    {
        "content": "<p>Is that a problem? There's too many versions of things that are confusing me. There's the Lean versions used to build Mathlib, lean4checker and my project, and then there's the versions of lean4checker and Mathlib themselves...</p>",
        "id": 420250501,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707312143
    },
    {
        "content": "<p>I think it's not a problem</p>",
        "id": 420250668,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707312203
    },
    {
        "content": "<p>lean4checker is not particularly chatty. Can you run something like <code>xxd ./.lake/build/lib/Mathlib.olean | head -5</code> and <code>xxd ./lean4checker/.lake/build/lib/Lean4Checker.olean | head -5</code>?</p>",
        "id": 420250962,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707312287
    },
    {
        "content": "<p>Is there a way to single-thread lean4checker? Locally it runs out of memory for me. (So I can't reproduce neither the positive nor negative outcome locally, it just passes individual modules)</p>",
        "id": 420251377,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707312396
    },
    {
        "content": "<p><code>env LEAN_NUM_THREADS=1 lake env lean4checker</code></p>",
        "id": 420251467,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707312425
    },
    {
        "content": "<p>there might also be an option in lean4checker itself, but that affects any lean threadpools</p>",
        "id": 420251533,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707312448
    },
    {
        "content": "<p>Tough luck... it still crashes with out-of-memory locally. 25GB is not enough. I'm running the <code>xxd</code>, so far got</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">xxd</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib.olean</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n<span class=\"n\">xxd</span><span class=\"o\">:</span> <span class=\"n\">Broken</span> <span class=\"n\">pipe</span>\n<span class=\"mi\">00000000</span><span class=\"o\">:</span> <span class=\"mi\">6</span><span class=\"n\">f6c</span> <span class=\"mi\">6561</span> <span class=\"mi\">6</span><span class=\"n\">e01</span> <span class=\"mi\">3161</span> <span class=\"mi\">3330</span> <span class=\"mi\">3231</span> <span class=\"mi\">6639</span> <span class=\"mi\">3865</span>  <span class=\"n\">olean.1a3021f98e</span>\n<span class=\"mi\">00000010</span><span class=\"o\">:</span> <span class=\"mi\">3535</span> <span class=\"mi\">6132</span> <span class=\"mi\">3734</span> <span class=\"mi\">3231</span> <span class=\"mi\">3762</span> <span class=\"mi\">3362</span> <span class=\"mi\">6266</span> <span class=\"mi\">3932</span>  <span class=\"mi\">55</span><span class=\"n\">a274217b3bbf92</span>\n<span class=\"mi\">00000020</span><span class=\"o\">:</span> <span class=\"mi\">6232</span> <span class=\"mi\">6434</span> <span class=\"mi\">3439</span> <span class=\"mi\">6261</span> <span class=\"mi\">6538</span> <span class=\"mi\">3433</span> <span class=\"mi\">6333</span> <span class=\"mi\">0000</span>  <span class=\"n\">b2d449bae843c3..</span>\n<span class=\"mi\">00000030</span><span class=\"o\">:</span> <span class=\"mi\">0000</span> <span class=\"n\">e4a1</span> <span class=\"mi\">4</span><span class=\"n\">b4e</span> <span class=\"mi\">0000</span> <span class=\"n\">b829</span> <span class=\"n\">e4a1</span> <span class=\"mi\">4</span><span class=\"n\">b4e</span> <span class=\"mi\">0000</span>  <span class=\"bp\">....</span><span class=\"n\">KN...</span><span class=\"o\">)</span><span class=\"bp\">..</span><span class=\"n\">KN..</span>\n<span class=\"mi\">00000040</span><span class=\"o\">:</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span> <span class=\"mi\">0100</span> <span class=\"mi\">00</span><span class=\"n\">f9</span> <span class=\"mi\">0500</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span>  <span class=\"bp\">................</span>\n</code></pre></div>",
        "id": 420252253,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707312663
    },
    {
        "content": "<p>Weird the Mathlib olean isn't there... (it's also not there locally, so at least that makes sense)</p>",
        "id": 420252422,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707312713
    },
    {
        "content": "<p>it should have been downloaded by <code>lake exe cache get</code>?</p>",
        "id": 420253204,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707312932
    },
    {
        "content": "<p>oh it's at <code>.lake/packages/Mathlib/.lake/build/lib/Mathlib.olean</code></p>",
        "id": 420253365,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707312966
    },
    {
        "content": "<p><a href=\"https://github.com/adomasbaliuka/lean4-hacking/actions/runs/7815676720/job/21319499331\">New output in CI</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">00000000</span><span class=\"o\">:</span> <span class=\"mi\">6</span><span class=\"n\">f6c</span> <span class=\"mi\">6561</span> <span class=\"mi\">6</span><span class=\"n\">e01</span> <span class=\"mi\">3161</span> <span class=\"mi\">3330</span> <span class=\"mi\">3231</span> <span class=\"mi\">6639</span> <span class=\"mi\">3865</span>  <span class=\"n\">olean.1a3021f98e</span>\n<span class=\"mi\">00000010</span><span class=\"o\">:</span> <span class=\"mi\">3535</span> <span class=\"mi\">6132</span> <span class=\"mi\">3734</span> <span class=\"mi\">3231</span> <span class=\"mi\">3762</span> <span class=\"mi\">3362</span> <span class=\"mi\">6266</span> <span class=\"mi\">3932</span>  <span class=\"mi\">55</span><span class=\"n\">a274217b3bbf92</span>\n<span class=\"mi\">00000020</span><span class=\"o\">:</span> <span class=\"mi\">6232</span> <span class=\"mi\">6434</span> <span class=\"mi\">3439</span> <span class=\"mi\">6261</span> <span class=\"mi\">6538</span> <span class=\"mi\">3433</span> <span class=\"mi\">6333</span> <span class=\"mi\">0000</span>  <span class=\"n\">b2d449bae843c3..</span>\n<span class=\"mi\">00000030</span><span class=\"o\">:</span> <span class=\"mi\">0000</span> <span class=\"n\">a102</span> <span class=\"mi\">490</span><span class=\"n\">f</span> <span class=\"mi\">0000</span> <span class=\"n\">e8f8</span> <span class=\"n\">a602</span> <span class=\"mi\">490</span><span class=\"n\">f</span> <span class=\"mi\">0000</span>  <span class=\"bp\">....</span><span class=\"n\">I.......I...</span>\n<span class=\"mi\">00000040</span><span class=\"o\">:</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span> <span class=\"mi\">0100</span> <span class=\"mi\">00</span><span class=\"n\">f9</span> <span class=\"mi\">0500</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span>  <span class=\"bp\">................</span>\n\n<span class=\"mi\">00000000</span><span class=\"o\">:</span> <span class=\"mi\">6</span><span class=\"n\">f6c</span> <span class=\"mi\">6561</span> <span class=\"mi\">6</span><span class=\"n\">e01</span> <span class=\"mi\">3161</span> <span class=\"mi\">3330</span> <span class=\"mi\">3231</span> <span class=\"mi\">6639</span> <span class=\"mi\">3865</span>  <span class=\"n\">olean.1a3021f98e</span>\n<span class=\"mi\">00000010</span><span class=\"o\">:</span> <span class=\"mi\">3535</span> <span class=\"mi\">6132</span> <span class=\"mi\">3734</span> <span class=\"mi\">3231</span> <span class=\"mi\">3762</span> <span class=\"mi\">3362</span> <span class=\"mi\">6266</span> <span class=\"mi\">3932</span>  <span class=\"mi\">55</span><span class=\"n\">a274217b3bbf92</span>\n<span class=\"mi\">00000020</span><span class=\"o\">:</span> <span class=\"mi\">6232</span> <span class=\"mi\">6434</span> <span class=\"mi\">3439</span> <span class=\"mi\">6261</span> <span class=\"mi\">6538</span> <span class=\"mi\">3433</span> <span class=\"mi\">6333</span> <span class=\"mi\">0000</span>  <span class=\"n\">b2d449bae843c3..</span>\n<span class=\"mi\">00000030</span><span class=\"o\">:</span> <span class=\"mi\">0000</span> <span class=\"n\">e4a1</span> <span class=\"mi\">4</span><span class=\"n\">b4e</span> <span class=\"mi\">0000</span> <span class=\"n\">b829</span> <span class=\"n\">e4a1</span> <span class=\"mi\">4</span><span class=\"n\">b4e</span> <span class=\"mi\">0000</span>  <span class=\"bp\">....</span><span class=\"n\">KN...</span><span class=\"o\">)</span><span class=\"bp\">..</span><span class=\"n\">KN..</span>\n<span class=\"mi\">00000040</span><span class=\"o\">:</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span> <span class=\"mi\">0100</span> <span class=\"mi\">00</span><span class=\"n\">f9</span> <span class=\"mi\">0500</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span>  <span class=\"bp\">................</span>\n</code></pre></div>\n<p>Meanwhile locally, (which seems identical)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">&gt;</span>  <span class=\"n\">xxd</span> <span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib.olean</span> <span class=\"bp\">|</span> <span class=\"n\">head</span> <span class=\"bp\">-</span><span class=\"mi\">5</span>\n<span class=\"mi\">00000000</span><span class=\"o\">:</span> <span class=\"mi\">6</span><span class=\"n\">f6c</span> <span class=\"mi\">6561</span> <span class=\"mi\">6</span><span class=\"n\">e01</span> <span class=\"mi\">3161</span> <span class=\"mi\">3330</span> <span class=\"mi\">3231</span> <span class=\"mi\">6639</span> <span class=\"mi\">3865</span>  <span class=\"n\">olean.1a3021f98e</span>\n<span class=\"mi\">00000010</span><span class=\"o\">:</span> <span class=\"mi\">3535</span> <span class=\"mi\">6132</span> <span class=\"mi\">3734</span> <span class=\"mi\">3231</span> <span class=\"mi\">3762</span> <span class=\"mi\">3362</span> <span class=\"mi\">6266</span> <span class=\"mi\">3932</span>  <span class=\"mi\">55</span><span class=\"n\">a274217b3bbf92</span>\n<span class=\"mi\">00000020</span><span class=\"o\">:</span> <span class=\"mi\">6232</span> <span class=\"mi\">6434</span> <span class=\"mi\">3439</span> <span class=\"mi\">6261</span> <span class=\"mi\">6538</span> <span class=\"mi\">3433</span> <span class=\"mi\">6333</span> <span class=\"mi\">0000</span>  <span class=\"n\">b2d449bae843c3..</span>\n<span class=\"mi\">00000030</span><span class=\"o\">:</span> <span class=\"mi\">0000</span> <span class=\"n\">a102</span> <span class=\"mi\">490</span><span class=\"n\">f</span> <span class=\"mi\">0000</span> <span class=\"n\">e8f8</span> <span class=\"n\">a602</span> <span class=\"mi\">490</span><span class=\"n\">f</span> <span class=\"mi\">0000</span>  <span class=\"bp\">....</span><span class=\"n\">I.......I...</span>\n<span class=\"mi\">00000040</span><span class=\"o\">:</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span> <span class=\"mi\">0100</span> <span class=\"mi\">00</span><span class=\"n\">f9</span> <span class=\"mi\">0500</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span>  <span class=\"bp\">................</span>\n\n<span class=\"bp\">&gt;</span> <span class=\"n\">xxd</span> <span class=\"bp\">../</span><span class=\"n\">lean4checker</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Lean4Checker.olean</span> <span class=\"bp\">|</span> <span class=\"n\">head</span> <span class=\"bp\">-</span><span class=\"mi\">5</span>\n<span class=\"mi\">00000000</span><span class=\"o\">:</span> <span class=\"mi\">6</span><span class=\"n\">f6c</span> <span class=\"mi\">6561</span> <span class=\"mi\">6</span><span class=\"n\">e01</span> <span class=\"mi\">3161</span> <span class=\"mi\">3330</span> <span class=\"mi\">3231</span> <span class=\"mi\">6639</span> <span class=\"mi\">3865</span>  <span class=\"n\">olean.1a3021f98e</span>\n<span class=\"mi\">00000010</span><span class=\"o\">:</span> <span class=\"mi\">3535</span> <span class=\"mi\">6132</span> <span class=\"mi\">3734</span> <span class=\"mi\">3231</span> <span class=\"mi\">3762</span> <span class=\"mi\">3362</span> <span class=\"mi\">6266</span> <span class=\"mi\">3932</span>  <span class=\"mi\">55</span><span class=\"n\">a274217b3bbf92</span>\n<span class=\"mi\">00000020</span><span class=\"o\">:</span> <span class=\"mi\">6232</span> <span class=\"mi\">6434</span> <span class=\"mi\">3439</span> <span class=\"mi\">6261</span> <span class=\"mi\">6538</span> <span class=\"mi\">3433</span> <span class=\"mi\">6333</span> <span class=\"mi\">0000</span>  <span class=\"n\">b2d449bae843c3..</span>\n<span class=\"mi\">00000030</span><span class=\"o\">:</span> <span class=\"mi\">0000</span> <span class=\"n\">e4a1</span> <span class=\"mi\">4</span><span class=\"n\">b4e</span> <span class=\"mi\">0000</span> <span class=\"n\">b829</span> <span class=\"n\">e4a1</span> <span class=\"mi\">4</span><span class=\"n\">b4e</span> <span class=\"mi\">0000</span>  <span class=\"bp\">....</span><span class=\"n\">KN...</span><span class=\"o\">)</span><span class=\"bp\">..</span><span class=\"n\">KN..</span>\n<span class=\"mi\">00000040</span><span class=\"o\">:</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span> <span class=\"mi\">0100</span> <span class=\"mi\">00</span><span class=\"n\">f9</span> <span class=\"mi\">0500</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span> <span class=\"mi\">0000</span>  <span class=\"bp\">................</span>\n</code></pre></div>",
        "id": 420254623,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707313362
    },
    {
        "content": "<p>I tried locally running it after editing the line <code>s!\"lean4checker found a problem in {m}\"</code> to <code>s!\"lean4checker found a problem in {m}: {e}\"</code>, and got</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lean4checker</span> <span class=\"n\">found</span> <span class=\"n\">a</span> <span class=\"n\">problem</span> <span class=\"k\">in</span> <span class=\"n\">ProofWidgets</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">read</span> <span class=\"n\">file</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets.olean'</span><span class=\"o\">,</span> <span class=\"n\">invalid</span> <span class=\"n\">header</span>\n</code></pre></div>",
        "id": 420255585,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707313693
    },
    {
        "content": "<p>so looking for header mismatches seems to be the right idea</p>",
        "id": 420255673,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707313717
    },
    {
        "content": "<p>but there is no header mismatch in the Mathlib.olean you have just shown</p>",
        "id": 420255745,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707313738
    },
    {
        "content": "<p>Doesn't my CI delete proofwidgets anyway?</p>",
        "id": 420255763,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707313745
    },
    {
        "content": "<p>ah, maybe I should have done that</p>",
        "id": 420255838,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707313768
    },
    {
        "content": "<p>You can just run lean4checker locally on this? How much RAM does it use?</p>",
        "id": 420256000,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707313811
    },
    {
        "content": "<p>oh, you should probably put the lines</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>          <span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">rf</span> <span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span>\n          <span class=\"n\">rm</span> <span class=\"bp\">-</span><span class=\"n\">rf</span> <span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">ir</span>\n</code></pre></div>\n<p>before getting the cache so that you get the right version</p>",
        "id": 420256116,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707313864
    },
    {
        "content": "<p>no, I also have difficulty running that command locally, but it does give that output before it eats all the memory on my system</p>",
        "id": 420256223,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707313902
    },
    {
        "content": "<p>I thought the point of deleting those is so they are not checked at all</p>",
        "id": 420256228,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707313903
    },
    {
        "content": "<p>well if you just remove them then I'm not sure you get a consistent state</p>",
        "id": 420256331,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707313927
    },
    {
        "content": "<p>because there are other files that want to import it</p>",
        "id": 420256357,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707313936
    },
    {
        "content": "<p>Running <code>lean4checker</code> without arguments is equivalent to running <code>lean4checker Mod</code> for every module with an olean in the directory</p>",
        "id": 420256748,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707314055
    },
    {
        "content": "<p>Indeed, the Mathlib <a href=\"https://github.com/leanprover-community/mathlib4/blob/9b56a17561b1f6a3cab2dc764d0e884191101ed0/.github/workflows/build.yml\">CI script linked in that issue mentioned by Joachim Breitner</a> also does it in that order. Now I'm really confused though what the deletion actually does.</p>",
        "id": 420256817,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707314077
    },
    {
        "content": "<p>and running <code>lean4checker Mathlib</code> results in</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">ProofWidgets'</span>\n</code></pre></div>",
        "id": 420256842,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707314087
    },
    {
        "content": "<p>which is probably the <code>lean4checker found a problem in Mathlib</code> error</p>",
        "id": 420256906,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707314108
    },
    {
        "content": "<p>the deletion is supposed to remove olean files unpacked from the proofwidgets release</p>",
        "id": 420257018,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707314142
    },
    {
        "content": "<p>because we want to instead get these olean files from the mathlib cache</p>",
        "id": 420257068,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707314159
    },
    {
        "content": "<p>That's still really confusing to me... why does the mathlib cache not either 1) get the right version even if the files are present or 2) leave those files alone even if they are missing?</p>",
        "id": 420258197,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707314441
    },
    {
        "content": "<p>The cache is Mathlib-specific, right? Usually packages don't have something like this. So proofwidgets also doesn't have a separate cache? Where do the files I'm deleting come from?</p>",
        "id": 420258601,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707314552
    },
    {
        "content": "<p>proofwidgets uses <code>lake upload</code>, which is a separate cache-like mechanism built directly into lake, and it doesn't play well with <code>cache</code></p>",
        "id": 420259483,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707314835
    },
    {
        "content": "<p>this is annoying and a cause of several issues but we need it because the proofwidgets cache contains .js files and without it you would need npm to compile it</p>",
        "id": 420259720,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707314900
    },
    {
        "content": "<blockquote>\n<p>why does the mathlib cache not either 1) get the right version even if the files are present</p>\n</blockquote>\n<p>Because the mathlib cache only gets files which are actually imported by mathlib, but lean4checker checks all .olean files it sees, meaning that any dangling proofwidgets files will still be out of date</p>",
        "id": 420260084,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707315002
    },
    {
        "content": "<p>Thanks for the explanation. <a href=\"https://github.com/adomasbaliuka/lean4-hacking/actions/runs/7815912250/job/21320293042\">Now</a> I get a \"problem in ProofWidgets\" again...</p>",
        "id": 420260793,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707315226
    },
    {
        "content": "<p>you have to run the rm after running <code>lake</code> once to download everything</p>",
        "id": 420261722,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707315511
    },
    {
        "content": "<p>like <code>lake exe cache</code> should suffice</p>",
        "id": 420261763,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707315526
    },
    {
        "content": "<p>the CI script from before uses <code>lake build cache</code></p>",
        "id": 420261918,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707315571
    },
    {
        "content": "<p>Alright, seems like it's now trying to actually check something! Thanks</p>",
        "id": 420270541,
        "sender_full_name": "Adomas Baliuka",
        "timestamp": 1707317824
    }
]