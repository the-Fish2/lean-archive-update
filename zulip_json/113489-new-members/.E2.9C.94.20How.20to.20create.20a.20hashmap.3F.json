[
    {
        "content": "<p>I was wondering how can i create a map to \"put\" and \"get\" values of type Nat with a key of type Nat too ?</p>",
        "id": 445324789,
        "sender_full_name": "Jafar Tanoukhi",
        "timestamp": 1718707102
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.HashMap.empty#doc\">docs#Lean.HashMap.empty</a>, maybe?  Then <code>insert</code> and <code>find?</code> should work.</p>",
        "id": 445325484,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718707383
    },
    {
        "content": "<p>hmmm, are you sure about the link, it's not opening for me</p>",
        "id": 445325656,
        "sender_full_name": "Jafar Tanoukhi",
        "timestamp": 1718707459
    },
    {
        "content": "<p>It does open for me...</p>",
        "id": 445325699,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718707480
    },
    {
        "content": "<p>Here: <a href=\"https://leanprover-community.github.io/mathlib4_docs/Lean/Data/HashMap.html#Lean.HashMap.empty\">https://leanprover-community.github.io/mathlib4_docs/Lean/Data/HashMap.html#Lean.HashMap.empty</a></p>",
        "id": 445325777,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718707513
    },
    {
        "content": "<p>ahh yes, this works thanks</p>",
        "id": 445325830,
        "sender_full_name": "Jafar Tanoukhi",
        "timestamp": 1718707537
    },
    {
        "content": "<p>I assume i have to import mathlib for this ?</p>",
        "id": 445325852,
        "sender_full_name": "Jafar Tanoukhi",
        "timestamp": 1718707552
    },
    {
        "content": "<p>I've also had this happen to me before, I think calling <code>docs#</code> results in a search query that doesn't work if your internet is slow.</p>",
        "id": 445325939,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1718707576
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"710010\">Jafar Tanoukhi</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20create.20a.20hashmap.3F/near/445325852\">said</a>:</p>\n<blockquote>\n<p>I assume i have to import mathlib for this ?</p>\n</blockquote>\n<p>No</p>",
        "id": 445325992,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1718707612
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"710010\">Jafar Tanoukhi</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20create.20a.20hashmap.3F/near/445325852\">said</a>:</p>\n<blockquote>\n<p>I assume i have to import mathlib for this ?</p>\n</blockquote>\n<p>No, it is in core: just <code>import Lean.Data.HashMap</code> should be enough.</p>",
        "id": 445326001,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718707615
    },
    {
        "content": "<p>ah ok cool</p>",
        "id": 445326033,
        "sender_full_name": "Jafar Tanoukhi",
        "timestamp": 1718707628
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"710010\">Jafar Tanoukhi</span> has marked this topic as resolved.</p>",
        "id": 445326082,
        "sender_full_name": "Notification Bot",
        "timestamp": 1718707659
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"580947\">Rida Hamadani</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20How.20to.20create.20a.20hashmap.3F/near/445325939\">said</a>:</p>\n<blockquote>\n<p>I've also had this happen to me before, I think calling <code>docs#</code> results in a search query that doesn't work if your internet is slow.</p>\n</blockquote>\n<p>it needs to download an index of a couple MB once since doc-gen is a static web page so all search happens on your machine. But the index get's cached so after the first search it should be fast (until the search index gets updated)</p>",
        "id": 445328330,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1718708528
    },
    {
        "content": "<p>3MB compressed currently to be precise</p>",
        "id": 445328408,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1718708562
    },
    {
        "content": "<p>Ah nice, thanks for explaining! <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 445329086,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1718708784
    },
    {
        "content": "<p>Is that the hash map we recommend or the one that's semi-internal to core?</p>",
        "id": 445335724,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718710513
    },
    {
        "content": "<p>Oh, maybe <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Batteries.HashMap#doc\">docs#Batteries.HashMap</a> is the recommended one?</p>",
        "id": 445336012,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718710622
    },
    {
        "content": "<p>Currently it depends mostly on your particular use case. Their implementations are basically the same but batteries has a couple more API functions. So if you can live with the Lean API use that, otherwise batteries for now.</p>\n<p><span class=\"user-mention\" data-user-id=\"260921\">@Markus Himmel</span> is also working on a new HashMap with a good API that will land in core eventually</p>",
        "id": 445336806,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1718710933
    }
]