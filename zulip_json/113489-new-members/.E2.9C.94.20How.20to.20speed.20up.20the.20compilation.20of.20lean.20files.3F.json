[
    {
        "content": "<p>Like this file (about 300 lines)  , everytime i change a little bit, it takes nearly 20 seconds to compile...... <span aria-label=\"hurt\" class=\"emoji emoji-1f915\" role=\"img\" title=\"hurt\">:hurt:</span></p>",
        "id": 409301281,
        "sender_full_name": "chenjulang",
        "timestamp": 1703129572
    },
    {
        "content": "<p>part 1/2:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.Determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Fin</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Sign</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Sqrt</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.List.Perm</span>\n\n\n<span class=\"c1\">-- set_option trace.Meta.synthInstance true</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">400000</span>\n\n\n<span class=\"kd\">universe</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">z</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Equiv</span> <span class=\"n\">Equiv.Perm</span> <span class=\"n\">Finset</span> <span class=\"n\">Function</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Matrix</span> <span class=\"c1\">--目的是避免模糊定义mul_apply</span>\n\n  <span class=\"kn\">open</span> <span class=\"n\">Matrix</span> <span class=\"n\">BigOperators</span>\n\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">m</span><span class=\"o\">]</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n  <span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"s2\">\"ε \"</span> <span class=\"n\">σ</span><span class=\"o\">:</span><span class=\"n\">arg</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">((</span><span class=\"n\">sign</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- -- -----/行列式</span>\n\n<span class=\"c1\">-- -- 原来有toFun的结构，直接写名词的话，它要用toFun来替换，</span>\n<span class=\"c1\">-- -- 所以detRowAlternating2具体类型应该是和这个相同(↑detRowAlternating2).toFun : (?m.32939 → ?m.32939 → ?m.32941) → ?m.32941</span>\n<span class=\"c1\">-- -- 因此detRowAlternating2 M的类型就是R</span>\n<span class=\"c1\">--   def detRowAlternating2</span>\n<span class=\"c1\">--   : AlternatingMap R (n → R) R n  --- 最后这个参数n属于补充说明,实际形式上只需传三个参数即可</span>\n<span class=\"c1\">--   :=</span>\n<span class=\"c1\">--   -- have h1:= (</span>\n<span class=\"c1\">--   --   (MultilinearMap.mkPiAlgebra R n R).compLinearMap</span>\n<span class=\"c1\">--   --     LinearMap.proj</span>\n<span class=\"c1\">--   -- )</span>\n<span class=\"c1\">--   -- have h1fun:= h1.toFun</span>\n<span class=\"c1\">--   MultilinearMap.alternatization ( -- ???</span>\n<span class=\"c1\">--     (MultilinearMap.mkPiAlgebra R n R).compLinearMap</span>\n<span class=\"c1\">--       LinearMap.proj</span>\n<span class=\"c1\">--   )</span>\n\n<span class=\"c1\">-- -- 问题：v是什么？</span>\n<span class=\"c1\">-- -- MultilinearMap R (fun x（x就是n） ↦ n → R) R 也就是(n → n → R) → R</span>\n<span class=\"c1\">--   abbrev det2 (M : Matrix n n R): R :=</span>\n<span class=\"c1\">--     -- have h1 := detRowAlternating2 M</span>\n<span class=\"c1\">--     detRowAlternating2 M -- 这里为什么类型是R，因为detRowAlternating2相当于detRowAlternating2.toFun</span>\n<span class=\"c1\">--     -- 也就是(?m.33147 → ?m.33147 → ?m.33149) → ?m.33149</span>\n<span class=\"c1\">--   -- #check detRowAlternating2.toFun -- 所以上面M不是参数，而是被作用了，detRowAlternating2是一个映射作用到M上了</span>\n\n\n<span class=\"c1\">--   --  前置知识</span>\n\n<span class=\"c1\">--   -- Perm 的使用</span>\n<span class=\"c1\">--   -- 以下是一些关于 Perm n 的示例，其中 n 取不同的值：</span>\n<span class=\"c1\">--   -- 当 n = 1 时，Perm 1 表示长度为 1 的置换，即 [0]。</span>\n<span class=\"c1\">--   -- 当 n = 2 时，Perm 2 表示长度为 2 的置换，共有两种情况：[0, 1] 和 [1, 0]。</span>\n<span class=\"c1\">--   -- 当 n = 3 时，Perm 3 表示长度为 3 的置换，共有六种情况：[0, 1, 2]、[0, 2, 1]、[1, 0, 2]、[1, 2, 0]、[2, 0, 1] 和 [2, 1, 0]。</span>\n<span class=\"c1\">-- -- #eval Finset.val (Finset.univ : Finset (Fin 4))</span>\n<span class=\"c1\">-- def printPerms (n : ℕ) : List (List ℕ) :=</span>\n<span class=\"c1\">--   List.map List.reverse (List.permutations (List.range n))</span>\n<span class=\"c1\">-- #eval printPerms 4</span>\n\n\n\n  <span class=\"c1\">-- 正式开始：</span>\n\n  <span class=\"c1\">-- def example_function : n → n :=</span>\n  <span class=\"c1\">-- λ x =&gt; x</span>\n  <span class=\"c1\">-- @[nolint unusedArguments]</span>\n  <span class=\"kd\">set_option</span> <span class=\"n\">linter.unusedVariables</span> <span class=\"n\">false</span> <span class=\"k\">in</span>\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh1</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n      <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n        <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n          <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n          <span class=\"bp\">*</span>\n          <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n            <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n      <span class=\"bp\">=</span>\n      <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span> <span class=\"c1\">-- (@univ (n → n) _) 表示一个集合，包含了 n 到 n 函数类型的所有可能的函数</span>\n        <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n          <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n          <span class=\"bp\">*</span>\n          <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n             <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">apply</span> <span class=\"n\">Eq.symm</span>\n      <span class=\"n\">apply</span> <span class=\"n\">sum_subset</span> <span class=\"c1\">--s₁ ⊆ s₂， x ∈ s₂, x ∉ s₁的情况为0，则可以直接去掉</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n        <span class=\"n\">exact</span> <span class=\"n\">mem_univ</span> <span class=\"n\">h1</span>\n      <span class=\"n\">intros</span> <span class=\"n\">h3</span> <span class=\"n\">h4</span> <span class=\"n\">h5</span>\n      <span class=\"n\">apply</span> <span class=\"n\">det_mul_aux</span> <span class=\"c1\">-- ???这个先不理解，后面专门出一个视频来教如何读证明并且分解证明成策略模式。一个先连乘，再连加的东西，结果是0，关键是非双射导致的，有点意思</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_filter</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span> <span class=\"c1\">-- 就是filter的定义呗，是属于某个集合里面的，而且满足条件1</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_univ</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">true_and_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span>\n      <span class=\"n\">set</span> <span class=\"n\">h6</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">h3</span> <span class=\"n\">x</span> <span class=\"c1\">-- 写这个h6,h7是为了补充说明，其实这里h6就是和h3同一个映射，写法不一样而已</span>\n      <span class=\"k\">have</span> <span class=\"n\">h7</span><span class=\"o\">:</span> <span class=\"n\">h6</span><span class=\"bp\">=</span><span class=\"n\">h3</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h5</span>\n\n  <span class=\"kd\">set_option</span> <span class=\"n\">linter.unusedVariables</span> <span class=\"n\">false</span> <span class=\"k\">in</span>\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh2</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span>\n    <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span>\n      <span class=\"bp\">∑</span>\n        <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n          <span class=\"o\">(</span>\n            <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n            <span class=\"bp\">*</span>\n            <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n          <span class=\"o\">)</span>\n      <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n          <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n              <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n              <span class=\"bp\">*</span>\n              <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n                <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_comm</span><span class=\"o\">]</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_comm</span><span class=\"o\">]</span> <span class=\"c1\">-- 这两步sum_comm相当于没变，只改成了x,y</span>\n      <span class=\"n\">refine'</span> <span class=\"n\">sum_bij</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"c1\">-- ???不一样的定义域s、t，不同的函数f、g，求和相同，需要什么条件呢。5个条件</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">ih1</span> <span class=\"n\">ih2</span> <span class=\"c1\">-- 这里ih1潜台词是随机的ih1</span>\n        <span class=\"k\">have</span> <span class=\"n\">ih3</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mem_filter.mp</span> <span class=\"n\">ih2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">right</span>\n        <span class=\"k\">have</span> <span class=\"n\">ih4</span><span class=\"o\">:=</span> <span class=\"n\">ofBijective</span> <span class=\"n\">ih1</span> <span class=\"n\">ih3</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Perm</span><span class=\"o\">]</span>\n        <span class=\"n\">exact</span> <span class=\"n\">ih4</span> <span class=\"c1\">-- 如果这里定义错了，下面满盘皆输</span>\n      <span class=\"c1\">-- 注意不能像以下这样定义</span>\n      <span class=\"c1\">-- intros ih1 ih2</span>\n      <span class=\"c1\">--   have ih3:= Equiv.refl n</span>\n      <span class=\"c1\">--   simp only [Perm]</span>\n      <span class=\"c1\">--   exact ih3</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">h1</span>\n        <span class=\"n\">intro</span> <span class=\"n\">h2</span> <span class=\"c1\">--原来这里会用到refine1的证明</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_univ</span><span class=\"o\">]</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h_1</span> <span class=\"n\">h_2</span>\n        <span class=\"k\">have</span> <span class=\"n\">h_3</span><span class=\"o\">:=</span> <span class=\"n\">mem_filter.1</span> <span class=\"n\">h_2</span>\n        <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">h_4</span><span class=\"o\">,</span><span class=\"n\">h_5</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h_3</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">id_eq</span><span class=\"o\">]</span>\n        <span class=\"n\">set</span> <span class=\"n\">h_6</span> <span class=\"o\">:=</span> <span class=\"n\">ofBijective</span> <span class=\"n\">h_1</span> <span class=\"n\">h_5</span> <span class=\"c1\">-- h_1和h_6相等吗？，由ofBijective的toFun定义知道就是h_1</span>\n        <span class=\"k\">have</span> <span class=\"n\">h1_equal_h6</span> <span class=\"o\">:</span> <span class=\"n\">h_1</span><span class=\"bp\">=</span><span class=\"n\">h_6</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n        <span class=\"n\">rfl</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">inj_1</span> <span class=\"n\">inj_2</span> <span class=\"n\">inj_3</span> <span class=\"n\">inj_4</span> <span class=\"n\">inj_5</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Equiv.noConfusion</span> <span class=\"n\">inj_5</span> <span class=\"n\">_</span> <span class=\"c1\">---???</span>\n        <span class=\"n\">intros</span> <span class=\"n\">inj_6</span> <span class=\"n\">inj_7</span>\n        <span class=\"n\">exact</span> <span class=\"n\">inj_6</span>\n        <span class=\"n\">done</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">b</span> <span class=\"n\">x</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Exists.intro</span> <span class=\"n\">b</span> <span class=\"n\">_</span> <span class=\"c1\">-- ???</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Exists.intro</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n        <span class=\"bp\">·</span> <span class=\"n\">refine'</span> <span class=\"n\">mem_filter.mpr</span> <span class=\"n\">_</span>\n          <span class=\"n\">constructor</span>\n          <span class=\"bp\">·</span> <span class=\"n\">refine'</span> <span class=\"n\">mem_univ</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">b</span><span class=\"o\">)</span>\n          <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">Equiv.bijective</span> <span class=\"n\">b</span>\n        <span class=\"bp\">·</span> <span class=\"n\">refine'</span> <span class=\"n\">coe_fn_injective</span> <span class=\"n\">_</span>\n          <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">id_eq</span><span class=\"o\">,</span> <span class=\"n\">FunLike.coe_fn_eq</span><span class=\"o\">]</span>\n          <span class=\"n\">exact</span> <span class=\"n\">Equiv.ext</span> <span class=\"o\">(</span><span class=\"n\">congrFun</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n        <span class=\"n\">done</span>\n      <span class=\"n\">done</span>\n</code></pre></div>",
        "id": 409301360,
        "sender_full_name": "chenjulang",
        "timestamp": 1703129624
    },
    {
        "content": "<p>part 2/2:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"kd\">set_option</span> <span class=\"n\">linter.unusedVariables</span> <span class=\"n\">false</span> <span class=\"k\">in</span>\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh3</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">))</span>\n      <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"c1\">--???</span>\n      <span class=\"bp\">·</span> <span class=\"n\">rfl</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Fintype.sum_equiv</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n        <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">Equiv.mulRight</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span>\n        <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h5</span>\n          <span class=\"k\">have</span> <span class=\"n\">h4</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">((</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"n\">j</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">_</span> <span class=\"bp\">≃</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod_comp</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Equiv.Perm.coe_mul</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">apply_inv_self</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Function.comp_apply</span><span class=\"o\">]</span>\n          <span class=\"k\">have</span> <span class=\"n\">h6</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"n\">h1</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"n\">h5</span>\n            <span class=\"o\">:=</span>\n            <span class=\"k\">calc</span>\n              <span class=\"n\">ε</span> <span class=\"n\">h1</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"o\">)</span>\n              <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">sign_mul</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)]</span>\n                <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Int.cast_mul</span><span class=\"o\">]</span>\n                <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Units.val_mul</span><span class=\"o\">]</span>\n                <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">_root_.map_mul</span><span class=\"o\">,</span> <span class=\"n\">map_inv</span><span class=\"o\">,</span> <span class=\"n\">Int.units_inv_eq_self</span><span class=\"o\">,</span> <span class=\"n\">Units.val_mul</span><span class=\"o\">,</span>\n                  <span class=\"n\">Int.cast_mul</span><span class=\"o\">]</span>\n              <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"n\">h5</span>\n              <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">inv_mul_cancel_right</span><span class=\"o\">]</span>\n          <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">Equiv.coe_mulRight</span><span class=\"o\">]</span>\n          <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">h6</span><span class=\"o\">]</span>\n          <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">h4</span><span class=\"o\">]</span>\n      <span class=\"n\">done</span>\n\n  <span class=\"kd\">set_option</span> <span class=\"n\">linter.unusedVariables</span> <span class=\"n\">false</span> <span class=\"k\">in</span>\n  <span class=\"c1\">-- @[simp]</span>\n  <span class=\"kd\">theorem</span> <span class=\"n\">MainGoal</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span><span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span> <span class=\"o\">:=</span>\n      <span class=\"k\">calc</span>\n          <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">det_apply'</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_apply</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">prod_univ_sum</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_sum</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Fintype.piFinset_univ</span><span class=\"o\">]</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.sum_comm</span><span class=\"o\">]</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span>\n                <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span>\n                  <span class=\"bp\">∑</span> <span class=\"n\">σ</span>\n                    <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                      <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh1</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span><span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh2</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span>\n                <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                  <span class=\"bp\">∑</span> <span class=\"n\">τ</span>\n                    <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                      <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"n\">ε</span> <span class=\"n\">τ</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_left_comm</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">prod_mul_distrib</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh3</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"c1\">-- simp only [det_apply', Finset.mul_sum, mul_comm, mul_left_comm, mul_assoc] --这里无法分步，所以直接分析print来写成下面这样子：</span>\n            <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span> <span class=\"bp\">=</span>\n              <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n              <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n              <span class=\"k\">have</span> <span class=\"n\">h2_1</span> <span class=\"o\">:</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n                <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                <span class=\"k\">have</span> <span class=\"n\">h2_1_1</span> <span class=\"o\">:=(</span><span class=\"n\">det_apply'</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n                <span class=\"k\">have</span> <span class=\"n\">h2_1_2</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span>\n                  <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n                  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                  <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n                  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span>\n                  <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h212x</span> <span class=\"n\">h212a</span>\n                    <span class=\"k\">have</span> <span class=\"n\">h2_1_2_1</span>\n                      <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h212x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h212x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h212x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h212x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span>\n                      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                      <span class=\"n\">exact</span> <span class=\"n\">rfl</span> <span class=\"c1\">--竟然直接搞定了</span>\n                    <span class=\"k\">have</span> <span class=\"n\">h2_1_2_2</span> <span class=\"o\">:=</span> <span class=\"n\">mul_comm</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h212x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h212x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span>\n                    <span class=\"k\">have</span> <span class=\"n\">h2_1_2_3</span> <span class=\"o\">:=</span> <span class=\"n\">h2_1_2_1.trans</span> <span class=\"n\">h2_1_2_2</span>\n                    <span class=\"n\">exact</span> <span class=\"n\">h2_1_2_3</span>\n                <span class=\"k\">have</span> <span class=\"n\">h2_1_3</span> <span class=\"o\">:=</span> <span class=\"n\">h2_1_1.trans</span> <span class=\"n\">h2_1_2</span>\n                <span class=\"n\">exact</span> <span class=\"n\">h2_1_3</span>\n              <span class=\"k\">have</span> <span class=\"n\">h2_2</span> <span class=\"o\">:</span> <span class=\"n\">det</span> <span class=\"n\">N</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n                <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                <span class=\"k\">have</span> <span class=\"n\">h2_2_1</span><span class=\"o\">:=</span> <span class=\"n\">det_apply'</span> <span class=\"n\">N</span>\n                <span class=\"k\">have</span> <span class=\"n\">h2_2_2</span><span class=\"o\">:</span>  <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n                  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                  <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n                  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span>\n                  <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h222x</span> <span class=\"n\">h222a</span>\n                    <span class=\"k\">have</span> <span class=\"n\">h2_2_2_1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h222x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h222x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h222x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h222x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span>\n                      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                      <span class=\"n\">rfl</span>\n                    <span class=\"k\">have</span> <span class=\"n\">h2_2_2_2</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mul_comm</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h222x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h222x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">))</span>\n                    <span class=\"k\">have</span> <span class=\"n\">h2_2_2_3</span><span class=\"o\">:=</span> <span class=\"n\">h2_2_2_1.trans</span> <span class=\"n\">h2_2_2_2</span>\n                    <span class=\"n\">exact</span> <span class=\"n\">h2_2_2_3</span>\n                <span class=\"k\">have</span> <span class=\"n\">h2_2_3</span><span class=\"o\">:=</span> <span class=\"n\">h2_2_1.trans</span> <span class=\"n\">h2_2_2</span>\n                <span class=\"n\">exact</span> <span class=\"n\">h2_2_3</span>\n              <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">congr</span> <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"n\">HMul.hMul</span> <span class=\"n\">h2_1</span><span class=\"o\">)</span> <span class=\"n\">h2_2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"n\">mul_sum</span>\n            <span class=\"k\">have</span> <span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">)))</span>\n              <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n              <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n              <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span>\n              <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h3_1</span> <span class=\"n\">h3_2</span>\n                <span class=\"k\">have</span> <span class=\"n\">h3_3</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">))</span>\n                <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                  <span class=\"k\">have</span> <span class=\"n\">h3_3_1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">))</span>\n                  <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n                  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                    <span class=\"c1\">-- refine' mul_comm _ _</span>\n                    <span class=\"k\">have</span> <span class=\"n\">h3_3_1_1</span> <span class=\"o\">:=</span> <span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">))</span>\n                    <span class=\"n\">exact</span> <span class=\"n\">h3_3_1_1</span>\n                  <span class=\"k\">have</span> <span class=\"n\">h3_3_2</span><span class=\"o\">:=</span> <span class=\"n\">h3_3_1.trans</span> <span class=\"n\">mul_sum</span>\n                  <span class=\"n\">exact</span> <span class=\"n\">h3_3_2</span>\n                <span class=\"k\">have</span> <span class=\"n\">h3_4</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">))</span>\n                <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">)))</span>\n                  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                  <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n                  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span>\n                  <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h34x_1</span> <span class=\"n\">h34a</span>\n                    <span class=\"k\">have</span> <span class=\"n\">h3_4_1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">))</span>\n                    <span class=\"bp\">=</span><span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">)))</span>\n                      <span class=\"o\">:=</span> <span class=\"o\">((</span><span class=\"n\">mul_left_comm</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n                                <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                            <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">HMul.hMul</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                              <span class=\"o\">(</span><span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">))))</span>\n                    <span class=\"k\">have</span> <span class=\"n\">h3_4_2</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">)))</span>\n                    <span class=\"bp\">=</span><span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">)))</span>\n                      <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mul_left_comm</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span>\n                          <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">)))</span>\n                    <span class=\"k\">have</span> <span class=\"n\">h3_4_3</span><span class=\"o\">:=</span> <span class=\"n\">h3_4_1.trans</span> <span class=\"n\">h3_4_2</span>\n                    <span class=\"n\">exact</span> <span class=\"n\">h3_4_3</span>\n                <span class=\"k\">have</span> <span class=\"n\">h3_5</span><span class=\"o\">:=</span> <span class=\"n\">h3_3.trans</span> <span class=\"n\">h3_4</span>\n                <span class=\"n\">exact</span> <span class=\"n\">h3_5</span>\n            <span class=\"k\">have</span> <span class=\"n\">h4</span><span class=\"o\">:=</span> <span class=\"n\">h2.trans</span> <span class=\"n\">h3</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">h4</span><span class=\"o\">]</span>\n            <span class=\"n\">congr</span>\n            <span class=\"n\">funext</span> <span class=\"n\">xx1</span>\n            <span class=\"n\">congr</span>\n            <span class=\"n\">funext</span> <span class=\"n\">xx2</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_right_comm</span><span class=\"o\">]</span>\n            <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h1</span>\n    <span class=\"n\">done</span>\n\n\n<span class=\"kd\">end</span> <span class=\"n\">Matrix</span>\n</code></pre></div>",
        "id": 409301449,
        "sender_full_name": "chenjulang",
        "timestamp": 1703129649
    },
    {
        "content": "<p>Have you taken a look at the memory resources that Lean is taking up in your system?  This may not help you, but try restarting VSCode and see if you still have the 20 seconds or not.</p>",
        "id": 409301471,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1703129658
    },
    {
        "content": "<p>I got two lean here :<br>\n<a href=\"/user_uploads/3121/iFUSxFURNuh5gtoYsE6rbtBk/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/iFUSxFURNuh5gtoYsE6rbtBk/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/iFUSxFURNuh5gtoYsE6rbtBk/image.png\"></a></div><p>I reopen the vscode , and still needs about 16 seconds...</p>",
        "id": 409302268,
        "sender_full_name": "chenjulang",
        "timestamp": 1703130040
    },
    {
        "content": "<p>Have you considered refactoring the main theorem to use more lemmas?  Some of those <code>have</code> statements could be factored out as lemmas.</p>",
        "id": 409303052,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1703130401
    },
    {
        "content": "<p>Otherwise, someone here who knows how to profile Lean could probably help you more.</p>",
        "id": 409303131,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1703130450
    },
    {
        "content": "<p>Ok, i will have a try. split the lemmas</p>",
        "id": 409303198,
        "sender_full_name": "chenjulang",
        "timestamp": 1703130482
    },
    {
        "content": "<p>I close many apps, and still needs 17 secs or so.<br>\n<a href=\"/user_uploads/3121/MZzHGjIuED8KD1RaRdI704A6/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/MZzHGjIuED8KD1RaRdI704A6/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/MZzHGjIuED8KD1RaRdI704A6/image.png\"></a></div><p>I am going to  \"refactor the main theorem to use more lemmas\"</p>",
        "id": 409303376,
        "sender_full_name": "chenjulang",
        "timestamp": 1703130563
    },
    {
        "content": "<p>Yeah, your system memory looks fine so it isn't that.</p>",
        "id": 409303520,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1703130630
    },
    {
        "content": "<p>But it may not easy to refactor , due to the Variable context issues</p>",
        "id": 409303638,
        "sender_full_name": "chenjulang",
        "timestamp": 1703130693
    },
    {
        "content": "<p>I will try</p>",
        "id": 409303655,
        "sender_full_name": "chenjulang",
        "timestamp": 1703130707
    },
    {
        "content": "<p>Note also that the proof in Mathlib is quite a bit shorter.</p>",
        "id": 409303672,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1703130716
    },
    {
        "content": "<p>OK</p>",
        "id": 409303728,
        "sender_full_name": "chenjulang",
        "timestamp": 1703130734
    },
    {
        "content": "<p>Now i am stiil in my way to learn leans, so I want to prove some underlying theorems myself.And not to use a lot of Mathlibs yet.</p>",
        "id": 409304063,
        "sender_full_name": "chenjulang",
        "timestamp": 1703130914
    },
    {
        "content": "<p>Finish! Now It needs like 3 seconds:</p>",
        "id": 409312048,
        "sender_full_name": "chenjulang",
        "timestamp": 1703135646
    },
    {
        "content": "<p><span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 409312059,
        "sender_full_name": "chenjulang",
        "timestamp": 1703135656
    },
    {
        "content": "<p>part 1/2</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.Determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Fin</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Sign</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Sqrt</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.List.Perm</span>\n\n\n<span class=\"c1\">-- set_option trace.Meta.synthInstance true</span>\n<span class=\"c1\">-- set_option maxHeartbeats 400000</span>\n\n\n<span class=\"kd\">universe</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">z</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Equiv</span> <span class=\"n\">Equiv.Perm</span> <span class=\"n\">Finset</span> <span class=\"n\">Function</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Matrix</span> <span class=\"c1\">--目的是避免模糊定义mul_apply</span>\n\n  <span class=\"kn\">open</span> <span class=\"n\">Matrix</span> <span class=\"n\">BigOperators</span>\n\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">m</span><span class=\"o\">]</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n  <span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"s2\">\"ε \"</span> <span class=\"n\">σ</span><span class=\"o\">:</span><span class=\"n\">arg</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">((</span><span class=\"n\">sign</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">linter.unusedVariables</span> <span class=\"n\">false</span>\n\n<span class=\"c1\">-- -- -----/行列式</span>\n\n<span class=\"c1\">-- -- 原来有toFun的结构，直接写名词的话，它要用toFun来替换，</span>\n<span class=\"c1\">-- -- 所以detRowAlternating2具体类型应该是和这个相同(↑detRowAlternating2).toFun : (?m.32939 → ?m.32939 → ?m.32941) → ?m.32941</span>\n<span class=\"c1\">-- -- 因此detRowAlternating2 M的类型就是R</span>\n<span class=\"c1\">--   def detRowAlternating2</span>\n<span class=\"c1\">--   : AlternatingMap R (n → R) R n  --- 最后这个参数n属于补充说明,实际形式上只需传三个参数即可</span>\n<span class=\"c1\">--   :=</span>\n<span class=\"c1\">--   -- have h1:= (</span>\n<span class=\"c1\">--   --   (MultilinearMap.mkPiAlgebra R n R).compLinearMap</span>\n<span class=\"c1\">--   --     LinearMap.proj</span>\n<span class=\"c1\">--   -- )</span>\n<span class=\"c1\">--   -- have h1fun:= h1.toFun</span>\n<span class=\"c1\">--   MultilinearMap.alternatization ( -- ???</span>\n<span class=\"c1\">--     (MultilinearMap.mkPiAlgebra R n R).compLinearMap</span>\n<span class=\"c1\">--       LinearMap.proj</span>\n<span class=\"c1\">--   )</span>\n\n<span class=\"c1\">-- -- 问题：v是什么？</span>\n<span class=\"c1\">-- -- MultilinearMap R (fun x（x就是n） ↦ n → R) R 也就是(n → n → R) → R</span>\n<span class=\"c1\">--   abbrev det2 (M : Matrix n n R): R :=</span>\n<span class=\"c1\">--     -- have h1 := detRowAlternating2 M</span>\n<span class=\"c1\">--     detRowAlternating2 M -- 这里为什么类型是R，因为detRowAlternating2相当于detRowAlternating2.toFun</span>\n<span class=\"c1\">--     -- 也就是(?m.33147 → ?m.33147 → ?m.33149) → ?m.33149</span>\n<span class=\"c1\">--   -- #check detRowAlternating2.toFun -- 所以上面M不是参数，而是被作用了，detRowAlternating2是一个映射作用到M上了</span>\n\n\n<span class=\"c1\">--   --  前置知识</span>\n\n<span class=\"c1\">--   -- Perm 的使用</span>\n<span class=\"c1\">--   -- 以下是一些关于 Perm n 的示例，其中 n 取不同的值：</span>\n<span class=\"c1\">--   -- 当 n = 1 时，Perm 1 表示长度为 1 的置换，即 [0]。</span>\n<span class=\"c1\">--   -- 当 n = 2 时，Perm 2 表示长度为 2 的置换，共有两种情况：[0, 1] 和 [1, 0]。</span>\n<span class=\"c1\">--   -- 当 n = 3 时，Perm 3 表示长度为 3 的置换，共有六种情况：[0, 1, 2]、[0, 2, 1]、[1, 0, 2]、[1, 2, 0]、[2, 0, 1] 和 [2, 1, 0]。</span>\n<span class=\"c1\">-- -- #eval Finset.val (Finset.univ : Finset (Fin 4))</span>\n<span class=\"c1\">-- def printPerms (n : ℕ) : List (List ℕ) :=</span>\n<span class=\"c1\">--   List.map List.reverse (List.permutations (List.range n))</span>\n<span class=\"c1\">-- #eval printPerms 4</span>\n\n\n\n  <span class=\"c1\">-- 正式开始：</span>\n\n  <span class=\"c1\">-- def example_function : n → n :=</span>\n  <span class=\"c1\">-- λ x =&gt; x</span>\n  <span class=\"c1\">-- @[nolint unusedArguments]</span>\n  <span class=\"c1\">-- set_option linter.unusedVariables false in</span>\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh1</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n      <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n        <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n          <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n          <span class=\"bp\">*</span>\n          <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n            <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n      <span class=\"bp\">=</span>\n      <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span> <span class=\"c1\">-- (@univ (n → n) _) 表示一个集合，包含了 n 到 n 函数类型的所有可能的函数</span>\n        <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n          <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n          <span class=\"bp\">*</span>\n          <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n             <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">apply</span> <span class=\"n\">Eq.symm</span>\n      <span class=\"n\">apply</span> <span class=\"n\">sum_subset</span> <span class=\"c1\">--s₁ ⊆ s₂， x ∈ s₂, x ∉ s₁的情况为0，则可以直接去掉</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n        <span class=\"n\">exact</span> <span class=\"n\">mem_univ</span> <span class=\"n\">h1</span>\n      <span class=\"n\">intros</span> <span class=\"n\">h3</span> <span class=\"n\">h4</span> <span class=\"n\">h5</span>\n      <span class=\"n\">apply</span> <span class=\"n\">det_mul_aux</span> <span class=\"c1\">-- ???这个先不理解，后面专门出一个视频来教如何读证明并且分解证明成策略模式。一个先连乘，再连加的东西，结果是0，关键是非双射导致的，有点意思</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_filter</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span> <span class=\"c1\">-- 就是filter的定义呗，是属于某个集合里面的，而且满足条件1</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_univ</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">true_and_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h5</span>\n      <span class=\"n\">set</span> <span class=\"n\">h6</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">h3</span> <span class=\"n\">x</span> <span class=\"c1\">-- 写这个h6,h7是为了补充说明，其实这里h6就是和h3同一个映射，写法不一样而已</span>\n      <span class=\"k\">have</span> <span class=\"n\">h7</span><span class=\"o\">:</span> <span class=\"n\">h6</span><span class=\"bp\">=</span><span class=\"n\">h3</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h5</span>\n\n  <span class=\"c1\">-- set_option linter.unusedVariables false in</span>\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh2</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span>\n    <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span>\n      <span class=\"bp\">∑</span>\n        <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n          <span class=\"o\">(</span>\n            <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n            <span class=\"bp\">*</span>\n            <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n          <span class=\"o\">)</span>\n      <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n          <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n              <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n              <span class=\"bp\">*</span>\n              <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n                <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_comm</span><span class=\"o\">]</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sum_comm</span><span class=\"o\">]</span> <span class=\"c1\">-- 这两步sum_comm相当于没变，只改成了x,y</span>\n      <span class=\"n\">refine'</span> <span class=\"n\">sum_bij</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"c1\">-- ???不一样的定义域s、t，不同的函数f、g，求和相同，需要什么条件呢。5个条件</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">ih1</span> <span class=\"n\">ih2</span> <span class=\"c1\">-- 这里ih1潜台词是随机的ih1</span>\n        <span class=\"k\">have</span> <span class=\"n\">ih3</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mem_filter.mp</span> <span class=\"n\">ih2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">right</span>\n        <span class=\"k\">have</span> <span class=\"n\">ih4</span><span class=\"o\">:=</span> <span class=\"n\">ofBijective</span> <span class=\"n\">ih1</span> <span class=\"n\">ih3</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Perm</span><span class=\"o\">]</span>\n        <span class=\"n\">exact</span> <span class=\"n\">ih4</span> <span class=\"c1\">-- 如果这里定义错了，下面满盘皆输</span>\n      <span class=\"c1\">-- 注意不能像以下这样定义</span>\n      <span class=\"c1\">-- intros ih1 ih2</span>\n      <span class=\"c1\">--   have ih3:= Equiv.refl n</span>\n      <span class=\"c1\">--   simp only [Perm]</span>\n      <span class=\"c1\">--   exact ih3</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">h1</span>\n        <span class=\"n\">intro</span> <span class=\"n\">h2</span> <span class=\"c1\">--原来这里会用到refine1的证明</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_univ</span><span class=\"o\">]</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h_1</span> <span class=\"n\">h_2</span>\n        <span class=\"k\">have</span> <span class=\"n\">h_3</span><span class=\"o\">:=</span> <span class=\"n\">mem_filter.1</span> <span class=\"n\">h_2</span>\n        <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">h_4</span><span class=\"o\">,</span><span class=\"n\">h_5</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h_3</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">id_eq</span><span class=\"o\">]</span>\n        <span class=\"n\">set</span> <span class=\"n\">h_6</span> <span class=\"o\">:=</span> <span class=\"n\">ofBijective</span> <span class=\"n\">h_1</span> <span class=\"n\">h_5</span> <span class=\"c1\">-- h_1和h_6相等吗？，由ofBijective的toFun定义知道就是h_1</span>\n        <span class=\"k\">have</span> <span class=\"n\">h1_equal_h6</span> <span class=\"o\">:</span> <span class=\"n\">h_1</span><span class=\"bp\">=</span><span class=\"n\">h_6</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n        <span class=\"n\">rfl</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">inj_1</span> <span class=\"n\">inj_2</span> <span class=\"n\">inj_3</span> <span class=\"n\">inj_4</span> <span class=\"n\">inj_5</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Equiv.noConfusion</span> <span class=\"n\">inj_5</span> <span class=\"n\">_</span> <span class=\"c1\">---???</span>\n        <span class=\"n\">intros</span> <span class=\"n\">inj_6</span> <span class=\"n\">inj_7</span>\n        <span class=\"n\">exact</span> <span class=\"n\">inj_6</span>\n        <span class=\"n\">done</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">b</span> <span class=\"n\">x</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Exists.intro</span> <span class=\"n\">b</span> <span class=\"n\">_</span> <span class=\"c1\">-- ???</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Exists.intro</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n        <span class=\"bp\">·</span> <span class=\"n\">refine'</span> <span class=\"n\">mem_filter.mpr</span> <span class=\"n\">_</span>\n          <span class=\"n\">constructor</span>\n          <span class=\"bp\">·</span> <span class=\"n\">refine'</span> <span class=\"n\">mem_univ</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">b</span><span class=\"o\">)</span>\n          <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">Equiv.bijective</span> <span class=\"n\">b</span>\n        <span class=\"bp\">·</span> <span class=\"n\">refine'</span> <span class=\"n\">coe_fn_injective</span> <span class=\"n\">_</span>\n          <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">id_eq</span><span class=\"o\">,</span> <span class=\"n\">FunLike.coe_fn_eq</span><span class=\"o\">]</span>\n          <span class=\"n\">exact</span> <span class=\"n\">Equiv.ext</span> <span class=\"o\">(</span><span class=\"n\">congrFun</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n        <span class=\"n\">done</span>\n      <span class=\"n\">done</span>\n\n  <span class=\"c1\">-- set_option linter.unusedVariables false in</span>\n  <span class=\"kd\">lemma</span> <span class=\"n\">hhh3</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">))</span>\n      <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"c1\">--???</span>\n      <span class=\"bp\">·</span> <span class=\"n\">rfl</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">Fintype.sum_equiv</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n        <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">Equiv.mulRight</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span>\n        <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h5</span>\n          <span class=\"k\">have</span> <span class=\"n\">h4</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">((</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"n\">j</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">_</span> <span class=\"bp\">≃</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod_comp</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Equiv.Perm.coe_mul</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">apply_inv_self</span><span class=\"o\">]</span>\n            <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Function.comp_apply</span><span class=\"o\">]</span>\n          <span class=\"k\">have</span> <span class=\"n\">h6</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"n\">h1</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"n\">h5</span>\n            <span class=\"o\">:=</span>\n            <span class=\"k\">calc</span>\n              <span class=\"n\">ε</span> <span class=\"n\">h1</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"o\">)</span>\n              <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">sign_mul</span> <span class=\"o\">(</span><span class=\"n\">h5</span> <span class=\"bp\">*</span> <span class=\"n\">h1</span><span class=\"bp\">⁻¹</span><span class=\"o\">)]</span>\n                <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Int.cast_mul</span><span class=\"o\">]</span>\n                <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Units.val_mul</span><span class=\"o\">]</span>\n                <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">_root_.map_mul</span><span class=\"o\">,</span> <span class=\"n\">map_inv</span><span class=\"o\">,</span> <span class=\"n\">Int.units_inv_eq_self</span><span class=\"o\">,</span> <span class=\"n\">Units.val_mul</span><span class=\"o\">,</span>\n                  <span class=\"n\">Int.cast_mul</span><span class=\"o\">]</span>\n              <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"n\">h5</span>\n              <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">inv_mul_cancel_right</span><span class=\"o\">]</span>\n          <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">Equiv.coe_mulRight</span><span class=\"o\">]</span>\n          <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">h6</span><span class=\"o\">]</span>\n          <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">h4</span><span class=\"o\">]</span>\n      <span class=\"n\">done</span>\n</code></pre></div>",
        "id": 409312202,
        "sender_full_name": "chenjulang",
        "timestamp": 1703135734
    },
    {
        "content": "<p>part 2/2</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"kd\">lemma</span> <span class=\"n\">MainGoal_1</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n  <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">det_apply'</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_apply</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">prod_univ_sum</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_sum</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Fintype.piFinset_univ</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Finset.sum_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">done</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">MainGoal_2</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n  <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span><span class=\"bp\">∑</span> <span class=\"n\">σ</span><span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh1</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">MainGoal_3</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span><span class=\"bp\">∑</span> <span class=\"n\">σ</span><span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n  <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span><span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh2</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">MainGoal_4</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span><span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n  <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_left_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">prod_mul_distrib</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n    <span class=\"n\">done</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">MainGoal_5</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n  <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">hhh3</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n\n  <span class=\"c1\">-- /////////////////////////////////////////////////////////////////////////////////////////////////////</span>\n\n      <span class=\"kd\">def</span> <span class=\"n\">MainGoal_6_1_1_1</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):=</span> <span class=\"o\">(</span><span class=\"n\">det_apply'</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n\n      <span class=\"kd\">def</span> <span class=\"n\">MainGoal_6_1_1_2</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span>\n      <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n        <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n        <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span>\n        <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h212x</span> <span class=\"n\">h212a</span>\n          <span class=\"k\">have</span> <span class=\"n\">h2_1_2_1</span>\n            <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h212x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h212x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h212x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h212x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">rfl</span> <span class=\"c1\">--竟然直接搞定了</span>\n          <span class=\"k\">have</span> <span class=\"n\">h2_1_2_2</span> <span class=\"o\">:=</span> <span class=\"n\">mul_comm</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h212x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h212x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span>\n          <span class=\"k\">have</span> <span class=\"n\">h2_1_2_3</span> <span class=\"o\">:=</span> <span class=\"n\">h2_1_2_1.trans</span> <span class=\"n\">h2_1_2_2</span>\n          <span class=\"n\">exact</span> <span class=\"n\">h2_1_2_3</span>\n      <span class=\"kd\">def</span> <span class=\"n\">MainGoal_6_1_1_3</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):=</span> <span class=\"o\">(</span><span class=\"n\">MainGoal_6_1_1_1</span> <span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"o\">(</span><span class=\"n\">MainGoal_6_1_1_2</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n\n    <span class=\"kd\">def</span> <span class=\"n\">MainGoal_6_1_1</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">MainGoal_6_1_1_3</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n\n    <span class=\"c1\">--</span>\n\n      <span class=\"kd\">def</span> <span class=\"n\">h2_2_1</span><span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):=</span> <span class=\"n\">det_apply'</span> <span class=\"n\">N</span>\n\n      <span class=\"kd\">def</span> <span class=\"n\">h2_2_2</span><span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span>  <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n          <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span>\n          <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h222x</span> <span class=\"n\">h222a</span>\n            <span class=\"k\">have</span> <span class=\"n\">h2_2_2_1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h222x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h222x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h222x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h222x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span>\n              <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n              <span class=\"n\">rfl</span>\n            <span class=\"k\">have</span> <span class=\"n\">h2_2_2_2</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mul_comm</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h222x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h222x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">))</span>\n            <span class=\"k\">have</span> <span class=\"n\">h2_2_2_3</span><span class=\"o\">:=</span> <span class=\"n\">h2_2_2_1.trans</span> <span class=\"n\">h2_2_2_2</span>\n            <span class=\"n\">exact</span> <span class=\"n\">h2_2_2_3</span>\n\n    <span class=\"kd\">def</span> <span class=\"n\">h2_2_3</span><span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):=</span> <span class=\"o\">(</span><span class=\"n\">h2_2_1</span> <span class=\"n\">N</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"o\">(</span><span class=\"n\">h2_2_2</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n\n    <span class=\"kd\">def</span> <span class=\"n\">MainGoal_6_1_2</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"n\">det</span> <span class=\"n\">N</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">h2_2_3</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">MainGoal_6_1</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span>\n  <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">temp1</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">MainGoal_6_1_1</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n    <span class=\"k\">have</span> <span class=\"n\">temp2</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">MainGoal_6_1_2</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">congr</span> <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"n\">HMul.hMul</span> <span class=\"o\">(</span><span class=\"n\">MainGoal_6_1_1</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">MainGoal_6_1_2</span> <span class=\"n\">N</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"n\">mul_sum</span> <span class=\"c1\">--???</span>\n\n  <span class=\"c1\">--</span>\n\n    <span class=\"kd\">def</span> <span class=\"n\">h3_3</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span><span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h3_2</span><span class=\"o\">:</span> <span class=\"n\">h3_1</span> <span class=\"bp\">∈</span> <span class=\"n\">univ</span><span class=\"o\">)</span>\n    <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">))</span>\n        <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"k\">have</span> <span class=\"n\">h3_3_1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">))</span>\n          <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n          <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"c1\">-- refine' mul_comm _ _</span>\n            <span class=\"k\">have</span> <span class=\"n\">h3_3_1_1</span> <span class=\"o\">:=</span> <span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">))</span>\n            <span class=\"n\">exact</span> <span class=\"n\">h3_3_1_1</span>\n          <span class=\"k\">have</span> <span class=\"n\">h3_3_2</span><span class=\"o\">:=</span> <span class=\"n\">h3_3_1.trans</span> <span class=\"n\">mul_sum</span>\n          <span class=\"n\">exact</span> <span class=\"n\">h3_3_2</span>\n\n    <span class=\"kd\">def</span> <span class=\"n\">h3_4</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span><span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h3_2</span><span class=\"o\">:</span> <span class=\"n\">h3_1</span> <span class=\"bp\">∈</span> <span class=\"n\">univ</span><span class=\"o\">):</span> <span class=\"bp\">∑</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">))</span>\n    <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">)))</span>\n      <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n      <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span>\n      <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h34x_1</span> <span class=\"n\">h34a</span>\n        <span class=\"k\">have</span> <span class=\"n\">h3_4_1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">))</span>\n        <span class=\"bp\">=</span><span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">)))</span>\n          <span class=\"o\">:=</span> <span class=\"o\">((</span><span class=\"n\">mul_left_comm</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n                <span class=\"o\">(</span><span class=\"n\">congrArg</span> <span class=\"o\">(</span><span class=\"n\">HMul.hMul</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n                  <span class=\"o\">(</span><span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">))))</span>\n        <span class=\"k\">have</span> <span class=\"n\">h3_4_2</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">)))</span>\n        <span class=\"bp\">=</span><span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">)))</span>\n          <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mul_left_comm</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">h34x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">h3_1</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span>\n              <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">h3_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">h34x_1</span><span class=\"o\">)))</span>\n        <span class=\"k\">have</span> <span class=\"n\">h3_4_3</span><span class=\"o\">:=</span> <span class=\"n\">h3_4_1.trans</span> <span class=\"n\">h3_4_2</span>\n        <span class=\"n\">exact</span> <span class=\"n\">h3_4_3</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">MainGoal_6_2</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"n\">x_1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n  <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">x_1</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">x_2</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"n\">x_2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">x_1</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">x_1</span><span class=\"o\">)))</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:=</span> <span class=\"n\">MainGoal_6_1</span> <span class=\"n\">M</span> <span class=\"n\">N</span>\n    <span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n    <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">Eq.refl</span> <span class=\"n\">univ</span><span class=\"o\">)</span>\n    <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">h3_1</span> <span class=\"n\">h3_2</span>\n      <span class=\"k\">have</span> <span class=\"n\">h3_5</span><span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">h3_3</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">h3_1</span> <span class=\"n\">h3_2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"o\">(</span><span class=\"n\">h3_4</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">h3_1</span> <span class=\"n\">h3_2</span><span class=\"o\">)</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h3_5</span>\n\n  <span class=\"c1\">--</span>\n\n  <span class=\"kd\">def</span> <span class=\"n\">MainGoal_6_3</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):=</span> <span class=\"o\">(</span><span class=\"n\">MainGoal_6_1</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"o\">(</span><span class=\"n\">MainGoal_6_2</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n\n  <span class=\"kd\">lemma</span> <span class=\"n\">MainGoal_6</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">):</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n  <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span>\n    <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h4</span><span class=\"o\">:=</span> <span class=\"n\">MainGoal_6_3</span> <span class=\"n\">M</span> <span class=\"n\">N</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">h4</span><span class=\"o\">]</span>\n    <span class=\"n\">congr</span>\n    <span class=\"n\">funext</span> <span class=\"n\">xx1</span>\n    <span class=\"n\">congr</span>\n    <span class=\"n\">funext</span> <span class=\"n\">xx2</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_right_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n    <span class=\"n\">done</span>\n\n\n\n  <span class=\"c1\">-- set_option linter.unusedVariables false in</span>\n  <span class=\"c1\">-- @[simp]</span>\n  <span class=\"kd\">theorem</span> <span class=\"n\">MainGoal</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span><span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span> <span class=\"o\">:=</span>\n      <span class=\"k\">calc</span>\n          <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n          <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">MainGoal_1</span> <span class=\"n\">M</span> <span class=\"n\">N</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span>\n                <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">Bijective</span><span class=\"o\">,</span>\n                  <span class=\"bp\">∑</span> <span class=\"n\">σ</span>\n                    <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                      <span class=\"n\">ε</span> <span class=\"n\">σ</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">MainGoal_2</span> <span class=\"n\">M</span> <span class=\"n\">N</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span><span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">MainGoal_3</span> <span class=\"n\">M</span> <span class=\"n\">N</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span>\n                <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                  <span class=\"bp\">∑</span> <span class=\"n\">τ</span>\n                    <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n                      <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"n\">ε</span> <span class=\"n\">τ</span>\n                      <span class=\"bp\">*</span>\n                      <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">MainGoal_4</span> <span class=\"n\">M</span> <span class=\"n\">N</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">MainGoal_5</span> <span class=\"n\">M</span> <span class=\"n\">N</span>\n          <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"c1\">-- simp only [det_apply', Finset.mul_sum, mul_comm, mul_left_comm, mul_assoc] --这里无法分步，所以直接分析print来写成下面这样子：</span>\n            <span class=\"n\">exact</span> <span class=\"n\">MainGoal_6</span> <span class=\"n\">M</span> <span class=\"n\">N</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h1</span>\n    <span class=\"n\">done</span>\n\n\n<span class=\"kd\">end</span> <span class=\"n\">Matrix</span>\n</code></pre></div>",
        "id": 409312235,
        "sender_full_name": "chenjulang",
        "timestamp": 1703135755
    },
    {
        "content": "<p>It may casued by too many \"have\"</p>",
        "id": 409312363,
        "sender_full_name": "chenjulang",
        "timestamp": 1703135834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 409312378,
        "sender_full_name": "Notification Bot",
        "timestamp": 1703135847
    },
    {
        "content": "<p>Though 60 more lines,  but faster.</p>",
        "id": 409312570,
        "sender_full_name": "chenjulang",
        "timestamp": 1703135988
    }
]