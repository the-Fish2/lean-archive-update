[
    {
        "content": "<p>Recently I found a <code>bif</code> syntax and I was somewhat confused. It is said that <code>bif</code>/·<code>cond</code> is nearly the same as <code>if</code>/<code>ite</code> but optimized for the boolean condition. So I wonder...</p>\n<ol>\n<li>When should I use <code>bif</code>?</li>\n<li>Why is <code>if</code> defined by <code>ite</code> rather than <code>cond</code>? Is <code>bif</code> or <code>cond</code> always better than <code>if</code> or <code>ite</code> because of the \"optimized\"?</li>\n<li>Comparing to <code>if prop</code> and <code>if h : prop</code>, <code>bif</code> doesn't support <code>bif h : bool</code>. Is a good idea to add support?</li>\n</ol>\n<p>Thanks for answers in advance.</p>",
        "id": 440809204,
        "sender_full_name": "fonqL",
        "timestamp": 1716800668
    },
    {
        "content": "<p>Here's my take on this:</p>\n<ol>\n<li>Use <code>bif</code> when the condition is expressed with Boolean operators; <code>bif x == y</code> vs <code>if x = y</code>, <code>bif b &amp;&amp; y</code> vs <code>if px \\and py</code>,<code>bif !b</code> vs <code>if \\not p</code> etc</li>\n<li>Because you need <code>ite</code> in the first place to convert <code>Prop</code> to <code>Bool</code>!</li>\n<li>What would <code>h</code> carry in this case? If you want it to carry <code>h : bool = true</code>, then arguably <code>if h : bool = true</code> is a clearer thing to write in the first place</li>\n</ol>",
        "id": 440822331,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716804838
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Usage.20of.20.60bif.60/near/440822331\">said</a>:</p>\n<blockquote>\n<ol>\n<li>Use <code>bif</code> when the condition is expressed with Boolean operators; <code>bif x == y</code> vs <code>if x = y</code>, <code>bif b &amp;&amp; y</code> vs <code>if px \\and py</code>,<code>bif !b</code> vs <code>if \\not p</code> etc</li>\n<li>Because you need <code>ite</code> in the first place to convert <code>Prop</code> to <code>Bool</code>!</li>\n<li>What would <code>h</code> carry in this case? If you want it to carry <code>h : bool = true</code>, then arguably <code>if h : bool = true</code> is a clearer thing to write in the first place</li>\n</ol>\n</blockquote>\n<p>Thanks for clarifying 1 and 3. The reason I want <code>bif h : bool</code> is actually related to problem 2. I just guess maybe <code>bif</code> is somehow \"better\" than <code>if</code>.<br>\nRegarding 2, I think it is <code>Decidable.decide</code> that converts <code>Prop</code> to <code>Bool</code> and it seems not related to <code>ite</code>?</p>",
        "id": 440835563,
        "sender_full_name": "fonqL",
        "timestamp": 1716809799
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=decide#doc\">docs#decide</a> is just a special case of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ite#doc\">docs#ite</a>; both are just a thin wrapper around <code>Decidable.rec</code></p>",
        "id": 440850009,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716814803
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Usage.20of.20.60bif.60/near/440850009\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=decide#doc\">docs#decide</a> is just a special case of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ite#doc\">docs#ite</a>; both are just a thin wrapper around <code>Decidable.rec</code></p>\n</blockquote>\n<p>So ideally <code>cond</code> can take the place of <code>ite</code>?</p>",
        "id": 440881751,
        "sender_full_name": "fonqL",
        "timestamp": 1716825431
    },
    {
        "content": "<p>This doesn't really help with my first point. If you only have <code>bif</code>, then you have to deal with<code>bif decide P then</code>. If you only have <code>if</code>, then you have to deal with <code>if b = true then</code>.</p>",
        "id": 440883502,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716826124
    },
    {
        "content": "<p>I realize that I'm confused about the subtle differences between <code>Bool</code> and <code>Decidable</code>. To me <code>Decidable</code> is just a \"overloaded function\" that converts a <code>Prop</code> to a <code>Bool</code>. </p>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Usage.20of.20.60bif.60/near/440883502\">said</a>:</p>\n<blockquote>\n<p>This doesn't really help with my first point. If you only have <code>bif</code>, then you have to deal with<code>bif decide P then</code>. If you only have <code>if</code>, then you have to deal with <code>if b = true then</code>.</p>\n</blockquote>\n<p>But the code below is valid. <code>Bool</code> and the decidable <code>Prop</code> can converts to each other automatically so that I don't need to type that much(This is great.). What do you mean by \"have to deal with\"?</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">variable</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Decidable</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"o\">]</span>\n<span class=\"kn\">variable</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Bool</span><span class=\"o\">)</span>\n<span class=\"kn\">example</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bif</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"n\">True</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span><span class=\"w\">  </span><span class=\"c1\">-- ok</span>\n<span class=\"kn\">example</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"n\">True</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span><span class=\"w\">  </span><span class=\"c1\">-- ok</span>\n</code></pre></div>",
        "id": 440887897,
        "sender_full_name": "fonqL",
        "timestamp": 1716827713
    },
    {
        "content": "<p>When you look at the goal view at the sorry, you see the longer spelling; this is what I mean by \"deal with\"</p>",
        "id": 440889797,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716828614
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"658953\">fonqL</span> has marked this topic as resolved.</p>",
        "id": 440947094,
        "sender_full_name": "Notification Bot",
        "timestamp": 1716860340
    }
]