[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.LinearIndependent</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">DivisionRing</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">lin_dep_aab</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">LinearIndependent</span> <span class=\"n\">K</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">intro</span> <span class=\"n\">aab_dep</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">linearIndependent_iff'</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">aab_dep</span>\n<span class=\"k\">have</span> <span class=\"n\">aab_comb</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Finset.sum</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"n\">i</span> <span class=\"bp\">•</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">]</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n<span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">aab_dep</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">])</span> <span class=\"n\">at</span> <span class=\"n\">aab_comb</span>\n</code></pre></div>\n<p>fails with</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Failed to find (Finset.sum {0, 1, 2} fun i =&gt; ![1, -1, 0] i • ![a, a, b] i) =\n  0 as the type of a parameter of (Finset.sum {0, 1, 2} fun i =&gt; ![1, -1, 0] i • ![a, a, b] i) = 0 →\n  ∀ i ∈ {0, 1, 2}, ![1, -1, 0] i = 0.\n</code></pre></div>\n<p>I am trying to eventually get an obvious contradiction here.</p>",
        "id": 427968678,
        "sender_full_name": "Abdullah Uyu",
        "timestamp": 1710951976
    },
    {
        "content": "<p>In other words, I want to instantiate aab_dep for <code>{0,1,2}</code> and <code>![1,-1,0]</code>.</p>",
        "id": 427976189,
        "sender_full_name": "Abdullah Uyu",
        "timestamp": 1710954113
    },
    {
        "content": "<p>Oh, I am doing something silly.</p>",
        "id": 427977154,
        "sender_full_name": "Abdullah Uyu",
        "timestamp": 1710954382
    },
    {
        "content": "<p>Well, nevermind. I still don't understand what's going on here.</p>",
        "id": 427998421,
        "sender_full_name": "Abdullah Uyu",
        "timestamp": 1710961614
    },
    {
        "content": "<p>FWIW, the following works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">lin_dep_aab</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">LinearIndependent</span> <span class=\"n\">K</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">intro</span> <span class=\"n\">aab_dep</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">linearIndependent_iff'</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">aab_dep</span>\n<span class=\"n\">specialize</span> <span class=\"n\">aab_dep</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">]</span>\n<span class=\"n\">aesop</span>\n</code></pre></div>\n<p>But, I suppose <code>aesop</code>is an overkill for this.</p>",
        "id": 428068734,
        "sender_full_name": "Abdullah Uyu",
        "timestamp": 1711005535
    }
]