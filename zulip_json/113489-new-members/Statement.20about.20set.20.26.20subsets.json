[
    {
        "content": "<p>I want to formalize a proof of the following statement: \"There exists a set S which is equal to the set of its finite subsets\".<br>\nAlthough, I've found myself stuck at the very first step: formalizing the statement.</p>\n<p>My attempts (two of which I show below) all fall to type mismatches, as Set t is a different type from t.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Set.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Set.Finite</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">set_eq_own_finsets1</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">,</span> <span class=\"n\">S</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">Set.Finite</span> <span class=\"n\">T</span> <span class=\"bp\">∧</span> <span class=\"n\">T</span> <span class=\"bp\">⊆</span> <span class=\"n\">S</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">set_eq_own_finsets2</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"n\">S</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">Set.Finite</span> <span class=\"n\">T</span> <span class=\"bp\">∧</span> <span class=\"n\">T</span> <span class=\"bp\">⊆</span> <span class=\"n\">S</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>How would I get around this? Should I use a different type instead of Set?</p>",
        "id": 418560318,
        "sender_full_name": "Luke Hammer",
        "timestamp": 1706499186
    },
    {
        "content": "<p>if you're trying to prove something about sets in the Set Theoretical sense (where the members of the sets are sets themselves and it's sets all the way down), then <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ZFSet#doc\">docs#ZFSet</a> may be a better choice of type</p>",
        "id": 418561354,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1706500190
    },
    {
        "content": "<p>though the tools for dealing with that kind of set are fairly limited... for example I don't think <code>ZFSet.Finite</code> is a thing (yet)</p>",
        "id": 418561858,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1706500603
    },
    {
        "content": "<p>Ok cool, thanks for the info!</p>",
        "id": 418562100,
        "sender_full_name": "Luke Hammer",
        "timestamp": 1706500810
    }
]