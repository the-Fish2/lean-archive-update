[
    {
        "content": "<p>I am trying to establish the following result in Lean, which I need to introduce some useful results for the Gamma distribution, but I cannot fill in one of the sorry's (the one that is followed by \"I cannot finish up this step\", the other ones are omitted for brevity of the MWE and I can send a complete version if preferred). I have to establish that a certain set is measurable, but I'm not sure if that is possible or whether my approach is incorrect... I'm hoping that someone can point out what I'm doing wrong/how I should proceed/what would be a better approach! </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Gaussian</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Probability.Notation</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Probability.Cdf</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">ENNReal</span> <span class=\"n\">NNReal</span> <span class=\"n\">Real</span>\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span> <span class=\"n\">Real</span> <span class=\"n\">Set</span> <span class=\"n\">Filter</span> <span class=\"n\">Topology</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">lintegral_eq_lintegral_Ici_add_Iio</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∫⁻</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Ici</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Iio</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">noncomputable</span>\n<span class=\"kd\">def</span> <span class=\"n\">gammaPdfReal</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"k\">then</span> <span class=\"n\">r</span><span class=\"bp\">^</span><span class=\"n\">a</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">Real.Gamma</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"k\">else</span> <span class=\"mi\">0</span>\n\n<span class=\"sd\">/-- The PDF of the gamma Distribution on the extended real Numbers-/</span>\n<span class=\"kd\">noncomputable</span>\n<span class=\"kd\">def</span> <span class=\"n\">gammaPdf</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">:=</span> <span class=\"n\">ENNReal.ofReal</span> <span class=\"o\">(</span><span class=\"n\">gammaPdfReal</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"sd\">/-- Expresses the integral over Ioi 0 of t^(a-1) * exp(-r*t) in terms of the Gamma function. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">pow_exp_integral_Ioi_insert_1</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Ioi</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"n\">Gamma</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">rexp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"o\">))</span>\n    <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">integral_gammaPdf_eq_one</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">lintegral_eq_lintegral_Ici_add_Iio</span> <span class=\"o\">(</span><span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">ENNReal.toReal_eq_one_iff</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">leftSide</span> <span class=\"o\">:</span> <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Iio</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Proof steps removed for brevity</span>\n  <span class=\"k\">have</span> <span class=\"n\">rightSide</span> <span class=\"o\">:</span>\n      <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Ici</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Ici</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">ENNReal.ofReal</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"bp\">^</span><span class=\"n\">a</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">Real.Gamma</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">rexp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)))</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Proof steps removed for brevity</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">leftSide</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">rightSide</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">integral_eq_lintegral_of_nonneg_ae</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">MeasureTheory.integral_Ici_eq_integral_Ioi</span><span class=\"o\">,</span> <span class=\"n\">pow_exp_integral_Ioi_insert_1</span> <span class=\"n\">ha</span> <span class=\"n\">hr</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">unfold</span> <span class=\"n\">EventuallyLE</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">zero_apply</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ae_restrict_iff</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_Ici</span><span class=\"o\">]</span>\n    <span class=\"bp\">·</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Proof steps removed for brevity</span>\n    <span class=\"bp\">·</span> <span class=\"n\">apply</span> <span class=\"n\">Measurable.setOf</span>\n      <span class=\"gr\">sorry</span> <span class=\"c1\">-- I cannot finish up this step!</span>\n  <span class=\"bp\">·</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Proof steps removed for brevity</span>\n</code></pre></div>",
        "id": 410981050,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704273594
    },
    {
        "content": "<p>What's the goal state? (I'm currently stuck compiling all of mathlib)</p>",
        "id": 410981375,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704273742
    },
    {
        "content": "<p>This is the state at the sorry: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">ar</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">ha</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span>\n<span class=\"n\">hr</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">r</span>\n<span class=\"n\">leftSide</span><span class=\"o\">:</span> <span class=\"bp\">∫⁻</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Iio</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">rightSide</span><span class=\"o\">:</span> <span class=\"bp\">∫⁻</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Ici</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"bp\">=</span>\n  <span class=\"bp\">∫⁻</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Ici</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">ENNReal.ofReal</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"n\">Gamma</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">rexp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)))</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">Measurable</span> <span class=\"k\">fun</span> <span class=\"n\">a_1</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"n\">Gamma</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a_1</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">rexp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">a_1</span><span class=\"o\">))</span>\n</code></pre></div>",
        "id": 410981442,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704273775
    },
    {
        "content": "<p>Does <code>measurability</code> do it?</p>",
        "id": 410981474,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704273795
    },
    {
        "content": "<p>And this is the state just before rw [ae_restrict_iff]</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">ar</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">ha</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span>\n<span class=\"n\">hr</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">r</span>\n<span class=\"n\">leftSide</span><span class=\"o\">:</span> <span class=\"bp\">∫⁻</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Iio</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">rightSide</span><span class=\"o\">:</span> <span class=\"bp\">∫⁻</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Ici</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"bp\">=</span>\n  <span class=\"bp\">∫⁻</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Ici</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">ENNReal.ofReal</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"n\">Gamma</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">rexp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)))</span>\n<span class=\"bp\">⊢</span> <span class=\"bp\">∀ᵐ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">∂</span><span class=\"n\">Measure.restrict</span> <span class=\"n\">volume</span> <span class=\"o\">(</span><span class=\"n\">Ici</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"n\">Gamma</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">rexp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n</code></pre></div>",
        "id": 410981518,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704273822
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Measurable.20set.20of.20function.20that.20maps.20to.20inequalities/near/410981474\">said</a>:</p>\n<blockquote>\n<p>Does <code>measurability</code> do it?</p>\n</blockquote>\n<p>No, \"tactic 'aesop' failed, failed to prove the goal after exhaustive search.\"</p>",
        "id": 410981604,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704273846
    },
    {
        "content": "<p>Try adding <code>Measurable (· ^ (a - 1) : ℝ → ℝ)</code> to the context and run <code>measurability</code> again.</p>",
        "id": 410981641,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704273866
    },
    {
        "content": "<p>Like this? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">apply</span> <span class=\"n\">Measurable.setOf</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n      <span class=\"n\">measurability</span>\n</code></pre></div>\n<p>That did not work</p>",
        "id": 410981800,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704273952
    },
    {
        "content": "<p>I think the problem is that the function actually maps a_1 to an inequality, so I'm not sure if <code>measurability</code> (or at least I) have a clear picture of how to deal with that...</p>",
        "id": 410982032,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704274036
    },
    {
        "content": "<p>Wait what do you mean?</p>",
        "id": 410982078,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704274059
    },
    {
        "content": "<p>This line from the state, it maps <code>a_1</code> to <code>0 &lt;= ...</code>, right? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Measurable</span> <span class=\"k\">fun</span> <span class=\"n\">a_1</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"n\">Gamma</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a_1</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">rexp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">a_1</span><span class=\"o\">))</span>\n</code></pre></div>",
        "id": 410982210,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704274106
    },
    {
        "content": "<p>I see a function of the form <code>fun x ↦ constant * x ^ positive_constant * something_continuous</code></p>",
        "id": 410982234,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704274121
    },
    {
        "content": "<p>Yeah well that's because you use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Measurable.setOf#doc\">docs#Measurable.setOf</a></p>",
        "id": 410982291,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704274141
    },
    {
        "content": "<p>This is to translate between measurability of predicates and measurability of their associated sets.</p>",
        "id": 410982333,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704274168
    },
    {
        "content": "<p>What's the goal state just before <code>Measurable.setOf</code>?</p>",
        "id": 410982455,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704274210
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">⊢</span> <span class=\"n\">MeasurableSet</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"n\">Gamma</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">rexp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">))}</span>\n</code></pre></div>",
        "id": 410982470,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704274222
    },
    {
        "content": "<p>That looks great! Have you tried applying <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasurableSet.preimage#doc\">docs#MeasurableSet.preimage</a> ?</p>",
        "id": 410982567,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704274268
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Measurable.20set.20of.20function.20that.20maps.20to.20inequalities/near/410982333\">said</a>:</p>\n<blockquote>\n<p>This is to translate between measurability of predicates and measurability of their associated sets.</p>\n</blockquote>\n<p>Thank you, I misinterpreted that one!</p>",
        "id": 410982606,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704274291
    },
    {
        "content": "<p>You will want <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=measurableSet_Ici#doc\">docs#measurableSet_Ici</a></p>",
        "id": 410982624,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704274303
    },
    {
        "content": "<p>Thank you! Now I just have to establish measurability of the function, that part should be fine!</p>",
        "id": 410982793,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704274388
    },
    {
        "content": "<p>I investigated a bit: apparently <code>measurability</code> fails to show <code>Measurable fun x =&gt; r * x</code>. It should be smarter than that.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Gaussian</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Probability.Notation</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Probability.Cdf</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">ENNReal</span> <span class=\"n\">NNReal</span> <span class=\"n\">Real</span>\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span> <span class=\"n\">Real</span> <span class=\"n\">Set</span> <span class=\"n\">Filter</span> <span class=\"n\">Topology</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">lintegral_eq_lintegral_Ici_add_Iio</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∫⁻</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Ici</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Iio</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">noncomputable</span>\n<span class=\"kd\">def</span> <span class=\"n\">gammaPdfReal</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"k\">then</span> <span class=\"n\">r</span><span class=\"bp\">^</span><span class=\"n\">a</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">Real.Gamma</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"k\">else</span> <span class=\"mi\">0</span>\n\n<span class=\"sd\">/-- The PDF of the gamma Distribution on the extended real Numbers-/</span>\n<span class=\"kd\">noncomputable</span>\n<span class=\"kd\">def</span> <span class=\"n\">gammaPdf</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span> <span class=\"o\">:=</span> <span class=\"n\">ENNReal.ofReal</span> <span class=\"o\">(</span><span class=\"n\">gammaPdfReal</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"sd\">/-- Expresses the integral over Ioi 0 of t^(a-1) * exp(-r*t) in terms of the Gamma function. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">pow_exp_integral_Ioi_insert_1</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Ioi</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">^</span> <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"n\">Gamma</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">rexp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"o\">))</span>\n    <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">integral_gammaPdf_eq_one</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">lintegral_eq_lintegral_Ici_add_Iio</span> <span class=\"o\">(</span><span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">ENNReal.toReal_eq_one_iff</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">leftSide</span> <span class=\"o\">:</span> <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Iio</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Proof steps removed for brevity</span>\n  <span class=\"k\">have</span> <span class=\"n\">rightSide</span> <span class=\"o\">:</span>\n      <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Ici</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">gammaPdf</span> <span class=\"n\">a</span> <span class=\"n\">r</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">∫⁻</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Ici</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">ENNReal.ofReal</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"bp\">^</span><span class=\"n\">a</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">Real.Gamma</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">rexp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)))</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Proof steps removed for brevity</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">leftSide</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">rightSide</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">integral_eq_lintegral_of_nonneg_ae</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">MeasureTheory.integral_Ici_eq_integral_Ioi</span><span class=\"o\">,</span> <span class=\"n\">pow_exp_integral_Ioi_insert_1</span> <span class=\"n\">ha</span> <span class=\"n\">hr</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">unfold</span> <span class=\"n\">EventuallyLE</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">zero_apply</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ae_restrict_iff</span><span class=\"o\">]</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mem_Ici</span><span class=\"o\">]</span>\n    <span class=\"bp\">·</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Proof steps removed for brevity</span>\n    <span class=\"bp\">·</span> <span class=\"n\">refine</span> <span class=\"n\">measurableSet_le</span> <span class=\"n\">measurable_const</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n      <span class=\"n\">refine</span> <span class=\"n\">Measurable.mul</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n      <span class=\"bp\">·</span> <span class=\"n\">measurability</span>\n      <span class=\"bp\">·</span> <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">Measurable.neg</span> <span class=\"bp\">?</span><span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">exp</span>\n        <span class=\"c1\">-- measurability still fails here</span>\n        <span class=\"n\">exact</span> <span class=\"n\">measurable_id.const_mul</span> <span class=\"n\">_</span>\n  <span class=\"bp\">·</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Proof steps removed for brevity</span>\n</code></pre></div>",
        "id": 410983084,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1704274520
    },
    {
        "content": "<p>Thank you, that closes up my argument!</p>",
        "id": 410983292,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704274616
    }
]