[
    {
        "content": "<p>Hi, I'm working through section 10.3 of FPIL and was trying to run the code for myself, but I get the same error for the first two examples from that section: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">arrayMapHelper</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">arr</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">soFar</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">β</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">inBounds</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;</span> <span class=\"n\">arr.size</span> <span class=\"k\">then</span>\n    <span class=\"n\">arrayMapHelper</span> <span class=\"n\">f</span> <span class=\"n\">arr</span> <span class=\"o\">(</span><span class=\"n\">soFar.push</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">arr</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]))</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"k\">else</span> <span class=\"n\">soFar</span>\n<span class=\"n\">termination_by</span> <span class=\"c1\">-- Too many extra parameters bound; the function definition only has 0 extra parameters.</span>\n  <span class=\"n\">arrayMapHelper</span> <span class=\"n\">_</span> <span class=\"n\">arr</span> <span class=\"n\">_</span> <span class=\"n\">i</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">arr.size</span> <span class=\"bp\">-</span> <span class=\"n\">i</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">findHelper</span> <span class=\"o\">(</span><span class=\"n\">arr</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"o\">(</span><span class=\"n\">Nat</span> <span class=\"bp\">×</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;</span> <span class=\"n\">arr.size</span> <span class=\"k\">then</span>\n    <span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">arr</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span>\n    <span class=\"k\">if</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"k\">then</span>\n      <span class=\"n\">some</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n    <span class=\"k\">else</span> <span class=\"n\">findHelper</span> <span class=\"n\">arr</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"k\">else</span> <span class=\"n\">none</span>\n<span class=\"n\">termination_by</span> <span class=\"c1\">-- Too many extra parameters bound; the function definition only has 0 extra parameters.</span>\n  <span class=\"n\">findHelper</span> <span class=\"n\">arr</span> <span class=\"n\">p</span> <span class=\"n\">i</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">arr.size</span> <span class=\"bp\">-</span> <span class=\"n\">i</span>\n</code></pre></div>\n<p>Any clue? these are just copy-pasted from <a href=\"https://lean-lang.org/functional_programming_in_lean/programs-proofs/arrays-termination.html\">https://lean-lang.org/functional_programming_in_lean/programs-proofs/arrays-termination.html</a>.</p>",
        "id": 430022119,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1711616324
    },
    {
        "content": "<p>This changed in lean recently. I think you can just drop the name of the definition in the termination by clause</p>",
        "id": 430042075,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1711623822
    },
    {
        "content": "<p>Thanks! dropping the entire LHS worked for me: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">arrayMapHelper</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">arr</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">soFar</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">β</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">inBounds</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;</span> <span class=\"n\">arr.size</span> <span class=\"k\">then</span>\n    <span class=\"n\">arrayMapHelper</span> <span class=\"n\">f</span> <span class=\"n\">arr</span> <span class=\"o\">(</span><span class=\"n\">soFar.push</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">arr</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]))</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"k\">else</span> <span class=\"n\">soFar</span>\n<span class=\"n\">termination_by</span> <span class=\"c1\">-- Too many extra parameters bound; the function definition only has 0 extra parameters.</span>\n  <span class=\"n\">arrayMapHelper</span> <span class=\"n\">_</span> <span class=\"n\">arr</span> <span class=\"n\">_</span> <span class=\"n\">i</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">arr.size</span> <span class=\"bp\">-</span> <span class=\"n\">i</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">arrayMapHelper2</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">arr</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">soFar</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">β</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">inBounds</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;</span> <span class=\"n\">arr.size</span> <span class=\"k\">then</span>\n    <span class=\"n\">arrayMapHelper2</span> <span class=\"n\">f</span> <span class=\"n\">arr</span> <span class=\"o\">(</span><span class=\"n\">soFar.push</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">arr</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]))</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"k\">else</span> <span class=\"n\">soFar</span>\n<span class=\"n\">termination_by</span> <span class=\"n\">_</span> <span class=\"n\">arr</span> <span class=\"n\">_</span> <span class=\"n\">i</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">arr.size</span> <span class=\"bp\">-</span> <span class=\"n\">i</span> <span class=\"c1\">-- fails with same error</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">arrayMapHelper3</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">arr</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">soFar</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"n\">β</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">inBounds</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;</span> <span class=\"n\">arr.size</span> <span class=\"k\">then</span>\n    <span class=\"n\">arrayMapHelper3</span> <span class=\"n\">f</span> <span class=\"n\">arr</span> <span class=\"o\">(</span><span class=\"n\">soFar.push</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">arr</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]))</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"k\">else</span> <span class=\"n\">soFar</span>\n<span class=\"n\">termination_by</span> <span class=\"n\">arr.size</span> <span class=\"bp\">-</span> <span class=\"n\">i</span> <span class=\"c1\">-- works</span>\n</code></pre></div>",
        "id": 430052842,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1711627465
    },
    {
        "content": "<p>I'll file an issue as well on the GitHub</p>",
        "id": 430053859,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1711627744
    }
]