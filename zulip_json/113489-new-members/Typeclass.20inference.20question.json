[
    {
        "content": "<p>Hi, I am curious about this snipper of code from Mathematics in Lean: <br>\n<a href=\"/user_uploads/3121/gnocPKq8Xtva6Is5uhjFOzau/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/gnocPKq8Xtva6Is5uhjFOzau/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/gnocPKq8Xtva6Is5uhjFOzau/image.png\"></a></div><p>The comment from the authors is that <code>: α</code> is necessary, otherwise Lean takes issue with the code. If I understand right, this is because if we do not write this down, Lean does not know what instance of the typeclass to retrieve the one attribute from. Is this correct? <br>\nWhat happens when we type <code>: α</code> that solves this issue?</p>",
        "id": 442069565,
        "sender_full_name": "VayusElytra",
        "timestamp": 1717344943
    },
    {
        "content": "<p>The type of <code>One₁.one</code> is <code>∀ {α : Type} [One₁ α], α</code>, meaning that it is supposed to produce an element of some type, and will figure out both <code>α</code> and the instance of <code>One₁ α</code> from context. Without knowing what type to produce, it will not be able to find the <code>One₁ ?α</code> instance since it doesn't know what to look for</p>",
        "id": 442070931,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1717345567
    },
    {
        "content": "<p>When you say the expected type is <code>α</code>, this gives the necessary context because this <code>α</code> unifies with the return type of <code>One₁.one</code> so it knows to set <code>?α := α</code> and look for <code>One₁ α</code> (which it finds in the context). But you could also write e.g. <code>Nat</code> instead of <code>α</code>, and it would instead try to find a <code>One₁ Nat</code> instance</p>",
        "id": 442071263,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1717345740
    },
    {
        "content": "<p>Thank you, this is clear now!</p>",
        "id": 442103950,
        "sender_full_name": "VayusElytra",
        "timestamp": 1717361841
    }
]