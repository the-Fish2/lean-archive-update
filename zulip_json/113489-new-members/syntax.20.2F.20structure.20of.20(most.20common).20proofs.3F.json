[
    {
        "content": "<p>So as a beginner I naturally struggle to understand some of the syntax I'm seeing around the web. </p>\n<p>I have tried to find answers but can't find a simple guide that just explains what the syntax of (the most common) proofs.</p>\n<p>I am guess it is something like the following - but I can't find an easy to read guide that confirms it:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>name can be anything {variable type declarations} (hyopthesis) (hyopthesis) : statement to prove :=\n method eg calc\n statement 1 = statement 2 := by  tactic\n statement 2= statement 3 := by tactic\n ...\n _ = conclusion statement to prove := by tactic\n</code></pre></div>\n<p>Is this correct?</p>\n<p>I've seen \"example\" used for the name a lot, which makes me thing the name isn't arbitrary.</p>",
        "id": 442281914,
        "sender_full_name": "rzeta0",
        "timestamp": 1717427538
    },
    {
        "content": "<p>That is one of many formats, a <code>calc</code> proof, see <a href=\"https://leanprover-community.github.io/extras/calc.html\">doc#calc.html</a>. To get a better overview I'd suggest <a href=\"https://leanprover.github.io/theorem_proving_in_lean4/\">#tpil</a>.</p>",
        "id": 442310158,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1717432963
    },
    {
        "content": "<blockquote>\n<p>which makes me thing the name isn't arbitrary</p>\n</blockquote>\n<p>If you use the <code>example ...</code> command then the theorem is checked and thrown away. If you use <code>theorem foo ...</code> then the theorem is checked and you can refer to it in future proofs as <code>foo</code>.</p>",
        "id": 442333856,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717438430
    },
    {
        "content": "<p>Thanks both - looks like I now need to learn about \"modes\" as that page refers to them - tactic mode, term mode,...</p>",
        "id": 442373839,
        "sender_full_name": "rzeta0",
        "timestamp": 1717449086
    },
    {
        "content": "<p><code>by</code> switches Lean from term mode to tactic mode, and <code>exact</code> switches it from tactic mode to term mode.</p>",
        "id": 442374953,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717449468
    },
    {
        "content": "<p>Isn't term mode the pure functional language vs. tactics being a language inside that language?</p>",
        "id": 442459085,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1717485805
    }
]