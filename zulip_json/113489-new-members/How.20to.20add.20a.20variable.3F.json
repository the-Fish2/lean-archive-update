[
    {
        "content": "<p>Does anyone know how to formalize the informal statement 'The left composition of functions 'f' and 'g' is equal to the composition of the left of 'f' and the left of 'g''.Maybe adding a variable will fix it?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Complex</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">comp_left</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">≫</span> <span class=\"n\">g</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">left</span> <span class=\"bp\">=</span> <span class=\"n\">f.left</span> <span class=\"bp\">≫</span> <span class=\"n\">g.left</span> <span class=\"o\">:=</span><span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 439489067,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1716174971
    },
    {
        "content": "<p>This is not an <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 439492033,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1716177675
    },
    {
        "content": "<p>What are the types of <code>f</code> and <code>g</code>? What's <code>.left</code> in this context?</p>",
        "id": 439492065,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1716177694
    },
    {
        "content": "<p>If you can't prepare a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> in Lean, then please write a very detailed markdown/LaTeX statement.</p>",
        "id": 439492185,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1716177792
    },
    {
        "content": "<p>I'm not sure what \"left composition\" is supposed to mean</p>",
        "id": 439511032,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716187413
    },
    {
        "content": "<p>I think part of the question is how to prove that function composition is an associative operator.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">∘</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>  <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 439537584,
        "sender_full_name": "Anders Larsson",
        "timestamp": 1716198089
    }
]