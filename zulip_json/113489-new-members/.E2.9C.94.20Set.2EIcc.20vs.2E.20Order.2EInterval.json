[
    {
        "content": "<p>I am writing a program that wants to reason about intervals over the rationals. For example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Box</span> <span class=\"n\">where</span>\n  <span class=\"n\">pos</span> <span class=\"o\">:</span> <span class=\"n\">Vector</span> <span class=\"n\">ℚ</span> <span class=\"mi\">2</span>\n  <span class=\"n\">size</span> <span class=\"o\">:</span> <span class=\"n\">Vector</span> <span class=\"n\">ℚ</span><span class=\"bp\">⁺</span> <span class=\"mi\">2</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Box.x_interval</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Box</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"c1\">-- [b.pos.x, b.pos.x + b.size.w]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Box.disjoint</span> <span class=\"o\">(</span><span class=\"n\">b1</span> <span class=\"n\">b2</span> <span class=\"o\">:</span> <span class=\"n\">Box</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"c1\">-- ...</span>\n<span class=\"kd\">def</span> <span class=\"n\">Box.contains</span> <span class=\"o\">(</span><span class=\"n\">b1</span> <span class=\"n\">b2</span> <span class=\"o\">:</span> <span class=\"n\">Box</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"c1\">-- ...</span>\n</code></pre></div>\n<p>It seems like the two mathlib types for this are <code>Set.Icc</code> and <code>Order.Interval</code>. The former uses a set-based representation of <code>{ x | a ≤ x ∧ x ≤ b }</code>, and the latter uses a structure-based representation that contains the prop <code>a ≤ b</code>.</p>\n<p>Is there a particular reason to prefer one or the other for my use case?</p>",
        "id": 425814759,
        "sender_full_name": "Will Crichton",
        "timestamp": 1710113300
    },
    {
        "content": "<p>Update: if I want to extract the bounds of the interval, it seems like the <code>Order.Interval</code> representation is better, so I'll be running with that. Still curious if there are other reasons to prefer a particular representation!</p>",
        "id": 425831294,
        "sender_full_name": "Will Crichton",
        "timestamp": 1710127783
    },
    {
        "content": "<p>Yes, it all depends whether you want to reason about intervals by their elements or by their endpoints.</p>",
        "id": 425864499,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710147901
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"625391\">Will Crichton</span> has marked this topic as resolved.</p>",
        "id": 425908157,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710163449
    }
]