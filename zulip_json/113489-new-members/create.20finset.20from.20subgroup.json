[
    {
        "content": "<p>How can I create a Finset type from a Subgroup type, I want to make sum of the element in the Subgroup, here is my code </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Varphi_eq_Sum_Inf</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">varphi</span> <span class=\"n\">vK</span> <span class=\"n\">vL</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n<span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">Nat.card</span> <span class=\"n\">G</span><span class=\"o\">(</span><span class=\"n\">vL</span><span class=\"bp\">/</span><span class=\"n\">vK</span><span class=\"o\">)</span><span class=\"n\">_</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">])</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"n\">G</span><span class=\"o\">(</span><span class=\"n\">vL</span><span class=\"bp\">/</span><span class=\"n\">vK</span><span class=\"o\">)</span><span class=\"n\">_</span><span class=\"o\">[(</span><span class=\"n\">Int.ceil</span> <span class=\"n\">u</span><span class=\"o\">)])</span> <span class=\"o\">,</span> <span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">i</span><span class=\"o\">[</span><span class=\"n\">vL</span><span class=\"bp\">/</span><span class=\"n\">vK</span><span class=\"o\">]</span> <span class=\"n\">x</span><span class=\"o\">)))</span><span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>G(vL/vK)_[0] is the lower numbering ramification group,  and its type is Subgroup</p>",
        "id": 428070863,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1711006743
    },
    {
        "content": "<p>Do you mean <code>∑ x : G(vL/vK)_[⌈u⌉], ...</code> instead of <code>∑ x in (G(vL/vK)_[(Int.ceil u)]</code>?</p>",
        "id": 428079026,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711010300
    },
    {
        "content": "<p>You can sum over fintypes, and if you're lucky then a subgroup of a group which is a fintype might also be a fintype.</p>",
        "id": 428088688,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1711014064
    },
    {
        "content": "<p>Thank you! so I have to state the Subgroup is fintypes first.</p>",
        "id": 428118728,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1711024823
    },
    {
        "content": "<p>Try <code>open scoped Classical</code> (or the tactic <code>classical</code> if you are in tactic mode), and hopefully Lean will know your subgroup is a fintype</p>",
        "id": 428118919,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711024901
    },
    {
        "content": "<p>Thank you, but It doesn't work, maybe  I have to make the statement.</p>",
        "id": 428125669,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1711026922
    }
]