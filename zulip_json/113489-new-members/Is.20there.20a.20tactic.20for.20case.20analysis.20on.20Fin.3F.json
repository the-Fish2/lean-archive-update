[
    {
        "content": "<p>I have a proof where I repeat this 9 times, once for each possible value of <code>Fin 9</code> in place of <code>***_***</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"bp\">***</span><span class=\"n\">_</span><span class=\"bp\">***</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n<span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n<span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n<span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n</code></pre></div>\n<p>Here it is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">size</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">×</span> <span class=\"o\">{</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">//</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"mi\">9</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">box_idxs</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"n\">size.snd.val</span>\n  <span class=\"k\">let</span> <span class=\"n\">range</span> <span class=\"o\">:=</span> <span class=\"n\">List.range</span> <span class=\"n\">root</span>\n  <span class=\"k\">let</span> <span class=\"n\">offset</span> <span class=\"o\">:=</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"n\">root</span> <span class=\"bp\">*</span> <span class=\"n\">root</span> <span class=\"bp\">*</span> <span class=\"n\">size.fst</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">%</span> <span class=\"n\">root</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">root</span>\n  <span class=\"k\">let</span> <span class=\"n\">index</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">offset</span> <span class=\"bp\">+</span> <span class=\"n\">size.fst</span> <span class=\"bp\">*</span> <span class=\"n\">r</span> <span class=\"bp\">+</span> <span class=\"n\">c</span>\n  <span class=\"n\">index</span> <span class=\"bp\">&lt;$&gt;</span> <span class=\"n\">range</span> <span class=\"bp\">&lt;*&gt;</span> <span class=\"n\">range</span>\n\n<span class=\"kd\">example</span><span class=\"o\">:</span> <span class=\"n\">box_idxs</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"mi\">20</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n<span class=\"kd\">example</span><span class=\"o\">:</span> <span class=\"n\">box_idxs</span> <span class=\"mi\">8</span> <span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"mi\">60</span><span class=\"o\">,</span><span class=\"mi\">61</span><span class=\"o\">,</span><span class=\"mi\">62</span><span class=\"o\">,</span><span class=\"mi\">69</span><span class=\"o\">,</span><span class=\"mi\">70</span><span class=\"o\">,</span><span class=\"mi\">71</span><span class=\"o\">,</span><span class=\"mi\">78</span><span class=\"o\">,</span><span class=\"mi\">79</span><span class=\"o\">,</span><span class=\"mi\">80</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n\n<span class=\"c1\">-- I should probably prove that this works for:</span>\n<span class=\"c1\">-- `n &lt; m → e &lt; (m * m)`</span>\n<span class=\"c1\">-- but I'm not that far along yet.</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">capped_box_idxs</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">9</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">):</span> <span class=\"n\">e</span> <span class=\"bp\">∈</span> <span class=\"n\">box_idxs</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">e</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">h</span> <span class=\"bp\">↦</span> <span class=\"k\">match</span> <span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n  <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n  <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n  <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n  <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n  <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n  <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">6</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"mi\">6</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n  <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">7</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"mi\">7</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n  <span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">8</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"mi\">8</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">castℕFin</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">e</span> <span class=\"bp\">∈</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">e</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">l</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"o\">::</span> <span class=\"n\">as</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">List.mem_cons</span><span class=\"o\">,</span> <span class=\"n\">forall_eq_or_imp</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n    <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">h₂</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">h₁</span><span class=\"o\">⟩</span> <span class=\"o\">::</span> <span class=\"n\">castℕFin</span> <span class=\"n\">as</span> <span class=\"n\">n</span> <span class=\"n\">h₂</span>\n</code></pre></div>\n<p>I have two questions:</p>\n<ol>\n<li>I can see that this isn't the best way to prove this. I really should be unfolding <code>box_idxs</code> and proving it that way, that is on my todo list, but does Mathlib support a better way to brute force this?</li>\n<li>Does Lean \"see\" that castℕFin has no computational content? Is there a better way to perform this cast?</li>\n</ol>",
        "id": 425126454,
        "sender_full_name": "Mark Fischer",
        "timestamp": 1709742010
    },
    {
        "content": "<p>Mathlib has the <code>fin_cases</code> tactic</p>",
        "id": 425130409,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1709743044
    },
    {
        "content": "<p>By the way, the <code>decide</code> tactic is usually not doing anything special when you're proving an equality.</p>\n<p>These work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">size</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">×</span> <span class=\"o\">{</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">//</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"mi\">9</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span>\n<span class=\"kd\">example</span><span class=\"o\">:</span> <span class=\"n\">box_idxs</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"mi\">20</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 425130674,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1709743122
    },
    {
        "content": "<p>Here's a brute force proof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">capped_box_idxs</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">9</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">e</span> <span class=\"bp\">∈</span> <span class=\"n\">box_idxs</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">e</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">fin_cases</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">fin_cases</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">decide</span>\n</code></pre></div>\n<p>The <code>fin_cases h</code> is using the fact that <code>e</code> is an element of a <code>List</code> and that it can compute that list using reduction.</p>",
        "id": 425132735,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1709743688
    },
    {
        "content": "<p>Awesome. Thanks for the help!<br>\nHere's the more concise version, I get a surprising linting error on <code>n'</code> for an unused variable.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">capped_box_idxs</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">9</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">):</span> <span class=\"n\">e</span> <span class=\"bp\">∈</span> <span class=\"n\">box_idxs</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">e</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span>\n  <span class=\"k\">let</span> <span class=\"n\">n'</span> <span class=\"o\">:=</span> <span class=\"n\">n</span>\n  <span class=\"n\">fin_cases</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"o\">{</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">List.all</span> <span class=\"o\">(</span><span class=\"n\">box_idxs</span> <span class=\"n\">n'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">·</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">81</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">decide</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">List.all_eq_true.mp</span> <span class=\"n\">h₂</span> <span class=\"n\">e</span> <span class=\"n\">h</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">decide_eq_true_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n  <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 425132853,
        "sender_full_name": "Mark Fischer",
        "timestamp": 1709743720
    },
    {
        "content": "<p>ah, wow. I'll need to study that for a moment</p>",
        "id": 425132920,
        "sender_full_name": "Mark Fischer",
        "timestamp": 1709743743
    },
    {
        "content": "<p>Oh, that's a very pretty proof and makes sense to me. Cool</p>",
        "id": 425133138,
        "sender_full_name": "Mark Fischer",
        "timestamp": 1709743801
    }
]