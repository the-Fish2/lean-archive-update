[
    {
        "content": "<p>Hi, I am new to Lean 4.<br>\nI am currently trying to implement some fundamental real analysis results.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Vector.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.NNReal</span>\n<span class=\"k\">#check</span> <span class=\"n\">TopologicalSpace</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">y</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">f_pos</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mul_self_nonneg</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">ℝ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">x.nth</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">y.nth</span> <span class=\"n\">i</span>\n\n<span class=\"c1\">--theorem g_pos : ∀ (x : vector ℝ n), 0 ≤ g x x := by</span>\n<span class=\"c1\">--  sorry</span>\n\n<span class=\"c1\">--def L_KL (x : vector NNReal n) (y : vector NNReal n) : ℝ :=</span>\n<span class=\"c1\">--  ∑ i, (x.nth i).val * log ((x.nth i).val / (y.nth i).val) - (x.nth i).val + (y.nth i).val</span>\n</code></pre></div>\n<p>The <code>#check TopologicalSpace</code> from the documentation and definition and theorem about f does work in VSCode. But the ∑ in the definition of g results in a expected token error. I appreciate any help <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> <br>\nLater I want to prove some result about the Kullback-Leibler divergence(the definition at the end). Which uses the convention that</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mn>0</mn><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0 \\log(0) = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<p>Do I need to define the function piecewise?<br>\nOnline I found Lean 4 resources mostly about natural numbers and algebraic structures. Do you have any recommendations for analysis in Lean 4.<br>\nThanks in advance and have a nice day.</p>",
        "id": 435747921,
        "sender_full_name": "tNb0l",
        "timestamp": 1714216415
    },
    {
        "content": "<p>The notation for sums is not available globally. You can enable it by writing</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">BigOperators</span>\n</code></pre></div>",
        "id": 435748523,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714216968
    },
    {
        "content": "<p>Things like inner products are already available in mathlib.</p>\n<p>Concerning resources, have you seen \"Mathematics in Lean\"? It covers some of the basics of analysis.</p>",
        "id": 435748568,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714217027
    },
    {
        "content": "<p>Thank you.<br>\nThe definition above are just for my learning purposes and are redundant to the definitions in mathlib.</p>",
        "id": 435748850,
        "sender_full_name": "tNb0l",
        "timestamp": 1714217273
    },
    {
        "content": "<p>After I added the line I get a</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">function</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">vector</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n</code></pre></div>\n<p>error for the definition of the argument which I did not get before. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <br>\nDoes this somehow interfere?</p>",
        "id": 435750028,
        "sender_full_name": "tNb0l",
        "timestamp": 1714218281
    },
    {
        "content": "<p>You only didn't get it before because lean was stuck at an earlier error. There's no such thing as <code>vector</code> so the error is expected. The usual formalisation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\R^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span> is <code>Fin n → ℝ</code>.</p>",
        "id": 435754212,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714221710
    },
    {
        "content": "<p>PS <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">0\\log(0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> is 0 in lean because log(0) is a junk value and in particular a real number.</p>",
        "id": 435754293,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714221764
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Sum.20vector.20entries.20in.20R.5En/near/435754212\">said</a>:</p>\n<blockquote>\n<p>There's no such thing as <code>vector</code> so the error is expected</p>\n</blockquote>\n<p>If you add <code>set_option autoImplicit false</code>, then lean will tell you exactly this instead of some other more confusing error</p>",
        "id": 435755197,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714222587
    },
    {
        "content": "<p>Thank you. This worked. And the autoImplicit hint is very helpful thank you a lot.</p>",
        "id": 435755616,
        "sender_full_name": "tNb0l",
        "timestamp": 1714222906
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"713539\">tNb0l</span> has marked this topic as resolved.</p>",
        "id": 435755685,
        "sender_full_name": "Notification Bot",
        "timestamp": 1714222952
    }
]