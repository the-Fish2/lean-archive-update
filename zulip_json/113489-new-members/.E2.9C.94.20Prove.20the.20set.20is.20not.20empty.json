[
    {
        "content": "<p>I have this definition</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">IsLowerMooreFamily</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n   <span class=\"bp\">∀</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span><span class=\"o\">,</span>  <span class=\"n\">IsLeast</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span><span class=\"o\">}</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>How can I prove that the set M is not empty or</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">IsNonEmpty</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">IsLowerMooreFamily</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nonempty</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I can prove it when I define the defintion as this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">IsLowerMooreFamily</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n   <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"bp\">∀</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">IsLeast</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span><span class=\"o\">}</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>My prove is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">IsNonEmpty</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">IsLowerMooreFamily</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nonempty</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">nonempty_subtype</span><span class=\"o\">]</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">⟩</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Exists.intro</span> <span class=\"n\">x</span>\n  <span class=\"k\">have</span> <span class=\"n\">hq</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">apply</span> <span class=\"n\">y.left</span>\n  <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>But I can't prove when the forall case is in the front. Is the two definition the same as each other?</p>",
        "id": 413200726,
        "sender_full_name": "kishou yusa",
        "timestamp": 1705424786
    },
    {
        "content": "<p>No, your two definitions are different. The second one is much stronger: It says you can pick the same witness <code>a</code> regardless of what <code>x</code> is!</p>",
        "id": 413203018,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705425541
    },
    {
        "content": "<p>In fact, I think your second one is equivalent to <code>M</code> containing a bottom element</p>",
        "id": 413203079,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705425568
    },
    {
        "content": "<p>To prove that <code>M</code> is nonempty, you will need to assume that <code>α</code> is. Then you can get some <code>x : α</code> and obtain <code>a ∈ M</code> from <code>h a</code>. If you look at the statement of your exercise on paper, you will notice that <code>α</code> indeed is nonempty there.</p>",
        "id": 413203386,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705425681
    },
    {
        "content": "<p>which tatic can I use from lean to rewrite the hypothesis given that I have <code>x : \\alpha</code>?</p>",
        "id": 413205126,
        "sender_full_name": "kishou yusa",
        "timestamp": 1705426281
    },
    {
        "content": "<p>I'm not sure that there is such a tactic:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">IsLowerMooreFamily</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n   <span class=\"bp\">∀</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span><span class=\"o\">,</span>  <span class=\"n\">IsLeast</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span><span class=\"o\">}</span> <span class=\"n\">a</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Preorder</span> <span class=\"n\">Empty</span> <span class=\"o\">:=</span> <span class=\"n\">specializationPreorder</span> <span class=\"n\">Empty</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">CouldBeEmpty</span> <span class=\"o\">:</span> <span class=\"n\">IsLowerMooreFamily</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">Empty</span><span class=\"o\">)</span> <span class=\"bp\">∅</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">IsLowerMooreFamily</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 413207048,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1705426899
    },
    {
        "content": "<p>After re-read the LowerMooreFamily paper and see comment from Yael Dillies and Damiano Testa,  I rewrite my definition and this time it can be prove with it. <br>\nIn the previous definition, I missed that the set <code>{y \\in M | x \\leq y}</code> should also be non empty and <code>\\alpha</code> need to be a complete lattice. After adding it, the Nonempty can be prove quite easily.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">L</span><span class=\"o\">:</span> <span class=\"n\">CompleteLattice</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">IsLowerMooreFamily</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n   <span class=\"bp\">∀</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">∃</span><span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">IsLeast</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span><span class=\"o\">}</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">MooreFamilyNonEmpty</span> <span class=\"o\">{</span><span class=\"n\">M</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">IsLowerMooreFamily</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nonempty</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n  <span class=\"k\">let</span> <span class=\"n\">a1</span><span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">L.top</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Exists.elim</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">a1</span><span class=\"o\">)</span>\n  <span class=\"n\">intro</span> <span class=\"n\">a2</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h2</span>\n  <span class=\"k\">have</span> <span class=\"n\">h3</span><span class=\"o\">:</span> <span class=\"n\">a2</span> <span class=\"bp\">∈</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">apply</span> <span class=\"n\">h2.left</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Exists.intro</span> <span class=\"n\">a2</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h3</span>\n</code></pre></div>",
        "id": 416511899,
        "sender_full_name": "kishou yusa",
        "timestamp": 1705562986
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"666341\">kishou yusa</span> has marked this topic as resolved.</p>",
        "id": 416511908,
        "sender_full_name": "Notification Bot",
        "timestamp": 1705562995
    },
    {
        "content": "<p>The  <code>∃ y ∈ M, x ≤ y</code> you added is redundant because <code>IsLeast {y ∈ M | x ≤ y} a</code> already implies that <code>a</code> is in <code>{y ∈ M | x ≤ y}</code> (which is therefore a nonempty set).</p>",
        "id": 416519789,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705566502
    }
]