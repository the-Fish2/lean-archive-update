[
    {
        "content": "<p>If I have <code>(f : ℝ → ℝ) (hf₂ : Continuous f)</code>, how do I get the standard epsilon-delta notion of continuity on \"f\"? I loogled for a good fifteen minutes and couldn't find it. And so I tried looking at existing proofs that involves continuous real functions because surely one of them had this fact, like sin or cosine and so on, but they all just proof continuity from the fact that f is an order-preserving isomorphism.</p>\n<p>The actual definition of continuity is the (less familiar for analysis, more powerful and general) one involving filters and neighborhoods -- and I'm sure there's a \"simple\" way to turn that into a statement about neighborhoods in R and so get the eps-delta statement, but that involves looking up a bunnnnch more lemmas and so on and seems much harder.</p>",
        "id": 430506242,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711917964
    },
    {
        "content": "<p>Here's how I've done it: <a href=\"https://github.com/dwrensha/compfiles/blob/2a454827870259167c77c91116392000ca3df722/Compfiles/Romania1998P12.lean#L49-L55\">https://github.com/dwrensha/compfiles/blob/2a454827870259167c77c91116392000ca3df722/Compfiles/Romania1998P12.lean#L49-L55</a><br>\nThere may be a simpler way.</p>",
        "id": 430506384,
        "sender_full_name": "David Renshaw",
        "timestamp": 1711918091
    },
    {
        "content": "<p><code>Metric.continuous_iff'.mp</code> then <code>Filter.eventually_iff.mp</code> then <code>mem_nhds_iff.mp</code> then <code>Metric.isOpen_iff.mp</code></p>",
        "id": 430506467,
        "sender_full_name": "David Renshaw",
        "timestamp": 1711918178
    },
    {
        "content": "<p>Hmm, alright. Well, it seems like something that should be in mathlib, so fingers crossed -- but otherwise those 4 lines aren't too bad I guess. Thanks. :)</p>",
        "id": 430506588,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711918294
    },
    {
        "content": "<p>Also, <code>extend_function_mono</code> seems like a nice lemma that <em>should</em> be in mathlib</p>",
        "id": 430506598,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711918307
    },
    {
        "content": "<p>(except that I would write the conclusion of that lemma as just <code>u = f</code> by funext.)</p>",
        "id": 430506678,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711918357
    },
    {
        "content": "<p>Is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Metric.continuous_iff#doc\">docs#Metric.continuous_iff</a> what you want?</p>",
        "id": 430506898,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711918569
    },
    {
        "content": "<p>Yes <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span> I don't know why that was so hard to find...</p>",
        "id": 430506920,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711918598
    },
    {
        "content": "<p>Don't blame yourself for not finding such a thing, blame our searching tools!</p>",
        "id": 430506959,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1711918634
    },
    {
        "content": "<p>However, if you look at the proof of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Metric.tendsto_nhds_nhds#doc\">docs#Metric.tendsto_nhds_nhds</a>, you can get a better idea of how to go from the filter definition to the \"more familiar\" versions of limits in general.</p>",
        "id": 430527066,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1711937370
    }
]