[
    {
        "content": "<p>I have  a beginner question: I want to show that, if an element belongs to the union of a nonempty family of sets, then it belongs to one of the sets.</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"n\">β</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Set</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">Set</span><span class=\"w\"> </span><span class=\"n\">β</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">β</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">∈</span><span class=\"w\"> </span><span class=\"bp\">⋃</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">∈</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">∃</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">∈</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">∈</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n</code></pre></div>\n<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.mem_iUnion#doc\">docs#Set.mem_iUnion</a> do more or less what I want but I guess I need to use the subtype <code>{a // a ∈ A}</code>. Is there a way to not use this subtype?</p>",
        "id": 445675575,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1718821976
    },
    {
        "content": "<p>you can make the fact that you're using it invisible; <code>simpa using h</code> will work as a proof.</p>",
        "id": 445677232,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1718822606
    },
    {
        "content": "<p>if there were a lemma that did this, it would be called <code>mem_biUnion_iff</code> (the <code>biUnion</code> refers to taking the union over all indices in some set), but presumably that lemma isn't there because <code>simp</code> already proves it.</p>",
        "id": 445677477,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1718822682
    },
    {
        "content": "<p>Thank you very much, I'd probably never have found it.</p>",
        "id": 445677724,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1718822771
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"635099\">Gaëtan Serré</span> has marked this topic as resolved.</p>",
        "id": 445678439,
        "sender_full_name": "Notification Bot",
        "timestamp": 1718822987
    }
]