[
    {
        "content": "<p><a href=\"/user_uploads/3121/oQf3xFjdXlgrpadO6AAb3KQF/image.png\">image.png</a><br>\nWhy is there an error if I execute add_succ succ(succ 0) succ(succ 0) at h but no error if I do add_succ at h</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/oQf3xFjdXlgrpadO6AAb3KQF/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/oQf3xFjdXlgrpadO6AAb3KQF/image.png\"></a></div>",
        "id": 425846871,
        "sender_full_name": "Kaixin Wang",
        "timestamp": 1710140802
    },
    {
        "content": "<p><code>add_succ m n</code> proves <code>m + succ n = succ (m + n)</code>.</p>\n<p>So <code>add_succ (succ (succ 0)) (succ (succ 0))</code> proves that <code>succ (succ 0) + succ (succ (succ 0)) = succ (succ (succ 0) + succ (succ 0))</code>.</p>\n<p>Since <code>succ (succ 0) + succ (succ (succ 0))</code> doesn't appear anywhere in the goal, the rewriting fails.</p>",
        "id": 425939904,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710172217
    },
    {
        "content": "<p>You might have more success with <code>rw [add_succ (succ (succ 0)) (succ 0)] at h</code>.</p>",
        "id": 425941629,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710172668
    },
    {
        "content": "<p>Also, it is always necessary to put a space between a function and its arguments, so you should write <code>succ (succ 0)</code> instead of <code>succ(succ 0)</code>.</p>",
        "id": 425942276,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710172815
    },
    {
        "content": "<p>Thanks for your help!<br>\nI have a related question</p>",
        "id": 426792904,
        "sender_full_name": "Kaixin Wang",
        "timestamp": 1710524383
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/caFr7d2qMQ7YxOdL2TV57gT0/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/caFr7d2qMQ7YxOdL2TV57gT0/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/caFr7d2qMQ7YxOdL2TV57gT0/image.png\"></a></div>",
        "id": 426792921,
        "sender_full_name": "Kaixin Wang",
        "timestamp": 1710524387
    },
    {
        "content": "<p>add_zero a proves a + 0 = a</p>",
        "id": 426792972,
        "sender_full_name": "Kaixin Wang",
        "timestamp": 1710524400
    },
    {
        "content": "<p>when I tried rw[add_zero a * 0]<br>\nthere is this error:</p>",
        "id": 426793058,
        "sender_full_name": "Kaixin Wang",
        "timestamp": 1710524418
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/DK9remLm0Y4LRQSllYE0cJzF/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/DK9remLm0Y4LRQSllYE0cJzF/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/DK9remLm0Y4LRQSllYE0cJzF/image.png\"></a></div>",
        "id": 426793101,
        "sender_full_name": "Kaixin Wang",
        "timestamp": 1710524433
    },
    {
        "content": "<p>Oh I see, this works! <br>\n<a href=\"/user_uploads/3121/SYUoIsqyW3RWIqoxud5rdZr-/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/SYUoIsqyW3RWIqoxud5rdZr-/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/SYUoIsqyW3RWIqoxud5rdZr-/image.png\"></a></div>",
        "id": 426793515,
        "sender_full_name": "Kaixin Wang",
        "timestamp": 1710524607
    },
    {
        "content": "<p>What is wrong with this: <br>\n<a href=\"/user_uploads/3121/NJWDIvu_cC6t5_xOs3iPfzxq/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/NJWDIvu_cC6t5_xOs3iPfzxq/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/NJWDIvu_cC6t5_xOs3iPfzxq/image.png\"></a></div>",
        "id": 426798847,
        "sender_full_name": "Kaixin Wang",
        "timestamp": 1710526758
    },
    {
        "content": "<p><code>one_mul</code> is for <code>1 * x = x</code>. But your goal is <code>x = 1 * x</code></p>",
        "id": 426799108,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710526850
    },
    {
        "content": "<p>So you need to take care of the LHS/RHS symmetry.</p>",
        "id": 426799148,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710526866
    },
    {
        "content": "<p>exact &lt;- one_mul x and exact (&lt;- one_mul x) doesn't work either</p>",
        "id": 426801231,
        "sender_full_name": "Kaixin Wang",
        "timestamp": 1710527654
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"694640\">@Kaixin Wang</span> hint: try <code>rw</code> instead of <code>exact</code></p>",
        "id": 426803242,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710528527
    },
    {
        "content": "<p>Yes rw works, I was just wondering if exact works as well.</p>\n<p>I think everything that is doable with exact should be doable with rw.</p>",
        "id": 426805208,
        "sender_full_name": "Kaixin Wang",
        "timestamp": 1710529396
    },
    {
        "content": "<p><code>exact (one_mul x).symm</code> would probably work.</p>",
        "id": 426807150,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1710530239
    }
]