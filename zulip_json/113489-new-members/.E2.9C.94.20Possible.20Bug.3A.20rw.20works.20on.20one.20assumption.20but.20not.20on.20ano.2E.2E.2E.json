[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Tactic</span>\n\n<span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"w\"> </span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">{</span>\n\n<span class=\"w\"> </span><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">k</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">h</span>\n<span class=\"w\"> </span><span class=\"n\">norm_num</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">h</span>\n<span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">helper</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">exact</span><span class=\"w\"> </span><span class=\"n\">eq_add_of_add_neg_eq</span><span class=\"w\"> </span><span class=\"n\">h</span>\n<span class=\"w\"> </span><span class=\"n\">norm_num</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">helper</span>\n\n<span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">helper2</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"mi\">18</span><span class=\"bp\">=</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"mi\">6</span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span><span class=\"n\">norm_num</span>\n<span class=\"w\"> </span><span class=\"o\">}</span>\n<span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">exppp</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"bp\">=</span><span class=\"mi\">18</span><span class=\"bp\">*</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">norm_num</span>\n<span class=\"w\"> </span><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">exppp</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">helper2</span><span class=\"w\">  </span><span class=\"c1\">-- works fine</span>\n<span class=\"w\"> </span><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">exppp</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">helper</span><span class=\"w\"> </span><span class=\"c1\">-- gives a tactic rewrite failed</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>Am i doing something wrong or is this a bug?</p>",
        "id": 441012129,
        "sender_full_name": "Jad Abou Hawili",
        "timestamp": 1716893181
    },
    {
        "content": "<p>Yes, you are doing something wrong. In the infoview, click on the <code>18</code> in both <code>helper</code> and <code>helper2</code></p>",
        "id": 441012426,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716893293
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Hint</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p><code>18 : ℤ</code> in <code>helper</code> while <code>18 : ℕ</code> in <code>helper2</code></p>\n</div></div>",
        "id": 441012527,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716893348
    },
    {
        "content": "<p>Oh my , I never even knew that's something you should pay attention to</p>",
        "id": 441012602,
        "sender_full_name": "Jad Abou Hawili",
        "timestamp": 1716893389
    },
    {
        "content": "<p>nevermind then, kind of a dumb question on my part</p>",
        "id": 441012696,
        "sender_full_name": "Jad Abou Hawili",
        "timestamp": 1716893414
    },
    {
        "content": "<p>No, it's a very good question <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 441012709,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716893426
    },
    {
        "content": "<p><a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a> is exactly a place where you can learn about stuff like this, it's a fine question!</p>",
        "id": 441012732,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716893440
    },
    {
        "content": "<p>I have gotten accustomed to dealing with equations that only have +, but adding the - introduces these issues. Thanks for the quick response and encouragement. </p>\n<p>Resolved.</p>",
        "id": 441013741,
        "sender_full_name": "Jad Abou Hawili",
        "timestamp": 1716893894
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"714864\">Jad Abou Hawili</span> has marked this topic as resolved.</p>",
        "id": 441013764,
        "sender_full_name": "Notification Bot",
        "timestamp": 1716893906
    },
    {
        "content": "<p>For Future Readers, here's how to finish the goal: </p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">helper2</span><span class=\"w\"> </span><span class=\"o\">:(</span><span class=\"mi\">18</span><span class=\"o\">:</span><span class=\"n\">ℤ</span><span class=\"w\">  </span><span class=\"o\">)</span><span class=\"bp\">=</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"mi\">6</span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span><span class=\"n\">norm_num</span>\n<span class=\"w\"> </span><span class=\"o\">}</span>\n\n<span class=\"w\"> </span><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">helper2</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">helper</span>\n<span class=\"w\"> </span><span class=\"n\">exact</span><span class=\"w\"> </span><span class=\"n\">mul_left_cancel</span><span class=\"w\"> </span><span class=\"n\">helper</span>\n</code></pre></div>\n<p>the last line returns this error: 1. failed to synthesize instance IsLeftCancelMul ℤ.</p>\n<p>I wrote this at the top of my file to fix it: <code> variable [IsLeftCancelMul ℤ ] </code> Here is where i got it:<br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Group/Defs.html#mul_left_cancel\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Group/Defs.html#mul_left_cancel</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/blob/3954e68b68d6e58a70d187e705e4058ec31a5705/Mathlib/Algebra/Group/Defs.lean#L231-L23\">https://github.com/leanprover-community/mathlib4/blob/3954e68b68d6e58a70d187e705e4058ec31a5705/Mathlib/Algebra/Group/Defs.lean#L231-L23</a>.</p>",
        "id": 441023708,
        "sender_full_name": "Jad Abou Hawili",
        "timestamp": 1716897567
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsLeftCancelMul#doc\">docs#IsLeftCancelMul</a></p>",
        "id": 441027804,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716898918
    },
    {
        "content": "<p>You might have fixed your proof, but you've also assumed something false:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Tactic</span>\n\n<span class=\"kn\">variable</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">IsLeftCancelMul</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"w\"> </span><span class=\"o\">]</span>\n\n<span class=\"w\"> </span><span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">   </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">mul_left_cancel</span>\n<span class=\"w\">   </span><span class=\"n\">norm_num</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">this</span>\n</code></pre></div>",
        "id": 441028156,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716899041
    },
    {
        "content": "<p>In short, you can't use <code>mul_left_cancel</code> on integers because you can't cancel 0.</p>",
        "id": 441028408,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716899115
    },
    {
        "content": "<p>So that's when you try <code>mul_left_cancel₀ </code></p>",
        "id": 441039708,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716902615
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Possible.20Bug.3A.20rw.20works.20on.20one.20assumption.20but.20not.20on.20ano.2E.2E.2E/near/441028156\">said</a>:</p>\n<blockquote>\n<p>You might have fixed your proof, but you've also assumed something false:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Tactic</span>\n\n<span class=\"kn\">variable</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">IsLeftCancelMul</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"w\"> </span><span class=\"o\">]</span>\n\n<span class=\"w\"> </span><span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">   </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">mul_left_cancel</span>\n<span class=\"w\">   </span><span class=\"n\">norm_num</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">this</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Bahh<br>\nI thought there was something strange about what i did but I didn't think about it too much. I used <code>Nat.mul_left_cancel</code>before  and remembered that I had to pass a proposition saying that what i was canceling wasn't zero. Found it strange that <code>mul_left_cancel</code> didn't have that.</p>\n<p>Thanks for the heads up.</p>",
        "id": 442711193,
        "sender_full_name": "Jad Abou Hawili",
        "timestamp": 1717571518
    }
]