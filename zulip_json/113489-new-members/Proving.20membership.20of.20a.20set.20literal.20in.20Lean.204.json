[
    {
        "content": "<p>I encountered something like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">⊢</span> <span class=\"n\">Char.ofNat</span> <span class=\"mi\">98</span> <span class=\"bp\">∈</span> <span class=\"o\">{</span><span class=\"n\">Char.ofNat</span> <span class=\"mi\">97</span><span class=\"o\">,</span> <span class=\"n\">Char.ofNat</span> <span class=\"mi\">98</span><span class=\"o\">,</span> <span class=\"n\">Char.ofNat</span> <span class=\"mi\">99</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>in the middle of a proof. I've tried <code>constructor</code> and <code>unfold insert</code> without luck. How should I proceed, and where can I find information about the relevant theorems?</p>",
        "id": 419164554,
        "sender_full_name": "gldanoob",
        "timestamp": 1706757046
    },
    {
        "content": "<p>Have you tried <code>simp</code>?</p>",
        "id": 419164890,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1706757253
    },
    {
        "content": "<p>In any case, the way set membership with a set literal works is that it's ultimately an <code>Or</code> of <code>Eq</code>s, so you should be able to do <code>right; left; rfl</code>.</p>",
        "id": 419165402,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1706757563
    },
    {
        "content": "<p><code>rw?</code> should probably come up with something too</p>",
        "id": 419193329,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1706775176
    }
]