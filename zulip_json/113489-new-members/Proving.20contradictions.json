[
    {
        "content": "<p>The following proof is accepted but <code>tauto</code> seems to be too strong a tactic for a simple contradiction. <code>contradiction h2</code> is what I want but it works only between two hypotheses and not between a hypothesis and a goal. Are there any other options?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">T1</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">¬</span><span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h1</span>\n  <span class=\"n\">by_contra</span> <span class=\"n\">h2</span>\n  <span class=\"n\">apply</span> <span class=\"n\">h2</span>\n  <span class=\"n\">tauto</span>\n  <span class=\"n\">done</span>\n</code></pre></div>\n<p>Another proof would have </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">contrapose</span> <span class=\"n\">h1</span>\n</code></pre></div>\n<p>as the second line. I expected to get <code>¬A →¬¬A</code> but instead got <code>¬(¬A→A)</code>. Why? Is there any way to get from <code>h1</code> to <code>¬A →¬¬A</code>?</p>",
        "id": 410281182,
        "sender_full_name": "Moti Ben-Ari",
        "timestamp": 1703763003
    },
    {
        "content": "<p>Your <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> has no imports, are you using Mathlib?</p>",
        "id": 410284698,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1703765006
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">T1</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">¬</span><span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h1</span>\n  <span class=\"n\">by_contra</span> <span class=\"n\">h2</span>\n  <span class=\"n\">apply</span> <span class=\"n\">h2</span>\n  <span class=\"n\">apply</span> <span class=\"n\">h1</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h2</span>\n</code></pre></div>\n<p>is a direct proof</p>",
        "id": 410284713,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1703765014
    },
    {
        "content": "<p>You can use <code>contrapose!</code> to push the negation inwards.  under the hood this calls <code>push_neg</code></p>",
        "id": 410284888,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1703765087
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113489-new-members/topic/Proving.20contradictions/near/410284698\">said</a>:</p>\n<blockquote>\n<p>Your <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> has no imports, are you using Mathlib?</p>\n</blockquote>\n<p>Yes, sorry, I used <code>import Mathlib.Tactic</code>.</p>\n<p>I see that <code>contrapose!</code> works though I would prefer to simply replace a hypothesis by its contrapositive.</p>",
        "id": 410294732,
        "sender_full_name": "Moti Ben-Ari",
        "timestamp": 1703770758
    },
    {
        "content": "<p>If <code>h</code> is a proof of <code>P -&gt; Q</code> then <code>mt h</code> is the proof of <code>not Q -&gt; not P</code>, I guess we dont have a tactic for exactly that because the term is so short!</p>",
        "id": 410301950,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1703773983
    }
]