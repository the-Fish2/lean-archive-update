[
    {
        "content": "<p>I encountered this proof of the famous Collatz conjecture:</p>\n<p><a href=\"https://www.academia.edu/1595051/COLLATZ_CONJECTURE_PROOF\">https://www.academia.edu/1595051/COLLATZ_CONJECTURE_PROOF</a></p>\n<p>The Collatz Conjecture Proof</p>\n<p>Cody T. Dianopoulos</p>\n<p>(561)252-0803</p>\n<p><a href=\"mailto:merlincody@gmail.com\">merlincody@gmail.com</a></p>\n<p>May 30, 2012</p>\n<p>Abstract<br>\nThe Collatz Conjecture, first posed in 1937 by Lothar Collatz, has finally been confirmed through a series of nested proofs by fifteen-year-old Cody T. Dianopoulos.</p>\n<p>Now my questIon is: can we check that proof using the Lean theorem prover? I have no experience with the Lean theorem prover whatsoever (nor with any other theorem prover), so I need help how to set up the material proof presented in the paper so that Lean can check if that proof is correct.</p>\n<p>Is there anyone here that can help me with that?<br>\nI would very much appreciate that !<br>\n<a href=\"/user_uploads/3121/XCZ-e-Dx-ZZzfSDN-3BXpjBb/COLLATZ_CONJECTURE_PROOF-1.pdf\">COLLATZ_CONJECTURE_PROOF-1.pdf</a></p>",
        "id": 420938745,
        "sender_full_name": "tvscitechtalk",
        "timestamp": 1707700726
    },
    {
        "content": "<p>Yes, you can use an interactive theorem prover to validate the lines of a proof and find where the mistake in this proof is. If you have no prior experience with using lean, I would suggest <a href=\"https://leanprover.github.io/theorem_proving_in_lean4/\">#tpil</a> or <a href=\"https://leanprover-community.github.io/mathematics_in_lean/\">#mil</a> to get started learning how to render mathematical claims in lean and prove things.</p>",
        "id": 420940478,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707702495
    },
    {
        "content": "<p>In fact, take a look at lemma 2 and see what is wrong with it.</p>",
        "id": 420940642,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707702706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/Proof.20of.20the.20Collatz.20conjecture.20.3F/near/420940642\">zei</a>:</p>\n<blockquote>\n<p>In fact, take a look at lemma 2 and see what is wrong with it.</p>\n</blockquote>\n<p>Can you give me a hint?</p>",
        "id": 420942285,
        "sender_full_name": "tvscitechtalk",
        "timestamp": 1707704383
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Proof.20of.20the.20Collatz.20conjecture.20.3F/near/420940478\">zei</a>:</p>\n<blockquote>\n<p>Yes, you can use an interactive theorem prover to validate the lines of a proof and find where the mistake in this proof is. If you have no prior experience with using lean, I would suggest <a href=\"https://leanprover.github.io/theorem_proving_in_lean4/\">#tpil</a> or <a href=\"https://leanprover-community.github.io/mathematics_in_lean/\">#mil</a> to get started learning how to render mathematical claims in lean and prove things.</p>\n</blockquote>\n<p>For the moment I don’t know how to start, but I will take your advice</p>",
        "id": 420942393,
        "sender_full_name": "tvscitechtalk",
        "timestamp": 1707704452
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"690925\">tvscitechtalk</span> <a href=\"#narrow/stream/113489-new-members/topic/Proof.20of.20the.20Collatz.20conjecture.20.3F/near/420942285\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/Proof.20of.20the.20Collatz.20conjecture.20.3F/near/420940642\">zei</a>:</p>\n<blockquote>\n<p>In fact, take a look at lemma 2 and see what is wrong with it.</p>\n</blockquote>\n<p>Can you give me a hint?</p>\n</blockquote>\n<p>Indeed, (2^4-1)/3=5 is not composite but 2^4 is an even power of 2. I think there are more important works waiting to be formalized.</p>",
        "id": 420950209,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1707711985
    },
    {
        "content": "<p>I think it could be a decent exercise for learning Lean as long as <span class=\"user-mention\" data-user-id=\"690925\">@tvscitechtalk</span> understands that this is unlikely to be some kind of breakthrough result</p>",
        "id": 420950476,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1707712261
    },
    {
        "content": "<p>though formalizing a successful proof would probably be more fun</p>",
        "id": 420950620,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1707712409
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"682831\">Yagub Aliyev</span> <a href=\"#narrow/stream/113489-new-members/topic/Proof.20of.20the.20Collatz.20conjecture.20.3F/near/420950209\">zei</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"690925\">tvscitechtalk</span> <a href=\"#narrow/stream/113489-new-members/topic/Proof.20of.20the.20Collatz.20conjecture.20.3F/near/420942285\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/Proof.20of.20the.20Collatz.20conjecture.20.3F/near/420940642\">zei</a>:</p>\n<blockquote>\n<p>In fact, take a look at lemma 2 and see what is wrong with it.</p>\n</blockquote>\n<p>Can you give me a hint?</p>\n</blockquote>\n<p>Indeed, (2^4-1)/3=5 is not composite but 2^4 is an even power of 2. I think there are more important works waiting to be formalized.</p>\n</blockquote>\n<p>Please explain a little further!</p>",
        "id": 421075898,
        "sender_full_name": "tvscitechtalk",
        "timestamp": 1707755360
    },
    {
        "content": "<p>The point is that the claimed proof in that paper of the Collatz conjecture is not valid. That paper is not really worth your time as even the basic lemmas (e.g., Lemma 2) are obviously wrong, as the <code>2^4</code> example shows.</p>",
        "id": 421079273,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1707756261
    },
    {
        "content": "<p>Right:</p>\n<ul>\n<li>if the exponent is even, there are counterexamples,</li>\n<li>if the exponent is odd, the numerator is not divisible by 3, so talking about being \"composite\" is not especially meaningful.</li>\n</ul>",
        "id": 421081739,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707756944
    },
    {
        "content": "<p>I'm confused what Lemma 2 is even trying to say. I <em>think</em> it's saying that $k$ in $2^k$ is even, but even so, $k$ is even iff $2^k-1$ is divisible by $3$.</p>",
        "id": 421081880,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1707756978
    },
    {
        "content": "<p>That's just Fermat's little theorem, though you don't need the full power of it for a fixed prime divisor like $3$.</p>",
        "id": 421081978,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1707757006
    },
    {
        "content": "<p>What I don't see in Lemma 2 is a proof that $(2^k-1)/3$ is composite when $k$ is even. There can't be one though, because $k=4$ was already offered as a counterexample.</p>",
        "id": 421082860,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1707757229
    },
    {
        "content": "<p>I think they just meant \"integer\" instead of \"composite\", because the compositeness isn't used anywhere else. Stuff like \"Since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>k</mi></msubsup><msup><mn>4</mn><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=0}^k 4^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2887em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.989em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span> has no limit, it can be disregarded\" is more suspicious. But personally I think some policy similar to <a href=\"https://meta.mathoverflow.net/questions/927/what-is-our-policy-on-asking-about-correctness-of-preprints\">https://meta.mathoverflow.net/questions/927/what-is-our-policy-on-asking-about-correctness-of-preprints</a> should apply to this discussion.</p>",
        "id": 421082899,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1707757241
    },
    {
        "content": "<p>Ah, I had interpreted the last \"even\" as referring to the exponent of 2!  Either way, this statement needs more work.</p>",
        "id": 421082944,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707757250
    },
    {
        "content": "<p>Here the convention is probably to ask for a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>, I guess.</p>",
        "id": 421083975,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707757558
    },
    {
        "content": "<p>(Which I probably should have done, instead of opening the pdf...)</p>",
        "id": 421084542,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707757742
    },
    {
        "content": "<p>I sincerely hope that this isn't my fault... These days, when someone sends me their Collatz proof, I say that I'll be happy to look at it once it's formalized in a theorem prover....</p>",
        "id": 421112523,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707766281
    },
    {
        "content": "<p>Actually there are a few (serious) people who have asked me whether Mochizuki can be checked (or shown to be flawed) with Lean. I said, sure, if Mochizuki will offer his time and energy to the project (the way Scholze did), answering every stupid little question... (I highly doubt that would happen...)</p>",
        "id": 421113100,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707766474
    },
    {
        "content": "<p>Maybe this guy should have dropped $1m on the Lean community instead <a href=\"https://www.scientificamerican.com/article/1-million-will-go-to-the-mathematician-who-busts-the-abc-conjecture-theory/\">https://www.scientificamerican.com/article/1-million-will-go-to-the-mathematician-who-busts-the-abc-conjecture-theory/</a></p>",
        "id": 421114153,
        "sender_full_name": "llllvvuu",
        "timestamp": 1707766896
    },
    {
        "content": "<p>The Mathlib community is certainly welcome to take up that challenge! I highly doubt people here will choose to waste their time without somebody like Mochizuki (or someone who claims to understand the proof) leading the charge... (There are much easier ways to earn $1m...)</p>",
        "id": 421115003,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707767234
    },
    {
        "content": "<p>What I would like to learn is: how I can transfer the proof from the paper into Lean using the specific language that Lean uses, so that Lean can work out if that proof is correct or not.<br>\nAs an absolute beginner in Lean I can sure use some help with that ! The goal for me is learn how to use Lean on this specific problem !</p>",
        "id": 421121642,
        "sender_full_name": "tvscitechtalk",
        "timestamp": 1707769523
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"380294\">Matt Diamond</span> <a href=\"#narrow/stream/113489-new-members/topic/Proof.20of.20the.20Collatz.20conjecture.20.3F/near/420950476\">zei</a>:</p>\n<blockquote>\n<p>I think it could be a decent exercise for learning Lean as long as <span class=\"user-mention silent\" data-user-id=\"690925\">tvscitechtalk</span> understands that this is unlikely to be some kind of breakthrough result</p>\n</blockquote>\n<p>tvscitechtalk</p>\n<p>What I would like to learn is: how I can transfer the proof from the paper into Lean using the specific language that Lean uses, so that Lean can work out if that proof is correct or not.<br>\nAs an absolute beginner in Lean I can sure use some help with that ! The goal for me is learn how to use Lean on this specific problem !</p>",
        "id": 421122113,
        "sender_full_name": "tvscitechtalk",
        "timestamp": 1707769674
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"690925\">@tvscitechtalk</span> Just start with an ordinary Lean tutorial. There's plenty of learning material out there. No reason to jump straight into a hard project.</p>",
        "id": 421123512,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1707770113
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"690925\">@tvscitechtalk</span> what I'm advocating for is that you <em>don't</em> try to transfer the proof from that paper into Lean. The reason is that learning to formalize is hard enough as it is without the added complexity of trying to formalize something that's incorrect! You should start with a tutorial, like Johan suggests, and after that, try to formalize something that is already known to be true and from a trusted source (like a textbook; these aren't error-free, but generally the errors are relatively small and can be avoided without too much headache).</p>",
        "id": 421124083,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1707770288
    },
    {
        "content": "<p>maybe start with <a href=\"https://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/\">#nng</a> ...</p>",
        "id": 421125238,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1707770714
    },
    {
        "content": "<p>And I guess Mochizuki needs to develop his own proof assistant that implements <a href=\"https://www.kurims.kyoto-u.ac.jp/~motizuki/Essential%20Logical%20Structure%20of%20Inter-universal%20Teichmuller%20Theory.pdf\">\"the essential logical structures\"</a>.</p>",
        "id": 421125659,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1707770875
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"690925\">@tvscitechtalk</span> The person who's explaining things to Lean needs to understand the proof in detail (in this case, probably enough to be sure of its correctness). In this sense, you will work out the correctness of the proof, not Lean. Where Lean saves time is that, once the proof is written down, other people can just trust Lean instead of trusting the author.</p>",
        "id": 421476354,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1707926080
    }
]