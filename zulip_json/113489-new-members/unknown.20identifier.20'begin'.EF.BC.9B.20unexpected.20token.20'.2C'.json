[
    {
        "content": "<p>Why does it say <br>\n“mathlib-demo.lean:48:0</p>\n<p>unknown identifier 'begin'</p>\n<p>All Messages (3)</p>\n<p>mathlib-demo.lean:48:0</p>\n<p>unknown identifier 'begin'</p>\n<p>mathlib-demo.lean:49:10</p>\n<p>unexpected token ','; expected command</p>\n<p>mathlib-demo.lean:60:0</p>\n<p>invalid 'end', insufficient scopes</p>\n<p>Error: Connection to server got closed. Server will not be restarted.</p>\n<p>Source: Extension</p>\n<p><a href=\"http://\">Go to output</a></p>\n<p>Connection to server got closed. Server will not be restarted.<br>\n*”<br>\nFor:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">begin</span>\n\n<span class=\"w\">  </span><span class=\"n\">intros</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"o\">,</span>\n\n<span class=\"w\">  </span><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">hx</span><span class=\"o\">,</span>\n\n<span class=\"w\">  </span><span class=\"n\">use</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">,</span>\n\n<span class=\"w\">  </span><span class=\"n\">split</span><span class=\"o\">,</span>\n\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"w\"> </span><span class=\"n\">exact</span><span class=\"w\"> </span><span class=\"n\">hx</span><span class=\"bp\">.</span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">},</span>\n\n<span class=\"w\">  </span><span class=\"n\">split</span><span class=\"o\">,</span>\n\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"w\"> </span><span class=\"n\">exact</span><span class=\"w\"> </span><span class=\"n\">hx</span><span class=\"bp\">.</span><span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">},</span>\n\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"w\"> </span><span class=\"n\">intros</span><span class=\"w\"> </span><span class=\"n\">x'</span><span class=\"w\"> </span><span class=\"n\">hx'</span><span class=\"o\">,</span>\n\n<span class=\"w\">    </span><span class=\"c1\">-- Here, you would provide a valid proof showing l1_norm x ≤ l1_norm x'</span>\n\n<span class=\"w\">    </span><span class=\"gr\">sorry</span><span class=\"w\"> </span><span class=\"c1\">-- Placeholder for the detailed proof</span>\n\n<span class=\"w\">  </span><span class=\"o\">}</span>\n\n<span class=\"kn\">end</span>\n</code></pre></div>\n<p>Thanks。</p>",
        "id": 445975016,
        "sender_full_name": "Oliver",
        "timestamp": 1718928310
    },
    {
        "content": "<p>(Zulip hint: <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>)</p>\n<p>It looks like you're using Lean 4 to try to run Lean 3 code</p>",
        "id": 445975582,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1718928708
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/270676-lean4/topic/unknown.20identifier.20'begin'.EF.BC.9B.20unexpected.20token.20'.2C'/near/445975582\">said</a>:</p>\n<blockquote>\n<p>(Zulip hint: <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>)</p>\n<p>It looks like you're using Lean 4 to try to run Lean 3 code</p>\n</blockquote>\n<p>Then how to modify or revise the code to be run on Lean 4? Thanks</p>",
        "id": 445976000,
        "sender_full_name": "Oliver",
        "timestamp": 1718928927
    },
    {
        "content": "<p>Lean 4 is a very different language, so it would need to be rewritten.</p>\n<p>Where did you get this <code>mathlib-demo.lean</code>? Could you share a url?</p>",
        "id": 445978130,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1718930327
    },
    {
        "content": "<p>Is there is s</p>\n<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/270676-lean4/topic/unknown.20identifier.20'begin'.EF.BC.9B.20unexpected.20token.20'.2C'/near/445978130\">said</a>:</p>\n<blockquote>\n<p>Lean 4 is a very different language, so it would need to be rewritten.</p>\n<p>Where did you get this <code>mathlib-demo.lean</code>? Could you share a url?</p>\n</blockquote>\n<p>How to modify or revise the code to be run on Lean 4? Shouldn't there be a simple modification on this simple code? Thanks</p>",
        "id": 445981286,
        "sender_full_name": "Oliver",
        "timestamp": 1718932710
    },
    {
        "content": "<p>Does anyone know how to modify or revise the code to be run on Lean 4? Thanks a lot.</p>",
        "id": 445985410,
        "sender_full_name": "Oliver",
        "timestamp": 1718935988
    },
    {
        "content": "<p>Please, use <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> as you've been asked above, and explain where this code came from.</p>",
        "id": 445990475,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718937995
    },
    {
        "content": "<p>Translating from Lean 3 to Lean 4 is not \"simple\" (although there are automated tools which work well, although you need to be an expert to use them :-)</p>",
        "id": 445990515,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718938021
    },
    {
        "content": "<p>used [#backticks]; How to convert it into Lean 4 code? Thanks.</p>",
        "id": 445992438,
        "sender_full_name": "Oliver",
        "timestamp": 1718939212
    },
    {
        "content": "<p>Please read <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>. Also, I would suggest that you are not putting sufficient effort into asking your questions. You haven't answered Kyle's question above, despite me repeating it.</p>",
        "id": 446003597,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718945306
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/unknown.20identifier.20.27begin.27.EF.BC.9B.20unexpected.20token.20.27.2C.27\">#lean4 &gt; unknown identifier 'begin'； unexpected token ','</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span>.</p>",
        "id": 446003612,
        "sender_full_name": "Notification Bot",
        "timestamp": 1718945317
    },
    {
        "content": "<p>Based on that comment line and the type of question, I am assuming they got the code from a LLM and copy-pasted it into the Lean4 web editor<span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <code>mathlib-demo.lean</code> is simply what the web editor displays in the infoview and probably does not corrspond the a file existing on the web.</p>\n<p>Most important changes are</p>\n<ul>\n<li><code>begin ... end</code> is now <code>by</code>+indent</li>\n<li>no commas, no <code>{}</code></li>\n<li><code>cases</code> to <code>cases'</code></li>\n</ul>\n<p>However, as people mentioned, if you provide a better example including the <em>imports</em> and <em>theorem statement</em>, it's easier to help you. Just seeing a proof like this means nobody can actually try to get the code running, as the essential information is missing, so it's less likely people take the time to answer :)</p>",
        "id": 446014806,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1718951562
    },
    {
        "content": "<p>Yeah, and LLMs even give Lean3 code if you ask them for Lean4. They just have learned Lean3, missing newer web pages.</p>",
        "id": 446025962,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1718956369
    },
    {
        "content": "<p>Maybe there should be a linter that flags uses of <code>:= begin</code> saying \"Lean 3 is out of fashion, give <code>:= by</code> a try\".</p>",
        "id": 446026530,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718956598
    }
]