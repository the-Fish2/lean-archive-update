[
    {
        "content": "<p>I am trying to solve an exercise in MIL. I want to commute the infs on the goal after rewriting with h. i.e.<br>\na ⊔ b ⊓ c = (a ⊔ b) ⊓ a ⊔ (a ⊔ b) ⊓ c<br>\nI tried the following<br>\n nth_rw 2 [inf_comm]<br>\n rw[inf_comm _ a ]<br>\n rw[inf_comm ( a ⊔ b) a ]</p>\n<p>none worked. What am I missing?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Lattice</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">⊓</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">⊔</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">⊓</span> <span class=\"n\">y</span> <span class=\"bp\">⊔</span> <span class=\"n\">x</span> <span class=\"bp\">⊓</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">⊔</span> <span class=\"n\">b</span> <span class=\"bp\">⊓</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">⊔</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">⊓</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">⊔</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n  <span class=\"n\">nth_rw</span> <span class=\"mi\">2</span> <span class=\"o\">[</span><span class=\"n\">inf_comm</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 437070192,
        "sender_full_name": "Baran Zadeoglu",
        "timestamp": 1714877284
    },
    {
        "content": "<p>I'm not sure I understand your question. What are you trying to rewrite the goal to?</p>",
        "id": 437155630,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1714936301
    },
    {
        "content": "<p>I am trying to take<br>\n<code>a ⊔ b ⊓ c = (a ⊔ b) ⊓ (a ⊔ c) </code><br>\nrewrite with h to get <br>\n<code> a ⊔ b ⊓ c = (a ⊔ b) ⊓ a ⊔ (a ⊔ b) ⊓ c </code><br>\nthen use inf_comm to get<br>\n<code> a ⊔ b ⊓ c = ( a ⊓  (a ⊔ b))  ⊔ (a ⊔ b) ⊓ c </code></p>",
        "id": 437789063,
        "sender_full_name": "Baran Zadeoglu",
        "timestamp": 1715245138
    },
    {
        "content": "<p><code>rw [inf_comm ( a ⊔ b) a ]</code> <em>does</em> do that, doesn't it?</p>",
        "id": 437793280,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715247606
    },
    {
        "content": "<p>Richard, I recently changed <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=inf_comm#doc\">docs#inf_comm</a> to take explicit arguments. MIL is probably on a version where it took implicit arguments. <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> can tell us when he's done bumping MIL but in the meantime <span class=\"user-mention\" data-user-id=\"677650\">@Baran Zadeoglu</span>  you should do <code>rw [inf_comm (a := a ⊔ b) (b := a)]</code>.</p>",
        "id": 437796731,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715249595
    },
    {
        "content": "<p>I think mil is already updated but of course some users may still have the old version since reading the whole book takes a while.</p>",
        "id": 437813640,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715258960
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"677650\">Baran Zadeoglu</span> has marked this topic as resolved.</p>",
        "id": 437888507,
        "sender_full_name": "Notification Bot",
        "timestamp": 1715289590
    },
    {
        "content": "<p>thanks for all the replies.</p>",
        "id": 437888587,
        "sender_full_name": "Baran Zadeoglu",
        "timestamp": 1715289612
    }
]