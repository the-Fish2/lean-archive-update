[
    {
        "content": "<p>Why does <code>abs_le.mpr</code> work while <code>Asymptotics.isLittleO_iff_tendsto.mpr</code> doesn't? Seems they're both iff statements so <code>.mpr</code> should work for both.</p>\n<p>MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">Asymptotics</span><span class=\"bp\">.</span><span class=\"n\">Asymptotics</span>\n\n<span class=\"bp\">#</span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"n\">abs_le</span>\n\n<span class=\"bp\">#</span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"n\">Asymptotics</span><span class=\"bp\">.</span><span class=\"n\">isLittleO_iff_tendsto</span>\n\n<span class=\"bp\">#</span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"n\">abs_le</span><span class=\"bp\">.</span><span class=\"n\">mpr</span>\n\n<span class=\"c1\">--the next line returns an error I don't understand</span>\n<span class=\"bp\">#</span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"n\">Asymptotics</span><span class=\"bp\">.</span><span class=\"n\">isLittleO_iff_tendsto</span><span class=\"bp\">.</span><span class=\"n\">mpr</span>\n</code></pre></div>",
        "id": 441947370,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1717267975
    },
    {
        "content": "<p>Because <code>Asymptotics.isLittleO_iff_tendsto</code> isn't an iff statement, it's an implication whose consequent is an iff statement</p>",
        "id": 441947744,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717268140
    },
    {
        "content": "<p>When I see the output of <code>#check isLittleO_iff_tendsto</code>, which is</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">Asymptotics</span><span class=\"bp\">.</span><span class=\"n\">isLittleO_iff_tendsto</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u_15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">u_1</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">Œ±</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u_1</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">ùïú</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u_15</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">inst</span><span class=\"bp\">‚úù</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">NormedDivisionRing</span><span class=\"w\"> </span><span class=\"n\">ùïú</span><span class=\"o\">]</span>\n<span class=\"o\">{</span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Filter</span><span class=\"w\"> </span><span class=\"n\">Œ±</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Œ±</span><span class=\"w\"> </span><span class=\"bp\">‚Üí</span><span class=\"w\"> </span><span class=\"n\">ùïú</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">hgf</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">‚àÄ</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Œ±</span><span class=\"o\">),</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">‚Üí</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"n\">f</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"n\">o</span><span class=\"o\">[</span><span class=\"n\">l</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"bp\">‚Üî</span><span class=\"w\"> </span><span class=\"n\">Filter</span><span class=\"bp\">.</span><span class=\"n\">Tendsto</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">/</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">ùìù</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>it looks to me like an iff since after the final colon is an <code>‚Üî</code>. Why is that wrong?</p>",
        "id": 441948323,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1717268382
    },
    {
        "content": "<p>There's something in a round bracket to the left of the colon which you'll need to supply an input for (eg <code>_</code>).</p>",
        "id": 441948566,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717268475
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245476\">Quinn Culver</span> has marked this topic as resolved.</p>",
        "id": 441948775,
        "sender_full_name": "Notification Bot",
        "timestamp": 1717268555
    }
]