[
    {
        "content": "<p>I'm writing a <code>succ</code> function (in lean4) which has an upper limit. Is there a better way of representing this? Ideally I don't want to pay lip-service to the \"orange\" case / tell lean it should be impossible to hit due to the (r₁ &lt; orange) constraint.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">succ</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">r₁</span> <span class=\"o\">:</span> <span class=\"n\">Rod</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">r₁</span> <span class=\"bp\">&lt;</span> <span class=\"n\">orange</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Rod</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"k\">match</span> <span class=\"n\">r₁</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">white</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">red</span>\n  <span class=\"bp\">|</span> <span class=\"n\">red</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">lightGreen</span>\n  <span class=\"bp\">|</span> <span class=\"n\">lightGreen</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">purple</span>\n  <span class=\"bp\">|</span> <span class=\"n\">purple</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">yellow</span>\n  <span class=\"bp\">|</span> <span class=\"n\">yellow</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">darkGreen</span>\n  <span class=\"bp\">|</span> <span class=\"n\">darkGreen</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">black</span>\n  <span class=\"bp\">|</span> <span class=\"n\">black</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">brown</span>\n  <span class=\"bp\">|</span> <span class=\"n\">brown</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">blue</span>\n  <span class=\"bp\">|</span> <span class=\"n\">blue</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">orange</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"n\">orange</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">orange</span>\n</code></pre></div>",
        "id": 433065218,
        "sender_full_name": "Archibald Neil MacDonald",
        "timestamp": 1713030670
    },
    {
        "content": "<p>Maybe with <code>match r_1, h</code></p>",
        "id": 433065620,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713030981
    },
    {
        "content": "<p>ah yeah I see, I need to include it in the match arm. Cheers!</p>",
        "id": 433067135,
        "sender_full_name": "Archibald Neil MacDonald",
        "timestamp": 1713032056
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"435021\">Archibald Neil MacDonald</span> has marked this topic as resolved.</p>",
        "id": 433078141,
        "sender_full_name": "Notification Bot",
        "timestamp": 1713041904
    }
]