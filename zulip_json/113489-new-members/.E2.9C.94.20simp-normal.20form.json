[
    {
        "content": "<p>I am getting an error from the simp-normal form linter about the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Combinatorics</span><span class=\"bp\">.</span><span class=\"n\">SimpleGraph</span><span class=\"bp\">.</span><span class=\"n\">Connectivity</span>\n\n<span class=\"kn\">namespace</span><span class=\"w\"> </span><span class=\"n\">SimpleGraph</span>\n\n<span class=\"kn\">variable</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">V</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">G</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">SimpleGraph</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span><span class=\"w\"> </span><span class=\"n\">Walk</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span><span class=\"w\"> </span><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">nil_nil'</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">nil</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"bp\">.</span><span class=\"n\">Walk</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">Nil</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">Nil</span><span class=\"bp\">.</span><span class=\"n\">nil</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span>\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">nil_iff_eq_nil</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">∀</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"bp\">.</span><span class=\"n\">Walk</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"o\">},</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">Nil</span><span class=\"w\"> </span><span class=\"bp\">↔</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">nil</span>\n<span class=\"w\">  </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">nil</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">cons</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n</code></pre></div>\n<p><code>simp</code> seems to be doing a little more than just applying the other lemma and this form is pretty useful as a helper lemma. Is there any way to ignore this error or is there a better way to deal with this?</p>",
        "id": 441467228,
        "sender_full_name": "Lode Vermeulen",
        "timestamp": 1717078659
    },
    {
        "content": "<p>Rewriting to <code>p.Nil ↔ p = nil</code> seems to fix it.</p>",
        "id": 441473469,
        "sender_full_name": "Lode Vermeulen",
        "timestamp": 1717080290
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"690587\">Lode Vermeulen</span> has marked this topic as resolved.</p>",
        "id": 441473483,
        "sender_full_name": "Notification Bot",
        "timestamp": 1717080294
    },
    {
        "content": "<p>Just making sure, <span class=\"user-mention\" data-user-id=\"690587\">@Lode Vermeulen</span>, did you understand what the linter was trying to tell you?</p>",
        "id": 441480129,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717081938
    },
    {
        "content": "<p>If so, what is it?</p>",
        "id": 441480196,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717081953
    },
    {
        "content": "<p>If I'm not wrong, the Linter checks for if simp lemmas are written in simp-normal form. This case (which is an if and only if statement) can be written in two directions, which has a difference in how the simp tactic applies this simp lemma. By switching them around it seems it made the Linter happy. I am not actually sure why it prefers this way over the other, though.</p>",
        "id": 441481374,
        "sender_full_name": "Lode Vermeulen",
        "timestamp": 1717082199
    },
    {
        "content": "<p>Have you looked at the lemma it flagged, namely <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=SimpleGraph.Walk.nil_nil#doc\">docs#SimpleGraph.Walk.nil_nil</a> ? Do you see why you created a problem by adding the simp lemma <code>p.Nil ↔ p = nil</code>?</p>",
        "id": 441488188,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717083604
    },
    {
        "content": "<p>The simp lemmas both are attempting to simplify the same statement, which causes a conflict. I was trying to keep them both to be simp lemmas, but is the best way to solve this maybe to remove <code>@[simp]</code> from the new lemma?</p>",
        "id": 441905083,
        "sender_full_name": "Lode Vermeulen",
        "timestamp": 1717248101
    }
]