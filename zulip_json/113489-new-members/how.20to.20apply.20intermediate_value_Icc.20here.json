[
    {
        "content": "<p>Hello, I come across a problem recently when applying intermediate, infoview  says that typeclass instance problem is stuck. It must be something about the typeclass of I, I guess,  but I have no experience dealing with such things, any advice for me? Thanks in advance!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"kd\">lemma</span> <span class=\"n\">obtain_fix_pt</span> <span class=\"o\">(</span><span class=\"n\">J</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">J</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">cI</span> <span class=\"o\">:</span> <span class=\"n\">is_interval</span> <span class=\"n\">I</span><span class=\"o\">)(</span><span class=\"n\">hG</span> <span class=\"o\">:</span> <span class=\"n\">Continuous</span> <span class=\"n\">G</span><span class=\"o\">)(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℝ</span> <span class=\"o\">)</span> <span class=\"bp\">⊂</span> <span class=\"n\">G</span> <span class=\"bp\">''</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">I</span><span class=\"o\">),</span> <span class=\"n\">G</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">p</span> <span class=\"o\">:=</span><span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">end_ab</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">aleb</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">),</span> <span class=\"n\">I</span> <span class=\"bp\">=</span> <span class=\"n\">Set.Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span><span class=\"kd\">by</span>\n    <span class=\"n\">apply</span> <span class=\"n\">cI</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">end_ab</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">aleb</span><span class=\"o\">,</span> <span class=\"n\">hab</span><span class=\"o\">⟩</span>\n  <span class=\"k\">have</span> <span class=\"n\">e₁</span><span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a₁</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"o\">,</span> <span class=\"n\">G</span> <span class=\"n\">a₁</span><span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">a₁</span> <span class=\"bp\">-</span> <span class=\"n\">G</span> <span class=\"n\">a₁</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span><span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n  <span class=\"k\">have</span> <span class=\"n\">e₂</span> <span class=\"o\">:</span><span class=\"bp\">∃</span> <span class=\"n\">b₂</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"o\">,</span> <span class=\"n\">G</span> <span class=\"n\">b₂</span><span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">b₂</span> <span class=\"bp\">-</span> <span class=\"n\">G</span> <span class=\"n\">b₂</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span><span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n  <span class=\"n\">rcases</span> <span class=\"n\">e₁</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">a₁</span><span class=\"o\">,</span> <span class=\"n\">pa₁</span><span class=\"o\">⟩</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">e₂</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">b₂</span><span class=\"o\">,</span> <span class=\"n\">pb₂</span><span class=\"o\">⟩</span>\n  <span class=\"k\">let</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">I</span>  <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">G</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">J</span><span class=\"o\">))</span>\n  <span class=\"k\">have</span> <span class=\"n\">hf</span><span class=\"o\">:</span> <span class=\"n\">ContinuousOn</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Set.Icc</span> <span class=\"n\">a₁</span> <span class=\"n\">b₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span><span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">intermediate_value_Icc</span> <span class=\"n\">aleb</span> <span class=\"n\">hf</span>\n</code></pre></div>",
        "id": 424893881,
        "sender_full_name": "Jame GA",
        "timestamp": 1709652276
    },
    {
        "content": "<p>You may want to post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>. What is is_interval?</p>",
        "id": 424898134,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1709653446
    },
    {
        "content": "<p>Can you share your definition of <code>is_interval</code>?</p>",
        "id": 424898142,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1709653449
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"579936\">Gareth Ma</span> <a href=\"#narrow/stream/113489-new-members/topic/how.20to.20apply.20intermediate_value_Icc.20here/near/424898142\">said</a>:</p>\n<blockquote>\n<p>Can you share your definition of <code>is_interval</code>?</p>\n</blockquote>\n<p>Beat me to it...</p>",
        "id": 424898252,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1709653478
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/n3D9swU9XQFxbXXGRajZQP05/Screenshot-2024-03-05-at-15.44.43.png\">Screenshot-2024-03-05-at-15.44.43.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/n3D9swU9XQFxbXXGRajZQP05/Screenshot-2024-03-05-at-15.44.43.png\" title=\"Screenshot-2024-03-05-at-15.44.43.png\"><img src=\"/user_uploads/3121/n3D9swU9XQFxbXXGRajZQP05/Screenshot-2024-03-05-at-15.44.43.png\"></a></div><p>You beat me to it, no?</p>",
        "id": 424898384,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1709653520
    },
    {
        "content": "<p>race conditions <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span></p>",
        "id": 424898583,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1709653568
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466290\">Luigi Massacci</span> <a href=\"#narrow/stream/113489-new-members/topic/how.20to.20apply.20intermediate_value_Icc.20here/near/424898134\">发言道</a>：</p>\n<blockquote>\n<p>You may want to post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>. What is is_interval?</p>\n</blockquote>\n<p>oh, my fault! It is just a restatement of Set.Icc for convenience </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">is_interval</span> <span class=\"o\">(</span><span class=\"n\">J</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)(</span><span class=\"n\">aleb</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">),</span> <span class=\"n\">J</span> <span class=\"bp\">=</span> <span class=\"n\">Set.Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n</code></pre></div>",
        "id": 425004559,
        "sender_full_name": "Jame GA",
        "timestamp": 1709699348
    },
    {
        "content": "<p>forgive me, I was offline yesterday</p>",
        "id": 425018502,
        "sender_full_name": "Jame GA",
        "timestamp": 1709708198
    }
]