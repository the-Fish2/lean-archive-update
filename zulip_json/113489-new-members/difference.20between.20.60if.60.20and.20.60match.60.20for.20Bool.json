[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">natOrString</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">if</span> <span class=\"n\">b</span> <span class=\"k\">then</span> <span class=\"n\">Nat</span> <span class=\"k\">else</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">b</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">true</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"three\"</span>\n\n<span class=\"sd\">/--</span>\n<span class=\"sd\">error: application type mismatch</span>\n<span class=\"sd\">  ite (b = true) 3</span>\n<span class=\"sd\">argument</span>\n<span class=\"sd\">  3</span>\n<span class=\"sd\">has type</span>\n<span class=\"sd\">  Nat : Type</span>\n<span class=\"sd\">but is expected to have type</span>\n<span class=\"sd\">  if b = true then Nat else String : Type</span>\n<span class=\"sd\">-/</span>\n<span class=\"bp\">#</span><span class=\"n\">guard_msgs</span> <span class=\"k\">in</span>\n<span class=\"kd\">def</span> <span class=\"n\">natOrString'</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">if</span> <span class=\"n\">b</span> <span class=\"k\">then</span> <span class=\"n\">Nat</span> <span class=\"k\">else</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">b</span> <span class=\"k\">then</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n  <span class=\"k\">else</span> <span class=\"s2\">\"three\"</span>\n</code></pre></div>",
        "id": 435841149,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1714287596
    },
    {
        "content": "<p>Why does this error occur? Why does it have to be a <code>match</code>?</p>",
        "id": 435841232,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1714287657
    },
    {
        "content": "<p>I do not have a better answer than \"<code>match</code> does more then <code>ite</code>\", but maybe seeing how you could use <code>ite</code> helps:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">natOrString'</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">if</span> <span class=\"n\">b</span> <span class=\"k\">then</span> <span class=\"n\">Nat</span> <span class=\"k\">else</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n  <span class=\"k\">if</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"k\">then</span> <span class=\"n\">if_pos</span> <span class=\"n\">h</span> <span class=\"bp\">▸</span> <span class=\"mi\">3</span>\n  <span class=\"k\">else</span> <span class=\"n\">if_neg</span> <span class=\"n\">h</span> <span class=\"bp\">▸</span> <span class=\"s2\">\"three\"</span>\n</code></pre></div>",
        "id": 435843500,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714288845
    }
]