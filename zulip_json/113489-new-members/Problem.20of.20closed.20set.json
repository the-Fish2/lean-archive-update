[
    {
        "content": "<p>Is there a relevant theorem inside mathilb that accomplishes the proof of the following theorem? If not, is there a theorem that I can learn from?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">hdef_r_close</span> <span class=\"o\">{</span><span class=\"n\">zset_r</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hdef1</span> <span class=\"o\">:</span> <span class=\"n\">zset_r</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">αleft</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">αright</span><span class=\"o\">)})</span> <span class=\"o\">:</span> <span class=\"n\">IsClosed</span> <span class=\"o\">(</span><span class=\"n\">zset_r</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 424479159,
        "sender_full_name": "haotian liu",
        "timestamp": 1709446743
    },
    {
        "content": "<p>Yes, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=isClosed_Icc#doc\">docs#isClosed_Icc</a></p>",
        "id": 424480000,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1709447629
    },
    {
        "content": "<p>Thank you very much!<br>\nActually, I want to prove the following problem:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">private</span> <span class=\"kd\">theorem</span> <span class=\"n\">Is_closed_zset</span> <span class=\"o\">{</span><span class=\"n\">αleft</span> <span class=\"n\">αright</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">zset</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">hdef</span> <span class=\"o\">:</span> <span class=\"n\">zset</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">αleft</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">αright</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">})</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">Continuous</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsClosed</span> <span class=\"o\">(</span><span class=\"n\">zset</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Now, I can prove that zset_r = {x | (αleft ≤ x ∧ x ≤ αright)} is closed.<br>\nIs there any theorem that proves that a subset of a closed set is also a closed set?<br>\nOr is there any theorem that proves that the set of zeros of a continuous function is a closed set?</p>",
        "id": 424483277,
        "sender_full_name": "haotian liu",
        "timestamp": 1709450893
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Is_closed_zset</span> <span class=\"o\">{</span><span class=\"n\">αleft</span> <span class=\"n\">αright</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">zset</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">hdef</span> <span class=\"o\">:</span> <span class=\"n\">zset</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">αleft</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">αright</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">})</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">Continuous</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsClosed</span> <span class=\"n\">zset</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">subst</span> <span class=\"n\">zset</span>\n  <span class=\"n\">apply</span> <span class=\"n\">IsClosed.inter</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">isClosed_Icc</span>\n  <span class=\"bp\">·</span> <span class=\"n\">change</span> <span class=\"n\">IsClosed</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">⁻¹'</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">})</span>\n    <span class=\"n\">apply</span> <span class=\"n\">IsClosed.preimage</span> <span class=\"n\">hg</span>\n    <span class=\"n\">exact</span> <span class=\"n\">T1Space.t1</span> <span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 424483545,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1709451179
    },
    {
        "content": "<p>Thank you very much!</p>",
        "id": 424484115,
        "sender_full_name": "haotian liu",
        "timestamp": 1709451675
    }
]