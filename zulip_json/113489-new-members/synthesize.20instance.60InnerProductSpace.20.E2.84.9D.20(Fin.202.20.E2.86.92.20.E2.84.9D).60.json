[
    {
        "content": "<p>I'm trying to use <code>∠</code> for some very simple 2d geometry. However, I fail to make it work, and get a <code>failed to synthesize instance</code> error.  I haven't tried much synthesizing an instance like that by hand, because I suspect, there could be a already a version of ℝ^2 that comes with an inner product. How to correctly talk about an angle in ℝ^2? What is the canonical type of that in mathlib?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kn\">open</span> <span class=\"n\">EuclideanGeometry</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">β</span> <span class=\"bp\">=</span> <span class=\"bp\">∠</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">β</span> <span class=\"bp\">=</span> <span class=\"bp\">∠</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 425167644,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1709755069
    },
    {
        "content": "<p><code>EuclideanSpace ℝ (Fin 2)</code></p>",
        "id": 425168899,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1709755541
    },
    {
        "content": "<p>will give you access to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=EuclideanSpace.instInnerProductSpace#doc\">docs#EuclideanSpace.instInnerProductSpace</a></p>",
        "id": 425169049,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1709755597
    },
    {
        "content": "<p>For the second one, you can use <code>WithLp 2 (ℝ × ℝ)</code></p>",
        "id": 425182625,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1709761305
    },
    {
        "content": "<p>(<code>EuclideanSpace ℝ (Fin 2)</code> is in fact a shorthand for <code>WithLp 2 (Fin 2 → ℝ)</code>)</p>",
        "id": 425182710,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1709761327
    },
    {
        "content": "<p>It is not actually shorter, though ...</p>",
        "id": 425184381,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1709762039
    }
]