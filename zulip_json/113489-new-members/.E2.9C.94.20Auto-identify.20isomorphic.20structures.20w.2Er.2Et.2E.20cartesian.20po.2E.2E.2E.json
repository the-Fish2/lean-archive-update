[
    {
        "content": "<p>Hello, I am currently trying to prove that a type A has a ring structure, where from previous data I already have addition/multiplication/negation/etc. functions already defined that satisfy all of the appropriate compatibility relationships to make A into a ring. However, these functions are all in the form (Fin 2 -&gt; A) -&gt; (Fin 1 -&gt; A) instead of A -&gt; A -&gt; A, or (Fin 1 -&gt; A) -&gt; (Fin 1 -&gt; A) instead of A -&gt; A. Is there some easy way to get lean to make the appropriate identifications in such a way that it remains uncumbersome to show that all the compatibility relations are still satisfied, for instance by defining equivalences and using transfer/transport tactics, or defining coercions back and forth? Are there already decent theorems in mathlib that give such isomorphisms? This is a relatively open-ended question about best practice, so I don't have a good minimum working example.</p>",
        "id": 438453042,
        "sender_full_name": "Bashir",
        "timestamp": 1715636073
    },
    {
        "content": "<p>Unfortunately, there is no generic transfer tactic. We have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=finTwoArrowEquiv#doc\">docs#finTwoArrowEquiv</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Equiv.funUnique#doc\">docs#Equiv.funUnique</a>. AFAICT, we don't have <code>RingEquiv</code> versions of these maps but it should be easy to define them.</p>",
        "id": 438459002,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1715638455
    },
    {
        "content": "<p>Then you can use combinators like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Equiv.arrowCongr#doc\">docs#Equiv.arrowCongr</a>.</p>",
        "id": 438459043,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1715638487
    },
    {
        "content": "<p>Okay, thank you</p>",
        "id": 438876304,
        "sender_full_name": "Bashir",
        "timestamp": 1715803276
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"709197\">Bashir</span> has marked this topic as resolved.</p>",
        "id": 438876322,
        "sender_full_name": "Notification Bot",
        "timestamp": 1715803283
    }
]