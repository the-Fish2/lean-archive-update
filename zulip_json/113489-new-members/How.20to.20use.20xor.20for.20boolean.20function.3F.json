[
    {
        "content": "<p>I am trying to migrate from Coq to Lean 4 and I'm starting by translation an existing proof that I wrote in Coq into Lean. It's just a stupid simple lemma about the Xor function, and I'm stumbling trying gain access to the definition of xor in Bool</p>\n<p>Probably just some simple thing I'm missing. I've tried to look at the file where boolean functions are defined, but my import statement doesn't work and xor doesn't seem to be in scope by default. I'm not even sure if Lean uses scopes the same way Coq does?</p>\n<p><code> import init.data.bool </code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#eval</span>  <span class=\"n\">xor</span> <span class=\"n\">true</span> <span class=\"n\">false</span>\n</code></pre></div>",
        "id": 424738638,
        "sender_full_name": "Anthony Peterson",
        "timestamp": 1709582959
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Bool.xor#doc\">docs#Bool.xor</a></p>",
        "id": 424738843,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1709583073
    },
    {
        "content": "<p>Seems to be in <code>Std.Data.Bool</code></p>",
        "id": 424739001,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1709583142
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Data.Bool</span>\n\n<span class=\"k\">#eval</span>  <span class=\"n\">xor</span> <span class=\"n\">true</span> <span class=\"n\">false</span>\n</code></pre></div>",
        "id": 424739048,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1709583164
    },
    {
        "content": "<p>It's a bit concerning that you've pasted <code>import init.data.bool</code>. That lowercase naming convention for modules was only used in Lean 3.</p>",
        "id": 424739114,
        "sender_full_name": "Timo Carlin-Burns",
        "timestamp": 1709583202
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282271\">Bolton Bailey</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20use.20xor.20for.20boolean.20function.3F/near/424739048\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Data.Bool</span>\n\n<span class=\"k\">#eval</span>  <span class=\"n\">xor</span> <span class=\"n\">true</span> <span class=\"n\">false</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Thanks that's what I  needed. the Std.Data.Bool</p>",
        "id": 424739123,
        "sender_full_name": "Anthony Peterson",
        "timestamp": 1709583204
    },
    {
        "content": "<p>Note there is also <code>true ^^^ false</code> notation</p>",
        "id": 424745139,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1709585561
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20use.20xor.20for.20boolean.20function.3F/near/424745139\">said</a>:</p>\n<blockquote>\n<p>Note there is also <code>true ^^^ false</code> notation</p>\n</blockquote>\n<p>I tested that and there doesn't seem to be an instance of <code>Xor Bool</code>.</p>",
        "id": 424745386,
        "sender_full_name": "Timo Carlin-Burns",
        "timestamp": 1709585662
    },
    {
        "content": "<p>Even with mathlib imported?</p>",
        "id": 424745496,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1709585710
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">true</span> <span class=\"bp\">^^^</span> <span class=\"n\">false</span>\n<span class=\"c1\">-- failed to synthesize instance</span>\n<span class=\"c1\">--   HXor Bool Bool ?m.20</span>\n</code></pre></div>",
        "id": 424745677,
        "sender_full_name": "Timo Carlin-Burns",
        "timestamp": 1709585768
    }
]