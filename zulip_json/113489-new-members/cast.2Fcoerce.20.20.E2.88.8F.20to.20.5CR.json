[
    {
        "content": "<p>What am I doing wrong? Please comment.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">false</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Finset</span> <span class=\"n\">Nat</span>\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">h₂</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">):</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">/</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">h₃</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}:</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n    <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">h₂</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"o\">((</span><span class=\"bp\">∏</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span>\n        <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"o\">((</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span>\n        <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"o\">((</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">tactic</span> <span class=\"bp\">'</span><span class=\"n\">apply'</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">unify</span>\n  <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"bp\">↑</span><span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span>\n<span class=\"k\">with</span>\n  <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span>\n<span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n<span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n<span class=\"bp\">⊢</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span>\n</code></pre></div>\n<p>Is the <code>n</code> under the <code>∏</code> the problem?</p>\n<p>Thanks,</p>",
        "id": 434520694,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1713634888
    },
    {
        "content": "<p>You have both a bounded and unbounded variable k in h3, and the one in the goal is a natural so lemma h2 (which is false if b=0 so can't be proved) doesn't apply because it's about real numbers.</p>",
        "id": 434521104,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713635251
    },
    {
        "content": "<p>h3 isn't true either because all those divisions are natural divisions ie they throw away the remainder</p>",
        "id": 434521115,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713635262
    },
    {
        "content": "<p>I removed a lot of code to get the mwe. what to do about the <code>k</code>?</p>",
        "id": 434521237,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1713635369
    },
    {
        "content": "<p>Since <code>n</code> and <code>k</code> are natural numbers in <code>(∏ k in Icc 1 n, (1 + k) / k) * ((n + 2) / (n + 1))</code> make sure to put in a type ascription as a hint somewhere. This should help: <code>(∏ k in Icc 1 n, (1 + k) / k) * ((n + 2) / (n + 1) : ℝ)</code></p>",
        "id": 434521429,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713635506
    },
    {
        "content": "<p>Well you could remove the k that isn't doing anything, and you could replace the first <code>(1 + k)</code> with <code>(1 + k : \\R)</code></p>",
        "id": 434521478,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713635528
    },
    {
        "content": "<p>The two different <code>n</code>s are no problem?</p>",
        "id": 434521522,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1713635598
    },
    {
        "content": "<p>There's only one n. Do you understand the concept of free and bound variables?</p>",
        "id": 434521651,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713635698
    },
    {
        "content": "<p>You're taking a product over k and that makes a new variable k. But you're not taking a product over n</p>",
        "id": 434521683,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713635736
    },
    {
        "content": "<p>Need to look that up. Intuitively, free is implicit?</p>",
        "id": 434521788,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1713635824
    },
    {
        "content": "<p>Bummer, in the real code I have an induction over k, that no longer works because it's now real. Can I rewrite a goal by changing a variable from N to R? (after the induction)</p>",
        "id": 434521963,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1713635987
    },
    {
        "content": "<p>If you want to work out whether <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>3</mn></msubsup><mo stretchy=\"false\">(</mo><mi>i</mi><mo>+</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>37</mn></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=1}^{3}(i+n)=37</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2537em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">37</span></span></span></span> is true or false then you don't have enough information because you don't know n. If i told you that n=10 then you could do the calculation. Here n is a free variable. But you don't have to know what i is to work out the sum, because i is bound, it appears locally and runs from 1 to 3 and then disappears. You have both a free k and a bound k in h3</p>",
        "id": 434522082,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713636035
    },
    {
        "content": "<p>Yes, lean automatically coerces from naturals to reals when asked -- indeed that's what all those little up-arrows are indicating in the error message you posted earlier</p>",
        "id": 434522242,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713636126
    },
    {
        "content": "<p>Many thanks!</p>",
        "id": 434522282,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1713636178
    },
    {
        "content": "<p>Indeed it was the presence of the up arrows which alerted me to what was going on</p>",
        "id": 434522319,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713636215
    }
]