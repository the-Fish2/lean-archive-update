[
    {
        "content": "<p>Hello,<br>\ni try to render Lean code in LaTex.<br>\ni followed the instructions from the <a href=\"https://lean-lang.org/lean4/doc/syntax_highlight_in_latex.html\">Manual</a> but both options did not work for me.<br>\nWhen using listings some none ASCII Characters are rendered displaced for some reason.</p>\n<p>And my Minted version is 2.7,  i copied the first answer from this <a href=\"https://github.com/gpoore/minted/issues/360\">issue</a> but lualatex fails to build it.</p>",
        "id": 431527343,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1712324664
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/VU_XOxR9GLy9pAaB4MeGEnz-/lean_syntax.png\">lean_syntax.png</a><br>\nthis how a listings render the follwing code for me</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/VU_XOxR9GLy9pAaB4MeGEnz-/lean_syntax.png\" title=\"lean_syntax.png\"><img src=\"/user_uploads/3121/VU_XOxR9GLy9pAaB4MeGEnz-/lean_syntax.png\"></a></div><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">lstlisting</span><span class=\"o\">}[</span><span class=\"n\">language</span><span class=\"bp\">=</span><span class=\"n\">lean</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">μ</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">lstlisting</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 431527820,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1712324810
    },
    {
        "content": "<p>Based on <a href=\"https://github.com/pygments/pygments/milestones\">https://github.com/pygments/pygments/milestones</a>, I think if you wait a few days then lean4 support might be native to pygments</p>",
        "id": 431538567,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712328062
    },
    {
        "content": "<p>Of course, I thought this in january which is when their previous release was scheduled for, which never happened...</p>",
        "id": 431538619,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712328078
    },
    {
        "content": "<blockquote>\n<p>i copied the first answer from this <a href=\"https://github.com/gpoore/minted/issues/360\">issue</a> but lualatex fails to build it.</p>\n</blockquote>\n<p>I was able to get <span class=\"user-mention\" data-user-id=\"122318\">@Tobias Grosser</span>'s approach here to work with LuaLatex for my thesis</p>",
        "id": 431541764,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712328154
    },
    {
        "content": "<p>What I had there is</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"TeX\"><pre><span></span><code><span class=\"c\">% from https://github.com/opencompl/paper-template/commit/b71adc99c0784ba69d8f73ec3338c3d410dc0e6b</span>\n<span class=\"k\">\\makeatletter</span>\n    <span class=\"k\">\\ifcsdef</span><span class=\"nb\">{</span>minted@optlistcl@quote<span class=\"nb\">}</span>\n    <span class=\"nb\">{</span>\n    <span class=\"k\">\\ifwindows</span>\n    <span class=\"k\">\\renewcommand</span><span class=\"nb\">{</span><span class=\"k\">\\minted</span>@optlistcl@quote<span class=\"nb\">}</span>[2]<span class=\"nb\">{</span><span class=\"c\">%</span>\n        <span class=\"k\">\\ifstrempty</span><span class=\"nb\">{</span>#2<span class=\"nb\">}{</span><span class=\"k\">\\detokenize</span><span class=\"nb\">{</span>#1<span class=\"nb\">}}{</span><span class=\"k\">\\detokenize</span><span class=\"nb\">{</span>#1=\"#2\"<span class=\"nb\">}}}</span>\n    <span class=\"k\">\\else</span>\n    <span class=\"k\">\\renewcommand</span><span class=\"nb\">{</span><span class=\"k\">\\minted</span>@optlistcl@quote<span class=\"nb\">}</span>[2]<span class=\"nb\">{</span><span class=\"c\">%</span>\n        <span class=\"k\">\\ifstrempty</span><span class=\"nb\">{</span>#2<span class=\"nb\">}{</span><span class=\"k\">\\detokenize</span><span class=\"nb\">{</span>#1<span class=\"nb\">}}{</span><span class=\"k\">\\detokenize</span><span class=\"nb\">{</span>#1='#2'<span class=\"nb\">}}}</span>\n    <span class=\"k\">\\fi</span>\n\n    <span class=\"c\">% similar to \\minted@def@optcl@switch</span>\n    <span class=\"k\">\\newcommand</span><span class=\"nb\">{</span><span class=\"k\">\\minted</span>@def@optcl@novalue<span class=\"nb\">}</span>[2]<span class=\"nb\">{</span><span class=\"c\">%</span>\n    <span class=\"k\">\\define</span>@booleankey<span class=\"nb\">{</span>minted@opt@g<span class=\"nb\">}{</span>#1<span class=\"nb\">}</span><span class=\"c\">%</span>\n        <span class=\"nb\">{</span><span class=\"k\">\\minted</span>@addto@optlistcl<span class=\"nb\">{</span><span class=\"k\">\\minted</span>@optlistcl@g<span class=\"nb\">}{</span>#2<span class=\"nb\">}{}</span><span class=\"c\">%</span>\n        <span class=\"k\">\\@</span>namedef<span class=\"nb\">{</span>minted@opt@g:#1<span class=\"nb\">}{</span>true<span class=\"nb\">}}</span>\n        <span class=\"nb\">{</span><span class=\"k\">\\@</span>namedef<span class=\"nb\">{</span>minted@opt@g:#1<span class=\"nb\">}{</span>false<span class=\"nb\">}}</span>\n    <span class=\"k\">\\define</span>@booleankey<span class=\"nb\">{</span>minted@opt@g@i<span class=\"nb\">}{</span>#1<span class=\"nb\">}</span><span class=\"c\">%</span>\n        <span class=\"nb\">{</span><span class=\"k\">\\minted</span>@addto@optlistcl<span class=\"nb\">{</span><span class=\"k\">\\minted</span>@optlistcl@g@i<span class=\"nb\">}{</span>#2<span class=\"nb\">}{}</span><span class=\"c\">%</span>\n        <span class=\"k\">\\@</span>namedef<span class=\"nb\">{</span>minted@opt@g@i:#1<span class=\"nb\">}{</span>true<span class=\"nb\">}}</span>\n        <span class=\"nb\">{</span><span class=\"k\">\\@</span>namedef<span class=\"nb\">{</span>minted@opt@g@i:#1<span class=\"nb\">}{</span>false<span class=\"nb\">}}</span>\n    <span class=\"k\">\\define</span>@booleankey<span class=\"nb\">{</span>minted@opt@lang<span class=\"nb\">}{</span>#1<span class=\"nb\">}</span><span class=\"c\">%</span>\n        <span class=\"nb\">{</span><span class=\"k\">\\minted</span>@addto@optlistcl@lang<span class=\"nb\">{</span>minted@optlistcl@lang<span class=\"k\">\\minted</span>@lang<span class=\"nb\">}{</span>#2<span class=\"nb\">}{}</span><span class=\"c\">%</span>\n        <span class=\"k\">\\@</span>namedef<span class=\"nb\">{</span>minted@opt@lang<span class=\"k\">\\minted</span>@lang:#1<span class=\"nb\">}{</span>true<span class=\"nb\">}}</span>\n        <span class=\"nb\">{</span><span class=\"k\">\\@</span>namedef<span class=\"nb\">{</span>minted@opt@lang<span class=\"k\">\\minted</span>@lang:#1<span class=\"nb\">}{</span>false<span class=\"nb\">}}</span>\n    <span class=\"k\">\\define</span>@booleankey<span class=\"nb\">{</span>minted@opt@lang@i<span class=\"nb\">}{</span>#1<span class=\"nb\">}</span><span class=\"c\">%</span>\n        <span class=\"nb\">{</span><span class=\"k\">\\minted</span>@addto@optlistcl@lang<span class=\"nb\">{</span>minted@optlistcl@lang<span class=\"k\">\\minted</span>@lang @i<span class=\"nb\">}{</span>#2<span class=\"nb\">}{}</span><span class=\"c\">%</span>\n        <span class=\"k\">\\@</span>namedef<span class=\"nb\">{</span>minted@opt@lang<span class=\"k\">\\minted</span>@lang @i:#1<span class=\"nb\">}{</span>true<span class=\"nb\">}}</span>\n        <span class=\"nb\">{</span><span class=\"k\">\\@</span>namedef<span class=\"nb\">{</span>minted@opt@lang<span class=\"k\">\\minted</span>@lang @i:#1<span class=\"nb\">}{</span>false<span class=\"nb\">}}</span>\n    <span class=\"k\">\\define</span>@booleankey<span class=\"nb\">{</span>minted@opt@cmd<span class=\"nb\">}{</span>#1<span class=\"nb\">}</span><span class=\"c\">%</span>\n        <span class=\"nb\">{</span><span class=\"k\">\\minted</span>@addto@optlistcl<span class=\"nb\">{</span><span class=\"k\">\\minted</span>@optlistcl@cmd<span class=\"nb\">}{</span>#2<span class=\"nb\">}{}</span><span class=\"c\">%</span>\n            <span class=\"k\">\\@</span>namedef<span class=\"nb\">{</span>minted@opt@cmd:#1<span class=\"nb\">}{</span>true<span class=\"nb\">}}</span>\n        <span class=\"nb\">{</span><span class=\"k\">\\@</span>namedef<span class=\"nb\">{</span>minted@opt@cmd:#1<span class=\"nb\">}{</span>false<span class=\"nb\">}}</span>\n    <span class=\"nb\">}</span>\n    <span class=\"k\">\\minted</span>@def@optcl@novalue<span class=\"nb\">{</span>customlexer<span class=\"nb\">}{</span>-x<span class=\"nb\">}</span>\n    <span class=\"nb\">}</span>\n    <span class=\"nb\">{</span>\n    <span class=\"nb\">}</span>\n<span class=\"k\">\\makeatother</span>\n</code></pre></div>\n</div></div>",
        "id": 431542064,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712328243
    },
    {
        "content": "<p>im confused to how even use this code. should i add it to my preamble after the minted import?<br>\nMy thesis is due to this month so i  probably cant wait for the native Lean support.</p>",
        "id": 431545867,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1712329334
    },
    {
        "content": "<p>Sorry, I'm afraid I missed your message <span class=\"user-mention\" data-user-id=\"684702\">@Simon Daniel</span>. If it's not too late, pygments just released a version with native lean4 support.</p>",
        "id": 437166300,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714946316
    },
    {
        "content": "<p>no worries, i worked out a half decent looking solution. Ill have a look into the pygments release if I need latex support in the future</p>",
        "id": 437166788,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1714946785
    },
    {
        "content": "<p>I have just given <code>minted</code> and <code>pygments</code> another try.</p>\n<p>My preamble:</p>\n<div class=\"codehilite\" data-code-language=\"TeX\"><pre><span></span><code><span class=\"c\">% I have the following to adjust outputdir and cachedir but in general they are not needed</span>\n<span class=\"c\">% \\usepackage[outputdir=../print,cachedir=_minted-cache]{minted}</span>\n<span class=\"k\">\\usepackage</span><span class=\"nb\">{</span>minted<span class=\"nb\">}</span>\n\n<span class=\"k\">\\setminted</span><span class=\"nb\">{</span>\n  fontsize=<span class=\"k\">\\footnotesize</span>,\n  frame=single,\n  breaklines\n<span class=\"nb\">}</span>\n</code></pre></div>\n<p>Code block:</p>\n<div class=\"codehilite\" data-code-language=\"TeX\"><pre><span></span><code>    <span class=\"k\">\\begin</span><span class=\"nb\">{</span>minted<span class=\"nb\">}</span>[autogobble,mathescape]<span class=\"nb\">{</span>lean4<span class=\"nb\">}</span>\n        /--\n            Let <span class=\"s\">$</span><span class=\"nb\">K</span><span class=\"s\">$</span> be a division ring, a module <span class=\"s\">$</span><span class=\"nb\">V</span><span class=\"s\">$</span> over <span class=\"s\">$</span><span class=\"nb\">K</span><span class=\"s\">$</span> is a vector space\n            where being a module requires <span class=\"s\">$</span><span class=\"nb\">V</span><span class=\"s\">$</span> to be a commutative group over <span class=\"s\">$</span><span class=\"o\">+</span><span class=\"s\">$</span>.\n        -/\n        variable [DivisionRing K] [AddCommGroup V] [Module K V]\n    <span class=\"k\">\\end</span><span class=\"nb\">{</span>minted<span class=\"nb\">}</span>\n</code></pre></div>\n<p>Inline code:</p>\n<div class=\"codehilite\" data-code-language=\"TeX\"><pre><span></span><code><span class=\"k\">\\mintinline</span><span class=\"nb\">{</span>lean4<span class=\"nb\">}{</span>Algebra.toRingHom r<span class=\"nb\">}</span>\n</code></pre></div>\n<p>It seems ok, except that <code>mathescape</code> is not working like <code>lstlisting</code> as claimed in <code>minted</code> documentation.</p>\n<p>Here is <code>lstlisting</code> output:</p>\n<p><a href=\"/user_uploads/3121/9mMfsUjxb9UkamlIdNpx0ZjC/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/9mMfsUjxb9UkamlIdNpx0ZjC/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/9mMfsUjxb9UkamlIdNpx0ZjC/image.png\"></a></div><p>While <code>minted</code> gives:</p>\n<p><a href=\"/user_uploads/3121/Yh73JF7KGjyA5S27YlVNtSJU/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Yh73JF7KGjyA5S27YlVNtSJU/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/Yh73JF7KGjyA5S27YlVNtSJU/image.png\"></a></div><p>but  <code>mathescape</code> actually works for Python:</p>\n<p><a href=\"/user_uploads/3121/C1oBRRv_H8eAw4hUV_XYyDNx/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/C1oBRRv_H8eAw4hUV_XYyDNx/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/C1oBRRv_H8eAw4hUV_XYyDNx/image.png\"></a></div>",
        "id": 437187134,
        "sender_full_name": "Utensil Song",
        "timestamp": 1714967018
    },
    {
        "content": "<p>Another side note is that usually when publishing, one has no control over the Python environment or the <code>pygments</code> version of the publisher, released or not. One could just use the master version of  <code>pygments</code> locally, then submit using <code>\\usepackage[frozencache,cachedir=_minted-cache]{minted}</code>.</p>",
        "id": 437187678,
        "sender_full_name": "Utensil Song",
        "timestamp": 1714967459
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span> , I haven't tested it, but I think you want the option <code>texcomments</code> instead of <code>mathescape</code>. The former is for escaping to LaTeX within the code itself, the latter is for escaping to LaTeX in comments.</p>",
        "id": 437190259,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714969119
    },
    {
        "content": "<p>Thanks, they are for different purposes, <code>mathescape</code> has less side-effect IIUC. </p>\n<p>I've pushed a fix following the C/C++ lexer. When using <code>pygments @ git+https://github.com/utensil/pygments.git@lean4_mathescape</code>, <code>mathescape</code> works as expected.</p>",
        "id": 437194968,
        "sender_full_name": "Utensil Song",
        "timestamp": 1714971595
    },
    {
        "content": "<p>I thought mathescape was the more aggressive option, and will mess up $ symbols in syntax antiquotations?</p>",
        "id": 437216993,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714984078
    },
    {
        "content": "<p>(<a href=\"https://github.com/utensil/pygments/tree/lean4_mathescape\">https://github.com/utensil/pygments/tree/lean4_mathescape</a> for reference)</p>",
        "id": 437217118,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714984116
    },
    {
        "content": "<p>That patch looks strange to me; and it breaks nested comments</p>",
        "id": 437217606,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714984320
    },
    {
        "content": "<p>Actually, the patch is mostly unnecessary, no need to change the lexer nor add <code>__init__</code> it seems, they are byproducts of figuring out the problem.</p>\n<p>The only actual effect is to treat doc strings as comments so that these options about comments will work. Alternatively, I can just use <code>/-</code> comments instead of <code>/--</code>.</p>\n<p>And thanks for the heads-up and explanation, it seems that I should change to <code>texcomments</code> after all.</p>",
        "id": 437222642,
        "sender_full_name": "Utensil Song",
        "timestamp": 1714986358
    }
]