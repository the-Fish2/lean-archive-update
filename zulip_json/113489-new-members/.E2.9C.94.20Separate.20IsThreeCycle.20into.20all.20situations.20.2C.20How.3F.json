[
    {
        "content": "<p>I want to split \"IsThreeCycle p\" to all possible situations, and then prove each situation separately.<br>\nWhat should I do next ?</p>\n<p>Here is the <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Fin</span>\n<span class=\"kn\">open</span> <span class=\"n\">Equiv</span> <span class=\"n\">Equiv.Perm</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">P1</span><span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">lemma31</span>\n<span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Perm</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">5</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"n\">IsThreeCycle</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n<span class=\"o\">:</span> <span class=\"n\">P1</span>\n<span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 429196736,
        "sender_full_name": "chenjulang",
        "timestamp": 1711283822
    },
    {
        "content": "<p>Or should I classify it into  a few situations instead of exhausting all cases? <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 429196958,
        "sender_full_name": "chenjulang",
        "timestamp": 1711283970
    },
    {
        "content": "<p>In fact, my case is (Fin 8), Any advise would be appreciated! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 429207504,
        "sender_full_name": "chenjulang",
        "timestamp": 1711288902
    },
    {
        "content": "<p>For example , For Perm (Fin 5) ,  there are many cases to be considered:<br>\n(1 2 3)<br>\n(1 2 4)<br>\n(1 2 5)<br>\n(1 3 4)<br>\n(1 3 5)<br>\n(1 4 5)<br>\n(2 3 4)<br>\n(2 3 5)<br>\n(2 4 5)<br>\n(3 4 5) ...</p>",
        "id": 429217314,
        "sender_full_name": "chenjulang",
        "timestamp": 1711292666
    },
    {
        "content": "<p>For example , For Perm (Fin 8) :<br>\n(1 2 3)<br>\n(1 2 4)<br>\n(1 2 5)<br>\n(1 2 6)<br>\n(1 3 4)<br>\n(1 3 5)<br>\n(1 3 6)<br>\n(1 4 5)<br>\n(1 4 6)<br>\n(1 5 6)<br>\n(2 3 4)<br>\n(2 3 5)<br>\n(2 3 6)<br>\n(2 4 5)<br>\n(2 4 6)<br>\n(2 5 6)<br>\n(3 4 5)<br>\n(3 4 6)<br>\n(3 5 6)<br>\n(4 5 6) ......</p>\n<p>Not to mention Perm (Fin 12) :<br>\n(1 2 3)<br>\n(1 2 4)<br>\n(1 2 5)<br>\n(1 2 6)<br>\n(1 2 7)<br>\n(1 2 8)<br>\n(1 2 9)<br>\n(1 2 10)<br>\n(1 2 11)<br>\n(1 2 12)<br>\n(1 3 4)<br>\n(1 3 5)<br>\n(1 3 6)<br>\n(1 3 7)<br>\n(1 3 8)<br>\n(1 3 9)<br>\n(1 3 10)<br>\n(1 3 11)<br>\n(1 3 12)<br>\n(1 4 5)<br>\n(1 4 6)<br>\n(1 4 7)<br>\n(1 4 8)<br>\n(1 4 9)<br>\n(1 4 10)<br>\n(1 4 11)<br>\n(1 4 12)<br>\n(1 5 6)<br>\n(1 5 7)<br>\n(1 5 8)<br>\n(1 5 9)<br>\n(1 5 10)<br>\n(1 5 11)<br>\n(1 5 12)<br>\n(1 6 7)<br>\n(1 6 8)<br>\n(1 6 9)<br>\n(1 6 10)<br>\n(1 6 11)<br>\n(1 6 12)<br>\n(1 7 8)<br>\n(1 7 9)<br>\n(1 7 10)<br>\n(1 7 11)<br>\n(1 7 12)<br>\n(1 8 9)<br>\n(1 8 10)<br>\n(1 8 11)<br>\n(1 8 12)<br>\n(1 9 10)<br>\n(1 9 11)<br>\n(1 9 12)<br>\n(1 10 11)<br>\n(1 10 12)<br>\n(1 11 12)<br>\n(2 3 4)<br>\n(2 3 5)<br>\n(2 3 6)<br>\n(2 3 7)<br>\n(2 3 8)<br>\n(2 3 9)<br>\n(2 3 10)<br>\n(2 3 11)<br>\n(2 3 12)<br>\n(2 4 5)<br>\n(2 4 6)<br>\n(2 4 7)<br>\n(2 4 8)<br>\n(2 4 9)<br>\n(2 4 10)<br>\n(2 4 11)<br>\n(2 4 12)<br>\n(2 5 6)<br>\n(2 5 7)<br>\n(2 5 8)<br>\n(2 5 9)<br>\n(2 5 10)<br>\n(2 5 11)<br>\n(2 5 12)<br>\n(2 6 7)<br>\n(2 6 8)<br>\n(2 6 9)<br>\n(2 6 10)<br>\n(2 6 11)<br>\n(2 6 12)<br>\n(2 7 8)<br>\n(2 7 9)<br>\n(2 7 10)<br>\n(2 7 11)<br>\n(2 7 12)<br>\n(2 8 9)<br>\n(2 8 10)<br>\n(2 8 11)<br>\n(2 8 12)<br>\n(2 9 10)<br>\n(2 9 11)<br>\n(2 9 12)<br>\n(2 10 11)<br>\n(2 10 12)<br>\n(2 11 12)<br>\n(3 4 5)<br>\n(3 4 6)<br>\n(3 4 7)<br>\n(3 4 8)<br>\n(3 4 9)<br>\n(3 4 10)<br>\n(3 4 11)<br>\n(3 4 12)<br>\n(3 5 6)<br>\n(3 5 7)<br>\n(3 5 8)<br>\n(3 5 9)<br>\n(3 5 10)<br>\n(3 5 11)<br>\n(3 5 12)<br>\n(3 6 7)<br>\n(3 6 8)<br>\n(3 6 9)<br>\n(3 6 10)<br>\n(3 6 11)<br>\n(3 6 12)<br>\n(3 7 8)<br>\n(3 7 9)<br>\n(3 7 10)<br>\n(3 7 11)<br>\n(3 7 12)<br>\n(3 8 9)<br>\n(3 8 10)<br>\n(3 8 11)<br>\n(3 8 12)<br>\n(3 9 10)<br>\n(3 9 11)<br>\n(3 9 12)<br>\n(3 10 11)<br>\n(3 10 12)<br>\n(3 11 12)<br>\n(4 5 6)<br>\n(4 5 7)<br>\n(4 5 8)<br>\n(4 5 9)<br>\n(4 5 10)<br>\n(4 5 11)<br>\n(4 5 12)<br>\n(4 6 7)<br>\n(4 6 8)<br>\n(4 6 9)<br>\n(4 6 10)<br>\n(4 6 11)<br>\n(4 6 12)<br>\n(4 7 8)<br>\n(4 7 9)<br>\n(4 7 10)<br>\n(4 7 11)<br>\n(4 7 12)<br>\n(4 8 9)<br>\n(4 8 10)<br>\n(4 8 11)<br>\n(4 8 12)<br>\n(4 9 10)<br>\n(4 9 11)<br>\n(4 9 12)<br>\n(4 10 11)<br>\n(4 10 12)<br>\n(4 11 12)<br>\n(5 6 7)<br>\n(5 6 8)<br>\n(5 6 9)<br>\n(5 6 10)<br>\n(5 6 11)<br>\n(5 6 12)<br>\n(5 7 8)<br>\n(5 7 9)<br>\n(5 7 10)<br>\n(5 7 11)<br>\n(5 7 12)<br>\n(5 8 9)<br>\n(5 8 10)<br>\n(5 8 11)<br>\n(5 8 12)<br>\n(5 9 10)<br>\n(5 9 11)<br>\n(5 9 12)<br>\n(5 10 11)<br>\n(5 10 12)<br>\n(5 11 12)<br>\n(6 7 8)<br>\n(6 7 9)<br>\n(6 7 10)<br>\n(6 7 11)<br>\n(6 7 12)<br>\n(6 8 9)<br>\n(6 8 10)<br>\n(6 8 11)<br>\n(6 8 12)<br>\n(6 9 10)<br>\n(6 9 11)<br>\n(6 9 12)<br>\n(6 10 11)<br>\n(6 10 12)<br>\n(6 11 12)<br>\n(7 8 9)<br>\n(7 8 10)<br>\n(7 8 11)<br>\n(7 8 12)<br>\n(7 9 10)<br>\n(7 9 11)<br>\n(7 9 12)<br>\n(7 10 11)<br>\n(7 10 12)<br>\n(7 11 12)<br>\n(8 9 10)<br>\n(8 9 11)<br>\n(8 9 12)<br>\n(8 10 11)<br>\n(8 10 12)<br>\n(8 11 12)<br>\n(9 10 11)<br>\n(9 10 12)<br>\n(9 11 12)<br>\n(10 11 12)......</p>",
        "id": 429217347,
        "sender_full_name": "chenjulang",
        "timestamp": 1711292704
    },
    {
        "content": "<p>What about <code>(1 3 2)</code>?</p>",
        "id": 429217407,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1711292757
    },
    {
        "content": "<p>What can we use other than \"by_cases\"?</p>",
        "id": 429217648,
        "sender_full_name": "chenjulang",
        "timestamp": 1711292936
    },
    {
        "content": "<p>Thanks. Because (1 2 3)^2 = (1 3 2) ,  so i think \"(1 2 3)\" can represent 3-cycles like this. So i forgot about it <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span> .</p>",
        "id": 429218160,
        "sender_full_name": "chenjulang",
        "timestamp": 1711293215
    },
    {
        "content": "<p>My remaining question now is : <br>\nCan lean automatically provide all the classification situations, and then I can prove them one by one? Or another way to Categorize and solve each category one by one?</p>",
        "id": 429218340,
        "sender_full_name": "chenjulang",
        "timestamp": 1711293319
    },
    {
        "content": "<p>Does <code>decide</code> work, perhaps?</p>",
        "id": 429221102,
        "sender_full_name": "Daniel Weber",
        "timestamp": 1711294978
    },
    {
        "content": "<p>That's a job for <code>fin_cases</code></p>",
        "id": 429221269,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711295115
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Separate.20IsThreeCycle.20into.20all.20situations.20.2C.20How.3F/near/429221269\">said</a>:</p>\n<blockquote>\n<p>That's a job for <code>fin_cases</code></p>\n</blockquote>\n<p>Can you explain in detail how to use it on these two things ： (p : Perm (Fin 5))<br>\n(h1: IsThreeCycle p) ？</p>",
        "id": 429273665,
        "sender_full_name": "chenjulang",
        "timestamp": 1711333503
    },
    {
        "content": "<p>It seems to me that \"fin_cases\" is same as \"exhausting all cases\".</p>",
        "id": 429440179,
        "sender_full_name": "chenjulang",
        "timestamp": 1711380784
    },
    {
        "content": "<p>I just tried <code>fin_cases p</code> on this example and get a deterministic timeout. How does the paper proof go? Would you normally take cases on the permutation, or are you essentially relying on some fact about <code>IsThreeCycle</code>? Maybe there is some helpful API around <code>IsThreeCycle</code> that would move things forward? It's hard to say without knowing what <code>P1</code> is</p>",
        "id": 429448306,
        "sender_full_name": "Paul Rowe",
        "timestamp": 1711382234
    },
    {
        "content": "<p>You are right. I should read all things about  IsThreeCycle.</p>",
        "id": 429450420,
        "sender_full_name": "chenjulang",
        "timestamp": 1711382602
    },
    {
        "content": "<p>My P1 looks like this: <a href=\"https://github.com/chenjulang/rubikcubegroup/blob/master/RubiksCube/FuncProofs.lean\">https://github.com/chenjulang/rubikcubegroup/blob/master/RubiksCube/FuncProofs.lean</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">lemma31</span> <span class=\"c1\">-- 这个命题直接上就是给出其中算法将角块3循环（全体方向数已还原,棱块位置已还原）还原到1。</span>\n  <span class=\"c1\">-- 用到公式有3类：1.g4 ; 2.g4的4种变式(VariantFaceTurn_?_List) ； 3.包含g4（或g4变式）的交换子（conjugate_formula）。</span>\n  <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">RubiksSuperType</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"n\">IsThreeCycle</span> <span class=\"n\">x.1.permute</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h2</span><span class=\"o\">:</span> <span class=\"n\">x.1.orient</span> <span class=\"bp\">=</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h3</span><span class=\"o\">:</span> <span class=\"n\">x.2.permute</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h4</span><span class=\"o\">:</span> <span class=\"n\">x.1.orient</span> <span class=\"bp\">=</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">Reachable</span> <span class=\"n\">x</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>",
        "id": 429450780,
        "sender_full_name": "chenjulang",
        "timestamp": 1711382677
    },
    {
        "content": "<p>The first rule of formalizing math (a rule I break ~75% of the time, sadly) is to make sure you know how the proof works on paper first. It can be difficult to disentangle \"I can't get Lean to do this simple thing\" from \"This simple thing I think is true, is actually false\"</p>",
        "id": 429452033,
        "sender_full_name": "Paul Rowe",
        "timestamp": 1711382929
    },
    {
        "content": "<p>Yeah , i roughly give a paperproof in Chinese , i want to formalize it <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">直接对</span><span class=\"n\">V1</span><span class=\"o\">,</span><span class=\"n\">V2</span><span class=\"o\">,</span><span class=\"n\">V3</span><span class=\"bp\">进行全体分类</span><span class=\"o\">:</span>\n                <span class=\"o\">{</span>\n                <span class=\"c1\">-- todo</span>\n                <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">个面包含了</span><span class=\"mi\">3</span><span class=\"bp\">个角块，这样的面有</span><span class=\"mi\">1</span><span class=\"bp\">个的情况：</span>\n                <span class=\"o\">{</span>\n                    <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">个角块在同一个面：</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"n\">V1</span><span class=\"o\">,</span><span class=\"n\">V2</span><span class=\"o\">,</span><span class=\"n\">V3</span><span class=\"bp\">逆时针排列：执行若干次</span><span class=\"n\">g4</span><span class=\"bp\">变式，将</span><span class=\"n\">V1</span><span class=\"bp\">先恢复，则其他也跟着恢复。得到</span><span class=\"n\">e</span><span class=\"bp\">。</span>\n                        <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"n\">V1</span><span class=\"o\">,</span><span class=\"n\">V2</span><span class=\"o\">,</span><span class=\"n\">V3</span><span class=\"bp\">顺时针排列：执行若干次</span><span class=\"n\">g4</span><span class=\"bp\">变式，将</span><span class=\"n\">V1</span><span class=\"bp\">先恢复，则其他也跟着恢复。得到</span><span class=\"n\">e</span><span class=\"bp\">。</span>\n                    <span class=\"o\">}</span>\n                <span class=\"o\">}</span>\n                <span class=\"bp\">上述</span><span class=\"mi\">1</span><span class=\"bp\">除外的情况里，也就是“</span><span class=\"mi\">1</span><span class=\"bp\">个面包含了</span><span class=\"mi\">3</span><span class=\"bp\">个角块，这样的面有</span><span class=\"mi\">0</span><span class=\"bp\">个的情况”还有：</span>\n                <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">个面包含了</span><span class=\"mi\">2</span><span class=\"bp\">个角块，这样的面有</span><span class=\"mi\">3</span><span class=\"bp\">个的情况：</span>\n                <span class=\"o\">{</span>\n                    <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">:</span><span class=\"bp\">交换子。</span>\n                    <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span><span class=\"bp\">分类：</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">:</span> <span class=\"mi\">3</span><span class=\"bp\">次交换子。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"n\">D'</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">)</span> <span class=\"n\">D</span> <span class=\"bp\">即可。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">:</span> <span class=\"n\">D'</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">)</span> <span class=\"n\">D</span> <span class=\"bp\">即可。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">:</span> <span class=\"mi\">3</span><span class=\"bp\">次交换子。</span>\n                            <span class=\"mi\">2</span><span class=\"bp\">，</span><span class=\"mi\">4</span><span class=\"bp\">，</span><span class=\"mi\">6</span><span class=\"bp\">举例：</span>\n                            <span class=\"bp\">先搞一个</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">)</span><span class=\"bp\">交换子，记下来：</span><span class=\"n\">D'</span> <span class=\"n\">L</span> <span class=\"n\">L</span> <span class=\"n\">g4</span> <span class=\"n\">L</span> <span class=\"n\">L</span> <span class=\"n\">D</span>\n                            <span class=\"bp\">复原，使用</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">)</span>\n                            <span class=\"bp\">然后使用</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">)</span> <span class=\"mi\">2</span><span class=\"bp\">次？，把</span><span class=\"mi\">3</span><span class=\"bp\">还原，</span>\n                            <span class=\"bp\">最终得到（</span><span class=\"mi\">2</span><span class=\"bp\">，</span><span class=\"mi\">4</span><span class=\"bp\">，</span><span class=\"mi\">6</span><span class=\"bp\">）</span><span class=\"o\">:</span> <span class=\"n\">g4</span> <span class=\"o\">(</span><span class=\"n\">D'</span> <span class=\"n\">L</span> <span class=\"n\">L</span> <span class=\"n\">g4</span> <span class=\"n\">L</span> <span class=\"n\">L</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D'</span> <span class=\"n\">L</span> <span class=\"n\">L</span> <span class=\"n\">g4</span> <span class=\"n\">L</span> <span class=\"n\">L</span> <span class=\"n\">D</span><span class=\"o\">)</span>\n                            <span class=\"bp\">简化成了：</span><span class=\"n\">R</span> <span class=\"n\">R</span> <span class=\"n\">D</span> <span class=\"n\">D</span> <span class=\"n\">L</span> <span class=\"n\">L</span> <span class=\"n\">D</span> <span class=\"n\">R</span> <span class=\"n\">R</span> <span class=\"n\">D'</span> <span class=\"n\">L</span> <span class=\"n\">L</span> <span class=\"n\">D</span> <span class=\"n\">R</span> <span class=\"n\">R</span> <span class=\"n\">D</span> <span class=\"n\">R</span> <span class=\"n\">R</span>\n                    <span class=\"o\">}</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">:</span><span class=\"bp\">交换子。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">:</span><span class=\"bp\">交换子。</span>\n                    <span class=\"o\">}</span>\n                    <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">:</span><span class=\"n\">L</span> <span class=\"n\">L</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">)</span> <span class=\"n\">L'</span> <span class=\"n\">L'</span><span class=\"bp\">即可。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">:</span><span class=\"n\">L</span> <span class=\"n\">L</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">)</span> <span class=\"n\">L'</span> <span class=\"n\">L'</span><span class=\"bp\">即可。</span>\n                    <span class=\"o\">}</span>\n                    <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">:</span><span class=\"n\">B</span> <span class=\"n\">B</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">)</span> <span class=\"n\">B'</span> <span class=\"n\">B'</span><span class=\"bp\">即可。</span>\n                    <span class=\"o\">}</span>\n                    <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">:</span><span class=\"n\">B</span> <span class=\"n\">B</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"n\">B'</span> <span class=\"n\">B'</span><span class=\"bp\">即可。</span>\n                    <span class=\"o\">}</span>\n                    <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span>\n                    <span class=\"o\">{</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                        <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">:</span><span class=\"bp\">上面已存在。</span>\n                    <span class=\"o\">}</span>\n                <span class=\"o\">}</span>\n                <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">个面包含了</span><span class=\"mi\">2</span><span class=\"bp\">个角块，这样的面有</span><span class=\"mi\">2</span><span class=\"bp\">个的情况：</span>\n                <span class=\"o\">{</span>\n                    <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"bp\">不存在，所以不用讨论。</span>\n                    <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"bp\">不存在</span>\n                    <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"bp\">不存在</span>\n                    <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"bp\">不存在</span>\n                    <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"bp\">不存在</span>\n                    <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"bp\">不存在</span>\n                    <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"bp\">不存在</span>\n                <span class=\"o\">}</span>\n                <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">个面包含了</span><span class=\"mi\">2</span><span class=\"bp\">个角块，这样的面有</span><span class=\"mi\">1</span><span class=\"bp\">个的情况：</span>\n                <span class=\"o\">{</span>\n                    <span class=\"bp\">不存在，所以不用讨论。</span>\n                <span class=\"o\">}</span>\n                <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">个面包含了</span><span class=\"mi\">2</span><span class=\"bp\">个角块，这样的面有</span><span class=\"mi\">0</span><span class=\"bp\">个的情况：</span>\n                <span class=\"o\">{</span>\n                    <span class=\"bp\">不存在，所以不用讨论。</span>\n                <span class=\"o\">}</span>\n                <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 429453408,
        "sender_full_name": "chenjulang",
        "timestamp": 1711383198
    },
    {
        "content": "<p>I am still not good at \"spliting cases \". So i am planning to prove some important  and representative cases  instead...and leave it alone for now. <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span><a href=\"https://github.com/chenjulang/rubikcubegroup/blob/master/RubiksCube/FuncProofs.lean\">https://github.com/chenjulang/rubikcubegroup/blob/master/RubiksCube/FuncProofs.lean</a></p>",
        "id": 429454477,
        "sender_full_name": "chenjulang",
        "timestamp": 1711383402
    },
    {
        "content": "<p>I proved 3 representative examples like this:<br>\nlet p1 := List.formPerm ([1,2,3]:(List (Fin 8))) -- ![0, 2, 3, 1, 4, 5, 6, 7]<br>\nlet p2 := List.formPerm ([1,0,6]:(List (Fin 8))) -- (2,1,7) == 这里的[1,0,6] -- ![0, 7, 1, 3, 4, 5, 6, 2]<br>\nlet p3 := List.formPerm ([1,3,5]:(List (Fin 8))) -- (2,4,6) == 这里的[1,3,5]</p>",
        "id": 429778687,
        "sender_full_name": "chenjulang",
        "timestamp": 1711512410
    },
    {
        "content": "<p>The solution for these 3 examples are :<br>\n1.G4Perm<br>\n2.(B2<em>(VariantFaceTurn_B_List [R',F',F',F',R',B,B,R',R',R',F',R',B,B,R',R'])</em>B2)⁻¹<br>\n3.(G4Perm<em>(conjugate_formula (D'</em>L*L) G4Perm )⁻¹)⁻¹</p>",
        "id": 429779003,
        "sender_full_name": "chenjulang",
        "timestamp": 1711512647
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 429779055,
        "sender_full_name": "Notification Bot",
        "timestamp": 1711512712
    }
]