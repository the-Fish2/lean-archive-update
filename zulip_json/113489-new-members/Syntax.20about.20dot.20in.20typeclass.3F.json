[
    {
        "content": "<p>Hi recently I found some syntax about dot in typeclass but cannot find references for this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">false</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">A</span> <span class=\"n\">where</span>\n  <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Int</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">D</span> <span class=\"n\">where</span>\n  <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Int</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">D</span><span class=\"o\">]</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">A.B</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">==</span><span class=\"mi\">1</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">A.B.b</span>\n</code></pre></div>",
        "id": 436626266,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1714632122
    },
    {
        "content": "<p>This is the same as dot in any declaration, it is namespacing the definition</p>",
        "id": 436626413,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714632183
    },
    {
        "content": "<p>The above code only works with <code>A.B</code> but not something like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">C.B</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">==</span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>Is there some convention here?</p>",
        "id": 436626453,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1714632203
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">Foo.bar</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>is the same as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">Foo</span>\n<span class=\"kd\">def</span> <span class=\"n\">bar</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"kd\">end</span> <span class=\"n\">Foo</span>\n</code></pre></div>",
        "id": 436626490,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714632225
    },
    {
        "content": "<p>the reason it doesn't work with <code>C.B</code> is because entering namespace <code>A</code> means that you can refer to <code>A.a</code> unqualified</p>",
        "id": 436626636,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714632292
    },
    {
        "content": "<p>It will work if you do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">C.B</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">A.a</span><span class=\"bp\">==</span><span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 436626729,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714632338
    },
    {
        "content": "<p>Oh it is very clear now. Once I thought it maybe some syntax sugar for <code>class B extends A</code> hahaha. Thank you very much Mario<span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 436627111,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1714632508
    }
]