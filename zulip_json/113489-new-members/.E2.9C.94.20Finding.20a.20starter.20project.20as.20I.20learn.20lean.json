[
    {
        "content": "<p>I started learning lean for a month in my spare time, mostly by reading the <a href=\"https://lean-lang.org/functional_programming_in_lean/title.html#functional-programming-in-lean\">Functional Programming in Lean</a> book. I went through the first 4 chapters, but noticed my progress has considerably slowed down, mostly because I start to forget things that I do not use everyday.</p>\n<p>I am wondering, is there any recommended \"starter project\" that I can work on to reinforce (or maybe even speedup) my learning? Any suggestions or pointers will be highly appreciated!</p>\n<p>[More about myself] I am a software engineer fluent with imperative languages like C++ or python, and have a strong interests in mathematics. My objective of learning lean is to eventually contribute to the open source community, although right now I am still at an early stage.</p>\n<p>Thanks a lot in advance!</p>",
        "id": 437654618,
        "sender_full_name": "Ying Xiong",
        "timestamp": 1715176017
    },
    {
        "content": "<p>Quick tip: devote yourself to a small formalization project in the field you're comfortable. Being persistent to the end will give you plenty of that exercise you need. Contributing the lemmas you find missing during that process will help Mathlib.</p>",
        "id": 437664702,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1715179033
    },
    {
        "content": "<p>Thanks a lot, Ralf!</p>\n<p>Pardon my ignorance, but could you give me some pointers on where to find \"small formalization project\" or \"lammas I find missing\"? A link with some starting points would be really helpful!</p>",
        "id": 437709452,
        "sender_full_name": "Ying Xiong",
        "timestamp": 1715193777
    },
    {
        "content": "<p>What math field do you know best? Two possibilities: you pick a proof from that field to formalize,  or you contribute to one of the existing projects,  see <a href=\"https://reservoir.lean-lang.org/\">https://reservoir.lean-lang.org/</a></p>",
        "id": 437710942,
        "sender_full_name": "Ralf Stephan",
        "timestamp": 1715194364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"712239\">@Ying Xiong</span>  It's hard for us to suggest particular problems, because it depends on what you already know. You should pick a proof you already understand, so that you can focus on learning Lean, rather than learning both the proof <em>and</em> Lean at the same time.</p>\n<p>Personally, as a starter project, I formalized Zagier's \"one-sentence\" proof that every prime p = 1 (mod 4) is a sum of 2 squares. Someone has already done this before, but it doesn't matter - the point of the project was to learn Lean on a real problem and figure out how to resolve issues that arise in real problems. I learned a lot about Lean from doing this. </p>\n<p>But you should pick whatever topic you already know well.</p>",
        "id": 437714050,
        "sender_full_name": "Ted Hwa",
        "timestamp": 1715195697
    },
    {
        "content": "<p>Thanks again for the suggestions!!</p>",
        "id": 437752128,
        "sender_full_name": "Ying Xiong",
        "timestamp": 1715215826
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"712239\">Ying Xiong</span> has marked this topic as resolved.</p>",
        "id": 437752131,
        "sender_full_name": "Notification Bot",
        "timestamp": 1715215829
    }
]