[
    {
        "content": "<p>Hi There, it's a bit silly, but I can't find instructions for using lean from the command line. All documentation I see requires me to open a  project in <code>vscode</code> (which I don't use). Is it possible to \"run\" a proof from the command line (I'm not sure what I'm expecting to see actually). I tried</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lean</span> <span class=\"n\">Foo.lean</span>\n</code></pre></div>\n<p>but I get errors about missing Mathlib.</p>\n<p>Thanks!</p>",
        "id": 431981845,
        "sender_full_name": "Moshe Kamensky",
        "timestamp": 1712585967
    },
    {
        "content": "<p>You can use <code>lake build</code> from the command line</p>",
        "id": 431982078,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712586030
    },
    {
        "content": "<p>I highly recommend using an IDE, though</p>",
        "id": 431982147,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712586046
    },
    {
        "content": "<p>Thanks. I tried running it, and it still working... I have an extremely simple proof there (just playing around to get the idea), should it be taking so long?</p>",
        "id": 432007448,
        "sender_full_name": "Moshe Kamensky",
        "timestamp": 1712591474
    },
    {
        "content": "<p>What kind of output is it showing?</p>",
        "id": 432008429,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712591680
    },
    {
        "content": "<p>I left it for the moment, so I don't have the precise message, but it was building over 1400 items</p>",
        "id": 432009038,
        "sender_full_name": "Moshe Kamensky",
        "timestamp": 1712591800
    },
    {
        "content": "<p>Did you run <code>lake exe cache get</code>?</p>",
        "id": 432010047,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712591994
    },
    {
        "content": "<p>Yes</p>",
        "id": 432010207,
        "sender_full_name": "Moshe Kamensky",
        "timestamp": 1712592015
    },
    {
        "content": "<p>It should not be taking so long, and you shouldn't need to build anything. <code>lake exe cache get</code> should download all precompiled binaries for you, if you've got lean installed and have a correctly formatted lean project with mathlib as a dependency.</p>",
        "id": 432023614,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712594936
    },
    {
        "content": "<p>Thanks. I now tried it again, and it ran faster, possibly I made a mistake before. At any rate, I don't see any result of this run, the last thing it says is <code>[1946/1947] Building Lean4Try</code>. Does it simply exit with status 0 when the proof is correct?</p>",
        "id": 432046980,
        "sender_full_name": "Moshe Kamensky",
        "timestamp": 1712602612
    },
    {
        "content": "<p>That looks good, because that file looks like yours rather than anything in mathlib. Yes it will end with status 0 if the proof compiles.</p>",
        "id": 432051481,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712604340
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 432056481,
        "sender_full_name": "Moshe Kamensky",
        "timestamp": 1712606058
    },
    {
        "content": "<p>So, when I have a proof Iâ€™d like to verify, I should always make it a part of a project?</p>",
        "id": 432056976,
        "sender_full_name": "Moshe Kamensky",
        "timestamp": 1712606206
    },
    {
        "content": "<p>I think you are very very limited in what you can do outside of the project set-up. For example you have no control over which version of lean or mathlib you're using because this data is not in your lean file, so with 100% probability your code will break at some point as it rots (mathlib updates about 20 times a day and makes no promises regarding backwards compatibility). Also I don't think you can use any imports outside of the project framework.</p>",
        "id": 432057940,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712606594
    },
    {
        "content": "<p>Thanks again!</p>",
        "id": 432104115,
        "sender_full_name": "Moshe Kamensky",
        "timestamp": 1712629825
    }
]