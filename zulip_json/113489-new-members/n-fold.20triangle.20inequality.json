[
    {
        "content": "<p>Is there a nice way to one line something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">|</span><span class=\"n\">a₁</span> <span class=\"bp\">+</span> <span class=\"n\">a₂</span> <span class=\"bp\">+</span> <span class=\"bp\">...</span> <span class=\"bp\">+</span> <span class=\"n\">aₙ</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"bp\">|</span><span class=\"n\">a₁</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">a₂</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">...</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">aₙ</span><span class=\"bp\">|</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>In my case n = 4 and it's only two <code>calc</code> lines manually, but maybe there's some tactic voodo to do that in one go.</p>",
        "id": 424900357,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1709654090
    },
    {
        "content": "<p>Does <code>gcongr</code> do it?</p>",
        "id": 424902469,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1709654498
    },
    {
        "content": "<p>Not at a computer, but I would guess that something like <code>repeat apply (abs_add_le ..).trans</code> might work?</p>",
        "id": 424902762,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709654560
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113489-new-members/topic/n-fold.20triangle.20inequality/near/424902469\">said</a>:</p>\n<blockquote>\n<p>Does <code>gcongr</code> do it?</p>\n</blockquote>\n<p>Assuming you do not mean something more sophisticated than this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"bp\">|</span><span class=\"n\">a</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">b</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">c</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">d</span><span class=\"bp\">|</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">gcongr</span>\n</code></pre></div>\n<p>then the answer is <code>gcongr did not make progress</code></p>\n<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span>  <code>repeat apply (abs_add ..).trans</code> has the same effect as doing it once</p>",
        "id": 424905138,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1709655124
    },
    {
        "content": "<p>Well, combining Ruben's suggestion with mine, you can do it as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"bp\">|</span><span class=\"n\">a</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">b</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">c</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">d</span><span class=\"bp\">|</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">abs_add_le</span> <span class=\"bp\">..</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span><span class=\"bp\">;</span> <span class=\"n\">gcongr</span><span class=\"bp\">;</span> <span class=\"n\">try</span> <span class=\"n\">exact</span> <span class=\"n\">abs_add</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n</code></pre></div>",
        "id": 424909782,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709656328
    },
    {
        "content": "<p>This works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"bp\">|</span><span class=\"n\">a</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">b</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">c</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">d</span><span class=\"bp\">|</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">Fin.sum_univ_succ</span><span class=\"o\">,</span> <span class=\"n\">add_assoc</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">Finset.abs_sum_le_sum_abs</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">d</span><span class=\"o\">]</span> <span class=\"n\">Finset.univ</span>\n</code></pre></div>",
        "id": 424910296,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1709656463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/n-fold.20triangle.20inequality/near/424909782\">said</a>:</p>\n<blockquote>\n<p>Well, combining Ruben's suggestion with mine, you can do it as follows:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">|</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"bp\">|</span><span class=\"n\">a</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">b</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">c</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">d</span><span class=\"bp\">|</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">abs_add_le</span> <span class=\"bp\">..</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span><span class=\"bp\">;</span> <span class=\"n\">gcongr</span><span class=\"bp\">;</span> <span class=\"n\">try</span> <span class=\"n\">exact</span> <span class=\"n\">abs_add</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>And everyone lived happily ever after. Also thank you to <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span></p>",
        "id": 424910545,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1709656534
    }
]