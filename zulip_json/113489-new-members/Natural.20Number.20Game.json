[
    {
        "content": "<p><a href=\"/user_uploads/3121/MUZw4F7BnrfiEjlD5kJtUTsv/image.png\">image.png</a><br>\nWhat is the best way to solve this, without relying on simp?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/MUZw4F7BnrfiEjlD5kJtUTsv/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/MUZw4F7BnrfiEjlD5kJtUTsv/image.png\"></a></div>",
        "id": 408428215,
        "sender_full_name": "Olonbayar Temuulen",
        "timestamp": 1702806395
    },
    {
        "content": "<p>Is an acceptable reply \"you shouldn't be in this state in the first place\"? Are you trying to prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>x</mi><mi>y</mi><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">(x+y)^2=x^2+2xy+y^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> by induction instead of just multiplying it out?</p>",
        "id": 408433829,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702811509
    },
    {
        "content": "<p>The <code>Pow.pow</code> is a bit miserable in the hypotheses, how did that end up there? The user is supposed to never see that.</p>",
        "id": 408433902,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702811561
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/408433902\">said</a>:</p>\n<blockquote>\n<p>The <code>Pow.pow</code> is a bit miserable in the hypotheses, how did that end up there? The user is supposed to never see that.</p>\n</blockquote>\n<p>That's been a \"fix\" in the new mathlib version turning <code>a ^ b</code> into <code>Pow.pow a b</code>. I pushed a fix for this a couple days ago, but haven't updated the live version yet. I'll do that now.</p>",
        "id": 408439318,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1702816908
    },
    {
        "content": "<p>Via \"being a bit overly adventurous with induction and trying to pin down exactly how add_assoc , add_mul, mul_assoc, mul_comm and to slightly lesser extent add_mul\"  worked, since the documentation felt a big vague. The notes on the left mention the user to check the targeting function comments of \"rw\", but i felt that the explanation there was lacking too.</p>",
        "id": 408440860,
        "sender_full_name": "Olonbayar Temuulen",
        "timestamp": 1702818423
    },
    {
        "content": "<p>I'm in 5/6 of advanced addition in NNG. I applied the cases and solved the first Goal. Now, I would like to use the <code>succ_ne_zero</code> theorem, but I get the error <code>You have not unlocked the lemma/definition 'MyNat.succ_ne_zero' yet!</code>. The same error message is displayed for every peano theorem, despite these not being grayed out. Is it a bug or is it expected?</p>",
        "id": 423080517,
        "sender_full_name": "Etienne dg",
        "timestamp": 1708716436
    },
    {
        "content": "<p>That sounds unexpected</p>",
        "id": 423085905,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708718542
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/IgxyrBbfc_B97_A2UWoKosy9/Screenshot-from-2024-02-23-20-54-36.png\">Screenshot-from-2024-02-23-20-54-36.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/IgxyrBbfc_B97_A2UWoKosy9/Screenshot-from-2024-02-23-20-54-36.png\" title=\"Screenshot-from-2024-02-23-20-54-36.png\"><img src=\"/user_uploads/3121/IgxyrBbfc_B97_A2UWoKosy9/Screenshot-from-2024-02-23-20-54-36.png\"></a></div><p>This works for me on <code>none</code> rules. Do you know which rules you're using? (go to the home screen and check?)</p>",
        "id": 423093133,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708721731
    },
    {
        "content": "<p>Yes, it works for me with none, by why not on regular?</p>",
        "id": 423114384,
        "sender_full_name": "Etienne dg",
        "timestamp": 1708733890
    },
    {
        "content": "<p>Bug?</p>",
        "id": 423139411,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708754879
    },
    {
        "content": "<p>Wait -- have you definitely unlocked <code>succ_ne_zero</code>? I've just played through on regular mode and by the time I'm at advanced addition world 5/6 I have only unlocked <code>zero_ne_succ</code>. You can use <code>symm</code> to switch the sides of an equality/inequality.</p>",
        "id": 423174603,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708785003
    },
    {
        "content": "<p>Hmm, OK, I went and proved <code>succ_ne_zero</code> and indeed it doesn't solve the problem on \"regular\" rules:</p>\n<p><a href=\"/user_uploads/3121/4WDCyEhmapfGsCQs1wa_lwUD/bug.png\">bug.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/4WDCyEhmapfGsCQs1wa_lwUD/bug.png\" title=\"bug.png\"><img src=\"/user_uploads/3121/4WDCyEhmapfGsCQs1wa_lwUD/bug.png\"></a></div>",
        "id": 423176381,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708786080
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"385895\">@Jon Eugster</span> can you explain (again) how I am supposed to set up imports so that this works with <code>regular</code> rules? My game state is this</p>\n<p><a href=\"/user_uploads/3121/WUqYN-t3X2MlqLB5kv8OMuiL/cafe.png\">cafe.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/WUqYN-t3X2MlqLB5kv8OMuiL/cafe.png\" title=\"cafe.png\"><img src=\"/user_uploads/3121/WUqYN-t3X2MlqLB5kv8OMuiL/cafe.png\"></a></div><p>and Algorithm 6 (which I've just done) does unlock <code>succ_ne_zero</code> in Advanced Addition 5, but I don't seem to be able to use the lemma in the level.</p>",
        "id": 423176979,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708786410
    },
    {
        "content": "<p>It should be enough that the algorithm level imports <code>import Game.Level.AdvAddition</code>. You can check with <code>#check succ_ne_zero</code> in that level's lean file if you have the imports correctly.</p>\n<p>I can look through the nng repo (and fix if necessary) next time on my computer, but that could be Tuesday, dep. on how fast I'm done marking 300 examsü§¶üèª‚Äç‚ôÇÔ∏è</p>\n<p>Should probably rethink if one could use the final Env. which has everythibg imported instead of the level's env<span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> otherwise we'll always get \"unlocked but not imported\" problems. But that poses other problems...</p>",
        "id": 423178615,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1708787094
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"694150\">Etienne dg</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/423080517\">said</a>:</p>\n<blockquote>\n<p>I'm in 5/6 of advanced addition in NNG. I applied the cases and solved the first Goal. Now, I would like to use the <code>succ_ne_zero</code> theorem, but I get the error <code>You have not unlocked the lemma/definition 'MyNat.succ_ne_zero' yet!</code>. The same error message is displayed for every peano theorem, despite these not being grayed out. Is it a bug or is it expected?</p>\n</blockquote>\n<p>reading this, that sounds like a bug indeed. let me look at that more closely on Tuesday!</p>",
        "id": 423178835,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1708787245
    },
    {
        "content": "<p><code>#check succ_ne_zero</code> works fine in the source code (at least on <code>main</code> -- I don't know if <code>main</code> is the version which is currently deployed)</p>",
        "id": 423181788,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708789420
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"694150\">Etienne dg</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/423080517\">said</a>:</p>\n<blockquote>\n<p>I'm in 5/6 of advanced addition in NNG. I applied the cases and solved the first Goal. Now, I would like to use the <code>succ_ne_zero</code> theorem, but I get the error <code>You have not unlocked the lemma/definition 'MyNat.succ_ne_zero' yet!</code>. The same error message is displayed for every peano theorem, despite these not being grayed out. Is it a bug or is it expected?</p>\n</blockquote>\n<p>Indeed, that's a bug and there is a fix in the pipeline : <a href=\"https://github.com/leanprover-community/lean4game/commit/780514e45abb6b57af9904ba118959e3e61c9f46\">780514</a>. I think v4.6.0 should be coming up in a few days, so I'll be included in that bump.</p>",
        "id": 423394609,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1708953824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/423174603\">said</a>:</p>\n<blockquote>\n<p>Wait -- have you definitely unlocked <code>succ_ne_zero</code>? I've just played through on regular mode and by the time I'm at advanced addition world 5/6 I have only unlocked <code>zero_ne_succ</code>. You can use <code>symm</code> to switch the sides of an equality/inequality.</p>\n</blockquote>\n<p>When I try to <code>symm</code> an inequality, it doesn't work, I get :<br>\n<code>symmetry lemmas only apply to binary relations</code></p>\n<p>Indeed, the <code>succ_ne_zero</code> is unlocked in Algorithm world, which is not the main branch. Is  Advanced Addition doable without Algorithm ? Otherwise, I think it should depend on Algorithm World</p>",
        "id": 423490770,
        "sender_full_name": "Etienne dg",
        "timestamp": 1708984654
    },
    {
        "content": "<p>Yes it's definitely doable -- it was doable before algorithm world even existed! I'm surprised <code>symm</code> doesn't work on inequalities! You can <code>intro</code> to turn it into an equality and then <code>symm at hyp</code> for a workaround if it's really true that it doesn't work on inequalities.</p>",
        "id": 423495153,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708986535
    },
    {
        "content": "<p>Ok, it was just me not using symm correctly</p>",
        "id": 423506184,
        "sender_full_name": "Etienne dg",
        "timestamp": 1708991984
    },
    {
        "content": "<p>I'm giving a talk tomorrow evening and was planning to introduce a group of students to the new natural numbers game in lean4. I had thought I'd use the \"regular\" mode with most tactics locked away but ran into trouble when I got to the start of addition word because I don't see the \"induction\" tactic listed anywhere on the upper right hand side. Indeed, when I try to use induction to prove that 0 + n = n I get the error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">The</span> <span class=\"n\">tactic</span> <span class=\"bp\">'</span><span class=\"n\">induction'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">available</span> <span class=\"k\">in</span> <span class=\"n\">this</span> <span class=\"n\">game</span><span class=\"bp\">!</span>\n</code></pre></div>\n<p>When I switch from the regular mode to the mode with no rules, I can use induction, but I still don't see it listed on the upper right. Have I missed something or is there a bug?</p>",
        "id": 423521368,
        "sender_full_name": "Emily Riehl",
        "timestamp": 1709001354
    },
    {
        "content": "<p>This is most definitely a bug and you're the second person to report it in the last 24 hours.</p>",
        "id": 423561452,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709024686
    },
    {
        "content": "<p>Will try and fix within the next hour or two</p>",
        "id": 423561622,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709024744
    },
    {
        "content": "<p>If I build <code>main</code>locally I get the following warnings</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"mi\">1921</span><span class=\"bp\">/</span><span class=\"mi\">1922</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Game</span>\n<span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./././</span><span class=\"n\">Game.lean</span><span class=\"o\">:</span><span class=\"mi\">113</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">world</span> <span class=\"n\">introducing</span> <span class=\"n\">induction</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">required</span> <span class=\"kd\">by</span> <span class=\"n\">LessOrEqual</span>\n<span class=\"bp\">./././</span><span class=\"n\">Game.lean</span><span class=\"o\">:</span><span class=\"mi\">113</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">world</span> <span class=\"n\">introducing</span> <span class=\"n\">induction</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">required</span> <span class=\"kd\">by</span> <span class=\"n\">AdvMultiplication</span>\n<span class=\"bp\">./././</span><span class=\"n\">Game.lean</span><span class=\"o\">:</span><span class=\"mi\">113</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">world</span> <span class=\"n\">introducing</span> <span class=\"n\">generalizing</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">required</span> <span class=\"kd\">by</span> <span class=\"n\">AdvMultiplication</span>\n<span class=\"bp\">./././</span><span class=\"n\">Game.lean</span><span class=\"o\">:</span><span class=\"mi\">113</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">world</span> <span class=\"n\">introducing</span> <span class=\"n\">induction</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">required</span> <span class=\"kd\">by</span> <span class=\"n\">Multiplication</span>\n<span class=\"bp\">./././</span><span class=\"n\">Game.lean</span><span class=\"o\">:</span><span class=\"mi\">113</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">world</span> <span class=\"n\">introducing</span> <span class=\"n\">induction</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">required</span> <span class=\"kd\">by</span> <span class=\"n\">AdvAddition</span>\n<span class=\"bp\">./././</span><span class=\"n\">Game.lean</span><span class=\"o\">:</span><span class=\"mi\">113</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">world</span> <span class=\"n\">introducing</span> <span class=\"n\">induction</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">required</span> <span class=\"kd\">by</span> <span class=\"n\">Addition</span>\n<span class=\"bp\">./././</span><span class=\"n\">Game.lean</span><span class=\"o\">:</span><span class=\"mi\">113</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">world</span> <span class=\"n\">introducing</span> <span class=\"n\">induction</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">required</span> <span class=\"kd\">by</span> <span class=\"n\">Power</span>\n</code></pre></div>\n<p>which might well be somehing to do with it.</p>",
        "id": 423562445,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709025029
    },
    {
        "content": "<p>I've got it</p>",
        "id": 423562769,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709025151
    },
    {
        "content": "<p>Fingers crossed it will be fixed in an hour or so. Thanks for reporting!</p>",
        "id": 423563519,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709025469
    },
    {
        "content": "<p>Should be fixed now <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span> .</p>",
        "id": 423573936,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709028962
    },
    {
        "content": "<p>In the set theory game, Level 6 / 6 : Union is associative, the following input validates the goal, but also prints an error, what happens?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Objects</span><span class=\"o\">:</span>\n<span class=\"n\">U</span><span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">ABC</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">U</span>\n<span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">U</span>\n<span class=\"n\">Assumptions</span><span class=\"o\">:</span>\n<span class=\"n\">h_1</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">B</span>\n<span class=\"n\">Goal</span><span class=\"o\">:</span>\n<span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">A</span> <span class=\"bp\">‚à™</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">‚à™</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n\n<span class=\"n\">Input</span> <span class=\"o\">:</span>\n <span class=\"n\">exact</span> <span class=\"n\">Or.inr.inl</span> <span class=\"n\">h_1</span>\n\n<span class=\"n\">Result</span><span class=\"o\">:</span>\n<span class=\"n\">intermediate</span> <span class=\"n\">goal</span> <span class=\"n\">solved</span> <span class=\"bp\">üéâ</span>\n\n<span class=\"n\">Error</span><span class=\"o\">:</span>\n<span class=\"n\">invalid</span> <span class=\"n\">field</span> <span class=\"kd\">notation</span><span class=\"o\">,</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">form</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"bp\">...</span><span class=\"o\">)</span> <span class=\"n\">where</span> <span class=\"n\">C</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"kd\">constant</span>\n  <span class=\"n\">Or.inr</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.198</span> <span class=\"bp\">‚Üí</span> <span class=\"bp\">?</span><span class=\"n\">m.197</span> <span class=\"bp\">‚à®</span> <span class=\"bp\">?</span><span class=\"n\">m.198</span>\n</code></pre></div>",
        "id": 423625509,
        "sender_full_name": "Etienne dg",
        "timestamp": 1709045904
    },
    {
        "content": "<p>I think that if Lean ever generates an error then you can't trust anything else that it says (after an error it typically solves what it's thinking about with <code>sorry</code> so you might get spurious claims about goals being solved, when they are not).</p>",
        "id": 423626270,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709046078
    },
    {
        "content": "<p>The error is a very obscure way of saying \"<code>Or.inr</code> makes sense, and <code>Or.inl</code> makes sense, but <code>Or.inr.inl</code> makes no sense\", by the way.</p>",
        "id": 423626481,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709046121
    },
    {
        "content": "<p>I'll adjust the logic for this \"intermediate goal solved\" message! I have a hunch that currently it only checks \"no. new goals &lt; no. previous goals\" and forgets to look at the errors.</p>\n<p>And as Kevin said, after a fatal error there are zero goals left.</p>",
        "id": 423659724,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1709054477
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/423561452\">said</a>:</p>\n<blockquote>\n<p>This is most definitely a bug and you're the second person to report it in the last 24 hours.</p>\n</blockquote>\n<p>Thanks <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>.</p>\n<p>I wonder whether some of the games (like natural numbers game, or perhaps a different one), could have a  \"reading comprehension\" mode, where we can see more of the source code. Like at the start of the addition world, I would have liked to see the definition of the natural numbers type and of addition. These definitions are described in the text on the left but for those who want to jump from the games to writing their own Lean code it might be help to be able to pair these descriptions with the actual implementation, at least in code snippets. Though perhaps the code is so complicated that this isn't such a good idea...</p>",
        "id": 423708854,
        "sender_full_name": "Emily Riehl",
        "timestamp": 1709072419
    },
    {
        "content": "<p>For what it's worth, the source code is on github so you can see the definition of the naturals <a href=\"https://github.com/leanprover-community/NNG4/blob/26d8cf539521791b755fe687301f0976c4006dca/Game/MyNat/Definition.lean#L3-L6\">here</a> and it is what you think. However just after that is a load of gobble-de-gook (setting up a bijection between the game's <code>MyNat</code> and Lean's real <code>Nat</code>s, enabling us to be able to use numerals for <code>MyNat</code>. In general the code in the repository is a mix of straightforward stuff (for example the <a href=\"https://github.com/leanprover-community/NNG4/blob/main/Game/MyNat/Multiplication.lean\">multiplication file</a> is relatively self-explanatory) and hacks which we'd never want the user to see (e.g. <a href=\"https://github.com/leanprover-community/NNG4/blob/main/Game/Tactic/Rw.lean\">modifying the <code>rw</code> tactic</a> so that it doesn't close goals if they become <code>x = x</code> after the rewrite, because tests showed that users found this confusing).</p>\n<p>There are a few times when I do belch out some code for the user to see, but it's not clear to me that this is helpful; I might have made a poor choice in what to belch out though. I think the genesis of NNG was the idea that proving basic theorems was fun and everything else was complicated so let's hide all the other stuff completely. I can quite believe that other games could take a different approach!</p>",
        "id": 423720944,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709078564
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"694150\">@Etienne dg</span> :  The problem is that you can't say <code>Or.inr.inl</code>.  I think what you mean is: <code>exact Or.inr (Or.inl h_1)</code>.  The point is that <code>Or.inl h_1</code> is a proof of <code>x ‚àà B ‚à™ C</code>, and therefore <code>Or.inr (Or.inl h_1)</code> is a proof of the goal.</p>",
        "id": 424058325,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1709224056
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246635\">@Emily Riehl</span> A bit of an side, but your comment made me think about it. I assume there's an interesting historical perspective on the definition of numbers. Really multiple such perspectives. You can imagine, for example, that Church invented lambda calculus and, knowing the properties of ‚Ñï ahead of time, sought a definition for the Naturals in his new system. We tend to think definitions come first, but sometimes the motivation is the other way around.</p>\n<p>I imagine you might be able to make a game of that sort of a thing. \"Define an object then prove it has the following properties.\" In NNG4, the algorithms world would likely benefit (Def an algorithm/tactic that closes these 4 theorems or some-such). Certainly a great Intro to Formal Software Verification game would do well with such a premise.</p>\n<p>I imagine that in the coming years, <code>lean4game</code> develop support for a lot more interaction with Lean's other core ideas in a hopefully targeted game-friend way. We'll see, I suppose!</p>",
        "id": 424123078,
        "sender_full_name": "Mark Fischer",
        "timestamp": 1709246943
    },
    {
        "content": "<p>Anyone know why <a href=\"https://adam.math.hhu.de/\">https://adam.math.hhu.de/</a> is down? I didn't know there were two versions of NNG one in the above link and one in <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game\">https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game</a> </p>\n<p>They are very different, aren't they?</p>",
        "id": 424166591,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1709274053
    },
    {
        "content": "<p>I'm trying to fix the server asap, no idea what happened.</p>\n<p>The linked nng is the old Lean3-version which hasn't been maintained in a while, as far as I know.</p>",
        "id": 424182526,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1709282655
    },
    {
        "content": "<p>and it's all online again. Sorry for that.</p>",
        "id": 424185948,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1709283856
    },
    {
        "content": "<p>Spanish game is gone forever?</p>",
        "id": 424186281,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1709283973
    },
    {
        "content": "<p>Gone until the author updates it. But I just implemented the key element for translation of games, so you can expect to have the STG incorporate it's Spanish translation in the nearer future <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 424196685,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1709287478
    },
    {
        "content": "<p>I get \"Oops, sorry, an unexpected error occurred / Cannot read properties of undefined (reading 'steps')\" messages, is that what Yagub means by the server being down ? if not, what does it mean ?</p>",
        "id": 424368804,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709359128
    },
    {
        "content": "<p>The server being down was a temporary problem where nothing worked at all for a few hours. This has now been fixed.</p>",
        "id": 424372561,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709363360
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/424372561\">said</a>:</p>\n<blockquote>\n<p>The server being down was a temporary problem where nothing worked at all for a few hours. This has now been fixed.</p>\n</blockquote>\n<p>then it has to be something else because I keep getting those messages before I even do \"execute\". It  used (meaning, yesterday) to  only occur at stage 8 of the multiplication world but now it is also occurring at stage 2 of the advanced addition world and stage 5 of the algorithm world, completely blocking me. Does anyone have an idea what's happening ? thanks in advance !</p>",
        "id": 424400441,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709375828
    },
    {
        "content": "<p>I'm a bit confused about what we're talking about. I'm at a conference today but I just went to <a href=\"https://adam.math.hhu.de/#/g/leanprover-community/NNG4/world/Algorithm/level/5\">https://adam.math.hhu.de/#/g/leanprover-community/NNG4/world/Algorithm/level/5</a> and it's working fine for me. Are we talking about some Spanish translation or about the main game? If the main game, can you give me some more clues, e.g. a screenshot of the error, an explanation of which \"rule mode\" you're playing the game with (regular/relaxed/none) etc?</p>",
        "id": 424403161,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709378227
    },
    {
        "content": "<p>I'm talking about the main game, regular rules.<br>\nhere is a screenshot : <br>\n<a href=\"/user_uploads/3121/N3FDUSmcR3VbNw49bGMbylbB/Capture-d√©cran-du-2024-03-02-06-35-59.png\">Capture-d√©cran-du-2024-03-02-06-35-59.png</a><br>\nthanks a lot for your time, it's nothing life-threatening !</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/N3FDUSmcR3VbNw49bGMbylbB/Capture-d√©cran-du-2024-03-02-06-35-59.png\" title=\"Capture-d√©cran-du-2024-03-02-06-35-59.png\"><img src=\"/user_uploads/3121/N3FDUSmcR3VbNw49bGMbylbB/Capture-d√©cran-du-2024-03-02-06-35-59.png\"></a></div>",
        "id": 424403551,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709378656
    },
    {
        "content": "<p>Annoyingly, I cannot reproduce yet. I might have to play through everything again (I'm quite good at this now...)</p>",
        "id": 424404007,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709379011
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/424404007\">said</a>:</p>\n<blockquote>\n<p>Annoyingly, I cannot reproduce yet. I might have to play through everything again (I'm quite good at this now...)</p>\n</blockquote>\n<p>It's extremely embarassing to be putting you through this. It also occurs at level 8 of advanced multiplication, if that may save you some time</p>",
        "id": 424404488,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709379494
    },
    {
        "content": "<p>I can't reproduce :-( I just cleared my save state, started at the beginning of the game, and played through up to advanced addition level 2 and it worked fine for me. </p>\n<p><a href=\"/user_uploads/3121/k3aQZMSIJJJpJR8JZbMIDyHO/stuck.png\">stuck.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/k3aQZMSIJJJpJR8JZbMIDyHO/stuck.png\" title=\"stuck.png\"><img src=\"/user_uploads/3121/k3aQZMSIJJJpJR8JZbMIDyHO/stuck.png\"></a></div><p>I don't know enough about the game engine to suggest a diagnosis of your error (I just wrote the Lean code for the levels, I know nothing about the infrastructure of the game). If you can face it, can you download and delete your save state and see if this fixes the problem? Or maybe upload your save state and compare with mine? Mine is <a href=\"https://gist.github.com/kbuzzard/7cc80bb75b9960daf568a07a687e5930\">here</a>.</p>",
        "id": 424405687,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709380681
    },
    {
        "content": "<p>Occasionally I edit or move levels which have already been deployed, and I can imagine that this really messes up people who have got saved game states from before I do this but I have no idea whether this cavalier attitude on my part can cause the error you're seeing.</p>",
        "id": 424405821,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709380806
    },
    {
        "content": "<p>I sent you my saved state (all 572 lines of it as a comment to your gist, can you see it ? I''m not sure I'm ready to  delete all my progress at this stage</p>",
        "id": 424406458,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709381406
    },
    {
        "content": "<p>Oh nice -- I can indeed reproduce now. I get</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Oops!\n\nSorry, an unexpected error has occurred.\n\nv is undefined\n</code></pre></div>\n<p>for advanced addition level 2.</p>",
        "id": 424406594,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709381576
    },
    {
        "content": "<p>I really don't know what I'm doing here, but looking at your upload I see</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>    \"AdvAddition\": {\n      \"1\": {\n        \"code\": \"induction n with n hn\\nrepeat rw[add_zero]\\nintro h\\napply h\\nrepeat rw[add_succ]\\nintro\\napply succ_inj at a_1\\napply hn at a_1\\nexact a_1\\n\",\n        \"completed\": true,\n        \"selections\": [\n          {\n            \"selectionStartLineNumber\": 10,\n            \"selectionStartColumn\": 1,\n            \"positionLineNumber\": 10,\n            \"positionColumn\": 1\n          }\n        ],\n        \"help\": [\n          0\n        ]\n      },\n      \"2\": {\n        \"code\": \"repeat rw[add_comm]\\n\",\n        \"completed\": false,\n        \"selections\": [\n          {\n            \"selectionStartLineNumber\": 2,\n            \"selectionStartColumn\": 1,\n            \"positionLineNumber\": 2,\n            \"positionColumn\": 1\n          }\n        ],\n        \"help\": []\n      }\n    },\n</code></pre></div>\n<p>which looks to me like you tried <code>repeat rw[add_comm]</code> on advanced addition world level 2; I guess this is not a particularly wise idea (it sends Lean into an infinite loop) but I would not expect this to take down the server. </p>\n<p>OK so if I edit your saved state, carefully deleting the comma on the line just before the \"2\", and all the stuff following the \"2\" up until but not including the <code>},</code> which I quoted, then I can play advanced addition world level 2 using your save state. This is a bit of a hack but it's worked for me. Does it work for you?</p>\n<p>The gist which is working for me is <a href=\"https://gist.github.com/kbuzzard/3268130b4ad99ee4d14afb5c03427dd3\">here</a>.</p>",
        "id": 424407016,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709382006
    },
    {
        "content": "<p>I did enter the infinite loop but then I did \"retry\" and only then did things go sideways</p>",
        "id": 424407355,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709382362
    },
    {
        "content": "<p>Interesting! I'll see if I can reproduce. Obviously we don't want users to be able to break things even if they write code which loops.</p>",
        "id": 424407647,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709382629
    },
    {
        "content": "<p>I had the feeling that Lean recognized the infinite loop and aborted it on its own initiative, allowing me to retry</p>",
        "id": 424407762,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709382774
    },
    {
        "content": "<p>It did work, but only for the advanced addition world ! so I guess what I have to do now is to do as you did for the multiplication and algorithm worlds. What exactly is the magic you performed ?</p>",
        "id": 424412286,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709386910
    },
    {
        "content": "<p>I am suggesting you (a) download your save file (b) save a copy! (c) edit it manually with a text editor (remove the bad proofs) (d) upload. </p>\n<p><span class=\"user-mention\" data-user-id=\"385895\">@Jon Eugster</span> I can reproduce this now. <br>\n1) Start a new game with rules <code>none</code> (or any other choice for rules, and play through up to solving <code>add_comm</code>, addition world level 3)<br>\n2) Go to addition world level 4, and for your first move try <code>repeat rw [add_comm]</code><br>\n3) You now broke the game: you can never solve addition world level 4, you get the error</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Oops!\n\nSorry, an unexpected error has occurred.\n\nv is undefined\n</code></pre></div>\n<p>You can fix it by downloading the save state and manually removing the bad proof.</p>",
        "id": 424413517,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709387861
    },
    {
        "content": "<p>On the other hand, I've played this game loads recently and the major problem I was constantly having a couple of months ago (the game not updating after you entered a tactic) has <em>never</em> occurred, so this is a major win.</p>",
        "id": 424413909,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709388100
    },
    {
        "content": "<p>for instance in <br>\n  \"8\": {<br>\n        \"code\": \"repeat rw[mul_comm]\\n\",<br>\n        \"completed\": false,<br>\n        \"selections\": [<br>\n          {<br>\n            \"selectionStartLineNumber\": 2,<br>\n            \"selectionStartColumn\": 1,<br>\n            \"positionLineNumber\": 2,<br>\n            \"positionColumn\": 1<br>\n          }<br>\n        ],<br>\n        \"help\": []<br>\n      }<br>\nwhat should I delete exactly ? should I just delete it all ?  I'm afraid there might be some hidden nuclear key somewhere.</p>",
        "id": 424418993,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709392216
    },
    {
        "content": "<p>Well you've not quoted the code in <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> so zulip has mangled all the spacing, but if you could see the spacing then you can see that this is somehow a dictionary of size 8, and you want to change it into a dictionary of size 7, so you need to delete <code>,\"8\" : {stuff}</code></p>",
        "id": 424419867,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709392981
    },
    {
        "content": "<p>I should say that I don' t know the first thing about these files, but looking carefully at the spacing enabled me to figure things out. The structure of the file seems to be this:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>{\n  \"inventory\": [ &lt;stuff&gt;\n  ],\n  \"openedIntro\": true,\n  \"data\": {\n    \"Tutorial\": {\n      \"1\": { &lt;stuff&gt;\n      },\n      \"2\": { &lt;stuff&gt;\n      },\n      ...\n      },\n      \"8\": { &lt;stuff&gt;\n      }\n    },\n    \"Addition\": {\n      \"1\": { &lt;stuff&gt;\n      },\n      \"2\": {\n      (etc)\n</code></pre></div>\n<p>and it seems that you can just edit the file in the obvious way. Keep a backup in case you mess up! You won't lose your progress that way.</p>",
        "id": 424420269,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709393236
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/424419867\">said</a>:</p>\n<blockquote>\n<p>Well you've not quoted the code in <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> so zulip has mangled all the spacing, but if you could see the spacing then you can see that this is somehow a dictionary of size 8, and you want to change it into a dictionary of size 7, so you need to delete <code>,\"8\" : {stuff}</code></p>\n</blockquote>\n<p>ok thanks, I was a bit confused in your previous message by \"comma before the 2, then all the stuff up to (but not including) }\",  \",\"8\" : {stuff}\" makes more sense to me. </p>\n<p>By the way, huge thanks to the author(s) of the game, it's a lot of fun !</p>",
        "id": 424420284,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709393250
    },
    {
        "content": "<p>The comma thing is that you want to change <code>\"7\":{stuff},\"8\":{stuff}}</code> to <code>\"7\":{stuff}}</code>, i.e. you need to remove the comma just before the 8 as well as all the 8 data.</p>",
        "id": 424420489,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709393390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"385895\">@Jon Eugster</span> It might be nice if the game offered more options for deleting information.  Right now your only option is to delete everything.  Perhaps there could be a dialog box in which you select what levels or worlds you want to delete information from (with delete all as one option)?</p>",
        "id": 424422147,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1709394659
    },
    {
        "content": "<p>That should certainly not happen<span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>\n<p>Unfortunately I might not be able to fix anything during the next week if it's not preventing people completely from playing, as Im in the mountains with very poor internet.</p>\n<p><span class=\"user-mention\" data-user-id=\"695009\">@Daniel Massart</span> do I understand correctly that you are now able to continue now? Could you (and <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>) send me a DM with the downloaded game state wihich was broken? I'll try investigate as soon as Im back.</p>",
        "id": 424436691,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1709406065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"453098\">Dan Velleman</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/424422147\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"385895\">Jon Eugster</span> It might be nice if the game offered more options for deleting information.  Right now your only option is to delete everything.  Perhaps there could be a dialog box in which you select what levels or worlds you want to delete information from (with delete all as one option)?</p>\n</blockquote>\n<p>Feature requests like this are best put as an issue at the lean4game githib repo<span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> Sometimes it takes a while, but I do try to address all issues that are submitted there.</p>",
        "id": 424436872,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1709406172
    },
    {
        "content": "<p>OK, I submitted an issue.</p>",
        "id": 424444885,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1709412663
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"385895\">Jon Eugster</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/424436691\">said</a>:</p>\n<blockquote>\n<p>That should certainly not happen<span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>\n<p>Unfortunately I might not be able to fix anything during the next week if it's not preventing people completely from playing, as Im in the mountains with very poor internet.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"695009\">Daniel Massart</span> do I understand correctly that you are now able to continue now? Could you (and <span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span>) send me a DM with the downloaded game state wihich was broken? I'll try investigate as soon as Im back.</p>\n</blockquote>\n<p>Yes Jon I think at least we know how to get around the problem. I posted a repro <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/424413517\">above</a> so it could happen to others. In NNG3 if anyone tried <code>repeat rw [add_comm]</code> then it hung NNG3 but you could just delete the line to recover. Here the issue is that <code>repeat rw [add_comm]</code> really is deadly because you can't ever get back to the input box to remove it.</p>",
        "id": 424445070,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709412842
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"695009\">@Daniel Massart</span> let me know if you need more help getting back on track; I'm confident that I can edit your savefile to reset any given level, as long as you tell me which levels you want reset.</p>",
        "id": 424445121,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709412882
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/424445121\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"695009\">Daniel Massart</span> let me know if you need more help getting back on track; I'm confident that I can edit your savefile to reset any given level, as long as you tell me which levels you want reset.</p>\n</blockquote>\n<p>so far it works perfectly fine, exactly as you said, by deleting the content of an exercise, plus the comma right before it</p>",
        "id": 424481146,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709448841
    },
    {
        "content": "<p>I thought this one might be interesting as well : <br>\n<a href=\"/user_uploads/3121/qY09UFnv4bdHv5_FEELD53k-/Capture-d√©cran-du-2024-03-03-13-54-07.png\">Capture-d√©cran-du-2024-03-03-13-54-07.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/qY09UFnv4bdHv5_FEELD53k-/Capture-d√©cran-du-2024-03-03-13-54-07.png\" title=\"Capture-d√©cran-du-2024-03-03-13-54-07.png\"><img src=\"/user_uploads/3121/qY09UFnv4bdHv5_FEELD53k-/Capture-d√©cran-du-2024-03-03-13-54-07.png\"></a></div>",
        "id": 424506558,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709470496
    },
    {
        "content": "<p>That looks like expected behaviour to me. What interests you about it?</p>",
        "id": 424514553,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709476972
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/424514553\">said</a>:</p>\n<blockquote>\n<p>That looks like expected behaviour to me. What interests you about it?</p>\n</blockquote>\n<p>I found funny that it (rightly) claimed not to know what succ_zero_eq_one means, and at the same time it considered it solved the intermediate goal, as if it knew that I actually meant one_eq_succ_zero. In any case it seemed to mess with its brain and I had to delete the level as you showed me yesterday</p>",
        "id": 424516423,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1709478390
    },
    {
        "content": "<p>After an error Lean goes totally haywire and you can't believe anything it says other than the error.</p>",
        "id": 424516629,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709478500
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"695009\">Daniel Massart</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/424506558\">said</a>:</p>\n<blockquote>\n<p>I thought this one might be interesting as well : <br>\n<a href=\"/user_uploads/3121/qY09UFnv4bdHv5_FEELD53k-/Capture-d√©cran-du-2024-03-03-13-54-07.png\">Capture-d√©cran-du-2024-03-03-13-54-07.png</a></p>\n</blockquote>\n<p>Thanks for noticing. After the next update the message \"intermediate goal solved\" will not be displayed anymore if there are zero goals present due to errors</p>",
        "id": 425508128,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1709900663
    },
    {
        "content": "<p>The game seems to break if I try to use the repeat tactic <br>\neg; \"repeat rw [xyz]\"<br>\nAnyone know anything about this?</p>",
        "id": 425853146,
        "sender_full_name": "T D",
        "timestamp": 1710144098
    },
    {
        "content": "<p>I've seen some discussion about a bug that happens when you cause an infinite loop</p>",
        "id": 425854427,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710144650
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699802\">T D</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/425853146\">said</a>:</p>\n<blockquote>\n<p>The game seems to break if I try to use the repeat tactic <br>\neg; \"repeat rw [xyz]\"<br>\nAnyone know anything about this?</p>\n</blockquote>\n<p>literally in this same topic about 5 messages up ;)</p>\n<p>I'll hope to fix this today, sorry for the troublesü§ûüèº</p>",
        "id": 425882616,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1710154420
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"699802\">T D</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/425853146\">said</a>:</p>\n<blockquote>\n<p>The game seems to break if I try to use the repeat tactic <br>\neg; \"repeat rw [xyz]\"<br>\nAnyone know anything about this?</p>\n</blockquote>\n<p>See <a href=\"#narrow/stream/113489-new-members/topic/Crashing.20NNG4.3A.20.22Cannot.20read.20properties.20of.20undefined.22/near/425196070\">this thread</a> for some additional context.</p>",
        "id": 426633456,
        "sender_full_name": "Isak Colboubrani",
        "timestamp": 1710452210
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"683979\">Isak Colboubrani</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/426633456\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"699802\">T D</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/425853146\">said</a>:</p>\n<blockquote>\n<p>The game seems to break if I try to use the repeat tactic <br>\neg; \"repeat rw [xyz]\"<br>\nAnyone know anything about this?</p>\n</blockquote>\n<p>See <a href=\"#narrow/stream/113489-new-members/topic/Crashing.20NNG4.3A.20.22Cannot.20read.20properties.20of.20undefined.22/near/425196070\">this thread</a> for some additional context.</p>\n</blockquote>\n<p>Does it still crash for you?</p>\n<p>The current fix unfortunately requires you to go into \"Editor mode\" (top right) and delete the last line manually, but that should be usable for the time being. Or at least I hoped it would.</p>",
        "id": 426641894,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1710456136
    },
    {
        "content": "<p>something I don't get about the tactic \"cases' \" in the set theory game : at some point I have a hypothesis </p>\n<p>ht: (t = A ‚à® t = B) ‚àß x ‚àà t</p>\n<p>and if I do cases' ht with htA htB, it answers </p>\n<p>htA: t = A ‚à® t = B<br>\nhtB: x ‚àà t</p>\n<p>when it should reply with <br>\nhtA : t =A \\and x \\in t  <br>\nhtAB: t =B \\and x \\in t </p>\n<p>am I missing something ?</p>",
        "id": 426909415,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1710611350
    },
    {
        "content": "<p>If <code>ht</code> were <code>(t = A ‚àß x ‚àà t) ‚à® (t = B ‚àß x ‚àà t)</code>, then you would get the behavior you seem to be expecting.  But that's not what <code>ht</code> is.  Of course, <code>ht</code> is <em>equivalent</em> to that statement, but you'd have to prove that equivalence to make use of it.</p>\n<p>I think a better approach would be to say <code>have htleft : t = A ‚à® t = B := ht.left</code>.  Now you can do <code>cases' htleft with htA htB</code>.  Or you could just say <code>cases' ht.left with htA htB</code>.</p>",
        "id": 426909916,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1710611919
    },
    {
        "content": "<p>The point is, the behavior of <code>cases' h with hA hB</code> that is described in the set theory game is only for situations in which <code>h</code> is an \"or\" statement.  It's not enough for it to be <em>logically equivalent</em> to an \"or\" statement, it has to literally be an \"or\" statement.  (You can experiment with <code>cases'</code> in situations in which <code>h</code> is not an \"or\" statement and see what it does, as you accidentally did in your situation, but that's not how the tactic is used in the set theory game.)</p>",
        "id": 426910454,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1710612414
    },
    {
        "content": "<p>Yeah, it's important to understand that <code>cases'</code> doesn't have any special knowledge of boolean logic. What it knows is that <code>And</code> is a type with two parameters, so it simply destructures <code>ht</code> into those two parameters.</p>",
        "id": 426910579,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1710612509
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"380294\">Matt Diamond</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/426910579\">said</a>:</p>\n<blockquote>\n<p>Yeah, it's important to understand that <code>cases'</code> doesn't have any special knowledge of boolean logic. What it knows is that <code>And</code> is a type with two parameters, so it simply destructures <code>ht</code> into those two parameters.</p>\n</blockquote>\n<p>thanks to both of you for your answers ! still, wouldn't it be better if it answered with an error message like \"sorry, I expect a litteral \"or\" statement here\", rather than proposing something absurd like a desperate student ?</p>",
        "id": 426910783,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1710612695
    },
    {
        "content": "<p>I don't understand what's absurd about the behavior of <code>cases'</code> here... if I have a statement <code>P ‚àß Q</code>, then it can be helpful to destructure that into two separate propositions</p>",
        "id": 426911074,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1710612925
    },
    {
        "content": "<p><code>cases'</code> has many applications beyond just dealing with <code>Or</code></p>",
        "id": 426911147,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1710612973
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"380294\">Matt Diamond</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/426911147\">said</a>:</p>\n<blockquote>\n<p><code>cases'</code> has many applications beyond just dealing with <code>Or</code></p>\n</blockquote>\n<p>ok, this is the information I missed, in the game the definition just says \"if you have a p \\or q hypothesis...\"<br>\nthanks for your time !</p>",
        "id": 426911371,
        "sender_full_name": "Daniel Massart",
        "timestamp": 1710613180
    },
    {
        "content": "<p>Ah, I can see why that might lead you to believe it was a specialized function. Happy to help!</p>",
        "id": 426911463,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1710613256
    },
    {
        "content": "<p><del>Perhaps I should add</del>I have added a comment in the game saying that the <code>cases'</code> tactic has other uses, but in the game we only use it for breaking a proof into cases based on an \"or\" assumption.</p>\n<p>The game is only intended to teach a limited amount about Lean--it's not trying to cover all uses of all tactics.</p>",
        "id": 426911852,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1710613608
    },
    {
        "content": "<p>Hi ya'll. I'm not a mathematician but want to learn formal verification. Currently stuck on Addition Level 2/5: succ_add</p>\n<p>How do think about reducing this problem?</p>\n<p><a href=\"/user_uploads/3121/UepuM4uRNpzJcJlhP191vaDe/Screenshot-2024-04-05-at-12.27.53-AM.png\">Screenshot-2024-04-05-at-12.27.53-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/UepuM4uRNpzJcJlhP191vaDe/Screenshot-2024-04-05-at-12.27.53-AM.png\" title=\"Screenshot-2024-04-05-at-12.27.53-AM.png\"><img src=\"/user_uploads/3121/UepuM4uRNpzJcJlhP191vaDe/Screenshot-2024-04-05-at-12.27.53-AM.png\"></a></div>",
        "id": 431449041,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712294907
    },
    {
        "content": "<p>try using <code>add_succ</code></p>",
        "id": 431449391,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712295029
    },
    {
        "content": "<p>on the right side of left side or both?</p>",
        "id": 431450081,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712295489
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/431449391\">said</a>:</p>\n<blockquote>\n<p>try using <code>add_succ</code></p>\n</blockquote>\n<p>on the right side, left side or both?</p>",
        "id": 431450102,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712295517
    },
    {
        "content": "<p>both</p>",
        "id": 431450659,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712295891
    },
    {
        "content": "<p>succ¬†(succ¬†a¬†+¬†d)¬†=¬†succ¬†(succ¬†(a¬†+¬†d))<br>\nHow to reduce this running out of ideas, not sure in what way I should apply the induction tactic.</p>\n<p>Should I apply induction on both a and d and solve their specific branches? Will induction reduce this problem further?</p>",
        "id": 431451911,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712296735
    },
    {
        "content": "<p>Seems like i am getting into some kind of infinite loop when i do that <a href=\"/user_uploads/3121/tawVH3D63RqIyBcAn16MhvVR/Screenshot-2024-04-05-at-1.07.35-AM.png\">Screenshot-2024-04-05-at-1.07.35-AM.png</a> <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/tawVH3D63RqIyBcAn16MhvVR/Screenshot-2024-04-05-at-1.07.35-AM.png\" title=\"Screenshot-2024-04-05-at-1.07.35-AM.png\"><img src=\"/user_uploads/3121/tawVH3D63RqIyBcAn16MhvVR/Screenshot-2024-04-05-at-1.07.35-AM.png\"></a></div>",
        "id": 431452895,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712297292
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"707724\">Meek Msaki</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/431451911\">said</a>:</p>\n<blockquote>\n<p>succ¬†(succ¬†a¬†+¬†d)¬†=¬†succ¬†(succ¬†(a¬†+¬†d))<br>\nHow to reduce this running out of ideas,</p>\n</blockquote>\n<p>This is very close to the hypothesis <code>hd</code> you have... maybe you should try rewriting with it</p>",
        "id": 431453964,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712298018
    },
    {
        "content": "<blockquote>\n<p>Should I apply induction on both a and d and solve their specific branches? Will induction reduce this problem further?</p>\n</blockquote>\n<p>No, another induction will make a big mess and probably not help</p>",
        "id": 431453986,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712298044
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/431453964\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"707724\">Meek Msaki</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/431451911\">said</a>:</p>\n<blockquote>\n<p>succ¬†(succ¬†a¬†+¬†d)¬†=¬†succ¬†(succ¬†(a¬†+¬†d))<br>\nHow to reduce this running out of ideas,</p>\n</blockquote>\n<p>This is very close to the hypothesis <code>hd</code> you have... maybe you should try rewriting with it</p>\n</blockquote>\n<p>thanks that worked</p>",
        "id": 431454407,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712298309
    },
    {
        "content": "<p>How do I rewrite h? I am assuming it's rw [zero_add h] but that doesn't seen to work</p>\n<p><a href=\"/user_uploads/3121/dAF_eBiGcXue_ingddiKH06t/Screenshot-2024-04-05-at-2.03.53-AM.png\">Screenshot-2024-04-05-at-2.03.53-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/dAF_eBiGcXue_ingddiKH06t/Screenshot-2024-04-05-at-2.03.53-AM.png\" title=\"Screenshot-2024-04-05-at-2.03.53-AM.png\"><img src=\"/user_uploads/3121/dAF_eBiGcXue_ingddiKH06t/Screenshot-2024-04-05-at-2.03.53-AM.png\"></a></div>",
        "id": 431459159,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712300689
    },
    {
        "content": "<p>No, you want to use <code>rw [lemma] at hypothesis</code></p>",
        "id": 431459328,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1712300772
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Ya√´l Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/431459328\">said</a>:</p>\n<blockquote>\n<p>No, you want to use <code>rw [lemma] at hypothesis</code></p>\n</blockquote>\n<p>worked thanks!</p>",
        "id": 431459686,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712300926
    },
    {
        "content": "<p>I'm stuck on this one not sure how to approach this problem any ideas that could be of help?</p>\n<p><a href=\"/user_uploads/3121/Rt7vkEglsKFTvwM6yuILDAI6/Screenshot-2024-04-05-at-2.55.07-AM.png\">Screenshot-2024-04-05-at-2.55.07-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Rt7vkEglsKFTvwM6yuILDAI6/Screenshot-2024-04-05-at-2.55.07-AM.png\" title=\"Screenshot-2024-04-05-at-2.55.07-AM.png\"><img src=\"/user_uploads/3121/Rt7vkEglsKFTvwM6yuILDAI6/Screenshot-2024-04-05-at-2.55.07-AM.png\"></a></div>",
        "id": 431467424,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712303745
    },
    {
        "content": "<p>Don't do what you did, go back to the beginning and induct on n instead</p>",
        "id": 431474838,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712306076
    },
    {
        "content": "<p>By the way, multiplication world then power world is the recommended route for beginners, before going down this path.</p>",
        "id": 431475174,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712306182
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/431475174\">said</a>:</p>\n<blockquote>\n<p>By the way, multiplication world then power world is the recommended route for beginners, before going down this path.</p>\n</blockquote>\n<p>Got it! But your tip helped, was able to complete level!</p>",
        "id": 431477461,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712306693
    },
    {
        "content": "<p>If you want to forge ahead then go ahead and feel free to ask more questions!</p>",
        "id": 431477849,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712306792
    },
    {
        "content": "<p>Not sure what direction I should take this, have been stuck for a while and need some suggestions</p>\n<p><a href=\"/user_uploads/3121/blIysB6LT6NLqsjERqe8gAY0/Screenshot-2024-04-05-at-4.02.07-AM.png\">Screenshot-2024-04-05-at-4.02.07-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/blIysB6LT6NLqsjERqe8gAY0/Screenshot-2024-04-05-at-4.02.07-AM.png\" title=\"Screenshot-2024-04-05-at-4.02.07-AM.png\"><img src=\"/user_uploads/3121/blIysB6LT6NLqsjERqe8gAY0/Screenshot-2024-04-05-at-4.02.07-AM.png\"></a></div>",
        "id": 431480756,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712307793
    },
    {
        "content": "<p>My guess is induction on the variable on the right ie b. That usually makes progress for these early levels. The point of the variable on the right is that multiplication is defined by recursion on the variable on the right so basic proofs should use induction on the variable on the right. By the time you've proved <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>√ó</mo><mi>b</mi><mo>=</mo><mi>b</mi><mo>√ó</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a\\times b=b\\times a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">√ó</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">√ó</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> this distinction is irrelevant but it looks like you're not there yet.</p>",
        "id": 431481466,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712308034
    },
    {
        "content": "<p>I got to</p>\n<p>Assumptions: <strong>hd</strong>:¬†succ¬†a¬†*¬†d¬†=¬†a¬†*¬†d¬†+¬†d</p>\n<p>Goal:¬†succ¬†(succ¬†a¬†*¬†d¬†+¬†a)¬†=¬†succ¬†(a¬†*¬†d¬†+¬†a¬†+¬†d)</p>\n<p>I don't have access to succ_mul yet<br>\nI was thinking about doing a add_comm on <code>a</code> and <code>d</code> on the right side but that's about it currently</p>",
        "id": 431482418,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712308383
    },
    {
        "content": "<p>This is after add_right_comm, I see hd has a*d + d on the right hand side which can be useful but forgot what tactic to use</p>\n<p><a href=\"/user_uploads/3121/ROUyUYSS0DlJmWaAXqfkrctp/Screenshot-2024-04-05-at-4.22.05-AM.png\">Screenshot-2024-04-05-at-4.22.05-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ROUyUYSS0DlJmWaAXqfkrctp/Screenshot-2024-04-05-at-4.22.05-AM.png\" title=\"Screenshot-2024-04-05-at-4.22.05-AM.png\"><img src=\"/user_uploads/3121/ROUyUYSS0DlJmWaAXqfkrctp/Screenshot-2024-04-05-at-4.22.05-AM.png\"></a></div><p>So close to solving it:<br>\nAssumptions: <strong>hd</strong>:¬†succ¬†a¬†*¬†d¬†=¬†a¬†*¬†d¬†+¬†d</p>\n<p>Goal:¬†succ¬†(a¬†+¬†(a¬†*¬†d¬†+¬†d))¬†=¬†succ¬†(a¬†+¬†succ¬†a¬†*¬†d)</p>",
        "id": 431484032,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712308954
    },
    {
        "content": "<p>Now look at the assumption.</p>",
        "id": 431485861,
        "sender_full_name": "Richard Copley",
        "timestamp": 1712309590
    },
    {
        "content": "<p>Assumptions: <strong>hd</strong>:¬†<code>succ¬†a¬†*¬†d</code>¬†=¬†a¬†*¬†d¬†+¬†d<br>\nGoal: succ¬†(a¬†+¬†(a¬†*¬†d¬†+¬†d))¬†=¬†succ¬†(a¬†+¬†<code>succ¬†a¬†*¬†d</code>)</p>",
        "id": 431485994,
        "sender_full_name": "Richard Copley",
        "timestamp": 1712309641
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"400544\">Richard Copley</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/431485994\">said</a>:</p>\n<blockquote>\n<p>Assumptions: <strong>hd</strong>:¬†<code>succ¬†a¬†*¬†d</code>¬†=¬†a¬†*¬†d¬†+¬†d<br>\nGoal: succ¬†(a¬†+¬†(a¬†*¬†d¬†+¬†d))¬†=¬†succ¬†(a¬†+¬†<code>succ¬†a¬†*¬†d</code>)</p>\n</blockquote>\n<p>solved!</p>",
        "id": 431487416,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712310169
    },
    {
        "content": "<p>Stuck here, i've been writing on pen and paper but the invisible brackets are really hard to work with when applying my mul_comm tactics, any tips?</p>\n<p><a href=\"/user_uploads/3121/rECX6IwjH5oEw6v7-1wJt7JE/Screenshot-2024-04-05-at-3.48.37-PM.png\">Screenshot-2024-04-05-at-3.48.37-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/rECX6IwjH5oEw6v7-1wJt7JE/Screenshot-2024-04-05-at-3.48.37-PM.png\" title=\"Screenshot-2024-04-05-at-3.48.37-PM.png\"><img src=\"/user_uploads/3121/rECX6IwjH5oEw6v7-1wJt7JE/Screenshot-2024-04-05-at-3.48.37-PM.png\"></a></div><p>Assumptions:<strong>hd</strong>:¬†b¬†^¬†d¬†*¬†a¬†^¬†d¬†=¬†(a¬†*¬†b)¬†^¬†d<br>\nGoal:¬†b¬†*¬†(b¬†^¬†d¬†*¬†(a¬†^¬†d¬†*¬†a))¬†=¬†b¬†*¬†(b¬†^¬†d¬†*¬†a¬†^¬†d¬†*¬†a)</p>",
        "id": 431602213,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712350226
    },
    {
        "content": "<p>It's hard to guess how you got into exactly that state (not that there's anything wrong with it). For concreteness, if you had started like this instead :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- expand stuff out</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">]</span>\n<span class=\"c1\">-- remove all brackets</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">‚Üê</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>so that your context is</p>\n<blockquote>\n<p>Assumptions:<br>\n<code>hd: (a * b) ^ d = a ^ d * b ^ d</code><br>\nGoal:<br>\n<code>a ^ d * b ^ d * a * b = a ^ d * a * b ^ d * b</code></p>\n</blockquote>\n<p>then the next thing to do is to use <code>mul_assoc</code> carefully* to put brackets around \"<code>b ^ d * a</code>\" so that you can use <code>mul_comm</code>.</p>\n<p>(*Here \"carefully\" means that you'll need to supply arguments for one or more of <code>mul_assoc</code>'s  parameters -- and why not all three of them?!)</p>",
        "id": 431604392,
        "sender_full_name": "Richard Copley",
        "timestamp": 1712351240
    },
    {
        "content": "<p><a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/431604392\">A message</a> was moved here from <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/graph.20theory.20project\">#new members &gt; graph theory project</a> by <span class=\"user-mention silent\" data-user-id=\"400544\">Richard Copley</span>.</p>",
        "id": 431604436,
        "sender_full_name": "Notification Bot",
        "timestamp": 1712351257
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"400544\">Richard Copley</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/431604392\">said</a>:</p>\n<blockquote>\n<p>It's hard to guess how you got into exactly that state (not that there's anything wrong with it). For concreteness, if you had started like this instead :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- expand stuff out</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">]</span>\n<span class=\"c1\">-- remove all brackets</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">‚Üê</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>so that your context is</p>\n<blockquote>\n<p>Assumptions:<br>\n<code>hd: (a * b) ^ d = a ^ d * b ^ d</code><br>\nGoal:<br>\n<code>a ^ d * b ^ d * a * b = a ^ d * a * b ^ d * b</code></p>\n</blockquote>\n<p>then the next thing to do is to use <code>mul_assoc</code> carefully* to put brackets around \"<code>b ^ d * a</code>\" so that you can use <code>mul_comm</code>.</p>\n<p>(*Here \"carefully\" means that you'll need to supply arguments for one or more of <code>mul_assoc</code>'s  parameters -- and why not all three of them?!)</p>\n</blockquote>\n<p>was helpful thanks, completed level!</p>",
        "id": 431613222,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712356003
    },
    {
        "content": "<p>Any tips on this. I want to at least get at <code>zero_ne_one</code>. Any ideas on how to get it to 0 on left and 1 on right? It seems that I am not able to use <code>zero_ne_succ</code> yet</p>\n<p><a href=\"/user_uploads/3121/KxvnfvABW7HmSKMTNn3LhAzp/Screenshot-2024-04-06-at-11.46.58-AM.png\">Screenshot-2024-04-06-at-11.46.58-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/KxvnfvABW7HmSKMTNn3LhAzp/Screenshot-2024-04-06-at-11.46.58-AM.png\" title=\"Screenshot-2024-04-06-at-11.46.58-AM.png\"><img src=\"/user_uploads/3121/KxvnfvABW7HmSKMTNn3LhAzp/Screenshot-2024-04-06-at-11.46.58-AM.png\"></a></div><p>Goal : <code>1‚â†1+1</code></p>\n<p>I can get it to <code>succ¬†0¬†‚â†¬†succ¬†(succ¬†0)</code></p>\n<p>But not sure how to proceed</p>",
        "id": 431687780,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712422131
    },
    {
        "content": "<p>you can <code>intro h</code>, because the definition of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=Ã∏</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\not=B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\">ÓÄ†</span></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo>=</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mtext>‚ÄÖ‚Ää</mtext><mo>‚üπ</mo><mtext>‚ÄÖ‚Ää</mtext><mi>F</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">(A=B)\\implies False</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚üπ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">se</span></span></span></span>. Then apply succ_inj at h.</p>",
        "id": 431698166,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712430429
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/431698166\">said</a>:</p>\n<blockquote>\n<p>you can <code>intro h</code>, because the definition of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=Ã∏</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\not=B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\">ÓÄ†</span></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo>=</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mtext>‚ÄÖ‚Ää</mtext><mo>‚üπ</mo><mtext>‚ÄÖ‚Ää</mtext><mi>F</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">(A=B)\\implies False</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚üπ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">se</span></span></span></span>. Then apply succ_inj at h.</p>\n</blockquote>\n<p><a href=\"/user_uploads/3121/D8yKhqz5MjlT9v05_sfftbTb/Screenshot-2024-04-06-at-3.21.10-PM.png\">Screenshot-2024-04-06-at-3.21.10-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/D8yKhqz5MjlT9v05_sfftbTb/Screenshot-2024-04-06-at-3.21.10-PM.png\" title=\"Screenshot-2024-04-06-at-3.21.10-PM.png\"><img src=\"/user_uploads/3121/D8yKhqz5MjlT9v05_sfftbTb/Screenshot-2024-04-06-at-3.21.10-PM.png\"></a></div><p>How come I don't get an implication as you are suggesting? and weird how it's saying <code>succ_inj</code> is an  unknown tactic</p>",
        "id": 431703005,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712434797
    },
    {
        "content": "<p>Indeed it's not a tactic. But <code>apply</code> is. And you did get an implication, that's why <code>intro</code> worked.</p>",
        "id": 431707340,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712439365
    },
    {
        "content": "<p>I'm on Level 5 / 6 : add_right_eq_zero</p>\n<p>The question introduces that we will be solving Goal:</p>\n<p>a¬†+¬†b¬†=¬†0¬†‚Üí¬†a¬†=¬†0 </p>\n<blockquote>\n<p>Does not include the case for b though</p>\n</blockquote>\n<p>I seem to getting stuck finding a solution, any help would do. This is how far I have gotten</p>\n<p><a href=\"/user_uploads/3121/08RclDBVbk-9lA-nSEwVWbFW/Screenshot-2024-04-06-at-9.48.17-PM.png\">Screenshot-2024-04-06-at-9.48.17-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/08RclDBVbk-9lA-nSEwVWbFW/Screenshot-2024-04-06-at-9.48.17-PM.png\" title=\"Screenshot-2024-04-06-at-9.48.17-PM.png\"><img src=\"/user_uploads/3121/08RclDBVbk-9lA-nSEwVWbFW/Screenshot-2024-04-06-at-9.48.17-PM.png\"></a></div>",
        "id": 431724997,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712458226
    },
    {
        "content": "<p>Try to get a contradiction by rewriting the <code>a + succ d</code> that appears in the hypothesis <code>h</code> as <code>succ (a + d)</code></p>",
        "id": 431729785,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1712463501
    },
    {
        "content": "<p>This looks doable -- <code>h</code> is provably false so you can get a contradiction from it, proving the goal. Manipulate <code>h</code> until it's of the form succ x = 0 and then apply succ_ne_zero to it. (oh sorry, for some reason I didn't see Mitchell's comment until after I'd posted mine)</p>",
        "id": 431758279,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712487350
    },
    {
        "content": "<p><code>add_left_cancel</code> is not working as I expect. I though goal 2 will become <code>b = x</code> but it is not doing that.</p>\n<p>Can someone confirm that I am using the tactic the right way, maybe I am doing it wrong.</p>\n<p><a href=\"/user_uploads/3121/yxRtqnKxdipwE6eM08bQLCoP/Screenshot-2024-04-11-at-12.23.19-AM.png\">Screenshot-2024-04-11-at-12.23.19-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/yxRtqnKxdipwE6eM08bQLCoP/Screenshot-2024-04-11-at-12.23.19-AM.png\" title=\"Screenshot-2024-04-11-at-12.23.19-AM.png\"><img src=\"/user_uploads/3121/yxRtqnKxdipwE6eM08bQLCoP/Screenshot-2024-04-11-at-12.23.19-AM.png\"></a></div>",
        "id": 432630432,
        "sender_full_name": "Meek Msaki",
        "timestamp": 1712813172
    },
    {
        "content": "<p>That's because <code>add_left_cancel</code> goes the other way: if you already know that a+b=a+c, it proves b=c. But you need to prove that a+b=a+c.</p>",
        "id": 432637017,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712817543
    },
    {
        "content": "<p>You took a wrong turn before this, though.</p>",
        "id": 432637223,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712817666
    },
    {
        "content": "<p>Think about the mathematics: if z=y+b and y=x+a, then z=x+___</p>",
        "id": 432637448,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712817809
    },
    {
        "content": "<p>Hello folks.  In the online NNG4, I am stuck in how to target rewrite tactic (<code>rw</code>) arguments at a subexpression (not just a single named term). For example, to prove the goal below, we merely need to rearrange terms using <code>rw[mul_comm]</code> and <code>rw[mul_assoc]</code>, but how do we tell the tactic which subexpressions we want to group as arguments to mul_comm and mul_assoc? <br>\n<code>a ^ prevN * b ^ prevN * (a * b) = a ^ prevN * a * (b ^ prevN * b)</code></p>\n<p>Not important, but this is the exercise where I have that goal: <br>\n<a href=\"https://adam.math.hhu.de/#/g/leanprover-community/NNG4/world/Power/level/7\">https://adam.math.hhu.de/#/g/leanprover-community/NNG4/world/Power/level/7</a> </p>\n<p>I know we can target individual terms, for example we could do <code>rw[mul_comm a b]</code> <br>\nbut I can't see how to do <code>rw[mul_comm (b ^ prevN) a]</code> or the like, which is what we need.<br>\n(I can't find this topic mentioned in the docs, can't find an online example of anyone doing it, and when I try it I get errors).</p>\n<p>Maybe <code>rw</code> tactic (in the Natural Number Game impl) cannot do this kind of targeting, although I see it is willing to grab subexpressions positionally, if we do say <code>nth_rewrite 3 [mul_comm]</code></p>",
        "id": 436198095,
        "sender_full_name": "Stu B22",
        "timestamp": 1714456018
    },
    {
        "content": "<p>There is no <code>b^prevN * a</code> in the term so you can't do what you want to do, if I've understood correctly what you want to do.</p>",
        "id": 436203764,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714458778
    },
    {
        "content": "<p>--deleted--</p>",
        "id": 436273352,
        "sender_full_name": "Mark Fischer",
        "timestamp": 1714484125
    },
    {
        "content": "<p>Thanks.  To be more precise, let's say the first move I want to make is to exchange the order of these 2 sub-expressions on the LHS:<br>\n<code>b ^ prevN</code> and <code>(a * b)</code><br>\nI want to swap their order using <code>rw[mul_comm ?1 ?2]</code>, but I don't know what to put for ?1 and ?2.<br>\nWhen I try <code>rw[mul_comm (b ^ prevN) (a * b)] </code><br>\nI get  <code>tactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  b ^ prevN * (a * b)</code></p>",
        "id": 436279657,
        "sender_full_name": "Stu B22",
        "timestamp": 1714485948
    },
    {
        "content": "<p>Right, there is no <code>b ^ prevN * (a * b)</code> in the goal either. You can only change <code>x * y</code> to <code>y * x</code> if <code>x * y</code> is actually present in the goal. The left hand side of your goal is <code>(a ^ prevN * b ^ prevN) * (a * b)</code> and if you draw that as a little tree with <code>*</code>s  with two legs coming out of it like the computer scientists like to do, you can see that the thing you want to be there isn't there.</p>",
        "id": 436283376,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714486999
    },
    {
        "content": "<p>Thank you Kevin.  I see that I <strong>am</strong> able to use <code>rw[mul_comm (a ^ prevN * b ^ prevN) (a * b)]</code>  so that answers my question about syntax, and I am ready to work on the proof again.  I think it would be useful to show an example like that one (requiring parentheses in the tactic input) in the docs/lessons.  I don't recall seeing one, but maybe I missed it.   Grateful for your help. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 436285892,
        "sender_full_name": "Stu B22",
        "timestamp": 1714487701
    },
    {
        "content": "<p>Hi! I just started learning Lean today and am slightly confused about Algorithm World 5. If one has an equality as an assumption, such as, in this case, </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span> <span class=\"n\">b</span>\n</code></pre></div>\n<p>how does one just apply a function to both sides of this equation? (in this case, pred). Apologies, this feels like something I should really be able to figure out on my own...</p>",
        "id": 437143881,
        "sender_full_name": "VayusElytra",
        "timestamp": 1714926454
    },
    {
        "content": "<p>Either <code>apply pred at h</code> or <code>apply_fun pred at h</code> might work</p>",
        "id": 437145863,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714927735
    },
    {
        "content": "<p>But there might also be a theorem that gets you there directly</p>",
        "id": 437145885,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714927762
    },
    {
        "content": "<p>yeah seems like apply_fun is not available in the NNG :(<br>\nedit: it's ok now! it was, indeed, something i should not have needed to ask about haha</p>",
        "id": 437146034,
        "sender_full_name": "VayusElytra",
        "timestamp": 1714927860
    },
    {
        "content": "<p>It's fine to ask anything here, really!</p>\n<p>As you probably figured from the hint the game gives you, the intended solution is not to do work on <code>h</code> but use the new lemma <code>pred_succ</code> you received at the goal <code>a = b</code> instead.</p>\n<p>Another way to do what you asked (besides <code>apply_fun</code>) would be <code>apply congr_arg pred at h</code> but that's not in the game, either. One could probably <a href=\"https://github.com/leanprover-community/NNG4/issues/new/choose\">ask for</a> one of these alternative options to be included in the game. Afaik Kevin's design is to keep it as minimalistic as possible, so I don't know if it would be added, but it might be worth suggesting nevertheless.</p>",
        "id": 437240046,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1714993637
    },
    {
        "content": "<p>Thank you very much! Yes, that's what I figured. I feel like it makes sense to restrict possible tactics this early on as you say. </p>\n<p>Hopping onto this, another question; I frequently find myself in situations such as this one:<br>\n<a href=\"/user_uploads/3121/A3-f2se6hNIOajRzyBSmTi6-/image.png\">image.png</a><br>\nIt is very simple to conclude from here of course, one just needs to apply add_left_comm for instance, which gives A + (B + C) = B + (A + C) for any A, B, C naturals. However, I've found that it frequently doesn't find that pattern in the expression; I suppose because Lean is looking for natural numbers and finding  e x c and e x b instead. Is there a way to still be able to apply add_left_comm here in spite of this?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/A3-f2se6hNIOajRzyBSmTi6-/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/A3-f2se6hNIOajRzyBSmTi6-/image.png\"></a></div><p>I'll add another closely related question: in this instance <br>\n<a href=\"/user_uploads/3121/MRWeCuSFnwSrh83LQwWYtdTy/image.png\">image.png</a><br>\nthis input successfully swaps a^d and a. However, trying nth_rewrite 6 [mul_comm] does not swap a and b ^ succ d. Why is that?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/MRWeCuSFnwSrh83LQwWYtdTy/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/MRWeCuSFnwSrh83LQwWYtdTy/image.png\"></a></div>",
        "id": 437282571,
        "sender_full_name": "VayusElytra",
        "timestamp": 1715008102
    },
    {
        "content": "<p>It's generally useful if you provide some example that people can use to play with, either a code block that runs as-is on <a href=\"http://live.lean-lang.org\">live.lean-lang.org</a> or in the game context a link to the level together with some code how to get to your state. Lean's sometimes quite hard to read from a screenshot as a √∂ot is goi g on behind the scenes.</p>\n<p>Second question: I only count 5 <code>*</code>, so I'm not surprised the command fails when you tell it it should rewrite the 6th occurance. (note for some reason <code>nth_rw</code> starts counting at 1)</p>\n<p>First question: I'm not sure, that's where a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> would help to see if it's something with the modified <code>rw</code>, or if it just generally wants some underscores <code>_</code> after the lamme name as <code>rw</code> seems to do that sometimes</p>",
        "id": 437351436,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1715036671
    },
    {
        "content": "<p>(second question: also note that you don't count them left-to-right as you see them. Instead you also have to take the invisible parenthesis into account to know how <code>nth_rw</code> counts.)</p>",
        "id": 437351691,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1715036812
    },
    {
        "content": "<p>Thanks! I'll make sure to provide that next time (because to be frank, one day after, I also have trouble remembering how exactly I got there...)</p>",
        "id": 437484408,
        "sender_full_name": "VayusElytra",
        "timestamp": 1715097776
    },
    {
        "content": "<p>One disadvantage of the lean4 NNG is that it's harder to copy/paste everything you've done in a level. I wonder if that could be improved</p>",
        "id": 437484864,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715097916
    },
    {
        "content": "<p>Do you know about editor mode <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> ?</p>\n<p><a href=\"/user_uploads/3121/E_kYSD-MLHtEXAYYtVsf-xAf/editor_mode.png\">editor_mode.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/E_kYSD-MLHtEXAYYtVsf-xAf/editor_mode.png\" title=\"editor_mode.png\"><img src=\"/user_uploads/3121/E_kYSD-MLHtEXAYYtVsf-xAf/editor_mode.png\"></a></div>",
        "id": 437504407,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715105272
    },
    {
        "content": "<p>I did not!</p>",
        "id": 437507597,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715106583
    },
    {
        "content": "<p>Maybe it should be better advertised!</p>",
        "id": 437531391,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715116154
    },
    {
        "content": "<p>I think it could make sense to have a button in each level that creates a preformatted question in the \"new members\"stream: <a href=\"https://github.com/leanprover-community/lean4game/issues/227\">https://github.com/leanprover-community/lean4game/issues/227</a> for collecting ideas on that. (I don't have plans to do it rn, but might eventually)</p>",
        "id": 437599268,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1715155498
    },
    {
        "content": "<p>Hello Everyone! Firstly I must say, NNG4 is a great game and learning experience! Congrats to everyone involved!<br>\nNow to the question. This may be evident to some, but as english is not my mother language I may not be getting the meaning... In the last level of the power world we have:<br>\n<a href=\"/user_uploads/3121/fM_xVimBEeW8EqlCoau0nd3h/image.png\">image.png</a><br>\nI am now intrigued between two possibilities:</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/fM_xVimBEeW8EqlCoau0nd3h/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/fM_xVimBEeW8EqlCoau0nd3h/image.png\"></a></div><ol>\n<li>This is Fermat's Last Theorem. It is HARD, and will take millions of lines of code, and it's work in progress by Kevin etc. Go do something else.</li>\n<li>This is a CLUNKY VERSION of Fermat's Last Theorem. Even if the full theorem is hard, you should be able to prove this version with what we have. Go about it.<br>\nWhich one of these should I take? Thanks! :)</li>\n</ol>",
        "id": 437712261,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1715194865
    },
    {
        "content": "<p>Your point 2 is wrong. The statement as presented really is Fermat's last theorem, so it is hard.</p>",
        "id": 437714458,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1715195855
    },
    {
        "content": "<p>What's clunky about it is that it uses <code>m + 3</code>, instead of <code>m</code> with <code>m ‚â• 3</code>.</p>",
        "id": 437714559,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1715195888
    },
    {
        "content": "<p>Ah phew, I wasn't really sure about it and started working on the problem... then I realized this might be a silly effort <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> The game let's you give it a try tho</p>",
        "id": 437714980,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1715196110
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/v9b8V30nqlA0flbD87tJPj5m/image.png\">image.png</a><br>\nThis means this blue guy won't turn green so soon...</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/v9b8V30nqlA0flbD87tJPj5m/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/v9b8V30nqlA0flbD87tJPj5m/image.png\"></a></div>",
        "id": 437715354,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1715196270
    },
    {
        "content": "<p><a class=\"stream\" data-stream-id=\"416277\" href=\"/#narrow/stream/416277-FLT\">#FLT</a></p>",
        "id": 438083590,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715408084
    },
    {
        "content": "<p>Hi, I'm working through the game and I'm at level 11/11 of the &lt;= world.</p>\n<p>In this step, I'm looking at succ a = succ 0, and I naturally want to use \"apply  succ_inj\" to get a = 0<br>\nHowever, the next step actually adds another succ to the expression. Am I doing something wrong here?</p>\n<p><a href=\"/user_uploads/3121/tTcedXoQ8BdiqGxCf1zx4GPA/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/tTcedXoQ8BdiqGxCf1zx4GPA/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/tTcedXoQ8BdiqGxCf1zx4GPA/image.png\"></a></div>",
        "id": 440213014,
        "sender_full_name": "awefhio",
        "timestamp": 1716425663
    },
    {
        "content": "<p>full code for reference:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"n\">x</span>\n<span class=\"n\">left</span>\n<span class=\"n\">rfl</span>\n<span class=\"n\">right</span>\n<span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">two_eq_succ_one</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">hx</span>\n<span class=\"n\">apply</span><span class=\"w\"> </span><span class=\"n\">succ_le_succ</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">hx</span>\n<span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">one_eq_succ_zero</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">two_eq_succ_one</span><span class=\"o\">]</span>\n<span class=\"n\">apply</span><span class=\"w\"> </span><span class=\"n\">le_one</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">hx</span>\n<span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"n\">hx</span>\n<span class=\"n\">left</span>\n<span class=\"n\">apply</span><span class=\"w\"> </span><span class=\"n\">succ_inj</span>\n</code></pre></div>",
        "id": 440213589,
        "sender_full_name": "awefhio",
        "timestamp": 1716426053
    },
    {
        "content": "<p>You can use ```lean to create a code block</p>",
        "id": 440213619,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1716426075
    },
    {
        "content": "<p>Indeed, in Mathlib <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Nat/Defs.html#Nat.succ_inj\">Nat.succ_inj</a> is <code>a.succ = b.succ ‚Üî a = b</code> but in NNG you only have <code>succ_inj (a b : ‚Ñï) (h : MyNat.succ a = MyNat.succ b) : a = b</code>, and even so, it's behaving like the oposite direction here</p>",
        "id": 440214511,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1716426618
    },
    {
        "content": "<p>is this a bug then?</p>\n<p>a related question: after</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">one_eq_succ_zero</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">two_eq_succ_one</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>the goal is <br>\n<a href=\"/user_uploads/3121/k4c-xt2Dh5TD7xnjpldhMUXz/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/k4c-xt2Dh5TD7xnjpldhMUXz/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/k4c-xt2Dh5TD7xnjpldhMUXz/image.png\"></a></div><p>I would actually like to use</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">repeat</span><span class=\"w\"> </span><span class=\"n\">apply</span><span class=\"w\"> </span><span class=\"n\">succ_inj</span>\n</code></pre></div>\n<p>but that does nothing in the interface. Is this not a valid operation? I was hoping it would turn</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">succ</span><span class=\"w\">¬†</span><span class=\"n\">a</span><span class=\"w\">¬†</span><span class=\"bp\">=</span><span class=\"w\">¬†</span><span class=\"n\">succ</span><span class=\"w\">¬†</span><span class=\"mi\">0</span><span class=\"w\">¬†</span><span class=\"bp\">‚à®</span><span class=\"w\">¬†</span><span class=\"n\">succ</span><span class=\"w\">¬†</span><span class=\"n\">a</span><span class=\"w\">¬†</span><span class=\"bp\">=</span><span class=\"w\">¬†</span><span class=\"n\">succ</span><span class=\"w\">¬†</span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>into</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">‚à®</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>such that I can use </p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">apply</span><span class=\"w\"> </span><span class=\"n\">le_one</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">hx</span>\n</code></pre></div>\n<p>and complete the proof immediately</p>",
        "id": 440226639,
        "sender_full_name": "awefhio",
        "timestamp": 1716427291
    },
    {
        "content": "<p>This is not a bug. I recommend reading the description of the <code>apply</code> tactic to understand what is going on.</p>",
        "id": 440226873,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1716427440
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"722108\">awefhio</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/440213589\">said</a>:</p>\n<blockquote>\n<p>full code for reference:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"n\">x</span>\n<span class=\"n\">left</span>\n<span class=\"n\">rfl</span>\n<span class=\"n\">right</span>\n<span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">two_eq_succ_one</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">hx</span>\n<span class=\"n\">apply</span><span class=\"w\"> </span><span class=\"n\">succ_le_succ</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">hx</span>\n<span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">one_eq_succ_zero</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">two_eq_succ_one</span><span class=\"o\">]</span>\n<span class=\"n\">apply</span><span class=\"w\"> </span><span class=\"n\">le_one</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">hx</span>\n<span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"n\">hx</span>\n<span class=\"n\">left</span>\n<span class=\"n\">apply</span><span class=\"w\"> </span><span class=\"n\">succ_inj</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Funny enough,</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">succ_inj</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">succ</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">succ</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">)]</span>\n<span class=\"n\">rfl</span>\n</code></pre></div>\n<p>Will close this goal</p>",
        "id": 440226958,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1716427468
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"695266\">Mitchell Lee</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/440226873\">said</a>:</p>\n<blockquote>\n<p>This is not a bug. I recommend reading the description of the <code>apply</code> tactic to understand what is going on.</p>\n</blockquote>\n<p>ah I think I understand, applying a proof goes backwards if it is a goal and forwards if it is a hypothesis?</p>",
        "id": 440228984,
        "sender_full_name": "awefhio",
        "timestamp": 1716428771
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"671510\">Bernardo Borges</span> <a href=\"#narrow/stream/113489-new-members/topic/Natural.20Number.20Game/near/437715354\">said</a>:</p>\n<blockquote>\n<p><a href=\"/user_uploads/3121/v9b8V30nqlA0flbD87tJPj5m/image.png\">image.png</a><br>\nThis means this blue guy won't turn green so soon...</p>\n</blockquote>\n<p>Has anybody yet played the prank of saying, \"I loved the NNG. Found it quite easy in the end,\" followed by a (doctored) screenshot will all green circles?</p>",
        "id": 440369662,
        "sender_full_name": "Paul Rowe",
        "timestamp": 1716485958
    },
    {
        "content": "<p>\"oh, I thought that was our homework\"</p>",
        "id": 440369796,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716486005
    },
    {
        "content": "<p>I'm working on it!</p>",
        "id": 440370409,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716486295
    },
    {
        "content": "<p>But that will be the real thing, not just a prank! Plus, I guess I secretly thought of you as being the main audience for the joke/prank.</p>",
        "id": 440370668,
        "sender_full_name": "Paul Rowe",
        "timestamp": 1716486415
    },
    {
        "content": "<p>There <em>are</em> actually two rather simple ways to solve the game ;)</p>\n<p><a href=\"/user_uploads/3121/0KVYGTrhppKsUXHqm0DuUDzE/Screenshot_20240523_200705.png\">Screenshot_20240523_200705.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/0KVYGTrhppKsUXHqm0DuUDzE/Screenshot_20240523_200705.png\" title=\"Screenshot_20240523_200705.png\"><img src=\"/user_uploads/3121/0KVYGTrhppKsUXHqm0DuUDzE/Screenshot_20240523_200705.png\"></a></div><p>One requires magic, the other out-of-the-box thinking (but both can be achieved with the provided game framework, i.e. without post-editing of screenshots or modifying CSS in the browser dev-tools <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> )</p>",
        "id": 440373888,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1716487788
    },
    {
        "content": "<p>Nice how you warped into the Power World without passing the last World (the edge is gray)</p>",
        "id": 440374659,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1716488138
    },
    {
        "content": "<p>(I set the rules to \"none\"/\"relaxed\" in order to skip everything before that, as it's only about Power level 10)</p>",
        "id": 440374763,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1716488181
    }
]