[
    {
        "content": "<p>Why can't some parameters behind refine A be specially formulated?<br>\nCheck the sorry in theorem \"linearIndependent2_iff''_1\"<br>\n<a href=\"/user_uploads/3121/rteV0GRlykAtOW0ioLdv75RZ/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/rteV0GRlykAtOW0ioLdv75RZ/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/rteV0GRlykAtOW0ioLdv75RZ/image.png\"></a></div><p>Here h3_ and h3 are the same.But in h3_, i cannot use g2(which is a type of  \"ι → R \" too) as the second parameter after \"refine' H\". It is so weird.<br>\nI want to prove it like h3_ because h3_ is a more natural solution.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.LinearIndependent</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.Basis</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.ToLin</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.ColumnRowPartitioned</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Sqrt</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Fin</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Sign</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n\n  <span class=\"kn\">open</span> <span class=\"n\">Function</span> <span class=\"n\">Set</span> <span class=\"n\">Submodule</span> <span class=\"n\">Matrix</span>\n  <span class=\"kn\">open</span> <span class=\"n\">Equiv</span> <span class=\"n\">Equiv.Perm</span> <span class=\"n\">Finset</span> <span class=\"n\">Function</span>\n\n  <span class=\"kn\">open</span> <span class=\"n\">BigOperators</span> <span class=\"n\">Cardinal</span>\n\n  <span class=\"kd\">universe</span> <span class=\"n\">u'</span> <span class=\"n\">u</span>\n\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u'</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">ι'</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">M'</span> <span class=\"n\">M''</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">V'</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n  <span class=\"kn\">section</span> <span class=\"n\">Module</span>\n\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">}</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">Semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">M'</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">M''</span><span class=\"o\">]</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">R</span> <span class=\"n\">M'</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">R</span> <span class=\"n\">M''</span><span class=\"o\">]</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">}</span>\n  <span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">)</span>\n\n  <span class=\"kd\">theorem</span> <span class=\"n\">linearIndependent2_iff''_1</span>\n          <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">),</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">•</span> <span class=\"n\">v</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n          <span class=\"bp\">↔</span>\n          <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">),</span>\n            <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"bp\">∉</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n            <span class=\"bp\">→</span>\n            <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">•</span> <span class=\"n\">v</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">),</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n            <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">classical</span> <span class=\"c1\">-- 可以使用局部变量，比如下面的这个his</span>\n            <span class=\"n\">constructor</span>\n            <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">H</span> <span class=\"n\">s</span> <span class=\"n\">g</span> <span class=\"n\">hg</span> <span class=\"n\">hv</span> <span class=\"n\">i</span>\n              <span class=\"n\">by_cases</span> <span class=\"n\">his</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span>\n              <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">H</span> <span class=\"n\">s</span> <span class=\"n\">g</span> <span class=\"n\">hv</span> <span class=\"n\">i</span> <span class=\"n\">his</span>\n              <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">hg</span> <span class=\"n\">i</span> <span class=\"n\">his</span>\n              <span class=\"c1\">-- have h1 := (if his : i ∈ s then H s g hv i his else hg i his) -- 这里相当于分类讨论了</span>\n              <span class=\"c1\">-- exact h1</span>\n              <span class=\"n\">done</span>\n            <span class=\"bp\">·</span> <span class=\"n\">intros</span> <span class=\"n\">H</span> <span class=\"n\">s</span> <span class=\"n\">g</span> <span class=\"n\">hg</span> <span class=\"n\">i</span> <span class=\"n\">hi</span>\n\n              <span class=\"k\">have</span> <span class=\"n\">h3_</span> <span class=\"o\">:(</span><span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"k\">then</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"k\">else</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n                <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n                <span class=\"n\">by_cases</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span>\n                <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ite_eq_right_iff</span><span class=\"o\">]</span>\n                  <span class=\"n\">intro</span> <span class=\"n\">i2</span>\n                  <span class=\"c1\">-- (fun j =&gt; if j ∈ s2 then g2 j else 0)</span>\n                  <span class=\"n\">refine'</span> <span class=\"n\">H</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">j</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">if</span> <span class=\"n\">j</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"k\">then</span> <span class=\"n\">g</span> <span class=\"n\">j</span> <span class=\"k\">else</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n                  <span class=\"gr\">sorry</span>\n\n              <span class=\"k\">have</span> <span class=\"n\">h3</span> <span class=\"o\">:(</span><span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"k\">then</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"k\">else</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n                <span class=\"o\">:=</span>\n                <span class=\"n\">H</span>\n                <span class=\"n\">s</span>\n                <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">j1</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">if</span> <span class=\"n\">j1</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"k\">then</span> <span class=\"n\">g</span> <span class=\"n\">j1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i2</span> <span class=\"n\">hj</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">if_neg</span> <span class=\"n\">hj</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">ite_smul</span><span class=\"o\">,</span> <span class=\"n\">zero_smul</span><span class=\"o\">,</span> <span class=\"n\">Finset.sum_extend_by_zero</span><span class=\"o\">,</span> <span class=\"n\">hg</span><span class=\"o\">])</span>\n                <span class=\"n\">i</span>\n                <span class=\"c1\">--done</span>\n              <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">h3</span><span class=\"o\">]</span> <span class=\"c1\">-- convert h2 -- 一个意思</span>\n              <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">if_pos</span> <span class=\"n\">hi</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n\n              <span class=\"n\">done</span>\n            <span class=\"n\">done</span>\n\n    <span class=\"kd\">end</span> <span class=\"n\">Module</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 410171780,
        "sender_full_name": "chenjulang",
        "timestamp": 1703692167
    },
    {
        "content": "<p>I think Lean is taking the  previous \"g\" as a default parameter, and don't let me change it???</p>",
        "id": 410171957,
        "sender_full_name": "chenjulang",
        "timestamp": 1703692265
    },
    {
        "content": "<p>Seems the form “:= H _ _ _ _ _”  has More freedom than \":=by refine' H _ _ _ _ _\"</p>",
        "id": 410172590,
        "sender_full_name": "chenjulang",
        "timestamp": 1703692674
    },
    {
        "content": "<p>Any ideas?</p>",
        "id": 410172968,
        "sender_full_name": "chenjulang",
        "timestamp": 1703692847
    },
    {
        "content": "<p>I will use \":= H\" or \":= by exact H\"instead. It is not a problem then..</p>",
        "id": 410239858,
        "sender_full_name": "chenjulang",
        "timestamp": 1703737886
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 410239866,
        "sender_full_name": "Notification Bot",
        "timestamp": 1703737893
    }
]