[
    {
        "content": "<p>Hello,<br>\nI have an Value of an inductive and a proof about the structure of that value. I want to utilize that proof when pattern matching.E.g. I dont want to match a Option against none if i have a proof that it is not none</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">fn</span><span class=\"o\">:</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">v_opt</span><span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"mi\">2</span>\n  <span class=\"k\">let</span> <span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">v_opt.isSome</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">trivial</span>\n  <span class=\"k\">match</span> <span class=\"n\">v_opt</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">v</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">()</span>\n <span class=\"c1\">-- should not require the \"none\" branch with p</span>\n</code></pre></div>",
        "id": 420843416,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1707610034
    },
    {
        "content": "<p>Sometimes if you pass the proof as an additional discriminant Lean can figure it out for you:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">fn</span><span class=\"o\">:</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">v_opt</span><span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"mi\">2</span>\n  <span class=\"k\">let</span> <span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">v_opt.isSome</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">trivial</span>\n  <span class=\"k\">match</span> <span class=\"n\">v_opt</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">()</span>\n</code></pre></div>",
        "id": 420844744,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1707611443
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"684702\">Simon Daniel</span> has marked this topic as resolved.</p>",
        "id": 420974698,
        "sender_full_name": "Notification Bot",
        "timestamp": 1707726783
    }
]