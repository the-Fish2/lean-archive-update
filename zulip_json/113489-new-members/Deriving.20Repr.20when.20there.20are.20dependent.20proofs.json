[
    {
        "content": "<p>I'm unable to use <code>deriving Repr</code> here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">inductive</span><span class=\"w\"> </span><span class=\"n\">ElemOp</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">scalarMul</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Rat</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">hc</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"bp\">≠</span><span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ElemOp</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">rowSwap</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ElemOp</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">rowMulAdd</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Rat</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ElemOp</span>\n<span class=\"c1\">--deriving Repr</span>\n</code></pre></div>\n<p>And it's because of <code>hc : c≠0</code> (if removed, I can use it). Does anyone know a way around this, or another way to make this function \"eval-friendly\"?</p>",
        "id": 443562754,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717914147
    },
    {
        "content": "<p>What does <code>#eval Lean.versionString</code> say? This should be fixed in 4.8.0</p>",
        "id": 443563598,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717914986
    },
    {
        "content": "<p>\"4.8.0-rc1\"</p>",
        "id": 443563617,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717915014
    },
    {
        "content": "<p>Oh right, this was fixed after 4.8.0 (<a href=\"https://github.com/leanprover/lean4/pull/3944\">lean4#3944</a>). It's in 4.9.0-rc1 (which is what the current mathlib uses).</p>",
        "id": 443563728,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717915104
    },
    {
        "content": "<p>Is 4.9.0 now the latest release?</p>",
        "id": 443563768,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717915153
    },
    {
        "content": "<p>4.9.0 doesn't exist yet. It will in a month, once 4.9.0-rc1 has been battle-tested</p>",
        "id": 443563788,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717915188
    },
    {
        "content": "<p>Ahh, I see</p>",
        "id": 443563833,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717915203
    },
    {
        "content": "<p>(rc stands for Release Candidate, if you hadn't clocked it)</p>",
        "id": 443563862,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717915235
    },
    {
        "content": "<p>Yeah I got that</p>",
        "id": 443563882,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717915254
    },
    {
        "content": "<p>So right now the latest release in 4.9.0-rc1, and the latest stable is 4.8.0</p>",
        "id": 443563889,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717915264
    },
    {
        "content": "<p>On a side note, do you have instructions for updating Mathlib? I keep encountering outdated instructions whenever I search for it</p>",
        "id": 443563957,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717915326
    },
    {
        "content": "<p>Always look on leanprover-community or the mathlib README for questions like that</p>",
        "id": 443563985,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717915371
    },
    {
        "content": "<p>This scripts has been failsafe for the two years I've used it: <a href=\"https://github.com/YaelDillies/LeanAPAP/blob/master/scripts/update_mathlib.sh\">https://github.com/YaelDillies/LeanAPAP/blob/master/scripts/update_mathlib.sh</a></p>",
        "id": 443563987,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717915374
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Deriving.20Repr.20when.20there.20are.20dependent.20proofs/near/443563985\">said</a>:</p>\n<blockquote>\n<p>Always look on leanprover-community or the mathlib README for questions like that</p>\n</blockquote>\n<p>In that specific case, it seems my script is strictly better</p>",
        "id": 443564009,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717915395
    },
    {
        "content": "<p>Three options for getting a <code>Repr</code> instance here:</p>\n<ol>\n<li>Write a <code>Repr</code> instance manually.</li>\n<li>Copy the core <code>Repr</code> derive handler into your own project in the meantime.</li>\n<li>Upgrade to 4.9.0-rc1.</li>\n</ol>",
        "id": 443564010,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717915396
    },
    {
        "content": "<p>I think that pointing users to \"random code I wrote once\" is unwise, as in two years' time when you've stopped working on the project and users are randomly searching Zulip the script might fail. If you're not happy with the community instructions then make a PR</p>",
        "id": 443564097,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717915474
    },
    {
        "content": "<p>(@Yaël)</p>",
        "id": 443564155,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717915557
    },
    {
        "content": "<p>My point is I haven't updated this script for two years and it still works</p>",
        "id": 443564253,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717915640
    },
    {
        "content": "<p>I personally think we should make it a script available in mathlib so that downstream users don't have to think about it</p>",
        "id": 443564326,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717915702
    },
    {
        "content": "<p>My point is that you should be wary of advertising your script as \"the right way and better than the community website\" because it might not work in 2 years' time whereas the community web pages will work.</p>",
        "id": 443564393,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717915788
    },
    {
        "content": "<p>Sure, which is why I suggest we make my script the community version</p>",
        "id": 443564517,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717915895
    },
    {
        "content": "<p>I once saw someone posting here some time ago saying  \"I followed the installation instructions on some random xenaproject blog post and now everything is broken\" and I looked at the page and it said in big letters at the top \"THIS PAGE IS OUT OF DATE\" but someone was reading it anyway. I deleted the post entirely.</p>",
        "id": 443564564,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717915926
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Deriving.20Repr.20when.20there.20are.20dependent.20proofs/near/443564517\">said</a>:</p>\n<blockquote>\n<p>Sure, which is why I suggest we make my script the community version</p>\n</blockquote>\n<p>And I'm saying that the canonical way to do this isn't just to say that here but to pass your exam tomorrow (good luck!) and then make a PR</p>",
        "id": 443564625,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717916009
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/Deriving.20Repr.20when.20there.20are.20dependent.20proofs/near/443564010\">said</a>:</p>\n<blockquote>\n<p>Upgrade to 4.9.0-rc1.</p>\n</blockquote>\n<p>Again, not very familiar with the code used to manage Lean and Mathlib versions so I'll have to ask: How do I upgrade Lean4 manually? The VS Code extension says that it was last updated on 2024-06-07. Is there a way to update it using VS Code itself?</p>",
        "id": 443564728,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717916129
    },
    {
        "content": "<p>The vscode extension has a completely different versioning system to Lean/Mathlib. You shouldn't worry about it</p>",
        "id": 443564797,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717916198
    },
    {
        "content": "<p>Okay, but how do I update it to 4.90 rc1?</p>",
        "id": 443567116,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717916819
    },
    {
        "content": "<p>You look at <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/lean-toolchain\">https://github.com/leanprover-community/mathlib4/blob/master/lean-toolchain</a>, copy-paste the content to your <code>lean-toolchain</code> file, run <code>lake -R update</code></p>",
        "id": 443567465,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717916907
    },
    {
        "content": "<p>Okay, I did exactly that and now my imports have failed. Any fix?</p>",
        "id": 443568726,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717917741
    },
    {
        "content": "<p>Can you be more precise in how they failed?</p>",
        "id": 443568749,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717917769
    },
    {
        "content": "<p>Sorry btw the last command should <code>lake -R -K update</code>. It's always incorrect to run <code>-R</code> without <code>-K</code></p>",
        "id": 443568776,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717917807
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Deriving.20Repr.20when.20there.20are.20dependent.20proofs/near/443568749\">said</a>:</p>\n<blockquote>\n<p>Can you be more precise in how they failed?</p>\n</blockquote>\n<p><a href=\"/user_uploads/3121/fDJ3XQX7M-yR575ritMlOBTX/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/fDJ3XQX7M-yR575ritMlOBTX/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/fDJ3XQX7M-yR575ritMlOBTX/image.png\"></a></div>",
        "id": 443568930,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717917956
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Deriving.20Repr.20when.20there.20are.20dependent.20proofs/near/443568776\">said</a>:</p>\n<blockquote>\n<p>Sorry btw the last command should <code>lake -R -K update</code>. It's always incorrect to run <code>-R</code> without <code>-K</code></p>\n</blockquote>\n<p>error : missing command</p>",
        "id": 443569001,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717918012
    },
    {
        "content": "<p>Can you undo the last few operations, bust the <code>.lake</code> folder and run the following commands: <a href=\"https://github.com/YaelDillies/LeanAPAP/blob/master/scripts/update_mathlib.sh\">https://github.com/YaelDillies/LeanAPAP/blob/master/scripts/update_mathlib.sh</a></p>",
        "id": 443569047,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717918060
    },
    {
        "content": "<p>Is it possible to undo commands from the command line?</p>",
        "id": 443569156,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717918164
    },
    {
        "content": "<p>No, but surely you are working on some git repository?</p>",
        "id": 443569178,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717918200
    },
    {
        "content": "<p>Yes</p>",
        "id": 443569232,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717918220
    },
    {
        "content": "<p>I haven't pushed any of these changes though</p>",
        "id": 443569246,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717918236
    },
    {
        "content": "<p>Great, discard them</p>",
        "id": 443569256,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717918245
    },
    {
        "content": "<p>(assuming \"these changes\" doesn't include anything but the failed update)</p>",
        "id": 443569263,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717918260
    },
    {
        "content": "<p>I don't know why, but pulling changes from the online repo isn't working. I copy-pasted the config files from the online repo (hadn't been updated in 3 weeks) and I'm still getting the same error</p>",
        "id": 443569869,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717918897
    },
    {
        "content": "<p>I think my mathlib is messed up. Should I copy-paste another mathlib that I have downloaded in a different folder?</p>",
        "id": 443569967,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717918989
    },
    {
        "content": "<p>Can you delete the local copy of your project and start afresh?</p>",
        "id": 443569984,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717919017
    },
    {
        "content": "<p>Like create a new repository or rewrite all of the code?</p>",
        "id": 443570034,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717919045
    },
    {
        "content": "<p>Delete the local copy of your repository and clone it again</p>",
        "id": 443570054,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717919069
    },
    {
        "content": "<p>Alright, looks like everything is back in working condition again. Thanks for the help!</p>",
        "id": 443571065,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1717920043
    }
]