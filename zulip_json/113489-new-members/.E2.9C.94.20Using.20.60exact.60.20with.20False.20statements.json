[
    {
        "content": "<p>In the natural number game I learned that I could close a proof with <code>exact hA</code> if <code>hA: False</code> because a false premise implies everything, but it does not quite work in VSCode. What am I doing wrong?</p>",
        "id": 422001648,
        "sender_full_name": "Philipp SL Schäfer",
        "timestamp": 1708166743
    },
    {
        "content": "<p>Okay, so I guess I have to use <code>apply False.elim</code> before.</p>",
        "id": 422001998,
        "sender_full_name": "Philipp SL Schäfer",
        "timestamp": 1708166915
    },
    {
        "content": "<p>You can also do <code>cases hA</code></p>",
        "id": 422002032,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1708166968
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"690867\">Philipp SL Schäfer</span> has marked this topic as resolved.</p>",
        "id": 422007737,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708172823
    },
    {
        "content": "<p>I don't remember teaching that in the natural number game -- can you give a reference? <code>exact hA</code> will surely only work if the goal is exactly the type of <code>hA</code>.</p>",
        "id": 422018440,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708182399
    },
    {
        "content": "<p>I saw such things in the Set Theory Game. In a paper proof, one would just say this case is not possible. I can be wrong but I think Lean 4 also jumps to the next case if you get False as one of the hypotheses and use <code> tauto</code> or <code> exact</code>.</p>",
        "id": 422114841,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1708278021
    },
    {
        "content": "<p>I don't think <code>exact</code> will work unless your goal is precisely what you're exacting, that's what <code>exact</code> does. But <code>tauto</code> should certainly close any goal if you have a hypothesis of <code>False</code> because then you can solve the goal by logic, and <code>tauto</code> knows lots of logic facts, it's a far more profound tactic than <code>exact</code>.</p>",
        "id": 422115616,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708278710
    },
    {
        "content": "<p>Yes, <code>tauto</code> works but <code>exact</code> does not.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">False</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">=</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"n\">tauto</span>\n</code></pre></div>",
        "id": 422159559,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1708317731
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> ,  maybe I just mixed things up. Sorry for that!</p>",
        "id": 422465798,
        "sender_full_name": "Philipp SL Schäfer",
        "timestamp": 1708449742
    },
    {
        "content": "<p>there's also the <code>exfalso</code> tactic to switch the goal to <code>False</code></p>",
        "id": 422467260,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1708450141
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"690867\">Philipp SL Schäfer</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Using.20.60exact.60.20with.20False.20statements/near/422001998\">said</a>:</p>\n<blockquote>\n<p>Okay, so I guess I have to use <code>apply False.elim</code> before.</p>\n</blockquote>\n<p>You can write <code>exact hA.elim</code>, which is the same as <code>exact (False.elim hA)</code></p>",
        "id": 422475702,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1708453119
    },
    {
        "content": "<p>I had a pedagogical dilemma deciding what to do with <code>h : False</code> and goal some random thing which wasn't <code>False</code>. I think that in Lean 3 NNG I taught <code>exfalso</code> but in Lean 4 NNG I think I teach <code>cases h</code>.</p>",
        "id": 422496829,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708461357
    },
    {
        "content": "<p>We could make exfalso take an argument for teaching purposes</p>",
        "id": 422826115,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1708611699
    },
    {
        "content": "<p>Not just for teaching purposes: I find that <code>exfalso h</code> is much clearer than <code>exact h.elim</code>!</p>",
        "id": 422826664,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1708611846
    },
    {
        "content": "<p><code>contradiction</code>?</p>",
        "id": 422826727,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708611870
    },
    {
        "content": "<p>Wasn't there a discussion recently about <code>exfalso</code> being able to close a goal, since it used <code>apply</code> rather than <code>refine</code>?  Now this discussion seems to be wanting to go partially back...  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 422826957,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1708611941
    },
    {
        "content": "<p>I think <code>cases h</code> is just better, but certainly <code>exfalso</code> with one argument is better than <code>exfalso</code> with no argument</p>",
        "id": 422827562,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1708612112
    }
]