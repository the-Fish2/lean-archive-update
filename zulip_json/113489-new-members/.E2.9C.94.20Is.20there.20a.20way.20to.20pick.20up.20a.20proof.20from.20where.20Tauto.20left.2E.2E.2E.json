[
    {
        "content": "<p>Sorry, I know that something similar has been asked before but I felt that it wasn't given a definitive answer.</p>",
        "id": 441450098,
        "sender_full_name": "George Kojonis",
        "timestamp": 1717073402
    },
    {
        "content": "<p>How about this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Tactic</span>\n\n<span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">Q</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"bp\">↔</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">∧</span><span class=\"w\"> </span><span class=\"n\">Q</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"c\">/-</span>\n<span class=\"cm\">  tauto -&gt;</span>\n<span class=\"cm\">  unsolved goals</span>\n<span class=\"cm\">case right</span>\n<span class=\"cm\">P Q : Prop</span>\n<span class=\"cm\">⊢ Q</span>\n<span class=\"cm\">  -/</span>\n<span class=\"w\">  </span><span class=\"n\">suffices</span><span class=\"w\"> </span><span class=\"n\">Q</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">tauto</span>\n<span class=\"w\">  </span><span class=\"c1\">-- ⊢ Q</span>\n<span class=\"w\">  </span><span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 441455292,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717075160
    },
    {
        "content": "<p>I guess that's it then cause that was the answer given the previous time pretty much. Thanks</p>",
        "id": 441460691,
        "sender_full_name": "George Kojonis",
        "timestamp": 1717076888
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"720043\">George Kojonis</span> has marked this topic as resolved.</p>",
        "id": 441460697,
        "sender_full_name": "Notification Bot",
        "timestamp": 1717076890
    },
    {
        "content": "<p>I agree that it's annoying that you have to type <code>Q</code> explicitly (because <code>Q</code> might be long in your application) but I can't figure out a way around this.</p>",
        "id": 441461990,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717077273
    },
    {
        "content": "<p>I tried adding a <code>suffa</code> tactic that should allow <code>suffa tauto</code> and produce a <code>Try this</code> with the suffices and proof.</p>",
        "id": 441627221,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1717137293
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12006\">#12006</a></p>",
        "id": 441627320,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1717137343
    },
    {
        "content": "<p>I have not tested it much, though.</p>",
        "id": 441627337,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1717137352
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> That's pretty cool, thanks for sharing, might prove useful</p>",
        "id": 441649019,
        "sender_full_name": "George Kojonis",
        "timestamp": 1717144329
    },
    {
        "content": "<p>It would be a lot more work, but the principled approach is probably to make <code>tauto</code> into a real decision procedure for propositional logic like in Coq (I was suprised to see lean’s isn’t, if I am not mistaken or the docs aren’t up to date), and then allow the user to specify what to do with any leftover leaves of the search tree built by <code>tauto</code> like in Coq’s<code>intuition</code> tactic.  See <a href=\"https://coq.inria.fr/doc/master/refman/proofs/automatic-tactics/logic.html\">here</a></p>",
        "id": 441652963,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1717145529
    }
]