[
    {
        "content": "<p>If I know a=b, what tactic should I use to prove \"∑ k in Icc m n, choose n k * a = ∑ k in Icc m n, choose n k * b\",In fact it is the second sorry in this code</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Choose.Sum</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Factorial.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Nat</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Finset</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">idt4</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">m</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">add_pow</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n  <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">one_add_one_eq_two</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">this</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">idt6_Absorption_Idt</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hkn</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hsk</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span>  <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"k\">have</span> <span class=\"n\">choose_mul_eq_choose_mul</span> <span class=\"o\">:</span>  <span class=\"n\">choose</span> <span class=\"n\">k</span> <span class=\"mi\">1</span>  <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"bp\">=</span> <span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">choose_mul</span> <span class=\"n\">hkn</span> <span class=\"n\">hsk</span><span class=\"o\">]</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">choose_one_right</span><span class=\"o\">,</span> <span class=\"n\">choose_one_right</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">choose_mul_eq_choose_mul</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">choose_mul_eq_choose_mul</span><span class=\"o\">]</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Idt36</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span>  <span class=\"o\">(</span><span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">):=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span>  <span class=\"o\">(</span><span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">induction'</span> <span class=\"n\">m</span> <span class=\"k\">with</span> <span class=\"n\">m</span> <span class=\"n\">ih</span>\n      <span class=\"bp\">·</span> <span class=\"n\">simp</span>\n      <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"n\">d1</span> <span class=\"o\">:</span> <span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">descFactorial_succ</span>\n        <span class=\"k\">have</span> <span class=\"n\">d2</span> <span class=\"o\">:</span> <span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">descFactorial_succ</span>\n        <span class=\"k\">have</span> <span class=\"n\">ih2</span> <span class=\"o\">:</span> <span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">Nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">=</span>  <span class=\"n\">Nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">exact</span> <span class=\"n\">Nat.mul_comm</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">d1</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">d2</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">mul_assoc</span> <span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">ih2</span><span class=\"o\">]</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">ih</span><span class=\"o\">]</span>\n        <span class=\"k\">have</span> <span class=\"n\">d3</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Nat.choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Nat.choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">succ</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">succ</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">idt6_Absorption_Idt</span>\n          <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"n\">l1</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n              <span class=\"n\">exact</span> <span class=\"n\">h1</span>\n            <span class=\"n\">exact</span> <span class=\"n\">Nat.sub_le_sub_right</span> <span class=\"n\">l1</span> <span class=\"n\">m</span>\n          <span class=\"bp\">·</span> <span class=\"gr\">sorry</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">h1</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">Nat.choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">Nat.choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">h3</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">h4</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">Nat.choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simp</span>\n    <span class=\"k\">have</span> <span class=\"n\">d1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">Nat.choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">),</span> <span class=\"n\">Nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"gr\">sorry</span>\n    <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">d1</span><span class=\"o\">]</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">h4</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 416019389,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1705495744
    },
    {
        "content": "<p>Maybe try <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.sum_congr#doc\">docs#Finset.sum_congr</a> ?</p>",
        "id": 416020765,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1705496222
    },
    {
        "content": "<p>Likely <code>rw [h_a_eq_b]</code></p>",
        "id": 416021223,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1705496395
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20prove.20that.20sums.20are.20equal/near/416021223\">said</a>:</p>\n<blockquote>\n<p>Likely <code>rw [h_a_eq_b]</code></p>\n</blockquote>\n<p>The strange thing is that I can't rewrite</p>",
        "id": 416024582,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1705497451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20prove.20that.20sums.20are.20equal/near/416020765\">said</a>:</p>\n<blockquote>\n<p>Maybe try <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.sum_congr#doc\">docs#Finset.sum_congr</a> ?</p>\n</blockquote>\n<p>Thank you for your suggestion. I think my h2 may not be written well enough！</p>",
        "id": 416025071,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1705497576
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631681\">tsuki  hao</span> has marked this topic as resolved.</p>",
        "id": 416026213,
        "sender_full_name": "Notification Bot",
        "timestamp": 1705497876
    },
    {
        "content": "<p>This works for the second <code>sorry</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>        <span class=\"n\">conv</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">enter</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)]</span>\n        <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n        <span class=\"n\">congr</span> <span class=\"mi\">1</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n        <span class=\"n\">exact</span> <span class=\"n\">d3</span>\n</code></pre></div>\n<p>(This can certainly be streamlined a bit...)</p>",
        "id": 416026983,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1705498117
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20How.20to.20prove.20that.20sums.20are.20equal/near/416026983\">said</a>:</p>\n<blockquote>\n<p>This works for the second <code>sorry</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>        <span class=\"n\">conv</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">enter</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)]</span>\n        <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n        <span class=\"n\">congr</span> <span class=\"mi\">1</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n        <span class=\"n\">exact</span> <span class=\"n\">d3</span>\n</code></pre></div>\n<p>(This can certainly be streamlined a bit...)</p>\n</blockquote>\n<p>In fact, after adding the k:N condition to h2, I can use apply? to get a simplified goal, but this goal is wrong, and it is not completely wrong. In fact, this m is very annoying. <span aria-label=\"smiling face with tear\" class=\"emoji emoji-1f972\" role=\"img\" title=\"smiling face with tear\">:smiling_face_with_tear:</span></p>",
        "id": 416027897,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1705498361
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span><span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hk</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hm</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hkm</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span>  <span class=\"o\">(</span><span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"k\">have</span> <span class=\"n\">h2</span><span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">descFactorial</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n <span class=\"gr\">sorry</span>\n<span class=\"n\">refine'</span> <span class=\"n\">sum_congr</span> <span class=\"n\">_</span> <span class=\"k\">fun</span> <span class=\"n\">y</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">h2</span> <span class=\"o\">(</span><span class=\"n\">y</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>That's probably it</p>",
        "id": 416028018,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1705498397
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20How.20to.20prove.20that.20sums.20are.20equal/near/416026983\">said</a>:</p>\n<blockquote>\n<p>This works for the second <code>sorry</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>        <span class=\"n\">conv</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">enter</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)]</span>\n        <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n        <span class=\"n\">congr</span> <span class=\"mi\">1</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n        <span class=\"n\">exact</span> <span class=\"n\">d3</span>\n</code></pre></div>\n<p>(This can certainly be streamlined a bit...)</p>\n</blockquote>\n<p>It's strange that the code will report an error in my program.</p>",
        "id": 416030338,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1705498978
    },
    {
        "content": "<p>I had assumed you wanted to complete the proof of the induction step (thus the identation by 4*2).<br>\nThe goal at the original <code>sorry</code>is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">Nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">Nat.choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>You'll have to split the sum on the left as a sum over <code>Ico 0 m</code> and a sum over <code>Icc m n</code>, show that the first sum is zero (because its terms are) and then use, e.g., <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.sum_congr#doc\">docs#Finset.sum_congr</a> to show that the second some equals the right hand side.</p>",
        "id": 416032819,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1705499669
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20How.20to.20prove.20that.20sums.20are.20equal/near/416032819\">said</a>:</p>\n<blockquote>\n<p>I had assumed you wanted to complete the proof of the induction step (thus the identation by 4*2).<br>\nThe goal at the original <code>sorry</code>is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">Nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">descFactorial</span> <span class=\"n\">k</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">descFactorial</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">Nat.choose</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">m</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>You'll have to split the sum on the left as a sum over <code>Ico 0 m</code> and a sum over <code>Icc m n</code>, show that the first sum is zero (because its terms are) and then use, e.g., <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.sum_congr#doc\">docs#Finset.sum_congr</a> to show that the second some equals the right hand side.</p>\n</blockquote>\n<p>Sorry, I just saw your message. Thank you very much for your suggestion!</p>",
        "id": 416710420,
        "sender_full_name": "tsuki  hao",
        "timestamp": 1705642055
    }
]