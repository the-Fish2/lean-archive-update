[
    {
        "content": "<p>I learnt about <code>↑</code> in <a href=\"https://lean-lang.org/functional_programming_in_lean/type-classes/coercion.html\">Functional Programming in Lean: Coercion</a>, it says:</p>\n<blockquote>\n<p>Additionally, coercions can be manually inserted using an up arrow:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">perhapsPerhapsPerhapsNat</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"o\">(</span><span class=\"n\">Option</span> <span class=\"o\">(</span><span class=\"n\">Option</span> <span class=\"n\">Nat</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"mi\">392</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>In some cases, this can be used to ensure that Lean finds the right instances. It can also make the programmer's intentions more clear.</p>\n</blockquote>\n<p>I never knew what this means concretely and I don't think I have come across any case in which writing <code>↑</code> makes a difference, particularly here are two cases in which I thought it would make a difference, but it doesn't:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">oneS</span> <span class=\"o\">:</span> <span class=\"n\">Subtype</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span>\n<span class=\"kd\">def</span> <span class=\"n\">twoS</span> <span class=\"o\">:</span> <span class=\"n\">Subtype</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span>\n<span class=\"k\">#check</span> <span class=\"bp\">↑</span><span class=\"n\">oneS</span> <span class=\"bp\">+</span> <span class=\"bp\">↑</span><span class=\"n\">twoS</span> <span class=\"c1\">-- fails, doesn't coerce to Nat</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"kd\">def</span> <span class=\"n\">two</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"mi\">2</span>\n<span class=\"k\">#check</span> <span class=\"bp\">↑</span><span class=\"n\">one</span> <span class=\"bp\">+</span> <span class=\"bp\">↑</span><span class=\"n\">two</span> <span class=\"c1\">-- wroks, no coercion is apparent</span>\n</code></pre></div>\n<p>Does anybody know a case in which writing <code>↑</code> changes the meaning of the code? Or is this just meant for the delaborator, which can use this symbol to inform the user that a conversion occurs at this location?</p>",
        "id": 434569723,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1713686902
    },
    {
        "content": "<p>Perhaps <code>(↑(a + b) : \\R)</code> vs <code>((a + b) : \\R)</code></p>",
        "id": 434571055,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713688172
    }
]