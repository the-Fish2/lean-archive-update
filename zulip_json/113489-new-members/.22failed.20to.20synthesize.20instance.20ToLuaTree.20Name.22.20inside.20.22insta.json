[
    {
        "content": "<p>Hi all, in the example below the line maked with \"<code>-- here!</code>\" gives an error... the error is \"<code>failed to synthesize instance ToLuaTree Name</code>\", and I don't know how to fix it because I was trying to define the \"<code>instance : ToLuaTree Name</code>\", and at the line in which the error happens <code>pre</code> is a variable whose type is <code>Name</code>, and so Lean should know that \"<code>toLuaTree pre</code>\" should use exactly the instance that we are tying to define... what is going on? How can I fix that?</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Lean</span>\n<span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">Lean</span>\n<span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">String</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">q</span><span class=\"w\">   </span><span class=\"n\">s</span><span class=\"w\">  </span><span class=\"o\">:=</span><span class=\"w\">     </span><span class=\"s2\">\"</span><span class=\"se\">\\\"</span><span class=\"s2\">\"</span><span class=\"w\"> </span><span class=\"bp\">++</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"bp\">++</span><span class=\"w\"> </span><span class=\"s2\">\"</span><span class=\"se\">\\\"</span><span class=\"s2\">\"</span><span class=\"w\">   </span><span class=\"c1\">-- quote</span>\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">zq</span><span class=\"w\">  </span><span class=\"n\">s</span><span class=\"w\">  </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"s2\">\"[0]=</span><span class=\"se\">\\\"</span><span class=\"s2\">\"</span><span class=\"w\"> </span><span class=\"bp\">++</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"bp\">++</span><span class=\"w\"> </span><span class=\"s2\">\"</span><span class=\"se\">\\\"</span><span class=\"s2\">\"</span><span class=\"w\">   </span><span class=\"c1\">-- zero/quote</span>\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">br</span><span class=\"w\">  </span><span class=\"n\">s</span><span class=\"w\">  </span><span class=\"o\">:=</span><span class=\"w\">      </span><span class=\"s2\">\"{\"</span><span class=\"w\"> </span><span class=\"bp\">++</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"bp\">++</span><span class=\"w\"> </span><span class=\"s2\">\"}\"</span><span class=\"w\">    </span><span class=\"c1\">-- bracket</span>\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">ac</span><span class=\"w\">  </span><span class=\"n\">s</span><span class=\"w\">  </span><span class=\"o\">:=</span><span class=\"w\">     </span><span class=\"s2\">\", \"</span><span class=\"w\"> </span><span class=\"bp\">++</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\">           </span><span class=\"c1\">-- add comma</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">acs</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">strs</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">List</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">join</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">List</span><span class=\"bp\">.</span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"n\">ac</span><span class=\"w\"> </span><span class=\"n\">strs</span><span class=\"o\">)</span>\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">zacs</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">head</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">strs</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">List</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"n\">br</span><span class=\"w\"> </span><span class=\"o\">((</span><span class=\"n\">zq</span><span class=\"w\"> </span><span class=\"n\">head</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">++</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">acs</span><span class=\"w\"> </span><span class=\"n\">strs</span><span class=\"o\">))</span>\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">zconcat</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">zacs</span>\n\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">zconcat</span><span class=\"w\"> </span><span class=\"s2\">\"a\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\">  </span><span class=\"s2\">\"b\"</span><span class=\"o\">,</span><span class=\"w\">   </span><span class=\"s2\">\"c\"</span><span class=\"o\">]</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">zconcat</span><span class=\"w\"> </span><span class=\"s2\">\"a\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"s2\">\"b\"</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"s2\">\"c\"</span><span class=\"o\">]</span>\n\n<span class=\"kn\">class</span><span class=\"w\">      </span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"kn\">where</span><span class=\"w\"> </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">String</span>\n<span class=\"kn\">export</span><span class=\"w\">     </span><span class=\"n\">ToLuaTree</span><span class=\"w\">                 </span><span class=\"o\">(</span><span class=\"n\">toLuaTree</span><span class=\"o\">)</span>\n<span class=\"kn\">instance</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\">     </span><span class=\"kn\">where</span><span class=\"w\"> </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">str</span>\n<span class=\"kn\">instance</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"n\">Int</span><span class=\"w\">        </span><span class=\"kn\">where</span><span class=\"w\"> </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\">   </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">toString</span><span class=\"w\"> </span><span class=\"n\">n</span>\n<span class=\"kn\">instance</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"n\">Nat</span><span class=\"w\">        </span><span class=\"kn\">where</span><span class=\"w\"> </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\">   </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">toString</span><span class=\"w\"> </span><span class=\"n\">n</span>\n\n<span class=\"kn\">instance</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">List</span><span class=\"w\">  </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"kn\">where</span><span class=\"w\"> </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"n\">as</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"o\">(</span><span class=\"n\">zconcat</span><span class=\"w\">  </span><span class=\"s2\">\"[]\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">List</span><span class=\"bp\">.</span><span class=\"n\">map</span><span class=\"w\">   </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"n\">as</span><span class=\"o\">))</span>\n<span class=\"kn\">instance</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Array</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"kn\">where</span><span class=\"w\"> </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"n\">as</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"o\">(</span><span class=\"n\">zconcat</span><span class=\"w\"> </span><span class=\"s2\">\"#[]\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Array</span><span class=\"bp\">.</span><span class=\"n\">map</span><span class=\"w\">  </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"n\">as</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">toList</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"n\">Name</span><span class=\"w\"> </span><span class=\"kn\">where</span><span class=\"w\"> </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"k\">with</span>\n<span class=\"w\">  </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">anonymous</span><span class=\"w\">   </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"s2\">\"(.anon)\"</span>\n<span class=\"w\">  </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"n\">pre</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">zconcat</span><span class=\"w\"> </span><span class=\"s2\">\".str\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"n\">pre</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"o\">]</span><span class=\"w\">   </span><span class=\"c1\">-- here!</span>\n<span class=\"w\">  </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">num</span><span class=\"w\"> </span><span class=\"n\">pre</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\">   </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"s2\">\"(.n)\"</span>\n\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\">  </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"s2\">\"ab\"</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\">  </span><span class=\"n\">toLuaTree</span><span class=\"w\">  </span><span class=\"mi\">42</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\">  </span><span class=\"n\">toLuaTree</span><span class=\"w\">  </span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\">  </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\">  </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"ss\">`Lean</span><span class=\"w\">       </span><span class=\"c1\">-- err</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\">  </span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"ss\">`Lean.Name</span><span class=\"w\">  </span><span class=\"c1\">-- err</span>\n</code></pre></div>",
        "id": 441936047,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1717262620
    },
    {
        "content": "<p>I think you need to define the function separately from the instance</p>",
        "id": 441945996,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717267426
    },
    {
        "content": "<p>Though certainly it would be nice if it just worked</p>",
        "id": 441946125,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717267463
    },
    {
        "content": "<p>Your suggestion worked! Thanks! =)</p>",
        "id": 442119085,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1717372377
    },
    {
        "content": "<p>Here's a trick for being able to use <code>toLuaTree</code> from inside the instance's definition, at the cost of the function being <code>partial</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">partial</span><span class=\"w\"> </span><span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">toLuaTreeName</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Name</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"k\">let</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"n\">Name</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"bp\">⟨</span><span class=\"n\">toLuaTreeName</span><span class=\"bp\">⟩</span>\n<span class=\"w\">  </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"k\">with</span>\n<span class=\"w\">  </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">anonymous</span><span class=\"w\">   </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"s2\">\"(.anon)\"</span>\n<span class=\"w\">  </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"n\">pre</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">zconcat</span><span class=\"w\"> </span><span class=\"s2\">\".str\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">toLuaTree</span><span class=\"w\"> </span><span class=\"n\">pre</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"o\">]</span>\n<span class=\"w\">  </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">num</span><span class=\"w\"> </span><span class=\"n\">pre</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\">   </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"s2\">\"(.n)\"</span>\n\n<span class=\"kn\">instance</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ToLuaTree</span><span class=\"w\"> </span><span class=\"n\">Name</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"bp\">⟨</span><span class=\"n\">toLuaTreeName</span><span class=\"bp\">⟩</span>\n</code></pre></div>\n<p>This trick is useful if you need mutual recursion among your instances.</p>",
        "id": 442124686,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717375988
    }
]