[
    {
        "content": "<p>Is there a way to generate a List from a (possibly infinte) Set so that it includes every element of the Set? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">list_from_set</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n<span class=\"kd\">def</span> <span class=\"n\">lst</span> <span class=\"o\">:=</span> <span class=\"n\">list_from_set</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">}</span>  <span class=\"c1\">-- -&gt; [1,2,3,4]</span>\n<span class=\"kd\">def</span> <span class=\"n\">lst2</span> <span class=\"o\">:=</span> <span class=\"n\">list_from_set</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"c1\">-- -&gt; [list with all Natural numbers &gt; 2]</span>\n</code></pre></div>",
        "id": 426125642,
        "sender_full_name": "Christian K",
        "timestamp": 1710250296
    },
    {
        "content": "<p>there is a Function Finset.toList for Finsets <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Finset/Basic.html#Finset.toList\">docs</a><br>\ni dont know if i remember correctly, but i think Lists have to be finite</p>",
        "id": 426127478,
        "sender_full_name": "Simon Daniel",
        "timestamp": 1710250913
    },
    {
        "content": "<p>Yes, a List is finite</p>",
        "id": 426129798,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710251557
    },
    {
        "content": "<p>Ok, makes sense. I figured out another way to get around using a list, thank you for the clarification.</p>",
        "id": 426130328,
        "sender_full_name": "Christian K",
        "timestamp": 1710251723
    }
]