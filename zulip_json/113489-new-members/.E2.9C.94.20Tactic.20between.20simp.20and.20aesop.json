[
    {
        "content": "<p>Is there a tactic that's a little more powerful than simp but not as heavy as aesop? My specific use case is I have a proof by induction where every case can be solved by applying one of the generated IHs followed by a bunch of <code>assumption</code> to resolve its premises, so I'd like to use a single tactic to cover all those cases. But generally speaking I'm looking for a tactic that doesn't apply any lemmas or constructors or inversions, just tries harder to resolve the goal only with what exists in the context</p>",
        "id": 441071720,
        "sender_full_name": "Jonathan Chan",
        "timestamp": 1716912473
    },
    {
        "content": "<p>Does <code>simpa [IH]</code> work?</p>",
        "id": 441078240,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1716914892
    },
    {
        "content": "<p>Or <code>simp_all</code>?</p>",
        "id": 441078602,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716915038
    },
    {
        "content": "<p>There's  also <code>solve_by_elim</code> and the non-backtracking versions: <a href=\"https://leanprover-community.github.io/mathlib4_docs/Lean/Meta/Tactic/SolveByElim.html#solve-by-elim-apply-rules-and-apply-assumption\">https://leanprover-community.github.io/mathlib4_docs/Lean/Meta/Tactic/SolveByElim.html#solve-by-elim-apply-rules-and-apply-assumption</a></p>",
        "id": 441080590,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1716915859
    },
    {
        "content": "<p><code>simpa [ih]</code> doesn't work (it simplifies but doesn't apply <code>ih</code>), nor adding <code>using ih</code> (since <code>ih</code> has additional premises to be solved by <code>assumption</code>; I was also hoping not having to explicitly name which IH to use because different ones are generated for each case<br>\n<code>simp_all</code> doesn't work either (I'm assuming this is smth like <code>simp [*] at *</code>?)</p>",
        "id": 441091518,
        "sender_full_name": "Jonathan Chan",
        "timestamp": 1716920315
    },
    {
        "content": "<p><code>solve_by_elim</code> works! I'm still reading the documentation but it sounds like the kind of behaviour I was looking for</p>",
        "id": 441091647,
        "sender_full_name": "Jonathan Chan",
        "timestamp": 1716920372
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407610\">Jonathan Chan</span> has marked this topic as resolved.</p>",
        "id": 441092646,
        "sender_full_name": "Notification Bot",
        "timestamp": 1716920764
    }
]