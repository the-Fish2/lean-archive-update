[
    {
        "content": "<p>Hi all,</p>\n<p>I'm a bachelor student at Uni Bonn. I'm really new to Lean and I'm very interested in this language, although I have had a bit of experiences with coq in the past. I was introduced to Lean by a professor, with whom I'm doing my thesis and I'm interested in formalizing the results that we've done in the thesis using Lean. Now I'm using vscode for Lean and somehow I often get the following error code \"The Lean Server has stopped processing this file\". I'd really appreciate it if someone could help me out on this.</p>\n<p>And I apologize if I might be a little bit too picky, but is there any way to stop Lean from type-checking everything in real-time? I'm pretty used to how things worked in coq where I had to press ctrl+enter to evaluate one line. Thank you!</p>",
        "id": 437280592,
        "sender_full_name": "william",
        "timestamp": 1715007572
    },
    {
        "content": "<p>Welcome!</p>",
        "id": 437281182,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715007716
    },
    {
        "content": "<p>Just to check: can you please confirm that you have a local cache for mathlib? (I assume you are working on (top of) mathlib.)</p>",
        "id": 437281317,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715007750
    },
    {
        "content": "<p>Do you get that error at random moments? Or is there some pattern? (Like just after pulling from github.)</p>",
        "id": 437281414,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715007786
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> thank you! I'm still a newbie when it comes to this, how do I check if I have a local cache?<br>\nAnd to answer your second question, yes there seems to be a pattern, at least the one I'm noticing is that when I do \"#print Nat.rec\" (or any other _.rec) the lean server stops processing and I need to restart the file</p>",
        "id": 437281734,
        "sender_full_name": "william",
        "timestamp": 1715007870
    },
    {
        "content": "<p>Could you please run <code>lake exe cache get</code> in the root dir of your project?</p>",
        "id": 437301783,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715014422
    },
    {
        "content": "<p>If that starts downloading things, then you didn't have a cache.</p>",
        "id": 437301801,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715014433
    },
    {
        "content": "<p>This is what I get,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">1</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">some</span> <span class=\"n\">files</span> <span class=\"n\">were</span> <span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">cache.</span>\n<span class=\"n\">This</span> <span class=\"n\">usually</span> <span class=\"n\">means</span> <span class=\"n\">that</span> <span class=\"n\">your</span> <span class=\"kn\">local</span> <span class=\"n\">checkout</span> <span class=\"n\">of</span> <span class=\"n\">mathlib4</span> <span class=\"n\">has</span> <span class=\"n\">diverged</span> <span class=\"k\">from</span> <span class=\"n\">upstream.</span>\n<span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">push</span> <span class=\"n\">your</span> <span class=\"n\">commits</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">branch</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">mathlib4</span> <span class=\"n\">repository</span><span class=\"o\">,</span> <span class=\"n\">CI</span> <span class=\"n\">will</span> <span class=\"n\">build</span> <span class=\"n\">the</span> <span class=\"n\">oleans</span> <span class=\"n\">and</span> <span class=\"n\">they</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">available</span> <span class=\"n\">later.</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">4449</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"mi\">252</span> <span class=\"n\">ms</span>\n</code></pre></div>\n<p>Does this mean I didn't have a cache? It's a little confusing since it says \"Downloaded: 0 file(s)\"</p>",
        "id": 437303682,
        "sender_full_name": "william",
        "timestamp": 1715015136
    },
    {
        "content": "<p>Yeah that means you already had the cache</p>",
        "id": 437304174,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715015339
    },
    {
        "content": "<p>It only tried to download cache for the file that you edited, but it didn't find a cache for that</p>",
        "id": 437304236,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715015366
    },
    {
        "content": "<p>Which version of mathlib are you on? And which version of the VScode extension for Lean 4?</p>",
        "id": 437304366,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715015406
    },
    {
        "content": "<p>The extension is of version v0.0.144, and I sadly have no idea how to check which version of mathlib I'm on. How to do this? Thank you</p>",
        "id": 437305191,
        "sender_full_name": "william",
        "timestamp": 1715015737
    },
    {
        "content": "<p>Please paste the top 5 lines of the output of <code>git log</code></p>",
        "id": 437385962,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715063143
    },
    {
        "content": "<p>Or maybe of <code>git show master</code>, that might be more useful</p>",
        "id": 437385979,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715063160
    },
    {
        "content": "<blockquote>\n<p>And I apologize if I might be a little bit too picky, but is there any way to stop Lean from type-checking everything in real-time?</p>\n</blockquote>\n<p>Pretty sure there was an option to just check the visible code. Not sure where it has gone in the current version of the extension?</p>",
        "id": 437402891,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1715069992
    },
    {
        "content": "<p>I think it existed in the Lean 3 extension.</p>",
        "id": 437403209,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715070109
    }
]