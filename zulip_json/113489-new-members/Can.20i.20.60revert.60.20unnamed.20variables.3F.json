[
    {
        "content": "<p>I happen to have come across a situation where I would like to revert unnamed variables. I prepared a contrived test case below:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">test</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intros</span>\n  <span class=\"c1\">-- QUESTIONS:</span>\n  <span class=\"c1\">-- a) can I `revert a✝` without naming a in `intros a`?</span>\n  <span class=\"c1\">-- b) can I revert all `a`s of type `ℕ`, again without naming them explicitly?</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Is what I want to achieve possible?</p>",
        "id": 432881464,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1712920454
    },
    {
        "content": "<p><code>revert ‹ℕ›</code> works for your first question</p>",
        "id": 432882096,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712920764
    },
    {
        "content": "<p>Amazing. Thank you <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span></p>",
        "id": 432882599,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1712920982
    },
    {
        "content": "<p>Interestingly, my use case uses <code>Option Nat</code> instead of plain <code>Nat</code>. Any idea why this does not work?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">test</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">Nat</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intros</span>\n  <span class=\"n\">revert</span> <span class=\"o\">⟨</span><span class=\"n\">Option</span> <span class=\"n\">Nat</span><span class=\"o\">⟩</span>\n  <span class=\"c1\">-- QUESTION:</span>\n  <span class=\"c1\">-- why does this not work?</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"c1\">-- invalid constructor ⟨...⟩, expected type must be an inductive type</span>\n<span class=\"c1\">--  ?m.128390</span>\n</code></pre></div>\n<p>Option is clearly an inductive type:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Option</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"sd\">/-- No value. -/</span>\n  <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">α</span>\n  <span class=\"sd\">/-- Some value of type `α`. -/</span>\n  <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"o\">(</span><span class=\"n\">val</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">α</span>\n</code></pre></div>",
        "id": 432883443,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1712921391
    },
    {
        "content": "<p>Those are not the same angle brackets</p>",
        "id": 432883556,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712921429
    },
    {
        "content": "<p>Now it works like a charm.</p>",
        "id": 432883670,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1712921485
    },
    {
        "content": "<p>Thank you.</p>",
        "id": 432883677,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1712921489
    }
]