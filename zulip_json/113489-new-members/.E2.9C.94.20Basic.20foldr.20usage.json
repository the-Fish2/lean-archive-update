[
    {
        "content": "<p>I'm trying to understand how to use <code>foldr</code>. In the example below, I want to output the sum of the amounts in the cashflow sequence. My impression (based on ChaptGPT's suggestion <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>) is that something like this should work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Cashflow</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">time</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">amount</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">CashflowSequence</span> <span class=\"o\">:=</span> <span class=\"n\">List</span> <span class=\"n\">Cashflow</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">test_foldr</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">cf</span> <span class=\"o\">:</span> <span class=\"n\">CashflowSequence</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">cf.foldr</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">Cashflow</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">c.amount</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>However that's throwing the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"k\">fun</span> <span class=\"n\">cf</span> <span class=\"n\">init</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">List.foldr</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">c</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Cashflow.amount</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"n\">init</span> <span class=\"n\">cf</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"o\">(</span><span class=\"n\">cf</span> <span class=\"o\">:</span> <span class=\"n\">CashflowSequence</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">?</span><span class=\"n\">m.346</span> <span class=\"n\">cf</span> <span class=\"bp\">→</span> <span class=\"bp\">?</span><span class=\"n\">m.346</span> <span class=\"n\">cf</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"bp\">?</span><span class=\"n\">u.335</span> <span class=\"o\">(</span><span class=\"bp\">?</span><span class=\"n\">u.318</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">?</span><span class=\"n\">u.318</span><span class=\"o\">)</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">ℝ</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"bp\">?</span><span class=\"n\">u.311</span>\n</code></pre></div>",
        "id": 421924097,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1708111432
    },
    {
        "content": "<p>I am not exactly clear what you are trying to do here. Lean is complaining that you have said <code>test_foldr</code> is supposed to be a real using <code>: R</code>, but the body of has a lambda, suggesting that <code>test_foldr</code> is not a real, but rather a function. Is <code>test_foldr</code> supposed to be a real number or a function?</p>",
        "id": 421925694,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1708112038
    },
    {
        "content": "<p>It's supposed to be a real number that is the sum of the amounts in the sequence. (I had misspelled sum as \"some\" before.)</p>",
        "id": 421926037,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1708112143
    },
    {
        "content": "<p>Ok, so it sounds like you want <code>test_foldr</code> to be a function that takes in a sequence and returns a real number which is the sum of the amounts in the sequence.</p>",
        "id": 421926698,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1708112386
    },
    {
        "content": "<p>This?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Cashflow</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">time</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">amount</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">CashflowSequence</span> <span class=\"o\">:=</span> <span class=\"n\">List</span> <span class=\"n\">Cashflow</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">test_foldr</span> <span class=\"o\">(</span><span class=\"n\">cf</span> <span class=\"o\">:</span> <span class=\"n\">CashflowSequence</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">cf.foldr</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">Cashflow</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">c.amount</span> <span class=\"bp\">+</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 421927206,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1708112601
    },
    {
        "content": "<p>Or more simply</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Cashflow</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">time</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">amount</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">CashflowSequence</span> <span class=\"o\">:=</span> <span class=\"n\">List</span> <span class=\"n\">Cashflow</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">test_foldr</span> <span class=\"o\">(</span><span class=\"n\">cf</span> <span class=\"o\">:</span> <span class=\"n\">CashflowSequence</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">cf.map</span> <span class=\"n\">Cashflow.amount</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span>\n</code></pre></div>",
        "id": 421927411,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1708112685
    },
    {
        "content": "<p>The key differences are:</p>\n<ul>\n<li>I included <code>(cf : CashflowSequence)</code> as an argument to <code>test_foldr</code> to make it clear to Lean it's a function</li>\n<li>I reworked the lamda so that it has the right format</li>\n<li>I imported Mathlib so that you have the real numbers</li>\n</ul>",
        "id": 421927671,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1708112795
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245476\">Quinn Culver</span> has marked this topic as resolved.</p>",
        "id": 422068864,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708234346
    }
]