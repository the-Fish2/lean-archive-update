[
    {
        "content": "<p>Can anyone take a shot at explaining what the error \"Unexpected constructor resulting type\" means?</p>\n<p>Context, if useful: I'm attempting to define a hierarchy of types, and write a type judgement relation. So I have:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">GType</span>\n<span class=\"bp\">|</span> <span class=\"n\">Unit</span> <span class=\"o\">:</span> <span class=\"n\">GType</span>\n<span class=\"bp\">|</span> <span class=\"n\">Bool</span> <span class=\"o\">:</span> <span class=\"n\">GType</span>\n<span class=\"bp\">|</span> <span class=\"n\">Str</span> <span class=\"o\">:</span> <span class=\"n\">GType</span>\n<span class=\"bp\">|</span> <span class=\"n\">Trace</span> <span class=\"o\">:</span> <span class=\"n\">GType</span>\n<span class=\"bp\">|</span> <span class=\"n\">Prod</span> <span class=\"o\">:</span> <span class=\"n\">GType</span> <span class=\"bp\">→</span> <span class=\"n\">GType</span> <span class=\"bp\">→</span> <span class=\"n\">GType</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">TType</span>\n<span class=\"bp\">|</span> <span class=\"n\">GType</span> <span class=\"o\">:</span> <span class=\"n\">GType</span> <span class=\"bp\">→</span> <span class=\"n\">TType</span>\n<span class=\"bp\">|</span> <span class=\"n\">Arrow</span> <span class=\"o\">:</span> <span class=\"n\">TType</span> <span class=\"bp\">→</span> <span class=\"n\">TType</span> <span class=\"bp\">→</span> <span class=\"n\">TType</span>\n<span class=\"bp\">|</span> <span class=\"n\">Prod</span> <span class=\"o\">:</span> <span class=\"n\">TType</span> <span class=\"bp\">→</span> <span class=\"n\">TType</span> <span class=\"bp\">→</span> <span class=\"n\">TType</span>\n<span class=\"bp\">|</span> <span class=\"n\">DMonad</span> <span class=\"o\">:</span> <span class=\"n\">GType</span> <span class=\"bp\">→</span> <span class=\"n\">TType</span>\n<span class=\"bp\">|</span> <span class=\"n\">MMonad</span> <span class=\"o\">:</span> <span class=\"n\">TType</span> <span class=\"bp\">→</span> <span class=\"n\">TType</span>\n</code></pre></div>\n<p>But then, a relation rule like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">TypeJudgment</span> <span class=\"o\">:</span> <span class=\"n\">TypingContext</span> <span class=\"bp\">→</span> <span class=\"n\">Term</span> <span class=\"bp\">→</span> <span class=\"n\">TType</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">Type_NonEmptyTrace</span> <span class=\"o\">{</span><span class=\"bp\">Γ</span> <span class=\"o\">:</span> <span class=\"n\">TypingContext</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">t1</span> <span class=\"o\">:</span> <span class=\"n\">Term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t2</span> <span class=\"o\">:</span> <span class=\"n\">Term</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ_1</span> <span class=\"n\">τ_2</span> <span class=\"o\">:</span> <span class=\"n\">TType</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">TypeJudgment</span> <span class=\"bp\">Γ</span> <span class=\"n\">t1</span> <span class=\"n\">τ_1</span> <span class=\"bp\">-&gt;</span>\n    <span class=\"n\">TypeJudgement</span> <span class=\"bp\">Γ</span> <span class=\"n\">t2</span> <span class=\"n\">τ_2</span> <span class=\"bp\">-&gt;</span>\n    <span class=\"n\">TypeJudgement</span> <span class=\"bp\">Γ</span> <span class=\"o\">(</span><span class=\"n\">Term.TraceAppend</span> <span class=\"n\">t1</span> <span class=\"n\">t2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">TType.GType</span> <span class=\"n\">GType.Trace</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>throws this error. I can't quite tell -- if I'm messing up by having these two type universes, and how to fix it.</p>",
        "id": 410701199,
        "sender_full_name": "McCoy",
        "timestamp": 1704095380
    },
    {
        "content": "<p>What is <code>TypingContext</code> and <code>Term</code>? <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 410707973,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704101836
    },
    {
        "content": "<p>I'm pretty sure the issue is that you typo'd <code>TypeJudgment</code> as <code>TypeJudgement</code> - lean will report this error if the constructor is not an arrow resulting in the type being defined</p>",
        "id": 410708143,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704101977
    },
    {
        "content": "<p>This was exactly the issue -- what a dumb mistake, thank you for catching</p>",
        "id": 410740010,
        "sender_full_name": "McCoy",
        "timestamp": 1704129518
    },
    {
        "content": "<p><code>set_option autoImplicit false</code> to avoid this footgun</p>",
        "id": 410763487,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1704147090
    }
]