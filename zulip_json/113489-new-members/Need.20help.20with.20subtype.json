[
    {
        "content": "<p>I am having trouble doing something very basic with subtype and I hope I could get some help.</p>\n<p>In the following, I want <code>quad</code> to be a function that takes a natural number and quadruples it. I want the type signature to be <code>Nat → EvenNat.</code>  How does one fix <code>4 * x</code> to something that Lean will accept?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">EvenNat</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">n</span> <span class=\"bp\">//</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">quad</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">EvenNat</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"c1\">-- Lean naturally complains that this doesn't work.</span>\n</code></pre></div>",
        "id": 425582794,
        "sender_full_name": "Kevin Cheung",
        "timestamp": 1709927582
    },
    {
        "content": "<p>An element of a subtype has two parts: the value (which you already provided in your function) and the proof that the value satisfies the required condition (in this case <code>∃ k : Nat, n = 2 * k</code>). You can write the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">quad</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">EvenNat</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"o\">⟨</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">ring</span><span class=\"o\">⟩⟩</span>\n</code></pre></div>",
        "id": 425599474,
        "sender_full_name": "Paul Rowe",
        "timestamp": 1709928474
    },
    {
        "content": "<p>Ah I see. Thank you!</p>",
        "id": 425599611,
        "sender_full_name": "Kevin Cheung",
        "timestamp": 1709928526
    }
]