[
    {
        "content": "<p>Hello, I am having trouble to use a structure <code>s</code> that inherits from another structure <code>m</code> in contexts where a term of type <code>m</code> is expected. Here is a dummy example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kn\">open</span> <span class=\"n\">MeasureTheory</span> <span class=\"n\">ENNReal</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">DensityMeasure</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">MeasureSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"kd\">extends</span> <span class=\"n\">Measure</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n  <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"bp\">∞</span>\n  <span class=\"n\">d_measurable</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">d</span>\n  <span class=\"n\">lebesgue_density</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">MeasurableSet</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">measureOf</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">volume.withDensity</span> <span class=\"n\">d</span> <span class=\"n\">s</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">test</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MeasureSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">DensityMeasure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∫</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">∂</span><span class=\"n\">μ</span>\n</code></pre></div>\n<p>Is there a way to \"cast\" <code>μ</code> to an actual measure? Thanks a lot!</p>",
        "id": 438449240,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1715634740
    },
    {
        "content": "<p><code>μ.toMeasure</code> is the simplest answer</p>",
        "id": 438449720,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715634913
    },
    {
        "content": "<p>I did not expect something that simple, thank you very much!</p>",
        "id": 438449947,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1715634969
    },
    {
        "content": "<p>Completely off-topic, do you know how can I get the minimal Mathlib's importation for a specific Lean file? I saw that somewhere and I could not find it again...</p>",
        "id": 438450168,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1715635036
    },
    {
        "content": "<p><code>#minimize_imports</code>, i think should work, up to tactics/notation.</p>",
        "id": 438451355,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1715635461
    },
    {
        "content": "<p>Thanks a lot!</p>",
        "id": 438451493,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1715635510
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"635099\">Gaëtan Serré</span> has marked this topic as resolved.</p>",
        "id": 438451497,
        "sender_full_name": "Notification Bot",
        "timestamp": 1715635512
    }
]