[
    {
        "content": "<p>Hi what is the recommended work flow for updating non master branch of mathlib with newest master commit? Personally I prefer rebasing my developing branch on master, but I am also afraid that it messes up for others pulling it.</p>",
        "id": 445504626,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1718770564
    },
    {
        "content": "<p>I type <code>git merge master</code> in my branch and it works fine</p>",
        "id": 445521188,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1718780991
    },
    {
        "content": "<p>There is little point in rebasing because we squash commits anyway when we merge</p>",
        "id": 445528831,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718783774
    },
    {
        "content": "<p>Sure thanks! I will stick to merge rather than rebase too!</p>",
        "id": 445529677,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1718784045
    },
    {
        "content": "<p>I've personally recently switched to using rebase because it helps me stacking PRs on top of each other</p>",
        "id": 445539695,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718787017
    },
    {
        "content": "<p>I don't see why that helps any more than merging?</p>",
        "id": 445560631,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718794204
    },
    {
        "content": "<p>Whichever approach you choose, the key thing is to recover from the rebase that bors does</p>",
        "id": 445560696,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718794225
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/merge.20or.20rebase.20when.20updating.20non-master.20branch.20of.20mathlib.3F/near/445560631\">said</a>:</p>\n<blockquote>\n<p>I don't see why that helps any more than merging?</p>\n</blockquote>\n<p>It lets me drop commits that correspond to dependency PRs that were merged</p>",
        "id": 445560762,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718794252
    },
    {
        "content": "<p>I would say: either way is fine - use whichever you prefer. Merge can be easier; using rebase is useful for e.g. stacked PR. (mathlib squashes each PR before merging, so for each PR there is just one commit merged, containing all the changes. Other open source projects merge all commits separately; in that case, rebase makes the history of commits cleaner.)</p>",
        "id": 445560768,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1718794255
    }
]