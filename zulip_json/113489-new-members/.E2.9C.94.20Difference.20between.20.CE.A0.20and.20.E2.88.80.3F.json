[
    {
        "content": "<p>I was under the impression that ∀ was just a pretty version of the dependent typing symbol to make LEAN look less type theory-ish but it doesn't seem like that's the case in testing something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">ce</span> <span class=\"o\">:</span> <span class=\"n\">c</span><span class=\"o\">),</span> <span class=\"n\">T</span> <span class=\"n\">ce</span>\n<span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">ce</span> <span class=\"o\">:</span> <span class=\"n\">c</span><span class=\"o\">),</span> <span class=\"n\">T</span> <span class=\"n\">ce</span>\n</code></pre></div>\n<p>What is the difference between these two functions?</p>",
        "id": 411337468,
        "sender_full_name": "Linski",
        "timestamp": 1704448308
    },
    {
        "content": "<p>Without a specific import, the symbol <code>Π</code> means nothing in Lean 4.</p>",
        "id": 411337937,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1704448523
    },
    {
        "content": "<p>When the <code>Π</code> notation is available (see <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Util/Delaborators.html\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Util/Delaborators.html</a>), it's exactly the same as <code>∀</code>. The only difference is that the pretty printer chooses <code>∀</code> when the pi type is a proposition.</p>",
        "id": 411338464,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1704448783
    },
    {
        "content": "<p>That is, if the pi type has type <code>Sort u</code> with <code>u = 0</code> then it uses forall notation.</p>",
        "id": 411338597,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1704448827
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"574628\">Linski</span> has marked this topic as resolved.</p>",
        "id": 411338702,
        "sender_full_name": "Notification Bot",
        "timestamp": 1704448869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"574628\">@Linski</span> having this visual distinction between <code>Prop</code> and <code>Type u</code> can be helpful since they have slightly different behavior.</p>",
        "id": 411391431,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1704470108
    }
]