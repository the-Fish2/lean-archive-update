[
    {
        "content": "<p>I have this function to calculate the row echelon form of a matrix, which takes about 15-20 seconds to run for a 3x3. Another function that runs the back substitution phase of gaussian elimination for a matrix does so almost instantly. However, if I make a new function that applies the back substitution function to the output of the row echelon function (essentially giving the row-reduced echelon form of the matrix), it takes 6 minutes to process a 3x3 matrix. What can I do to improve this? <br>\nHere's the file, if anyone wants to have a look: <a href=\"https://github.com/vivek-rj/gauss_elim1/blob/master/GaussElim/ge_test2vec.lean\">https://github.com/vivek-rj/gauss_elim1/blob/master/GaussElim/ge_test2vec.lean</a></p>",
        "id": 441156578,
        "sender_full_name": "Vivek Rajesh Joshi",
        "timestamp": 1716953173
    },
    {
        "content": "<p><a href=\"#narrow/stream/270676-lean4/topic/Simple.20Lean.20programm.20100x.20slower.20than.20equivalent.20Python/near/440744439\">This thread</a> may be of interest.</p>",
        "id": 441158594,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1716954429
    },
    {
        "content": "<p>One take-away form that thread: running your code in #eval can be <em>very</em> slow: compiling your code can speed it up a lot. In other words: that thread's advice definitely looks applicable here. If it's still slow after that, that's much more interesting.</p>",
        "id": 441215663,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716980362
    }
]