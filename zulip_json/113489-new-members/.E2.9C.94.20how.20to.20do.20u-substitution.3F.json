[
    {
        "content": "<p>EDIT 2: Getting closer: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.integral_comp_smul_deriv_Ioi#doc\">docs#MeasureTheory.integral_comp_smul_deriv_Ioi</a> or even better <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.integral_image_eq_integral_abs_det_fderiv_smul#doc\">docs#MeasureTheory.integral_image_eq_integral_abs_det_fderiv_smul</a></p>\n<p>EDIT: I found the <code>intervalIntegral</code> version: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=intervalIntegral.integral_comp_mul_deriv#doc\">docs#intervalIntegral.integral_comp_mul_deriv</a> . Is there an improper version? I only need single variable.</p>\n<p>How should I code up something like the following? Should I use FTC to get an antiderivative and then FTC back using chain-rule like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=HasDerivAt.scomp#doc\">docs#HasDerivAt.scomp</a> ? Or is there a more direct way?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Fourier.FourierTransform</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Real</span> <span class=\"n\">Complex</span> <span class=\"n\">Set</span> <span class=\"n\">MeasureTheory</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NormedSpace</span> <span class=\"n\">ℂ</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">CompleteSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">u_substitution_example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"c1\">-- plus some integrability hypothesis</span>\n    <span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">Ioi</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">f</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">Complex.exp</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Real.exp</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 423231443,
        "sender_full_name": "llllvvuu",
        "timestamp": 1708836365
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"607118\">llllvvuu</span> has marked this topic as resolved.</p>",
        "id": 423247686,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708852722
    }
]