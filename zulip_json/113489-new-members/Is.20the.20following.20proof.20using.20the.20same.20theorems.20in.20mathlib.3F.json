[
    {
        "content": "<p>Hi! Doing exercises of MIL Chapter 4 and using <code>simp</code> in them,<br>\n I am kind of afraid that I am using the same theorems in mathlib when writing <code>simp</code>.<br>\nHow do I konw if this happened or not? The exercises are:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">open</span> <span class=\"n\">Set</span>\n<span class=\"kn\">open</span> <span class=\"n\">Function</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Set</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">mytest1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">⁻¹'</span> <span class=\"bp\">⋃</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">⋃</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"bp\">⁻¹'</span> <span class=\"n\">B</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">ext</span> <span class=\"n\">x</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span>\n  <span class=\"n\">rintro</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩,</span> <span class=\"n\">fx_in_s</span><span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">B</span> <span class=\"n\">i</span><span class=\"o\">⟩</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">use</span> <span class=\"n\">i</span>\n  <span class=\"n\">rintro</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩,</span> <span class=\"n\">fx_in_s</span><span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">B</span> <span class=\"n\">i</span><span class=\"o\">⟩</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">use</span> <span class=\"n\">i</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">mytest2</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">⁻¹'</span> <span class=\"bp\">⋂</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">⋂</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"bp\">⁻¹'</span> <span class=\"n\">B</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">ext</span> <span class=\"n\">x</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span>\n  <span class=\"n\">rintro</span> <span class=\"n\">ax</span>\n  <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"bp\">*</span>\n  <span class=\"n\">intro</span> <span class=\"n\">i</span>\n  <span class=\"n\">apply</span> <span class=\"n\">ax</span>\n  <span class=\"n\">rintro</span> <span class=\"n\">ax</span>\n  <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"bp\">*</span>\n  <span class=\"n\">apply</span> <span class=\"n\">ax</span>\n</code></pre></div>",
        "id": 435423608,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1714061628
    },
    {
        "content": "<p>You can replace <code>simp</code> by <code>simp?</code> to see what Mathlib lemmas were used.</p>",
        "id": 435423863,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714061714
    },
    {
        "content": "<p>Ah it's very  awesome! I saw them showing up:<br>\n<a href=\"/user_uploads/3121/ZAzqy3Q-4r_El3p86fFCQRAg/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ZAzqy3Q-4r_El3p86fFCQRAg/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/ZAzqy3Q-4r_El3p86fFCQRAg/image.png\"></a></div>",
        "id": 435424134,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1714061811
    },
    {
        "content": "<p>Yeah... <code>preimage_iUnion</code> is exactly the same as the first exercise, which is used in simp. It does be kind of a cyclic proof..</p>",
        "id": 435424605,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1714061987
    },
    {
        "content": "<p>You can try the proof without <code>simp</code>. Or you can use <code>simp [-some_lemma]</code> to exclude <code>some_lemma</code> from that simp-call.</p>",
        "id": 435424937,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714062120
    },
    {
        "content": "<p>Yeah I will redo them without using <code>simp</code>. It's too powerful for a beginer hahaha</p>",
        "id": 435425196,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1714062206
    }
]