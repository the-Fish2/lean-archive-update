[
    {
        "content": "<p>Hi all! Earlier today I uploaded my first Lean package - <a href=\"https://github.com/edrx/LuaTreeLean\">https://github.com/edrx/LuaTreeLean</a> - to github, and I announced it <a href=\"#narrow/stream/113489-new-members/topic/Announcement.3A.20LuaTreeLean\">here</a>... but when I tried to make other (mini-)packages that also had only two Lean files, say, A.lean and B.lean, and the second one \"import\"ed the first with \"import A\", then when I opened B.lean in Emacs it always failed with \"unknown package 'A'\"...</p>\n<p>I tried to debug that in two ways. First, by starting with this minimal example, and trying to fix it:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">Rfv</span><span class=\"w\"> </span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">test</span><span class=\"bp\">/</span>\n<span class=\"n\">mkdir</span><span class=\"w\">   </span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">test</span><span class=\"bp\">/</span>\n<span class=\"n\">cd</span><span class=\"w\">      </span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">test</span><span class=\"bp\">/</span>\n\n<span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"bp\">&lt;&lt;'%%%'</span>\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"mi\">42</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">a</span>\n<span class=\"bp\">%%%</span>\n\n<span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"bp\">&lt;&lt;'%%%'</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">A</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">a</span>\n<span class=\"bp\">%%%</span>\n\n<span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lakefile</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"bp\">&lt;&lt;'%%%'</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Lake</span>\n<span class=\"kn\">open</span><span class=\"w\">   </span><span class=\"n\">Lake</span><span class=\"w\"> </span><span class=\"n\">DSL</span>\n<span class=\"n\">package</span><span class=\"w\">  </span><span class=\"n\">A</span>\n<span class=\"n\">lean_lib</span><span class=\"w\"> </span><span class=\"n\">A</span>\n<span class=\"bp\">%%%</span>\n</code></pre></div>\n<p>...then I gave up and tried a second approach: I started with a working case - <a href=\"https://github.com/edrx/LuaTreeLean?tab=readme-ov-file#introduction\">this one</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">Rfv</span><span class=\"w\"> </span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">LuaTreeLean</span><span class=\"bp\">/</span>\n<span class=\"n\">mkdir</span><span class=\"w\">   </span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">LuaTreeLean</span><span class=\"bp\">/</span>\n<span class=\"n\">cd</span><span class=\"w\">      </span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">LuaTreeLean</span><span class=\"bp\">/</span>\n<span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">edrx</span><span class=\"bp\">/</span><span class=\"n\">LuaTreeLean</span><span class=\"w\"> </span><span class=\"bp\">.</span>\n<span class=\"bp\">#</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">find</span><span class=\"bp\">-</span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"s2\">\"/tmp/LuaTreeLean/Test1.lean\"</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>...and then tried deleting files one by one until the error started to appear. But - ta-daa <span aria-label=\"confounded\" class=\"emoji emoji-1f616\" role=\"img\" title=\"confounded\">:confounded:</span><span aria-label=\"confounded\" class=\"emoji emoji-1f616\" role=\"img\" title=\"confounded\">:confounded:</span><span aria-label=\"confounded\" class=\"emoji emoji-1f616\" role=\"img\" title=\"confounded\">:confounded:</span> - it turned out that that \"working case\" doesn't always work, and now my guess is that the LSP server is getting confused because some information that it stored elsewhere sometimes becames inconsistent...</p>\n<p>How do I debug that? Or: how do I make an \"import\" run more verbosely? And how do I reset the LSP server in Emacs? And: can I run these tests from a shell, by doing something like \"lake build; lake B.lean\"? How? All pointers welcome, thanks in advance, etc...</p>",
        "id": 443625752,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1717959801
    },
    {
        "content": "<p>Now there's a cleaner version of that question, with more links and a screenshot, here:</p>\n<p><a href=\"http://anggtwu.net/eev-lean4.html#import\">http://anggtwu.net/eev-lean4.html#import</a><br>\n<a href=\"http://anggtwu.net/IMAGES/2024-import-problem.png\">http://anggtwu.net/IMAGES/2024-import-problem.png</a></p>\n<div class=\"message_inline_image\"><a href=\"http://anggtwu.net/IMAGES/2024-import-problem.png\"><img src=\"https://uploads.zulipusercontent.net/98d58a4b2345f64a0a2f5693d9753b24063c76de/687474703a2f2f616e67677477752e6e65742f494d414745532f323032342d696d706f72742d70726f626c656d2e706e67\"></a></div><p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>, is there something that I am missing? Do I need to add more ways to call lake and lean at the end of my snippet? Which ones? Should I report that as a bug? Where?...</p>",
        "id": 443666037,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1717983692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"381195\">@Eduardo Ochs</span> To <code>import B</code> in a project, you need a <code>lean_lib B</code> in the project's <code>lakefile.lean</code>. The <code>lean_lib A</code> invocation allows you to import modules starting with an <code>A</code> prefix (i.e., <code>A.*</code>). For example, the files <code>A.lean</code> or <code>A/Basic.lean</code>.</p>",
        "id": 443666792,
        "sender_full_name": "Mac Malone",
        "timestamp": 1717984338
    },
    {
        "content": "<p>That's exactly what I am doing - my A.lean doesn't depend on anything, and my B.lean starts with \"import A\"... check the code in the beige rectangle here:<br>\n<a href=\"http://anggtwu.net/eev-lean4.html#import\">http://anggtwu.net/eev-lean4.html#import</a></p>",
        "id": 443667709,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1717985068
    },
    {
        "content": "<p>Oh, sorry, I misread. <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span></p>",
        "id": 443671786,
        "sender_full_name": "Mac Malone",
        "timestamp": 1717988386
    },
    {
        "content": "<p>As for the screen shot, the problem there is that you are running <code>B.lean</code> via <code>lean B.lean</code> which does not use Lake (or its project configuration) at all. To give Lean the Lake informaiton, you can run <code>lake env lean B.lean</code> (or <code>lake lean B.lean</code>) instead.</p>",
        "id": 443671906,
        "sender_full_name": "Mac Malone",
        "timestamp": 1717988433
    },
    {
        "content": "<p>Thanks!!! That - \"lake env lean B.lean\" - solves one of my questions, and is an indication that everything is right with my files B.lean and lakefile.lean... but when I open B.lean in Emacs it is still saying \"unknown package 'A'\"...</p>",
        "id": 443674517,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1717990032
    },
    {
        "content": "<p>But I just found this:<br>\n<a href=\"https://github.com/leanprover/lean4/blob/master/src/Lean/Server/README.md\">https://github.com/leanprover/lean4/blob/master/src/Lean/Server/README.md</a><br>\nlet me see what I can get by turning its debugging flags on. Thanks! =)</p>",
        "id": 443674581,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1717990079
    },
    {
        "content": "<p>Sadly, I do not use Emacs, so I am not much help in debugging Emacs LSP issues. I am not sure who is the best Emacs guru here, but <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> may be able to help.</p>",
        "id": 443682622,
        "sender_full_name": "Mac Malone",
        "timestamp": 1717995191
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span>!<br>\nI just discovered <a href=\"https://github.com/emacs-lsp/lsp-mode/blob/master/lsp-mode.el#L2629\">lsp-describe-session</a>... here's what it shows in a case in which the \"import A\" in B.lean gives an error:</p>",
        "id": 443782428,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718029233
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/tkOBAJowrVcq5_igd1fW-HoT/sshot.png\">sshot.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/tkOBAJowrVcq5_igd1fW-HoT/sshot.png\" title=\"sshot.png\"><img src=\"/user_uploads/3121/tkOBAJowrVcq5_igd1fW-HoT/sshot.png\"></a></div>",
        "id": 443782855,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718029369
    },
    {
        "content": "<p>I often use <code>/tmp/a.lean</code> as a scratch .lean file for quick tests, and in the screenshot the window at the right, that was generated by <code>(lsp-describe-session)</code>, is saying that both <code>/tmp/import-test/B.lean</code> and <code>/tmp/a.lean</code> are being watched by the same server (&lt;- is that the right term?), <code>lean4-lsp:318258</code>...</p>",
        "id": 443785059,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718030019
    },
    {
        "content": "<p>And the buffer <code>*lean4-lsp::stderr*</code> contains this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">such</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"n\">file</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">./</span><span class=\"n\">lakefile</span><span class=\"bp\">.</span><span class=\"n\">lean</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">configuration</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">falling</span><span class=\"w\"> </span><span class=\"n\">back</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">plain</span><span class=\"w\"> </span><span class=\"ss\">`lean</span><span class=\"w\"> </span><span class=\"c1\">--server`</span>\n</code></pre></div>\n<p>I do have a <code>/tmp/import-test/lakefile.lean</code> and I don't have a <code>/tmp/lakefile.lean</code>.<br>\nDoes that help?</p>",
        "id": 443785249,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718030071
    },
    {
        "content": "<p>Things are set up to assume that there is a project with a <code>lakefile.lean</code> or <code>lakefile.toml</code> (and a <code>lean-toolchain</code>). Without those it isn't clear which <code>lean</code> exe to run and with what arguments.</p>\n<p>This comes up a lot! It's <em>not</em> stupid to expect things to work on any old file lying around. But things do not.</p>",
        "id": 443786590,
        "sender_full_name": "Richard Copley",
        "timestamp": 1718030480
    },
    {
        "content": "<p>I think that I've solved the problem - in a dirty way, but whatever...<br>\nOne low-level way of inspecting the directories of the current session is by running this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">lsp</span><span class=\"bp\">-</span><span class=\"n\">session</span><span class=\"bp\">-</span><span class=\"n\">folders</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">lsp</span><span class=\"bp\">-</span><span class=\"n\">session</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>That list of directories is one of the things that is saved in <code>~/.emacs.d/.lsp-session-v1</code> - a.k.a. <code>lsp-session-file</code>. I tried to find the \"right\" way to delete directories from there, then gave up after a few minutes, deleted that file, and added some directories again by visiting <code>/tmp/import-test/B.lean</code> and <code>/tmp/a.lean</code> in different orders, with and without a <code>/tmp/lakefile.lean</code>.</p>\n<p>Thanks!</p>",
        "id": 443856990,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718050970
    }
]