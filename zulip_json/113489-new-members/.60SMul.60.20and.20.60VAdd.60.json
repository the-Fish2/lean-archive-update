[
    {
        "content": "<p>What does the <code>V</code> stand for in <code>VAdd</code> and <code>+ᵥ</code>? Can it (whatever it is) be said in the module docstring for <code>Mathlib.Algebra.Group</code>? Would it be terribly insulting to the community to demolish this shibboleth?<br>\nCurrently, that docstring says</p>\n<blockquote>\n<p>We also introduce notation classes <code>lul</code> and <code>VAdd</code> for multiplicative and additive<br>\nactions and register the following instances: [...]</p>\n</blockquote>\n<p>[<em>sic</em>]</p>",
        "id": 412801555,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705226856
    },
    {
        "content": "<p>I believe it stands for \"vector\", but I'm not certain</p>",
        "id": 412806256,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1705230994
    },
    {
        "content": "<p>Historically did it come from the development of Euclidean geometry? Euclid didn't have a zero in his plane, but you can still translate a point or triangle or whatever by a vector, hence \"add a vector\" to a point in the Euclidean plane and get another point in the Euclidean plane.</p>",
        "id": 412809667,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705234101
    },
    {
        "content": "<p>Makes sense. Thanks!</p>",
        "id": 412811128,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705235560
    },
    {
        "content": "<p>Though in practice, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=EuclideanSpace#doc\">docs#EuclideanSpace</a> does have a zero after all!</p>",
        "id": 412813481,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1705237664
    },
    {
        "content": "<p>Yeah but there's something which people use which doesn't have a zero, I've just called it the wrong thing</p>",
        "id": 412842273,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705262769
    },
    {
        "content": "<p>A G-torsor</p>",
        "id": 412842300,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705262795
    },
    {
        "content": "<p>You used the right name, according to at least one book I have. Mathematicians' Euclidean space doesn't have a distinguished origin.</p>",
        "id": 412842350,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705262873
    },
    {
        "content": "<p>In practice I think the only use of this \"no zero\" behavior in mathlib is for affine subspaces</p>",
        "id": 412901121,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1705304757
    },
    {
        "content": "<p>There's definitely more mathematically meaningful applications of add torsors (eg connections on manifolds), but we haven't reached them yet.</p>",
        "id": 412932307,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705316414
    },
    {
        "content": "<p>There's also a fundamental link between torsors and cohomology groups which we're getting close to.</p>",
        "id": 412950423,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705323017
    },
    {
        "content": "<p>Maybe it's a bit too involved to explain in the module docstring?<br>\nIt would still be good to fix the recent accidental damage (<code>lul</code> for <code>SMul</code>). I could PR that and add this sentence at the same time:<br>\n\"<code>SMul</code> is intended to be used for scalar multiplication-like operators; a motivating example of the intended usage of <code>VAdd</code> is the action of a vector space on Euclidean space, where the result of adding to a point a vector is a point.\"</p>",
        "id": 412988763,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705334691
    },
    {
        "content": "<p>/poll Question<br>\nJust fix the damge<br>\nFix the damage and add that sentence too<br>\nWait until the file needs changing and fix the damage then</p>",
        "id": 412989121,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705334807
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/9776\">#9776</a>. I revised the wording so it is more obvious that this is a note about the names, rather than a new normative convention about intended usage.</p>",
        "id": 413135013,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705404777
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"400544\">Richard Copley</span> <a href=\"#narrow/stream/113489-new-members/topic/.60SMul.60.20and.20.60VAdd.60/near/413135013\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/9776\">#9776</a>. I revised the wording so it is more obvious that this is a note about the names, rather than a new normative convention about intended usage.</p>\n</blockquote>\n<p>Would anyone like to review? It shouldn't take a second. <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>? <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>?</p>",
        "id": 416598000,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705592494
    },
    {
        "content": "<p>My concern is that you are using \"Euclidean space\" in the way I used it, which is apparently not the way it's used in mathlib</p>",
        "id": 416618175,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705599036
    },
    {
        "content": "<p>Looks like you should be talking about an additive torsor for a vector space, (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddTorsor#doc\">docs#AddTorsor</a>) rather than Euclidean space (which as Eric pointed out _does_ have a zero)</p>",
        "id": 416619994,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705599703
    },
    {
        "content": "<p>You could use VAdd for that nevertheless, right? I didn't mention the torsor aspect. The example needs to be vector-addition based, or else it would miss the point and be better omitted.</p>",
        "id": 416627849,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705602826
    },
    {
        "content": "<p>A torsor for a vector space is what you get if you remove the 0 from the vector space.</p>",
        "id": 416640684,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705608155
    },
    {
        "content": "<p>Not really; you just do not fix an origin (no point gets removed).</p>",
        "id": 416641167,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1705608351
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/.60SMul.60.20and.20.60VAdd.60/near/416640684\">said</a>:</p>\n<blockquote>\n<p>A torsor for a vector space is what you get if you remove the 0 from the vector space.</p>\n</blockquote>\n<p>Yes, but I'm not sure it's relevant whether the origin is fixed or not, in the context. The example only needs to be an additive action and to motivate the <code>VAdd</code> name. I think mentioning torsors would be distracting. The idea was just to avoid leaving the user wondering what the V means.</p>\n<p>What about if I remove the word Euclidean and just say \"a space\"?</p>",
        "id": 416643730,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705609427
    },
    {
        "content": "<p>How about \"an affine space, such as the Euclidean plane\"?</p>",
        "id": 416644552,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1705609777
    },
    {
        "content": "<p>Hmm, but those are two different things. In Kleinian geometry (<a href=\"https://en.wikipedia.org/wiki/Erlangen_program\">Erlangen program</a>), a Euclidean space pairs up with the group of isometries, an affine space with the affine group. Seems confusing.</p>",
        "id": 416645046,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705609969
    },
    {
        "content": "<p>A better link for that point: <a href=\"https://en.wikipedia.org/wiki/Klein_geometry#Examples\">https://en.wikipedia.org/wiki/Klein_geometry#Examples</a></p>",
        "id": 416646246,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705610503
    },
    {
        "content": "<p>I'm happy with pretty much anything -- I was just uneasy about writing \"Euclidean space\" when mathlib uses this to mean a vector space, and somehow the point was to talk about vector spaces acting on something which wasn't a vector space.</p>",
        "id": 416668608,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705621128
    },
    {
        "content": "<p>Thanks for the attention and input! I'm vacillating but currently I think I'm happy with what's there now. But there's no rush to decide.</p>",
        "id": 416669059,
        "sender_full_name": "Richard Copley",
        "timestamp": 1705621381
    },
    {
        "content": "<p>A few sleeps later, nothing much better has occurred to me. <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, if you're still happy with it (or at least acquiescent <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>), will you say so on the PR please?</p>",
        "id": 417431957,
        "sender_full_name": "Richard Copley",
        "timestamp": 1706011698
    },
    {
        "content": "<p>My concern is still the same -- you are using \"Euclidean space\" to mean something which isn't <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=EuclideanSpace#doc\">docs#EuclideanSpace</a> and I think that this is confusing in this context. That's just my personal opinion but it hasn't changed. Why not say \"additive torsor\" instead, which is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddTorsor#doc\">docs#AddTorsor</a> ?</p>",
        "id": 417432612,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706011936
    },
    {
        "content": "<p>I take your point. But I'd like the note to satisfy anyone who stumbles on it by control-clicking on <code>+ᵥ</code>, and I'd rather not assume this hypothetical person knows about torsors.  How does this strike you?</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>An informal motivating example for the name `VAdd` (vector addition) is the action by translation of a vector space.\n</code></pre></div>",
        "id": 417437018,
        "sender_full_name": "Richard Copley",
        "timestamp": 1706013543
    },
    {
        "content": "<p>Sure, that's fine</p>",
        "id": 417451261,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706018353
    },
    {
        "content": "<p>Changed to \"See the module <code>Algebra.AddTorsor</code> for a motivating example for the name <code>VAdd</code> (vector addition)`.\"</p>",
        "id": 417480186,
        "sender_full_name": "Richard Copley",
        "timestamp": 1706026549
    }
]