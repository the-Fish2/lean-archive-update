[
    {
        "content": "<p>Hello, I want to show that given (i: Fin 1), then i = 0. I was able to prove it via the following code, but I refuse to believe that this is the most concise way to do it. Does anybody have a better proof?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">silly</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">i.1</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">i.1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">i.2</span>\n    <span class=\"n\">linarith</span>\n  <span class=\"k\">have</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rfl</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">t</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Fin.eq_of_val_eq</span> <span class=\"n\">h</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 437941812,
        "sender_full_name": "Bashir",
        "timestamp": 1715328417
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">silly</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Fin.fin_one_eq_zero</span> <span class=\"n\">i</span>\n</code></pre></div>",
        "id": 437942228,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1715328596
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260921\">Markus Himmel</span> <a href=\"#narrow/stream/113489-new-members/topic/Fin.201.20has.20a.20unique.20element/near/437942228\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">silly</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Fin.fin_one_eq_zero</span> <span class=\"n\">i</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>This is exactly what I need, thank you</p>",
        "id": 437942388,
        "sender_full_name": "Bashir",
        "timestamp": 1715328670
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"709197\">Bashir</span> has marked this topic as resolved.</p>",
        "id": 437942409,
        "sender_full_name": "Notification Bot",
        "timestamp": 1715328683
    },
    {
        "content": "<p><code>by exact?</code> is always worth trying for simple things like this.</p>",
        "id": 437942412,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1715328685
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260921\">Markus Himmel</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Fin.201.20has.20a.20unique.20element/near/437942412\">said</a>:</p>\n<blockquote>\n<p><code>by exact?</code> is always worth trying for simple things like this.</p>\n</blockquote>\n<p>I see, thank you for the advice</p>",
        "id": 437942467,
        "sender_full_name": "Bashir",
        "timestamp": 1715328715
    },
    {
        "content": "<p>You can also solve a lot of Fin/Finset goals with the <code>fin_cases</code> tactic</p>",
        "id": 438140162,
        "sender_full_name": "llllvvuu",
        "timestamp": 1715468647
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">silly</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">Subsingleton.elim</span> <span class=\"n\">i</span> <span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 438141924,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715471325
    }
]