[
    {
        "content": "<p>Is there an encyclopedic list of Lean 4 tactics? I expect I am not looking in the right places...</p>",
        "id": 439268892,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1715968684
    },
    {
        "content": "<p>A slightly out-of-date one is <a href=\"https://github.com/haruhisa-enomoto/mathlib4-all-tactics/blob/main/all-tactics.md\">https://github.com/haruhisa-enomoto/mathlib4-all-tactics/blob/main/all-tactics.md</a></p>",
        "id": 439269730,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715968949
    },
    {
        "content": "<p>Thank you, Kevin. Sorry for the multi-post!</p>",
        "id": 439270115,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1715969101
    },
    {
        "content": "<p>I'm pretty sure someone else did a more recent version. I think that perhaps the only reason this isn't on some official site is that people haven't figured out how to auto-update it.</p>",
        "id": 439270578,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715969307
    },
    {
        "content": "<p>If I‚Äôm not mistaken, the stuff in <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Tactic.html\">Mathlib.Tactic</a> should in fact be all the tactics (note that the file itself won‚Äôt appear to contain anything in the docs, but everything is in the subdirectory on the left)</p>",
        "id": 439271968,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1715969960
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"466290\">@Luigi Massacci</span> There are more tactics in Lean and in Std beyond those.</p>\n<p>We really need the documentation to show an encyclopedic list of all the tactics. The information is inside all the compiled files somewhere, but the work needs to be done.</p>",
        "id": 439276037,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715971839
    },
    {
        "content": "<p>When there is a canonical answer, put it here: <a href=\"https://proofassistants.stackexchange.com/q/3986/122\">https://proofassistants.stackexchange.com/q/3986/122</a></p>",
        "id": 439276466,
        "sender_full_name": "Jason Rute",
        "timestamp": 1715972049
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.204.20tactics.20list/near/439276037\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"466290\">Luigi Massacci</span> There are more tactics in Lean and in Std beyond those.</p>\n</blockquote>\n<p>and I used <code>omega</code> this morning tooü§¶üèª‚Äç‚ôÇÔ∏è</p>",
        "id": 439277017,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1715972318
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span> : I can also delete that stackexchange post if it is better to collect things here. Just let me know.</p>",
        "id": 439278343,
        "sender_full_name": "Jon Bannon",
        "timestamp": 1715972908
    },
    {
        "content": "<p>I think having a non Zulip answer is probably a good idea</p>",
        "id": 439278458,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1715972973
    }
]