[
    {
        "content": "<p>Why can't lean4 calculate it for us ?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Perm.Fin</span>\n<span class=\"kn\">open</span> <span class=\"n\">Equiv</span> <span class=\"n\">Perm</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">swaptest</span> <span class=\"o\">:</span><span class=\"n\">Perm</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">8</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">*</span>\n <span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span><span class=\"o\">)</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">computeSwapTest</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span><span class=\"n\">Fin</span> <span class=\"mi\">8</span><span class=\"o\">):</span> <span class=\"n\">swaptest</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">i</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n<span class=\"k\">#eval</span> <span class=\"n\">swaptest</span> <span class=\"mi\">0</span> <span class=\"c1\">-- 0</span>\n<span class=\"k\">#eval</span> <span class=\"n\">swaptest</span> <span class=\"mi\">1</span> <span class=\"c1\">-- 1</span>\n<span class=\"k\">#eval</span> <span class=\"n\">swaptest</span> <span class=\"mi\">2</span> <span class=\"c1\">-- 2</span>\n<span class=\"k\">#eval</span> <span class=\"n\">swaptest</span> <span class=\"mi\">3</span> <span class=\"c1\">-- 3</span>\n<span class=\"k\">#eval</span> <span class=\"n\">swaptest</span> <span class=\"mi\">4</span> <span class=\"c1\">-- 4</span>\n<span class=\"k\">#eval</span> <span class=\"n\">swaptest</span> <span class=\"mi\">5</span> <span class=\"c1\">-- 5</span>\n<span class=\"k\">#eval</span> <span class=\"n\">swaptest</span> <span class=\"mi\">6</span> <span class=\"c1\">-- 6</span>\n<span class=\"k\">#eval</span> <span class=\"n\">swaptest</span> <span class=\"mi\">7</span> <span class=\"c1\">-- 7</span>\n</code></pre></div>",
        "id": 423963351,
        "sender_full_name": "chenjulang",
        "timestamp": 1709191784
    },
    {
        "content": "<p>What do you mean?  The <code>#eval</code>s all seem to work.  If it is a proof of the lemma that you want, then this works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">computeSwapTest</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">:</span><span class=\"n\">Fin</span> <span class=\"mi\">8</span><span class=\"o\">):</span> <span class=\"n\">swaptest</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">i</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">fin_cases</span> <span class=\"n\">i</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 423963971,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709192158
    },
    {
        "content": "<p>I'll try</p>",
        "id": 423964052,
        "sender_full_name": "chenjulang",
        "timestamp": 1709192183
    },
    {
        "content": "<p>Why \"apply?\" gives me no hints?</p>",
        "id": 423964131,
        "sender_full_name": "chenjulang",
        "timestamp": 1709192235
    },
    {
        "content": "<p>Thanks~~</p>",
        "id": 423964154,
        "sender_full_name": "chenjulang",
        "timestamp": 1709192250
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> has marked this topic as resolved.</p>",
        "id": 423964164,
        "sender_full_name": "Notification Bot",
        "timestamp": 1709192256
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"665035\">chenjulang</span> <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20swaptest.20i.20.3D.20i.20.3F/near/423964131\">said</a>:</p>\n<blockquote>\n<p>Why \"apply?\" gives me no hints?</p>\n</blockquote>\n<p>Because it finds no lemma that applies to the current situation.</p>",
        "id": 423964240,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709192284
    },
    {
        "content": "<p>One more question:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">i</span><span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"bp\">↑</span><span class=\"mi\">8</span>\n<span class=\"n\">h1</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span> <span class=\"bp\">*</span> <span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span> <span class=\"bp\">*</span> <span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span> <span class=\"bp\">*</span> <span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span>\n        <span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span> <span class=\"bp\">*</span>\n      <span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span><span class=\"o\">)</span>\n    <span class=\"n\">i</span> <span class=\"bp\">=</span>\n  <span class=\"n\">i</span>\n<span class=\"bp\">⊢</span> <span class=\"bp\">↑</span><span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n      <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span><span class=\"o\">)</span>\n        <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span><span class=\"o\">)</span>\n          <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n            <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span><span class=\"o\">)</span>\n              <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">swap</span> <span class=\"mi\">6</span> <span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">))))))))))))</span> <span class=\"bp\">=</span>\n  <span class=\"bp\">↑</span><span class=\"n\">i</span>\n</code></pre></div>",
        "id": 423964281,
        "sender_full_name": "chenjulang",
        "timestamp": 1709192315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span>  h1 seems the same as the Goal, right?</p>",
        "id": 423964388,
        "sender_full_name": "chenjulang",
        "timestamp": 1709192347
    },
    {
        "content": "<p>I do not think that what you sent is enough information to find this out: as you saw in your earlier messages, without a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>, it is very hard to diagnose issues.</p>",
        "id": 423964602,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709192467
    },
    {
        "content": "<p>em...I'll try</p>",
        "id": 423964645,
        "sender_full_name": "chenjulang",
        "timestamp": 1709192493
    }
]