[
    {
        "content": "<p>Hi all, I was wondering if there is a tactic sequence that would solve this without prior knowledge of bounds:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Pi.Bounds</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">Real.pi</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">10</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">15</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">10</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span>\n  <span class=\"n\">linarith</span><span class=\"o\">[</span><span class=\"n\">Real.pi_lt_315</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 418189392,
        "sender_full_name": "André Hernández-Espiet (Rutgers)",
        "timestamp": 1706230460
    },
    {
        "content": "<p>This might be the not-yet-existing <code>by_approx</code> tactic that people have been occasionally discussing.</p>",
        "id": 418208604,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706241746
    },
    {
        "content": "<p>Yes, search for <code>approx</code> on Zulip</p>",
        "id": 418229829,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1706257234
    },
    {
        "content": "<p><code>by_approx</code> is at <a href=\"https://github.com/leanprover-community/mathlib4/pull/8949\">#8949</a></p>",
        "id": 418233483,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706258953
    }
]