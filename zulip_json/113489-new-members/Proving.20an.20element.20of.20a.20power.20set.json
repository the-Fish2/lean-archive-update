[
    {
        "content": "<p>How would I prove this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"bp\">∈</span> <span class=\"n\">Finset.powerset</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 419131341,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1706738658
    },
    {
        "content": "<p>apply? and simp? are running out of heartbeats when trying to find a theorem that solves it</p>",
        "id": 419131416,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1706738690
    },
    {
        "content": "<p>Do we have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.mem_powerset#doc\">docs#Finset.mem_powerset</a> or <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.mem_powerset_iff#doc\">docs#Finset.mem_powerset_iff</a> ?</p>",
        "id": 419132326,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706739034
    },
    {
        "content": "<p>Yeah we have the first one. So the answer to your question is \"guess what the relevant lemma is called, and then check it's there and rewrite or apply it depending on whether it's a &lt;-&gt; or a -&gt;\"</p>",
        "id": 419132423,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706739081
    },
    {
        "content": "<p><code>by decide</code> works here, but Kevin's solution works more generally</p>",
        "id": 419132652,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706739185
    },
    {
        "content": "<p>It works now:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">Finset.powerset</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">})</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Finset.mem_powerset.mpr</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">*</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>But why could apply? not find the lemma?</p>",
        "id": 419132913,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1706739296
    },
    {
        "content": "<p>Actually, <code>apply?</code> is instantaneous on the Lean server, but it outputs:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">exact</span>\n    <span class=\"n\">List.Mem.tail</span>\n      <span class=\"o\">{</span> <span class=\"n\">val</span> <span class=\"o\">:=</span> <span class=\"bp\">↑</span><span class=\"o\">[],</span>\n        <span class=\"n\">nodup</span> <span class=\"o\">:=</span>\n          <span class=\"n\">List.pmap.proof_3</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">[])</span>\n            <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n              <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">1</span><span class=\"o\">]]</span>\n                <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                  <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">2</span><span class=\"o\">]]</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n            <span class=\"o\">(</span><span class=\"n\">Finset.powerset.proof_1</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">})</span> <span class=\"o\">}</span>\n      <span class=\"o\">(</span><span class=\"n\">List.Mem.tail</span>\n        <span class=\"o\">{</span> <span class=\"n\">val</span> <span class=\"o\">:=</span> <span class=\"bp\">↑</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">],</span>\n          <span class=\"n\">nodup</span> <span class=\"o\">:=</span>\n            <span class=\"n\">List.pmap.proof_3</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">])</span>\n              <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n                <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[]</span>\n                  <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">2</span><span class=\"o\">]]</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                              <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n              <span class=\"o\">(</span><span class=\"n\">List.pmap.proof_4</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">[])</span>\n                <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n                  <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">1</span><span class=\"o\">]]</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">2</span><span class=\"o\">]]</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                              <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                                <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n                <span class=\"o\">(</span><span class=\"n\">Finset.powerset.proof_1</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">}))</span> <span class=\"o\">}</span>\n        <span class=\"o\">(</span><span class=\"n\">List.Mem.tail</span>\n          <span class=\"o\">{</span> <span class=\"n\">val</span> <span class=\"o\">:=</span> <span class=\"bp\">↑</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">],</span>\n            <span class=\"n\">nodup</span> <span class=\"o\">:=</span>\n              <span class=\"n\">List.pmap.proof_3</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">])</span>\n                <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n                  <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">]]</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[]</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                              <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                                <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n                <span class=\"o\">(</span><span class=\"n\">List.pmap.proof_4</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">])</span>\n                  <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[]</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">2</span><span class=\"o\">]]</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                              <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                                <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                                  <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n                  <span class=\"o\">(</span><span class=\"n\">List.pmap.proof_4</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">[])</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">1</span><span class=\"o\">]]</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">2</span><span class=\"o\">]]</span>\n                              <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                                <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                                  <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                                    <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n                    <span class=\"o\">(</span><span class=\"n\">Finset.powerset.proof_1</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">})))</span> <span class=\"o\">}</span>\n          <span class=\"o\">(</span><span class=\"n\">List.Mem.head</span>\n            <span class=\"o\">(</span><span class=\"n\">List.pmap</span> <span class=\"n\">Finset.mk</span>\n              <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n                <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[]</span>\n                  <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[]</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                              <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n              <span class=\"o\">(</span><span class=\"n\">List.pmap.proof_4</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">])</span>\n                <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n                  <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[]</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[]</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                              <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                                <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n                <span class=\"o\">(</span><span class=\"n\">List.pmap.proof_4</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">])</span>\n                  <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">]]</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[]</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                              <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                                <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                                  <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n                  <span class=\"o\">(</span><span class=\"n\">List.pmap.proof_4</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">])</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[]</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">2</span><span class=\"o\">]]</span>\n                              <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                                <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                                  <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                                    <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n                    <span class=\"o\">(</span><span class=\"n\">List.pmap.proof_4</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">[])</span>\n                      <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"n\">Multiset.ofList</span>\n                        <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">1</span><span class=\"o\">]]</span>\n                          <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                            <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                              <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">2</span><span class=\"o\">]]</span>\n                                <span class=\"o\">(</span><span class=\"n\">List.join</span>\n                                  <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span>\n                                    <span class=\"o\">(</span><span class=\"n\">List.append</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">]]</span>\n                                      <span class=\"o\">(</span><span class=\"n\">List.join</span> <span class=\"o\">(</span><span class=\"n\">List.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">x</span><span class=\"o\">])</span> <span class=\"o\">[]))))))))))</span>\n                      <span class=\"o\">(</span><span class=\"n\">Finset.powerset.proof_1</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">})))))))))</span>\n</code></pre></div>",
        "id": 419133320,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1706739475
    },
    {
        "content": "<p>Yeah Im using Lean 4 on VS code and I definitely did not get that lol</p>",
        "id": 419170574,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1706760329
    },
    {
        "content": "<p>Are you using an old mathlib?</p>",
        "id": 419185491,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706771368
    },
    {
        "content": "<p>No I am using Mathlib 4</p>",
        "id": 419248246,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1706794858
    },
    {
        "content": "<p>Yes, that's clear, but mathlib 4 moves at breakneck speed</p>",
        "id": 419275284,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1706802487
    },
    {
        "content": "<p>I'm suggesting you \"bump\" mathlib to get it into Feb 2024. Mathlib is constantly being tweaked to make it better. Note that bumping mathlib might make all your code break. But it might not. People typically try it out on a branch first. <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency#updating-mathlib4\">here</a> are the instructions on how to do it.</p>",
        "id": 419283552,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706804721
    }
]