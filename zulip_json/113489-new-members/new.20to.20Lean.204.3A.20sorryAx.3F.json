[
    {
        "content": "<p>I've looked at the documentation for sorryAx, but it's not helping to clarify why I'm getting it here. Can somebody please ELI5?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Data.BitVec.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">bv32</span> <span class=\"o\">:</span> <span class=\"n\">BitVec</span> <span class=\"mi\">32</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"n\">bv32</span>\n</code></pre></div>",
        "id": 421107628,
        "sender_full_name": "Paula Neeley",
        "timestamp": 1707764457
    },
    {
        "content": "<p>Looks like it doesn't recognise <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=BitVec#doc\">docs#BitVec</a> because it's actually <code>Std.BitVec</code></p>",
        "id": 421108459,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707764755
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113489-new-members/topic/new.20to.20Lean.204.3A.20sorryAx.3F/near/421108459\">said</a>:</p>\n<blockquote>\n<p>Looks like it doesn't recognise <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=BitVec#doc\">docs#BitVec</a> because it's actually <code>Std.BitVec</code></p>\n</blockquote>\n<p>Thank you, prefixing it with Std fixed the issue</p>",
        "id": 421109542,
        "sender_full_name": "Paula Neeley",
        "timestamp": 1707765143
    },
    {
        "content": "<p>Note that <code>set_option autoImplicit false</code> would have given you a better error message</p>",
        "id": 421109871,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707765275
    },
    {
        "content": "<p>Actually I don't think this is an autoImplicit issue, this is <a href=\"https://github.com/leanprover/lean4/pull/2226\">lean4#2226</a> (<code>variable</code> eats errors without reporting)</p>",
        "id": 421150860,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707781380
    },
    {
        "content": "<p>note that</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">true</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">relaxedAutoImplicit</span> <span class=\"n\">true</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">bv32</span> <span class=\"o\">:</span> <span class=\"n\">BitVec</span> <span class=\"mi\">32</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n</code></pre></div>\n<p>fails</p>",
        "id": 421150948,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707781443
    },
    {
        "content": "<p>I had asked a question about <code>BitVec</code> on <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Collection.20of.20BitVec/near/420863497\">another thread</a>, so this caught my eye. </p>\n<p>I stuck the example above into my code and noticed something that seems odd:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Probability.ProbabilityMassFunction.Basic</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Std</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">bv32</span> <span class=\"o\">:</span> <span class=\"n\">BitVec</span> <span class=\"mi\">32</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"n\">bv32</span>\n</code></pre></div>\n<p>The above works fine, but should it? I haven't imported <code>Std</code> directly, but I'm able to open the namespace as long as <code>import Mathlib.Probability.ProbabilityMassFunction.Basic</code>. If I comment out <em>only</em> the import statement I end up with an error on<code>BitVec</code>... Seems weird that that import would also make <code>Std</code> available, no?</p>",
        "id": 421180717,
        "sender_full_name": "Ashley Blacquiere",
        "timestamp": 1707803568
    },
    {
        "content": "<p>Imports are transitive, so, to me, it does not seem particularly strange.  I would definitely say that this is expected.</p>",
        "id": 421187098,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707808342
    }
]