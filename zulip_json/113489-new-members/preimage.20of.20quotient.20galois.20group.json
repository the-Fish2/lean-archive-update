[
    {
        "content": "<p>Suppose L/K galois extension, and G its galois group, H normal subgroup of G, t is element of G/H, how can i write the preimage of t in G?</p>",
        "id": 426493464,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1710406164
    },
    {
        "content": "<p>Do you know how to write down the quotient map <code>G -&gt; G/H</code>?</p>",
        "id": 426494403,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710406510
    },
    {
        "content": "<p>In other words, can you formalise the question? Questions of the form \"please fill in this sorry in this fully working code\" are usually answered much more quickly than questions in natural language.</p>",
        "id": 426495959,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1710407087
    },
    {
        "content": "<p>I don't know how to write it in a galois group.  I try to use the function \"<a href=\"http://QuotientGroup.mk\">QuotientGroup.mk</a>' \", but i can't state that H is normal if I state the intermediateField K' first, or I can't state K' as a field(I need to use K' in the following steps) if I state H first.<br>\nI can understand the question in natural language, but I can't formalise it.</p>",
        "id": 426497463,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1710407497
    },
    {
        "content": "<p>So let's go with your original formulation, in which you state <code>H</code> first.</p>",
        "id": 426498872,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710408000
    },
    {
        "content": "<p>Can you then get the preimage of <code>t</code> as you want?</p>",
        "id": 426498947,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710408015
    },
    {
        "content": "<p>I try to do it in this way:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">QuotientGroup</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Algebra</span> <span class=\"n\">K</span> <span class=\"n\">L</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">Group</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">L</span><span class=\"o\">)}</span> <span class=\"o\">{</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">L</span><span class=\"o\">)}</span> <span class=\"o\">[</span><span class=\"n\">Subgroup.Normal</span> <span class=\"n\">H</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"bp\">⧸</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">mk'</span> <span class=\"n\">H</span><span class=\"o\">)</span><span class=\"bp\">⁻¹'</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>but it seems wrong becuse t is not type of Set</p>",
        "id": 426502314,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1710409184
    },
    {
        "content": "<p>Good start. So now you can write <code>{t}</code></p>",
        "id": 426503743,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710409658
    },
    {
        "content": "<p>But <code>{G : Group (L ≃ₐ[K] L)}</code> is suspicious.</p>",
        "id": 426503847,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710409684
    },
    {
        "content": "<p>OK, I think that works.</p>",
        "id": 426503894,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1710409698
    },
    {
        "content": "<p>You are assuming a brand-new-unrelated group structure on the automorphisms</p>",
        "id": 426503921,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710409704
    },
    {
        "content": "<p>And there will be no guarantee that the unit element of the group structure that you call <code>G</code> will be the identity map, etc...</p>",
        "id": 426504036,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710409741
    },
    {
        "content": "<p>So just leave out that variable, because it isn't doing anything useful.</p>",
        "id": 426504071,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710409754
    },
    {
        "content": "<p>Yes, I realize that, I think this version can get the preimage of t</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">QuotientGroup</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Algebra</span> <span class=\"n\">K</span> <span class=\"n\">L</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">L</span><span class=\"o\">)}</span> <span class=\"o\">[</span><span class=\"n\">Subgroup.Normal</span> <span class=\"n\">H</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"bp\">⧸</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">mk'</span> <span class=\"n\">H</span><span class=\"o\">)</span><span class=\"bp\">⁻¹'</span> <span class=\"o\">{</span><span class=\"n\">t</span><span class=\"o\">})</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 426504387,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1710409855
    },
    {
        "content": "<p>But in this way I can't use the Field structure of K', which is the FixedField of H, it is a IntermediaField, is there any way to solve this?</p>",
        "id": 426504955,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1710410048
    },
    {
        "content": "<p>Can you please be a bit more explicit?</p>",
        "id": 426505777,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710410364
    },
    {
        "content": "<p>Lean knows that FixedFields are Fields</p>",
        "id": 426505804,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710410374
    },
    {
        "content": "<p>I want to state the lemma4 of &lt;Local fields&gt; serre chap 4, sec 3, I need to get the preimage of a element in the quotient group of the galois group, suppose they are s_i, I want to get the sup of their image of the function i_G, where G is the galois group, and i_G is the identify function of the ramification group.</p>",
        "id": 426508339,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1710411224
    },
    {
        "content": "<p>I don't have Serre's book nearby atm. Can you please copy the (informal) statement here on zulip?</p>",
        "id": 426509047,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710411478
    },
    {
        "content": "<p>sure, here is the proposition I want to state:<br>\nLet <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi><mo>∈</mo><mi>G</mi><mi mathvariant=\"normal\">/</mi><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">\\theta \\in G/H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span>, and let j(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span>) be the upper bound of the integers <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>G</mi></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">i_G(s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span> as s runs through the pre-image of $$\\theta$$in G. Then:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mrow><mi>G</mi><mi mathvariant=\"normal\">/</mi><mi>H</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn><mo>=</mo><msub><mi>φ</mi><mrow><mi>L</mi><mi mathvariant=\"normal\">/</mi><msup><mi>K</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></msub><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">i_{G/H}(\\theta) - 1 =\\varphi_{L/K&#x27;}(j(\\theta) - 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">G</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.08125em;\">H</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">φ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>here L/K'/K is galois extension ,G is the Galois(L/K), H is Galois(K'/K), <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>G</mi></msub></mrow><annotation encoding=\"application/x-tex\">i_G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is the identify function of ramification group, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>G</mi></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><msub><mi>v</mi><mi>L</mi></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">i_G(s) = min v_L(s(x) - x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">min</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>, x runs in the valuation ring of L, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>φ</mi></mrow><annotation encoding=\"application/x-tex\">\\varphi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">φ</span></span></span></span> is the function which turns the lowernumbering ramification group to the uppernumbering ramification group.</p>",
        "id": 426524732,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1710417065
    },
    {
        "content": "<p>Is K a local field, or an arbitrary field equipped with a nonarchimedean valuation? Or an arbitrary field equipped with discrete valuation? There are some foundational questions to be discussed here. </p>\n<p><span class=\"user-mention\" data-user-id=\"406490\">@María Inés de Frutos Fernández</span> do you have an opinion? </p>\n<p>Hot take (which I was thinking about last week when reading Fontaine's proof that there is no nontrivial abelian variety over the integers): the normalisation of the upper numbering in the literature is off by one from the best choice :-) (not least because it starts at -1!!). However we should unfortunately not deviate from the literature.</p>",
        "id": 426525926,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1710417546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"683723\">@Junjie Bai</span> Ok, so now I know the informal statement... where exactly are you stuck? Is <code>i_G(s)</code> already defined in Lean?</p>",
        "id": 426529079,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710418755
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  In Serre's book, he extends the definition of lower numbering so that it can take value in Real. This is used to define the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ϕ</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> function for upper numbering. (I think extends to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span> is enough?) This extension of definition of lower numbering only holds for rank 1 valuation.</p>",
        "id": 426529725,
        "sender_full_name": "Jiang Jiedong",
        "timestamp": 1710419031
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  Yes , I have defined <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>G</mi></msub></mrow><annotation encoding=\"application/x-tex\">i_G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, but I don't get the Field structure at fixedField H.</p>",
        "id": 426530148,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1710419186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  K is complete under the discrete valuation, but don't have to be local</p>",
        "id": 426530451,
        "sender_full_name": "Junjie Bai",
        "timestamp": 1710419306
    },
    {
        "content": "<p>And the function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>G</mi></msub></mrow><annotation encoding=\"application/x-tex\">i_G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is well-defined depends on at least one of these two properties holds: <br>\n(1) we can take <code>Sup</code> in the less than one part of the value group (This is true in the case of value group to be <code>Zm0</code>, by the discreteness) we can define <code>i_G(s)</code> to be sup of <code>v(s(x) -x)</code> among all elements <code>x</code> in the ring of integer.<br>\n(2) the ring extension of the integers of the valuation is generated by one element (or finitely many) (This is true in the case of local field) we can define  <code>i_G(s)</code> to be max of <code>v(s(x) -x)</code> among all generators.</p>",
        "id": 426531732,
        "sender_full_name": "Jiang Jiedong",
        "timestamp": 1710419777
    },
    {
        "content": "<p>My personal experience is that in majority of the literature, one use the lower numbering index starting from -1... (in order to make <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>G</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">G_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> = inertia group) Is it a good idea that we drop this -1 and use index starting from 0 in mathlib? This -1 will definitely prevent us from defining ramification group to general cases other than <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Z</mi><mrow><mi>m</mi><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}_{m0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 426533542,
        "sender_full_name": "Jiang Jiedong",
        "timestamp": 1710420430
    },
    {
        "content": "<p>My instinct is that it is really important to stick to the literature so that mathematicians can read what we are doing. My instinct is also that the literature made an absolutely terrible choice (reasons: (1) we have two functions on a group, one taking values in {-1,0,1,2,3,...} and the other taking values in {x \\in Q | -1 &lt;= x}; neither of these are types in Lean (2) one of the first lines in Fontaine's paper is \"we define a new upper numbering grading function on the Galois group to be 1 + the standard one\" and then he states all his results for this renormalised grading). My suggestion is that the lower numbering takes values in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> and the upper one in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span>, and that we also define renormalised (+1) ones taking values in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Q</mi><mrow><mo>≥</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}_{\\geq0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9341em;vertical-align:-0.2452em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">≥</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2452em;\"><span></span></span></span></span></span></span></span></span></span>; all of these are types in Lean. </p>\n<p><span class=\"user-mention\" data-user-id=\"683723\">@Junjie Bai</span> I don't see any reason why <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> has to be complete under the discrete valuation. If we develop the <strong>basic</strong> theory for general fields equipped with a discrete valuation then it will apply to finite Galois groups of number fields<br>\n, the decomposition group will be the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span> part, inertia the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> part etc. It would in theory be possible to develop a theory of lower ramification groups for more general valuations (for example nondiscrete ones, or higher rank ones), indexed by the totally ordered group-with-zero which is the target of the valuation, however I do not see the point in doing this right now. I am not an expert in higher local fields though, I don't know what these guys do. What I do know is that we're not going to need any higher local fields to prove FLT, but we're definitely going to need the lower and upper numbering.</p>",
        "id": 426537970,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1710421880
    }
]