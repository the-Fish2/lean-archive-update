[
    {
        "content": "<p>What is the best way to introduce  a list (or a finite sequence) of rationals <code>a[i] b[i]:  ℚ</code> and functions <code>f[i](x) =a[i]*x+b[i]</code> from <code>ℚ</code> to <code>ℚ</code>?</p>",
        "id": 422028900,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1708190445
    },
    {
        "content": "<p><code>a b : Fin n -&gt; ℚ</code> might be a good choice for the sequence</p>",
        "id": 422029583,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708191219
    },
    {
        "content": "<p>Should <code>n</code> be introduced before? What about functions?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">formula1</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 422030506,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1708192086
    },
    {
        "content": "<p>Do you want to \"introduce\" a function, or \"define\" a function?</p>",
        "id": 422030568,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708192170
    },
    {
        "content": "<p>Your <code>=</code> suggests the latter</p>",
        "id": 422030577,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708192177
    },
    {
        "content": "<p>Sorry, I am still learning the terminology. Yes, define. I have a formula for it <code>f[i](x) =a[i]*x+b[i]</code>.</p>",
        "id": 422030706,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1708192270
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"n\">i</span>\n</code></pre></div>\n<p>should work</p>",
        "id": 422030776,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708192330
    },
    {
        "content": "<p>Here, your <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i](x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is <code>f a b i x</code></p>",
        "id": 422030788,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708192350
    },
    {
        "content": "<p>Thank you! I have plans to work with indices modulo <code>n</code> so I want them be between <code>0</code> and <code>n-1</code>. Is there a way to make Lean to start <code>i</code> from <code>0</code>?</p>",
        "id": 422030909,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1708192465
    },
    {
        "content": "<p>It already does :)</p>",
        "id": 422030914,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708192477
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Fin#doc\">docs#Fin</a></p>",
        "id": 422030927,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708192494
    },
    {
        "content": "<p>Oh! I am so lucky! :-)</p>",
        "id": 422030944,
        "sender_full_name": "Yagub Aliyev",
        "timestamp": 1708192527
    }
]