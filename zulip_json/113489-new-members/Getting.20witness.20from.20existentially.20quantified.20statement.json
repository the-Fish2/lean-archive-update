[
    {
        "content": "<p>Hi all,</p>\n<p>I have a theorem which states the existence of an element satisfying a property, quantified over all elements:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">ex</span>\n<span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n<span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"c1\">-- How to make function S → S which takes in x and \"outputs\" the y which satisfies P x y?</span>\n</code></pre></div>\n<p>I would like to define a function which maps (x : S) to the y that exists (afforded by theorem ex). How can I go about this? How close is what I am looking for to definitional equivalence of the statement of ex?</p>",
        "id": 434377378,
        "sender_full_name": "George Tsoukalas",
        "timestamp": 1713537772
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Exists.choose#doc\">docs#Exists.choose</a></p>",
        "id": 434377919,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1713537930
    },
    {
        "content": "<p>Of course! Thank you!</p>",
        "id": 434378293,
        "sender_full_name": "George Tsoukalas",
        "timestamp": 1713538055
    },
    {
        "content": "<p>Or the <code>choose</code> tactic if you're in the middle of a proof.</p>",
        "id": 434378492,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1713538108
    }
]