[
    {
        "content": "<p>I'm thinking about going through the beginnings of Lyndon&amp;Schupp, \"Combinatorial group theory\", to see what can be added on free groups. The literally first theorem says that free groups have a well-defined rank. I have in mind</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">universe</span><span class=\"w\"> </span><span class=\"n\">u</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">FreeGroup</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">IsFreeGroup</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span>\n<span class=\"w\">  </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">IsFreeGroup</span><span class=\"bp\">.</span><span class=\"n\">Generators</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">)</span>\n\n<span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">FreeGroup</span><span class=\"bp\">.</span><span class=\"n\">unique_rank</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">F₁</span><span class=\"w\"> </span><span class=\"n\">F₂</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">F₁</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">F₂</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">IsFreeGroup</span><span class=\"w\"> </span><span class=\"n\">F₁</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">F₁</span><span class=\"w\"> </span><span class=\"bp\">≃*</span><span class=\"w\"> </span><span class=\"n\">F₂</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"n\">FreeGroup</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"n\">F₁</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"bp\">@</span><span class=\"n\">FreeGroup</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">IsFreeGroup</span><span class=\"bp\">.</span><span class=\"n\">ofMulEquiv</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"c1\">-- consider the subgroup generated by squares</span>\n<span class=\"w\">  </span><span class=\"c1\">-- it has index 2^rank</span>\n<span class=\"w\">  </span><span class=\"c1\">-- then from 2^{rank F₁}=2^{rank F₂} deduce rank F₁ = rank F₂</span>\n<span class=\"w\">  </span><span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>But it seems that the last statement, \"2^m = 2^n =&gt; m = n\", is not part of Mathlib. Did I miss it, or do I have to prove something there, or am I following the wrong track?</p>\n<p>Taking inspiration from ranks of modules, it seems also that there could/should be \"rank\" and \"finrank\" which is guaranteed to be a Nat.</p>\n<p>Comments and encouragement are welcome!</p>",
        "id": 443960498,
        "sender_full_name": "Laurent Bartholdi",
        "timestamp": 1718099435
    },
    {
        "content": "<p>Is it true for cardinals?</p>",
        "id": 443961559,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718099818
    },
    {
        "content": "<p>It is very much false, and that's a fact examiners love to ask in the Cambridge Part II exams <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 443962019,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718099985
    },
    {
        "content": "<p>Another way to phrase your statement (maybe more natural) is to say that, if you have two <code>FreeGroupBasis</code> on <code>F</code>, then their indexing sets have the same cardinality.</p>\n<p>I don't think the statement <code>2^m = 2^n =&gt; m = n</code>is in mathlib for cardinals, because it's not provable according to <a href=\"https://mathoverflow.net/questions/67473/equality-of-cardinality-of-power-set\">https://mathoverflow.net/questions/67473/equality-of-cardinality-of-power-set</a>. Still, I think the result is true. In the case of finite rank, it's the argument you give. For the infinite rank case, say that you have two (infinite) generating sets <code>S</code> and <code>T</code> in a given group (not necessarily free). Then any element of <code>T</code> is a word in the elements of <code>S</code>, and the set of words over <code>S</code> has the same cardinality as <code>S</code>, so <code>#T &lt;= #S</code> (and conversely).</p>",
        "id": 443962894,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1718100275
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/2.5En.20.3D.202.5Em.20.3D.3E.20n.20.3D.20m.3F/near/443962019\">said</a>:</p>\n<blockquote>\n<p>It is very much false, and that's a fact examiners love to ask in the Cambridge Part II exams <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>\n</blockquote>\n<p>It's not false, it's just not true :-)</p>",
        "id": 443963283,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1718100393
    },
    {
        "content": "<p>But in fact I don't think the index of the subgroup generated by the squares is really <code>2^n</code> when <code>n</code> is infinite. In fact, the cardinality of the free group over <code>n</code> is equal to <code>n</code> when <code>n</code> is infinite, so it can't have subgroups with index <code>2^n</code>. I'd guess the index is probably <code>n</code>, and then the issue disappears: the function which maps <code>n</code> to <code>2^n</code> if <code>n</code> is finite, and to <code>n</code> if <code>n</code> is infinite, is indeed injective.</p>",
        "id": 443975530,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1718104421
    },
    {
        "content": "<p>It's easier to consider the abelianization (you get the free abelian group, isomorphic to Finsupp) and the result is already in mathlib as <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.Equiv.ofIsFreeGroupEquiv\">FreeAbelianGroup.Equiv.ofIsFreeGroupEquiv</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">GroupTheory</span><span class=\"bp\">.</span><span class=\"n\">FreeAbelianGroupFinsupp</span>\n\n<span class=\"kn\">universe</span><span class=\"w\"> </span><span class=\"n\">u</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">FreeGroup</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">IsFreeGroup</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">IsFreeGroup</span><span class=\"bp\">.</span><span class=\"n\">Generators</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">)</span>\n\n<span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">FreeGroup</span><span class=\"bp\">.</span><span class=\"n\">unique_rank</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">F₁</span><span class=\"w\"> </span><span class=\"n\">F₂</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">F₁</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">F₂</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">IsFreeGroup</span><span class=\"w\"> </span><span class=\"n\">F₁</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">F₁</span><span class=\"w\"> </span><span class=\"bp\">≃*</span><span class=\"w\"> </span><span class=\"n\">F₂</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">FreeGroup</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"n\">F₁</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"bp\">@</span><span class=\"n\">FreeGroup</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">IsFreeGroup</span><span class=\"bp\">.</span><span class=\"n\">ofMulEquiv</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">IsFreeGroup</span><span class=\"bp\">.</span><span class=\"n\">ofMulEquiv</span><span class=\"w\"> </span><span class=\"n\">h</span>\n<span class=\"w\">  </span><span class=\"o\">(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"bp\">.</span><span class=\"n\">Equiv</span><span class=\"bp\">.</span><span class=\"n\">ofIsFreeGroupEquiv</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">cardinal_eq</span>\n</code></pre></div>",
        "id": 443994548,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1718110970
    },
    {
        "content": "<p>FYI: <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean\">https://github.com/leanprover-community/mathlib4/blob/master/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean</a></p>",
        "id": 444030282,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1718119482
    },
    {
        "content": "<p>A different approach: I see <code>`LinearEquiv.nonempty_equiv_iff_lift_rank_eq</code> for modules; so perhaps it would be nice to prove</p>\n<ul>\n<li>the abelianization of a free group with basis \\iota is isomorphic to the free abelian group on \\iota</li>\n<li>the free abelian group on \\iota is isomorphic to the free Z-module on \\iota</li>\n</ul>",
        "id": 444035903,
        "sender_full_name": "Laurent Bartholdi",
        "timestamp": 1718120670
    },
    {
        "content": "<p>Free modules are spelt as <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finsupp#doc\">docs#Finsupp</a> in mathlib, and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=FreeAbelianGroup#doc\">docs#FreeAbelianGroup</a> is defined as the abelianization of FreeGroup, so <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/FreeAbelianGroupFinsupp.html#FreeAbelianGroup.equivFinsupp\">FreeAbelianGroup.equivFinsupp</a> gives the whole thing.</p>",
        "id": 444036725,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1718120896
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">rank_free_abelian_group</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"k\">calc</span>\n<span class=\"w\">    </span><span class=\"n\">Module</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"bp\">→₀</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">      </span><span class=\"n\">rank_eq_of_equiv_equiv</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">ZeroHom</span><span class=\"bp\">.</span><span class=\"n\">id</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"bp\">.</span><span class=\"n\">equivFinsupp</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"w\">        </span><span class=\"o\">(</span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">Involutive</span><span class=\"bp\">.</span><span class=\"n\">bijective</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">congrFun</span><span class=\"w\"> </span><span class=\"n\">rfl</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">map_zsmul</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">      </span><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">rank_finsupp</span><span class=\"o\">]</span>\n<span class=\"w\">      </span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">lift_id'</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">rank_self</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">lift_one</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">mul_one</span><span class=\"o\">]</span>\n\n<span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">FreeGroup</span><span class=\"bp\">.</span><span class=\"n\">unique_rank₂</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">ι₁</span><span class=\"w\"> </span><span class=\"n\">ι₂</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"n\">FreeGroupBasis</span><span class=\"w\"> </span><span class=\"n\">ι₁</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">FreeGroupBasis</span><span class=\"w\"> </span><span class=\"n\">ι₂</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">ι₁</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">ι₂</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"n\">intro</span><span class=\"w\"> </span><span class=\"n\">β₁</span><span class=\"w\"> </span><span class=\"n\">β₂</span>\n<span class=\"w\">  </span><span class=\"k\">let</span><span class=\"w\"> </span><span class=\"n\">abelian_iso</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">MulEquiv</span><span class=\"bp\">.</span><span class=\"n\">abelianizationCongr</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">β₁</span><span class=\"bp\">.</span><span class=\"n\">repr</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">.</span><span class=\"n\">trans</span><span class=\"w\"> </span><span class=\"n\">β₂</span><span class=\"bp\">.</span><span class=\"n\">repr</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">MulEquiv</span><span class=\"bp\">.</span><span class=\"n\">toAdditive</span>\n<span class=\"w\">  </span><span class=\"k\">calc</span>\n<span class=\"w\">    </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">ι₁</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"w\"> </span><span class=\"n\">ι₁</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">rank_free_abelian_group</span><span class=\"w\"> </span><span class=\"n\">ι₁</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n<span class=\"w\">    </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"w\"> </span><span class=\"n\">ι₂</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">rank_eq_of_equiv_equiv</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">ZeroHom</span><span class=\"bp\">.</span><span class=\"n\">id</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">abelian_iso</span>\n<span class=\"w\">      </span><span class=\"o\">(</span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">Involutive</span><span class=\"bp\">.</span><span class=\"n\">bijective</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">congrFun</span><span class=\"w\"> </span><span class=\"n\">rfl</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">map_zsmul</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">ι₂</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">rank_free_abelian_group</span><span class=\"w\"> </span><span class=\"n\">ι₂</span>\n</code></pre></div>",
        "id": 444098720,
        "sender_full_name": "Laurent Bartholdi",
        "timestamp": 1718139124
    },
    {
        "content": "<p>Shorter versions</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">rank_free_abelian_group</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"bp\">.</span><span class=\"n\">equivFinsupp</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">toIntLinearEquiv</span><span class=\"bp\">.</span><span class=\"n\">rank_eq</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">rank_finsupp_self</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">lift_id'</span><span class=\"o\">]</span>\n\n<span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">FreeGroup</span><span class=\"bp\">.</span><span class=\"n\">unique_rank₂</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">ι₁</span><span class=\"w\"> </span><span class=\"n\">ι₂</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">FreeGroupBasis</span><span class=\"w\"> </span><span class=\"n\">ι₁</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">FreeGroupBasis</span><span class=\"w\"> </span><span class=\"n\">ι₂</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">ι₁</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">ι₂</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">β₁</span><span class=\"w\"> </span><span class=\"n\">β₂</span><span class=\"w\"> </span><span class=\"bp\">↦</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"bp\">.</span><span class=\"n\">Equiv</span><span class=\"bp\">.</span><span class=\"n\">ofFreeGroupEquiv</span><span class=\"w\"> </span><span class=\"bp\">&lt;|</span><span class=\"w\"> </span><span class=\"n\">β₁</span><span class=\"bp\">.</span><span class=\"n\">repr</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">.</span><span class=\"n\">trans</span><span class=\"w\"> </span><span class=\"n\">β₂</span><span class=\"bp\">.</span><span class=\"n\">repr</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">cardinal_eq</span>\n</code></pre></div>",
        "id": 444117318,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1718147943
    },
    {
        "content": "<p>The proof above gave me <code>unsolved goals</code>, so here is a proof of <code>rank_free_abelian_group</code> that worked for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">rank_free_abelian_group</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"bp\">.</span><span class=\"n\">rank</span><span class=\"w\"> </span><span class=\"n\">ℤ</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">Cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"o\">(</span><span class=\"n\">FreeAbelianGroup</span><span class=\"bp\">.</span><span class=\"n\">basis</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mk_eq_rank''</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n</code></pre></div>",
        "id": 444238674,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1718199338
    },
    {
        "content": "<p>Thanks, I fixed my proof, but your is better!</p>",
        "id": 444250190,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1718202397
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 444686024,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1718366819
    }
]