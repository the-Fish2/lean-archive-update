[
    {
        "content": "<p>The Lean Natural Numbers Game showed how to prove inequalities with \"use\", but I can't get it to work in Lean.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">literal_le</span> <span class=\"o\">:</span> <span class=\"mi\">36</span> <span class=\"bp\">≤</span> <span class=\"mi\">40</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">use</span> <span class=\"mi\">4</span>\n</code></pre></div>\n<p>fails with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"kd\">universe</span> <span class=\"n\">level</span><span class=\"o\">,</span> <span class=\"bp\">?</span><span class=\"n\">u.1381</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">greater</span> <span class=\"n\">than</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>What am I doing wrong? What's the best way to prove such a literal inequality?</p>",
        "id": 410051134,
        "sender_full_name": "Nikolai Morin",
        "timestamp": 1703612596
    },
    {
        "content": "<p>It's not a very helpful error. I won't explain why it says that, but the problem is that less-than-or-equal has a different definition in mathlib than the NNG it seems.</p>",
        "id": 410052113,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1703613412
    },
    {
        "content": "<p>Here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">literal_le</span> <span class=\"o\">:</span> <span class=\"mi\">36</span> <span class=\"bp\">≤</span> <span class=\"mi\">40</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">le_iff_exists_add</span><span class=\"o\">]</span>\n  <span class=\"n\">use</span> <span class=\"mi\">4</span>\n</code></pre></div>",
        "id": 410052117,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1703613418
    },
    {
        "content": "<p>You can get a slightly better error message if you do <code>use (4 : Nat)</code>. The universe error comes very indirectly from the fact that in Lean, a number literal like <code>4</code> can be interpreted as a number in different types, like <code>Nat</code>, <code>Int</code>, <code>Rat</code>, <code>Real</code>, etc., and the <code>use</code> tactic doesn't commit to any one of them until later.</p>",
        "id": 410052266,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1703613535
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>!</p>",
        "id": 410060127,
        "sender_full_name": "Nikolai Morin",
        "timestamp": 1703619490
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"674793\">Nikolai Morin</span> has marked this topic as resolved.</p>",
        "id": 410060135,
        "sender_full_name": "Notification Bot",
        "timestamp": 1703619495
    }
]