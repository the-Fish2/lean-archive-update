[
    {
        "content": "<p>Hi all, <br>\nI am pretty new to LEAN and was trying some things with classes and class instantiations. With this I was wondering if it is possible to use a function/object/element of a class instantiation (not sure of the correct wording in LEAN) inside another function/object/element of that same class instantiation. So to give an example I was wondering if we have the following code: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Classical</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">Schedule1</span> <span class=\"n\">where</span>\n  <span class=\"n\">jobs</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">schedule</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Option</span> <span class=\"n\">Nat</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">jobs_set</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">}</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">instance</span> <span class=\"n\">now1</span> <span class=\"o\">:</span> <span class=\"n\">Schedule1</span> <span class=\"n\">where</span>\n  <span class=\"n\">jobs</span> <span class=\"o\">:=</span> <span class=\"n\">jobs_set</span>\n  <span class=\"n\">schedule</span> <span class=\"n\">j</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">j</span> <span class=\"bp\">∈</span> <span class=\"n\">jobs_set</span> <span class=\"k\">then</span> <span class=\"n\">some</span> <span class=\"n\">j</span> <span class=\"k\">else</span> <span class=\"n\">none</span>\n</code></pre></div>\n<p>If it is possible to replace jobs_set inside schedule (and jobs) by jobs. So more concretely, if we can replace this piece of code by the following piece of code? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Classical</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">Schedule1</span> <span class=\"n\">where</span>\n  <span class=\"n\">jobs</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">schedule</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Option</span> <span class=\"n\">Nat</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">instance</span> <span class=\"n\">now1</span> <span class=\"o\">:</span> <span class=\"n\">Schedule1</span> <span class=\"n\">where</span>\n  <span class=\"n\">jobs</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">}</span>\n  <span class=\"n\">schedule</span> <span class=\"n\">j</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">j</span> <span class=\"bp\">∈</span> <span class=\"n\">jobs</span> <span class=\"k\">then</span> <span class=\"n\">some</span> <span class=\"n\">j</span> <span class=\"k\">else</span> <span class=\"n\">none</span>\n</code></pre></div>\n<p>I have not been able to find a way to do this in LEAN. Is there a way to do this I have not yet found? Or is this not possible in LEAN?</p>",
        "id": 430793801,
        "sender_full_name": "Rick Overmeer",
        "timestamp": 1712065541
    },
    {
        "content": "<p>I think you may want to use <code>structure</code> instead of <code>class</code> here, and use <code>def</code> instead of <code>instance</code>... classes are useful when you have some type and you want to add structure to it, but there's no underlying type here</p>",
        "id": 430849680,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1712082486
    }
]