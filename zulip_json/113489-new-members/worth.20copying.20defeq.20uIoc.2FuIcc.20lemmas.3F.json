[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Set.Intervals.UnorderedInterval</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">LinearOrder</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">Set.uIoc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">⊆</span> <span class=\"n\">Set.uIcc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- exact? fails</span>\n  <span class=\"c1\">-- simp made no progress</span>\n  <span class=\"c1\">-- apply? returns junk</span>\n  <span class=\"n\">exact</span> <span class=\"n\">Set.Ioc_subset_Icc_self</span> <span class=\"c1\">-- succeeds</span>\n</code></pre></div>\n<p>Should a copy of the Ioc/Icc API exist for uIoc/uIcc?</p>",
        "id": 420568562,
        "sender_full_name": "llllvvuu",
        "timestamp": 1707439854
    },
    {
        "content": "<p>Yes, I think it should</p>",
        "id": 420595887,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707462016
    },
    {
        "content": "<p><del>I'm surprised that proof works</del></p>",
        "id": 420595935,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707462056
    },
    {
        "content": "<p>Either that, or we should make the <code>u</code> variants <code>abbrev</code>s</p>",
        "id": 420596070,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707462138
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> has an opinion?</p>",
        "id": 420596092,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707462158
    },
    {
        "content": "<p>My two (overly informed) cents:</p>\n<ul>\n<li>They should be <code>abbrev</code> on the basis that we use them relatively little and that there are <em>many</em> lemmas to copy</li>\n<li>They should not be <code>abbrev</code> for performance because <code>a</code> and <code>b</code> appear twice in their definition (<code>uIcc a b = Icc (a ⊓ b) (a ⊔ b)</code></li>\n</ul>",
        "id": 420606159,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707467767
    }
]