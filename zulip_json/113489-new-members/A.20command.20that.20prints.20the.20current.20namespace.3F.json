[
    {
        "content": "<p>Hi all,</p>\n<p>how do I write a command that prints the current namespace? I guess that I would need <a href=\"https://leanprover-community.github.io/lean4-metaprogramming-book/main/01_intro.html#building-a-command\">elab</a>, <a href=\"https://leanprover-community.github.io/lean4-metaprogramming-book/main/04_metam.html\">CoreM</a>, <a href=\"https://leanprover-community.github.io/lean4-metaprogramming-book/main/01_intro.html#building-a-command\">logInfo</a>, and <a href=\"https://github.com/leanprover/lean4/blob/master/src/Init/Prelude.lean#L4562\">getCurrNamespace</a>, but I don't know how to put these pieces together...</p>\n<p>Thanks in advance!</p>",
        "id": 439330450,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1716013213
    },
    {
        "content": "<p>Have you looked at how <code>#where</code> is implemented?</p>",
        "id": 439330480,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716013245
    },
    {
        "content": "<p>Is it from Lean itself or from mathlib? I don't have mathlib here now, and my usual ways of grepping the Lean sources don't show it...</p>",
        "id": 439330940,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1716013742
    },
    {
        "content": "<p>Hmm, don't actually know</p>",
        "id": 439331044,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716013851
    },
    {
        "content": "<p>I think that the namespace is stored in the <code>Scope</code>.  You may be able to access it from <code>CommandElabM</code>.</p>",
        "id": 439331256,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716014076
    },
    {
        "content": "<p>Actually <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Macro.getCurrNamespace#doc\">docs#Lean.Macro.getCurrNamespace</a> may do just that for you.</p>",
        "id": 439331899,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716014778
    },
    {
        "content": "<p>Sorry for my newbieness, but how do I convert its output to a string? Try:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">Foo</span>\n<span class=\"k\">#check</span> <span class=\"n\">Lean.Macro.getCurrNamespace</span>\n<span class=\"k\">#print</span> <span class=\"n\">Lean.Macro.getCurrNamespace</span>\n<span class=\"k\">#eval</span>  <span class=\"n\">Lean.Macro.getCurrNamespace</span>\n<span class=\"kd\">end</span> <span class=\"n\">Foo</span>\n</code></pre></div>\n<p>The #eval fails...</p>",
        "id": 439332252,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1716015196
    },
    {
        "content": "<p>Try something like <code>#eval do logInfo (← Lean.Macro.getCurrNamespace)</code> (untested).</p>",
        "id": 439333302,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716016093
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Lean</span>\n<span class=\"kd\">run_cmd</span> <span class=\"n\">logInfo</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">getCurrNamespace</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>(tested!)</p>",
        "id": 439333872,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716016703
    },
    {
        "content": "<p>Cool! To make this work in different namespaces as well, I just needed to use the <code>Lean.</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Foo</span>\n<span class=\"kd\">run_cmd</span> <span class=\"n\">Lean.logInfo</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">Lean.getCurrNamespace</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 439334514,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1716017361
    },
    {
        "content": "<p>If you add the <code>open Lean</code> command you don't need to add the <code>Lean.</code> prefix.</p>",
        "id": 439362127,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1716045128
    }
]