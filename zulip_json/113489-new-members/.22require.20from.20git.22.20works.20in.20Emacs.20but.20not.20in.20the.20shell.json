[
    {
        "content": "<p>Hi, I'm trying to make my first package - <a href=\"https://github.com/edrx/LuaTreeLean\">LuaTreeLean</a> - usable with <code>require ... from git \"URL\"</code>, but there's something wrong, or missing, in my way of testing it from the shell... If I run this</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">Rfv</span><span class=\"w\"> </span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">TestColorized</span><span class=\"bp\">/</span>\n<span class=\"n\">mkdir</span><span class=\"w\">   </span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">TestColorized</span><span class=\"bp\">/</span>\n<span class=\"n\">cd</span><span class=\"w\">      </span><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">TestColorized</span><span class=\"bp\">/</span>\n\n<span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lakefile</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"bp\">&lt;&lt;'%%%'</span>\n<span class=\"w\">  </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Lake</span>\n<span class=\"w\">  </span><span class=\"kn\">open</span><span class=\"w\">   </span><span class=\"n\">Lake</span><span class=\"w\"> </span><span class=\"n\">DSL</span>\n<span class=\"w\">  </span><span class=\"n\">require</span><span class=\"w\"> </span><span class=\"n\">Colorized</span><span class=\"w\"> </span><span class=\"k\">from</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/axiomed/Colorized.lean\"</span>\n<span class=\"w\">  </span><span class=\"n\">require</span><span class=\"w\"> </span><span class=\"n\">LuaTree</span><span class=\"w\"> </span><span class=\"k\">from</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/edrx/LuaTreeLean\"</span>\n<span class=\"w\">  </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">TestColorized</span>\n<span class=\"bp\">%%%</span>\n<span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"bp\">&lt;&lt;'%%%'</span>\n<span class=\"w\">  </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Colorized</span>\n<span class=\"w\">  </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">LuaTree</span>\n<span class=\"bp\">%%%</span>\n\n<span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"c1\">--verbose</span>\n<span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">env</span><span class=\"w\"> </span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"c1\">--run a.lean</span>\n</code></pre></div>\n<p>The <code>import</code>s don't work - I get:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">TestColorized</span><span class=\"o\">(</span><span class=\"n\">edrx</span><span class=\"o\">:</span><span class=\"n\">sc</span><span class=\"o\">)</span><span class=\"bp\">#</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">env</span><span class=\"w\"> </span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"c1\">--run a.lean</span>\n<span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">unknown</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"bp\">'</span><span class=\"n\">Colorized'</span>\n<span class=\"bp\">/</span><span class=\"n\">tmp</span><span class=\"bp\">/</span><span class=\"n\">TestColorized</span><span class=\"o\">(</span><span class=\"n\">edrx</span><span class=\"o\">:</span><span class=\"n\">sc</span><span class=\"o\">)</span><span class=\"bp\">#</span>\n</code></pre></div>\n<p>but if I open <code>/tmp/TestColorized/a.lean</code> in Emacs the <code>import</code>s work. What do I need to change?</p>",
        "id": 444857024,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718452539
    },
    {
        "content": "<p>I added <a href=\"https://github.com/axiomed/Colorized.lean\">Colorized</a> to the test because it is a very small package whose usage instructions are just this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">Add</span><span class=\"w\"> </span><span class=\"n\">Colorized</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">your</span><span class=\"w\"> </span><span class=\"n\">lakefile</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span>\n\n<span class=\"w\">  </span><span class=\"n\">require</span><span class=\"w\"> </span><span class=\"n\">Colorized</span><span class=\"w\"> </span><span class=\"k\">from</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/axiomed/Colorized.lean.git\"</span>\n</code></pre></div>",
        "id": 444857146,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718452676
    },
    {
        "content": "<p>Here is a screenshot:</p>",
        "id": 444857207,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718452710
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/tBd_a6FYDc1wsZqDCmoyk-I0/sshot.png\">sshot.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/tBd_a6FYDc1wsZqDCmoyk-I0/sshot.png\" title=\"sshot.png\"><img src=\"/user_uploads/3121/tBd_a6FYDc1wsZqDCmoyk-I0/sshot.png\"></a></div>",
        "id": 444857214,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718452731
    },
    {
        "content": "<p>You need to actually add <code>a.lean</code> to your project, to a library or executable. Why not start with what <code>lake init</code> produces?</p>",
        "id": 444869534,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1718462793
    },
    {
        "content": "<p>I did start by the \"<a href=\"https://lean-lang.org/functional_programming_in_lean/hello-world/starting-a-project.html\">Greeting</a>\" example last year - my messy notes on it are <a href=\"http://anggtwu.net/e/lean.e.html#lake-new-greeting\">here</a> - but it did too many things, and it wasn't always clear why it failed when I commented out a certain part...</p>",
        "id": 444875796,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718466578
    },
    {
        "content": "<p>...then I tried to start from an empty lakefile and add things to it bit by bit. That helped me a lot - there is an example of that approach <a href=\"http://angg.twu.net/eev-lean4.html#import\">here</a>.</p>",
        "id": 444876447,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718466939
    },
    {
        "content": "<p>But I thought that when I opened a file <code>b.lean</code> in Emacs <code>lean4-mode</code> would make <code>lean</code> \"interpret\" it... i.e., <code>lean</code> would execute its commands one by one, and each <code>import</code> - say, <code>import A</code> - would basically locate a file <code>A.olean</code> using the environment set by <code>lake env</code> and then <code>dlopen</code> it... but sometimes <code>lean</code> and <code>lake</code> would see that the file <code>A.olean</code> would need to be rebuilt, and they would do that before dlopening it.</p>",
        "id": 444877739,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718467604
    },
    {
        "content": "<p>If the file that I am editing - <code>b.lean</code> - needs to be added to the lakefile before I run <code>lake env lean --run b.lean</code> then my mental model is wrong... maybe because I was expecting that <code>lake env lean run --b.lean</code> would be very similar to the \"lean in server mode\" that the lsp server runs.</p>",
        "id": 444878649,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718468092
    },
    {
        "content": "<p>Comments?...</p>",
        "id": 444878979,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1718468211
    }
]