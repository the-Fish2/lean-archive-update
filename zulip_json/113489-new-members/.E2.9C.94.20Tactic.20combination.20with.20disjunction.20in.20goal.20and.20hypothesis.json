[
    {
        "content": "<p>Hello, <br>\nhere is a silly MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">mwe</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hpq</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">match</span> <span class=\"n\">hpq</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Or.inl</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">left</span><span class=\"bp\">;</span> <span class=\"n\">assumption</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Or.inr</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">right</span><span class=\"bp\">;</span> <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>I am basically in this situation (where <code>assumption</code> is really couple lines of code that are identical for both cases) <br>\nIs there a way to avoid having to repeat <code>assumption</code> with tactic combinators? I want to say something like \"do cases on <code>hpq</code>, for the first one go <code>left</code>, for the second one go <code>right</code>, then do <code>tac</code> on both, but I can't really find a way.</p>",
        "id": 417450080,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1706018018
    },
    {
        "content": "<p>You could do this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"n\">macro</span> <span class=\"s2\">\"left_right\"</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">left</span> <span class=\"bp\">;</span> <span class=\"n\">swap</span> <span class=\"bp\">;</span> <span class=\"n\">right</span> <span class=\"bp\">;</span> <span class=\"n\">swap</span><span class=\"o\">))</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">mwe</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hpq</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hpq</span>\n  <span class=\"n\">left_right</span>\n  <span class=\"n\">all_goals</span> <span class=\"n\">assumption</span>\n</code></pre></div>\n<p>I do not know how to do this more easily.</p>",
        "id": 417453133,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1706018882
    },
    {
        "content": "<p>Maybe <code>case'</code> could be useful.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">mwe</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hpq</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hpq</span>\n  <span class=\"n\">case'</span> <span class=\"n\">inl</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">left</span>\n  <span class=\"n\">case'</span> <span class=\"n\">inr</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">right</span>\n  <span class=\"n\">all_goals</span> <span class=\"n\">assumption</span>\n</code></pre></div>",
        "id": 417454452,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1706019290
    },
    {
        "content": "<p>That works perfectly, I didn't know <code>swap</code> existed. Thank you</p>",
        "id": 417454613,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1706019341
    },
    {
        "content": "<p>I'm spoiled for choices now, thanks to you too</p>",
        "id": 417455202,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1706019491
    },
    {
        "content": "<p>More choices!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">mwe</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hpq</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">hpq.imp</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">id</span>\n  <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"n\">id</span>\n</code></pre></div>",
        "id": 417455531,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1706019599
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466290\">Luigi Massacci</span> has marked this topic as resolved.</p>",
        "id": 417540359,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706048897
    }
]