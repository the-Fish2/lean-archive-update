[
    {
        "content": "<p>Why can't I close the goal <code>Nat.succ (a + b) ≠ 0</code> with <code>exact Nat.succ_ne_zero</code>? I get a type mismatch which I don't quite understand </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">Nat.succ_ne_zero</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">Nat.succ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n</code></pre></div>",
        "id": 420967430,
        "sender_full_name": "Philipp SL Schäfer",
        "timestamp": 1707723624
    },
    {
        "content": "<p>you didn't supply the parameter; try <code>exact Nat.succ_ne_zero _</code></p>",
        "id": 420967696,
        "sender_full_name": "llllvvuu",
        "timestamp": 1707723765
    },
    {
        "content": "<p>thanks! But what does <code>_</code> do here?</p>",
        "id": 420967859,
        "sender_full_name": "Philipp SL Schäfer",
        "timestamp": 1707723851
    },
    {
        "content": "<p>It's the input to the function. Read the error. Lean is expecting an <code>n</code>. The underscore means \"guess it yourself\". You could also put <code>(a + b)</code>.</p>",
        "id": 420968154,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707724008
    },
    {
        "content": "<p>thanks!</p>",
        "id": 420969852,
        "sender_full_name": "Philipp SL Schäfer",
        "timestamp": 1707724775
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"690867\">Philipp SL Schäfer</span> has marked this topic as resolved.</p>",
        "id": 420969857,
        "sender_full_name": "Notification Bot",
        "timestamp": 1707724780
    }
]