[
    {
        "content": "<p>I come from rocq and I'm used to being able to check my proof script line by line. Is there any way to do the same thing with the current lean tooling? I'm on emacs but may be willing to change for this feature if it's present in some other editor.</p>",
        "id": 443769480,
        "sender_full_name": "Markus de Medeiros",
        "timestamp": 1718025584
    },
    {
        "content": "<p>The tools will check a proof and give you feedback, if the proof is part of a project. How far have you got? Do you have <a href=\"https://github.com/leanprover-community/lean4-mode\">lean4-mode</a> on your load-path and added to your auto-mode-alist?</p>",
        "id": 443772887,
        "sender_full_name": "Richard Copley",
        "timestamp": 1718026518
    },
    {
        "content": "<p>There's no line-by-line checking in Lean (I assume you're talking about the feature where you can set the point up to which rocq checks the proof, right Markus?)</p>",
        "id": 443773161,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1718026591
    },
    {
        "content": "<p>Yes to Kyle-- sounds like what I want doesn't exist then. Thanks anyways!</p>",
        "id": 443774380,
        "sender_full_name": "Markus de Medeiros",
        "timestamp": 1718026913
    },
    {
        "content": "<p>I'm confused, are we not just talking about putting your cursor on the line you are interested in and seeing the proof state at that location? What is it that Rocq has that Lean doesn't?</p>",
        "id": 443893282,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1718067863
    },
    {
        "content": "<p>There's an editing model other ITPs use where there's a point you set where everything before that point has been checked and everything after is not being checked. (<a href=\"https://proofgeneral.github.io/doc/master/userman/Basic-Script-Management/#Script-buffers\">Here's a section</a> of the Proof General documentation about that.)</p>\n<p>I usually fake it by inserting <code>#exit</code> nearby to keep things from repeatedly typechecking as I'm editing.</p>",
        "id": 443898433,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1718071034
    },
    {
        "content": "<p>This is helpful, thanks. I've been commenting and uncommenting code but <code>#exit</code> is cleaner .</p>",
        "id": 443994241,
        "sender_full_name": "Markus de Medeiros",
        "timestamp": 1718110898
    }
]