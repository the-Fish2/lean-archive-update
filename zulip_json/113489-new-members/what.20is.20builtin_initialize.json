[
    {
        "content": "<p>As a newbie (an excuse I will use for at least three months), I'm curious what is builtin_initialize in the Lean source code? I couldn't find an explanation myself.</p>",
        "id": 425440860,
        "sender_full_name": "Xiyu Zhai",
        "timestamp": 1709869090
    },
    {
        "content": "<p>Where's the general place for explanation of compiler magic?</p>",
        "id": 425441218,
        "sender_full_name": "Xiyu Zhai",
        "timestamp": 1709869358
    },
    {
        "content": "<p>Does it mean something like in a scripting language, it will be executed when loaded?<br>\nSomething like lazy_static in Rust?</p>",
        "id": 425441400,
        "sender_full_name": "Xiyu Zhai",
        "timestamp": 1709869495
    },
    {
        "content": "<p>There are two things going on here:</p>\n<ol>\n<li>Yes, it is possible to associate code to modules that gets run when the module is loaded. This is the initialization code. It's only for compile time and not for run time (as far as I've understood).</li>\n<li>The <code>builtin</code> part has to do with the staged compilation of Lean 4 itself. Since Lean 4 is largely written in Lean 4, some parts of it need to be set to be part of the compiled \"stage 0\" Lean 4, which is used to compile the next stage. I'm not super clear on the details, but <a href=\"https://lean-lang.org/lean4/doc/dev/bootstrap.html\">here's the boostrapping page</a> of the manual.</li>\n</ol>\n<p>User code uses <code>initialize</code> rather than <code>builtin_initialize</code>.</p>",
        "id": 425443752,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1709870992
    },
    {
        "content": "<p>thanks a lot</p>",
        "id": 425443850,
        "sender_full_name": "Xiyu Zhai",
        "timestamp": 1709871051
    }
]