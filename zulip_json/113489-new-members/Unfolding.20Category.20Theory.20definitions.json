[
    {
        "content": "<p>Hi, I've been having some trouble lately with unfolding category theory definitions in Lean. Here's an MWE of a frequent difficulty I have: </p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">CategoryTheory</span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">SomeCatLemma</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Category</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"mi\">ùüô</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">eqToHom</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">eqToHom</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>This results in the following tactic state: <br>\n<a href=\"/user_uploads/3121/FEKa0T2ZUMpMd0fxZ1AZ9TIO/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/FEKa0T2ZUMpMd0fxZ1AZ9TIO/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/FEKa0T2ZUMpMd0fxZ1AZ9TIO/image.png\"></a></div><p>where the dots stand for <code>eqToHom.proof_1 h : (C ‚ü∂ C) = (C ‚ü∂ C)</code>. <br>\nOf course, in this toy example, it's not a big deal, and just using <code>simp</code> suffices to prove the goal anyway, but in more complex proofs, even <code>simp</code> starts producing these .mpr lines that I am not sure what to do with. How should one deal with this?</p>",
        "id": 448138693,
        "sender_full_name": "VayusElytra",
        "timestamp": 1719765525
    },
    {
        "content": "<p><code>eqToHom</code> should not be unfolded. You should use the API of it to manipulate it to the form <code>eqToHom (_ : X = X)</code> and use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.eqToHom_refl#doc\">docs#CategoryTheory.eqToHom_refl</a></p>",
        "id": 448149113,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1719769919
    },
    {
        "content": "<p>I guess this MWE is a little too M to see, but this also happens when working with my own category theory definitions, which makes using simp and the like necessary to even build the API I'd need.</p>",
        "id": 448174062,
        "sender_full_name": "VayusElytra",
        "timestamp": 1719781114
    },
    {
        "content": "<p>Maybe you can just ignore those .mpr lines (e.g. <code>rfl</code> already works here)?</p>",
        "id": 448200397,
        "sender_full_name": "Bbbbbbbbba",
        "timestamp": 1719798934
    }
]