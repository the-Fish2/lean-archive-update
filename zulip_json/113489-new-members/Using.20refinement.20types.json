[
    {
        "content": "<p>Hi, I have defined the Shannon Entropy function as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span>\n<span class=\"kd\">def</span> <span class=\"n\">entropy</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">p.foldl</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">acc</span> <span class=\"n\">p</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">acc</span> <span class=\"bp\">-</span> <span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"n\">log</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>How do I add extra bounds to it, like the size of <code>p</code> (&gt;0), the fact  that <code>p</code> must sum up to 1, and that all elements of <code>p</code> must be non-negative?</p>",
        "id": 411589836,
        "sender_full_name": "Kamila Szewczyk",
        "timestamp": 1704624166
    },
    {
        "content": "<p>You don't, but you state theorems with those assumptions added.</p>",
        "id": 411590067,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704624379
    },
    {
        "content": "<p>Here is entropy in PFR, if you want inspiration: <a href=\"https://github.com/teorth/pfr/tree/master/PFR/ForMathlib/Entropy\">https://github.com/teorth/pfr/tree/master/PFR/ForMathlib/Entropy</a></p>",
        "id": 411590078,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704624394
    },
    {
        "content": "<p>I see.. Unrelated question: If I have <code>(h2 : x &lt;= 1)</code>, how do I destructure it so that i can prove the statement independently for x &lt; 1 and x == 1?</p>",
        "id": 411591536,
        "sender_full_name": "Kamila Szewczyk",
        "timestamp": 1704625474
    },
    {
        "content": "<p><code>cases h2.eq_or_lt</code> or <code>rcases h2.eq_or_lt with h | h</code>.</p>",
        "id": 411592353,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1704626142
    },
    {
        "content": "<p>Note that the first underscore should be a dot</p>",
        "id": 411593116,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1704626809
    },
    {
        "content": "<p>By the way, unrelated questions tend to go in new topics</p>",
        "id": 411593163,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1704626850
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 411593264,
        "sender_full_name": "Kamila Szewczyk",
        "timestamp": 1704626963
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113489-new-members/topic/Using.20refinement.20types/near/411593116\">said</a>:</p>\n<blockquote>\n<p>Note that the first underscore should be a dot</p>\n</blockquote>\n<p>Fixed.</p>",
        "id": 411594599,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1704628183
    }
]