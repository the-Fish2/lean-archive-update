[
    {
        "content": "<p>I was reading some literature in physics that used the much less than operator \"&lt;&lt;\" in one of the simplifications and was wondering if it was possible to do in Lean. Here's the simplification that the authors did:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.16em\" columnspacing=\"1em\"><mtr><mtd class =\"mtr-glue\"></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>a</mi><mo>&lt;</mo><mo>&lt;</mo><mn>1</mn><mo>∧</mo><mn>1</mn><mo>&lt;</mo><mo>&lt;</mo><mi>c</mi></mrow></mstyle></mtd><mtd class =\"mtr-glue\"></mtd><mtd class =\"mml-eqn-num\"></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{equation}\n    a &lt;&lt; 1 \\land 1 &lt;&lt; c\n\\end{equation}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2em;vertical-align:-0.35em;\"></span><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-2.85em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"eqn-num\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span></span></span>\n\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.16em\" columnspacing=\"1em\"><mtr><mtd class =\"mtr-glue\"></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>V</mi><mo>=</mo><mfrac><mrow><mi>a</mi><mi>b</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>V</mi><mo>=</mo><mfrac><mrow><mi>a</mi><mi>b</mi></mrow><mrow><mn>1</mn><mo>+</mo><mi>c</mi><mi>a</mi></mrow></mfrac></mrow></mstyle></mtd><mtd class =\"mtr-glue\"></mtd><mtd class =\"mml-eqn-num\"></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{equation}\n    V = \\frac{ab}{(1 - a)(1 + (c - 1)a)} \\implies V = \\frac{ab}{1 + ca}\n\\end{equation}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.3074em;vertical-align:-0.9037em;\"></span><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4037em;\"><span style=\"top:-3.4037em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ab</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ab</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9037em;\"><span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4037em;\"><span style=\"top:-3.4037em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"eqn-num\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9037em;\"><span></span></span></span></span></span></span></span></span></p>\n<p>I believe that it would be impossible to rationalize the above logic because its a rather subjective simplification (why not take away the a*b for instance?). But, I'm curious to know Zulip's thoughts on this subject.</p>\n<p>I've also provided a supplementary Lean 4 code for the operator.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">MuchLessThan</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">k</span> <span class=\"bp\">∧</span> <span class=\"n\">X</span><span class=\"bp\">*</span><span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">Y</span>\n\n<span class=\"kd\">notation</span> <span class=\"s2\">\" &lt;&lt; \"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">MuchLessThan</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">&lt;</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">&lt;&lt;</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">MuchLessThan</span><span class=\"o\">]</span>\n  <span class=\"n\">use</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"bp\">/</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n  <span class=\"gr\">sorry</span>\n  <span class=\"c1\">-- Not true because X = 0</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">&lt;&lt;</span> <span class=\"n\">a</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n  <span class=\"n\">V</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 432368751,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1712710709
    },
    {
        "content": "<p>Please note it's an example definition from what I could find on the internet</p>",
        "id": 432369409,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1712711019
    },
    {
        "content": "<p>the definition needs a bit of work... by the current definition, any two positive real numbers are each <code>MuchLessThan</code> the other, and the same goes for any two negative real numbers</p>",
        "id": 432370098,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1712711300
    },
    {
        "content": "<p>Quick thought: I think &lt;&lt; makes sense, but with some more sophisticated setup, where it's not a relation between <em>particular</em> variables, but a relation more on filters (<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter#doc\">docs#Filter</a>). If you're not familiar with filters, this might seem totally out there, but it seems like filters in different forms are key to understanding these sorts of properties that are not literally true, but true in a tendency sense.</p>\n<p>The underlying idea here expanded out (which filters should be able to make cleaner) is that you want to translate \"for all x such that 1 &lt;&lt; x, P x\" to \"there exists k such that 1 &lt; k and for all x such that k &lt; x, P x\". It's a truth about something that <em>eventually</em> is true for all big enough x.</p>",
        "id": 432370382,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712711429
    },
    {
        "content": "<p>Of course, that could be recast as \"there exists k &gt;= 1 such that for all a &gt;= k, P (a * 1)\", to make it look more like this scalar version you have formalized.</p>",
        "id": 432370673,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712711566
    },
    {
        "content": "<p>I believe related to filters: I usually associate the 'much less than' operation with asymptotic growth between functions. I don't know enough about physics to know if that's also the understanding here. But if you consider variables a and c as sequence that move away from 1 (in their respective directions), you could maybe make sense of it?</p>",
        "id": 432435341,
        "sender_full_name": "Ira Fesefeldt",
        "timestamp": 1712735044
    },
    {
        "content": "<p>Yes, I think the answer here is to talk about asymptotics along filters</p>",
        "id": 432446542,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712737799
    },
    {
        "content": "<p>I think this is close to the correct statement?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">false</span>\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">Asymptotics</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">aFilter</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"bp\">𝓝</span><span class=\"o\">[</span><span class=\"bp\">&gt;</span><span class=\"o\">]</span> <span class=\"mi\">0</span> <span class=\"bp\">⊓</span> <span class=\"bp\">.</span><span class=\"n\">principal</span> <span class=\"o\">(</span><span class=\"n\">Set.Ioo</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">cFilter</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"bp\">.</span><span class=\"n\">atTop</span> <span class=\"bp\">⊓</span> <span class=\"bp\">.</span><span class=\"n\">principal</span> <span class=\"o\">(</span><span class=\"n\">Set.Ioi</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"o\">)))</span> <span class=\"bp\">~</span><span class=\"o\">[</span><span class=\"n\">aFilter</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">cFilter</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 432447617,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712738076
    },
    {
        "content": "<p>I made it to here before realizing something was wrong:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"o\">)))</span> <span class=\"bp\">~</span><span class=\"o\">[</span><span class=\"n\">aFilter</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">cFilter</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- simp [aFilter, cFilter]</span>\n  <span class=\"n\">refine</span> <span class=\"bp\">.</span><span class=\"n\">div</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rfl</span>\n  <span class=\"bp\">·</span> <span class=\"n\">ring_nf</span>\n    <span class=\"n\">conv_lhs</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">enter</span> <span class=\"o\">[</span><span class=\"n\">x</span><span class=\"o\">]</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sub_add_eq_add_sub</span><span class=\"o\">,</span> <span class=\"n\">sub_add_eq_add_sub</span><span class=\"o\">,</span> <span class=\"n\">add_sub_assoc</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">refine</span> <span class=\"bp\">.</span><span class=\"n\">add_isLittleO</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">refl</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">Asymptotics.isLittleO_iff</span><span class=\"o\">]</span>\n    <span class=\"n\">intros</span> <span class=\"n\">r</span> <span class=\"n\">hr</span>\n    <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">aFilter</span><span class=\"o\">,</span> <span class=\"n\">cFilter</span><span class=\"o\">]</span>\n    <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">Filter.prod_inf</span><span class=\"o\">,</span> <span class=\"n\">Filter.inf_prod</span><span class=\"o\">,</span> <span class=\"n\">Filter.prod_principal_principal</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">inf_assoc</span><span class=\"o\">,</span> <span class=\"n\">Filter.eventually_inf_principal</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_prod</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_Ioi</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_Iio</span><span class=\"o\">]</span>\n    <span class=\"n\">filter_upwards</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">⟩</span>\n    <span class=\"n\">rintro</span> <span class=\"o\">⟨</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c</span><span class=\"o\">⟩</span>\n    <span class=\"n\">simp</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 432462744,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712742142
    },
    {
        "content": "<p>I'm somewhat familiar with Filters, though not as knowledgeable as I would like. Sorry as well for forgetting to include that all the real numbers in the derivation were positive real numbers (thus a cannot be negative, this is important in the next thing I will say).</p>\n<p>Initially, when approaching the \"&lt;&lt;\" operator I was thinking it could be done with limits (a special kind of filter). For example, </p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.16em\" columnspacing=\"1em\"><mtr><mtd class =\"mtr-glue\"></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>a</mi><mo>→</mo><mn>0</mn></mrow></munder><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>c</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mfrac><mrow><mi>a</mi><mi>b</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>a</mi><mi>b</mi></mrow><mrow><mn>1</mn><mo>+</mo><mi>c</mi><mi>a</mi></mrow></mfrac></mrow></mstyle></mtd><mtd class =\"mtr-glue\"></mtd><mtd class =\"mml-eqn-num\"></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{equation}\n    \\lim_{a\\to0} \\lim_{c\\to\\infty} \\frac{ab}{(1 - a)(1 + (c - 1)a)} = \\frac{ab}{1 + ca}\n\\end{equation}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.3074em;vertical-align:-0.9037em;\"></span><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4037em;\"><span style=\"top:-3.4037em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.3829em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7171em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ab</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ab</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9037em;\"><span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4037em;\"><span style=\"top:-3.4037em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"eqn-num\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9037em;\"><span></span></span></span></span></span></span></span></span></p>\n<p>However, this mathematical statement makes no sense. Again the logic would be flawed as the a*b term would have to go away. And c goes to infinity which is just makes no sense.</p>\n<p>Thank you Eric and Ira for sharing your takes on it. I'm not that great of a mathematician (just an undergraduate and an engineering major) so I'm not sure what an asymptotic filter is, but I'll look into it. </p>\n<p>Could someone provide an informal proof of the statement with their definition of the \"&lt;&lt;\" operator? I doubt the original statement is true rigorously but would be happy for someone to prove me wrong.</p>",
        "id": 432580256,
        "sender_full_name": "Colin Jones ⚛️",
        "timestamp": 1712781057
    },
    {
        "content": "<blockquote>\n<p>I'm not that great of a mathematician (just an undergraduate and an engineering major)</p>\n</blockquote>\n<p>I too am an engineering major, which also means that this is out of my comfort zone. The code I posted above is probably close to the right thing, but almost certainly not it</p>",
        "id": 432589634,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712784551
    },
    {
        "content": "<p>I think Eric's formulation is basically right, but <code>aFilter</code> should be <code>𝓝[&gt;] 0</code> and <code>cFilter</code> should be <code>atTop</code>.</p>",
        "id": 432591985,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1712785616
    },
    {
        "content": "<p>My claim is that the changes you're suggesting are part of solving the problem</p>",
        "id": 432592094,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712785674
    },
    {
        "content": "<p><del>That is, you're saying <code>a &lt;&lt; 1</code> is stronger than necessary, and <code>a &lt;&lt; 0</code> is fine? (did you mean <code>𝓝[&lt;] 0</code>?)</del> hmm, that sounds backwards</p>",
        "id": 432592262,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712785755
    },
    {
        "content": "<p>I'm saying \"&lt;&lt;1\" doesn't actually involve the number 1, it's just a limit towards zero.</p>",
        "id": 432592500,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1712785864
    },
    {
        "content": "<p>In which case you're also saying that the problem as originally stated is false if <code>a</code> is allowed to be negative?</p>",
        "id": 432592639,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712785932
    },
    {
        "content": "<p>Well, as Colin says above <code>a</code> is understood to be nonnegative.</p>",
        "id": 432592743,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1712785992
    },
    {
        "content": "<p>Thanks, somehow I missed that</p>",
        "id": 432592763,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712786004
    },
    {
        "content": "<p>Edited above, I think now my version is accurate (but as you say, the <code>1</code> is irrelevant)</p>",
        "id": 432592901,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712786055
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"628490\">Colin Jones ⚛️</span> <a href=\"#narrow/stream/116395-maths/topic/Much.20Less.20than.20Operator/near/432580256\">said</a>:</p>\n<blockquote>\n<p>Could someone provide an informal proof of the statement with their definition of the \"&lt;&lt;\" operator? I doubt the original statement is true rigorously but would be happy for someone to prove me wrong.</p>\n</blockquote>\n<p>I am not too familiar with the formalization of asymptotics and filters in mathlib, so I can not guarantee that my informal proof matches Eric ones. But I believe one idea goes along like this:</p>\n<p>We have two functions </p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>a</mi><mi>b</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mspace width=\"2em\"/><mi>g</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>a</mi><mi>b</mi></mrow><mrow><mn>1</mn><mo>+</mo><mi>c</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">f(a, b, c) = \\frac{ab}{(1-a)(1+(c-1)a)}\\qquad  g(a, b, c) = \\frac{ab}{1+ca}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3074em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ab</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1408em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ab</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>and we want to prove that f and g are asymptotically equal as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>→</mo><mn>0</mn><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">a \\to 0+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0</span><span class=\"mord\">+</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">c \\to \\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>. <br>\nAsymptotically equal means something on the line that there is a positive real number <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> such that</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>a</mi><mo>→</mo><mn>0</mn><mo>+</mo></mrow></munder><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>c</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mrow><mo fence=\"true\">∣</mo><mfrac><mi>f</mi><mi>g</mi></mfrac><mo fence=\"true\">∣</mo></mrow><mo>=</mo><mo>⋯</mo><mo>=</mo><mn>1</mn><mo>=</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">\\lim_{a \\to 0+} \\lim_{c \\to \\infty} \\left|\\frac{f}{g}\\right| = \\dots = 1 = M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.3829em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">+</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7754em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.45em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span style=\"width:0.333em;height:2.400em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.333em\" height=\"2.400em\" viewBox=\"0 0 333 2400\"><path d=\"M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.45em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span style=\"width:0.333em;height:2.400em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.333em\" height=\"2.400em\" viewBox=\"0 0 333 2400\"><path d=\"M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span></span></p>\n<p>which is the case.</p>",
        "id": 432662506,
        "sender_full_name": "Ira Fesefeldt",
        "timestamp": 1712827413
    },
    {
        "content": "<p>Note that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>≪</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f \\ll g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≪</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> in this context is the same as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>=</mo><mi>o</mi><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f = o(g)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">o</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span></span></span></span> if I understand correctly. Mathlib already has notation for the latter: <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.%C2%ABterm_=o[_]_%C2%BB\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.%C2%ABterm_=o[_]_%C2%BB</a></p>",
        "id": 432666190,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1712828661
    },
    {
        "content": "<p>When I see that sort of simplification, I'm usually thinking about first order v.s. higher order terms, where the assumption is that we can detect one order of a small number when added to a 'normal' number, but not two. So the numerator would stay even if it were <code>a^612 b</code>, because it's not being added with (and thus implicitly compared with) anything; whereas the denominator has removed all terms of order <code>a^2</code>, because it starts with <code>1+</code> and so there's a reference number to say it's \"very small\" in comparison to.</p>",
        "id": 432669355,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1712829626
    },
    {
        "content": "<p>The relevant concept in strict mathematics is usually handled by dual numbers, which already exist in Lean as <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=DualNumber#doc\">docs#DualNumber</a>, but that would incorrectly remove e.g. an <code>a^2</code> in the numerator. So that's not a perfect solution, but it might be a good approximation for a number of use cases.</p>",
        "id": 432669568,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1712829705
    },
    {
        "content": "<p>In general, I'd probably imagine this best implemented as a tactic that recurses into the expression tree to some specified level, then reduces everything it finds there to the form <code>α ε^n (1 + β ε)</code>, where <code>ε</code> is \"small\" and all other constants are \"normal\", throwing away higher order terms as needed. Perhaps it could in fact just attempt to factor out as many copies of <code>ε</code> as possible, and then try to series-expand and/or substitute in a dual?</p>",
        "id": 432670196,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1712829910
    },
    {
        "content": "<p>Related to this: do we have notation (I assume we do?) for neglibility? <a href=\"https://en.wikipedia.org/wiki/Negligible_function\">https://en.wikipedia.org/wiki/Negligible_function</a></p>",
        "id": 432674185,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1712831391
    },
    {
        "content": "<p>I don't think we do. And it would be more than just notation: it's little-o of every inverse polynomial.</p>",
        "id": 432681556,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1712834142
    }
]