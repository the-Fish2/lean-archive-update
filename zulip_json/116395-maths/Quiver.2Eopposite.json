[
    {
        "content": "<p>This is how <code>Quiver.opposite</code> is defined in mathlib:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- `Vᵒᵖ` reverses the direction of all arrows of `V`. -/</span>\n<span class=\"kd\">instance</span> <span class=\"n\">opposite</span> <span class=\"o\">{</span><span class=\"n\">V</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Quiver</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Quiver</span> <span class=\"n\">V</span><span class=\"bp\">ᵒᵖ</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">unop</span> <span class=\"n\">b</span> <span class=\"bp\">⟶</span> <span class=\"n\">unop</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">ᵒᵖ</span><span class=\"o\">⟩</span>\n</code></pre></div>\n<p>Why is there an <code>ᵒᵖ</code> also at the level of morphisms? Why not just define them as <code>unop b ⟶ unop a</code>? I'm guessing this is to avoid some kind of ambiguity between <code>unop b ⟶ unop a</code> and <code>aᵒᵖ ⟶ bᵒᵖ</code>, but I don't see where exactly this might become an issue.</p>",
        "id": 434422357,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1713554814
    },
    {
        "content": "<p>I made the change because it was too permissive, see <a href=\"https://github.com/leanprover-community/mathlib4/pull/3193\">https://github.com/leanprover-community/mathlib4/pull/3193</a></p>",
        "id": 434431727,
        "sender_full_name": "Joël Riou",
        "timestamp": 1713558943
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459699\">Joël Riou</span> <a href=\"#narrow/stream/116395-maths/topic/Quiver.2Eopposite/near/434431727\">said</a>:</p>\n<blockquote>\n<p>I made the change because it was too permissive, see <a href=\"https://github.com/leanprover-community/mathlib4/pull/3193\">https://github.com/leanprover-community/mathlib4/pull/3193</a></p>\n</blockquote>\n<p>thanks!</p>",
        "id": 434436582,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1713561206
    }
]