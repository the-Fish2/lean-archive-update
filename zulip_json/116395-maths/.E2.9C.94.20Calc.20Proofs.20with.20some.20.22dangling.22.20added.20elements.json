[
    {
        "content": "<p>Hello everybody,</p>\n<p>I am looking for a proof of the difference of squares using calc <code>(a + b) * (a - b) = a * a - b * b</code>.</p>\n<p>The problem is that I need to apply the Int.mul_sub rewrite in an expression that also has some more elements. I boiled the problem down to this:</p>\n<p>Clean usage of mul_sub:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">use_mul_sub</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">Int.mul_sub</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n</code></pre></div>\n<p>Works fine, as expected.<br>\nNow mul_sub with a dangling added \"c\":</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">mul_sub_plus_c</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">:=</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">Int.mul_sub</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n<span class=\"c1\">-- type mismatch Int.mul_sub b a has type b * (a - b) = b * a - b * b : Prop but is expected to have type b * (a - b) + c = b * a - b * b + c : Prop</span>\n</code></pre></div>\n<p>How to apply it to just a part of the expression?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>\n</code></pre></div>",
        "id": 421959610,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1708129728
    },
    {
        "content": "<p><code>rw</code></p>",
        "id": 421962512,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708132093
    },
    {
        "content": "<p>Mathlib has some syntax that can help with this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">mul_sub_plus_c</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">congr</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">Int.mul_sub</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>This is adding <code>c</code> to both sides of the lemma inside the <code>$(...)</code> expression.</p>\n<p>(Note: if you do <code>by exact e</code> you can replace it with just <code>e</code>.)</p>",
        "id": 421965048,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1708134714
    },
    {
        "content": "<p>Usually people would use <code>rw [Int.mul_sub b a b]</code> though.</p>",
        "id": 421965103,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1708134755
    },
    {
        "content": "<p>Let me restate it:</p>\n<p>I am doing it with the following tactics:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">difference_of_squares</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span>             <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span>     <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.add_mul</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span>   <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.mul_sub</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- rw[Int.mul_sub]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- rw[Int.mul_comm]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span>             <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- rw[Int.sub_self]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span>                 <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">add_zero</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>On paper this makes sense, but apparently the tactic is not being applied in the place I wanted, I am getting \"unsolved goals\"</p>",
        "id": 422023692,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1708186077
    },
    {
        "content": "<p>It's rewriting correctly, but you haven't accounted for parentheses (that is, you've tried to implicitly use associativity)</p>",
        "id": 422026281,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708188188
    },
    {
        "content": "<p>Note that <code>a+b+c+d</code> actually means <code>((a+b)+c)+d</code>. And <code>add_assoc</code> says <code>(a+b)+c=a+(b+c)</code>.</p>",
        "id": 422028187,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708189907
    },
    {
        "content": "<p>Interesting, I am applying some other associativity rules now, it got down to one last step to finish it:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">difference_of_squares</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span>                 <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rfl</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span>         <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.add_mul</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span>       <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.mul_sub</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span>     <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.add_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.mul_sub</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.mul_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">Int.add_sub_assoc</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.add_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span>     <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">Int.add_sub_assoc</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span>     <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- ?</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span>                 <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.sub_self</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span>                     <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.zero_add</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 422045253,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1708206632
    },
    {
        "content": "<p>Do you know about the <code>ring</code> tactic? Its job is to do all of this busywork for you.</p>",
        "id": 422078221,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708243815
    },
    {
        "content": "<p>I don't know why you're claiming that the sorry is \"one step\", that looks to me like the application of several axioms. Of course <code>ring</code> will do it in one step, but <code>ring</code> will do the entire thing in one step.</p>",
        "id": 422078360,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708243959
    },
    {
        "content": "<p>No, I didn't know it. But then again, it's because on paper it's a \"step\" but I'll have to look into the associativity axioms closer to do it. This is a didactic exercise so I wont use ring for now, but I'll certainly use it in the future, thanks!</p>",
        "id": 422093996,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1708259200
    },
    {
        "content": "<p>the <code>exact?</code> tactic also works here :)</p>",
        "id": 422094423,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708259607
    },
    {
        "content": "<p>The mathlib proof is at <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Commute.mul_self_sub_mul_self_eq#src\">src#Commute.mul_self_sub_mul_self_eq</a>, if you're curious</p>",
        "id": 422094496,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708259655
    },
    {
        "content": "<p>It needs only 5 \"steps\", thanks to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=sub_add_sub_cancel#doc\">docs#sub_add_sub_cancel</a></p>",
        "id": 422094504,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708259672
    },
    {
        "content": "<p>I'm still unclear why you are arguing that <code>mul_comm</code> is \"a step\" (which I agree with), but also that changing <code>A + B - C - B</code> to <code>B - B + A - C</code> (a totally random permutation, and a combination of several \"steps\" in my mental model) is still \"a step\" in yours (any more than going from e.g. line 3 to line 7 of your solution is \"a step\")</p>",
        "id": 422097680,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708262706
    },
    {
        "content": "<p>Now I understand better how the implicit precedence is applied, it makes sense that there are more steps to it. This is my final solution:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">difference_of_squares</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span>                 <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span>         <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.add_mul</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span>       <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.mul_sub</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span>     <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.add_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.mul_sub</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.mul_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">Int.add_sub_assoc</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.add_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span>     <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">Int.add_sub_assoc</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span>     <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">sub_right_comm</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span>                     <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Int.add_sub_cancel</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 422111769,
        "sender_full_name": "Bernardo Borges",
        "timestamp": 1708275443
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"671510\">Bernardo Borges</span> has marked this topic as resolved.</p>",
        "id": 422111805,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708275467
    }
]