[
    {
        "content": "<p>How far are we from proving the class number formula? We don't have the regulator, but we have zeta functions, so maybe it's not completely crazy.</p>\n<p><span class=\"user-mention\" data-user-id=\"488648\">@Xavier Roblot</span> <span class=\"user-mention\" data-user-id=\"481963\">@David Loeffler</span> <span class=\"user-mention\" data-user-id=\"479359\">@Michael Stoll</span></p>",
        "id": 435871866,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714307962
    },
    {
        "content": "<p>The regulator would be a good first target. Then we need to define the Dedekind zeta function of a global field (or a Dedekind domain?) and prove its relevant properties. I think we have Minkowski's convex body theorem, which I seem to remember is used somewhere in the proof (of the class number formula)...</p>",
        "id": 435897636,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714328277
    },
    {
        "content": "<p>I think we are a fair way away from proving the analytic continuation and functional equation for Dedekind zeta if a general number field (abelian fields are much easier of course, since we have Dirichlet L-series). Analytic continuation is not absolutely necessary for the class number formula, of course - it could be formulated as a one-sided limit - but it may mean the statement is less useful than otherwise.</p>",
        "id": 435899508,
        "sender_full_name": "David Loeffler",
        "timestamp": 1714328909
    },
    {
        "content": "<p>Defining the regulator should be easy: it is just the covolume of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=NumberField.Units.unitLattice#doc\">docs#NumberField.Units.unitLattice</a>. I could<br>\nPR that in Mathlib  if needed.</p>",
        "id": 435908647,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1714337980
    },
    {
        "content": "<p>Now, for the analytic class number formula, I did some work toward the computation of the limit of<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">A(n)/n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">n</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">A(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> is the number of principal ideals of norm ‚â§ n. I have a bunch a PR, most<br>\nof them still <code>WIP</code> in that direction.</p>",
        "id": 435908698,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1714338005
    },
    {
        "content": "<p>For that, we need  to define a cone in <code>‚Ñù^r‚ÇÅ √ó ‚ÑÇ^r‚ÇÇ</code> with <code>(r‚ÇÅ, r‚ÇÇ)</code> the signature of a number field <code>K</code> that is a fundamental domain for the action of the image of the group of units. With the obvious norm on <code>‚Ñù^r‚ÇÅ √ó ‚ÑÇ^r‚ÇÇ</code>, the points of norm <code>n</code> in this cone that are images of elements of <code>ùìû K</code> are in bijection with principal ideals of <code>ùìû K</code> of norm n. This part is essentially done.</p>\n<p>Then, standard techniques from the geometry of numbers give an estimate for the limit of the number of these points divided by <code>n</code> in term of some volume computation. This part is almost done: what is missing is the proof of a theorem of Lebesgue - Vitali that I mentioned  <a href=\"#narrow/stream/116395-maths/topic/Lebesgue-Vitali.20for.20Riemann.20integrability\">in another thread</a> in order to prove that the Riemann integral of the characteristic function of some set exists.</p>",
        "id": 435908806,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1714338103
    },
    {
        "content": "<p>Another big piece missing is the actual computation of the volume. This might be tricky to do in Lean since it requires some quite technical change of variables.</p>\n<p>Once all of this is done, I think it should be fairly straightforward to prove some basic version of<br>\nthe analytic class formula, at least as a formula for the  limit  of a real variable.</p>",
        "id": 435908993,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1714338264
    },
    {
        "content": "<p>It may come in handy that we now have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.addCovolume#doc\">docs#MeasureTheory.addCovolume</a>; <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> and I have been trying to develop these quotient volume techniques for just these kinds of applications... (e.g., see the class <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.AddQuotientMeasureEqMeasurePreimage#doc\">docs#MeasureTheory.AddQuotientMeasureEqMeasurePreimage</a>)</p>",
        "id": 435928578,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1714355030
    },
    {
        "content": "<p>Ok, maybe we should try to set up some sort of project in this direction. It seems like it's not completely science fiction. Personally I would be happy with the abelian version, but this is probably not really mathlib style.</p>",
        "id": 435950219,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714364336
    },
    {
        "content": "<p>Anyway the regulator is surely the first step, then we can try to at least state the formula.</p>",
        "id": 435950236,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714364369
    },
    {
        "content": "<p>A summary of this thread as a github project would be good. We can always blueprintify later.</p>",
        "id": 435953464,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714365482
    },
    {
        "content": "<p>The presentation by Hida in his book <em>Elementary theory ofL functions and Eisenstein series</em> seems well suited to what is wanted here. Using the Shintani method for the meromorphic continuation, which will be a nice addition too.</p>",
        "id": 435967606,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1714373114
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252920\">Alex Kontorovich</span> <a href=\"#narrow/stream/116395-maths/topic/Class.20number.20formula/near/435928578\">said</a>:</p>\n<blockquote>\n<p>It may come in handy that we now have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.addCovolume#doc\">docs#MeasureTheory.addCovolume</a>; <span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> and I have been trying to develop these quotient volume techniques for just these kinds of applications... (e.g., see the class <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.AddQuotientMeasureEqMeasurePreimage#doc\">docs#MeasureTheory.AddQuotientMeasureEqMeasurePreimage</a>)</p>\n</blockquote>\n<p>Yes, in fact, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Zlattice.covolume#doc\">docs#Zlattice.covolume</a> uses this. I added the definition of the regulator in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12504\">#12504</a>. As I said, defining the regulator is pretty straightforward, what is a bit trickier is how to formulate the fact that it is independent of the different choices. You can look at <a href=\"https://github.com/leanprover-community/mathlib4/pull/12504\">#12504</a> for a possible statement (without the proof yet  <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> ) but there may be better ways to express that: comments welcome!</p>",
        "id": 435989839,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1714381007
    },
    {
        "content": "<p>A silly comment: I think that the regulator deserves its own file.</p>",
        "id": 435992346,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714381802
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/116395-maths/topic/Class.20number.20formula/near/435953464\">said</a>:</p>\n<blockquote>\n<p>A summary of this thread as a github project would be good. We can always blueprintify later.</p>\n</blockquote>\n<p><a href=\"https://github.com/orgs/leanprover-community/projects/20/\">Voil√†</a></p>",
        "id": 436007268,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714386304
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/116395-maths/topic/Class.20number.20formula/near/435992346\">said</a>:</p>\n<blockquote>\n<p>A silly comment: I think that the regulator deserves its own file.</p>\n</blockquote>\n<p>Well, that is easy to solve. </p>\n<p>Also, the first PR about the fundamental cone is ready for review <a href=\"https://github.com/leanprover-community/mathlib4/pull/12268\">#12268</a></p>",
        "id": 436035904,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1714394917
    }
]