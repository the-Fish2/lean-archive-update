[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"634338\">@Michael Rothgang</span> and I are itching to define submanifolds as well as immersions and submersions between manifolds, but we need to make a choice about what to do in the case of infinite-dimensional manifolds, as there are equivalent definitions in finite dimensions that are inequivalent / unnatural in infinite dimensions. We hope a manifold expert here can make a judgment call so we can march ahead.</p>\n<p>One generalisation would be Banach manifolds, for which we can follow Lang's <em>Fundamentals of Differential Geometry</em>. Another generalisation is to model manifolds on locally convex spaces, for which we can follow Kriegl and Michor or Schmeding. The latter would be of interest to me for its application in infinite-dimensional Hamiltonian problems in physics. However, this would first require a generalisation of most of mathlib's analysis to locally convex spaces.</p>\n<p>In order to start doing something, would it be reasonable for us to assume Banach manifold as the chosen setting for now?</p>",
        "id": 412264089,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1704944660
    },
    {
        "content": "<p>Are these definitions incompatible or they agree if the model space is a Banach space?</p>",
        "id": 412266123,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704945649
    },
    {
        "content": "<p>I have neither of these books at home, so can't compare the definitions. Can you post the definitions here?</p>",
        "id": 412266383,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704945746
    },
    {
        "content": "<p>Lang:</p>\n<blockquote>\n<p>Let <code>X</code> be a manifold (of class <code>C^p</code> with <code>p ≥ 0</code>). Let Y be a subset of <code>X</code> and assume that for each point <code>y ∈ Y</code> there exists a chart <code>(V, ψ)</code> at <code>y</code> such that <code>ψ</code> gives an isomorphism of <code>V</code> with a product <code>V₁ × V₂</code> where <code>V₁</code> is open in some space <code>E₁</code> and <code>V₂</code> is open in some space <code>E₂</code>, and such that <code>ψ (Y ∩ V) = V₁ × {a₂}</code> for some point <code>a₂ ∈ V₂</code> (which we could take to be 0). Then it is clear that <code>Y</code> is locally closed in <code>X</code>. Furthermore, the map <code>ψ</code> induces a bijection <code>ψ₁ : Y ∩ V → V₁</code>. The collection of pairs <code>(Y ∩ V, ψ₁)</code> obtained in the above manner constitutes an atlas for <code>Y</code>, of class <code>C^p</code>.</p>\n</blockquote>\n<blockquote>\n<p>Let <code>f : Z → X</code> be a morphism, and let <code>z ∈ Z</code>. We shall say that <code>f</code> is an immersion at <code>z</code> if there exists an open neighborhood <code>Z₁</code> of <code>z</code> in <code>Z</code> such that the restriction of <code>f</code> to <code>Z₁</code> induces an isomorphism of <code>Z₁</code> onto a sub- manifold of <code>X</code>. We say that <code>f</code> is an immersion if it is an immersion at every point.</p>\n</blockquote>\n<blockquote>\n<p>A morphism <code>f: X → Y</code> will be called a submersion at a point <code>x ∈ X</code> if there exists a chart <code>(U, ϕ)</code> at <code>x</code> and a chart <code>(V, ψ)</code> at <code>f(x)</code> such that <code>ϕ</code> gives an isomorphism of <code>U</code> on a products <code>U₁ x U₂</code> (<code>U₁</code> and <code>U₂</code> open in some Banach spaces), and such that the map is a projection. One sees then that the image of a submersion is an open subset (a submersion is in fact an open mapping). We say that <code>f</code> is a submersion if it is a submersion at every point.</p>\n</blockquote>",
        "id": 412282683,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1704957424
    },
    {
        "content": "<p><a href=\"https://arxiv.org/pdf/2112.08114.pdf\">Schmeding</a>: submanifold (1.3.7), immersion/submersion (1.4.1)</p>\n<p><a href=\"https://www.mat.univie.ac.at/~michor/apbookh-ams.pdf\">Kriegl &amp; Michor</a>: submanifold (27.11)</p>",
        "id": 412282849,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1704957536
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"416472\">Winston Yin (尹維晨)</span> <a href=\"#narrow/stream/116395-maths/topic/Infinite-dimensional.20manifolds/near/412264089\">said</a>:</p>\n<blockquote>\n<p>However, this would first require a generalisation of most of mathlib's analysis to locally convex spaces.</p>\n</blockquote>\n<p>This is something I've been hoping for for several years. So not a malus as far as I am concerned.</p>",
        "id": 412283026,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704957618
    },
    {
        "content": "<p>Is somebody working on this generalisation?</p>",
        "id": 412283590,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1704957965
    },
    {
        "content": "<p>The first step is to generalize <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Asymptotics.IsLittleO#doc\">docs#Asymptotics.IsLittleO</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=HasFDerivAtFilter#doc\">docs#HasFDerivAtFilter</a></p>",
        "id": 412292402,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704962303
    },
    {
        "content": "<p>You can find a recent discussion <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Automatic.20Differentiation.20-.20Tomas.20Skrivan\">here</a></p>",
        "id": 412292442,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704962322
    },
    {
        "content": "<p>tl;dr I have a branch with a definition and theorems saying that it's equivalent to more classical definitions in 2 cases; needs work to make it Mathlib-ready; help is welcome since it's not a high priority project for me</p>",
        "id": 412292600,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704962384
    },
    {
        "content": "<p>Schmeding also uses a different approach than Kriegl &amp; Michor. The former uses Bastiani calculus, while the latter uses convenient calculus, which is weaker than Bastiani calculus exactly in that smooth maps don't have to be continuous.</p>",
        "id": 412430916,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1705011558
    },
    {
        "content": "<p>I (almost?) never needed calculus outside of the normed (normable) space setting, and I guess many other people here have the same experience. Could you please answer the following questions (applies both to calculus and submanifolds):</p>\n<ol>\n<li>For each definition you mention, what are the assumptions on the domain and the codomain?</li>\n<li>How does \"a more general version of\" graph look like?</li>\n<li>Are there cases when two definitions apply and give different results?</li>\n</ol>",
        "id": 412431803,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705011981
    },
    {
        "content": "<p>I hope these are accurate based on my reading of the references.</p>\n<p>Schmeding:</p>\n<ol>\n<li>Manifolds modelled on locally convex spaces + Hausdorff. Submanifolds are modelled on sequentially closed subspaces. Immersion/submersion requires the model space of the codomain/domain to split in a way compatible with the function.</li>\n<li>For <code>f : M → N</code>, <code>graph f</code> is a split submanifold of <code>M × N</code>.</li>\n</ol>\n<p>Kriegl &amp; Michor:</p>\n<ol>\n<li>Manifolds modelled on convenient vector spaces (i.e. locally convex, <code>c^∞</code>-complete) + smoothly Hausdorff + domains of charts are <code>c^∞</code>-open. Submanifolds are modelled on closed subspaces. Notions of initial/final mappings between manifolds.</li>\n<li>No idea</li>\n</ol>\n<p>For question 3, I think both are meant to be generalisations of Banach manifolds, so definitions should boil down to some corresponding version in Banach manifolds, but I'm not an expert.</p>",
        "id": 412459266,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1705024600
    },
    {
        "content": "<p>Since Banach manifolds are more familiar, I'm asking if you think it's reasonable to carry on developing the manifold library in this setting. It's not general enough for certain reasonable applications that I would find interesting, such as Morse theory or diffeomorphism groups, but these distant possibilities should be no reason to block progress today.</p>",
        "id": 412459811,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1705024914
    },
    {
        "content": "<p>I'm sorry for misformulating. In (2) I meant, does one of the definition generalize the other? I was talking about the graph with vertices = definitions and directed edge = \"definition A is more general than definition B\".</p>",
        "id": 412459893,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705024942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sébastien Gouëzel</span> Do you know anything about submanifolds in settings other than Banach spaces?</p>",
        "id": 412460151,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705025080
    },
    {
        "content": "<p>I don't feel confident enough to draw an accurate graph.</p>",
        "id": 412460621,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1705025349
    },
    {
        "content": "<p>I think that we should go with normed spaces and <code>HasMFDerivAt</code> etc for now, think about generalizations later.</p>",
        "id": 412461008,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705025558
    },
    {
        "content": "<p>E.g., some day we should figure out how to deal with finitely smooth manifolds.</p>",
        "id": 412461032,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705025583
    },
    {
        "content": "<p>Possibly, we'll have to figure out how to deal with different calculus theories in one code base. But this is not an easy task.</p>",
        "id": 412461082,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705025637
    },
    {
        "content": "<p>No, I don't know anything beyond Banach spaces, and I think we should indeed start with Banach spaces.</p>",
        "id": 412487325,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705042570
    },
    {
        "content": "<p>A comment on submanifolds: it is hard to get this right from a design point of view, and that's why we don't have them already in mathlib. Basic use cases that should absolutely be covered are smooth submanifolds (e.g. the circle in the plane), but also smooth submanifolds with boundary (e.g., the closed disk in the plane) as these are crucial for Stokes formula.</p>\n<p>Here is a possible design sketch. Let <code>I</code> be a model with corners (between <code>H</code> and <code>E</code>) and <code>I'</code> another model with corners (between <code>H'</code> and <code>I'</code>). Let <code>J = J (I, I')</code> be some class to be specified, registering an embedding of the model <code>I'</code> in the model <code>I</code> (think a subspace in a space, or a half-space in a whole space). Then  consider <code>M</code> which is a smooth manifold with corner with respect to <code>I</code>, and <code>N : Set M</code> which is itself a smooth manifold with corners with respect to <code>I'</code>. Then <code>N</code> is a submanifold for <code>J</code> if it satisfies some properties, also to be specified.</p>\n<p>The properties should be strong enough to entail a few basic properties. Like</p>\n<ul>\n<li><code>M</code> is a submanifold of itself, for some trivial <code>J</code> (basically the identity)</li>\n<li>open sets of <code>M</code> are submanifold, for the same trivial <code>J</code></li>\n<li>the inclusion of <code>N</code> in <code>M</code> is smooth</li>\n<li>Given another manifold <code>P</code>, a function <code>f : P -&gt; N</code> is smoooth if and only if the composition with the inclusion is smooth as a function from <code>P</code> to <code>M</code>.</li>\n</ul>\n<p>And one should have constructors, like: if <code>N</code> is a subset of a manifold <code>M</code>, which is locally given by level lines of a smooth function with onto derivative, then <code>N</code> inherits a charted space structure (with respect to some suitable <code>H'</code>), and a smooth manifold structure, (with respect to some suitable <code>I'</code>) and for this smooth structure it is a submanifold (for a suitably defined <code>J</code>).</p>\n<p>Finally, the circle and the closed disk should be submanifolds of the plane.</p>",
        "id": 413117885,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705398941
    },
    {
        "content": "<p>Thanks for writing this out. I've been experimenting with this over the weekend, and I think we're mostly on the same page so far. I agree with the difficulty of getting the design right. My ongoing approach is to first define immersion/embedding, so that submanifolds of <code>M</code> are defined by an already existing manifold <code>N</code>, not necessarily a subset of <code>M</code>, together with an embedding from <code>N</code> to <code>M</code>. Basically, there won't be a definition of submanifold, just the (injective) image of another manifold via an immersion/embedding. This way we avoid dealing with subsets unnecessarily, and an injective integral curve would automatically be a submanifold. Immersions also induce a charted space / smooth structure on its domain.</p>\n<p>On the model side, the class <code>J</code> would be some slice condition, i.e. there exists an injective linear map (with some conditions) from <code>E'</code> to <code>E</code> which embeds <code>range I'</code> into <code>range I</code>. This works for the half-space/quadrant, and the half-line as a slice of the half-space. It doesn't require <code>H'</code> to be a subset of <code>H</code> or <code>E'</code> to be a submodule of <code>E</code>.</p>\n<p>This means that a submanifold is really two pieces of data, your <code>J</code> specifying the model embedding and an immersion that is compatible with <code>J</code>.</p>\n<p>Your fourth bullet point sounds analogous to what I did in <a href=\"https://github.com/leanprover-community/mathlib4/pull/8397\">#8397</a>. (And perhaps we should use the number of o's in smoooooooth to refer to the smoothness class for a map <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span>)</p>",
        "id": 413126530,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1705401730
    },
    {
        "content": "<p>Just curious, have you guys considered using <a href=\"https://en.wikipedia.org/wiki/Whitney_conditions\">Whitney stratifications</a> as a general structure that can implement all sorts of boundaries, corners, conical singularities, etc? They are general enough that they could meet Mathlib needs for many special cases in the future. A quick search doesn't reveal any mention of this in the Zulip archives. This is not directly related to infinite dimensional manifolds. Sorry if I'm bringing this up in the wrong place, or retreading an old topic.</p>",
        "id": 415381785,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1705446989
    },
    {
        "content": "<p>I'm not familiar with them. Are you proposing that the current <code>ModelWithCorners</code> be generalised somehow?</p>",
        "id": 415396453,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1705453116
    },
    {
        "content": "<p>Yes, I've thought abouth them for mathlib when initially defining manifolds, but the design seems really hard to get right with respect to the interaction of subtypes and typeclasses, so I decided to postpone that until much later, when we have a nontrivial differential manifold library with real applications, and a better feeling for what works well and what doesn't work so well in our current framework.</p>",
        "id": 415966333,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705476067
    },
    {
        "content": "<p>Manifolds with corners pose a difficulty, since the boundary is no more a manifold with corners. (Example: a square in the plane .) There is a theory where the boundary is not a sub-stuff but rather something else which is immersed into the expected boundary. (Example: the disjoint union of the 4 edges of the square.)</p>",
        "id": 415989260,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1705485162
    },
    {
        "content": "<p>Maybe this discussion needs to be moved?</p>",
        "id": 415989419,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705485215
    },
    {
        "content": "<p>I'm no great expert either on Whitney stratifications and especially not on Mathlib internals, but I do know from experience in the differential geometry literature, if you go down the path of defining boundaries, corners, cones, orbifold singularities, etc. by special constructions, you will likely never run out of special cases to cover.</p>\n<p>I just think that having such a general structure available is a good target for the future. In particular, if one might want to eventually represent real/complex (semi-)algebraic sets as differential geometric objects (this already covers many examples with boundaries and corners), Whitney startifications are probably the way to go. So it is at least worth keeping them in mind at the level of design discussions.</p>",
        "id": 416005671,
        "sender_full_name": "Igor Khavkine",
        "timestamp": 1705490391
    },
    {
        "content": "<p>There is a definition used by Melrose school called manifolds with fibered corners which seems to be general enough for the theory of manifolds with corners and their boundaries etc</p>",
        "id": 422506989,
        "sender_full_name": "Omar Mohsen",
        "timestamp": 1708465697
    },
    {
        "content": "<p>FWIW, the Bastiani calculus is the stronger notion, and extends results on manifolds nontrivially to those modelled on locally convex spaces. In the convenient setting you can have functions that are smooth without even being continuous, IIRC! It essentially redefines the topology to make things \"just work\", which is fine, but it's very much a different approach. </p>\n<p>Convenient calculus and Bastiani calculus agree up to Fréchet spaces, from memory, not just Banach.</p>",
        "id": 422547212,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1708492907
    },
    {
        "content": "<p>Note that <a href=\"https://en.wikipedia.org/wiki/Convenient_vector_space\">Wikipedia says of convenient vector spaces</a>:</p>\n<blockquote>\n<p>The corresponding calculus of smooth mappings is called convenient calculus. It is weaker than any other reasonable notion of differentiability, it is easy to apply, but there are smooth mappings which are not continuous. This type of calculus alone is not useful in solving equations.</p>\n</blockquote>",
        "id": 422554606,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1708497937
    }
]