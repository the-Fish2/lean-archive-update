[
    {
        "content": "<p>I'm learning LEAN and trying to formalize a paper. In one step, a set of all distributions with finite support is defined. I tried</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">}</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n<span class=\"kn\">open</span> <span class=\"n\">unitInterval</span>\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n<span class=\"kd\">def</span> <span class=\"n\">Y</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">X</span>  <span class=\"bp\">-&gt;</span> <span class=\"n\">I</span> <span class=\"bp\">|</span> <span class=\"o\">{</span><span class=\"n\">x</span><span class=\"bp\">|</span><span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">}</span><span class=\"bp\">.</span><span class=\"n\">Finite</span> <span class=\"bp\">∧</span> <span class=\"bp\">Σ^</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"bp\">=</span><span class=\"mi\">1</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>But I got the error <code>AddCommMonoid ↑I</code>. I'm wondering why. Does anyone know how to define the set correctly without more mathlib build-in functions?</p>",
        "id": 423457915,
        "sender_full_name": "mty",
        "timestamp": 1708971761
    },
    {
        "content": "<p>The issue is that if I is the unit interval then there's no addition defined globally on it (because the sum of two things in the unit interval might not be in the unit interval). Perhaps the easiest way to fix it is just to consider functions taking values in the nonnegative reals, because if the sum is 1 then all of the values are guaranteed to be &lt;= 1.</p>",
        "id": 423461638,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708973118
    },
    {
        "content": "<p>Thank you Kevin! It works.</p>",
        "id": 423463236,
        "sender_full_name": "mty",
        "timestamp": 1708973743
    }
]