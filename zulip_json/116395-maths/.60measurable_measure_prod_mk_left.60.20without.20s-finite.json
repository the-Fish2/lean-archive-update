[
    {
        "content": "<p>The lemma <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=measurable_measure_prod_mk_left#doc\">docs#measurable_measure_prod_mk_left</a> gives the measurability of the measure of a slice of a set in a product space, under the assumption that the measure is s-finite:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">measurable_measure_prod_mk_left</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">SFinite</span><span class=\"w\"> </span><span class=\"n\">ν</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Set</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"bp\">×</span><span class=\"w\"> </span><span class=\"n\">β</span><span class=\"o\">)}</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">hs</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">MeasurableSet</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">Measurable</span><span class=\"w\"> </span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">ν</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Prod</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">⁻¹'</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n</code></pre></div>\n<p>I am looking for a counter-example to the same statement without the s-finite assumption. Is there a (non s-finite) measure for which we can show that this is not measurable? The only non-s-finite measure I have in mind is the counting measure on the reals, but I did not manage to find a set <code>s</code> for which I could see a contradiction.</p>\n<p>I have a related second question: if there is indeed a counter-example as I suppose, we can't prove the following lemma, in which I want measurability with respect to both the parameter and the measure.</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">MeasureTheory</span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">measurable_measure_prod_mk_left'</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"n\">β</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span><span class=\"w\"> </span><span class=\"n\">β</span><span class=\"o\">]</span>\n<span class=\"w\">    </span><span class=\"o\">{</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Set</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"bp\">×</span><span class=\"w\"> </span><span class=\"n\">β</span><span class=\"o\">)}</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">hs</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">MeasurableSet</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">Measurable</span><span class=\"w\"> </span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"bp\">×</span><span class=\"w\"> </span><span class=\"n\">Measure</span><span class=\"w\"> </span><span class=\"n\">β</span><span class=\"w\"> </span><span class=\"bp\">↦</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Prod</span><span class=\"bp\">.</span><span class=\"n\">mk</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"bp\">⁻¹'</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>For what subset of measures does that become true? Say I define a new type <code>SFiniteMeasure β</code>, subtype of s-finite measures. Does the lemma hold then?</p>\n<p>In category theory terms, this lemma is what I need in an attempt to define a strength (<a href=\"https://ncatlab.org/nlab/show/strong+monad\">https://ncatlab.org/nlab/show/strong+monad</a>) on the giry monad. This is a step towards putting a symmetric monoidal structure on the Kleisli category, which I want in order to get access to the automation provided by the tactics slice and monoidalComp as well as string diagrams for Markov kernels.<br>\nBy the way, the string diagram PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/10581\">#10581</a> is awaiting review.</p>",
        "id": 442988342,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1717659072
    },
    {
        "content": "<p>Here is a counterexample. I work in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi><mo>×</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R} \\times \\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7722em;vertical-align:-0.0833em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> with the usual Borel sigma-algebra (which is the product sigma-algebra). Let <code>s</code> be the diagonal, and let <code>ν</code> be an uncountable sum of Dirac masses (all the Dirac masses in a given set <code>t</code>). Then <code>ν (Prod.mk x ⁻¹' s) = ν {x}</code> is 1 for <code>x</code> in <code>t</code> and <code>0</code> for <code>x</code> outside <code>t</code>, so you can make it non-measurable by taking a non-measurable set <code>t</code>.</p>",
        "id": 442994531,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1717660792
    },
    {
        "content": "<p>Thanks, that's a clear and simple counterexample! I will make a PR to add that example to a docstring near <code>measurable_measure_prod_mk_left</code>.</p>",
        "id": 442996267,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1717661086
    },
    {
        "content": "<p>About the second question: for a subtype of measures with mass bounded by a common constant, <code>fun p : α × Measure β ↦ p.2</code> should be a finite kernel and I should be able to use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ProbabilityTheory.kernel.measurable_kernel_prod_mk_left#doc\">docs#ProbabilityTheory.kernel.measurable_kernel_prod_mk_left</a> for a set in <code>(α × Measure β) × β</code>. And I might then be able to extend to all s-finite measures? I'll try that.</p>",
        "id": 443020138,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1717668227
    }
]