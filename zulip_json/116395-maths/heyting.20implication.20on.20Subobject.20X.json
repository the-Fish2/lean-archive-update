[
    {
        "content": "<p>Does anyone know what kind of assumptions are needed to define the heyting implication on the lattice of subobjects? (<span class=\"user-mention\" data-user-id=\"420917\">@Sina H ð“ƒµ</span>?) It is used on page 9 <a href=\"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-213.pdf\">here</a> (cc: <span class=\"user-mention\" data-user-id=\"218493\">@Valeria de Paiva</span>) which asserts that it suffices to assume that C is locally cartesian closed (but also mentions that this assumption is not minimal). Mathlib has a construction <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Subobject.sSup#doc\">docs#CategoryTheory.Subobject.sSup</a> which depends on <code>[WellPowered C] [HasImages C] [HasCoproducts C]</code> but I don't know what relation these assumptions have to being an LCCC</p>",
        "id": 447897068,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719620491
    },
    {
        "content": "<p>Oh, apparently having a <code>sSup</code> is not sufficient for <code>sSup {Z | Z âŠ“ X â‰¤ Y}</code> to define heyting implication, you also need the complete distributive law <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Order.Frame.inf_sSup_le_iSup_inf#doc\">docs#Order.Frame.inf_sSup_le_iSup_inf</a></p>",
        "id": 447900978,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719622971
    },
    {
        "content": "<p>From memory <code>[WellPowered C] [HasImages C] [HasCoproducts C]</code> came as a result of applied reverse mathematics while developing the file, rather than the literature.</p>",
        "id": 447934969,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719642199
    },
    {
        "content": "<p>I'm currently making use of the following dubious typeclass:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">protected</span><span class=\"w\"> </span><span class=\"kn\">class</span><span class=\"w\"> </span><span class=\"n\">Subobject</span><span class=\"bp\">.</span><span class=\"n\">HasHImp</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">C</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Category</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">HasPullbacks</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">]</span><span class=\"w\">  </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"n\">himp</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"w\"> </span><span class=\"n\">Y</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Subobject</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Subobject</span><span class=\"w\"> </span><span class=\"n\">A</span>\n<span class=\"w\">  </span><span class=\"n\">le_himp_iff</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Subobject</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">â‰¤</span><span class=\"w\"> </span><span class=\"n\">himp</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"bp\">â†”</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"bp\">âŠ“</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"bp\">â‰¤</span><span class=\"w\"> </span><span class=\"n\">c</span>\n<span class=\"w\">  </span><span class=\"n\">himp_pullback_le</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"bp\">âŸ¶</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Subobject</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">himp</span><span class=\"w\"> </span><span class=\"o\">((</span><span class=\"n\">pullback</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">obj</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">((</span><span class=\"n\">pullback</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">obj</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">â‰¤</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">pullback</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">obj</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">himp</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I have tried and failed to prove both of these lemmas, and I have reason to believe that le_himp_iff is false using the supremum definition because in preorder categories the question reduces to the aforementioned lattice rule <code>inf_sSup_le_iSup_inf</code>, which is not derivable from just complete lattice axioms</p>",
        "id": 447935294,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719642401
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  you have seen <a href=\"https://ncatlab.org/nlab/show/Heyting+category\">https://ncatlab.org/nlab/show/Heyting+category</a> right? this seems to indicate that we need that coproducts are stable under pullbacks in C as well, which is something I already knew I needed to have later on for additives.<br>\nBut distributivity of the lattice of subobjects I thought was automatic. maybe not?</p>",
        "id": 447947189,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1719649186
    },
    {
        "content": "<p>General subobjects are not distributive, right? Consider vector subspaces</p>",
        "id": 447961412,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1719656466
    },
    {
        "content": "<p>iirc this file came out of stuff I had in the topos project, in which I deduced these facts from the existence of a subobject classifier, which is a stronger assumption than images and coproducts and LCCC but doesn't assume well powered-ness...</p>",
        "id": 447985987,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1719673511
    }
]