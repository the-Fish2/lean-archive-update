[
    {
        "content": "<p>lake appears to be printing \"build\" lines for some initial segment of files, even when all oleans are present.</p>\n<p>See <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8892841920/job/24421612621\">https://github.com/leanprover-community/mathlib4/actions/runs/8892841920/job/24421612621</a> as an example.</p>",
        "id": 436251610,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714477253
    },
    {
        "content": "<p>It's running fast, so I think it is successfully noticing and reusing the olean. Just printing unnecessarily. One doesn't notice this on the command line because the build lines are now being overwritten.</p>",
        "id": 436251762,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714477305
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>, do you see what is going on?</p>",
        "id": 436251813,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714477322
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112165\">rss-bot</span> <a href=\"#narrow/stream/116290-rss/topic/Recent.20Commits.20to.20lean4.3Amaster/near/436179626\">said</a>:</p>\n<blockquote>\n<p><strong><a href=\"https://github.com/leanprover/lean4/commit/02925447bd8bd5af68bd34613ae473593294be29\">refactor: lake: <code>--wfail</code> &amp; track jobs &amp; logs &amp; simplify build monads</a></strong> (<a href=\"https://github.com/leanprover/lean4/pull/3835\">lean4#3835</a>)</p>\n<p>This is a major refactor of Lake's build code.  The key changes:</p>\n<ul>\n<li><strong>Job Registration</strong>: Significant build jobs are now registered by<br>\nbuild functions. The DSL inserts this registration automatically into<br>\nuser-defined targets and facets, so this change should require no<br>\nend-user adaption. Registered jobs are incrementally awaited by the main<br>\nbuild function and the progress counter now indicates how many of these<br>\njobs are completed and left-to-await. On the positive side, this means<br>\nthe counter is now always accurate. On the negative side, this means<br>\nthat jobs are displayed even if they are no-ops (i.e., if the target is<br>\nalready up-to-date).</li>\n</ul>\n</blockquote>\n<p>Is this it? ^</p>",
        "id": 436253236,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714477760
    },
    {
        "content": "<p>Oh, yes. I didn't read that last sentence. Yes, that sounds pretty bad. It is going to be hell diagnosing people's cache problems.</p>",
        "id": 436253806,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714477959
    },
    {
        "content": "<p>I don't mind if those jobs are included in the total counter. I just don't want lines printed.</p>",
        "id": 436253902,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714477989
    }
]