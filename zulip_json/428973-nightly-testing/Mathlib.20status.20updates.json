[
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8294325599\">failed</a>.</p>",
        "id": 426708935,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710496683
    },
    {
        "content": "<p>The <code>importGraph</code> package will need updating.</p>",
        "id": 426709741,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710496945
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8294485558\">failed</a>.</p>",
        "id": 426711232,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710497430
    },
    {
        "content": "<p>Okay, there is a lot more fallout from <a href=\"https://github.com/leanprover/lean4/pull/3675\">https://github.com/leanprover/lean4/pull/3675</a>.</p>",
        "id": 426712321,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710497874
    },
    {
        "content": "<p>Some of this is that auxiliary lemmas generated by <code>simp</code> have changed names.</p>",
        "id": 426712426,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710497903
    },
    {
        "content": "<p>Try replace <code>foo._eq_1</code> with <code>foo.eq_1</code>; this fixes a lot of it. (Also try omitting it from the simp set: this often seems to work.)</p>",
        "id": 426712480,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710497930
    },
    {
        "content": "<ul>\n<li>There is a not-obviously related problem in Mathlib.Data.Nat.Bitwise.</li>\n</ul>",
        "id": 426712707,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710498017
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8294646592\">failed</a>.</p>",
        "id": 426713906,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710498465
    },
    {
        "content": "<ul>\n<li>Failure in <code>Mathlib.Data.Rel</code>, where it seems like <code>attribute [eqns flip_def] flip</code> is no longer working.</li>\n<li><code>Mathlib.Control.Fold</code> is affected by the same issue.</li>\n<li><code>Mathlib.Data.DFinsupp.WellFounded</code> too.</li>\n</ul>\n<p>Finding a minimal example of this problem with <code>@[eqns]</code> seems like a priority: whether the fix belongs in <code>Mathlib.Tactic.Eqns</code> or needs to go upstream. Pinging <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> as the <code>@[eqns]</code> expert. :-)</p>",
        "id": 426714892,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710498810
    },
    {
        "content": "<p>I'm done for the day. Suggestion for anyone who wants to work on this:</p>\n<ul>\n<li>Claim either of the bullet points above with a <span aria-label=\"hammer and wrench\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"hammer and wrench\">:hammer_and_wrench:</span> and try to work out what has happened!</li>\n<li>There are more errors in the build, so just running <code>lake build</code> and seeing what you encounter is useful.</li>\n<li>There are enough problems that it is helpful if you encounter an error that you can't immediately fix to:<ul>\n<li>Add <code>-- FIXME nightly-testing</code></li>\n<li>Sorry the broken proof</li>\n<li>Post a bullet point here for someone to claim.</li>\n</ul>\n</li>\n</ul>",
        "id": 426716154,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710499317
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8294949881\">failed</a>.</p>",
        "id": 426720329,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710500773
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8296286524\">failed</a>.</p>",
        "id": 426739612,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710507911
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8298637999\">failed</a>.</p>",
        "id": 426771036,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710517509
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8300796220\">failed</a>.</p>",
        "id": 426802459,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710528165
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8304008212\">failed</a>.</p>",
        "id": 426846941,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710551510
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8306974295\">failed</a>.</p>",
        "id": 426880421,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710585019
    },
    {
        "content": "<p>This is fun - we have a theorem <code>Asymptotics.IsLittleO.def</code> but lean doesn't allow calling things <code>def</code> anymore</p>",
        "id": 426885783,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710590577
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8307589433\">failed</a>.</p>",
        "id": 426886234,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710591002
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8307665364\">failed</a>.</p>",
        "id": 426887041,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710591762
    },
    {
        "content": "<p>Yes, we have quite a few of these. I've been renaming <code>def</code> to <code>def'</code>... Ideas?</p>",
        "id": 426887715,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710592384
    },
    {
        "content": "<p>The first one I encountered already had a <code>def'</code>, so I used <code>definition</code></p>",
        "id": 426887829,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710592501
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8307789372\">failed</a>.</p>",
        "id": 426889275,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710593913
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8308757337\">failed</a>.</p>",
        "id": 426902012,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710604699
    },
    {
        "content": "<p>I only recently discovered that <code>definition</code> was not a keyword! I had always imagined that <code>def</code> was short for it.</p>",
        "id": 426903666,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1710606230
    },
    {
        "content": "<p>Lean 3 had <code>definition</code> as a keyword! Lean 4 cleaned up some synonyms.</p>",
        "id": 426906395,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710608448
    },
    {
        "content": "<p>We can just use «def», right?</p>",
        "id": 426907645,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710609631
    },
    {
        "content": "<p>There's a change to the equation lemma generator, and now <code>.def</code> is reserved</p>",
        "id": 426912717,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710614470
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8309707522\">failed</a>.</p>",
        "id": 426913373,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710615166
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8310589115\">failed</a>.</p>",
        "id": 426924616,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710625945
    },
    {
        "content": "<p>/poll What to do with <code>.def</code> being reserved?</p>",
        "id": 426932038,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710630239
    },
    {
        "content": "<p>What does option <code>«def»</code> mean? Isn't that equivalent to <code>def</code>?</p>",
        "id": 426943769,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710633444
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8311707032\">failed</a>.</p>",
        "id": 426956722,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710636951
    },
    {
        "content": "<p>For <code>Asymptotics.IsLittleO.def</code>, that isn't the definition of <code>Asymptotics.IsLittleO</code>, so why is it called <code>def</code>?</p>\n<p>Are there other cases where Lean's auto-generated <code>def</code> isn't the <code>def</code> lemma that we wanted?</p>",
        "id": 426957723,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710637220
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8312680783\">failed</a>.</p>",
        "id": 426991376,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710646854
    },
    {
        "content": "<p>Resuming work on this, just dealing with errors from <code>lake build</code></p>",
        "id": 427004308,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710650477
    },
    {
        "content": "<p>Would <code>unfold</code> be good as an alternative for the automatically generated (and reserved) name?</p>",
        "id": 427004998,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710650667
    },
    {
        "content": "<p>might be good to set up some basic test for this by querying the <code>import Mathlib</code> environment and seeing how popular various choices are</p>",
        "id": 427005553,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710650815
    },
    {
        "content": "<p>my gut feeling is that <code>foo.unfold</code> will have fewer hits than <code>foo.def</code></p>",
        "id": 427005879,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710650899
    },
    {
        "content": "<p>what exactly is it being reserved for?</p>",
        "id": 427006019,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710650938
    },
    {
        "content": "<p>Aren't unfolding theorems already called <code>foo.eq_&lt;n&gt;</code>?</p>",
        "id": 427006110,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710650967
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8313046741\">failed</a>.</p>",
        "id": 427007970,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710651478
    },
    {
        "content": "<p>I've created <a href=\"https://github.com/leanprover-community/mathlib4/pull/11437\">#11437</a> with the adaptations so far for <code>nightly-2024-3-16</code>. Let's work on that in preference to <code>nightly-testing</code>, so we can try to get this done without having to deal with subsequent changes as <code>nightly-testing</code> automatically advances.</p>",
        "id": 427008138,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710651524
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, e.g.:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#print</span> <span class=\"n\">IsSeparator</span>\n<span class=\"c1\">-- def CategoryTheory.IsSeparator.{v₁, u₁} : {C : Type u₁} → [inst : Category.{v₁, u₁} C] → C → Prop :=</span>\n<span class=\"c1\">--   fun {C} [Category.{v₁, u₁} C] G ↦ IsSeparating {G}</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">CategoryTheory.IsSeparator.def</span>\n<span class=\"c1\">-- theorem CategoryTheory.IsSeparator.def.{v₁, u₁} : ∀ {C : Type u₁} [inst : Category.{v₁, u₁} C] (G : C),</span>\n<span class=\"c1\">--   IsSeparator G = IsSeparating {G} :=</span>\n<span class=\"c1\">-- fun {C} [Category.{v₁, u₁} C] G ↦ Eq.refl (IsSeparator G)</span>\n</code></pre></div>\n<p>while the manually created theorem which currently needs renaming is </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">IsSeparator.def'</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">IsSeparator</span> <span class=\"n\">G</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"o\">⦃</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">⦄</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">⟶</span> <span class=\"n\">Y</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">⟶</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"bp\">≫</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">h</span> <span class=\"bp\">≫</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">isSeparator_def</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 427009100,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710651753
    },
    {
        "content": "<p>Also, is there a reason these theorems can't be like <code>foo._def</code>? Isn't the leading underscore supposed to mean \"reserved for the system\"?</p>",
        "id": 427009487,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710651868
    },
    {
        "content": "<p>i.e. we already solved this problem</p>",
        "id": 427009514,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710651875
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8314451973\">failed</a>.</p>",
        "id": 427068753,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710668509
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8314868865\">failed</a>.</p>",
        "id": 427094638,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710675455
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8315454949\">failed</a>.</p>",
        "id": 427111764,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710680149
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8316488420\">failed</a>.</p>",
        "id": 427157436,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710692205
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8318417461\">failed</a>.</p>",
        "id": 427234757,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710712991
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8318635257\">failed</a>.</p>",
        "id": 427237809,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710713794
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8318865108\">failed</a>.</p>",
        "id": 427248379,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710716528
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8318972840\">failed</a>.</p>",
        "id": 427253226,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710717910
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8319096477\">failed</a>.</p>",
        "id": 427269036,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710722090
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8319657892\">failed</a>.</p>",
        "id": 427282777,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710725711
    },
    {
        "content": "<p>Hmm... it succeeded earlier today, but the bot didn't post.</p>",
        "id": 427370634,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710747315
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8321208093/job/22767110964\">https://github.com/leanprover-community/mathlib4/actions/runs/8321208093/job/22767110964</a></p>",
        "id": 427372073,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710747624
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/11469\">#11469</a></p>",
        "id": 427372979,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710747837
    },
    {
        "content": "<p>Should we rename the <code>def</code>s on master already or do we expect that core will allow them again?</p>",
        "id": 427374254,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710748122
    },
    {
        "content": "<p>I think core will allow them again, but probably not until next week.</p>",
        "id": 427374386,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710748161
    },
    {
        "content": "<p><em>Probably</em> that means it is best to rename with a note for now, unfortunately, and then rename back later. :-(</p>",
        "id": 427374472,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710748181
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 427414101,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710755884
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8324648211\">failed</a>.</p>",
        "id": 427417529,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710756502
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8325690830\">failed</a>.</p>",
        "id": 427441773,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710761000
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8325802696\">failed</a>.</p>",
        "id": 427462796,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710765001
    },
    {
        "content": "<p>Wow, this failed at \"verify <code>lake exe graph</code> works\". I guess it's good we added that to CI!</p>",
        "id": 427476558,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710767369
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8326663105\">failed</a>.</p>",
        "id": 427481940,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710768291
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8327779418\">failed</a>.</p>",
        "id": 427503835,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710773656
    },
    {
        "content": "<p>Needs a shake!</p>",
        "id": 427506960,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710774423
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8329311503\">failed</a>.</p>",
        "id": 427521026,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710777986
    },
    {
        "content": "<p>We shook too hard! <span aria-label=\"shaking face\" class=\"emoji emoji-1fae8\" role=\"img\" title=\"shaking face\">:shaking_face:</span></p>",
        "id": 427542085,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1710783938
    },
    {
        "content": "<p>Should Mathlib.Tactic.Relation.Rfl be in Mathlib.Tactic.Common? It doesn’t import any theory files, but also doesn’t define any tactic syntax itself.</p>",
        "id": 427543569,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1710784416
    },
    {
        "content": "<p>I put it there for now; I’ll record here that if we don’t want it there, the import should be moved to Mathlib.CategoryTheory.Category.Basic.</p>",
        "id": 427544373,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1710784712
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8331842069\">failed</a>.</p>",
        "id": 427560282,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710790175
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8333894777\">failed</a>.</p>",
        "id": 427580062,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710798261
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 427591528,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710803373
    },
    {
        "content": "<p>This then leaves us with a question:</p>\n<ul>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/11437\">#11437</a> (the adaptation PR for nightly-2024-03-16) is still open</li>\n<li><code>nightly-testing</code> now contains further changes (not compatible with nightly-2024-03-16), and builds against nightly-2024-03-18</li>\n<li>Should we open a new PR from nightly-testing now, and have two such PRs in flight? Or just wait with these changes on nightly-testing (which will possibly break again with subsequent nightlies).</li>\n</ul>",
        "id": 427595678,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710805907
    },
    {
        "content": "<p>(Regarding my own priorities: I want to prioritize my work on adaptations towards getting nightly-testing working, as this is the critical step in enabling Lean CI to test against Mathlib, which in turn reduces the burden of subsequent adaptations. It's also the phase in which we learn what requests and bug reports need to be funnelled back to the FRO. But I'm hoping that to the extent possible the creation, review, and merging of the adaptation PRs to <code>bump/v4.8.0</code> is shared.)</p>",
        "id": 427595872,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710806030
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 427603221,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710811265
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110524\">Scott Morrison</span> opening a 2nd PR noe can't really hurt, right?</p>",
        "id": 427618771,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710822742
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 427618785,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710822761
    },
    {
        "content": "<p>Johan, wrong Scott!</p>",
        "id": 427634060,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710833583
    },
    {
        "content": "<p>Good catch! Anyway, Scott created the PR nonetheless <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 427634688,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710833896
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8341047926\">failed</a>.</p>",
        "id": 427665691,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710845849
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 427679181,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710850541
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8351002486\">failed</a>.</p>",
        "id": 427827294,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710890520
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8351482534\">failed</a>.</p>",
        "id": 427830283,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710892358
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8352132832\">failed</a>.</p>",
        "id": 427838757,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710899084
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 427845623,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710903744
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8364129919\">failed</a>.</p>",
        "id": 427994977,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710960254
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8366142510\">failed</a>.</p>",
        "id": 428019455,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710970530
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8367894407\">failed</a>.</p>",
        "id": 428042398,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710984337
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8369250082\">failed</a>.</p>",
        "id": 428054524,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1710993990
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8370681622\">failed</a>.</p>",
        "id": 428065113,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711003021
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8372662631\">failed</a>.</p>",
        "id": 428088627,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711014034
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8373063449\">failed</a>.</p>",
        "id": 428094429,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711016195
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8375044814\">failed</a>.</p>",
        "id": 428119860,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711025168
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8377630922\">failed</a>.</p>",
        "id": 428158370,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711035297
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8380032373\">failed</a>.</p>",
        "id": 428194855,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711046605
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8382013026\">failed</a>.</p>",
        "id": 428221744,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711056859
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8382583391\">failed</a>.</p>",
        "id": 428229053,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711060392
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8382614441\">failed</a>.</p>",
        "id": 428229460,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711060630
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8383529001\">failed</a>.</p>",
        "id": 428240911,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711067913
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8383744915\">failed</a>.</p>",
        "id": 428245723,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711071097
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8384325385\">failed</a>.</p>",
        "id": 428252315,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711076069
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 428262342,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711084456
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/11579\">#11579</a> is the PR to bump/v4.8.0 from this latest success.</p>",
        "id": 428270799,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711090915
    },
    {
        "content": "<p>Ah, most of the diff will disappear once <a href=\"https://github.com/leanprover-community/mathlib4/pull/11576\">#11576</a> (an Std bump) lands. It got stuck in CI.</p>",
        "id": 428271408,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711091317
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8386646403\">failed</a>.</p>",
        "id": 428276740,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711094275
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/428271408\">said</a>:</p>\n<blockquote>\n<p>Ah, most of the diff will disappear once <a href=\"https://github.com/leanprover-community/mathlib4/pull/11576\">#11576</a> (an Std bump) lands. It got stuck in CI.</p>\n</blockquote>\n<p>This should be trivial to review now.</p>",
        "id": 428277828,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711094723
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 428281305,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711096215
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8387972111\">failed</a>.</p>",
        "id": 428287813,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711098719
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8387988751\">failed</a>.</p>",
        "id": 428288059,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711098792
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8388036955\">failed</a>.</p>",
        "id": 428297847,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711102165
    },
    {
        "content": "<p>Lots of new output from the new unused variables linter! These could all be backported to master.</p>",
        "id": 428304418,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711104621
    },
    {
        "content": "<p>Why did unused variables become a sin? I discovered that I use unused variables quite a lot in introductory teaching (e.g. teaching a proof of P -&gt; (Q -&gt; P) I do <code>intro hP, intro hQ, exact hP</code> and get a complaint that I didn't use hQ. I know! Who cares!)</p>",
        "id": 428305168,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1711104932
    },
    {
        "content": "<p>If you know, just do <code>intro _hQ</code> so that your reader also knows.</p>",
        "id": 428305303,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1711104972
    },
    {
        "content": "<p>Generally in programming if you compute something that you don't need, either you can drop some unnecessary work in computing the thing, or you were meant to use it and forgot to. I guess neither applies as strongly in theorem proving</p>",
        "id": 428305645,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1711105092
    },
    {
        "content": "<p>I'll fix a few of the warnings now</p>",
        "id": 428305679,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1711105107
    },
    {
        "content": "<p>(And an aside for those who are keeping track of these thing: the new unused variables linter is much faster, and I'm hoping there'll be a nontrivial change in total build time.)</p>",
        "id": 428306078,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711105234
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/428305645\">said</a>:</p>\n<blockquote>\n<p>Generally in programming if you compute something that you don't need, either you can drop some unnecessary work in computing the thing, or you were meant to use it and forgot to. I guess neither applies as strongly in theorem proving</p>\n</blockquote>\n<p>The version of this that definitely does apply in theorem proving is that you made an unnecessary assumption and didn't use it, and probably you should drop it and strengthen the theorem</p>",
        "id": 428307021,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1711105569
    },
    {
        "content": "<p>Also unused <code>have</code> statements are an indication of unnecessary steps in a proof</p>",
        "id": 428307075,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1711105593
    },
    {
        "content": "<p>(I really appreciate the unused have statements linter. I have found myself writing proofs recently where I saturate the context with plausible inputs for <code>omega</code>, and then clean up once <code>omega</code> says I'm done...)</p>",
        "id": 428307375,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711105715
    },
    {
        "content": "<p>I do this for <code>exact?</code> as well -- \"what is likely to be useful? We have 0 &lt; n, maybe I'll add n != 0\" etc</p>",
        "id": 428307975,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1711105992
    },
    {
        "content": "<p>Sounds like we need a <code>saturate_context</code> tactic</p>",
        "id": 428320269,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1711110845
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/11583\">#11583</a></p>",
        "id": 428320702,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1711111004
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8392706652\">failed</a>.</p>",
        "id": 428365590,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711124287
    },
    {
        "content": "<p>Kevin, for teaching you could just add <code>set_option linter.unusedVariables false</code> at the top of the file, or even in the appropriate place in your <code>lakefile</code> (although I'm not sure exactly where that place is).</p>",
        "id": 428368069,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1711125008
    },
    {
        "content": "<p>In the lakefile for my course, I have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">package</span> <span class=\"bp\">«</span><span class=\"n\">mA4N1_2023</span><span class=\"bp\">»</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add any package configuration options here</span>\n  <span class=\"n\">moreServerArgs</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span> <span class=\"s2\">\"-DautoImplicit=false\"</span> <span class=\"o\">]</span>\n</code></pre></div>\n<p>so I imagine that an easy modification of this should work for <code>unusedVariables</code>.</p>",
        "id": 428378086,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1711128289
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8394881227\">failed</a>.</p>",
        "id": 428396553,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711135666
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/11594\">#11594</a> has the rest of the unused variables</p>",
        "id": 428412044,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1711142921
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8398120517\">failed</a>.</p>",
        "id": 428429760,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711155370
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8399133382\">failed</a>.</p>",
        "id": 428442508,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711167377
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8400027135\">failed</a>.</p>",
        "id": 429058234,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711178519
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8401023945\">failed</a>.</p>",
        "id": 429067954,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711188488
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8401825540\">failed</a>.</p>",
        "id": 429077695,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711197671
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8403737474\">failed</a>.</p>",
        "id": 429104417,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711219238
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8404626914\">failed</a>.</p>",
        "id": 429118048,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711229696
    },
    {
        "content": "<p>Some upstreamed material needs removing, working on that now.</p>",
        "id": 429121142,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711232180
    },
    {
        "content": "<p>Unfortunately the upstreamed <code>rw?</code> is failing many of the tests in Mathlib. Will investigate.</p>",
        "id": 429121720,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711232585
    },
    {
        "content": "<p>These will require fixes upstream, and I've raised this with Joe.</p>\n<p>For now I'm going to comment out some failing tests so we can keep moving... Expect regressions in <code>rw?</code> on nightly-testing!</p>",
        "id": 429122924,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711233488
    },
    {
        "content": "<p>Ah... and the changes to <code>rw?</code> in upstreaming have completely killed <code>rw_search</code>. Commented out the test suite for now, and will have to discuss with <span class=\"user-mention\" data-user-id=\"110994\">@Joe Hendrix</span> on Monday.</p>",
        "id": 429124794,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711235144
    },
    {
        "content": "<p>I'm traveling and so my ability to investigate is a bit limited, but there's an existing adaptation branch in <code>lean-pr-testing-3719</code> that I think had working testing.  Has that been merged in and found insufficient?</p>",
        "id": 429128545,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1711238310
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8405085446\">failed</a>.</p>",
        "id": 429128692,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711238438
    },
    {
        "content": "<p>Missed that one, thank you!</p>",
        "id": 429131034,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711240414
    },
    {
        "content": "<p>I've merged it, but still all the tests are failing.</p>",
        "id": 429131521,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711240897
    },
    {
        "content": "<p>Unfortunately I can't got back to <a href=\"https://github.com/leanprover/lean4/pull/3719\">lean#3719</a> itself, as it never had <code>full-ci</code>, so there's no macos toolchain.</p>",
        "id": 429131764,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711241061
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8405643008\">failed</a>.</p>",
        "id": 429134168,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711243112
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8405924751\">failed</a>.</p>",
        "id": 429139821,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711247022
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8406595535\">failed</a>.</p>",
        "id": 429146223,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711251636
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8408489687\">failed</a>.</p>",
        "id": 429185257,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711277904
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8408844024\">failed</a>.</p>",
        "id": 429186813,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711278974
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8409022578\">failed</a>.</p>",
        "id": 429196751,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711283837
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8409340301\">failed</a>.</p>",
        "id": 429201849,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711286458
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8410348443\">failed</a>.</p>",
        "id": 429221362,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711295209
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8411331572\">failed</a>.</p>",
        "id": 429235753,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711305730
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"648495\">@Christian Merten</span>, your changes from <a href=\"https://github.com/leanprover-community/mathlib4/pull/11420\">#11420</a> have caused breakages with the nightly. Is there any chance you would be able to checkout <code>nightly-testing</code> and see if you can see this fix quickly? I haven't looked yet past the error message.</p>",
        "id": 429248439,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711314664
    },
    {
        "content": "<p>(If you are able, feel free to just push changes direct to that branch.)</p>",
        "id": 429248535,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711314734
    },
    {
        "content": "<p>There was also a trivial-to-fix simp failure in <code>EulerMascheroni</code>, which I've just pushed a fix for.</p>",
        "id": 429248599,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711314803
    },
    {
        "content": "<p>Actually, <span class=\"user-mention\" data-user-id=\"648495\">@Christian Merten</span>, it might be a trivial problem due to merge conflicgts.</p>",
        "id": 429248838,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711314970
    },
    {
        "content": "<p>Just checking out the <code>master</code> copy of MonCat/Limits into <code>nightly-testing</code> looks like it might work.</p>",
        "id": 429248855,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711314986
    },
    {
        "content": "<p>Scratch that, sorry.</p>",
        "id": 429248911,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711315054
    },
    {
        "content": "<p>I think I have a fix, let me try.</p>",
        "id": 429248927,
        "sender_full_name": "Christian Merten",
        "timestamp": 1711315077
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8412203578\">failed</a>.</p>",
        "id": 429249556,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711315465
    },
    {
        "content": "<p>Worked for <code>MonCat</code>, just need to fix it for the rest.</p>",
        "id": 429249602,
        "sender_full_name": "Christian Merten",
        "timestamp": 1711315505
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8412256547\">failed</a>.</p>",
        "id": 429255072,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711319169
    },
    {
        "content": "<p>tests affected by unused variables or pretty printer changes</p>",
        "id": 429255561,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711319460
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>, there is a bad interaction between <code>variable?</code> and the new unused variables linter. For now I'm just commenting out the test in <code>test/Variable.lean</code> on <code>nightly-testing</code>: could I drop investigating that on you?</p>",
        "id": 429255995,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711319746
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/429131521\">said</a>:</p>\n<blockquote>\n<p>I've merged it, but still all the tests are failing.</p>\n</blockquote>\n<p>I am taking a look at resolving this today.</p>",
        "id": 429256316,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1711319961
    },
    {
        "content": "<p>Thanks! Let me know if there's anything I can do to help. </p>\n<p>I'm sorry, I didn't really anticipate when we first talked about upstreaming <code>rw?</code> that you might get caught up by <code>rw_search</code> failures ... :-(</p>",
        "id": 429256479,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711320068
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 429258923,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711321938
    },
    {
        "content": "<p>Failures incoming from <a href=\"https://github.com/leanprover/lean4/pull/3767\">https://github.com/leanprover/lean4/pull/3767</a>. <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span></p>",
        "id": 429602650,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711441163
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8433141983\">failed</a>.</p>",
        "id": 429607305,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711443062
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8434761085\">failed</a>.</p>",
        "id": 429637631,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711453828
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8434761085\">failed</a>.</p>",
        "id": 429751196,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711492915
    },
    {
        "content": "<p>Sigh. This test failure (for <code>rw_search</code>) works locally for me. :-(</p>",
        "id": 429751278,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711492955
    },
    {
        "content": "<p>In CI it times out, locally it works with 200 heartbeats.</p>",
        "id": 429751479,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711493097
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8443874032\">failed</a>.</p>",
        "id": 429752636,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711493849
    },
    {
        "content": "<p>This test looks like it is fixed in <a href=\"https://github.com/leanprover/lean4/pull/3769\">lean#3769</a>, so should come good in a few hours.</p>",
        "id": 429763336,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711500957
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8449921964\">failed</a>.</p>",
        "id": 429831796,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711536624
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8450859968\">failed</a>.</p>",
        "id": 429836252,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711538353
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8450938260\">failed</a>.</p>",
        "id": 429838369,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711539237
    },
    {
        "content": "<p>Okay, I'm out of time dealing with these <code>rw?</code> issues. This last one is my fault, a consequence of me messing with MVarId.refl and MVarId.applyRfl. I know what to do, but it may not happen until next week, so for now the failing test is just commented out.</p>",
        "id": 429841896,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711540441
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8451280954\">failed</a>.</p>",
        "id": 429843758,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711541052
    },
    {
        "content": "<p>These failures are changes in the output of exact? on nightly-2024-03-27.</p>\n<p>I think these <a href=\"https://github.com/leanprover-community/mathlib4/commit/5bae989b6dffc292044ecd1e746a3232278ee986\">changes</a> are mostly for the worse, and we should try to remedy them.</p>",
        "id": 429955747,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711576435
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110994\">@Joe Hendrix</span></p>",
        "id": 429955751,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711576439
    },
    {
        "content": "<p>Presumably these are changes in the order things come back from the DiscrTree in <a href=\"https://github.com/leanprover/lean4/pull/3769\">lean4#3769</a>.</p>",
        "id": 429955863,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711576487
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8459124801\">failed</a>.</p>",
        "id": 429957067,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711577050
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8459832381\">failed</a>.</p>",
        "id": 429965040,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711581577
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/429955747\">said</a>:</p>\n<blockquote>\n<p>These failures are changes in the output of exact? on nightly-2024-03-27.</p>\n<p>I think these <a href=\"https://github.com/leanprover-community/mathlib4/commit/5bae989b6dffc292044ecd1e746a3232278ee986\">changes</a> are mostly for the worse, and we should try to remedy them.</p>\n</blockquote>\n<p>Oh, <span class=\"user-mention\" data-user-id=\"110994\">@Joe Hendrix</span>, I forgot to mention this one when we just talked, but notice in that commit I had to double the heartbeat limit in <code>test/observe.lean</code>. This is one that Johan cares about a lot, as he often uses something close to this test file in Lean demo talks.</p>",
        "id": 429965389,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711581814
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 429967683,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711583267
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8463049617\">failed</a>.</p>",
        "id": 430006227,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711608554
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8465559750\">failed</a>.</p>",
        "id": 430033646,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711620465
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8467374368\">failed</a>.</p>",
        "id": 430059105,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711629719
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8469748877\">failed</a>.</p>",
        "id": 430096378,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711640131
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8472034435\">failed</a>.</p>",
        "id": 430141346,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711650913
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8473933758\">failed</a>.</p>",
        "id": 430165593,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711661692
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8478060370\">failed</a>.</p>",
        "id": 430210088,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711694157
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8479477746\">failed</a>.</p>",
        "id": 430228352,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711704898
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8479727133\">failed</a>.</p>",
        "id": 430232554,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711706864
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8481004192\">failed</a>.</p>",
        "id": 430250473,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711716124
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8484304261\">failed</a>.</p>",
        "id": 430300625,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711737305
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8485760237\">failed</a>.</p>",
        "id": 430320968,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711748127
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8487094972\">failed</a>.</p>",
        "id": 430339272,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711759717
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8489856427\">failed</a>.</p>",
        "id": 430374827,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711791305
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8489989405\">failed</a>.</p>",
        "id": 430376851,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711793275
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8491723906\">failed</a>.</p>",
        "id": 430399012,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711812909
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8492650066\">failed</a>.</p>",
        "id": 430410624,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711823704
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8493516456\">failed</a>.</p>",
        "id": 430421476,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711834506
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8494523453\">failed</a>.</p>",
        "id": 430432401,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711846144
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8495473194\">failed</a>.</p>",
        "id": 430442058,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711856112
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8497638369\">failed</a>.</p>",
        "id": 430467844,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711882312
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8500160452\">failed</a>.</p>",
        "id": 430497672,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711910105
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8502122345\">failed</a>.</p>",
        "id": 430521410,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711932546
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8506700187\">failed</a>.</p>",
        "id": 430572120,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711966068
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8508136101\">failed</a>.</p>",
        "id": 430586884,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711975359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/429955747\">said</a>:</p>\n<blockquote>\n<p>These failures are changes in the output of exact? on nightly-2024-03-27.</p>\n<p>I think these <a href=\"https://github.com/leanprover-community/mathlib4/commit/5bae989b6dffc292044ecd1e746a3232278ee986\">changes</a> are mostly for the worse, and we should try to remedy them.</p>\n</blockquote>\n<p>I have a PR <a href=\"https://github.com/leanprover/lean4/pull/3818\">lean4#3818</a> that appears to return results closer to the original order.  There's some discussion there on the change.  One downside is that with the revised order the <code>rewrite_search</code> test below fails:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span>\n<span class=\"cm\">info: Try this: rw [← @add_assoc, @add_right_comm, @add_assoc, @add_add_add_comm, ← @add_assoc, @add_right_comm]</span>\n<span class=\"cm\">-/</span>\n<span class=\"bp\">#</span><span class=\"n\">guard_msgs</span> <span class=\"o\">(</span><span class=\"n\">drop</span> <span class=\"n\">info</span><span class=\"o\">)</span> <span class=\"k\">in</span>\n<span class=\"kd\">example</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw_search</span>\n</code></pre></div>\n<p>I've traced this test case and I think it's ok to break this test case.  The edit distance heuristics don 't currently seem well suited to AC rewriting and so I think this is a pretty brittle test case.  I haven't compared it with the original implementation though so maybe there's some heuristic that helps I am missing.</p>",
        "id": 430633756,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1711992522
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8512040862\">failed</a>.</p>",
        "id": 430644092,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1711996501
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8513998843\">failed</a>.</p>",
        "id": 430668224,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712007294
    },
    {
        "content": "<p>Quite a few things broken here. I will try to post a summary soon.</p>",
        "id": 430676714,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712011737
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8514717256\">failed</a>.</p>",
        "id": 430678918,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712012924
    },
    {
        "content": "<p>Okay, I think we have a build (with sorries) incoming now. There appears to be a significant new performance problem, which we're going to have to track down.</p>",
        "id": 430691204,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712021467
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8516096205\">failed</a>.</p>",
        "id": 430695219,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712023536
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8516671113\">failed</a>.</p>",
        "id": 430702309,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712027648
    },
    {
        "content": "<p>Here are the current <code>sorry</code>s on <code>nightly-testing</code>. I would really appreciate help getting to the bottom of these. Some may just need a fix or work around, others may required a minimisation / identification of a regression in Lean.</p>\n<p>I'll post each one separately so people can use emojis to claim and release items. I'll ping the authors of files, but please don't consider these as either demands, or exclusive locks. :-)</p>\n<p>In any of these files, just search for <code>FIXME nightly-testing</code> to locate the problem.</p>",
        "id": 430702420,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027750
    },
    {
        "content": "<ul>\n<li><code>Mathlib/AlgebraicGeometry/Pullbacks.lean</code>: a type mismatch? <span class=\"user-mention\" data-user-id=\"439483\">@Andrew Yang</span>?</li>\n</ul>",
        "id": 430702425,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027755
    },
    {
        "content": "<ul>\n<li><code>Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean</code> an <code>@[ext]</code> lemma no longer unifies. <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span>? <span class=\"user-mention\" data-user-id=\"260921\">@Markus Himmel</span>?</li>\n<li><code>Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean</code>:  similarly</li>\n</ul>",
        "id": 430702426,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027760
    },
    {
        "content": "<ul>\n<li><code>Mathlib/CategoryTheory/Limits/Shapes/Pullbacks.lean</code>: a <code>convert</code> that no longer goes through</li>\n</ul>",
        "id": 430702467,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027764
    },
    {
        "content": "<ul>\n<li><code>Mathlib/CategoryTheory/Limits/Shapes/Products.lean</code>:  some proofs were previously done by <code>aesop_cat</code> in an autoparam, but now fail.</li>\n</ul>",
        "id": 430702473,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027768
    },
    {
        "content": "<ul>\n<li><code>Mathlib/Combinatorics/SimpleGraph/AdjMatrix.lean</code>: probably a broken <code>simp</code></li>\n</ul>",
        "id": 430702478,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027773
    },
    {
        "content": "<ul>\n<li><code>Mathlib/Data/Multiset/FinsetOps.lean</code>: a proof that used to be <code>rfl</code></li>\n</ul>",
        "id": 430702483,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027776
    },
    {
        "content": "<ul>\n<li><code>Mathlib/Data/Polynomial/Basic.lean</code>: an <code>exact support_add</code> that no longer works</li>\n</ul>",
        "id": 430702486,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027780
    },
    {
        "content": "<ul>\n<li><code>test/notation3.lean</code>: looks like some beta reductions are needed? <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  or <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>?</li>\n</ul>",
        "id": 430702490,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027784
    },
    {
        "content": "<ul>\n<li><code>test/Variable.lean</code>: we're now getting an unused variable warning in <code>variable?</code>. <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>?</li>\n</ul>",
        "id": 430702493,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027787
    },
    {
        "content": "<p>By the way, it would be good to summarize the upstream changes that are causing breakage in these threads</p>",
        "id": 430702534,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712027832
    },
    {
        "content": "<p>(if you know what they are)</p>",
        "id": 430702568,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712027858
    },
    {
        "content": "<p>Yes: that's part of what we need to determine. For the problems above, I don't know yet.</p>",
        "id": 430702570,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712027860
    },
    {
        "content": "<p>There are also a lot of slow-downs requiring raising <code>maxHeartbeats</code>. There are all marked with <code>Adaptation note: nightly-2024-04-01</code>.</p>\n<p>Hopefully these all have the same source, but again, I don't know yet what it is.</p>\n<p>These problems occur in <code>Algebra/Algebra/Operations</code>, <code>Algebra/Category/ModuleCat/ChangeOfRings</code>, <code>Algebra/Category/Ring/Limits</code>, <code>AlgebraicGeometry/GammaSpecAdjunction | Gluing | Spec</code>, <code>Combinatorics/SimpleGraph/Subgraph</code>, <code>Data/List/Intervals</code>, <code>FieldTheory/Extension | NormalClosure</code>, <code>LinearAlgebra/QuadraticForm/QuadraticModuleCat/Monoidal</code>, <code>Topology/ContinuousFunction/UniqueCFC</code>, <code>test/fun_prop2</code>, and <code>test/observe</code>.</p>",
        "id": 430702835,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712028048
    },
    {
        "content": "<p>Oh, also <code>rw_search</code> is currently completely broken, but may be improved after <a href=\"https://github.com/leanprover/lean4/pull/3818\">https://github.com/leanprover/lean4/pull/3818</a>. I haven't had a chance to test yet.</p>",
        "id": 430703152,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712028309
    },
    {
        "content": "<p>(AdjMatrix was <code>pow_succ &lt;-&gt; pow_succ'</code> in <a href=\"https://github.com/leanprover-community/mathlib4/pull/11451\">mathlib4#11451</a>)</p>",
        "id": 430703196,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712028355
    },
    {
        "content": "<p>Great. I got quite a few of these, but apparently not all. :-)</p>",
        "id": 430703324,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712028406
    },
    {
        "content": "<p>The linter is also failing many times with synthInstance.maxHeartbeats problems; so I don't think we'll get a successful CI build until we sort that out.</p>",
        "id": 430703494,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712028481
    },
    {
        "content": "<p>The relevant nightly releases since we last had a build are:</p>\n<ul>\n<li><a href=\"https://github.com/leanprover/lean4-nightly/releases/tag/nightly-2024-03-28\">https://github.com/leanprover/lean4-nightly/releases/tag/nightly-2024-03-28</a></li>\n<li><a href=\"https://github.com/leanprover/lean4-nightly/releases/tag/nightly-2024-03-29\">https://github.com/leanprover/lean4-nightly/releases/tag/nightly-2024-03-29</a></li>\n<li><a href=\"https://github.com/leanprover/lean4-nightly/releases/tag/nightly-2024-03-30\">https://github.com/leanprover/lean4-nightly/releases/tag/nightly-2024-03-30</a></li>\n<li><a href=\"https://github.com/leanprover/lean4-nightly/releases/tag/nightly-2024-04-01\">https://github.com/leanprover/lean4-nightly/releases/tag/nightly-2024-04-01</a></li>\n</ul>\n<p>I'm looking through these now for anything suspicious re: the above.</p>",
        "id": 430703758,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712028612
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/3807\">https://github.com/leanprover/lean4/pull/3807</a> landed during this period: it is meant to be a performance fix for <code>isDefEq</code>, but is so far the obvious suspect to slowdowns.</p>",
        "id": 430703905,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712028724
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/3816\">lean4#3816</a> is a possible cause for the unification failures in <code>CategoryTheory</code>.</p>",
        "id": 430704135,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712028862
    },
    {
        "content": "<p>Everything else in those nightlies looks pretty harmless to me.</p>",
        "id": 430704142,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712028872
    },
    {
        "content": "<p><code>test/notation3.lean</code> was a good little puzzle — I completely forgot about the mathlib delaborator combinators</p>",
        "id": 430705984,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712030135
    },
    {
        "content": "<p>what's breaking in them now?</p>",
        "id": 430705997,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712030158
    },
    {
        "content": "<p>It was just <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.PrettyPrinter.Delaborator.withBindingBodyUnusedName%27#doc\">docs#Lean.PrettyPrinter.Delaborator.withBindingBodyUnusedName'</a>, but it took awhile to think to look at it.</p>",
        "id": 430706196,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712030307
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> For <code>variable?</code>, do you know how to appease the unused variable linter here? It has <code>unused_variables_ignore_fn</code>, but I'm not sure that ever worked. Is there some hack we could use to cause the binders to be considered to be used?</p>",
        "id": 430709495,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712032628
    },
    {
        "content": "<p><code>unused_variables_ignore_fn</code> should be fixed on nightly</p>",
        "id": 430709523,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712032658
    },
    {
        "content": "<p>IIRC the fix for that landed not long before the unused variables rewrite</p>",
        "id": 430709543,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712032680
    },
    {
        "content": "<p>Thanks, good to know. I think I found the problem, it's silly.</p>",
        "id": 430709662,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712032796
    },
    {
        "content": "<p>It had <code> `Mathlib.Command.variable?</code> instead of <code> ``Mathlib.Command.Variable.variable?</code></p>",
        "id": 430709740,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712032834
    },
    {
        "content": "<p>oops, where's our double backtick linter</p>",
        "id": 430709754,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712032858
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8517553556\">failed</a>.</p>",
        "id": 430716521,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712036728
    },
    {
        "content": "<p>I am currently working on a minimisation of some of the timeouts.</p>",
        "id": 430717307,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712037359
    },
    {
        "content": "<p><code>Mathlib/CategoryTheory/Limits/Shapes/Pullbacks.lean</code> looks like it could be from a change to the defeq algorithm? I had to insert a <code>dsimp</code> to get some types to unify.</p>",
        "id": 430718388,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712037985
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8518160136\">failed</a>.</p>",
        "id": 430720520,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712039248
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8519999135\">failed</a>.</p>",
        "id": 430745140,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712048821
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8520589789\">failed</a>.</p>",
        "id": 430750685,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712050738
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8520699964\">failed</a>.</p>",
        "id": 430752242,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712051287
    },
    {
        "content": "<p>Could someone (<span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>?) please update quote4 to run on <code>nightly-2024-04-02</code>? It has a <code>&lt;- ...</code> that (foot-gun!) always lifts out of an <code>if</code>, and as of <code>nightly-2024-04-02</code> this is an error.</p>",
        "id": 430752572,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712051414
    },
    {
        "content": "<p>The error is in Match.lean, in <code>makeMatchCode</code>.</p>",
        "id": 430752598,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712051423
    },
    {
        "content": "<p>For anyone who would like to continue working on nightly-testing, I've made the branch <code>nightly-testing-2024-04-01-WIP</code> before <code>nightly-testing</code> moved to <code>nightly-2024-04-02</code>. It should still be possible to work on that until quote4 is fixed. <code>nightly-testing</code> itself is not viable until then.</p>\n<p>(Edit: <code>nightly-testing</code> is more or less working again, so this has become irrelevant.)</p>",
        "id": 430753148,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712051620
    },
    {
        "content": "<p>(Also pinging <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> in case they are available to fix <code>quote4</code> problems.)</p>",
        "id": 430753579,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712051764
    },
    {
        "content": "<p>I have merge rights if you want to send a PR</p>",
        "id": 430762381,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712055057
    },
    {
        "content": "<p>I have merge rights too, I'm just not excited about debugging quote4. :-)</p>",
        "id": 430763892,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712055639
    },
    {
        "content": "<p>Which line is the error on?</p>",
        "id": 430763916,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712055655
    },
    {
        "content": "<p>114</p>",
        "id": 430763946,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712055673
    },
    {
        "content": "<p>sorry, the real error is 115</p>",
        "id": 430763993,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712055692
    },
    {
        "content": "<p>the &lt;- is not allowed in that position anymore, because it will always lift outside the if</p>",
        "id": 430764047,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712055711
    },
    {
        "content": "<p>I don't think that linter really makes sense here; \"inside the if\" is at runtime, and outside the if is at generation time</p>",
        "id": 430764439,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712055854
    },
    {
        "content": "<p>That is, the <code>$()</code> should be protecting the <code>&lt;-</code></p>",
        "id": 430764478,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712055876
    },
    {
        "content": "<p>So in summary: this is an easy workaround in Qq (lifting the expression outside manually), but core should not be complaining here</p>",
        "id": 430764558,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712055918
    },
    {
        "content": "<p>there is a TODO in the core PR about this</p>",
        "id": 430765032,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712056118
    },
    {
        "content": "<p>the current workaround is to just lift it manually</p>",
        "id": 430765049,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712056128
    },
    {
        "content": "<p>I remember finding this in mathport even before this PR because of <code> `(do $(&lt;- trExpr))</code> stuff</p>",
        "id": 430765285,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712056226
    },
    {
        "content": "<p>which does something... very strange IIRC</p>",
        "id": 430765325,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712056246
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>, could you please push the workaround?</p>",
        "id": 430766945,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712056709
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8522895525\">failed</a>.</p>",
        "id": 430781699,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712061697
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8525464584\">failed</a>.</p>",
        "id": 430818130,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712072074
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8527706773\">failed</a>.</p>",
        "id": 430850843,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712082897
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/430765285\">said</a>:</p>\n<blockquote>\n<p>I remember finding this in mathport even before this PR because of <code> `(do $(&lt;- trExpr))</code> stuff</p>\n</blockquote>\n<p>Is there a tracking issue for this?</p>\n<p>a mwe is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">MetaM</span> <span class=\"o\">(</span><span class=\"n\">TSyntax</span> <span class=\"bp\">``</span><span class=\"n\">Parser.Term.doSeq</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">do</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">Parser.Term.doSeq</span><span class=\"bp\">|</span> <span class=\"n\">pure</span> <span class=\"mi\">37</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- fails</span>\n<span class=\"k\">#check</span> <span class=\"k\">do</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">do</span> <span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">foo</span><span class=\"o\">))</span>\n\n<span class=\"c1\">-- ok</span>\n<span class=\"k\">#check</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">mkDo</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"k\">do</span> <span class=\"bp\">$</span><span class=\"n\">x</span><span class=\"o\">)</span>\n  <span class=\"n\">mkDo</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">foo</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 430864677,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712088370
    },
    {
        "content": "<p>Filed as <a href=\"https://github.com/leanprover/lean4/pull/3827\">lean4#3827</a></p>",
        "id": 430865854,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712088869
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/430766945\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>, could you please push the workaround?</p>\n</blockquote>\n<p>Pushed in <a href=\"https://github.com/leanprover-community/quote4/pull/41\">https://github.com/leanprover-community/quote4/pull/41</a>; can you check that branch works on the latest lean?</p>",
        "id": 430867655,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712089623
    },
    {
        "content": "<p>Checked and merged.</p>",
        "id": 430887140,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712097760
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8530481855\">failed</a>.</p>",
        "id": 430893568,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712101842
    },
    {
        "content": "<p>Okay, we are making good progress. We are now down to:</p>",
        "id": 430899947,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712106590
    },
    {
        "content": "<ul>\n<li>AlgebraicGeometry/Pullbacks is failing in multiple places, almost surely because of the defeq abuse throughout AG interacting with the latest change to <code>isDefEq</code>.</li>\n</ul>",
        "id": 430899954,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712106593
    },
    {
        "content": "<ul>\n<li>the <code>rw_search</code> tests are all broken, but hopefully mostly fixed in <a href=\"https://github.com/leanprover/lean4/pull/3818\">lean4#3818</a>, which will land tonight</li>\n</ul>",
        "id": 430899957,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712106596
    },
    {
        "content": "<ul>\n<li>there are still some slowdowns, but I've fixed the terrible ones. I'm not inclined to treat these as blockers.</li>\n</ul>",
        "id": 430899959,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712106597
    },
    {
        "content": "<p>Note that I'm now hoping that <code>nightly-2024-04-04</code> can become <code>v4.8.0-rc1</code>, so deciding to leave these slowdowns in means that will be part of life for the next month.</p>",
        "id": 430900082,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712106690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"439483\">@Andrew Yang</span>, if you have any availability to look at <code>def openCoverOfBase'</code> in Mathlib/AlgebraicGeometry/Pullbacks.lean on the <code>nightly-testing</code> branch, that would be extremely helpful. I'm starting to look at it otherwise.</p>",
        "id": 430900676,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712107099
    },
    {
        "content": "<p>Ah, maybe have it sorted.</p>",
        "id": 430901661,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712107949
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8531933641\">failed</a>.</p>",
        "id": 430906740,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712111570
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8532568570\">failed</a>.</p>",
        "id": 430912939,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712115670
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8533150215\">failed</a>.</p>",
        "id": 430918734,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712119781
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/430900676\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"439483\">Andrew Yang</span>, if you have any availability to look at <code>def openCoverOfBase'</code> in Mathlib/AlgebraicGeometry/Pullbacks.lean on the <code>nightly-testing</code> branch, that would be extremely helpful. I'm starting to look at it otherwise.</p>\n</blockquote>\n<p>Is this sorted out?</p>",
        "id": 430918873,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1712119885
    },
    {
        "content": "<p>Yes, it is, thank you!</p>",
        "id": 430924465,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712123956
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8536742268\">failed</a>.</p>",
        "id": 430975628,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712141928
    },
    {
        "content": "<p>Getting closer.</p>\n<p>Remaining issues are</p>\n<ul>\n<li><code>rw_search</code> completely broken, despite working on <code>lean-pr-testing-3818</code> (and that having been merged)</li>\n<li>needing to minimize at least one of the new slowdowns. I have partial progress on that locally, but will need to keep working on that tomorrow.</li>\n</ul>",
        "id": 430982924,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712144627
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8538812123\">failed</a>.</p>",
        "id": 431005755,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712151558
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8541437881\">failed</a>.</p>",
        "id": 431134689,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712162577
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8543770332\">failed</a>.</p>",
        "id": 431159231,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712172013
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8545779238\">failed</a>.</p>",
        "id": 431188531,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712183521
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8546425743\">failed</a>.</p>",
        "id": 431190799,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712184584
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8547696383\">failed</a>.</p>",
        "id": 431206142,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712194848
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8548662608\">failed</a>.</p>",
        "id": 431214464,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712199915
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 431227693,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712208561
    },
    {
        "content": "<p>Finally!</p>",
        "id": 431229028,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712209614
    },
    {
        "content": "<p>However, still working on minimization of the timeouts.</p>",
        "id": 431229042,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712209629
    },
    {
        "content": "<p>Nevertheless, I will put up a PR so others can review the changes so far, with the understanding that our intention is to fix the timeouts before v4.8.0-rc1 (unless we don't. :-)</p>",
        "id": 431229087,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712209671
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 431288013,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712229743
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8554756324\">failed</a>.</p>",
        "id": 431304452,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712234664
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8557314712\">failed</a>.</p>",
        "id": 431341990,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712244901
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8558079509\">failed</a>.</p>",
        "id": 431369506,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712252449
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8559586253\">failed</a>.</p>",
        "id": 431390009,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712259950
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 431396779,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712262652
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8561577711\">failed</a>.</p>",
        "id": 431410004,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712268158
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8563353821\">failed</a>.</p>",
        "id": 431428848,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712280584
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8564595970\">failed</a>.</p>",
        "id": 431441487,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712289859
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 431449786,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712295281
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8567724601\">failed</a>.</p>",
        "id": 431486099,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712309672
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8568093198\">failed</a>.</p>",
        "id": 431493049,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712312175
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8569917125\">failed</a>.</p>",
        "id": 431515957,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712320951
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8572180612\">failed</a>.</p>",
        "id": 431552388,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712331297
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8574206244\">failed</a>.</p>",
        "id": 431590873,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712345225
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8575766931\">failed</a>.</p>",
        "id": 431605652,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712351829
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8575941385\">failed</a>.</p>",
        "id": 431608426,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712353216
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8577320048\">failed</a>.</p>",
        "id": 431622813,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712363809
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8577401223\">failed</a>.</p>",
        "id": 431627792,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712367817
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8577876045\">failed</a>.</p>",
        "id": 431629165,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712369179
    },
    {
        "content": "<p>A <code>norm_num</code> \"regression\" is that this fails now:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.NormNum.Basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">4</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">norm_num</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>A fix is to make sure <code>Mathlib.Tactic.NormNum</code> is imported. (In particular, <code>import Mathlib.Tactic.NormNum.Eq</code>)</p>",
        "id": 431630728,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712370934
    },
    {
        "content": "<p>There are some shake errors I'm not sure how to handle correctly, and there's a simpNF linter error I'm not sure how to debug.</p>",
        "id": 431630809,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1712371054
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8578096951\">failed</a>.</p>",
        "id": 431633598,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712373583
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8578434556\">failed</a>.</p>",
        "id": 431635425,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712375325
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8578545645\">failed</a>.</p>",
        "id": 431638540,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712378478
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8580230689\">failed</a>.</p>",
        "id": 431661953,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712399574
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8581177227\">failed</a>.</p>",
        "id": 431670511,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712407406
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8582146615\">failed</a>.</p>",
        "id": 431683114,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712418016
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8582888518\">failed</a>.</p>",
        "id": 431693077,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712426757
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8583060324\">failed</a>.</p>",
        "id": 431699548,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712431630
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/431630728\">said</a>:</p>\n<blockquote>\n<p>A <code>norm_num</code> \"regression\" is that this fails now:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.NormNum.Basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">4</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">False</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">norm_num</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>A fix is to make sure <code>Mathlib.Tactic.NormNum</code> is imported. (In particular, <code>import Mathlib.Tactic.NormNum.Eq</code>)</p>\n</blockquote>\n<p>On <code>norm_num</code> implementation side, I've noticed that <code>norm_num</code> appears to be using <a href=\"https://github.com/leanprover-community/mathlib4/blob/a8a6713b92e1dc246a2d2a5255bb2d1846e88fe2/Mathlib/Tactic/NormNum/Core.lean#L272\">the simplifer with simp lemmas</a>, but not simprocs.</p>\n<p>That's not surprising given the age of norm num and recent additions of simprocs, and norm num appears to have its own version of simprocs such as the one for <a href=\"https://github.com/leanprover-community/mathlib4/blob/a8a6713b92e1dc246a2d2a5255bb2d1846e88fe2/Mathlib/Tactic/NormNum/Eq.lean#L39\">equality</a> solving this.</p>\n<p>I think your approach of making sure <code>import Mathlib.Tactic.NormNum.Eq</code> is in scope is a good one.  A larger fix would be to support Lean core simprocs so <code>norm_num</code>'s use of <code>simp</code> matches the <code>simp</code> elaborator.  I don't anticipate needing to remove any additional successor simplification lemmas though.</p>\n<p>There's also the possibility of Mathlib adding <code>@[simp]</code> back to the two lemmas that had removed it (see below), however <code>simp</code> will resume its old behavior which leads to timeouts on even moderately large Nat literals.  I wouldn't personally recommend this.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"n\">Nat.succ.injEq</span> <span class=\"n\">Nat.succ_sub_succ_eq_sub</span>\n</code></pre></div>",
        "id": 431707144,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1712439142
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8583926892\">failed</a>.</p>",
        "id": 431709356,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712441218
    },
    {
        "content": "<p>7 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/norm_num.20vs.20simprocs\">#mathlib4 &gt; norm_num vs simprocs</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 431710051,
        "sender_full_name": "Notification Bot",
        "timestamp": 1712441912
    },
    {
        "content": "<p>I agree that ensuring <code>import Mathlib.Tactic.NormNum.Eq</code> is present is a totally reasonable fix</p>",
        "id": 431710074,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712441947
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8584331570\">failed</a>.</p>",
        "id": 431715062,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712447957
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8584930490\">failed</a>.</p>",
        "id": 431720076,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712453198
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8586819125\">failed</a>.</p>",
        "id": 431738224,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712472361
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 431743628,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712477787
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8587766267\">failed</a>.</p>",
        "id": 431749157,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712482372
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8587845995\">failed</a>.</p>",
        "id": 431752958,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712484088
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8587971998\">failed</a>.</p>",
        "id": 431755768,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712485538
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8588788344\">failed</a>.</p>",
        "id": 431768744,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712494041
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8589814465\">failed</a>.</p>",
        "id": 431785245,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712504736
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8590804850\">failed</a>.</p>",
        "id": 431804589,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712514976
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8591042173\">failed</a>.</p>",
        "id": 431811198,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712519586
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8591363705\">failed</a>.</p>",
        "id": 431814189,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712522292
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8591738365\">failed</a>.</p>",
        "id": 431818398,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712525861
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8592170017\">failed</a>.</p>",
        "id": 431823757,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712530829
    },
    {
        "content": "<p>Looks like it succeeded in CI, not sure why the bot didn't post.</p>",
        "id": 431842934,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712545667
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8594302155\">failed</a>.</p>",
        "id": 431857228,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712552200
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8595619315\">failed</a>.</p>",
        "id": 431869783,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712558174
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8597790222\">failed</a>.</p>",
        "id": 431913487,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712568864
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8598196522\">failed</a>.</p>",
        "id": 431925133,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712570930
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8600174101\">failed</a>.</p>",
        "id": 431960976,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712580113
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8602788928\">failed</a>.</p>",
        "id": 432003229,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712590504
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8604997218\">failed</a>.</p>",
        "id": 432043732,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712601455
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8605516118\">failed</a>.</p>",
        "id": 432055610,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712605823
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8606250766\">failed</a>.</p>",
        "id": 432067609,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712610560
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8606889406\">failed</a>.</p>",
        "id": 432075561,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712614165
    },
    {
        "content": "<p>It got as far as the counterexamples now, with what looks like an easy fix</p>",
        "id": 432080371,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712616835
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8608581214\">failed</a>.</p>",
        "id": 432093819,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712625364
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8611821445\">failed</a>.</p>",
        "id": 432152383,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712647904
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 432164243,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712650804
    },
    {
        "content": "<p>Going to look why the bot doesn't work</p>",
        "id": 432164460,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712650921
    },
    {
        "content": "<p>Oh, \"Update the nightly-testing-YYYY-MM-DD branch\" is failing</p>",
        "id": 432165620,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712651278
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 432172284,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712653123
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/11856\">#11856</a> broke it</p>",
        "id": 432174090,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712653568
    },
    {
        "content": "<p>(I'll try to debug a little)</p>",
        "id": 432175919,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712654120
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8613501692\">failed</a>.</p>",
        "id": 432179935,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712655190
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8613894468\">failed</a>.</p>",
        "id": 432200399,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712659980
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 432231184,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712666788
    },
    {
        "content": "<p><span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span>: it looks like it's time to create a new bump/nightly-2024-04-12 branch from nightly-testing, and then PR that to \"bump/v4.8.0\".</p>",
        "id": 432903637,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712928391
    },
    {
        "content": "<p><span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span>: it looks like it's time to create a new bump/nightly-2024-04-12 branch from nightly-testing, and then PR that to \"bump/v4.8.0\".</p>",
        "id": 432943434,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712940620
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8666456314\">failed</a>.</p>",
        "id": 432968548,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712949858
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8668200083\">failed</a>.</p>",
        "id": 432990700,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712960581
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8669692336\">failed</a>.</p>",
        "id": 433002692,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712969896
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8671692987\">failed</a>.</p>",
        "id": 433024606,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1712993487
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8672728205\">failed</a>.</p>",
        "id": 433038428,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713006348
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8673543903\">failed</a>.</p>",
        "id": 433044435,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713012551
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8674539478\">failed</a>.</p>",
        "id": 433056525,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713022790
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8675498996\">failed</a>.</p>",
        "id": 433069369,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713033882
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8676381527\">failed</a>.</p>",
        "id": 433080710,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713044693
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8678857610\">failed</a>.</p>",
        "id": 433113513,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713080996
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8679462291\">failed</a>.</p>",
        "id": 433124958,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713092089
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8679977235\">failed</a>.</p>",
        "id": 433137522,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713104056
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8680548342\">failed</a>.</p>",
        "id": 433148456,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713113474
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8680791232\">failed</a>.</p>",
        "id": 433155860,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713120176
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8681085647\">failed</a>.</p>",
        "id": 433165287,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713129020
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/commit/fbe2c610658920daccedd1722811d1664b21e22c\">Fixed</a>, but depends on unmerged <a href=\"https://github.com/leanprover-community/aesop/pull/123\">aesop#123</a>.</p>",
        "id": 433187036,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713147784
    },
    {
        "content": "<p>There are a couple <code>erw</code>s I had to include (marked them with adaptation notes). I don't understand exactly why, but they seem to have to do with <code>List.map_pmap</code> being applied in ways where <code>pmap</code> has to be unfolded.</p>",
        "id": 433187335,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713147972
    },
    {
        "content": "<p>Also, the lake-manifest had three copies of std4, and I pruned it.</p>",
        "id": 433187357,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713147984
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8682205931\">failed</a>.</p>",
        "id": 433187581,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713148119
    },
    {
        "content": "<p>I'm very surprised that the changes to <code>rcases</code>/<code>obtain</code> (to make it so for <code>Nat</code>, you get <code>0</code> and <code>n + 1</code> instead of <code>Nat.zero</code> and <code>Nat.succ n'</code>) didn't have much fallout. It's possible that there are many uses of <code>simp only [Nat.succ_eq_add_one, ...]</code> that I didn't clean up.</p>",
        "id": 433187728,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713148226
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8683196791\">failed</a>.</p>",
        "id": 433196455,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713154353
    },
    {
        "content": "<p>Aesop bump was required.</p>",
        "id": 433205789,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713160816
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8684152417\">failed</a>.</p>",
        "id": 433215210,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713164588
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 433236468,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713171540
    },
    {
        "content": "<p><span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span>: it looks like it's time to create a new bump/nightly-2024-04-14 branch from nightly-testing, and then PR that to \"bump/v4.8.0\".</p>",
        "id": 433236528,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713171560
    },
    {
        "content": "<p>Well, we need to decide what to do with <a href=\"https://github.com/leanprover-community/mathlib4/pull/11997\">#11997</a> first. It still contains regressions from IsDefEq changes. I have a few local fixes that I will push to that branch (and thence to nightly-testing) soon, but far from all of them.</p>",
        "id": 433246289,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713174617
    },
    {
        "content": "<p>Any preferences from Mathlib maintainers how we handle this? Merge the regressions into <code>bump/v4.8.0</code>, to reduce the pain of keeping <code>nightly-testing</code> alive? Or not merge until we make further progress on these.</p>",
        "id": 433246393,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713174658
    },
    {
        "content": "<p>These regressions are blocking v4.8.0-rc1, so we do need to make progress here.</p>\n<p>Enough of the timeouts reveal Mathlib over-using defeq that we can't just say \"its <a href=\"https://github.com/leanprover/lean4/pull/3807\">lean4#3807</a>'s fault\"...</p>",
        "id": 433246560,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713174722
    },
    {
        "content": "<p>Unfortunately it's so big that it's pretty much unreviewable, and it seems we can't merge master into bump/v4.8.0 because master has already restored <code>.def</code> lemmas and bump/v4.8.0 doesn't support them.</p>\n<p>How would you feel about this as a strategy to reduce the diff:</p>\n<ul>\n<li>merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/12097\">#12097</a> into bump/v4.8.0 so that it at least builds</li>\n<li>I fix the conflicts on <a href=\"https://github.com/leanprover-community/mathlib4/pull/11828\">#11828</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/11829\">#11829</a>, we merge those into master, and cherry-pick them into bump/v4.8.0</li>\n<li>review the remaining diff in <a href=\"https://github.com/leanprover-community/mathlib4/pull/11997\">#11997</a> to see if we can apply that treatment to any other changes</li>\n</ul>\n<p>and then I think we really do need to merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/11997\">#11997</a> and make sure any remaining problems have issues filed</p>",
        "id": 433248474,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713175335
    },
    {
        "content": "<p>Great!</p>",
        "id": 433251956,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713176503
    },
    {
        "content": "<p>I am looking at <a href=\"https://github.com/leanprover-community/mathlib4/pull/12097\">#12097</a> now, hopefully merging soon.</p>",
        "id": 433252058,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713176528
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span>, the two FIXMEs on <a href=\"https://github.com/leanprover-community/mathlib4/pull/12097\">#12097</a> are going to resolve themselves on <code>nightly-testing</code>, because they are explaining how the proofs will break again, right?</p>",
        "id": 433252252,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713176601
    },
    {
        "content": "<p><img alt=\":merge:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/18527.png\" title=\"merge\">'d <a href=\"https://github.com/leanprover-community/mathlib4/pull/12097\">#12097</a> into bump/v4.8.0</p>",
        "id": 433253191,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713176937
    },
    {
        "content": "<p>And I've merged master and optimistically resolved conflicts on both <a href=\"https://github.com/leanprover-community/mathlib4/pull/11828\">#11828</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/11829\">#11829</a>.</p>",
        "id": 433253537,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713177049
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20update/near/433252252\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span>, the two FIXMEs on <a href=\"https://github.com/leanprover-community/mathlib4/pull/12097\">#12097</a> are going to resolve themselves on <code>nightly-testing</code>, because they are explaining how the proofs will break again, right?</p>\n</blockquote>\n<p>Yes, exactly</p>",
        "id": 433254911,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713177510
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 433254923,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713177514
    },
    {
        "content": "<p>Okay, I see <a href=\"https://github.com/leanprover-community/mathlib4/pull/11828\">#11828</a> has been closed (not much diff left). I've <span aria-label=\"peace sign\" class=\"emoji emoji-270c\" role=\"img\" title=\"peace sign\">:peace_sign:</span>'d <a href=\"https://github.com/leanprover-community/mathlib4/pull/11829\">#11829</a>, but may need to go to bed before CI is finished: feel free to merge as soon as it is good.</p>",
        "id": 433260069,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713179134
    },
    {
        "content": "<p>Also, once it lands on <code>master</code> if you want to cherry-pick it over to bump/v4.8.0 that would be great. Otherwise I'll resume tomorrow.</p>",
        "id": 433260655,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713179304
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8687548795\">failed</a>.</p>",
        "id": 433261274,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713179474
    },
    {
        "content": "<blockquote>\n<p>it seems we can't merge master into bump/v4.8.0 because master has already restored <code>.def</code> lemmas and bump/v4.8.0 doesn't support them.</p>\n</blockquote>\n<p>What do you mean by this?</p>",
        "id": 433280659,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713184913
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8689203588\">failed</a>.</p>",
        "id": 433280907,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713184978
    },
    {
        "content": "<p>Also, how does this thread differ from <a class=\"stream-topic\" data-stream-id=\"428973\" href=\"/#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates\">#nightly-testing &gt; Mathlib status updates</a>  (plural)?</p>",
        "id": 433280957,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713184991
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8691900550\">failed</a>.</p>",
        "id": 433323643,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713195425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20update/near/433260655\">said</a>:</p>\n<blockquote>\n<p>Also, once it lands on <code>master</code> if you want to cherry-pick it over to bump/v4.8.0 that would be great. Otherwise I'll resume tomorrow.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12158\">#12158</a> for the cherry-pick; I can't push to the bump branch directly</p>",
        "id": 433325814,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713195955
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20update/near/433280659\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>it seems we can't merge master into bump/v4.8.0 because master has already restored <code>.def</code> lemmas and bump/v4.8.0 doesn't support them.</p>\n</blockquote>\n<p>What do you mean by this?</p>\n</blockquote>\n<p>bump/v4.8.0 is currently on a nightly that doesn't allow definitions called <code>Foo.def</code> (e.g. <code>IsRoot.def</code>). We renamed those on master, but apparently we renamed them back as well</p>",
        "id": 433326139,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713196052
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8694271278\">failed</a>.</p>",
        "id": 433360610,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713206186
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8695552517\">failed</a>.</p>",
        "id": 433387985,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713215567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20update/near/433280957\">said</a>:</p>\n<blockquote>\n<p>Also, how does this thread differ from <a class=\"stream-topic\" data-stream-id=\"428973\" href=\"/#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates\">#nightly-testing &gt; Mathlib status updates</a>  (plural)?</p>\n</blockquote>\n<p>There are two different bots, that apparently disagree on the name...</p>",
        "id": 433394222,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713218042
    },
    {
        "content": "<p>PR'd and bors'd in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12165\">#12165</a>.</p>",
        "id": 433394437,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713218142
    },
    {
        "content": "<p>Also, I've just merged the streams.</p>",
        "id": 433394669,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713218248
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"567920\">github mathlib4 bot</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/433387985\">said</a>:</p>\n<blockquote>\n<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8695552517\">failed</a>.</p>\n</blockquote>\n<p>Not sure what happened here, CI is marked as cancelled.</p>",
        "id": 433394816,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713218303
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/433260655\">said</a>:</p>\n<blockquote>\n<p>Also, once it lands on <code>master</code> if you want to cherry-pick it over to bump/v4.8.0 that would be great. Otherwise I'll resume tomorrow.</p>\n</blockquote>\n<p>Okay, I've cherry-picked b8a0f589c3ef08ae093d7d1896142e5eb05e599a, which had been \"chore: avoid id.def (adaptation for nightly-2024-03-27) <a href=\"https://github.com/leanprover-community/mathlib4/pull/11829\">#11829</a>\" onto <code>bump/v4.8.0</code>.</p>",
        "id": 433395160,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713218446
    },
    {
        "content": "<p>The diff for <a href=\"https://github.com/leanprover-community/mathlib4/pull/11997\">#11997</a> (the PR to bump/v4.8.0 bringing us to 04-07) is now slightly smaller, but still substantial: 270 files.</p>\n<p>I need to take a break for about an hour, but will get back to this then. I think reducing / reviewing / approving the remaining diff is the main work at the moment for nightly-testing.</p>",
        "id": 433395545,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713218620
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 433397292,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713219427
    },
    {
        "content": "<p>Oops, I didn't know about the bump branch. I got <code>nightly-testing</code> building though, hopefully there's little accidental duplicated effort.</p>",
        "id": 433398279,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713219940
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 433398475,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713220036
    },
    {
        "content": "<p><span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span>: it looks like it's time to create a new bump/nightly-2024-04-14 branch from nightly-testing, and then PR that to \"bump/v4.8.0\".</p>",
        "id": 433398506,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713220056
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 433417646,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713230064
    },
    {
        "content": "<p><span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span>: it looks like it's time to create a new bump/nightly-2024-04-14 branch from nightly-testing, and then PR that to \"bump/v4.8.0\".</p>",
        "id": 433417659,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713230074
    },
    {
        "content": "<p>Quite noisy bot…</p>\n<p>BTW, have you considered doing only one master -&gt; nightly-testing merge per day, maybe 12h after the tool chain bump?</p>\n<p>More time to focus on getting it to work without bots interfering, less noise on the branch and here, at the cost of having a slightly worse time when a commit on master broke it and you need to find which one.</p>",
        "id": 433454904,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1713250878
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 433458976,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713252444
    },
    {
        "content": "<p><span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span>: it looks like it's time to create a new bump/nightly-2024-04-14 branch from nightly-testing, and then PR that to \"bump/v4.8.0\".</p>",
        "id": 433459000,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713252456
    },
    {
        "content": "<p>Ah, the two bots are now interacting in a bad way. The success bot knows to not say anything if it was the last person to speak. The PR reminder bot gets it in the way, because it always speaks... Sad. Ideally the reminder bot would only post once.</p>",
        "id": 433459724,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713252734
    },
    {
        "content": "<p>Okay, I've just made <a href=\"https://github.com/leanprover-community/mathlib4/pull/12176\">#12176</a>, which backports a bunch more changes to <code>master</code>. If someone is available to quickly review and merge that, that would be great. Once it lands on master we can cherry-pick it to <code>bump/v4.8.0</code>.</p>",
        "id": 433460545,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713253069
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"567920\">github mathlib4 bot</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/433459000\">said</a>:</p>\n<blockquote>\n<p><span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span>: it looks like it's time to create a new bump/nightly-2024-04-14 branch from nightly-testing, and then PR that to \"bump/v4.8.0\".</p>\n</blockquote>\n<p>I guess I will just obey the bot, it is making a reasonable suggestion!</p>",
        "id": 433460836,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713253193
    },
    {
        "content": "<p>Hmm, I made a <code>bump/nightly-2024-04-14</code> branch from nightly-testing, but it is completely unreviewable as a PR to bump/v4.8.0 until we are able to merge master to bump/v4.8.0 again, i.e. after getting <a href=\"https://github.com/leanprover-community/mathlib4/pull/11997\">#11997</a> in.</p>",
        "id": 433461430,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713253410
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/433460545\">said</a>:</p>\n<blockquote>\n<p>Okay, I've just made <a href=\"https://github.com/leanprover-community/mathlib4/pull/12176\">#12176</a>, which backports a bunch more changes to <code>master</code>. If someone is available to quickly review and merge that, that would be great. Once it lands on master we can cherry-pick it to <code>bump/v4.8.0</code>.</p>\n</blockquote>\n<p>Maybe I'm misunderstanding the diff that GitHub is showing me, but it seems to be that the PR is partially reverting some recent commits to mathlib.</p>",
        "id": 433461744,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1713253543
    },
    {
        "content": "<p>Sorry, I completely botched it. Trying again now. :-(</p>",
        "id": 433463200,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713254129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/433459724\">said</a>:</p>\n<blockquote>\n<p>Ah, the two bots are now interacting in a bad way. The success bot knows to not say anything if it was the last person to speak. The PR reminder bot gets it in the way, because it always speaks... Sad. Ideally the reminder bot would only post once.</p>\n</blockquote>\n<p>Perhaps two threads is reasonable after all? One could be \"Mathlib bump branch reminders\" or something</p>",
        "id": 433465961,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713255115
    },
    {
        "content": "<p>There was a <code>simp? says</code> failure in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12176\">#12176</a>, I just removed the <code>says</code> since it doesn't seem useful</p>",
        "id": 433469589,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713256403
    },
    {
        "content": "<p>I had also started doing the same; I'll make a PR once this is in</p>",
        "id": 433469973,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713256543
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12176\">#12176</a> is green, if anyone can merge it</p>",
        "id": 433480197,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713259906
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8703701170\">failed</a>.</p>",
        "id": 433486843,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713262138
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/433463200\">said</a>:</p>\n<blockquote>\n<p>Sorry, I completely botched it. Trying again now. :-(</p>\n</blockquote>\n<p>Okay, I've had another go at <a href=\"https://github.com/leanprover-community/mathlib4/pull/12176\">#12176</a>. Could someone review it please?</p>",
        "id": 433494066,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713264773
    },
    {
        "content": "<p>Oh, why? It was on the bors queue</p>",
        "id": 433496035,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713265511
    },
    {
        "content": "<p>Oops, sorry, I should have checked the comments. Not having a great day today, it seems. I backported more <code>id.def</code> --&gt; <code>id</code> or <code>_root_.id</code> replacements as well.</p>",
        "id": 433496222,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713265564
    },
    {
        "content": "<p>I'll put it back on the queue.</p>",
        "id": 433496249,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713265572
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8705743148\">failed</a>.</p>",
        "id": 433513880,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713271400
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8708390997\">failed</a>.</p>",
        "id": 433551347,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713281685
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8712810585\">failed</a>.</p>",
        "id": 433611226,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713303315
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8714500073\">failed</a>.</p>",
        "id": 433629567,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713314977
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8714984633\">failed</a>.</p>",
        "id": 433637916,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713321579
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 433641895,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713324551
    },
    {
        "content": "<p><span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span>: it looks like it's time to create a new bump/nightly-2024-04-16 branch from nightly-testing, and then PR that to \"bump/v4.8.0\".</p>",
        "id": 433641902,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713324561
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 433647698,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713328558
    },
    {
        "content": "<p><span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span>: it looks like it's time to create a new bump/nightly-2024-04-16 branch from nightly-testing, and then PR that to \"bump/v4.8.0\".</p>",
        "id": 433647758,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713328569
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8717713975\">failed</a>.</p>",
        "id": 433697434,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713341312
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 433709719,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713345379
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8722010965\">failed</a>.</p>",
        "id": 433752109,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713359251
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8724670268\">failed</a>.</p>",
        "id": 433818549,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713368169
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8726930359\">failed</a>.</p>",
        "id": 433855246,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713380386
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8728943993\">failed</a>.</p>",
        "id": 433879224,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713390073
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8730326630\">failed</a>.</p>",
        "id": 433894482,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713399202
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 433904812,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713406980
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8735630494\">failed</a>.</p>",
        "id": 434015238,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713435955
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8738014197\">failed</a>.</p>",
        "id": 434044425,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713446209
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8740690763\">failed</a>.</p>",
        "id": 434169458,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713456831
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8742962998\">failed</a>.</p>",
        "id": 434218648,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713465622
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8744946918\">failed</a>.</p>",
        "id": 434245352,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713477677
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8746655071\">failed</a>.</p>",
        "id": 434264693,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713490200
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8748001595\">failed</a>.</p>",
        "id": 434279192,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713500119
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8748665703\">failed</a>.</p>",
        "id": 434284018,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713503282
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 434298269,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713510167
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8751828320\">failed</a>.</p>",
        "id": 434330201,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713521345
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8752006872\">failed</a>.</p>",
        "id": 434332229,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713522082
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8752300889\">failed</a>.</p>",
        "id": 434337372,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713524139
    },
    {
        "content": "<p>(It turns out we use a lot of autogenerated instance names)</p>",
        "id": 434347198,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713528056
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8753046353\">failed</a>.</p>",
        "id": 434347494,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713528162
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8753364180\">failed</a>.</p>",
        "id": 434354917,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713530753
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8753913581\">failed</a>.</p>",
        "id": 434357119,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713531430
    },
    {
        "content": "<p>Oh, neat,  <code>rw?</code> no longer inserts <code>@</code> everywhere</p>",
        "id": 434362747,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713533177
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8754200739\">failed</a>.</p>",
        "id": 434363567,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713533455
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 434369262,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713535254
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8761268756\">failed</a>.</p>",
        "id": 434455742,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713574162
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8763556501\">failed</a>.</p>",
        "id": 434480099,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713599284
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 434485053,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713604413
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/434347198\">said</a>:</p>\n<blockquote>\n<p>(It turns out we use a lot of autogenerated instance names)</p>\n</blockquote>\n<p>I was really confused about how there were still instance names to fix, since I made sure to have a mathlib bump PR, but it turns out that there were still some old instance names hiding out inside of Init that didn't get updated until Lean's stage0 was updated.</p>",
        "id": 434514636,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713629467
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8771830461\">failed</a>.</p>",
        "id": 434577196,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713694094
    },
    {
        "content": "<p>Just needed a <code>lake update</code> after fixing Std.</p>",
        "id": 434628599,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713743764
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8776392248\">failed</a>.</p>",
        "id": 434631426,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713746649
    },
    {
        "content": "<p>More fallout from <a href=\"https://github.com/leanprover/lean4/pull/3960\">lean4#3960</a>.</p>",
        "id": 434632115,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713747302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, I pushed an icky fix to <code>UInt8.toChar</code> in <code>Mathlib/Data/UInt.lean</code> on <code>nightly-testing</code>, to adapt to your <a href=\"https://github.com/leanprover/lean4/pull/3960\">lean4#3960</a>. Would you mind taking a look and pushing a better proof if appropriate?</p>",
        "id": 434632843,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713747979
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 434634708,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713749717
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8782175187\">failed</a>.</p>",
        "id": 434709110,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713780732
    },
    {
        "content": "<p>First step is to merge the lean-pr-testing-3951 branches to Std/Aesop/Mathlib</p>",
        "id": 434714356,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713782435
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>, <code>lake update</code> on <code>nightly-testing</code> is persistently duplicating entries in <code>lake-manifest.json</code>.  Could you take a look?</p>",
        "id": 434715130,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713782691
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> sorry, I already pushed fixes to the two errors in the log, but it seems like lean-pr-testing-3951 doesn't have code changes in mathlib?</p>",
        "id": 434715151,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713782698
    },
    {
        "content": "<p>I think all it has it changes to the lakefile, to use the lean-pr-testing-3951 branches in Std and Aesop</p>",
        "id": 434715233,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713782726
    },
    {
        "content": "<p>I've just merged those back into nightly-testing.</p>",
        "id": 434715256,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713782734
    },
    {
        "content": "<p>Oh right, std and mathlib build in parallel, so seeing errors in mathlib doesn't prove that all of std works</p>",
        "id": 434715784,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713782901
    },
    {
        "content": "<p>Oh, crap! <a href=\"https://github.com/leanprover/lean4/pull/3951\">lean4#3951</a> didn't actually make it into this nightly...</p>",
        "id": 434715873,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713782930
    },
    {
        "content": "<p>It missed by just a bit.</p>",
        "id": 434715912,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713782945
    },
    {
        "content": "<p>hmm.</p>",
        "id": 434715918,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713782947
    },
    {
        "content": "<p>No big deal, I think I unwound it okay.</p>",
        "id": 434716049,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713782999
    },
    {
        "content": "<p>But there are real errors on nightly-testing, presumably because of the latest IsDefEq changes!</p>",
        "id": 434716573,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713783169
    },
    {
        "content": "<p>I wonder if we should expect things like this to work</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"bp\">././././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Order</span><span class=\"bp\">/</span><span class=\"n\">CompleteLatticeIntervals.lean</span><span class=\"o\">:</span><span class=\"mi\">253</span><span class=\"o\">:</span><span class=\"mi\">38</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">constructor</span> <span class=\"o\">⟨</span><span class=\"bp\">...</span><span class=\"o\">⟩,</span> <span class=\"n\">expected</span> <span class=\"n\">type</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">an</span> <span class=\"kd\">inductive</span> <span class=\"n\">type</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.31195</span> <span class=\"n\">c'</span>\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"bp\">././././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Order</span><span class=\"bp\">/</span><span class=\"n\">CompleteLatticeIntervals.lean</span><span class=\"o\">:</span><span class=\"mi\">255</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">And.intro</span> <span class=\"n\">b.property</span>\n<span class=\"n\">argument</span>\n  <span class=\"n\">b.property</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">↑</span><span class=\"n\">b</span> <span class=\"bp\">∈</span> <span class=\"n\">Iic</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.32594</span> <span class=\"bp\">≤</span> <span class=\"bp\">?</span><span class=\"n\">m.32595</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n</code></pre></div>",
        "id": 434716658,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713783200
    },
    {
        "content": "<p>Hmmm, I haven't worked out CompleteLatticeIntevals yet, but there are various problems with Lean no longer being able to infer a <code>_</code>...</p>",
        "id": 434718664,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713783865
    },
    {
        "content": "<p>Ah, got CompleteLatticeIntervals.</p>",
        "id": 434719887,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713784303
    },
    {
        "content": "<p>It just needs two <code>(α := α)</code>.</p>",
        "id": 434719922,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713784314
    },
    {
        "content": "<p>Oh, curious, weird interaction of named arguments and dot notation, you can write <code>f (x :=y).h</code> and it is interpreted as <code>(f (x := y)).h</code>.</p>",
        "id": 434720172,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713784383
    },
    {
        "content": "<p>I am pausing for a bit. If anyone would like to pick up <code>nightly-testing</code>, there are currently errors in</p>\n<ul>\n<li>Mathlib/Algebra/Module/LinearMap/Basic.lean</li>\n<li>Mathlib/GroupTheory/CoprodI.lean</li>\n<li>Mathlib/Order/RelSeries.lean</li>\n</ul>",
        "id": 434725937,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713786165
    },
    {
        "content": "<p>It seems Lean has got a bit worse at guessing some implicit arguments, but I don't yet understand any pattern in the regressions so far...</p>",
        "id": 434726053,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713786203
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8783405791\">failed</a>.</p>",
        "id": 434726671,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713786394
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8783495727\">failed</a>.</p>",
        "id": 434730878,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713787679
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8784347673\">failed</a>.</p>",
        "id": 434750336,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713792677
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/434726053\">said</a>:</p>\n<blockquote>\n<p>It seems Lean has got a bit worse at guessing some implicit arguments, but I don't yet understand any pattern in the regressions so far...</p>\n</blockquote>\n<p>I think these are going to count as bug reports for Lean, so perhaps for now there is not much need to keep pushing nightly-testing forward, but rather to create minimizations of the regressions that I've already pushed to <code>nightly-testing</code>.</p>",
        "id": 434760657,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713794983
    },
    {
        "content": "<p>It's late here, but these will be my plan tomorrow!</p>",
        "id": 434760708,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713794992
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8795160042\">failed</a>.</p>",
        "id": 434904527,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713849275
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8795282592\">failed</a>.</p>",
        "id": 434906486,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713850852
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8795897658\">failed</a>.</p>",
        "id": 434912225,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713854196
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8796207534\">failed</a>.</p>",
        "id": 434916905,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713856021
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8798121814\">failed</a>.</p>",
        "id": 434945182,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713865422
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8798520981\">failed</a>.</p>",
        "id": 434952884,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713868105
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8800527568\">failed</a>.</p>",
        "id": 434975745,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713876136
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8803137792\">failed</a>.</p>",
        "id": 435012227,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713886480
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8805449472\">failed</a>.</p>",
        "id": 435045784,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713897289
    },
    {
        "content": "<p>aesop is failing cc <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"bp\">/././</span><span class=\"n\">Aesop</span><span class=\"bp\">/</span><span class=\"n\">Util</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">367</span><span class=\"o\">:</span><span class=\"mi\">7</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">field</span> <span class=\"bp\">'</span><span class=\"n\">isEmpty'</span><span class=\"o\">,</span> <span class=\"n\">the</span> <span class=\"n\">environment</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"n\">contain</span> <span class=\"bp\">'</span><span class=\"n\">Lean.MessageData.isEmpty'</span>\n</code></pre></div>",
        "id": 435049554,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713898686
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span> removed <code>MessageData.isEmpty</code> in <a href=\"https://github.com/leanprover/lean4/pull/3951\">lean4#3951</a></p>",
        "id": 435056600,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713901455
    },
    {
        "content": "<p>Oh, I think that the <code>have</code> vs <code>let</code> linter also uses it.</p>",
        "id": 435056907,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1713901594
    },
    {
        "content": "<p>There should be <code>lean-pr-testing-3951</code> branches around, though</p>",
        "id": 435061385,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1713903277
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8807486936\">failed</a>.</p>",
        "id": 435071497,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713908088
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8807971378\">failed</a>.</p>",
        "id": 435076903,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713911104
    },
    {
        "content": "<p>I've just undone some changes on <code>nightly-testing</code> that were needed to cope with <a href=\"https://github.com/leanprover/lean4/pull/3965\">lean4#3965</a>, as we're hoping that <a href=\"https://github.com/leanprover/lean4/pull/3977\">lean4#3977</a> arriving tonight will obviate the need for them. <code>nightly-testing</code> will remain broken in the meantime, however.</p>",
        "id": 435077014,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713911167
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435061385\">said</a>:</p>\n<blockquote>\n<p>There should be <code>lean-pr-testing-3951</code> branches around, though</p>\n</blockquote>\n<p>Merged into aesop's <code>nightly-testing</code>, and bumped Mathlib's <code>nightly-testing</code></p>",
        "id": 435077394,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713911396
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8808182511\">failed</a>.</p>",
        "id": 435079404,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713912648
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8809210563\">failed</a>.</p>",
        "id": 435088901,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713919888
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8810606472\">failed</a>.</p>",
        "id": 435103820,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713930321
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8810914313\">failed</a>.</p>",
        "id": 435106852,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713932277
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8811865788\">failed</a>.</p>",
        "id": 435117239,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713939188
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8812119309\">failed</a>.</p>",
        "id": 435120109,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713940651
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8814341915\">failed</a>.</p>",
        "id": 435151396,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713951883
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8814742195\">failed</a>.</p>",
        "id": 435155557,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713953271
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8816698066\">failed</a>.</p>",
        "id": 435181048,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713962732
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8819195855\">failed</a>.</p>",
        "id": 435219819,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713972900
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8821533127\">failed</a>.</p>",
        "id": 435250749,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713983727
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8823583783\">failed</a>.</p>",
        "id": 435276381,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1713994498
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8826600298\">failed</a>.</p>",
        "id": 435305844,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714016100
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8828054149\">failed</a>.</p>",
        "id": 435321490,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714026968
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8828446548\">failed</a>.</p>",
        "id": 435326350,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714029254
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8828709051\">failed</a>.</p>",
        "id": 435329744,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714030659
    },
    {
        "content": "<p>Waiting for someone to fix Std, I guess</p>",
        "id": 435333966,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714032169
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8830252219\">failed</a>.</p>",
        "id": 435349574,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714037703
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8830653962\">failed</a>.</p>",
        "id": 435355335,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714039668
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8835367167\">failed</a>.</p>",
        "id": 435417500,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714059629
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8837631280\">failed</a>.</p>",
        "id": 435446245,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714070135
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8846177387\">failed</a>.</p>",
        "id": 435550666,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714124107
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8848370038\">failed</a>.</p>",
        "id": 435578633,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714135324
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8850672034\">failed</a>.</p>",
        "id": 435610001,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714145702
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8852728913\">failed</a>.</p>",
        "id": 435639710,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714156551
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8854508911\">failed</a>.</p>",
        "id": 435662624,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714167324
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8857974844\">failed</a>.</p>",
        "id": 435717072,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714199780
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8858828299\">failed</a>.</p>",
        "id": 435735258,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714209841
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8858893422\">failed</a>.</p>",
        "id": 435736199,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714210549
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8858964429\">failed</a>.</p>",
        "id": 435743588,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714213264
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8859387452\">failed</a>.</p>",
        "id": 435748535,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714216987
    },
    {
        "content": "<p>A short update: lots of stuff is bad on <code>nightly-testing</code> still: the recent changes to IsDefEq in <a href=\"https://github.com/leanprover/lean4/pull/3965\">lean4#3965</a> and <a href=\"https://github.com/leanprover/lean4/pull/3977\">lean4#3977</a> have being playing tug-of-war with Mathlib, and there are still lots of slow-downs. Leo still has one more fix in the works that hasn't hit the <code>lean4</code> repo. Being extremely optimistic, this will fix everything.</p>\n<p>Pessimistically, we have a ways to go and need to do more minimization of the issues on <code>nightly-testing</code>.</p>\n<p>If anyone wants to have a look for either <code>Adaptation note: 2024-04-23</code> or <code>FIXME: nightly-testing</code> on the <code>nightly-testing</code> branch, and at any of those occurrences, try to minimize what's going on, that would be amazing. This is my plan tomorrow/Monday...</p>",
        "id": 435750374,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714218558
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8859561151\">failed</a>.</p>",
        "id": 435750922,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714218966
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8859864074\">failed</a>.</p>",
        "id": 435755255,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714222648
    },
    {
        "content": "<p>I'll take a look now if I can get anywhere</p>",
        "id": 435756475,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714223752
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8860150245\">failed</a>.</p>",
        "id": 435757072,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714224264
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8860309169\">failed</a>.</p>",
        "id": 435759348,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714226268
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8860357334\">failed</a>.</p>",
        "id": 435760281,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714226901
    },
    {
        "content": "<p>I opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/12466\">#12466</a> to backport clear defeq abuse fixes; feel free to review or push similar fixes to it</p>",
        "id": 435760590,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714227153
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8860417931\">failed</a>.</p>",
        "id": 435760898,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714227449
    },
    {
        "content": "<p>Stepping away for a bit</p>",
        "id": 435761006,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714227543
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8860470560\">failed</a>.</p>",
        "id": 435761688,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714228096
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8861209254\">failed</a>.</p>",
        "id": 435772164,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714236209
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8861484934\">failed</a>.</p>",
        "id": 435775360,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714239239
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8862001986\">failed</a>.</p>",
        "id": 435783292,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714245430
    },
    {
        "content": "<p>I'll apply <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>'s changed from <a href=\"https://github.com/leanprover-community/mathlib4/pull/12469\">#12469</a> to nightly-testing</p>",
        "id": 435783394,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714245519
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8862070412\">failed</a>.</p>",
        "id": 435783813,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714245954
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8862103686\">failed</a>.</p>",
        "id": 435784288,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714246446
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8862155142\">failed</a>.</p>",
        "id": 435784775,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714246977
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8862216539\">failed</a>.</p>",
        "id": 435785791,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714248044
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8862258864\">failed</a>.</p>",
        "id": 435786090,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714248351
    },
    {
        "content": "<p>Okay, mathlib builds. Thanks <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> for the clue!</p>",
        "id": 435786458,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714248756
    },
    {
        "content": "<p>You can thank the gods of chance! Or the guy who asked the community to look at GammaSpecAdjunction :-)</p>",
        "id": 435786579,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714248903
    },
    {
        "content": "<p><span aria-label=\"dice\" class=\"emoji emoji-1f3b2\" role=\"img\" title=\"dice\">:dice:</span></p>",
        "id": 435786599,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714248933
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8862313688\">failed</a>.</p>",
        "id": 435787275,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714249599
    },
    {
        "content": "<p>Linter issues and some unused imports if someone wants to look at them</p>",
        "id": 435788536,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714250898
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8862714946\">failed</a>.</p>",
        "id": 435793801,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714256470
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8863257101\">failed</a>.</p>",
        "id": 435800186,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714263661
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 435804431,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714266822
    },
    {
        "content": "<p>This \"success\" still contains some <code>sorry</code>s, and <em>many</em> \"adaptation note\"s about significant slowdowns! We're not quite there yet. But it's progress!</p>",
        "id": 435835507,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714283714
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8865659968\">failed</a>.</p>",
        "id": 435838619,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714285780
    },
    {
        "content": "<p>I've intentionally borked <code>nightly-testing</code> for the next ~2-3 hours, by starting to compile it against <a href=\"https://github.com/leanprover/lean4/pull/4008\">lean4#4008</a>.</p>",
        "id": 435838972,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714286069
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8865862286\">failed</a>.</p>",
        "id": 435842139,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714288181
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span>, I saw on <code>nightly-testing</code> in Mathlib/AlgebraicGeometry/FunctionField.lean you added</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Adaptation note: 2024-04-23</span>\n</code></pre></div>\n<p>but with no further text. Could you make sure that adaptation notes include some explanation of what changed, so that it's not necessary to look at the git history to understand what happened?</p>",
        "id": 435842712,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714288387
    },
    {
        "content": "<p>Similarly in AlgebraicGeometry/Properties and MeasureTheory/Covering/Differentation</p>",
        "id": 435843378,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714288726
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8866643651\">failed</a>.</p>",
        "id": 435852271,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714296896
    },
    {
        "content": "<p>It looks like the new option is not visible in (some files in) Mathlib?</p>",
        "id": 435857924,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714299665
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8866845996\">failed</a>.</p>",
        "id": 435861193,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714300830
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435857924\">said</a>:</p>\n<blockquote>\n<p>It looks like the new option is not visible in (some files in) Mathlib?</p>\n</blockquote>\n<p>Should be momentarily: I was pushing to nightly-testing use a local overriden toolchain.</p>",
        "id": 435864934,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714301995
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8867634390\">failed</a>.</p>",
        "id": 435872867,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714309018
    },
    {
        "content": "<p>Looks like <code>rw [Ne.def, ...]</code> causes a problem here? (In <code>Mathlib.Data.Nat.Factors</code>: <code>replicate_subperm_factors_iff</code>, which is pretty recent... <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> )</p>",
        "id": 435873692,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714309820
    },
    {
        "content": "<p>Please replace by <code>rw [Ne, ...</code></p>",
        "id": 435873706,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714309850
    },
    {
        "content": "<p>This seems to be working. Can I push to this branch?</p>",
        "id": 435874125,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714310315
    },
    {
        "content": "<p><code>Mathlib.CategoryTheory.Iso</code> has a problem as well, but the only message I see is</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>error: external command `/home/mstoll/.elan/toolchains/leanprover--lean4---nightly-2024-04-28/bin/lean` exited with code 139\n</code></pre></div>",
        "id": 435874420,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714310614
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435874125\">said</a>:</p>\n<blockquote>\n<p>This seems to be working. Can I push to this branch?</p>\n</blockquote>\n<p>Or should somebody make a PR to Mathlib fixing this? (It seems to be the only <code>Ne.def</code> in Mathlib.)</p>",
        "id": 435874668,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714310846
    },
    {
        "content": "<p>Go ahead and push to nightly-testing</p>",
        "id": 435874780,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714310948
    },
    {
        "content": "<p>Done. Should I also make a PR to Mathlib? (Once the build finishes...)</p>",
        "id": 435875022,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714311204
    },
    {
        "content": "<p>You can, but it's not really needed</p>",
        "id": 435875372,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714311549
    },
    {
        "content": "<p>Then I won't.</p>",
        "id": 435875452,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714311623
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8867991693\">failed</a>.</p>",
        "id": 435876085,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714312310
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435874420\">said</a>:</p>\n<blockquote>\n<p><code>Mathlib.CategoryTheory.Iso</code> has a problem as well, but the only message I see is</p>\n<p><div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>error: external command `/home/mstoll/.elan/toolchains/leanprover--lean4---nightly-2024-04-28/bin/lean` exited with code 139\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>The strange thing is that when looking at this file in VSCode, it compiles without problems.</p>",
        "id": 435876283,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714312510
    },
    {
        "content": "<p>I've had a look at <code>Mathlib.NumberTheory.RamificationInertia</code> (the file I was experimenting with in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12412\">#12412</a>). Replacing two <code>_</code>s by explicit arguments makes the two declarations that had become very slow fairly fast. (I had already done that in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12412\">#12412</a>.)</p>\n<p>I see that most of the slow <code>Subsingleton</code> instances are gone (with one exception), but <code>Module</code>, <code>AddCommMonoid</code> and <code>AddMonoidHomClass</code> are still often slow.</p>",
        "id": 435877133,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714313238
    },
    {
        "content": "<p>Overall, it looks like typeclass inference only takes 50% of the time it took before <a href=\"https://github.com/leanprover/lean4/pull/4003\">lean4#4003</a>.</p>",
        "id": 435877222,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714313296
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435876283\">said</a>:</p>\n<blockquote>\n<p><code>exited with code 139</code></p>\n</blockquote>\n<p>What is the meaning of this error code?</p>",
        "id": 435877290,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714313386
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8868165668\">failed</a>.</p>",
        "id": 435877421,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714313509
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435877290\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435876283\">said</a>:</p>\n<blockquote>\n<p><code>exited with code 139</code></p>\n</blockquote>\n<p>What is the meaning of this error code?</p>\n</blockquote>\n<p>Adding the lines</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">profiler.threshold</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>near the beginning of the file makes <code>lake build Mathlib.CategoryTheory.Iso</code> succeed (but, of course, noisy), whereas leaving out <code>set_option profiler.threshold 1</code> still produces the error. <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 435879024,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714314932
    },
    {
        "content": "<p>It complies with the threshold set to <code>9</code>, but not with <code>10</code>.</p>",
        "id": 435879256,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714315140
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 435879395,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714315237
    },
    {
        "content": "<p>When I put <code>#exit</code> before line 67</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">reassoc</span> <span class=\"o\">(</span><span class=\"n\">attr</span> <span class=\"o\">:=</span> <span class=\"n\">simp</span><span class=\"o\">)]</span> <span class=\"n\">Iso.hom_inv_id</span> <span class=\"n\">Iso.inv_hom_id</span>\n</code></pre></div>\n<p>it builds, but when I put it after, it doesn't. So the problem seems to be with that line.</p>\n<p>There is a note (lines 279-287)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- FIXME putting @[reassoc] on the `hom_inv_id` above somehow unfolds `inv`</span>\n<span class=\"c1\">-- This happens even if we make `inv` irreducible!</span>\n<span class=\"c1\">-- I don't understand how this is happening: it is likely a bug.</span>\n\n<span class=\"c1\">-- attribute [reassoc] hom_inv_id inv_hom_id</span>\n<span class=\"c1\">-- #print hom_inv_id_assoc</span>\n<span class=\"c1\">--   theorem CategoryTheory.IsIso.hom_inv_id_assoc {X Y : C} (f : X ⟶ Y) [I : IsIso f]</span>\n<span class=\"c1\">--     {Z : C} (h : X ⟶ Z),</span>\n<span class=\"c1\">--     f ≫ Classical.choose (_ : Exists fun inv ↦ f ≫ inv = 𝟙 X ∧ inv ≫ f = 𝟙 Y) ≫ h = h := ...</span>\n</code></pre></div>\n<p>which may indicate that there have been problems with <code>reassoc</code> before. I'm out of my depth here.</p>",
        "id": 435881567,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714316772
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8868710504\">failed</a>.</p>",
        "id": 435888888,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714321241
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8870534721\">failed</a>.</p>",
        "id": 435910643,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714339967
    },
    {
        "content": "<p>Leo has just added some further flags for disabling some of the IsDefEq changes made recently. They seem to be effective in dealing with slow-downs.</p>\n<p>My plan:</p>\n<ul>\n<li>Install these flags (today even, before the nightly is released, using a local <code>elan override set</code>, which means nightly-testing won't work for others until about +10 hours from now)</li>\n<li>Hope that Mathlib is happy with in the short term keeping these flags in the problematic places (~30), even on <code>master</code></li>\n<li>Continue minimizing the examples where these flags are necessary, with the hope that we can continue to work on IsDefEq.</li>\n</ul>\n<p>It's going to be a bit messy in the short term, but I think we're already going to see some big speedups overall. (e.g. <span class=\"user-mention\" data-user-id=\"479359\">@Michael Stoll</span>'s noticing what a big effect <a href=\"https://github.com/leanprover/lean4/pull/4003\">lean4#4003</a> has already had).</p>",
        "id": 435912543,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714341804
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8870815666\">failed</a>.</p>",
        "id": 435915722,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714344891
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435879024\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435877290\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435876283\">said</a>:</p>\n<blockquote>\n<p><code>exited with code 139</code></p>\n</blockquote>\n<p>What is the meaning of this error code?</p>\n</blockquote>\n<p>Adding the lines</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">profiler.threshold</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>near the beginning of the file makes <code>lake build Mathlib.CategoryTheory.Iso</code> succeed (but, of course, noisy), whereas leaving out <code>set_option profiler.threshold 1</code> still produces the error. <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>\n</blockquote>\n<p>These errors are fallout from <a href=\"https://github.com/leanprover/lean4/pull/4006\">lean4#4006</a>. Fix in the works.</p>",
        "id": 435916696,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714345812
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8871050047\">failed</a>.</p>",
        "id": 435916750,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714345906
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"479359\">@Michael Stoll</span>, thanks for your recent help on <code>nightly-testing</code>.</p>\n<p>Also, though, a request about writing adaptation notes: it's really helpful if they can be understood without reading the git history.</p>\n<p>You wrote:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Adaptation note: 2024-04-28</span>\n<span class=\"c1\">-- replacing the `_` by `P` makes it fast (compare #12412)</span>\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">Quotient.algebraMap_quotient_of_ramificationIdx_neZero</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">algebraMap</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"bp\">⧸</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"bp\">⧸</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ideal.Quotient.mk</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Ideal.Quotient.mk</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>but notice here there is no <code>_</code> after the edit, and several <code>P</code>s. I'm guessing that it is the P in the RHS, but this is not as obvious as it could be.</p>",
        "id": 435926351,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714353074
    },
    {
        "content": "<p>(I've updated this note.)</p>",
        "id": 435926531,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714353206
    },
    {
        "content": "<p>Separately: there is no linkifier in VSCode, so writing <a href=\"https://github.com/leanprover-community/mathlib4/pull/12412\">https://github.com/leanprover-community/mathlib4/pull/12412</a> in a comment is much more useful than writing <a href=\"https://github.com/leanprover-community/mathlib4/pull/12412\">#12412</a>.</p>",
        "id": 435926662,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714353298
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8871660476\">failed</a>.</p>",
        "id": 435927251,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714353691
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8871959082\">failed</a>.</p>",
        "id": 435927593,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714353984
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8872125506\">failed</a>.</p>",
        "id": 435928808,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714355250
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8872919667\">failed</a>.</p>",
        "id": 435943015,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714361908
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8874307769\">failed</a>.</p>",
        "id": 435966221,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714372649
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435926662\">said</a>:</p>\n<blockquote>\n<p>Separately: there is no linkifier in VSCode, so writing <a href=\"https://github.com/leanprover-community/mathlib4/pull/12412\">https://github.com/leanprover-community/mathlib4/pull/12412</a> in a comment is much more useful than writing <a href=\"https://github.com/leanprover-community/mathlib4/pull/12412\">#12412</a>.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> Thanks for the tips; I'm doing this for the first time...</p>",
        "id": 435967172,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714372962
    },
    {
        "content": "<p>(As above, <em>very</em> much appreciated.)</p>",
        "id": 435967217,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714372982
    },
    {
        "content": "<p>Should we have <code>#adaptation_note</code> that complains </p>\n<ul>\n<li>If there is a spelling mistake in <code>adaptation_note</code> (atm grep will not find <code>Adapation note</code>s)</li>\n<li>If there is no version number?</li>\n<li>If there is no date?</li>\n<li>If there is no free-form comment...</li>\n</ul>",
        "id": 435968561,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714373457
    },
    {
        "content": "<p>I'm mostly worried about the first bullet point.</p>",
        "id": 435968597,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714373468
    },
    {
        "content": "<p>Seems reasonable. Want to implement it? :-)</p>",
        "id": 435969837,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714373896
    },
    {
        "content": "<p>I'll put it on my Hilbert ~hotel~ todo list</p>",
        "id": 435969931,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714373947
    },
    {
        "content": "<p>I think we need a technical debt list of lists maintained somewhere, and this can be a bullet point there.</p>",
        "id": 435970011,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714373984
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/435970011\">said</a>:</p>\n<blockquote>\n<p>I think we need a technical debt list of lists maintained somewhere, and this can be a bullet point there.</p>\n</blockquote>\n<p>Making this list on github is on <em>my</em> TODO list - I can pinky promise to do this by end of June. I've noted this item for it :-)</p>",
        "id": 435973665,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1714375390
    },
    {
        "content": "<p>Gah, <a href=\"https://github.com/leanprover/lean4/pull/4021\">lean4#4021</a> failed, and didn't make it into the nightly, so nightly-testing is probably borked for another day. :-(</p>",
        "id": 435982136,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714378453
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8875364832\">failed</a>.</p>",
        "id": 435989424,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714380857
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8876449915\">failed</a>.</p>",
        "id": 436005012,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714385497
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8878689804\">failed</a>.</p>",
        "id": 436040291,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714395994
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8881288201\">failed</a>.</p>",
        "id": 436077746,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714404861
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8883631027\">failed</a>.</p>",
        "id": 436113945,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714415756
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8885701005\">failed</a>.</p>",
        "id": 436146834,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714427692
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8886993886\">failed</a>.</p>",
        "id": 436166261,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714437041
    },
    {
        "content": "<p>Despite all the red crosses, we are actually close to converging here.</p>",
        "id": 436166922,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714437423
    },
    {
        "content": "<p>Unfortunately the \"exit code 139\" crash that appeared in <a href=\"https://github.com/leanprover/lean4/pull/4006\">lean4#4006</a> has not been resolved, but we at least know how to suppress it (<a href=\"https://github.com/leanprover/lean4/pull/4021\">lean4#4021</a>), and we're working on diagnosing the underlying problem. (We discovered one bug in <a href=\"https://github.com/leanprover/lean4/pull/4028\">lean4#4028</a>, but that doesn't seem to be the source.)</p>",
        "id": 436166932,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714437429
    },
    {
        "content": "<p>When <code>nightly-2024-04-30</code> lands tonight, I think <code>nightly-testing</code> should come green again.</p>",
        "id": 436166942,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714437434
    },
    {
        "content": "<p>There are quite a few uses of the new backwards compatibility flags on <code>nightly-testing</code>, and my current intention is that we will merge these with <code>master</code>, and deal with them on an ongoing basis.</p>",
        "id": 436166946,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714437439
    },
    {
        "content": "<ul>\n<li>There are currently 5 files that require a <code>set_option backward.isDefEq.lazyProjDelta false in</code> to avoid a timeout. This flag locally reverts the changes to <code>isDefEq</code> from <a href=\"https://github.com/leanprover/lean4/pull/3965\">lean4#3965</a>.</li>\n<li>There are currently 19 files that requies a <code>set_option backward.isDefEq.lazyWhnfCore false in</code> to avoid a timeout. (<a href=\"https://github.com/leanprover/lean4/pull/4023\">lean4#4023</a> is a minimization of one of these, and Leo is actively looking at this.) This flag locally reverts the changes to <code>isDefEq</code> from <a href=\"https://github.com/leanprover/lean4/pull/4004\">lean4#4004</a>.</li>\n<li>There are two files (<code>Mathlib.AlgebraicGeometry.Spec</code> (a known offender with deep defeq abuse) and <code>Mathlib.Geometry.Manifold.VectorBundle</code> (an otherwise nice show case of <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> and <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>'s work) which now have new timeouts (i.e. we set maxHeartbeats higher).<ul>\n<li>In <code>Spec</code>, <code>lazyWhnfCore</code> helps, but even with that it requires 800,000 heartbeats (i.e. 4x the limit). </li>\n<li>In <code>VectorBundle</code> the backwards compatibility flags don't make much difference, but it's also not much over the limit.</li>\n</ul>\n</li>\n<li>There are 34 files that require a <code>set_option backward.synthInstance.canonInstances false in</code> to avoid a timeout. I haven't looked at this at all yet, but am not too worried. This flag locally reverts the changes to typeclass search from <a href=\"https://github.com/leanprover/lean4/pull/4003\">lean4#4003</a>, prompted by the issue raised in <a href=\"https://github.com/leanprover/lean4/pull/3996\">lean4#3996</a>. This change will hopefully give a big speedup overall, so these flags are small cost. I am really hoping that \"the community\" will be keen to look into these flags and find ways to remove them.</li>\n</ul>",
        "id": 436166962,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714437445
    },
    {
        "content": "<p>I would like to get feedback on merging these backwards compatibility flags into <code>master</code>. I think it is the right approach, but some +1s would be great.</p>",
        "id": 436166968,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714437450
    },
    {
        "content": "<p>Finally, at this point we have a <em>long</em> period (2 months) of divergence between <code>nightly-testing</code> and <code>master</code>, and I'm pretty worried about bad merges polluting <code>nightly-testing</code>. I'm going to make a new PR from <code>nightly-testing</code> to <code>bump/v4.8.0</code> shortly, and I would appreciate careful eyes looking at that diff. Hopefully we can merge that even tonight! After that I think I'll open a PR from <code>bump/v4.8.0</code> to <code>master</code> (even before <code>v4.8.0-rc1</code> is out), so we can also get some eyes on that.</p>",
        "id": 436166985,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714437460
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8887478491\">failed</a>.</p>",
        "id": 436169755,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714439145
    },
    {
        "content": "<p>Kim, in case it is helpful, the <code>no_lost_declarations</code> script on nightly-testing reports</p>\n<ul>\n<li><code>-</code> <code>def add.add := True</code></li>\n<li><code>-</code> <code>def backwardWeight := 1</code></li>\n<li><code>-</code> <code>def buildDiscrTree : IO (DiscrTreeCache (Name × Bool × Nat)) :=</code></li>\n<li><code>-</code> <code>def cachePath : IO FilePath :=</code></li>\n<li><code>+</code> <code>def compute_rfl? (n : SearchNode) : MetaM SearchNode := do</code></li>\n<li><code>-</code> <code>def compute_rfl? (n : SearchNode) : MetaM SearchNode := withMCtx n.mctx do</code></li>\n<li><code>+</code> <code>def cons (a : α) (v : Vector3 α n) : Vector3 α (n + 1) := fun i =&gt; by</code></li>\n<li><code>-</code> <code>def cons (a : α) (v : Vector3 α n) : Vector3 α (succ n) := fun i =&gt; by</code></li>\n<li><code>+</code> <code>def consElim {C : Vector3 α (n + 1) → Sort u} (H : ∀ (a : α) (t : Vector3 α n), C (a :: t))</code></li>\n<li><code>-</code> <code>def consElim {C : Vector3 α (succ n) → Sort u} (H : ∀ (a : α) (t : Vector3 α n), C (a :: t))</code></li>\n<li><code>-</code> <code>def discrTreeConfig : WhnfCoreConfig := {}</code></li>\n<li><code>-</code> <code>def foldlM {α : Type} {m} [Monad m] (f : α → Expr → m α) (x : α) (e : Expr) : m α :=</code></li>\n<li><code>-</code> <code>def Foo.foo := True</code></li>\n<li><code>-</code> <code>def forwardWeight := 2</code></li>\n<li><code>+</code> <code>def head (v : Vector3 α (n + 1)) : α :=</code></li>\n<li><code>-</code> <code>def head (v : Vector3 α (succ n)) : α :=</code></li>\n<li><code>-</code> <code>def iffOfEq (mvarId : MVarId) : MetaM MVarId := do</code></li>\n<li><code>+</code> <code>def insert (a : α) (v : Vector3 α n) (i : Fin2 (n + 1)) : Vector3 α (n + 1) := fun j =&gt;</code></li>\n<li><code>-</code> <code>def insert (a : α) (v : Vector3 α n) (i : Fin2 (succ n)) : Vector3 α (succ n) := fun j =&gt;</code></li>\n<li><code>-</code> <code>def localHypotheses (except : List FVarId := []) : MetaM (Array (Expr × Bool × Nat)) := do</code></li>\n<li><code>-</code> <code>def processLemma (name : Name) (constInfo : ConstantInfo) :</code></li>\n<li><code>-</code> <code>def proofIrrelHeq (mvarId : MVarId) : MetaM Bool :=</code></li>\n<li><code>-</code> <code>def propext (mvarId : MVarId) : MetaM MVarId := do</code></li>\n<li><code>-</code> <code>def RewriteResult.by? (r : RewriteResult) : Option Expr :=</code></li>\n<li><code>-</code> <code>def RewriteResult.computeRfl (r : RewriteResult) : MetaM RewriteResult := do</code></li>\n<li><code>-</code> <code>def RewriteResult.ppResult (r : RewriteResult) : MetaM String :=</code></li>\n<li><code>-</code> <code>def RewriteResult.prepare_ppResult (r : RewriteResult) : MetaM RewriteResult := do</code></li>\n<li><code>-</code> <code>def rewritesCore (hyps : Array (Expr × Bool × Nat))</code></li>\n<li><code>-</code> <code>def rewritesDedup (hyps : Array (Expr × Bool × Nat))</code></li>\n<li><code>-</code> <code>def rewrites (hyps : Array (Expr × Bool × Nat))</code></li>\n<li><code>-</code> <code>def _root_.Lean.MVarId.liftReflToEq (mvarId : MVarId) : MetaM MVarId := do</code></li>\n<li><code>-</code> <code>def roots : Array FilePath :=</code></li>\n<li><code>+</code> <code>def roots : Array FilePath := #[\"Mathlib.lean\"]</code></li>\n<li><code>-</code> <code>def solveByElim (goals : List MVarId) (depth : Nat := 6) : MetaM PUnit := do</code></li>\n<li><code>-</code> <code>def subsingletonElim (mvarId : MVarId) : MetaM Bool :=</code></li>\n<li><code>+</code> <code>def tail (v : Vector3 α (n + 1)) : Vector3 α n := fun i =&gt; v (fs i)</code></li>\n<li><code>-</code> <code>def tail (v : Vector3 α (succ n)) : Vector3 α n := fun i =&gt; v (fs i)</code></li>\n<li><code>+</code> <code>def testConst : Nat := 4</code></li>\n<li><code>+</code> <code>def toChar (n : UInt8) : Char := ⟨n.toUInt32, .inl (n.1.2.trans (by decide))⟩</code></li>\n<li><code>-</code> <code>def toChar (n : UInt8) : Char := ⟨n.toUInt32, toChar_aux n.1 n.1.2⟩</code></li>\n<li><code>-</code> <code>def traverseChildren [Applicative M] (f : Expr → M Expr) : Expr → M Expr</code></li>\n<li><code>-</code> <code>def withBindingBody' (n : Name) (x : Expr → m α) : m α := do</code></li>\n<li><code>-</code> <code>def zero : Nat := 0</code></li>\n<li><code>-</code> <code>inductive SideConditions</code></li>\n<li><code>-</code> <code>instance : AddCommGroup (Completion α) :=</code></li>\n<li><code>+</code> <code>instance : CoeTC (M →+[R] M₃) (M →ₗ[R] M₃) :=</code></li>\n<li><code>-</code> <code>instance : CompleteSpace ℝ := by</code></li>\n<li><code>-</code> <code>instance : Denumerable ℚ := by</code></li>\n<li><code>-</code> <code>instance : EuclideanDomain R[X] :=</code></li>\n<li><code>-</code> <code>instance : HasQuotient R (Ideal R) :=</code></li>\n<li><code>+</code> <code>instance instAddCommGroup : AddCommGroup (Completion α) :=</code></li>\n<li><code>-</code> <code>instance instCoeTCLinearMap : CoeTC (M →+[R] M₃) (M →ₗ[R] M₃) :=</code></li>\n<li><code>+</code> <code>instance instDecidableEq [DecidableEq α] : DecidableEq (Booleanisation α) :=</code></li>\n<li><code>-</code> <code>instance instDecidableEq [DecidableEq α] : DecidableEq (Booleanisation α) := Sum.instDecidableEqSum</code></li>\n<li><code>+</code> <code>instance instDenumerable : Denumerable ℚ := by</code></li>\n<li><code>+</code> <code>instance instEuclideanDomain : EuclideanDomain R[X] :=</code></li>\n<li><code>+</code> <code>instance instHasQuotient : HasQuotient R (Ideal R) :=</code></li>\n<li><code>+</code> <code>instance instIsScalarTowerOfSMul [SMul M N] [∀ i, IsScalarTower M N (α i)] :</code></li>\n<li><code>+</code> <code>instance instIsScalarTowerOfSMul [SMul M N] [IsScalarTower M N α] : IsScalarTower M N (Option α) :=</code></li>\n<li><code>+</code> <code>instance instIsScalarTowerOfSMul [SMul R S] : IsScalarTower R S PUnit :=</code></li>\n<li><code>+</code> <code>instance instMulProd {M N} [Mul M] [Mul N] : Mul (M × N) := ⟨fun p q ↦ ⟨p.1 * q.1, p.2 * q.2⟩⟩</code></li>\n<li><code>-</code> <code>instance {M N} [Mul M] [Mul N] : Mul (M × N) := ⟨fun p q ↦ ⟨p.1 * q.1, p.2 * q.2⟩⟩</code></li>\n<li><code>+</code> <code>instance Real.instCompleteSpace : CompleteSpace ℝ := by</code></li>\n<li><code>+</code> <code>instance : SmallCategory (HomAsType α) := inferInstanceAs &lt;| SmallCategory (ShrinkHoms _)</code></li>\n<li><code>-</code> <code>instance : SmallCategory (HomAsType α) := ShrinkHoms.instCategoryShrinkHoms.{0} _</code></li>\n<li><code>-</code> <code>instance [SMul M N] [∀ i, IsScalarTower M N (α i)] : IsScalarTower M N (Σi, α i) :=</code></li>\n<li><code>-</code> <code>instance [SMul M N] [IsScalarTower M N α] : IsScalarTower M N (Option α) :=</code></li>\n<li><code>-</code> <code>instance [SMul R S] : IsScalarTower R S PUnit :=</code></li>\n<li><code>+</code> <code>instance {β : Type*} {C : β → Type*} [∀ b, TopologicalSpace (C b)]</code></li>\n<li><code>+</code> <code>lemma harmonic_eq_sum_Icc {n : ℕ} :  harmonic n = ∑ i in Finset.Icc 1 n, (↑i)⁻¹ := by</code></li>\n<li><code>-</code> <code>lemma harmonic_eq_sum_Icc {n : ℕ} : harmonic n = ∑ i in Finset.Icc 1 n, (↑i)⁻¹ := by</code></li>\n<li><code>+</code> <code>lemma one_lt_succ_succ (n : ℕ) : 1 &lt; n.succ.succ := succ_lt_succ &lt;| succ_pos n</code></li>\n<li><code>-</code> <code>lemma pred_eq_sub_one (n : ℕ) : pred n = n - 1 := rfl</code></li>\n<li><code>-</code> <code>lemma prime_of_prime (n : ℕ) : Prime n ↔ Nat.Prime n := by</code></li>\n<li><code>+</code> <code>lemma rec_add_one {C : ℕ → Sort*} (h0 : C 0) (h : ∀ n, C n → C (n + 1)) (n : ℕ) :</code></li>\n<li><code>+</code> <code>lemma stdSimplex_fin_two :</code></li>\n<li><code>-</code> <code>lemma stdSimplex_fin_two : stdSimplex 𝕜 (Fin 2) = [Pi.single 0 1 -[𝕜] Pi.single 1 1] := by</code></li>\n<li><code>-</code> <code>structure RewriteResult where</code></li>\n<li><code>+</code> <code>theorem add_one_pos (n : ℕ) : 0 &lt; n + 1 := succ_pos n</code></li>\n<li><code>+</code> <code>theorem and_or_imp {a b c : Prop} : a ∧ b ∨ (a → c) ↔ a → b ∨ c := Decidable.and_or_imp</code></li>\n<li><code>+</code> <code>theorem antidiagonalTuple_zero_succ (n : ℕ) : antidiagonalTuple 0 (n + 1) = [] :=</code></li>\n<li><code>-</code> <code>theorem antidiagonalTuple_zero_succ (n : ℕ) : antidiagonalTuple 0 n.succ = [] :=</code></li>\n<li><code>+</code> <code>theorem append_insert (a : α) (t : Vector3 α m) (v : Vector3 α n) (i : Fin2 (n + 1))</code></li>\n<li><code>-</code> <code>theorem append_insert (a : α) (t : Vector3 α m) (v : Vector3 α n) (i : Fin2 (succ n))</code></li>\n<li><code>+</code> <code>theorem bagInter_consecutive (n m l : Nat) :</code></li>\n<li><code>-</code> <code>theorem bagInter_consecutive (n m l : Nat) :  @List.bagInter ℕ instBEq (Ico n m) (Ico m l) = [] :=</code></li>\n<li><code>-</code> <code>theorem beq_comm {α} [BEq α] [LawfulBEq α] {a b : α} : (a == b) = (b == a) :=</code></li>\n<li><code>-</code> <code>theorem beq_eq_decide_eq {α} [BEq α] [LawfulBEq α] [DecidableEq α]</code></li>\n<li><code>-</code> <code>theorem cast_add [AddMonoidWithOne R] (m n : ℕ) : ((m + n : ℕ) : R) = m + n := by</code></li>\n<li><code>+</code> <code>theorem cast_add_one_ne_zero (n : ℕ) : (n + 1 : R) ≠ 0 :=</code></li>\n<li><code>-</code> <code>theorem cast_add_one_ne_zero (n : ℕ) : (n + 1 : R) ≠ 0 := by</code></li>\n<li><code>+</code> <code>theorem cast_add {R : Type*} [AddMonoidWithOne R] (m n : ℕ) : ((m + n : ℕ) : R) = m + n := by</code></li>\n<li><code>-</code> <code>theorem coe_iff_coe : ∀ {a b : Bool}, (a ↔ b) ↔ a = b := by decide</code></li>\n<li><code>-</code> <code>theorem cond_decide {α} (p : Prop) [Decidable p] (t e : α) :</code></li>\n<li><code>-</code> <code>theorem cond_eq_ite {α} (b : Bool) (t e : α) : cond b t e = if b then t else e := by</code></li>\n<li><code>-</code> <code>theorem cond_not {α} (b : Bool) (t e : α) : cond (!b) t e = cond b e t := by cases b &lt;;&gt; rfl</code></li>\n<li><code>-</code> <code>theorem cond_self.{u} {α : Type u} (b : Bool) (a : α) : cond b a a = a := by cases b &lt;;&gt; rfl</code></li>\n<li><code>+</code> <code>theorem cons_head_tail (v : Vector3 α (n + 1)) : (head v :: tail v) = v :=</code></li>\n<li><code>-</code> <code>theorem cons_head_tail (v : Vector3 α (succ n)) : (head v :: tail v) = v :=</code></li>\n<li><code>-</code> <code>theorem decide_and (p q : Prop) [Decidable p] [Decidable q] : decide (p ∧ q) = (p &amp;&amp; q) := by</code></li>\n<li><code>-</code> <code>theorem decide_coe (b : Bool) {h} : @decide b h = b := by</code></li>\n<li><code>-</code> <code>theorem decide_or (p q : Prop) [Decidable p] [Decidable q] : decide (p ∨ q) = (p || q) := by</code></li>\n<li><code>-</code> <code>theorem default_bool : default = false :=</code></li>\n<li><code>-</code> <code>theorem dist.def (n m : ℕ) : dist n m = n - m + (m - n) :=</code></li>\n<li><code>+</code> <code>theorem eval_of (n : ℕ) (x : M) : eval I M n (of I M x) = mkQ (I ^ n • (⊤ : Submodule R M)) x :=</code></li>\n<li><code>-</code> <code>theorem eval_of (n : ℕ) (x : M) : eval I M n (of I M x) = mkQ _ x :=</code></li>\n<li><code>+</code> <code>theorem Fintype.card_exp_univ_card_eq [Fintype α] [Fintype β] :</code></li>\n<li><code>+</code> <code>theorem foo (n : Nat) : makeSingleton n = [0] := by</code></li>\n<li><code>-</code> <code>theorem getD_cons_succ : getD (x :: xs) (n + 1) d = getD xs n d :=</code></li>\n<li><code>-</code> <code>theorem getD_cons_zero : getD (x :: xs) 0 d = x :=</code></li>\n<li><code>-</code> <code>theorem getD_nil : getD [] n d = d :=</code></li>\n<li><code>+</code> <code>theorem homOfLE_refl {x : X} (h : x ≤ x) : h.hom = 𝟙 x :=</code></li>\n<li><code>-</code> <code>theorem homOfLE_refl {x : X} : (le_refl x).hom = 𝟙 x :=</code></li>\n<li><code>-</code> <code>theorem imp_and_neg_imp_iff (p q : Prop) : (p → q) ∧ (¬p → q) ↔ q := by</code></li>\n<li><code>+</code> <code>theorem imp_and_neg_imp_iff (p q : Prop) : (p → q) ∧ (¬p → q) ↔ q := by simp</code></li>\n<li><code>+</code> <code>theorem imp_iff_right_iff {a b : Prop} : (a → b ↔ b) ↔ a ∨ b := Decidable.imp_iff_right_iff</code></li>\n<li><code>+</code> <code>theorem index_exists {j : ℕ} (h : j &lt; n) : ∃ i : ℕ, j &lt; c.sizeUpTo (i + 1) ∧ i &lt; c.length := by</code></li>\n<li><code>-</code> <code>theorem index_exists {j : ℕ} (h : j &lt; n) : ∃ i : ℕ, j &lt; c.sizeUpTo i.succ ∧ i &lt; c.length := by</code></li>\n<li><code>+</code> <code>theorem insert_fs (a : α) (b : α) (v : Vector3 α n) (i : Fin2 (n + 1)) :</code></li>\n<li><code>-</code> <code>theorem insert_fs (a : α) (b : α) (v : Vector3 α n) (i : Fin2 (succ n)) :</code></li>\n<li><code>+</code> <code>theorem isEmpty_exists_isempty_fun : (∃ (_ : α), IsEmpty β) ↔ Nonempty α ∧ IsEmpty β := by</code></li>\n<li><code>-</code> <code>theorem isEmpty_fun : IsEmpty (α → β) ↔ Nonempty α ∧ IsEmpty β := by</code></li>\n<li><code>+</code> <code>theorem isEmpty_fun : IsEmpty (α → β) ↔ Nonempty α ∧ IsEmpty β := by simp</code></li>\n<li><code>-</code> <code>theorem ite_eq_false_distrib (c : Prop) [Decidable c] (a b : Bool) :</code></li>\n<li><code>-</code> <code>theorem ite_eq_true_distrib (c : Prop) [Decidable c] (a b : Bool) :</code></li>\n<li><code>+</code> <code>theorem length_split_fst_le (l : List α) : length (split l).1 ≤ length l :=</code></li>\n<li><code>+</code> <code>theorem length_split_snd_le (l : List α) : length (split l).2 ≤ length l :=</code></li>\n</ul>",
        "id": 436172396,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714440766
    },
    {
        "content": "<ul>\n<li><code>+</code> <code>theorem measure_fundamentalFrontier (hs : IsFundamentalDomain G s μ) :</code></li>\n<li><code>-</code> <code>theorem measure_fundamentalFrontier : μ (fundamentalFrontier G s) = 0 := by</code></li>\n<li><code>-</code> <code>theorem Ne.def {α : Sort u} (a b : α) : (a ≠ b) = ¬ (a = b) := rfl</code></li>\n<li><code>-</code> <code>theorem not_eq_not : ∀ {a b : Bool}, ¬a = !b ↔ a = b := by decide</code></li>\n<li><code>+</code> <code>theorem not_implies_eq : (¬ (p → q)) = (p ∧ ¬ q) := propext Classical.not_imp</code></li>\n<li><code>-</code> <code>theorem not_implies_eq : (¬ (p → q)) = (p ∧ ¬ q) := propext not_imp</code></li>\n<li><code>-</code> <code>theorem not_not_eq : ∀ {a b : Bool}, ¬(!a) = b ↔ a = b := by decide</code></li>\n<li><code>+</code> <code>theorem nthLe_congr {l : List α} {n p : ℕ} {h : n &lt; length l} (hnp : n = p) :</code></li>\n<li><code>-</code> <code>theorem ofPowerSeries_X_pow {R} [CommSemiring R] (n : ℕ) :</code></li>\n<li><code>+</code> <code>theorem ofPowerSeries_X_pow {R} [Semiring R] (n : ℕ) :</code></li>\n<li><code>+</code> <code>theorem one_def : (1 : 𝒜 ᵍ⊗[R] ℬ) = 1 ᵍ⊗ₜ 1 := rfl</code></li>\n<li><code>+</code> <code>theorem single_pow (a : Γ) (n : ℕ) (r : R) : single a r ^ n = single (n • a) (r ^ n) := by</code></li>\n<li><code>-</code> <code>theorem succ_one : succ (1 : Ordinal) = 2 := by</code></li>\n<li><code>+</code> <code>theorem succ_one : succ (1 : Ordinal) = 2 := by congr; simp only [Nat.unaryCast, zero_add]</code></li>\n<li><code>-</code> <code>theorem toChar_aux (n : Nat) (h : n &lt; size) : Nat.isValidChar (UInt32.ofNat n).1 := by</code></li>\n</ul>\n<hr>\n<ul>\n<li>53  added declarations</li>\n<li>89  removed declarations</li>\n<li>0  paired declarations</li>\n</ul>\n<hr>",
        "id": 436172413,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714440776
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8887878384\">failed</a>.</p>",
        "id": 436172466,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714440807
    },
    {
        "content": "<p>That is both too much and too little to be helpful. :-)</p>",
        "id": 436172656,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714440918
    },
    {
        "content": "<p>Can it list differences by file?</p>",
        "id": 436172672,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714440930
    },
    {
        "content": "<p>And show namespaces?</p>",
        "id": 436172687,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714440942
    },
    {
        "content": "<p>I can easily make it print file names, but the tool was designed to help with moves, so it does not do it out-of-the-box.</p>",
        "id": 436172763,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714440974
    },
    {
        "content": "<p>Namespaces is trickier, since one of the features is that it runs with possibly corrupt files, so does not use <code>olean</code>s.</p>",
        "id": 436172819,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714441019
    },
    {
        "content": "<p>I can try to implement a text-based namespace, but it would be buggy (though likely usually helpful).</p>",
        "id": 436172875,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714441062
    },
    {
        "content": "<p>Again, that is not currently implemented, though.</p>",
        "id": 436172893,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714441072
    },
    {
        "content": "<p>In any case, it is quite late now and I am going to bed, so either one of these features will have to wait!  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 436173067,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714441169
    },
    {
        "content": "<p>Okay, namespaces are not essential if filenames are available.</p>",
        "id": 436173623,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714441505
    },
    {
        "content": "<p>One important question here is if we need to write comments along with the <code>set_option backward.isDefEq.lazyWhnfCore false in</code> options, or if they are self-explanatory enough??</p>",
        "id": 436173966,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714441744
    },
    {
        "content": "<p>Maybe a tracking issue, one for each such flag, is best.</p>",
        "id": 436173992,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714441760
    },
    {
        "content": "<p>Currently all the <code>canonInstance</code> flags have a paragraph, but the other two don't.</p>",
        "id": 436174006,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714441773
    },
    {
        "content": "<p>Here is a first attempt at putting filenames: it is not polished, but might contain all the right information</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>First_batch</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<ul>\n<li><code>-a/test/Lint</code>                                             <code>def add.add := True</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def backwardWeight := 1</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def buildDiscrTree : IO (DiscrTreeCache (Name × Bool × Nat)) :=</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def cachePath : IO FilePath :=</code></li>\n<li><code>+b/Mathlib/Tactic/RewriteSearch</code>                          <code>def compute_rfl? (n : SearchNode) : MetaM SearchNode := do</code></li>\n<li><code>-a/Mathlib/Tactic/RewriteSearch</code>                          <code>def compute_rfl? (n : SearchNode) : MetaM SearchNode := withMCtx n.mctx do</code></li>\n<li><code>+b/Mathlib/Data/Vector3</code>                                  <code>def cons (a : α) (v : Vector3 α n) : Vector3 α (n + 1) := fun i =&gt; by</code></li>\n<li><code>-a/Mathlib/Data/Vector3</code>                                  <code>def cons (a : α) (v : Vector3 α n) : Vector3 α (succ n) := fun i =&gt; by</code></li>\n<li><code>+b/Mathlib/Data/Vector3</code>                                  <code>def consElim {C : Vector3 α (n + 1) → Sort u} (H : ∀ (a : α) (t : Vector3 α n), C (a :: t))</code></li>\n<li><code>-a/Mathlib/Data/Vector3</code>                                  <code>def consElim {C : Vector3 α (succ n) → Sort u} (H : ∀ (a : α) (t : Vector3 α n), C (a :: t))</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def discrTreeConfig : WhnfCoreConfig := {}</code></li>\n<li><code>-a/Mathlib/Lean/Expr/Traverse</code>                            <code>def foldlM {α : Type} {m} [Monad m] (f : α → Expr → m α) (x : α) (e : Expr) : m α :=</code></li>\n<li><code>-a/test/Lint</code>                                             <code>def Foo.foo := True</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def forwardWeight := 2</code></li>\n<li><code>+b/Mathlib/Data/Vector3</code>                                  <code>def head (v : Vector3 α (n + 1)) : α :=</code></li>\n<li><code>-a/Mathlib/Data/Vector3</code>                                  <code>def head (v : Vector3 α (succ n)) : α :=</code></li>\n<li><code>-a/Mathlib/Lean/Meta</code>                                     <code>def iffOfEq (mvarId : MVarId) : MetaM MVarId := do</code></li>\n<li><code>+b/Mathlib/Data/Vector3</code>                                  <code>def insert (a : α) (v : Vector3 α n) (i : Fin2 (n + 1)) : Vector3 α (n + 1) := fun j =&gt;</code></li>\n<li><code>-a/Mathlib/Data/Vector3</code>                                  <code>def insert (a : α) (v : Vector3 α n) (i : Fin2 (succ n)) : Vector3 α (succ n) := fun j =&gt;</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def localHypotheses (except : List FVarId := []) : MetaM (Array (Expr × Bool × Nat)) := do</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def processLemma (name : Name) (constInfo : ConstantInfo) :</code></li>\n<li><code>-a/Mathlib/Lean/Meta</code>                                     <code>def proofIrrelHeq (mvarId : MVarId) : MetaM Bool :=</code></li>\n<li><code>-a/Mathlib/Lean/Meta</code>                                     <code>def propext (mvarId : MVarId) : MetaM MVarId := do</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def RewriteResult.by? (r : RewriteResult) : Option Expr :=</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def RewriteResult.computeRfl (r : RewriteResult) : MetaM RewriteResult := do</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def RewriteResult.ppResult (r : RewriteResult) : MetaM String :=</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def RewriteResult.prepare_ppResult (r : RewriteResult) : MetaM RewriteResult := do</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def rewritesCore (hyps : Array (Expr × Bool × Nat))</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def rewritesDedup (hyps : Array (Expr × Bool × Nat))</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def rewrites (hyps : Array (Expr × Bool × Nat))</code></li>\n<li><code>-a/Mathlib/Tactic/Relation/Rfl</code>                           <code>def _root_.Lean.MVarId.liftReflToEq (mvarId : MVarId) : MetaM MVarId := do</code></li>\n<li><code>-a/Cache/Hashing</code>                                         <code>def roots : Array FilePath :=</code></li>\n<li><code>+b/Cache/Hashing</code>                                         <code>def roots : Array FilePath := #[\"Mathlib.lean\"]</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>def solveByElim (goals : List MVarId) (depth : Nat := 6) : MetaM PUnit := do</code></li>\n<li><code>-a/Mathlib/Lean/Meta</code>                                     <code>def subsingletonElim (mvarId : MVarId) : MetaM Bool :=</code></li>\n<li><code>+b/Mathlib/Data/Vector3</code>                                  <code>def tail (v : Vector3 α (n + 1)) : Vector3 α n := fun i =&gt; v (fs i)</code></li>\n<li><code>-a/Mathlib/Data/Vector3</code>                                  <code>def tail (v : Vector3 α (succ n)) : Vector3 α n := fun i =&gt; v (fs i)</code></li>\n<li><code>+b/test/rewrites</code>                                         <code>def testConst : Nat := 4</code></li>\n<li><code>+b/Mathlib/Data/UInt</code>                                     <code>def toChar (n : UInt8) : Char := ⟨n.toUInt32, .inl (n.1.2.trans (by decide))⟩</code></li>\n<li><code>-a/Mathlib/Data/UInt</code>                                     <code>def toChar (n : UInt8) : Char := ⟨n.toUInt32, toChar_aux n.1 n.1.2⟩</code></li>\n<li><code>-a/Mathlib/Lean/Expr/Traverse</code>                            <code>def traverseChildren [Applicative M] (f : Expr → M Expr) : Expr → M Expr</code></li>\n<li><code>-a/Mathlib/Lean/PrettyPrinter/Delaborator</code>                <code>def withBindingBody' (n : Name) (x : Expr → m α) : m α := do</code></li>\n<li><code>-a/test/rewrites</code>                                         <code>def zero : Nat := 0</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>inductive SideConditions</code></li>\n<li><code>-a/Mathlib/Topology/Algebra/GroupCompletion</code>              <code>instance : AddCommGroup (Completion α) :=</code></li>\n<li><code>+b/Mathlib/Algebra/Module/LinearMap/Basic</code>                <code>instance : CoeTC (M →+[R] M₃) (M →ₗ[R] M₃) :=</code></li>\n<li><code>-a/Mathlib/Topology/Instances/Real</code>                       <code>instance : CompleteSpace ℝ := by</code></li>\n<li><code>-a/Mathlib/Data/Rat/Denumerable</code>                          <code>instance : Denumerable ℚ := by</code></li>\n<li><code>-a/Mathlib/Algebra/Polynomial/FieldDivision</code>              <code>instance : EuclideanDomain R[X] :=</code></li>\n<li><code>-a/Mathlib/RingTheory/Ideal/Quotient</code>                     <code>instance : HasQuotient R (Ideal R) :=</code></li>\n<li><code>+b/Mathlib/Topology/Algebra/GroupCompletion</code>              <code>instance instAddCommGroup : AddCommGroup (Completion α) :=</code></li>\n<li><code>-a/Mathlib/Algebra/Module/LinearMap/Basic</code>                <code>instance instCoeTCLinearMap : CoeTC (M →+[R] M₃) (M →ₗ[R] M₃) :=</code></li>\n<li><code>+b/Mathlib/Order/Booleanisation</code>                          <code>instance instDecidableEq [DecidableEq α] : DecidableEq (Booleanisation α) :=</code></li>\n<li><code>-a/Mathlib/Order/Booleanisation</code>                          <code>instance instDecidableEq [DecidableEq α] : DecidableEq (Booleanisation α) := Sum.instDecidableEqSum</code></li>\n<li><code>+b/Mathlib/Data/Rat/Denumerable</code>                          <code>instance instDenumerable : Denumerable ℚ := by</code></li>\n<li><code>+b/Mathlib/Algebra/Polynomial/FieldDivision</code>              <code>instance instEuclideanDomain : EuclideanDomain R[X] :=</code></li>\n<li><code>+b/Mathlib/RingTheory/Ideal/Quotient</code>                     <code>instance instHasQuotient : HasQuotient R (Ideal R) :=</code></li>\n<li><code>+b/Mathlib/GroupTheory/GroupAction/Sigma</code>                 <code>instance instIsScalarTowerOfSMul [SMul M N] [∀ i, IsScalarTower M N (α i)] :</code></li>\n<li><code>+b/Mathlib/GroupTheory/GroupAction/Option</code>                <code>instance instIsScalarTowerOfSMul [SMul M N] [IsScalarTower M N α] : IsScalarTower M N (Option α) :=</code></li>\n<li><code>+b/Mathlib/Algebra/PUnitInstances</code>                        <code>instance instIsScalarTowerOfSMul [SMul R S] : IsScalarTower R S PUnit :=</code></li>\n<li><code>+b/test/Simps</code>                                            <code>instance instMulProd {M N} [Mul M] [Mul N] : Mul (M × N) := ⟨fun p q ↦ ⟨p.1 * q.1, p.2 * q.2⟩⟩</code></li>\n<li><code>-a/test/Simps</code>                                            <code>instance {M N} [Mul M] [Mul N] : Mul (M × N) := ⟨fun p q ↦ ⟨p.1 * q.1, p.2 * q.2⟩⟩</code></li>\n<li><code>+b/Mathlib/Topology/Instances/Real</code>                       <code>instance Real.instCompleteSpace : CompleteSpace ℝ := by</code></li>\n<li><code>+b/Mathlib/CategoryTheory/Countable</code>                      <code>instance : SmallCategory (HomAsType α) := inferInstanceAs &lt;| SmallCategory (ShrinkHoms _)</code></li>\n<li><code>-a/Mathlib/CategoryTheory/Countable</code>                      <code>instance : SmallCategory (HomAsType α) := ShrinkHoms.instCategoryShrinkHoms.{0} _</code></li>\n<li><code>-a/Mathlib/GroupTheory/GroupAction/Sigma</code>                 <code>instance [SMul M N] [∀ i, IsScalarTower M N (α i)] : IsScalarTower M N (Σi, α i) :=</code></li>\n<li><code>-a/Mathlib/GroupTheory/GroupAction/Option</code>                <code>instance [SMul M N] [IsScalarTower M N α] : IsScalarTower M N (Option α) :=</code></li>\n<li><code>-a/Mathlib/Algebra/PUnitInstances</code>                        <code>instance [SMul R S] : IsScalarTower R S PUnit :=</code></li>\n<li><code>+b/Mathlib/Topology/Algebra/Ring/Basic</code>                   <code>instance {β : Type*} {C : β → Type*} [∀ b, TopologicalSpace (C b)]</code></li>\n<li><code>+b/Mathlib/NumberTheory/Harmonic/Defs</code>                    <code>lemma harmonic_eq_sum_Icc {n : ℕ} :  harmonic n = ∑ i in Finset.Icc 1 n, (↑i)⁻¹ := by</code></li>\n<li><code>-a/Mathlib/NumberTheory/Harmonic/Defs</code>                    <code>lemma harmonic_eq_sum_Icc {n : ℕ} : harmonic n = ∑ i in Finset.Icc 1 n, (↑i)⁻¹ := by</code></li>\n<li><code>+b/Mathlib/Data/Nat/Defs</code>                                 <code>lemma one_lt_succ_succ (n : ℕ) : 1 &lt; n.succ.succ := succ_lt_succ &lt;| succ_pos n</code></li>\n<li><code>-a/Mathlib/Data/Nat/Defs</code>                                 <code>lemma pred_eq_sub_one (n : ℕ) : pred n = n - 1 := rfl</code></li>\n<li><code>-a/test/rewrites</code>                                         <code>lemma prime_of_prime (n : ℕ) : Prime n ↔ Nat.Prime n := by</code></li>\n<li><code>+b/Mathlib/Data/Nat/Defs</code>                                 <code>lemma rec_add_one {C : ℕ → Sort*} (h0 : C 0) (h : ∀ n, C n → C (n + 1)) (n : ℕ) :</code></li>\n<li><code>+b/Mathlib/Analysis/Convex/Basic</code>                         <code>lemma stdSimplex_fin_two :</code></li>\n<li><code>-a/Mathlib/Analysis/Convex/Basic</code>                         <code>lemma stdSimplex_fin_two : stdSimplex 𝕜 (Fin 2) = [Pi.single 0 1 -[𝕜] Pi.single 1 1] := by</code></li>\n<li><code>-a/Mathlib/Tactic/Rewrites</code>                               <code>structure RewriteResult where</code></li>\n<li><code>+b/Mathlib/Init/Data/Nat/Basic</code>                           <code>theorem add_one_pos (n : ℕ) : 0 &lt; n + 1 := succ_pos n</code></li>\n</ul>\n</div></div>",
        "id": 436176258,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714443042
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Second_batch</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<ul>\n<li><code>+b/Mathlib/Logic/Basic</code>                                   <code>theorem and_or_imp {a b c : Prop} : a ∧ b ∨ (a → c) ↔ a → b ∨ c := Decidable.and_or_imp</code></li>\n<li><code>+b/Mathlib/Data/Fin/Tuple/NatAntidiagonal</code>                <code>theorem antidiagonalTuple_zero_succ (n : ℕ) : antidiagonalTuple 0 (n + 1) = [] :=</code></li>\n<li><code>-a/Mathlib/Data/Fin/Tuple/NatAntidiagonal</code>                <code>theorem antidiagonalTuple_zero_succ (n : ℕ) : antidiagonalTuple 0 n.succ = [] :=</code></li>\n<li><code>+b/Mathlib/Data/Vector3</code>                                  <code>theorem append_insert (a : α) (t : Vector3 α m) (v : Vector3 α n) (i : Fin2 (n + 1))</code></li>\n<li><code>-a/Mathlib/Data/Vector3</code>                                  <code>theorem append_insert (a : α) (t : Vector3 α m) (v : Vector3 α n) (i : Fin2 (succ n))</code></li>\n<li><code>+b/Mathlib/Data/List/Intervals</code>                           <code>theorem bagInter_consecutive (n m l : Nat) :</code></li>\n<li><code>-a/Mathlib/Data/List/Intervals</code>                           <code>theorem bagInter_consecutive (n m l : Nat) :  @List.bagInter ℕ instBEq (Ico n m) (Ico m l) = [] :=</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem beq_comm {α} [BEq α] [LawfulBEq α] {a b : α} : (a == b) = (b == a) :=</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem beq_eq_decide_eq {α} [BEq α] [LawfulBEq α] [DecidableEq α]</code></li>\n<li><code>-a/Mathlib/Data/Nat/Cast/Defs</code>                            <code>theorem cast_add [AddMonoidWithOne R] (m n : ℕ) : ((m + n : ℕ) : R) = m + n := by</code></li>\n<li><code>+b/Mathlib/Algebra/CharZero/Defs</code>                         <code>theorem cast_add_one_ne_zero (n : ℕ) : (n + 1 : R) ≠ 0 :=</code></li>\n<li><code>-a/Mathlib/Algebra/CharZero/Defs</code>                         <code>theorem cast_add_one_ne_zero (n : ℕ) : (n + 1 : R) ≠ 0 := by</code></li>\n<li><code>+b/Mathlib/Data/Nat/Cast/Defs</code>                            <code>theorem cast_add {R : Type*} [AddMonoidWithOne R] (m n : ℕ) : ((m + n : ℕ) : R) = m + n := by</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem coe_iff_coe : ∀ {a b : Bool}, (a ↔ b) ↔ a = b := by decide</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem cond_decide {α} (p : Prop) [Decidable p] (t e : α) :</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem cond_eq_ite {α} (b : Bool) (t e : α) : cond b t e = if b then t else e := by</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem cond_not {α} (b : Bool) (t e : α) : cond (!b) t e = cond b e t := by cases b &lt;;&gt; rfl</code></li>\n<li><code>-a/Mathlib/Init/Data/Bool/Lemmas</code>                         <code>theorem cond_self.{u} {α : Type u} (b : Bool) (a : α) : cond b a a = a := by cases b &lt;;&gt; rfl</code></li>\n<li><code>+b/Mathlib/Data/Vector3</code>                                  <code>theorem cons_head_tail (v : Vector3 α (n + 1)) : (head v :: tail v) = v :=</code></li>\n<li><code>-a/Mathlib/Data/Vector3</code>                                  <code>theorem cons_head_tail (v : Vector3 α (succ n)) : (head v :: tail v) = v :=</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem decide_and (p q : Prop) [Decidable p] [Decidable q] : decide (p ∧ q) = (p &amp;&amp; q) := by</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem decide_coe (b : Bool) {h} : @decide b h = b := by</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem decide_or (p q : Prop) [Decidable p] [Decidable q] : decide (p ∨ q) = (p || q) := by</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem default_bool : default = false :=</code></li>\n<li><code>-a/Mathlib/Data/Nat/Dist</code>                                 <code>theorem dist.def (n m : ℕ) : dist n m = n - m + (m - n) :=</code></li>\n<li><code>+b/Mathlib/RingTheory/AdicCompletion/Basic</code>               <code>theorem eval_of (n : ℕ) (x : M) : eval I M n (of I M x) = mkQ (I ^ n • (⊤ : Submodule R M)) x :=</code></li>\n<li><code>-a/Mathlib/RingTheory/AdicCompletion/Basic</code>               <code>theorem eval_of (n : ℕ) (x : M) : eval I M n (of I M x) = mkQ _ x :=</code></li>\n<li><code>+b/Mathlib/Data/Fintype/BigOperators</code>                     <code>theorem Fintype.card_exp_univ_card_eq [Fintype α] [Fintype β] :</code></li>\n<li><code>+b/test/RewriteSearch/Basic</code>                              <code>theorem foo (n : Nat) : makeSingleton n = [0] := by</code></li>\n<li><code>-a/Mathlib/Data/List/GetD</code>                                <code>theorem getD_cons_succ : getD (x :: xs) (n + 1) d = getD xs n d :=</code></li>\n<li><code>-a/Mathlib/Data/List/GetD</code>                                <code>theorem getD_cons_zero : getD (x :: xs) 0 d = x :=</code></li>\n<li><code>-a/Mathlib/Data/List/GetD</code>                                <code>theorem getD_nil : getD [] n d = d :=</code></li>\n<li><code>+b/Mathlib/CategoryTheory/Category/Preorder</code>              <code>theorem homOfLE_refl {x : X} (h : x ≤ x) : h.hom = 𝟙 x :=</code></li>\n<li><code>-a/Mathlib/CategoryTheory/Category/Preorder</code>              <code>theorem homOfLE_refl {x : X} : (le_refl x).hom = 𝟙 x :=</code></li>\n<li><code>-a/Mathlib/Logic/Basic</code>                                   <code>theorem imp_and_neg_imp_iff (p q : Prop) : (p → q) ∧ (¬p → q) ↔ q := by</code></li>\n<li><code>+b/Mathlib/Logic/Basic</code>                                   <code>theorem imp_and_neg_imp_iff (p q : Prop) : (p → q) ∧ (¬p → q) ↔ q := by simp</code></li>\n<li><code>+b/Mathlib/Logic/Basic</code>                                   <code>theorem imp_iff_right_iff {a b : Prop} : (a → b ↔ b) ↔ a ∨ b := Decidable.imp_iff_right_iff</code></li>\n<li><code>+b/Mathlib/Combinatorics/Enumerative/Composition</code>         <code>theorem index_exists {j : ℕ} (h : j &lt; n) : ∃ i : ℕ, j &lt; c.sizeUpTo (i + 1) ∧ i &lt; c.length := by</code></li>\n<li><code>-a/Mathlib/Combinatorics/Enumerative/Composition</code>         <code>theorem index_exists {j : ℕ} (h : j &lt; n) : ∃ i : ℕ, j &lt; c.sizeUpTo i.succ ∧ i &lt; c.length := by</code></li>\n<li><code>+b/Mathlib/Data/Vector3</code>                                  <code>theorem insert_fs (a : α) (b : α) (v : Vector3 α n) (i : Fin2 (n + 1)) :</code></li>\n<li><code>-a/Mathlib/Data/Vector3</code>                                  <code>theorem insert_fs (a : α) (b : α) (v : Vector3 α n) (i : Fin2 (succ n)) :</code></li>\n<li><code>+b/Mathlib/Logic/IsEmpty</code>                                 <code>theorem isEmpty_exists_isempty_fun : (∃ (_ : α), IsEmpty β) ↔ Nonempty α ∧ IsEmpty β := by</code></li>\n<li><code>-a/Mathlib/Logic/IsEmpty</code>                                 <code>theorem isEmpty_fun : IsEmpty (α → β) ↔ Nonempty α ∧ IsEmpty β := by</code></li>\n<li><code>+b/Mathlib/Logic/IsEmpty</code>                                 <code>theorem isEmpty_fun : IsEmpty (α → β) ↔ Nonempty α ∧ IsEmpty β := by simp</code></li>\n<li><code>-a/Mathlib/Init/Data/Bool/Lemmas</code>                         <code>theorem ite_eq_false_distrib (c : Prop) [Decidable c] (a b : Bool) :</code></li>\n<li><code>-a/Mathlib/Init/Data/Bool/Lemmas</code>                         <code>theorem ite_eq_true_distrib (c : Prop) [Decidable c] (a b : Bool) :</code></li>\n<li><code>+b/Mathlib/Data/List/Sort</code>                                <code>theorem length_split_fst_le (l : List α) : length (split l).1 ≤ length l :=</code></li>\n<li><code>+b/Mathlib/Data/List/Sort</code>                                <code>theorem length_split_snd_le (l : List α) : length (split l).2 ≤ length l :=</code></li>\n<li><code>+b/Mathlib/MeasureTheory/Group/FundamentalDomain</code>         <code>theorem measure_fundamentalFrontier (hs : IsFundamentalDomain G s μ) :</code></li>\n<li><code>-a/Mathlib/MeasureTheory/Group/FundamentalDomain</code>         <code>theorem measure_fundamentalFrontier : μ (fundamentalFrontier G s) = 0 := by</code></li>\n<li><code>-a/Mathlib/Init/Logic</code>                                    <code>theorem Ne.def {α : Sort u} (a b : α) : (a ≠ b) = ¬ (a = b) := rfl</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem not_eq_not : ∀ {a b : Bool}, ¬a = !b ↔ a = b := by decide</code></li>\n<li><code>+b/Mathlib/Tactic/PushNeg</code>                                <code>theorem not_implies_eq : (¬ (p → q)) = (p ∧ ¬ q) := propext Classical.not_imp</code></li>\n<li><code>-a/Mathlib/Tactic/PushNeg</code>                                <code>theorem not_implies_eq : (¬ (p → q)) = (p ∧ ¬ q) := propext not_imp</code></li>\n<li><code>-a/Mathlib/Data/Bool/Basic</code>                               <code>theorem not_not_eq : ∀ {a b : Bool}, ¬(!a) = b ↔ a = b := by decide</code></li>\n<li><code>+b/Mathlib/Data/List/Basic</code>                               <code>theorem nthLe_congr {l : List α} {n p : ℕ} {h : n &lt; length l} (hnp : n = p) :</code></li>\n<li><code>-a/Mathlib/RingTheory/HahnSeries/PowerSeries</code>             <code>theorem ofPowerSeries_X_pow {R} [CommSemiring R] (n : ℕ) :</code></li>\n<li><code>+b/Mathlib/RingTheory/HahnSeries/PowerSeries</code>             <code>theorem ofPowerSeries_X_pow {R} [Semiring R] (n : ℕ) :</code></li>\n<li><code>+b/Mathlib/LinearAlgebra/TensorProduct/Graded/Internal</code>   <code>theorem one_def : (1 : 𝒜 ᵍ⊗[R] ℬ) = 1 ᵍ⊗ₜ 1 := rfl</code></li>\n<li><code>+b/Mathlib/RingTheory/HahnSeries/Multiplication</code>          <code>theorem single_pow (a : Γ) (n : ℕ) (r : R) : single a r ^ n = single (n • a) (r ^ n) := by</code></li>\n<li><code>-a/Mathlib/SetTheory/Ordinal/Basic</code>                       <code>theorem succ_one : succ (1 : Ordinal) = 2 := by</code></li>\n<li><code>+b/Mathlib/SetTheory/Ordinal/Basic</code>                       <code>theorem succ_one : succ (1 : Ordinal) = 2 := by congr; simp only [Nat.unaryCast, zero_add]</code></li>\n<li><code>-a/Mathlib/Data/UInt</code>                                     <code>theorem toChar_aux (n : Nat) (h : n &lt; size) : Nat.isValidChar (UInt32.ofNat n).1 := by</code></li>\n</ul>\n</div></div>",
        "id": 436176277,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714443054
    },
    {
        "content": "<p>(now I am really going to bed!)</p>",
        "id": 436176346,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714443100
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8888271840\">failed</a>.</p>",
        "id": 436180095,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714445074
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8888519252\">failed</a>.</p>",
        "id": 436180361,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714445234
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8890092028\">failed</a>.</p>",
        "id": 436205085,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714459333
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/436166968\">said</a>:</p>\n<blockquote>\n<p>I would like to get feedback on merging these backwards compatibility flags into <code>master</code>. I think it is the right approach, but some +1s would be great.</p>\n</blockquote>\n<p>I think it would be very good to get some of the new things to be usable with Mathlib soon (in particular, the fix for <code>apply?</code> and <a href=\"https://github.com/leanprover-community/lena4/pull/4003\">lena4#4003</a>), so I am very much in favor of this.</p>\n<p>The need for the backward compatibility flag on instance synthesis probably points to some problems with the design of our type classes in some areas, so this may actually be helpful in getting to the bottom of these problems.</p>",
        "id": 436226814,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714468015
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8892917767\">failed</a>.</p>",
        "id": 436245249,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714475045
    },
    {
        "content": "<p>Woah, lean4checker failure.</p>",
        "id": 436248542,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714476166
    },
    {
        "content": "<p>Oh, <code>lake</code> has changed where it pipes its output. <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"n\">command</span> <span class=\"bp\">'</span><span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">lean4checker</span> <span class=\"n\">Lean4CheckerTests.AddFalse'</span> <span class=\"n\">did</span> <span class=\"n\">not</span> <span class=\"n\">produce</span> <span class=\"n\">the</span> <span class=\"n\">expected</span> <span class=\"n\">error.</span>\n<span class=\"n\">Expected</span><span class=\"o\">:</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">kernel</span><span class=\"o\">)</span> <span class=\"n\">declaration</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">false'</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">False</span>\n<span class=\"n\">Got</span><span class=\"o\">:</span>\n<span class=\"o\">[</span><span class=\"bp\">?/?</span><span class=\"o\">]</span> <span class=\"n\">Computing</span> <span class=\"n\">build</span> <span class=\"n\">jobs</span>\n<span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Lean4Checker.Lean</span>\n<span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Main</span>\n<span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Main</span>\n<span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"bp\">/</span><span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Lean4Checker.Lean</span>\n<span class=\"o\">[</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">lean4checker</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">kernel</span><span class=\"o\">)</span> <span class=\"n\">declaration</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">false'</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">False</span>\n</code></pre></div>",
        "id": 436248699,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714476238
    },
    {
        "content": "<p>Not saying this needs to be changed if it is intentional.</p>",
        "id": 436249265,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714476462
    },
    {
        "content": "<p>Oh, weird, and running it locally produces:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">%</span> <span class=\"bp\">./</span><span class=\"n\">test.sh</span>\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"n\">command</span> <span class=\"bp\">'</span><span class=\"n\">lake</span> <span class=\"bp\">-</span><span class=\"n\">q</span> <span class=\"n\">exe</span> <span class=\"n\">lean4checker</span> <span class=\"n\">Lean4CheckerTests.AddFalse'</span> <span class=\"n\">did</span> <span class=\"n\">not</span> <span class=\"n\">produce</span> <span class=\"n\">the</span> <span class=\"n\">expected</span> <span class=\"n\">error.</span>\n<span class=\"n\">Expected</span><span class=\"o\">:</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">kernel</span><span class=\"o\">)</span> <span class=\"n\">declaration</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">false'</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">False</span>\n<span class=\"n\">Got</span><span class=\"o\">:</span>\n\n\n\n\n\n\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">kernel</span><span class=\"o\">)</span> <span class=\"n\">declaration</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">false'</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Prop</span>\n<span class=\"n\">but</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n</code></pre></div>",
        "id": 436249454,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714476518
    },
    {
        "content": "<p>That is looking like something to fix.</p>",
        "id": 436249546,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714476552
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> I managed to minimize the timeout in vector bundle to this almost-mathlib free mwe:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Logic.Basic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">MyExists</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">Exists</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">MyExists</span> <span class=\"n\">P</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">.</span><span class=\"n\">rfl</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">foo</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>This example gets exponentially slow depending on the number of hypotheses <code>h</code> you add. I think it has to do a congr-lemma in Mathlib.</p>",
        "id": 436257970,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714479269
    },
    {
        "content": "<p>Fascinating, thank you!</p>",
        "id": 436258127,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714479326
    },
    {
        "content": "<p>It ... doesn't look much like a vector bundle anymore.</p>",
        "id": 436258200,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714479360
    },
    {
        "content": "<p>What does the iterated existential correspond to originally?</p>",
        "id": 436258287,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714479379
    },
    {
        "content": "<p>I can confirm that on Mathlib master this is linear in the number of hypotheses <code>h</code>.<br>\nIt were iterated unions, and all the time was spent on <code>simp only [mem_iUnion]</code></p>",
        "id": 436258363,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714479415
    },
    {
        "content": "<p>Awesome, okay, is it okay if I keep minimizing and get it off Mathlib entirely?</p>",
        "id": 436258518,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714479467
    },
    {
        "content": "<p>Yes, please do!</p>",
        "id": 436258542,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714479476
    },
    {
        "content": "<p>The declaration <code>smoothFiberwiseLinear</code> was already slow on Mathlib master, with a large amount of the time spent on the <code>simp only</code>'s. So maybe there is more speedup to be gained there...</p>",
        "id": 436258759,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714479544
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">Mathlib.Logic.Basic</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">congr</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">exists_prop_congr</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">p'</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">q</span> <span class=\"n\">q'</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">q</span> <span class=\"n\">h</span> <span class=\"bp\">↔</span> <span class=\"n\">q'</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">↔</span> <span class=\"n\">p'</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Exists</span> <span class=\"n\">q</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p'</span><span class=\"o\">,</span> <span class=\"n\">q'</span> <span class=\"o\">(</span><span class=\"n\">hp.2</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">congr</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">exists_prop_congr'</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">p'</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">q</span> <span class=\"n\">q'</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">q</span> <span class=\"n\">h</span> <span class=\"bp\">↔</span> <span class=\"n\">q'</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">↔</span> <span class=\"n\">p'</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Exists</span> <span class=\"n\">q</span> <span class=\"bp\">=</span> <span class=\"bp\">∃</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p'</span><span class=\"o\">,</span> <span class=\"n\">q'</span> <span class=\"o\">(</span><span class=\"n\">hp.2</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">Mathlib.Logic.Basic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">MyExists</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">Exists</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">MyExists</span> <span class=\"n\">P</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">.</span><span class=\"n\">rfl</span>\n\n<span class=\"c1\">-- This takes under 1000 on `v4.7.0`, and is linear in the depth of the existential.</span>\n<span class=\"c1\">-- On `master` it is exponential!</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">10000</span> <span class=\"k\">in</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">foo</span><span class=\"o\">]</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>is Mathlib free. It requires <em>both</em> of the congr lemmas to cause the bad behaviour.</p>",
        "id": 436261240,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714480349
    },
    {
        "content": "<p>Two things to do, I guess: find out what in lean is changing this to exponential behaviour, and see if we can get rid of one or both of these lemmas in Mathlib!</p>",
        "id": 436261344,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714480381
    },
    {
        "content": "<p>With one <code>congr</code> lemma I also get exponential behavior:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[</span><span class=\"n\">congr</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">exists_prop_congr</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">p'</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">q</span> <span class=\"n\">q'</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">q</span> <span class=\"n\">h</span> <span class=\"bp\">↔</span> <span class=\"n\">q'</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">↔</span> <span class=\"n\">p'</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Exists</span> <span class=\"n\">q</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p'</span><span class=\"o\">,</span> <span class=\"n\">q'</span> <span class=\"o\">(</span><span class=\"n\">hp.2</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span>\n</code></pre></div>",
        "id": 436261579,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714480457
    },
    {
        "content": "<p>(I couldn't resist myself from also minimizing it a bit further myself :-) )</p>",
        "id": 436261760,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714480521
    },
    {
        "content": "<p>That seems like it's not a good <code>congr</code> lemma. Every time it's applied, <code>simp</code> will need to deal with the <code>hp.2 h</code> terms that accumulate.</p>",
        "id": 436262279,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1714480686
    },
    {
        "content": "<p>Maybe. We can try to see how much breaks in Mathlib if we only congr on <code>q</code> while leaving <code>p</code> constant. It seems useful to be able to simp both...</p>",
        "id": 436262500,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714480785
    },
    {
        "content": "<p>Half way through mathlib, no breakage so far.</p>",
        "id": 436262580,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714480807
    },
    {
        "content": "<p>I think just removing would be great, if nothing breaks.</p>",
        "id": 436262608,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714480817
    },
    {
        "content": "<p>Does <code>simp</code> actually simplify proofs of propositions? Is that useful?</p>",
        "id": 436262659,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714480838
    },
    {
        "content": "<p>Oh right, <code>hp.2 h</code> is a proof, so it won't touch that.</p>",
        "id": 436262707,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1714480858
    },
    {
        "content": "<p>Yes, eg <code>Acc</code></p>",
        "id": 436262709,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714480859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> I think that the <code>congr</code> lemma that made the vector bundle declaration slow is <code>Set.iUnion_congr_Prop</code>.</p>",
        "id": 436262944,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714480935
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8894891680\">failed</a>.</p>",
        "id": 436264580,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714481475
    },
    {
        "content": "<p>Is this the change to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Meta.Simp.simpArrow#doc\">docs#Lean.Meta.Simp.simpArrow</a> ?</p>",
        "id": 436265535,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714481795
    },
    {
        "content": "<p>Tracing debug crashes my editor</p>",
        "id": 436265576,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714481810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/436166962\">said</a>:</p>\n<blockquote>\n<ul>\n<li>There are currently 19 files that requies a <code>set_option backward.isDefEq.lazyWhnfCore false in</code> to avoid a timeout. (<a href=\"https://github.com/leanprover/lean4/pull/4023\">lean4#4023</a> is a minimization of one of these, and Leo is actively looking at this.) This flag locally reverts the changes to <code>isDefEq</code> from <a href=\"https://github.com/leanprover/lean4/pull/4004\">lean4#4004</a>.</li>\n</ul>\n</blockquote>\n<p>You can make <a href=\"https://github.com/leanprover/lean4/pull/4023\">lean#4023</a> instantaneous by specifying the submodule of the RHS. If not, Lean guesses correctly that it should try <code>Submodule.localized' S p f M'</code> but the metavariable appearing in its place is not assignable (depth?). This remains true even if you specify the ring for the submodule. </p>\n<p>Do we want to make this adaptation for nightly-testing or wait until the something arrives for <a href=\"https://github.com/leanprover/lean4/pull/4023\">lean#4023</a>?</p>",
        "id": 436277535,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714485355
    },
    {
        "content": "<p>Leo also discovered that making any of Membership.mem, Submodule.op, or ... one other, I forget, irreducible makes it instantaneous.</p>\n<p>In v4.8.0-rc1 we will have much more flexibility to control reducibility (e.g. locally, in scopes, in later files), and hopefully we can use that flexibility to make a lot more things irreducible!</p>",
        "id": 436279342,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714485846
    },
    {
        "content": "<p>I'm inclined to postpone fixes for individual lazyWhnfCore options until after this all hits master.</p>",
        "id": 436279408,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714485870
    },
    {
        "content": "<p>(People will enjoy cleaning them up!)</p>",
        "id": 436279437,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714485882
    },
    {
        "content": "<p>Performance on master is also quite bad. It just don't trip any limits</p>",
        "id": 436279557,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714485914
    },
    {
        "content": "<p>I hope that the workflow:</p>\n<ul>\n<li>try making something irreducible</li>\n<li>patch downstream problems by use a local attribute</li>\n<li>(possibly merge in the meantime, and then later)</li>\n<li>work out the missing lemmas to add to avoid needing local semireducibility</li>\n<li>converge on making things irreducible immediately after the initial API setup</li>\n</ul>\n<p>will be quite productive</p>",
        "id": 436279978,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714486038
    },
    {
        "content": "<p>There is no option to trace metavariable creation with their individual contexts right?</p>",
        "id": 436280654,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714486210
    },
    {
        "content": "<p>I get the creeping feeling that mathlib has an anti-pattern and this is an example</p>",
        "id": 436280798,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714486258
    },
    {
        "content": "<p>I was also investigating another maxheartbeats in the manifold library, and I just made <a href=\"https://github.com/leanprover-community/mathlib4/pull/12552\">#12552</a> that makes <code>LocalInvariantProp</code> a structure, which means that many manifold-predicates can only be unfolded a few steps. This improves performance a bit, and flagged some defeq-abuses.</p>",
        "id": 436280867,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1714486278
    },
    {
        "content": "<p>Do I understand correctly that we are going back to the way Lean 3 worked here?</p>",
        "id": 436282577,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1714486766
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8897546518\">failed</a>.</p>",
        "id": 436301634,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714491919
    },
    {
        "content": "<p>I still can't believe this universe issue.</p>",
        "id": 436313574,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714495464
    },
    {
        "content": "<p>But it allows the removal of some <code>backward.isDefEq.lazyWhnfCore</code> flags</p>",
        "id": 436313798,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714495548
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/436166962\">said</a>:</p>\n<blockquote>\n<p>* In <code>Spec</code>, <code>lazyWhnfCore</code> helps, but even with that it requires 800,000 heartbeats (i.e. 4x the limit). </p>\n</blockquote>\n<p>Gone</p>",
        "id": 436314485,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714495764
    },
    {
        "content": "<p>And the universe signature did not change.</p>",
        "id": 436315133,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714495996
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12557\">#12557</a></p>",
        "id": 436321574,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714498009
    },
    {
        "content": "<p>Other than universe issues (which is also a case of this in a way), every regression I've poked at follows the same pattern: </p>\n<ul>\n<li>there is some implicit variable that Lean needs to fill in </li>\n<li>Lean tries to assign the correct thing but the metavariable is unassignable</li>\n<li>Lean soldiers on, with much effort, with the metavariable in place hoping something else will work</li>\n<li>filling in the implicit variable explicitly makes the declaration lightning quick</li>\n</ul>",
        "id": 436325548,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714499594
    },
    {
        "content": "<p>In <a href=\"https://github.com/leanprover/lean4/pull/4023\">lean#4023</a>, making those things irreducible only returns performance to ~master-level which is still orders of magnitude slower than filling the implicit explicitly</p>",
        "id": 436325777,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714499686
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8899867581\">failed</a>.</p>",
        "id": 436332535,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714502392
    },
    {
        "content": "<p>Does it make sense to try to fix the problem in <code>Mathlib.Data.Rat.Defs</code>?</p>",
        "id": 436342626,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714506463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306577\">Matthew Ballard</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/436321574\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12557\">#12557</a></p>\n</blockquote>\n<p>This is ready for bors if anyone's around :)</p>",
        "id": 436354826,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714511527
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8901875705\">failed</a>.</p>",
        "id": 436357554,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714512843
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8902796884\">failed</a>.</p>",
        "id": 436368651,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714518970
    },
    {
        "content": "<p>I've just merged <code>master</code> into <code>bump/v4.8.0</code> again. I'm not super confident I got all the merge conflicts correct. I'm building locally now but will be away from the computer for a bit soon.</p>",
        "id": 436369996,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714519837
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8903601040\">failed</a>.</p>",
        "id": 436376374,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714524471
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12567\">#12567</a> just removes one of the two congr lemmas in the mwe, since it is unused and seems safest to have out of the way. I'll separately report the linear --&gt; exponential change in behaviour.</p>",
        "id": 436386651,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714534127
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8905158852\">failed</a>.</p>",
        "id": 436451090,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714539446
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 436453596,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714541767
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/436261579\">said</a>:</p>\n<blockquote>\n<p>With one <code>congr</code> lemma I also get exponential behavior:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[</span><span class=\"n\">congr</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">exists_prop_congr</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">p'</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">q</span> <span class=\"n\">q'</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">q</span> <span class=\"n\">h</span> <span class=\"bp\">↔</span> <span class=\"n\">q'</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">↔</span> <span class=\"n\">p'</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Exists</span> <span class=\"n\">q</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p'</span><span class=\"o\">,</span> <span class=\"n\">q'</span> <span class=\"o\">(</span><span class=\"n\">hp.2</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>A git bisect reveals this change in behaviour originates in <a href=\"https://github.com/leanprover/lean4/pull/3972\">lean4#3972</a>, which changed how simp caching works.</p>",
        "id": 436454095,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714542233
    },
    {
        "content": "<p>I'm really excited to find out the total speed up compared to 2 weeks ago (say).</p>",
        "id": 436454545,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714542598
    },
    {
        "content": "<p>Yes, we are about to run <code>!bench</code>. I'm pretty terrified it is going to be disappointing. Local builds feel slow to me, but we have zero hard data right now. This is something we need to get much better at going forward. Every <code>nightly-testing-YYYY-MM-DD</code> (note that these are not actually created every day, only on green days) is already sent to the speedcenter, but we have no systematic way of looking at the results.</p>",
        "id": 436454757,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714542747
    },
    {
        "content": "<p>I think the two major things remaining are:</p>\n<ul>\n<li>I'm looking through <a href=\"https://github.com/leanprover-community/mathlib4/pull/12548\">#12548</a> for anything that looks like a bad merge. I'd really appreciate if someone else can as well.</li>\n<li>We need to run <code>!bench</code>...</li>\n</ul>",
        "id": 436454887,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714542864
    },
    {
        "content": "<p>Well, we have</p>\n<ul>\n<li>change to <code>CharP.CharOne</code> instance</li>\n<li>changes to <code>convert</code>/<code>congr!</code>, subsingleton stuff</li>\n<li>explicit universes</li>\n<li>change to TC synthesis algorithm to stop retrying stuff</li>\n</ul>\n<p>Altogether this must have a noticeable impact, I hope!</p>",
        "id": 436454933,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714542928
    },
    {
        "content": "<p>Some of these have happened on <code>master</code> already, so won't be \"credited\" in the <code>!bench</code> results.</p>",
        "id": 436455020,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714542981
    },
    {
        "content": "<p>But yes, we can compare <code>master</code> two weeks ago.</p>",
        "id": 436455042,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714542999
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8906295846\">failed</a>.</p>",
        "id": 436458082,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714545388
    },
    {
        "content": "<p>I will try to make some more time to review the pr today, but might only be tonight</p>",
        "id": 436459062,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714546179
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8907766638\">failed</a>.</p>",
        "id": 436475278,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714556661
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8908057029\">failed</a>.</p>",
        "id": 436477662,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714558023
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8908070360\">failed</a>.</p>",
        "id": 436483146,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714561541
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8909247796\">failed</a>.</p>",
        "id": 436490758,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714566160
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8909247796\">failed</a>.</p>",
        "id": 436490831,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714566210
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8909259607\">failed</a>.</p>",
        "id": 436490921,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714566245
    },
    {
        "content": "<p>git is failing with a 128 on <code>lake build cache</code>. Not sure what could be wrong there!</p>",
        "id": 436490948,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714566267
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8909247796\">failed</a>.</p>",
        "id": 436490971,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714566279
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8911361383\">failed</a>.</p>",
        "id": 436522637,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714577541
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8913369883\">failed</a>.</p>",
        "id": 436552171,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714588382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>, Leo has modified the simp cache in <a href=\"https://github.com/leanprover/lean4/pull/4044\">https://github.com/leanprover/lean4/pull/4044</a> and fixed the exponential behaviour.</p>",
        "id": 436573118,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714597680
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8915253554\">failed</a>.</p>",
        "id": 436576329,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714599119
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8917142565\">failed</a>.</p>",
        "id": 436601547,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714614774
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8917541803\">failed</a>.</p>",
        "id": 436605809,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714617619
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 436609575,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714620339
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8922048660\">failed</a>.</p>",
        "id": 436661663,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714645462
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8926486459\">failed</a>.</p>",
        "id": 436725049,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714665141
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8928742759\">failed</a>.</p>",
        "id": 436753657,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714674779
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8930736894\">failed</a>.</p>",
        "id": 436780180,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714685542
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8932451318\">failed</a>.</p>",
        "id": 436798891,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714697164
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 436814015,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714709086
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8937330442\">failed</a>.</p>",
        "id": 436855710,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714731741
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 436888055,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714744307
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8941342955\">failed</a>.</p>",
        "id": 436916021,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714752822
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 436945932,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714764370
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8949701825\">failed</a>.</p>",
        "id": 437010121,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714817928
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8950534888\">failed</a>.</p>",
        "id": 437018694,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714826392
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8953383850\">failed</a>.</p>",
        "id": 437053849,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714858762
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8954407947\">failed</a>.</p>",
        "id": 437064361,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714870228
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8955404684\">failed</a>.</p>",
        "id": 437072743,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714880037
    },
    {
        "content": "<p>error: ././././Mathlib/Order/Heyting/Hom.lean:191:2-191:11: failed to set reducibility status, <code>BoundedLatticeHomClass.toBiheytingHomClass</code> is not a definition<br>\nuse <code>set_option allowUnsafeReducibility true</code> to override reducibility status validation</p>",
        "id": 437082449,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714888971
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8956324161\">failed</a>.</p>",
        "id": 437085202,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714891540
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8958283467\">failed</a>.</p>",
        "id": 437108950,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714913500
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8959320464\">failed</a>.</p>",
        "id": 437137457,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714923459
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8960325734\">failed</a>.</p>",
        "id": 437153235,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714934031
    },
    {
        "content": "<p>I'm just removing any <code>reducible</code> attributes on theorems, I hope that's right</p>",
        "id": 437155044,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714935652
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8960456446\">failed</a>.</p>",
        "id": 437156246,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714936771
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8960809084\">failed</a>.</p>",
        "id": 437160219,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714940219
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8961275309\">failed</a>.</p>",
        "id": 437166453,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714946464
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8962403704\">failed</a>.</p>",
        "id": 437176798,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714958033
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 437194976,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714971601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span>, I've backported most of your changes in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12691\">#12691</a>.</p>",
        "id": 437197257,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714973810
    },
    {
        "content": "<p>I'm not sure if I should review my own changes:)</p>",
        "id": 437197346,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714973889
    },
    {
        "content": "<p>Okay, I guess. :-)</p>",
        "id": 437197376,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714973934
    },
    {
        "content": "<p>nb: incoming <a href=\"https://github.com/leanprover/lean4/pull/4037\">lean#4037</a> tonight will require <code>lean-pr-testing-4037</code> merged into <code>nightly-testing</code>.</p>",
        "id": 437198311,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714974752
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8964505851\">failed</a>.</p>",
        "id": 437201335,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714976859
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 437209421,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714980852
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8967345119\">failed</a>.</p>",
        "id": 437233021,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714990443
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8968128682\">failed</a>.</p>",
        "id": 437243362,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714995037
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8968671715\">failed</a>.</p>",
        "id": 437248164,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1714996909
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8969222471\">failed</a>.</p>",
        "id": 437263669,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715002530
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8971702787\">failed</a>.</p>",
        "id": 437298122,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715013019
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8973964195\">failed</a>.</p>",
        "id": 437324822,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715023755
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8976065020\">failed</a>.</p>",
        "id": 437346450,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715033795
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 437353382,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715038006
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8983031021\">failed</a>.</p>",
        "id": 437414467,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715074317
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"567920\">github mathlib4 bot</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/437414467\">said</a>:</p>\n<blockquote>\n<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8983031021\">failed</a>.</p>\n</blockquote>\n<p>More batteries fallout cc <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 437414901,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715074479
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8983446284\">failed</a>.</p>",
        "id": 437420573,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715076562
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 437439121,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715083900
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9014313135\">failed</a>.</p>",
        "id": 437784286,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715242279
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 437795187,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715248709
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9030253459\">failed</a>.</p>",
        "id": 437954683,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715334257
    },
    {
        "content": "<p>The batteries bump hadn't arrived in time, but is in now.</p>",
        "id": 437955635,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715334684
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9032339681\">failed</a>.</p>",
        "id": 437975782,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715344888
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9034527086\">failed</a>.</p>",
        "id": 438003286,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715355805
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9036542274\">failed</a>.</p>",
        "id": 438030327,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715366560
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9038307266\">failed</a>.</p>",
        "id": 438049602,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715376980
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9040818301\">failed</a>.</p>",
        "id": 438075405,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715398449
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9041782286\">failed</a>.</p>",
        "id": 438084993,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715409795
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9042728963\">failed</a>.</p>",
        "id": 438097639,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715421239
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9042870894\">failed</a>.</p>",
        "id": 438098938,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715422083
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9043709106\">failed</a>.</p>",
        "id": 438106941,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715431305
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9044706320\">failed</a>.</p>",
        "id": 438116648,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715441705
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9045665994\">failed</a>.</p>",
        "id": 438126970,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715453091
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9046558948\">failed</a>.</p>",
        "id": 438136042,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715463318
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9047564745\">failed</a>.</p>",
        "id": 438144946,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715474948
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9048556911\">failed</a>.</p>",
        "id": 438153217,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715484915
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9050413331\">failed</a>.</p>",
        "id": 438172221,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715506523
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9052450119\">failed</a>.</p>",
        "id": 438192510,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715528118
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9053432553\">failed</a>.</p>",
        "id": 438203403,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715538981
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9054358479\">failed</a>.</p>",
        "id": 438213764,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715549714
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9054807793\">failed</a>.</p>",
        "id": 438218935,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715555678
    },
    {
        "content": "<p>Needs <code>lean-pr-testing-4061</code> merged in.</p>",
        "id": 438220333,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715557286
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9055087640\">failed</a>.</p>",
        "id": 438223864,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715560924
    },
    {
        "content": "<p>Needed a type annotation on an ambiguous numeral on an incoming change from master.</p>",
        "id": 438224435,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715561538
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 438227860,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715565098
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9071896546\">failed</a>.</p>",
        "id": 438479989,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715649778
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9073332745\">failed</a>.</p>",
        "id": 438494851,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715658167
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9074843494\">failed</a>.</p>",
        "id": 438509767,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715668619
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span>, I've successfully removed the <code>unseal Nat.modCore</code>s from <code>nightly-testing</code>, thanks!</p>",
        "id": 438542823,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715681265
    },
    {
        "content": "<p>I'm fixing a few proofs in nightly-testing to avoid needing to <code>unseal</code> things as much. I'll backport to master in a bit.</p>",
        "id": 438544100,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715681738
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 438551852,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715684822
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9079492062\">failed</a>.</p>",
        "id": 438578196,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715693635
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9084439086\">failed</a>.</p>",
        "id": 438638862,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715714468
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9086460608\">failed</a>.</p>",
        "id": 438670816,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715725811
    },
    {
        "content": "<p>Deprecations in dot notation that aren't visible on master. Backported as <a href=\"https://github.com/leanprover-community/mathlib4/pull/12920\">#12920</a></p>",
        "id": 438680453,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715729952
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 438685026,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715732447
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9110337509\">failed</a>.</p>",
        "id": 438990582,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715856892
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9112427902\">failed</a>.</p>",
        "id": 439019136,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715865700
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9115093230\">failed</a>.</p>",
        "id": 439053560,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715875277
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9117400511\">failed</a>.</p>",
        "id": 439085384,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715886823
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9119441286\">failed</a>.</p>",
        "id": 439110490,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715897530
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9121148220\">failed</a>.</p>",
        "id": 439126575,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715907112
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12969\">#12969</a> backports some changes to EllipticDivisibilitySequence</p>",
        "id": 439129441,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715909249
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 439134804,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715913205
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9123998705\">failed</a>.</p>",
        "id": 439160356,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715928048
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9126469261\">failed</a>.</p>",
        "id": 439198091,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715942991
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9128344481\">failed</a>.</p>",
        "id": 439221993,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715952127
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9130663801\">failed</a>.</p>",
        "id": 439252240,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715961682
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9132721727\">failed</a>.</p>",
        "id": 439275765,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715971726
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9134494336\">failed</a>.</p>",
        "id": 439298621,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715984050
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9135938295\">failed</a>.</p>",
        "id": 439311770,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1715994168
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9137968789\">failed</a>.</p>",
        "id": 439333303,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716016093
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9138903935\">failed</a>.</p>",
        "id": 439342527,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716025787
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9139046303\">failed</a>.</p>",
        "id": 439345811,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716029404
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9139913293\">failed</a>.</p>",
        "id": 439352323,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716036041
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9140888977\">failed</a>.</p>",
        "id": 439364161,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716046997
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9141870388\">failed</a>.</p>",
        "id": 439376892,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716059719
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9142770465\">failed</a>.</p>",
        "id": 439385065,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716069221
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9143792427\">failed</a>.</p>",
        "id": 439395308,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716080689
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9144771786\">failed</a>.</p>",
        "id": 439403592,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716090628
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9146803764\">failed</a>.</p>",
        "id": 439426742,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716113324
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9147694915\">failed</a>.</p>",
        "id": 439435655,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716122509
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9150660176\">failed</a>.</p>",
        "id": 439468451,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716154497
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9151224890\">failed</a>.</p>",
        "id": 439474820,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716161230
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9151307771\">failed</a>.</p>",
        "id": 439476932,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716163417
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13045\">#13045</a> has some backport deprecation warning fixes</p>",
        "id": 439478713,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716165328
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9151781748\">failed</a>.</p>",
        "id": 439479514,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716166204
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13046\">#13046</a> contains further backports. There are still a few more changes, which look more regression-y, on nightly-testing. I'll make a PR out of these soon.</p>",
        "id": 439480210,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716166936
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9152217277\">failed</a>.</p>",
        "id": 439486180,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716172580
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9153301226\">failed</a>.</p>",
        "id": 439497026,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716181276
    },
    {
        "content": "<p>Just the noisy output detector correctly complaining about unwanted output from Lake, which will be fixed tonight in <a href=\"https://github.com/leanprover/lean4/pull/4220\">lean#4220</a>.</p>",
        "id": 439499265,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716182343
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9154584552\">failed</a>.</p>",
        "id": 439511067,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716187433
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9156990138\">failed</a>.</p>",
        "id": 439549941,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716202874
    },
    {
        "content": "<p>Updated the noisy CI filter for the new lake output, hopefully okay now.</p>",
        "id": 439554714,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716204803
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9158049455\">failed</a>.</p>",
        "id": 439556528,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716205548
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 439565617,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716208870
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9172777425\">failed</a>.</p>",
        "id": 439778288,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716285847
    },
    {
        "content": "<p>Just required merging existing fixes on <code>lean-pr-testing-4231</code>, PR shortly.</p>",
        "id": 439786202,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716288577
    },
    {
        "content": "<p>Btw --- if anyone wants to check out the new <code>lake build</code> output, it is available now on <code>nightly-testing</code>.</p>",
        "id": 439786362,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716288605
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9173411140\">failed</a>.</p>",
        "id": 439786419,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716288626
    },
    {
        "content": "<p>Wouldn't hurt to have a few people take a look, as the new lake build output is going to arrive on rc2 (hopefully &lt;24 hours?), and hasn't been tested a whole lot.</p>",
        "id": 439786532,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716288648
    },
    {
        "content": "<p>Oops, Cache was broken by the <code>Lake.crlf2lf</code> --&gt; <code>String.crlfToLf</code> (undeprecated!) rename.</p>",
        "id": 439787137,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716288805
    },
    {
        "content": "<p>And needed to merge lean-pr-testing-4224 as well.</p>\n<p>But our system is working nicely at the moment: lots of Lean PRs are using the <code>nightly-with-mathlib</code> tag as their base, and so we end up with Mathlib patches all ready to go, rather than having to diagnose the breakage. :-) :-)</p>",
        "id": 439787757,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716288961
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9173476932\">failed</a>.</p>",
        "id": 439798102,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716291715
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 439823398,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716299641
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9206064516\">failed</a>.</p>",
        "id": 440291570,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716459512
    },
    {
        "content": "<p>Ah, this is fallout from <span class=\"user-mention\" data-user-id=\"455791\">@Yuyang Zhao</span>'s <a href=\"https://github.com/leanprover/lean4/pull/4188\">lean#4188</a>. I should have asked for a mathlib build before merging, by mistake.</p>\n<p><span class=\"user-mention\" data-user-id=\"455791\">@Yuyang Zhao</span>, do you have a fix on hand?</p>",
        "id": 440294255,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716460536
    },
    {
        "content": "<p>Okay, think I have it sorted out.</p>",
        "id": 440294993,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716460816
    },
    {
        "content": "<p>Whoops, sorry! I forgot to check here and just pushed what I think is a fix.</p>",
        "id": 440295148,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1716460879
    },
    {
        "content": "<p>Feel free to force push your fix</p>",
        "id": 440295183,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1716460899
    },
    {
        "content": "<p>No worries, I left for dinner. I'll merge and see what happens.</p>",
        "id": 440299277,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716462531
    },
    {
        "content": "<p>All good. One of your fixes was better than mine. I just replaced a lemma name, you replaced the whole proof!</p>",
        "id": 440299394,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716462590
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9206925055\">failed</a>.</p>",
        "id": 440308449,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716465994
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9207702194\">failed</a>.</p>",
        "id": 440312338,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716467448
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9208127928\">failed</a>.</p>",
        "id": 440324405,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716471347
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 440328094,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716472379
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9219714373\">failed</a>.</p>",
        "id": 440455216,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716535630
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9221820616\">failed</a>.</p>",
        "id": 440477616,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716544651
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9222204174\">failed</a>.</p>",
        "id": 440486621,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716548574
    },
    {
        "content": "<p>Just a deprecation.</p>",
        "id": 440488717,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716549380
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 440497563,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716553014
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9226404733\">failed</a>.</p>",
        "id": 440541078,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716568242
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9228442070\">failed</a>.</p>",
        "id": 440569360,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716580628
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9230159473\">failed</a>.</p>",
        "id": 440584743,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716589117
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9231563534\">failed</a>.</p>",
        "id": 440597486,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716600709
    },
    {
        "content": "<p>Just some deprecations, backported on <a href=\"https://github.com/leanprover-community/mathlib4/pull/13192\">#13192</a>.</p>",
        "id": 440597628,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716600868
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9231951680\">failed</a>.</p>",
        "id": 440600031,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716603675
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9232610506\">failed</a>.</p>",
        "id": 440606803,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716611112
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9234500553\">failed</a>.</p>",
        "id": 440623489,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716630193
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9234647987\">failed</a>.</p>",
        "id": 440625017,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716631744
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9235499439\">failed</a>.</p>",
        "id": 440636898,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716644094
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9236489692\">failed</a>.</p>",
        "id": 440648316,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716654479
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9238346121\">failed</a>.</p>",
        "id": 440668598,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716676211
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9239361517\">failed</a>.</p>",
        "id": 440676454,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716686805
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9240347497\">failed</a>.</p>",
        "id": 440684519,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716697333
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9242252283\">failed</a>.</p>",
        "id": 440703406,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716719353
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9243128730\">failed</a>.</p>",
        "id": 440709651,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716725981
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256311\">@Jannis Limperg</span>, there was a problem here in Aesop caused by your <a href=\"https://github.com/leanprover-community/aesop/commit/1bbc601de6ff7b69fee3c028069879e830baa0e8\">https://github.com/leanprover-community/aesop/commit/1bbc601de6ff7b69fee3c028069879e830baa0e8</a>.</p>\n<p>The problem is that we have removed <code>Lean.Expr.findM?</code> (recently added), because we decided it was too dangerous to allow potential side-effecting monadic calculations while using a pointer based cache.</p>\n<p>Your recent addition of <code>hasSorry</code> relied on <code>findM?</code>.</p>",
        "id": 440709971,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716726315
    },
    {
        "content": "<p>For now I've simply reverted this commit on nightly-testing, but obviously we still need a solution here.</p>",
        "id": 440709982,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716726335
    },
    {
        "content": "<p>Can I pass the baton to you to think about how to achieve this without <code>findM?</code>?</p>",
        "id": 440709998,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716726358
    },
    {
        "content": "<p>We did consider the possibility of keeping <code>findM?</code> but with prominent warnings that you have to be really careful about side effects... This can still be on the table.</p>",
        "id": 440710063,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716726408
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9243303365\">failed</a>.</p>",
        "id": 440710880,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716727308
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/440709998\">said</a>:</p>\n<blockquote>\n<p>Can I pass the baton to you to think about how to achieve this without <code>findM?</code>?</p>\n</blockquote>\n<p>I see a few options:</p>\n<ul>\n<li>Work around it in Aesop by moving the monadic computation into a loop around <code>find?</code>. The code is not at all performance-critical, so this is fine.</li>\n<li>Provide an unsafe <code>findM?</code> as you suggest.</li>\n<li>Rename <code>findM?</code> to <code>unsafeFindM?</code> or another suitably scary name and possibly add a safe variant <code>findM?</code> without the pointer-based cache.</li>\n</ul>\n<p>The last one would be my favourite.</p>",
        "id": 440711656,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1716728076
    },
    {
        "content": "<p>Actually, the workaround in Aesop is even easier than that. I just need to get the <code>mctx</code> and then use it for pure lookups in <code>find?</code>.</p>",
        "id": 440711746,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1716728186
    },
    {
        "content": "<p>Let's do that. The decision to remove <code>findM?</code> was in part motivated by the hope that in most use cases, if there were no side effects probably it could actually be made pure.</p>",
        "id": 440714547,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716731218
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 440719255,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716735821
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9244370725\">failed</a>.</p>",
        "id": 440721102,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716737698
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9245381964\">failed</a>.</p>",
        "id": 440734822,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716752139
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9246332993\">failed</a>.</p>",
        "id": 440744732,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716761547
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9247459191\">failed</a>.</p>",
        "id": 440757548,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716773351
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9248806712\">failed</a>.</p>",
        "id": 440770482,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716784092
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9250329980\">failed</a>.</p>",
        "id": 440792084,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716794861
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9252980335\">failed</a>.</p>",
        "id": 440830333,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716807848
    },
    {
        "content": "<p>The problem here is that <code>lake build</code> is saying:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">%</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">build</span>\n<span class=\"n\">ℹ</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"mi\">544</span><span class=\"bp\">/</span><span class=\"mi\">4549</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">Replayed</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Set</span><span class=\"bp\">.</span><span class=\"n\">Basic</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Set</span><span class=\"bp\">/</span><span class=\"n\">Basic</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">2646</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"n\">Build</span><span class=\"w\"> </span><span class=\"n\">completed</span><span class=\"w\"> </span><span class=\"n\">successfully</span><span class=\"bp\">.</span>\n</code></pre></div>\n<p>and this is failing the noisy output check.</p>\n<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>, do you know why Lake would be telling us that it replayed something here?</p>",
        "id": 440835266,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716809688
    },
    {
        "content": "<p>Is that not correct? <a href=\"https://github.com/leanprover-community/mathlib4/blob/nightly-testing/Mathlib/Data/Set/Basic.lean#L2646\">https://github.com/leanprover-community/mathlib4/blob/nightly-testing/Mathlib/Data/Set/Basic.lean#L2646</a></p>",
        "id": 440838702,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1716810954
    },
    {
        "content": "<p>Yeah, that was my attempt to debug</p>",
        "id": 440839432,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716811204
    },
    {
        "content": "<p>Before it was failing with</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Order</span><span class=\"bp\">/</span><span class=\"n\">Circular</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">6</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Set</span><span class=\"bp\">/</span><span class=\"n\">Basic</span><span class=\"bp\">.</span><span class=\"n\">olean'</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">invalid</span><span class=\"w\"> </span><span class=\"n\">header</span>\n</code></pre></div>",
        "id": 440839565,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716811248
    },
    {
        "content": "<p>Hold on, didn't we recently start uploading to the cache when the build was interrupted?</p>",
        "id": 440839664,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716811280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/440714547\">said</a>:</p>\n<blockquote>\n<p>Let's do that. The decision to remove <code>findM?</code> was in part motivated by the hope that in most use cases, if there were no side effects probably it could actually be made pure.</p>\n</blockquote>\n<p>Done and Aesop's nightly-testing is up to date again.</p>",
        "id": 440840676,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1716811617
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9254984190\">failed</a>.</p>",
        "id": 440854794,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716816281
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9257299603\">failed</a>.</p>",
        "id": 440885964,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716826934
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9259008986\">failed</a>.</p>",
        "id": 440907383,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716837388
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9260424807\">failed</a>.</p>",
        "id": 440925204,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716846641
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9261784238\">failed</a>.</p>",
        "id": 440946273,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716859760
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9263106496\">failed</a>.</p>",
        "id": 440959690,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716868359
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9264605380\">failed</a>.</p>",
        "id": 440973640,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716878699
    },
    {
        "content": "<p>A change on <code>master</code> (<code>norm_iteratedFDeriv_fourierPowSMulRight</code>) now requires a <code>set_option maxSynthPendingDepth 2 in</code>.</p>",
        "id": 440998956,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716888282
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9267361799\">failed</a>.</p>",
        "id": 441015622,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716894646
    },
    {
        "content": "<p>Just a deprecation warning following a change on master. These will stop shortly when Mathlib means to v4.9.0-rc1.</p>",
        "id": 441028155,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716899042
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 441042314,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716903384
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9272217276\">failed</a>.</p>",
        "id": 441078395,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716914961
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9274586518\">failed</a>.</p>",
        "id": 441100323,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716923954
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9276622425\">failed</a>.</p>",
        "id": 441123682,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716934558
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9278367304\">failed</a>.</p>",
        "id": 441144200,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716946385
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9279842240\">failed</a>.</p>",
        "id": 441161911,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716956404
    },
    {
        "content": "<p>Changes on master that relied on well-founded defs being semireducible.</p>",
        "id": 441194031,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716972227
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9282931014\">failed</a>.</p>",
        "id": 441201607,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716975008
    },
    {
        "content": "<p><span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span> probably more of the same in <code>Mathlib/RingTheory/Polynomial/Chebyshev.lean</code> (not looking right now)</p>",
        "id": 441201725,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716975062
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 441217673,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716981094
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9290038337\">failed</a>.</p>",
        "id": 441288059,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717005052
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9291315570\">failed</a>.</p>",
        "id": 441302129,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717010716
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9293393486\">failed</a>.</p>",
        "id": 441321837,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717018412
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9298106106\">failed</a>.</p>",
        "id": 441397178,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717053346
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9300736896\">failed</a>.</p>",
        "id": 441431809,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717066488
    },
    {
        "content": "<p>Some <code>synthPendingDepth</code> issues with <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span>'s changes to StoneWeierstrauss. Seems straightforward: we can remove some shortcut instances at the price of increasing <code>synthPendingDepth</code>.</p>",
        "id": 441433810,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717067201
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 441436690,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717068264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> can you explain further? I thought we couldn't increase <code>synthPendingDepth</code>?</p>",
        "id": 441467999,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1717078869
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9305211956\">failed</a>.</p>",
        "id": 441488808,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717083735
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9307485267\">failed</a>.</p>",
        "id": 441529284,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717094769
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9309472441\">failed</a>.</p>",
        "id": 441563614,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717105287
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9312522425\">failed</a>.</p>",
        "id": 441607801,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717127041
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/441467999\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> can you explain further? I thought we couldn't increase <code>synthPendingDepth</code>?</p>\n</blockquote>\n<p>I think the consensus now is that it is fine to locally increase it to 2, and that this is preferable to aging appreciate instances.</p>",
        "id": 441623565,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717135610
    },
    {
        "content": "<p>Moreover, we should try to build Mathlib with it globally at 2 again, and if we can get it to build check the benchmark. (When we previously tried this it was too slow.) If we can avoid they performance penalty there is no reason not to increase it globally.</p>",
        "id": 441623752,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717135694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"567920\">github mathlib4 bot</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/441607801\">said</a>:</p>\n<blockquote>\n<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9312522425\">failed</a>.</p>\n</blockquote>\n<p>Just some upstreamed lemmas about <code>Fin</code>.</p>",
        "id": 441645014,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717142887
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9315003813\">failed</a>.</p>",
        "id": 441653600,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717145732
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9316063514\">failed</a>.</p>",
        "id": 441662098,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717148409
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 441683247,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717154706
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9320611250\">failed</a>.</p>",
        "id": 441736638,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717169543
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9327284579\">failed</a>.</p>",
        "id": 441854051,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717215549
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9328297175\">failed</a>.</p>",
        "id": 441868799,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717226395
    },
    {
        "content": "<p>File deleted on <code>master</code> (Mathlib/Data/BitVec/Lemmas) had local changes on nightly-testing, so wasn't deleted correctly.</p>",
        "id": 441869334,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717226734
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9328620759\">failed</a>.</p>",
        "id": 441874235,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717229869
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9329277060\">failed</a>.</p>",
        "id": 441885007,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717236471
    },
    {
        "content": "<p>A shake was required, and I've also bumped dependencies.</p>",
        "id": 441894953,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717242507
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 441901631,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717246354
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9337416841\">failed</a>.</p>",
        "id": 442032880,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717323165
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9339378984\">failed</a>.</p>",
        "id": 442065212,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717342506
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9342495905\">failed</a>.</p>",
        "id": 442124658,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717375972
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9347741315\">failed</a>.</p>",
        "id": 442199766,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717407412
    },
    {
        "content": "<p>Appears to have just need lean-pr-testing-4314 merged. About to hope back on a plane. :-)</p>",
        "id": 442230648,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717415568
    },
    {
        "content": "<p>I'll try that</p>",
        "id": 442234399,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717416515
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9349609366\">failed</a>.</p>",
        "id": 442234609,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717416583
    },
    {
        "content": "<p>Oh, you did</p>",
        "id": 442234721,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717416604
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9350320372\">failed</a>.</p>",
        "id": 442249960,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717420543
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 442261133,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717423054
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 442397581,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717457200
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9359231897\">failed</a>.</p>",
        "id": 442407908,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717462302
    },
    {
        "content": "<p>Just needs a shake again, after merging master-&gt;bump/v4.9.0-&gt;nightly-testing</p>",
        "id": 442408052,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717462357
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 442410883,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717463637
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9365121515\">failed</a>.</p>",
        "id": 442494074,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717496281
    },
    {
        "content": "<p>Fallout from <a href=\"https://github.com/leanprover/lean4/pull/4321\">lean4#4321</a>. There's no adaptation branch, but I'll fix this up soon.</p>",
        "id": 442632526,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717536728
    },
    {
        "content": "<p>Oof, this encountered an unpleasant <code>any_goals simp [...]</code> proof which was actually meant to be a <code>swap ·  simp [...]</code>.</p>",
        "id": 442634866,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717537369
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9374610422\">failed</a>.</p>",
        "id": 442644335,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717540476
    },
    {
        "content": "<p>Interesting! <span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span>'s <a href=\"https://github.com/leanprover/lean4/pull/4177\">lean4#4177</a> has changed the behaviour of <code>simp</code> so when given an invalid theorem is generates an error but continues. This has changed the behaviour of <code>norm_num</code> to do the same, so we need to update the relevant <code>norm_num</code> test.</p>",
        "id": 442645082,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717540863
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 442646850,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717541766
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9381230572\">failed</a>.</p>",
        "id": 442732373,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717578431
    },
    {
        "content": "<p><code>nightly-testing</code> is badly broken today:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">List</span><span class=\"bp\">.</span><span class=\"n\">EditDistance</span><span class=\"bp\">.</span><span class=\"n\">Estimator</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Seq</span><span class=\"bp\">.</span><span class=\"n\">Parallel</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">CategoryTheory</span><span class=\"bp\">.</span><span class=\"n\">Limits</span><span class=\"bp\">.</span><span class=\"n\">HasLimits</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">GroupTheory</span><span class=\"bp\">.</span><span class=\"n\">Perm</span><span class=\"bp\">.</span><span class=\"n\">Support</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">QPF</span><span class=\"bp\">.</span><span class=\"n\">Multivariate</span><span class=\"bp\">.</span><span class=\"n\">Constructions</span><span class=\"bp\">.</span><span class=\"n\">Fix</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Combinatorics</span><span class=\"bp\">.</span><span class=\"n\">Hall</span><span class=\"bp\">.</span><span class=\"n\">Finite</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Combinatorics</span><span class=\"bp\">.</span><span class=\"n\">SimpleGraph</span><span class=\"bp\">.</span><span class=\"n\">Triangle</span><span class=\"bp\">.</span><span class=\"n\">Counting</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">SetTheory</span><span class=\"bp\">.</span><span class=\"n\">Ordinal</span><span class=\"bp\">.</span><span class=\"n\">FixedPointApproximants</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">ModelTheory</span><span class=\"bp\">.</span><span class=\"n\">Semantics</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">GroupTheory</span><span class=\"bp\">.</span><span class=\"n\">Solvable</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Nat</span><span class=\"bp\">.</span><span class=\"n\">Factorization</span><span class=\"bp\">.</span><span class=\"n\">Root</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">UniformSpace</span><span class=\"bp\">.</span><span class=\"n\">UniformEmbedding</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">.</span><span class=\"n\">Basis</span>\n</code></pre></div>\n<p>So far I don't even have a guess what has caused it. <a href=\"https://github.com/leanprover/lean4/pull/4352\">lean#4352</a> seems to be the only plausible suspect amongst the changes in this nightly.</p>",
        "id": 442736747,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717579770
    },
    {
        "content": "<p>Unfortunately it wasn't tested separately.</p>",
        "id": 442736916,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717579804
    },
    {
        "content": "<p>Did you fix <code>error: ././././Mathlib/Init/Core.lean:152:27: Declaration IsLawfulSingleton not found.</code> already?</p>",
        "id": 442737254,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717579899
    },
    {
        "content": "<p>Yes, sorry, just pushed some easy changes.</p>",
        "id": 442737283,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717579910
    },
    {
        "content": "<p>(the various upstreams and renames)</p>",
        "id": 442737363,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717579927
    },
    {
        "content": "<p>I'm compiling <a href=\"https://github.com/leanprover/lean4/pull/4352\">lean#4352</a> locally to see if I can reproduce nightly-testing's troubles there. Probably it won't be possible to test separately because too many other things changed.</p>",
        "id": 442737512,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717579977
    },
    {
        "content": "<p>Yeah, it was <a href=\"https://github.com/leanprover/lean4/pull/4352\">lean#4352</a>. I suspect this will require minimization and possibly some revisions at the Lean end, but I am jet-lagged and need to sleep!</p>",
        "id": 442738652,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717580330
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9381666699\">failed</a>.</p>",
        "id": 442740618,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717580962
    },
    {
        "content": "<p>I pushed a few workarounds with adaptation notes; not yet all of the files you listed</p>",
        "id": 442745639,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717582408
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9382246994\">failed</a>.</p>",
        "id": 442747499,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717582939
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/442745639\">said</a>:</p>\n<blockquote>\n<p>I pushed a few workarounds with adaptation notes; not yet all of the files you listed</p>\n</blockquote>\n<p>Do you have a sense whether the workaround are reasonable? (i.e. previously the proofs were abusive in some way) Or if they likely indicate that we will need to go back and change <a href=\"https://github.com/leanprover/lean4/pull/4352\">lean#4352</a>? I'll look later today.</p>",
        "id": 442894102,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717621525
    },
    {
        "content": "<p>The ones I pushed were a bit disappointing, but probably not unreasonable. I guess it will depend on how many more of those are coming</p>",
        "id": 442895357,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717621904
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9391319748\">failed</a>.</p>",
        "id": 442901372,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717623530
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9392522054\">failed</a>.</p>",
        "id": 442925144,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717630364
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9392811222\">failed</a>.</p>",
        "id": 442931153,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717632758
    },
    {
        "content": "<p>Nearly all fixed (there will be many backported changes to master; I'll prepare these soon).</p>",
        "id": 442931798,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717633096
    },
    {
        "content": "<p>The one remaining error is in <code>Mathlib/Algebra/Lie/CartanExists.lean</code>, where a <code>simp_rw [coe_toEnd_pow]</code> is no longer firing. Haven't quite worked this one out yet, so if any Lie theory enthusiasts (<span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>?) want to jump in that would be great. (Hopefully oleans available already?)</p>",
        "id": 442931902,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717633160
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9393006150\">failed</a>.</p>",
        "id": 442931926,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717633175
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/442931902\">said</a>:</p>\n<blockquote>\n<p>The one remaining error is in <code>Mathlib/Algebra/Lie/CartanExists.lean</code>, where a <code>simp_rw [coe_toEnd_pow]</code> is no longer firing. Haven't quite worked this one out yet, so if any Lie theory enthusiasts (<span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span>?) want to jump in that would be great. (Hopefully oleans available already?)</p>\n</blockquote>\n<p>Okay, sorted this one. Hopefully all working again.</p>",
        "id": 442949073,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717640808
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9394165899\">failed</a>.</p>",
        "id": 442949296,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717640913
    },
    {
        "content": "<p>Some incoming problems from master.</p>",
        "id": 442952059,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717642562
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9394454068\">failed</a>.</p>",
        "id": 442957228,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717645646
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 442966583,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717649912
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9398931667\">failed</a>.</p>",
        "id": 443021769,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717668661
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9399963402\">failed</a>.</p>",
        "id": 443033046,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717673061
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 443053662,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717678989
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9415240877\">failed</a>.</p>",
        "id": 443262085,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717755344
    },
    {
        "content": "<p>Needs patches merged from lean-pr-testing-4370</p>",
        "id": 443427536,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1717824786
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 443432117,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717828823
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9463642332\">failed</a>.</p>",
        "id": 443967509,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718101860
    },
    {
        "content": "<p>I've merged patches for <a href=\"https://github.com/leanprover/lean4/pull/4408\">lean#4408</a> and <a href=\"https://github.com/leanprover/lean4/pull/4385\">lean#4385</a> that I prepared earlier.</p>",
        "id": 443968894,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718102191
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9464032005\">failed</a>.</p>",
        "id": 443977688,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718105228
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9468521546\">failed</a>.</p>",
        "id": 444048921,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718123574
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9470968830\">failed</a>.</p>",
        "id": 444079061,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718133097
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9473031464\">failed</a>.</p>",
        "id": 444109608,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718144148
    },
    {
        "content": "<p>Trying out the fix proposed at <a href=\"#narrow/stream/113488-general/topic/v4.2E9.2E0-rc1.20discussion/near/444127287\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/v4.2E9.2E0-rc1.20discussion/near/444127287</a>, but it is a bit voodoo so far.</p>",
        "id": 444127758,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718154994
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9475102755\">failed</a>.</p>",
        "id": 444133604,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718159116
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9476287797\">failed</a>.</p>",
        "id": 444142378,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718165083
    },
    {
        "content": "<p>Hopefully should come good again now that we are using <span class=\"user-mention\" data-user-id=\"607118\">@llllvvuu</span>'s <a href=\"https://github.com/leanprover-community/batteries/pull/838\">batteries#838</a>.</p>",
        "id": 444156008,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718173026
    },
    {
        "content": "<p>We might have to address those linter warnings as well: <a href=\"https://github.com/leanprover-community/mathlib4/pull/13754\">#13754</a></p>\n<p>(I might have awakened the linter by <a href=\"https://github.com/leanprover/lean4/pull/4410\">fixing a bug</a> - my bad)</p>",
        "id": 444158154,
        "sender_full_name": "llllvvuu",
        "timestamp": 1718173960
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"607118\">@llllvvuu</span>, yes if you could send that to <code>master</code> that would be great. Ping me again and I'll merge!</p>",
        "id": 444158455,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718174105
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> done</p>",
        "id": 444159073,
        "sender_full_name": "llllvvuu",
        "timestamp": 1718174418
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9477867907\">failed</a>.</p>",
        "id": 444167585,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718177753
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9480615924\">failed</a>.</p>",
        "id": 444199117,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718187972
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9482743124\">failed</a>.</p>",
        "id": 444231834,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718197523
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9485457226\">failed</a>.</p>",
        "id": 444267183,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718206592
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9487894069\">failed</a>.</p>",
        "id": 444307585,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718218091
    },
    {
        "content": "<p>Hopefully just needs <code>lean-pr-testing-4421</code> merged in.</p>",
        "id": 444348661,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718234022
    },
    {
        "content": "<p>Also requires quite a few (positive!) fixes for <a href=\"https://github.com/leanprover/lean4/pull/4430\">lean4#4430</a>.</p>",
        "id": 444351208,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718235419
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9491196844\">failed</a>.</p>",
        "id": 444353996,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718237310
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9491587803\">failed</a>.</p>",
        "id": 444355954,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718238688
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9491797709\">failed</a>.</p>",
        "id": 444358948,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718240876
    },
    {
        "content": "<p>Ugh, my fault, after merging <code>lean-pr-testing-4421</code> we were pointing to an old copy of Batteries.</p>",
        "id": 444363672,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718243958
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9493268005\">failed</a>.</p>",
        "id": 444379794,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718252980
    },
    {
        "content": "<p>Failure in <code>norm_num</code> now from the universe permutation change: <a href=\"https://github.com/leanprover/lean4/pull/4408\">lean4#4408</a></p>",
        "id": 444381040,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718253903
    },
    {
        "content": "<p>Fix is easy enough, happily.</p>",
        "id": 444381147,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718253988
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 444383123,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718254941
    },
    {
        "content": "<p>Hurrah! It's been a while. :-)</p>",
        "id": 444383335,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718255098
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 444395204,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718261375
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9511754442\">failed</a>.</p>",
        "id": 444628678,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718346947
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9514307579\">failed</a>.</p>",
        "id": 444665409,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718359732
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9516272150\">failed</a>.</p>",
        "id": 444692671,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718369170
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9518633096\">failed</a>.</p>",
        "id": 444726533,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718379350
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9520789535\">failed</a>.</p>",
        "id": 444765818,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718390412
    },
    {
        "content": "<p>Hmm, I seem to have run into trouble here, with <code>lake</code> getting stuck.</p>\n<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>?</p>\n<p>On the <code>nightly-testing</code> branch of Mathlib, I see:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">%</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">build</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">date</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">url</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"bp\">'</span><span class=\"n\">Cli'</span><span class=\"w\"> </span><span class=\"n\">changed</span><span class=\"bp\">;</span><span class=\"w\"> </span><span class=\"n\">use</span><span class=\"w\"> </span><span class=\"ss\">`lake</span><span class=\"w\"> </span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">Cli</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">it</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">date</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">revision</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"bp\">'</span><span class=\"n\">Cli'</span><span class=\"w\"> </span><span class=\"n\">changed</span><span class=\"bp\">;</span><span class=\"w\"> </span><span class=\"n\">use</span><span class=\"w\"> </span><span class=\"ss\">`lake</span><span class=\"w\"> </span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">Cli</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">it</span>\n<span class=\"bp\">⣿</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"bp\">?/?</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">Computing</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"n\">jobs</span><span class=\"bp\">^</span><span class=\"n\">C</span>\n</code></pre></div>\n<p>with <code>lake</code> just hanging at that step.</p>\n<p>I don't see anything wrong with <code>Cli</code> (and I'm pretty sure nothing has changed):</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">%</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">Cli</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">lakefile</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">20</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ss\">`Lake.inputFile</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">deprecated</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">lakefile</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">76</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ss\">`Lake.inputFile</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">deprecated</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Cli</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ignoring</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span><span class=\"bp\">/</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">manifest</span><span class=\"bp\">.</span><span class=\"n\">json'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">mathlib</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">running</span><span class=\"w\"> </span><span class=\"n\">post</span><span class=\"bp\">-</span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">hooks</span>\n</code></pre></div>\n<p>doesn't result in any change to <code>lake-manifest.json</code>, and <code>lake build</code> hangs in the same manner.</p>\n<p>I've tried the usual things of <code>lake clean</code>, and <code>rm -rf .lake</code>, to no avail.</p>",
        "id": 444836059,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718434259
    },
    {
        "content": "<p>(The warning about <code>Lake.inputFile</code> from ProofWidgets has been present for about a week: <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> knows about it and is looking into it, so I think it is unrelated to today's problem.)</p>",
        "id": 444836097,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718434302
    },
    {
        "content": "<p>(Fully appreciating it is the weekend...) This is apparently completely blocking work on <code>nightly-testing</code>, so <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> I'd appreciate your help here on Monday! :-)</p>",
        "id": 444846775,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718444196
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/444836059\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Cli</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ignoring</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span><span class=\"bp\">/</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">manifest</span><span class=\"bp\">.</span><span class=\"n\">json'</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>This sticks out to me as odd as Cli has a <a href=\"https://github.com/leanprover/lean4-cli/blob/main/lake-manifest.json\"><code>lake-manifest.json</code>\n</a>. Does the file in question really not exist?</p>",
        "id": 444847077,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718444485
    },
    {
        "content": "<p>Yes, the file is missing.</p>",
        "id": 444847165,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718444545
    },
    {
        "content": "<p>Well that's a problem. What does a <code>rm -rf .lake</code> and <code>lake update Cli -v</code> produce?</p>",
        "id": 444847230,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718444622
    },
    {
        "content": "<p>lean4-cli <code>main</code> is at <code>a11566029bd9ec4f68a65394e8c3ff1af74c1a29</code>, but <code>git log</code> in <code>.lake/packages/Cli</code> reports <code>39229f3630d734af7d9cfb5937ddc6b41d3aa6aa</code>.</p>",
        "id": 444847249,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718444642
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">%</span><span class=\"w\"> </span><span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">rf</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">lake</span>\n<span class=\"bp\">%</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">Cli</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">v</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">batteries</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">batteries</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">batteries'</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">.&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">batteries</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">batteries</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">Cloning</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">batteries'</span><span class=\"bp\">...</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">batteries</span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">checkout</span><span class=\"w\"> </span><span class=\"c1\">--detach 8d2100637a91776707ca22636ae8aa04dd5c1e8d</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">HEAD</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">d21006</span><span class=\"w\"> </span><span class=\"n\">chore</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bump</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2024</span><span class=\"bp\">-</span><span class=\"mi\">06</span><span class=\"bp\">-</span><span class=\"mi\">15</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Qq</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">quote4</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq'</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">.&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">quote4</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">Cloning</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq'</span><span class=\"bp\">...</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq</span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">checkout</span><span class=\"w\"> </span><span class=\"c1\">--detach 44f57616b0d9b8f9e5606f2c58d01df54840eba7</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">HEAD</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"mi\">44</span><span class=\"n\">f5761</span><span class=\"w\"> </span><span class=\"n\">bump</span><span class=\"w\"> </span><span class=\"n\">toolchain</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">aesop</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop'</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">.&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">Cloning</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop'</span><span class=\"bp\">...</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">checkout</span><span class=\"w\"> </span><span class=\"c1\">--detach f744aab6fc4e06553464e6ae66730a3b14b8e615</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">HEAD</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">f744aab</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">master</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">bump</span><span class=\"w\"> </span><span class=\"n\">toolchain</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">proofwidgets</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets4</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets'</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">.&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets4</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">Cloning</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets'</span><span class=\"bp\">...</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">checkout</span><span class=\"w\"> </span><span class=\"c1\">--detach e6b6247c61280c77ade6bbf0bc3c66a44fe2e0c5</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">HEAD</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">e6b6247</span><span class=\"w\"> </span><span class=\"n\">Merge</span><span class=\"w\"> </span><span class=\"n\">pull</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"w\"> </span><span class=\"bp\">#</span><span class=\"mi\">56</span><span class=\"w\"> </span><span class=\"k\">from</span><span class=\"w\"> </span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">batteries</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">lakefile</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">20</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ss\">`Lake.inputFile</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">deprecated</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">lakefile</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">76</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ss\">`Lake.inputFile</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">deprecated</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Cli</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">mhuisi</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli'</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">.&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">mhuisi</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">Cloning</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli'</span><span class=\"bp\">...</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">checkout</span><span class=\"w\"> </span><span class=\"c1\">--detach 39229f3630d734af7d9cfb5937ddc6b41d3aa6aa</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">HEAD</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"mi\">39229</span><span class=\"n\">f3</span><span class=\"w\"> </span><span class=\"n\">doc</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">adjust</span><span class=\"w\"> </span><span class=\"n\">README</span><span class=\"w\"> </span><span class=\"n\">for</span><span class=\"w\"> </span><span class=\"n\">move</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">leanprover</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Cli</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ignoring</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span><span class=\"bp\">/</span><span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">manifest</span><span class=\"bp\">.</span><span class=\"n\">json'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">importGraph</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"kn\">import</span><span class=\"bp\">-</span><span class=\"n\">graph</span><span class=\"bp\">.</span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">importGraph'</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">.&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"kn\">import</span><span class=\"bp\">-</span><span class=\"n\">graph</span><span class=\"bp\">.</span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">importGraph</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">Cloning</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">importGraph'</span><span class=\"bp\">...</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">importGraph</span><span class=\"bp\">&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">checkout</span><span class=\"w\"> </span><span class=\"c1\">--detach 7983e959f8f4a79313215720de3ef1eca2d6d474</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">HEAD</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"mi\">7983</span><span class=\"n\">e95</span><span class=\"w\"> </span><span class=\"n\">Merge</span><span class=\"w\"> </span><span class=\"n\">pull</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"w\"> </span><span class=\"bp\">#</span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"k\">from</span><span class=\"w\"> </span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">bump_to_v4</span><span class=\"bp\">.</span><span class=\"m\">9</span><span class=\"bp\">.</span><span class=\"m\">0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">mathlib</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">running</span><span class=\"w\"> </span><span class=\"n\">post</span><span class=\"bp\">-</span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">hooks</span>\n</code></pre></div>",
        "id": 444847311,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718444677
    },
    {
        "content": "<p>ah, for some reason we are getting <code>39229f3630d734af7d9cfb5937ddc6b41d3aa6aa</code> from the <code>nightly</code> branch of <code>lean4-cli</code>, rather than the latest <code>10d88b52fa8d717fa8e29af3abf0c3a2bf175497</code>.</p>",
        "id": 444847417,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718444771
    },
    {
        "content": "<p>Oh, is this because it is a transitive dependency via <code>import-graph</code>?</p>",
        "id": 444847596,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718444988
    },
    {
        "content": "<p>I bumped that at <a href=\"https://github.com/leanprover-community/import-graph/pull/13\">https://github.com/leanprover-community/import-graph/pull/13</a></p>",
        "id": 444847738,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445110
    },
    {
        "content": "<p>I can not work out why <code>lake </code> is puling <code>39229f</code> for <code>lean4-cli</code>.</p>",
        "id": 444847934,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445262
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> It appears to be getting it from batteries. I don't know why, though. This is something I specifically tested against, but something appears to be going wrong here for some reason.</p>",
        "id": 444847935,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718445264
    },
    {
        "content": "<p>What? But <code>Batteries</code> doesn't have any dependencies!</p>",
        "id": 444847954,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445302
    },
    {
        "content": "<p>What do you mean? <a href=\"https://github.com/leanprover-community/batteries/blob/main/lake-manifest.json\">https://github.com/leanprover-community/batteries/blob/main/lake-manifest.json</a></p>",
        "id": 444848047,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718445372
    },
    {
        "content": "<p>(from doc-gen4)</p>",
        "id": 444848068,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718445394
    },
    {
        "content": "<p>Ugh... someone has committed in doc mode. I thought we didn't do this.</p>",
        "id": 444848081,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445418
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/batteries/blob/main/lakefile.lean#L21-L22\">https://github.com/leanprover-community/batteries/blob/main/lakefile.lean#L21-L22</a></p>",
        "id": 444848090,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1718445426
    },
    {
        "content": "<p>(<code>meta if</code> delenda est)</p>",
        "id": 444848091,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445427
    },
    {
        "content": "<p>I did that a while back as it is needed to figure out the doc-gen4 that is compatible with batteries.</p>",
        "id": 444848135,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718445478
    },
    {
        "content": "<p>Haha, <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> committed the lake-manifest.</p>",
        "id": 444848137,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445479
    },
    {
        "content": "<p>We really need to get rid of that.</p>",
        "id": 444848180,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445489
    },
    {
        "content": "<p>Batteries is not meant to have dependencies</p>",
        "id": 444848187,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445495
    },
    {
        "content": "<p>If someone or something wants to run doc-gen4 on Batteries, they turn it on <em>privately</em>, and must not pollute everyone else's setup.</p>",
        "id": 444848211,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445527
    },
    {
        "content": "<p>Do you know a reason why I can't commit the correct <code>lake-manifest.json</code> for Batteries without all this doc-gen stuff?</p>",
        "id": 444848237,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445566
    },
    {
        "content": "<p>However, I think I realized the test case I overlooked. It so happens that my test case tested the resolution order without dependency package manifests. Relooking at the code, I believe it breaks in the presence of them. I will fix this monday.</p>\n<p>A quick fix is to move the CLI dependency to the top of the require block in mathlib.</p>",
        "id": 444848305,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718445605
    },
    {
        "content": "<p>I'm committing an empty lake-manifest to Batteries</p>",
        "id": 444848358,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445655
    },
    {
        "content": "<p>That can break things in a different way  (and will likely be undone soon).</p>",
        "id": 444848615,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718445779
    },
    {
        "content": "<p>Okay, that gets rid of the warning about Cli, but the underlying problem remains:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">%</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">build</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">batteries</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">batteries</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">batteries'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Qq</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">quote4</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">aesop</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">proofwidgets</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets4</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets'</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">lakefile</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">20</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ss\">`Lake.inputFile</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">deprecated</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/</span><span class=\"n\">lakefile</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">76</span><span class=\"o\">:</span><span class=\"mi\">36</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">warning</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ss\">`Lake.inputFile</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">deprecated</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">importGraph</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"kn\">import</span><span class=\"bp\">-</span><span class=\"n\">graph</span><span class=\"bp\">.</span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">importGraph'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Cli</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">cloning</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"bp\">'././.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli'</span>\n<span class=\"bp\">⣿</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"bp\">?/?</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">Computing</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"n\">jobs</span>\n</code></pre></div>",
        "id": 444848633,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445786
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/444848615\">said</a>:</p>\n<blockquote>\n<p>That can break things in a different way  (and will likely be undone soon).</p>\n</blockquote>\n<p>How can it break things? And why would it be undone?</p>",
        "id": 444848675,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445810
    },
    {
        "content": "<p>(Part of the require overhaul that I working on merging was unconditionally adding conditional dependencies to the manifest.)</p>",
        "id": 444848810,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718445859
    },
    {
        "content": "<p>Hmm, okay. We'll deal with that when we get there. Hopefully that is only a small window until <code>lake install</code> anyway. :-)</p>",
        "id": 444848874,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445891
    },
    {
        "content": "<p>And in any case it seems that this problem is orthogonal to the actual blocker.</p>",
        "id": 444848912,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718445908
    },
    {
        "content": "<p>The current problem is a bug in the resolution refactor (<a href=\"https://github.com/leanprover/lean4/pull/4371\">lean4#4371</a>) that results in a change in the package resolution order that I had not intended (and I had tried to test to avoid).</p>",
        "id": 444849032,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718445955
    },
    {
        "content": "<p>(Sorry, \"current problem\" means getting stuck at \"Computing build jobs\"?)</p>",
        "id": 444849269,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718446040
    },
    {
        "content": "<p>No, the CLI one.</p>\n<p>I am not sure what would cause Lake to hang.</p>",
        "id": 444849531,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718446124
    },
    {
        "content": "<p>I had hope the fixing the CLI bug would fix it but sadly apparently not.</p>",
        "id": 444849568,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718446145
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> does <code>lake build -v</code> give any more info?</p>",
        "id": 444850070,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718446446
    },
    {
        "content": "<p>Unfortunately not.</p>",
        "id": 444850649,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718446684
    },
    {
        "content": "<p>Do you want to see if you can repro? It's just the nightly-testing branch of Mathlib.</p>",
        "id": 444850663,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718446707
    },
    {
        "content": "<p>Sure. What was the last nightly that was known to not have this issue?</p>",
        "id": 444850893,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718446896
    },
    {
        "content": "<p>Does running <code>lake exe cache get</code> work on machine? (It does on mine.)</p>",
        "id": 444850958,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718446936
    },
    {
        "content": "<p>Hmm, the tag <code>nightly-testing-2024-06-12</code> definitely works, but there will be more in between.</p>",
        "id": 444850988,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718446964
    },
    {
        "content": "<p><code>lake exe cache get</code> runs, but finds nothing.</p>",
        "id": 444851022,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447003
    },
    {
        "content": "<p>Ahha!</p>",
        "id": 444851132,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447061
    },
    {
        "content": "<p>Its <code>proofwidgets</code> (run <code>lake build proofwidgets</code> to see)</p>",
        "id": 444851139,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718447066
    },
    {
        "content": "<p><code>Batteries.Lean.Name</code> has been deleted</p>",
        "id": 444851150,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447073
    },
    {
        "content": "<p>and removing all the <code>import Batteries.Lean.Name</code> lines causes <code>lake build</code> to not get stuck!</p>",
        "id": 444851164,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447095
    },
    {
        "content": "<p>Oh, so does any library depending on batteries break?</p>",
        "id": 444851204,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718447143
    },
    {
        "content": "<p>If you import that missing file?</p>",
        "id": 444851218,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447156
    },
    {
        "content": "<p>That deletion was intentional</p>",
        "id": 444851262,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447168
    },
    {
        "content": "<p>But <code>lake </code> shouldn't freeze because you import a file from another package that doesn't exist!</p>",
        "id": 444851272,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447180
    },
    {
        "content": "<p>I don't think it is freezing -- I think proofwidgets is being rebuilt.</p>",
        "id": 444851304,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718447229
    },
    {
        "content": "<p>And since mathlib is using the old proofwidgets v0.0.36 which is not integrated with the new build monitor, no info is dispalyed.</p>",
        "id": 444851333,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718447264
    },
    {
        "content": "<p>Oh, hmm. I think I did leave it in this state for &gt;1 hour this afternoon... but it's possible.</p>",
        "id": 444851442,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447365
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9527428754\">failed</a>.</p>",
        "id": 444851517,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718447410
    },
    {
        "content": "<p>I tried <code>lake build &lt;pkg&gt;</code> on mathlib's indiviual dependencies and the only that hangs is proofwidgets, hence my conjecture.</p>",
        "id": 444851582,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718447467
    },
    {
        "content": "<p>Well, having deleted these bad imports, I guess I am unstuck.</p>",
        "id": 444851602,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447489
    },
    {
        "content": "<p>Hopefully I can leave it to you to work out any <code>lake</code> fixes warranted. :-)</p>",
        "id": 444851611,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447503
    },
    {
        "content": "<p>And hopefully Wojciech will let us bump ProofWidgets soon. :-)</p>",
        "id": 444851627,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718447519
    },
    {
        "content": "<p>Note that import graph also has the bad battiries import.</p>",
        "id": 444851734,
        "sender_full_name": "Mac Malone",
        "timestamp": 1718447631
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9527454673\">failed</a>.</p>",
        "id": 444855591,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718451088
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9529129154\">failed</a>.</p>",
        "id": 444874828,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718466022
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9530111036\">failed</a>.</p>",
        "id": 444900426,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718479878
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9531015064\">failed</a>.</p>",
        "id": 444917509,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718490471
    },
    {
        "content": "<p>Tidying up some <code>Name</code> API had broken <code>import-graph</code>, so I had to update its <code>nightly-testing</code> branch and move Mathlib's <code>nightly-testing</code> to that.</p>",
        "id": 444923186,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718496664
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9532037847\">failed</a>.</p>",
        "id": 444928240,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718502301
    },
    {
        "content": "<p>Should come good after <a href=\"https://github.com/leanprover-community/mathlib4/pull/13855\">#13855</a>.</p>",
        "id": 444928338,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718502441
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 444931342,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718505606
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9535132952\">failed</a>.</p>",
        "id": 444962475,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718532523
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9536029656\">failed</a>.</p>",
        "id": 444973270,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718541809
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9537080109\">failed</a>.</p>",
        "id": 444986160,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718552147
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9539036350\">failed</a>.</p>",
        "id": 445022327,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718573726
    },
    {
        "content": "<p>Again, merging <code>lean-pr-testing-4400</code>.</p>",
        "id": 445030633,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718579411
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9539548269\">failed</a>.</p>",
        "id": 445030990,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718579820
    },
    {
        "content": "<p>Transient network error?</p>",
        "id": 445032675,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718581601
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9540178194\">failed</a>.</p>",
        "id": 445039453,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718588109
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 445043110,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718591388
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9544115076\">failed</a>.</p>",
        "id": 445077965,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718612068
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9544581647\">failed</a>.</p>",
        "id": 445090624,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718616524
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9546266147\">failed</a>.</p>",
        "id": 445104305,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718621304
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 445107175,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718622343
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9556986699\">failed</a>.</p>",
        "id": 445254719,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718674861
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9558544115\">failed</a>.</p>",
        "id": 445264524,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718681655
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9560168934\">failed</a>.</p>",
        "id": 445286110,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718694531
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 445305461,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718700848
    },
    {
        "content": "<p>I'm just fixing up for <a href=\"https://github.com/leanprover/lean4-nightly/releases/tag/nightly-2024-06-18\">nightly-2024-07-18</a> now. There are some breakages, and I'm not entirely sure what Lean change caused them. Either <a href=\"https://github.com/leanprover/lean4/pull/4481\">lean#4481</a> or <a href=\"https://github.com/leanprover/lean4/pull/4434\">lean#4434</a> potentially?</p>",
        "id": 445313540,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718703352
    },
    {
        "content": "<p>The breakages are in Mathlib.Data.Matrix.PEquiv and Mathlib.Data.Finsupp.Basic.</p>",
        "id": 445313688,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718703383
    },
    {
        "content": "<p>I'm done with Mathlib for the day, so if anyone wanted to investigate that would be lovely, and otherwise I'll look more tomorrow.</p>",
        "id": 445313767,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718703409
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9562583113\">failed</a>.</p>",
        "id": 445316300,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718704219
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9565182001\">failed</a>.</p>",
        "id": 445351853,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718715779
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9567945704\">failed</a>.</p>",
        "id": 445393788,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718725232
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9570372963\">failed</a>.</p>",
        "id": 445434364,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718736231
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9572501245\">failed</a>.</p>",
        "id": 445468738,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718747883
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9579651942\">failed</a>.</p>",
        "id": 445552725,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718791234
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9580064613\">failed</a>.</p>",
        "id": 445554106,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718791702
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9582167489\">failed</a>.</p>",
        "id": 445581142,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718801114
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9584709468\">failed</a>.</p>",
        "id": 445640818,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718811338
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9586719938\">failed</a>.</p>",
        "id": 445676440,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718822299
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9588360599\">failed</a>.</p>",
        "id": 445706904,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718832918
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9590387326\">failed</a>.</p>",
        "id": 445739390,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718849274
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Mathlib.20status.20updates/near/445313688\">said</a>:</p>\n<blockquote>\n<p>The breakages are in Mathlib.Data.Matrix.PEquiv and Mathlib.Data.Finsupp.Basic.</p>\n</blockquote>\n<p>I've fixed this, but I'm confused what has gone wrong. It is a few instances where <code>dsimp</code> will no longer use a lemma, and we need to <code>rw</code> instead. I can't work out which underlying Lean change must be responsible.</p>",
        "id": 445742078,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718850574
    },
    {
        "content": "<p>For now I've worked around and left <code>#adaptation_notes</code> for someone in the future. :-)</p>",
        "id": 445742108,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718850592
    },
    {
        "content": "<p>Quite a few more changes needed downstream. I just added <code>Pi.one_apply</code> to simp sets freely to solve problems...</p>",
        "id": 445744392,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718851714
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9590848678\">failed</a>.</p>",
        "id": 445750372,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718853932
    },
    {
        "content": "<p>Just a <code>shake</code></p>",
        "id": 445750400,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718853957
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9591197501\">failed</a>.</p>",
        "id": 445751784,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718854640
    },
    {
        "content": "<p>Oh dear, still <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9590848678/job/26446840441\">many</a> linter failures.</p>",
        "id": 445752666,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718855055
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9591560529\">failed</a>.</p>",
        "id": 445758426,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718858419
    },
    {
        "content": "<p>Transient?</p>",
        "id": 445758469,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718858472
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 445762498,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718861755
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9611867157\">failed</a>.</p>",
        "id": 446050329,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718964501
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9612384667\">failed</a>.</p>",
        "id": 446057501,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718967115
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9612494948\">failed</a>.</p>",
        "id": 446059747,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718967985
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9613005757\">failed</a>.</p>",
        "id": 446068625,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718971382
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9613751452\">failed</a>.</p>",
        "id": 446076247,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718974003
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9618234913\">failed</a>.</p>",
        "id": 446147137,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1718995467
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9620037490\">failed</a>.</p>",
        "id": 446177090,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719005742
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9621494912\">failed</a>.</p>",
        "id": 446201480,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719017560
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9624513313\">failed</a>.</p>",
        "id": 446253715,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719050199
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9624657416\">failed</a>.</p>",
        "id": 446254607,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719050948
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9624881581\">failed</a>.</p>",
        "id": 446259862,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719053053
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 446266478,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719057764
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9626527945\">failed</a>.</p>",
        "id": 446287014,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719070952
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9627518664\">failed</a>.</p>",
        "id": 446307879,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719081848
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9628431366\">failed</a>.</p>",
        "id": 446330744,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719093452
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9629435711\">failed</a>.</p>",
        "id": 446347586,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719103344
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 446354593,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719107299
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9632589362\">failed</a>.</p>",
        "id": 446399738,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719137443
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9633507213\">failed</a>.</p>",
        "id": 446415401,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719146571
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9634571655\">failed</a>.</p>",
        "id": 446431881,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719156917
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9635610599\">failed</a>.</p>",
        "id": 446457862,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719167789
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9637145241\">failed</a>.</p>",
        "id": 446488998,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719186980
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9637453063\">failed</a>.</p>",
        "id": 446492183,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719189465
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9637720873\">failed</a>.</p>",
        "id": 446496160,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719191393
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9638203717\">failed</a>.</p>",
        "id": 446499188,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719193557
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 446504627,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719197776
    },
    {
        "content": "<p>Just merged <a href=\"https://github.com/leanprover-community/mathlib4/tree/lean-pr-testing-4493\">branch#lean-pr-testing-4493</a>, hopefully this is enough for today's update.</p>",
        "id": 446563916,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719221722
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9643059276\">failed</a>.</p>",
        "id": 446578065,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719225329
    },
    {
        "content": "<p>Needed to fix some tests, now that the bodies of <code>example</code>s can not affect the universe levels appearing in the type signature.</p>",
        "id": 446584864,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719226907
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 446587381,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719227639
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9645504965\">failed</a>.</p>",
        "id": 446604331,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719233161
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9648165769\">failed</a>.</p>",
        "id": 446646950,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719243328
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9650605066\">failed</a>.</p>",
        "id": 446688481,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719254278
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9652720457\">failed</a>.</p>",
        "id": 446724485,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719264928
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9654534549\">failed</a>.</p>",
        "id": 446749129,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719276576
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9656015553\">failed</a>.</p>",
        "id": 446768816,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719286583
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9657616394\">failed</a>.</p>",
        "id": 446790972,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719297544
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9659993732\">failed</a>.</p>",
        "id": 446838787,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719310707
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9661074266\">failed</a>.</p>",
        "id": 446846912,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719313081
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 446859999,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719316621
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9671670928\">failed</a>.</p>",
        "id": 447031566,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719363108
    },
    {
        "content": "<p>The underlying failure here is that Batteries has made a Mathlib breaking change, and these land on <code>nightly-testing</code> first.</p>\n<p>I'm trying to get the \"automatically bump Batteries in Mathlib\" automation going still, latest attempt at <a href=\"https://github.com/leanprover-community/mathlib4/pull/14142\">#14142</a></p>",
        "id": 447045376,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719368594
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9673134966\">failed</a>.</p>",
        "id": 447054583,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719373035
    },
    {
        "content": "<p>and now <a href=\"https://github.com/leanprover-community/mathlib4/pull/14143\">#14143</a> ...</p>",
        "id": 447055650,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719373537
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9674441205\">failed</a>.</p>",
        "id": 447132442,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719382414
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9674722104\">failed</a>.</p>",
        "id": 447135447,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719383942
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9677184596\">failed</a>.</p>",
        "id": 447170882,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719395171
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9677634763\">failed</a>.</p>",
        "id": 447177258,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719397165
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9679826785\">failed</a>.</p>",
        "id": 447209615,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719405908
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9682555685\">failed</a>.</p>",
        "id": 447250902,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719416651
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9684934025\">failed</a>.</p>",
        "id": 447300990,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719427590
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9688809978\">failed</a>.</p>",
        "id": 447365200,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719449907
    },
    {
        "content": "<p>The problem now is that Aesop's <code>nightly-testing</code> branch need to have <code>master</code> branch merged into it!</p>",
        "id": 447378758,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719458841
    },
    {
        "content": "<p>(and bump the toolchain and Batteries)</p>",
        "id": 447378784,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719458872
    },
    {
        "content": "<p>Also required some universe reorderings due to different behaviour on <code>nightly</code>.</p>",
        "id": 447379259,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719459243
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9690290295\">failed</a>.</p>",
        "id": 447384443,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719462209
    },
    {
        "content": "<p>Just some <code>simp? says</code> that no longer say spurious lemmas!</p>",
        "id": 447387379,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719464377
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9690917312\">failed</a>.</p>",
        "id": 447388822,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719465323
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 447390222,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719466417
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9694598751\">failed</a>.</p>",
        "id": 447447327,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719485642
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9695825912\">failed</a>.</p>",
        "id": 447454926,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719488307
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9696744564\">failed</a>.</p>",
        "id": 447474680,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719493915
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9699445822\">failed</a>.</p>",
        "id": 447515943,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719504356
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9701808029\">failed</a>.</p>",
        "id": 447563871,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719515928
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9703893596\">failed</a>.</p>",
        "id": 447594867,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719524002
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 447627801,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719539204
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9725551772\">failed</a>.</p>",
        "id": 448000671,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719679994
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 448004690,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719681860
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9730218276\">failed</a>.</p>",
        "id": 448087159,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719734846
    },
    {
        "content": "<p>This was the <code>unusedTactic</code> linter successfully identifying an <code>eta_reduce</code> that had become unnecessary on <code>nightly-testing</code>. Nice!</p>",
        "id": 448089875,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719737060
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 448090739,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719737850
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9742212445\">failed</a>.</p>",
        "id": 448282198,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719828230
    },
    {
        "content": "<p><span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9743202714\">failed</a>.</p>",
        "id": 448312243,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719835926
    },
    {
        "content": "<p>Needed a <code>shake</code>.</p>",
        "id": 448314901,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719836662
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> The latest CI for Mathlib's <a href=\"https://github.com/leanprover-community/mathlib4/tree/nightly-testing\">branch#nightly-testing</a> has succeeded!</p>",
        "id": 448334473,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1719841372
    }
]