[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/batteries/pull/861\">batteries#861</a> I changed a namespace from <code>Std</code> to <code>Batteries</code>.  I now checked that in Mathlib this will likely affect what is below.</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Mathport</span><span class=\"bp\">/</span><span class=\"n\">Notation</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">615</span><span class=\"o\">:</span><span class=\"n\">initialize</span><span class=\"w\"> </span><span class=\"n\">Std</span><span class=\"bp\">.</span><span class=\"n\">Linter</span><span class=\"bp\">.</span><span class=\"n\">UnreachableTactic</span><span class=\"bp\">.</span><span class=\"n\">addIgnoreTacticKind</span><span class=\"w\"> </span><span class=\"bp\">``«</span><span class=\"n\">notation3</span><span class=\"bp\">»</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Hint</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">53</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"n\">Std</span><span class=\"bp\">.</span><span class=\"n\">Linter</span><span class=\"bp\">.</span><span class=\"n\">UnreachableTactic</span><span class=\"bp\">.</span><span class=\"n\">ignoreTacticKindsRef</span><span class=\"bp\">.</span><span class=\"n\">modify</span><span class=\"w\"> </span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"bp\">.</span><span class=\"n\">insert</span><span class=\"w\"> </span><span class=\"ss\">``registerHintStx</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Says</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">135</span><span class=\"o\">:</span><span class=\"n\">initialize</span><span class=\"w\"> </span><span class=\"n\">Std</span><span class=\"bp\">.</span><span class=\"n\">Linter</span><span class=\"bp\">.</span><span class=\"n\">UnreachableTactic</span><span class=\"bp\">.</span><span class=\"n\">addIgnoreTacticKind</span><span class=\"w\"> </span><span class=\"ss\">`Mathlib.Tactic.Says.says</span>\n</code></pre></div>\n<p>Which branch should I update in Mathlib to use the correct namespace?</p>",
        "id": 447134922,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719383658
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span>, already done on <a href=\"https://github.com/leanprover-community/mathlib4/pull/14145\">#14145</a>, and awaiting your approval. :-)</p>",
        "id": 447135171,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719383781
    },
    {
        "content": "<p>changes to Batteries just require a PR to mathlib that runs <code>lake update</code> and fixes the problems.</p>",
        "id": 447135214,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719383813
    },
    {
        "content": "<p>as of today there is a working bot that tries to do this itself</p>",
        "id": 447135239,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719383824
    },
    {
        "content": "<p>the component that posts to zulip if the PR fails is not yet (visibly?) working</p>",
        "id": 447135268,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719383842
    },
    {
        "content": "<p>Ok, I am happy to approve the changes, but I do not understand the implications of removing BinaryHeap.</p>",
        "id": 447135284,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719383858
    },
    {
        "content": "<p>It moved to batteries.</p>",
        "id": 447135295,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719383866
    },
    {
        "content": "<p>Ah, great!</p>",
        "id": 447135305,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719383871
    },
    {
        "content": "<p>\"delegated merge\"!</p>",
        "id": 447135397,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719383909
    },
    {
        "content": "<p>Could the flow have been: add a <code>deprecation</code> either in Batteries or in Mathlib, run the autocorrecting script that fixes deprecations?  Is there some reason not to do that, other than the script has not been tested much?</p>",
        "id": 447135527,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719383990
    },
    {
        "content": "<p>For what?</p>",
        "id": 447135763,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719384113
    },
    {
        "content": "<p>For the rename.</p>",
        "id": 447135780,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719384121
    },
    {
        "content": "<p>BinaryHeap?</p>",
        "id": 447135782,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719384121
    },
    {
        "content": "<p>No, the linter rename.</p>",
        "id": 447135835,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719384128
    },
    {
        "content": "<p>oh, the Std/Batteries</p>",
        "id": 447135839,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719384131
    },
    {
        "content": "<p>yes, ideally we would have added a <code>@[deprecated (since := ...)] alias ...</code></p>",
        "id": 447135875,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719384150
    },
    {
        "content": "<p>In this case it was not a lot of work, I imagine, but in general I can imagine that it is tedious.</p>",
        "id": 447135894,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719384156
    },
    {
        "content": "<p>Yes, and I think everyone is in furious agreement that more deprecation statements is better than less. :-)</p>",
        "id": 447135935,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719384177
    },
    {
        "content": "<p>Ok, I can try testing more the deprecation automation, maybe also looking into incorporating into lake refactor.</p>",
        "id": 447135994,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719384210
    },
    {
        "content": "<p>But currently, the standalone should \"work\", in the sense that I did some small number of tests and it seems to work.</p>",
        "id": 447136027,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719384239
    },
    {
        "content": "<p>Would it make sense to think about whether something like <code>PR summary</code> also had a \"Did you want to deprecate ...?\" section?</p>",
        "id": 447137363,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719384895
    },
    {
        "content": "<p>As part of the diff?</p>",
        "id": 447168118,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1719394489
    },
    {
        "content": "<p>Yes, thinking a little about what and how to flag changes...</p>",
        "id": 447173502,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1719395999
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/428973-nightly-testing/topic/Rename.20in.20Batteries/near/447137363\">said</a>:</p>\n<blockquote>\n<p>Would it make sense to think about whether something like <code>PR summary</code> also had a \"Did you want to deprecate ...?\" section?</p>\n</blockquote>\n<p>I think automating this step would be great, in principle! I haven't thought much about the details.</p>",
        "id": 447223073,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1719409607
    }
]