[
    {
        "content": "<p>This is giving everyone a heads-up that I'd like to implement a significant change to simp normal forms, and that this will include changes to Lean / Batteries / Mathlib.</p>\n<p>We want <code>L[i]</code> (which is implicitly <code>L[i]'h</code>, where <code>h : i &lt; L.length</code>) to be the simp normal form for List lookup, rather than <code>L.get ⟨i, h⟩</code>. We think this is a much better experience for new users, and aligns better with the <code>Array</code> normal forms.</p>\n<p>I've implemented this as <a href=\"https://github.com/leanprover/lean4/pull/4400\">lean#4400</a>, and the corresponding patches to Batteries and Mathlib are at </p>\n<ul>\n<li><a href=\"https://github.com/leanprover-community/batteries/pull/843\">batteries#843</a></li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/13815\">#13815</a></li>\n</ul>\n<p>You'll notice upon looking at these diffs that I have replaced many functions involving <code>get?</code>/<code>get</code> with functions involving <code>L[i]?</code>/<code>L[i]</code>, and in nearly all cases I have deprecated the old functions. I am willing to remove some (or even many) of these deprecations if there is a case for it --- they were useful to me to help make more thorough changes. I will note that (perhaps with one or two exceptions, I'll have to double check) all of these deprecations are actually respected (i.e. no longer used at all), and so in the interests in minimising the explosion of the API surface area I do prefer that we keep as many of these deprecations as possible.</p>",
        "id": 444583753,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718322862
    },
    {
        "content": "<p>I haven't looked through all of it yet but this feels like a breath of fresh air! <span aria-label=\"fresh air\" class=\"emoji emoji-1fa9f\" role=\"img\" title=\"fresh air\">:fresh_air:</span></p>",
        "id": 444585063,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1718323810
    },
    {
        "content": "<p>I'm hoping that the fact that all the downstream consequences work out okay means we can proceed on this pretty soon. Obviously once <a href=\"https://github.com/leanprover-community/mathlib4/pull/4400\">#4400</a> is merged we're setting a big train in motion.</p>",
        "id": 444585178,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718323947
    },
    {
        "content": "<p>I'm in favor of keeping all the deprecations. That will help me and others update their code to the new normal.</p>",
        "id": 444585595,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1718324295
    },
    {
        "content": "<p>Are you looking for optimizations or just a checkmark?</p>",
        "id": 444588383,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1718326329
    },
    {
        "content": "<p>Very happy to have suggested changes to any of the 3 PRs. But mostly just giving notice before we actually set things in motion. :-)</p>",
        "id": 444588552,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718326492
    },
    {
        "content": "<p>Integrated CI has now succeeded, so I'll plan to start merging over the weekend.</p>",
        "id": 444603437,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718335636
    },
    {
        "content": "<p>What's the performance cost?</p>",
        "id": 444613511,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718340288
    }
]