[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">test</span><span class=\"bp\">/</span><span class=\"n\">Lint.lean</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">4</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"kn\">namespace</span> <span class=\"bp\">'</span><span class=\"n\">add'</span> <span class=\"n\">is</span> <span class=\"n\">duplicated</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">declaration</span> <span class=\"bp\">'</span><span class=\"n\">add.add'</span> <span class=\"o\">[</span><span class=\"n\">linter.dupNamespace</span><span class=\"o\">]</span>\n<span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">test</span><span class=\"bp\">/</span><span class=\"n\">Lint.lean</span><span class=\"o\">:</span><span class=\"mi\">19</span><span class=\"o\">:</span><span class=\"mi\">4</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"kn\">namespace</span> <span class=\"bp\">'</span><span class=\"n\">Foo'</span> <span class=\"n\">is</span> <span class=\"n\">duplicated</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">declaration</span> <span class=\"bp\">'</span><span class=\"n\">Foo.Foo.foo'</span> <span class=\"o\">[</span><span class=\"n\">linter.dupNamespace</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Probably related to the new dupNamespace linted in std?</p>",
        "id": 431816479,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712524033
    },
    {
        "content": "<p>It sounds like a fair warning.</p>",
        "id": 431816596,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1712524187
    },
    {
        "content": "<p>Yeah, it's testing that the existing linter in mathlib does show the warning</p>",
        "id": 431816958,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712524533
    },
    {
        "content": "<p>Sorry, I am not at a computer anymore, but I found that putting <code>set_option ... false in set_option ... true in #guard_msgs in ...</code> tends to make <code>#guard_msgs</code> silence the linters.  Maybe this changed?</p>",
        "id": 431820000,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1712527269
    },
    {
        "content": "<p>this sounds like <a href=\"#narrow/stream/348111-std4/topic/.23guard_msgs.20doesn't.20silence.20warnings\">https://leanprover.zulipchat.com/#narrow/stream/348111-std4/topic/.23guard_msgs.20doesn't.20silence.20warnings</a> , but it's not a new issue, how are we handling it currently?</p>",
        "id": 431820407,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712527693
    },
    {
        "content": "<p>Yes, I suspect it is the same and it was some report of that kind that motivated me to try the double <code>set_option false in set_option true in</code>.  I figured that by the time the <code>#guard_msgs</code> issue was resolved, I would remove these workarounds.</p>",
        "id": 431821058,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1712528318
    },
    {
        "content": "<p>I think the difference here is that Std doesn't check for silent tests, but Mathlib does.</p>",
        "id": 431825893,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712533056
    },
    {
        "content": "<p>I've temporarily disabled these two tests on <code>nightly-testing</code> as I really want a green check so I can run the speed center to look at the overall impact of <a href=\"https://github.com/leanprover-community/mathlib4/pull/3807\">#3807</a>.</p>",
        "id": 431825952,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712533092
    },
    {
        "content": "<p>(<a href=\"https://github.com/leanprover/lean4/pull/3807\">lean4#3807</a>)</p>",
        "id": 431826645,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712533882
    }
]