[
    {
        "content": "<p>I think I remember this one from my undergrad topology course, isn't the answer $e^{1/x}$ or something?<br>\nIs it a free-for-all on the lemmas or is there some sort of permission we need to get started on this/are we waiting on something?</p>",
        "id": 418946434,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1706661363
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282271\">Bolton Bailey</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Smooth.20Urysohn.20Lemma/near/418946434\">said</a>:</p>\n<blockquote>\n<p>I think I remember this one from my undergrad topology course, isn't the answer $e^{1/x}$ or something?<br>\nIs it a free-for-all on the lemmas or is there some sort of permission we need to get started on this/are we waiting on something?</p>\n</blockquote>\n<p>We should soon make a regular status announcement (like we did for PFR, e.g., at <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Outstanding.20tasks.2C.20version.208.2E0\">https://leanprover.zulipchat.com/#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Outstanding.20tasks.2C.20version.208.2E0</a> ) to formally announce the tasks that people might volunteer to work on, but it may take a little time to get everything organized.  In the meantime, if anyone wants to claim a lemma to work on right away, please feel free to announce doing so in this thread, and we will try to keep track of everything as it happens. In particular, smooth Urysohn is definitely up for grabs right now!</p>\n<p>The lemmas in Section 2 of the blueprint (Wiener-Ikehara Tauberian theorem) have already been formalized at <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/main/PrimeNumberTheoremAnd/Wiener.lean\">https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/main/PrimeNumberTheoremAnd/Wiener.lean</a> , so they \"just\" need proofs; I just submitted a PR that will hopefully link up the lean code with the blueprint and create a number of blue bubbles that people can start working on.  Over the next few days I plan to do something similar with Section 5 (Elementary corollaries).  Maybe Alex can chime in on what the status is on the other sections right now.</p>",
        "id": 418947076,
        "sender_full_name": "Terence Tao",
        "timestamp": 1706661803
    },
    {
        "content": "<p>We have smooth partition of unity (and smooth bump functions as a dependency) in Mathlib.</p>",
        "id": 418982118,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706686466
    },
    {
        "content": "<p>See <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=exists_smooth_zero_one_of_isClosed#doc\">docs#exists_smooth_zero_one_of_isClosed</a> for Urysohns-like statement.</p>",
        "id": 418982785,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706686904
    },
    {
        "content": "<p>Ok, well, I now have a sorry-free statement of the smooth Urysohn lemma from the project using Yury's function, I'll PR that but feel free to ignore it if someone has come up with something better.</p>",
        "id": 419066982,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1706715475
    },
    {
        "content": "<p>Seems I need permission to PR directly by publishing a branch. Should I make a separate fork / can permission be granted to GitHub user <code>BoltonBailey</code>?</p>",
        "id": 419067600,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1706715652
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282271\">Bolton Bailey</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Smooth.20Urysohn.20Lemma/near/419067600\">said</a>:</p>\n<blockquote>\n<p>Seems I need permission to PR directly by publishing a branch. Should I make a separate fork / can permission be granted to GitHub user <code>BoltonBailey</code>?</p>\n</blockquote>\n<p>I just added you as a collaborator. But others were able to PR without needing this step, so I'm not sure why you weren't able to PR?... Thanks!</p>",
        "id": 419108062,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1706728572
    },
    {
        "content": "<p>It still says<br>\n<a href=\"/user_uploads/3121/1qT2TVVhs2vKkEUVjZ88UiDf/Screenshot-2024-01-31-at-2.26.34-PM.png\">Screenshot-2024-01-31-at-2.26.34-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/1qT2TVVhs2vKkEUVjZ88UiDf/Screenshot-2024-01-31-at-2.26.34-PM.png\" title=\"Screenshot-2024-01-31-at-2.26.34-PM.png\"><img src=\"/user_uploads/3121/1qT2TVVhs2vKkEUVjZ88UiDf/Screenshot-2024-01-31-at-2.26.34-PM.png\"></a></div>",
        "id": 419117845,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1706732799
    },
    {
        "content": "<p>You could do what is suggested on that picture: create a fork, work on it, then once your work is done create a PR to the main repository from the fork. I see that there are several PRs merged from forks already.</p>",
        "id": 419118605,
        "sender_full_name": "RÃ©my Degenne",
        "timestamp": 1706733122
    },
    {
        "content": "<p>Yeah, happy to do that if that's the workflow, but I am asking if that is the right way. I guess the answer is \"yes\"?</p>",
        "id": 419118770,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1706733180
    },
    {
        "content": "<p>Ok I see now that maybe the issue was that I needed to accept the invitation.</p>",
        "id": 419123417,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1706735231
    },
    {
        "content": "<p>Ok I have made a PR. I have also made another one for the SmoothExistence stub.</p>",
        "id": 419123771,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1706735403
    },
    {
        "content": "<p>What version is needed for the project? Possibly, we have something closer to that in Mathlib.</p>",
        "id": 419150873,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706748283
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Smooth.20Urysohn.20Lemma/near/419150873\">said</a>:</p>\n<blockquote>\n<p>What version is needed for the project? Possibly, we have something closer to that in Mathlib.</p>\n</blockquote>\n<p>I think you're asking about this line, right?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span><span class=\"bp\">@</span><span class=\"s2\">\"e659b1b\"</span>\n</code></pre></div>\n<p>Of course at some point we might want to update it to a later version of Mathlib (hopefully without breaking too much...)?</p>",
        "id": 419158652,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1706753480
    },
    {
        "content": "<p>I meant \"what version of the statement\", not \"what version of Mathlib\". Sorry for confusion.</p>",
        "id": 419159597,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706754015
    },
    {
        "content": "<p>Ah, I see. <span class=\"user-mention\" data-user-id=\"282271\">@Bolton Bailey</span> already did the version we need! I'm working on compiling a list of \"next low hanging fruit\"... Coming soon...</p>",
        "id": 419159977,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1706754286
    }
]