[
    {
        "content": "<p>We're getting to the point where those <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>π</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">2\\pi i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">πi</span></span></span></span> factors are going to start appearing everywhere, since we're actually trying to evaluate residues. Any objections to rolling them into the definition of <code>VerticalIntegral</code>, so they don't need to be explicated every time? Perhaps <code>RectangleIntegral</code> should also have a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mi>π</mi><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">1/(2\\pi i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">πi</span><span class=\"mclose\">)</span></span></span></span> in front, since we'll need to convert between the two regularly? Any suggestions, one way or another? (<span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span>)</p>",
        "id": 419272142,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1706801625
    },
    {
        "content": "<p>I don't think it will make too much difference, but if one were to put in the 2 pi i factor I would change the name slightly.  One possibility is to make an <code>abbrev</code> such as <code>VerticalIntegral'</code> that is simply <code>VerticalIntegral</code> divided by 2 pi i, then people can use whichever form of the integral they wish.</p>\n<p>In the Wiener-Ikehara section the 2 pi factor is moved to the exponent in order to be compatible with the Matlhlib Fourier transform, but I think this isn't too hard to deal with.  Again one could address this by defining a variant <code>e'</code> of the character <code>e</code> that doesn't have the 2 pi factor (i.e., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>e</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mi>i</mi><mi>x</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\"> e&#x27;(x) = e^{ix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mn>2</mn><mi>π</mi><mi>i</mi><mi>x</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\"> e(x) =e^{2\\pi i x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">πi</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span></span>) if desired, but I don't think this is going to be the main difficulty in the formalization of this section in any event.</p>",
        "id": 419277939,
        "sender_full_name": "Terence Tao",
        "timestamp": 1706803275
    },
    {
        "content": "<p>Ok good idea, I'll keep both, so we have the flexibility to use either as convenient...</p>",
        "id": 419278919,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1706803526
    }
]