[
    {
        "content": "<p>I'm starting to write out some possible spellings for various versions of the prime number theorem and I'm not obviously seeing what the \"best\" way to do so is.  For instance, here is the current proposal to spell the weak prime number theorem:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Nat</span> <span class=\"n\">Real</span> <span class=\"n\">BigOperators</span> <span class=\"n\">ArithmeticFunction</span> <span class=\"n\">Filter</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">WeakPNT</span> <span class=\"o\">:</span>\n    <span class=\"n\">Tendsto</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">↦</span> <span class=\"o\">((</span><span class=\"n\">Finset.range</span> <span class=\"n\">N</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"bp\">Λ</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>But I am also experimenting with this spelling for a slight variant of the PNT:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">BigOperators</span> <span class=\"n\">Filter</span> <span class=\"n\">Real</span> <span class=\"n\">Classical</span> <span class=\"n\">Asymptotics</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">chebyshev_asymptotic</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">E</span> <span class=\"bp\">=</span><span class=\"n\">o</span><span class=\"o\">[</span><span class=\"n\">atTop</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"n\">Finset.filter</span> <span class=\"n\">Nat.Prime</span> <span class=\"o\">(</span><span class=\"n\">Finset.range</span> <span class=\"bp\">⌊</span><span class=\"n\">x</span><span class=\"bp\">⌋₊</span><span class=\"o\">)),</span> <span class=\"n\">log</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">E</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>thus making the parameter real instead of natural number, and trying to utilize the o() notation.  The various results in Section 5 of the blueprint seem to slightly favor this type of spelling, but perhaps there is a better way.  Any thoughts would be appreciated.</p>",
        "id": 418969249,
        "sender_full_name": "Terence Tao",
        "timestamp": 1706677576
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> or <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span>, didn't you have plans to make asymptotic notation work for the natural numbers?</p>",
        "id": 418981766,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1706686262
    },
    {
        "content": "<p>What's <code>Λ</code> in <code>WeakPNT</code>?</p>",
        "id": 418981927,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706686350
    },
    {
        "content": "<p>Note that we have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Asymptotics.IsEquivalent#doc\">docs#Asymptotics.IsEquivalent</a></p>",
        "id": 418981964,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706686379
    },
    {
        "content": "<p>So you can write <code>f ~[atTop] Nat.cast</code></p>",
        "id": 418982008,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706686408
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Von_Mangoldt_function\">https://en.wikipedia.org/wiki/Von_Mangoldt_function</a>, no?</p>",
        "id": 418999986,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1706693979
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/How.20to.20spell.20asymptotics.3F/near/418981964\">said</a>:</p>\n<blockquote>\n<p>Note that we have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Asymptotics.IsEquivalent#doc\">docs#Asymptotics.IsEquivalent</a></p>\n</blockquote>\n<p>Nice!  Here is one form then:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">chebyshev_asymptotic</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"n\">Finset.filter</span> <span class=\"n\">Nat.Prime</span> <span class=\"o\">(</span><span class=\"n\">Finset.range</span> <span class=\"bp\">⌈</span><span class=\"n\">x</span><span class=\"bp\">⌉₊</span><span class=\"o\">)),</span> <span class=\"n\">log</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">~</span><span class=\"o\">[</span><span class=\"n\">atTop</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>It is true that one could also just work with the natural numbers</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">chebyshev_asymptotic'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"n\">Finset.filter</span> <span class=\"n\">Nat.Prime</span> <span class=\"o\">(</span><span class=\"n\">Finset.range</span> <span class=\"n\">n</span><span class=\"o\">)),</span> <span class=\"n\">log</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">~</span><span class=\"o\">[</span><span class=\"n\">atTop</span><span class=\"o\">]</span> <span class=\"n\">Nat.cast</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>but I am thinking it will be more convenient in elementary number theory applications to generalize these sorts of summatory estimates to the reals.  This is because we often use identities such as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∑</mo><mrow><mi>n</mi><mo>≤</mo><mi>x</mi></mrow></msub><mi>f</mi><mo>∗</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>d</mi><mo>≤</mo><mi>x</mi></mrow></msub><msub><mo>∑</mo><mrow><mi>m</mi><mo>≤</mo><mi>x</mi><mi mathvariant=\"normal\">/</mi><mi>d</mi></mrow></msub><mi>f</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mo stretchy=\"false\">)</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\sum_{n \\leq x} f*g(n) = \\sum_{d \\leq x} \\sum_{m \\leq x/d} f(d) g(m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1449em;vertical-align:-0.3949em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1455em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3949em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2247em;vertical-align:-0.4747em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1864em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3949em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2253em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mrel mtight\">≤</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4747em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span> (where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>∗</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f*g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> is the Dirichlet convolution of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo separator=\"true\">,</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f,g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>) and for this sort of manipulation it is likely better to permit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>d</mi><mo separator=\"true\">,</mo><mi>x</mi><mi mathvariant=\"normal\">/</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">x, d, x/d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">d</span></span></span></span> to all be reals rather than natural numbers.  (But perhaps we could have several versions of each of these theorems.  For instance it could make sense to have one version for <code>⌊x⌋₊</code> and one for <code>⌈x⌉₊</code>, corresponding to the ranges <code>n ≤ x</code> and <code>n &lt; x</code> respectively.  In principle one could try to set a uniform convention to just use one version throughout, but I think there is no consensus in the literature on which version is preferred.</p>",
        "id": 419076136,
        "sender_full_name": "Terence Tao",
        "timestamp": 1706717806
    },
    {
        "content": "<p>Perhaps what we will end up doing is create some general lemmas showing that various slightly different versions of a given asymptotic estimate are equivalent.</p>",
        "id": 419079561,
        "sender_full_name": "Terence Tao",
        "timestamp": 1706718845
    }
]