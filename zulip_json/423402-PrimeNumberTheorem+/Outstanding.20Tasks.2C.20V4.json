[
    {
        "content": "<p>Outstanding Tasks V4</p>\n<p>For V3, click <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Outstanding.20Tasks.2C.20V3/near/422862565\">here</a>.</p>\n<p>Here’s a set of targets:</p>\n<ol>\n<li><a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f9cdba6371c4c9198a19be01aeb4040ecd497b3b/PrimeNumberTheoremAnd/MellinCalculus.lean#L5C9-L5C49\">MeasureTheory.set_integral_integral_swap</a> is a version of <code>MeasureTheory.integral_integral_swap</code> for sets. Should be very easy. <strong> Done by <span class=\"user-mention\" data-user-id=\"613795\">@Vláďa Sedláček</span> </strong></li>\n<li><a href=\"https://alexkontorovich.github.io/PrimeNumberTheoremAnd/web/sect0003.html#MellinConvolutionTransform\">MellinConvolutionTransform</a> I made some partial progress; this should require just a little fluency with change of variables in integrals. <strong> Done by <span class=\"user-mention\" data-user-id=\"613795\">@Vláďa Sedláček</span> </strong></li>\n<li><a href=\"https://alexkontorovich.github.io/PrimeNumberTheoremAnd/web/sect0003.html#MellinOfPsi\">MellinOfPsi</a> This should just be one application of integration by parts, and trivial estimation. <strong> Progress by <span class=\"user-mention\" data-user-id=\"613795\">@Vláďa Sedláček</span> </strong></li>\n<li><a href=\"https://alexkontorovich.github.io/PrimeNumberTheoremAnd/web/sect0003.html#Smooth1Properties_below\">Smooth1Properties_below</a> The smoothed indicator function is exactly equal to 1 for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>&lt;</mo><mn>1</mn><mo>−</mo><mi>c</mi><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">x&lt;1-c \\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">cϵ</span></span></span></span>.</li>\n<li><a href=\"https://alexkontorovich.github.io/PrimeNumberTheoremAnd/web/sect0003.html#Smooth1Properties_above\">Smooth1Properties_above</a> Same except that the integral is zero if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>&gt;</mo><mn>1</mn><mo>+</mo><mi>c</mi><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">x&gt;1+c\\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">cϵ</span></span></span></span>. <strong> Done by <span class=\"user-mention\" data-user-id=\"613795\">@Vláďa Sedláček</span> </strong></li>\n</ol>\n<p>And continuing on the Fourier side:</p>\n<ol start=\"6\">\n<li><a href=\"https://alexkontorovich.github.io/PrimeNumberTheoremAnd/web/sect0002.html#decay\">Decay bounds</a> This should be a straightforward integration by parts (the constant C is explicit, as in the proof). <strong> Done by <span class=\"user-mention\" data-user-id=\"242586\">@Vincent Beffara</span> </strong></li>\n<li><a href=\"https://alexkontorovich.github.io/PrimeNumberTheoremAnd/web/sect0002.html#limiting\">Limiting Fourier Identity</a> This should also be straightforward - combine the two Fourier identities already proven, and invoke dominated convergence using the decay bound. <strong> Done by <span class=\"user-mention\" data-user-id=\"242586\">@Vincent Beffara</span> </strong></li>\n<li><a href=\"https://alexkontorovich.github.io/PrimeNumberTheoremAnd/web/sect0002.html#limiting-cor\">Limiting corollary</a> Immediate from previous identity and the <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/Fourier/RiemannLebesgueLemma.html#Real.zero_at_infty_fourierIntegral\">Riemann-Lebesgue lemma</a></li>\n<li><a href=\"https://alexkontorovich.github.io/PrimeNumberTheoremAnd/web/sect0002.html#schwarz-id\">Extension to Schwartz class</a>  This one is trickier: one wants to extend the identity in the previous corollary from C^2_c functions to Schwartz functions by applying smooth cutoffs (using the smooth Urysohn lemma) and take limits.  There will be a moderate amount of estimation of error terms that needs to be done.</li>\n</ol>\n<p>Thanks!</p>",
        "id": 423533587,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1709010214
    },
    {
        "content": "<ol>\n<li>is <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/93\">done</a>.</li>\n</ol>",
        "id": 423692879,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1709066693
    },
    {
        "content": "<p>I've made some <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/95\">progress</a> with 2., but there are two sorries from measure theory that I cannot seem to fill. I'll try moving on to other targets next week.</p>",
        "id": 424320242,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1709324561
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.integral_comp_mul_left_Ioi#doc\">docs#MeasureTheory.integral_comp_mul_left_Ioi</a> could be helpful (actually, that statement could be improved, <a href=\"https://github.com/leanprover-community/mathlib4/pull/11096\">it doesn't need the abs</a>).</p>\n<p>It may close your proof since it does not require any integrability assumption.</p>",
        "id": 424348995,
        "sender_full_name": "llllvvuu",
        "timestamp": 1709340372
    },
    {
        "content": "<p>Thanks, that's exactly what I needed! That finishes 2.</p>",
        "id": 424475202,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1709442970
    },
    {
        "content": "<p>Sorry Vlada, it gave me a merge conflict, and I thought I could handle it myself, but ended up breaking it... :(</p>",
        "id": 424486011,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1709453229
    },
    {
        "content": "<p>No worries, that was just because of the uncurryfication change (I worked with the old version), but I fixed it now.</p>",
        "id": 424508260,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1709471880
    },
    {
        "content": "<p>Having a look at 6, do we have this somewhere already?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">decay_bounds_aux3</span> <span class=\"o\">{</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">ContDiff</span> <span class=\"n\">ℝ</span> <span class=\"mi\">1</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">HasCompactSupport</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"bp\">𝓕</span> <span class=\"o\">(</span><span class=\"n\">deriv</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"bp\">𝓕</span> <span class=\"n\">ψ</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>\"This should be a straightforward integration by parts\"</p>",
        "id": 424608079,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1709543486
    },
    {
        "content": "<p>Yes we do! See <a href=\"https://github.com/leanprover-community/mathlib4/pull/9773\">#9773</a></p>",
        "id": 424618350,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1709546954
    },
    {
        "content": "<p>In particular, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=hasDerivAt_fourierIntegral#doc\">docs#hasDerivAt_fourierIntegral</a> should be what you want</p>",
        "id": 424618635,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1709547047
    },
    {
        "content": "<p>Not exactly, this is about the derivative of the Fourier transform, not the Fourier transform of the derivative, but it helps, thanks!</p>",
        "id": 424620220,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1709547565
    },
    {
        "content": "<p>I read too quickly... :)</p>",
        "id": 424625087,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1709549138
    },
    {
        "content": "<p>Here <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/104\">https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/104</a> up to an integration by parts lemma which will be a consequence of <a href=\"https://github.com/leanprover-community/mathlib4/pull/10099\">#10099</a></p>\n<p>From here to decay bounds should be mostly painless, I will give it a go later...</p>",
        "id": 424630607,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1709551047
    },
    {
        "content": "<p><code>decay_bounds</code> is almost done, the only remaining bits are these:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"k\">let</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">ψ</span> <span class=\"n\">t</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">π</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">deriv</span><span class=\"bp\">^</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">ψ</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">fourierChar</span> <span class=\"o\">(</span><span class=\"n\">Multiplicative.ofAdd</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">t</span> <span class=\"bp\">*</span> <span class=\"n\">u</span><span class=\"o\">)))</span>\n  <span class=\"k\">let</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">A</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">l4</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">t</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span> <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n  <span class=\"k\">have</span> <span class=\"n\">l5</span> <span class=\"o\">:</span> <span class=\"n\">Integrable</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 424649201,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1709557489
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kn\">open</span> <span class=\"n\">Real</span> <span class=\"n\">MeasureTheory</span>\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">let</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">A</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">l5</span> <span class=\"o\">:</span> <span class=\"n\">Integrable</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">unfold_let</span>\n    <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">div_eq_mul_inv</span><span class=\"o\">]</span>\n    <span class=\"n\">apply</span> <span class=\"n\">Integrable.const_mul</span>\n    <span class=\"n\">apply</span> <span class=\"n\">integrable_inv_one_add_sq</span>\n  <span class=\"n\">trivial</span>\n</code></pre></div>",
        "id": 424650836,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1709557936
    },
    {
        "content": "<p><code>decay_bounds</code> is sorry-free in the PR above, up to the lemma about integration by parts for compactly supported functions</p>",
        "id": 424666825,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1709562404
    },
    {
        "content": "<p>I added details to the blueprint for the proofs of 4,5. In case anyone wants to take a jab at formalizing them</p>",
        "id": 424696798,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1709569908
    },
    {
        "content": "<p>I've made some progress with <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/106\">3.</a> (<code>MellinOfPsi</code>) and <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/107\">5.</a> (<code>Smooth1Properties_above</code>).</p>",
        "id": 424698143,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1709570262
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"242586\">Vincent Beffara</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Outstanding.20Tasks.2C.20V4/near/424666825\">said</a>:</p>\n<blockquote>\n<p><code>decay_bounds</code> is sorry-free in the PR above, up to the lemma about integration by parts for compactly supported functions</p>\n</blockquote>\n<p>I ended up proving the necessary integration by parts lemmas ...</p>\n<p><a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/109\">https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/109</a></p>",
        "id": 424980410,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1709683284
    },
    {
        "content": "<p>Some progress on 7. (<code>limiting_fourier</code>)</p>",
        "id": 425198537,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1709768652
    },
    {
        "content": "<ol start=\"4\">\n<li>and 5. are <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/107\">done</a> (modulo a few basic properties in an estimation lemma).</li>\n</ol>",
        "id": 425635118,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1709950642
    },
    {
        "content": "<p>Progress on 7. is slower than I thought it would be, because I feel like I have to prove a lot of basic techniques that I did not find in Mathlib, like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">dirichlet_test</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hAa</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">A</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hAb</span> <span class=\"o\">:</span> <span class=\"n\">BoundedAtFilter</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hbb</span> <span class=\"o\">:</span> <span class=\"n\">Antitone</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Summable</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))))</span> <span class=\"o\">:</span>\n    <span class=\"n\">Summable</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>I also added a variant of the decay bounds:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">decay_bounds_cor</span> <span class=\"o\">{</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">ContDiff</span> <span class=\"n\">ℝ</span> <span class=\"mi\">2</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">HasCompactSupport</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∃</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"bp\">‖𝓕</span> <span class=\"n\">ψ</span> <span class=\"n\">u</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">u</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>(the constant is not explicit because it derives from a compactness argument).</p>\n<p>OTOH having to fill in holes in mathlib is one of the main points of having such side-projects anyway :-)</p>",
        "id": 425670028,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1709974925
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Monotone.cauchySeq_series_mul_of_tendsto_zero_of_bounded#doc\">docs#Monotone.cauchySeq_series_mul_of_tendsto_zero_of_bounded</a> claims to be \"<strong>Dirichlet's test</strong> for monotone sequences\" and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Antitone.cauchySeq_series_mul_of_tendsto_zero_of_bounded#doc\">docs#Antitone.cauchySeq_series_mul_of_tendsto_zero_of_bounded</a> for antitone ones.</p>",
        "id": 425716432,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1710016054
    },
    {
        "content": "<p>Yes, but we need a more general version here (they use the hypothesis that partial sums of one sequence are bounded, and we have partial sums being O(n)). But the proof is basically the same.</p>",
        "id": 425716994,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710016636
    },
    {
        "content": "<p>Only two self-contained sorries left for 7.:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">continuous_FourierIntegral</span> <span class=\"o\">{</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">Continuous</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">HasCompactSupport</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Continuous</span> <span class=\"o\">(</span><span class=\"bp\">𝓕</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>should follow from standard lemmas about parameterized integrals, I haven't looked yet, and</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">limiting_fourier_lim1_aux</span> <span class=\"o\">(</span><span class=\"n\">hcheby</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">∑</span> <span class=\"n\">n</span> <span class=\"k\">in</span> <span class=\"n\">Finset.range</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">n</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Summable</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">n</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.log</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>should follow from summation by parts / Dirichlet test plus comparison with sum of inverse of <code>n * (log n) ^ 2</code> plus convergence of that.</p>",
        "id": 425762938,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710067131
    },
    {
        "content": "<p>Are you aware of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=VectorFourier.fourierIntegral_continuous#doc\">docs#VectorFourier.fourierIntegral_continuous</a> for the continuity?</p>",
        "id": 425767433,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1710071683
    },
    {
        "content": "<p>Ah, in fact I hadn't even looked in mathlib for the result yet, I was focussing on other parts of the proof ... Thanks!</p>",
        "id": 425787858,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710090013
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">continuous_FourierIntegral</span> <span class=\"o\">{</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">Continuous</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">HasCompactSupport</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Continuous</span> <span class=\"o\">(</span><span class=\"bp\">𝓕</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">VectorFourier.fourierIntegral_continuous</span> <span class=\"n\">continuous_fourierChar</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">continuous_mul</span><span class=\"o\">)</span> <span class=\"bp\">&lt;|</span>\n    <span class=\"n\">h1.integrable_of_hasCompactSupport</span> <span class=\"n\">h2</span>\n</code></pre></div>",
        "id": 425788208,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710090296
    },
    {
        "content": "<p>One sorry left for 7.:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">nnabla</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">HSub</span> <span class=\"n\">E</span> <span class=\"n\">E</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">u</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">nnabla_bound</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">nnabla</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">C</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">))</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span><span class=\"n\">O</span><span class=\"o\">[</span><span class=\"n\">atTop</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">Real.log</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I haven't yet found a non-painful way to prove such things...</p>",
        "id": 425902234,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710161462
    },
    {
        "content": "<p>One could set up a bit of API for <code>nnabla</code> to help you.  In particular, </p>\n<p><code>nnabla (C • f) = C • (nnabla f)</code></p>\n<p><code>nnabla (fun n =&gt; f n + C) = nnabla f</code></p>\n<p><code>nnabla (f * g) n = (nnabla f n) * (g n) + (f (n+1)) * (nnabla g n)</code></p>\n<p><code>nnabla (1/f) n = - (nabla f n) / ((f n) * (f (n+1))</code></p>\n<p><code>nnabla log =O[atTop] (fun n =&gt; 1 / n)</code></p>\n<p><code>nnabla (fun n =&gt; n ) = 1</code></p>\n<p>and the <code>=O[]</code> calculus should get you most of the way there eventually...</p>",
        "id": 425945969,
        "sender_full_name": "Terence Tao",
        "timestamp": 1710173816
    },
    {
        "content": "<p>The main pain points come from lemmas about monotone sequences while here the sequences are only eventually monotone because of trash values at 0, things like this</p>",
        "id": 425954384,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710175243
    },
    {
        "content": "<p>Define a shifted sequence then?</p>",
        "id": 425998753,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1710187068
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"579936\">Gareth Ma</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Outstanding.20Tasks.2C.20V4/near/425998753\">said</a>:</p>\n<blockquote>\n<p>Define a shifted sequence then?</p>\n</blockquote>\n<p>Yes, exactly, and show in API that a sequence is summable iff its shift is summable and so on. But, sometimes the amount of shift to be done is not fixed (like e.g. <code>log (n / a) ^ 2</code> which does appear in the estimates, with variable <code>a</code>, and is only increasing starting at <code>n = a</code>). Nothing unfeasible, but it takes time...</p>",
        "id": 426004302,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710189362
    },
    {
        "content": "<p>There is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=summable_nat_add_iff#doc\">docs#summable_nat_add_iff</a> in case this helps...</p>",
        "id": 426007268,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1710190626
    },
    {
        "content": "<p>Task 7. is done at <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/111\">https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/111</a> (700-line PR, mergeable but in dire need of refactoring ...)</p>",
        "id": 426026983,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710199517
    },
    {
        "content": "<p>Wow, that was surprisingly difficult.  What part of the argument was the most challenging to formalize?  Are there some gaps in current Mathlib API that need to be filled? (I'm wondering if we should tweak some of the remaining blueprint to avoid whatever obstacles you ended up encountering.)</p>",
        "id": 426032548,
        "sender_full_name": "Terence Tao",
        "timestamp": 1710203555
    },
    {
        "content": "<p>I wish I had a clear answer to that question. A big part of it is that I was discovering the <code>=O[]</code> API along the way, so upon refactoring things will get better. Another part is that I did not pause enough to think about the principled approach of developing the needed API from the ground up. But more generally, there was no precise point in the argument that was really more difficult, it was more about fighting friction all the time.</p>",
        "id": 426083535,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710235265
    },
    {
        "content": "<p>Any idea how to <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/d8e7c1e037b27d9b98d60a2889549e40fa26e070/PrimeNumberTheoremAnd/MellinCalculus.lean#L1203\">prove</a> <code>↑(MellinConvolution (fun x ↦ if x ≤ 1 then 1 else 0) (DeltaSpike Ψ ε) x) =\n  MellinConvolution (fun x ↦ if x ≤ 1 then 1 else 0) (fun x ↦ ↑(DeltaSpike Ψ ε x)) x</code>? Should be a simple coercion matter, but none of the tactics I tried work.</p>",
        "id": 426168350,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1710261413
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">MellinOfSmooth1a</span> <span class=\"o\">(</span><span class=\"bp\">Ψ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">εpos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">s.re</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">MellinTransform</span> <span class=\"o\">((</span><span class=\"n\">Smooth1</span> <span class=\"bp\">Ψ</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"n\">MellinTransform</span> <span class=\"o\">(</span><span class=\"bp\">Ψ</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"bp\">*</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">Smooth1</span>\n  <span class=\"c1\">-- let g := DeltaSpike Ψ ε</span>\n  <span class=\"k\">let</span> <span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span>  <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">DeltaSpike</span> <span class=\"bp\">Ψ</span> <span class=\"n\">ε</span> <span class=\"n\">x</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">IntegrableOn</span> <span class=\"o\">(</span><span class=\"n\">Function.uncurry</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">↦</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">y</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">*</span>\n      <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">/</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">Ioi</span> <span class=\"mi\">0</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">Ioi</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">MellinConvolutionTransform</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"n\">g</span> <span class=\"n\">s</span> <span class=\"n\">this</span>\n  <span class=\"n\">convert</span> <span class=\"n\">this</span> <span class=\"n\">using</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">·</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">g</span><span class=\"o\">]</span>\n    <span class=\"n\">congr</span><span class=\"bp\">;</span> <span class=\"n\">funext</span> <span class=\"n\">x</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">MellinConvolution</span><span class=\"o\">,</span> <span class=\"n\">DeltaSpike</span><span class=\"o\">]</span>\n    <span class=\"n\">convert</span> <span class=\"n\">integral_ofReal.symm</span>\n    <span class=\"n\">push_cast</span>\n    <span class=\"n\">congr</span>\n    <span class=\"n\">change</span> <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">ofReal'</span> <span class=\"n\">_</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">apply_ite</span> <span class=\"n\">ℝ</span> <span class=\"n\">ℂ</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">MellinOf1</span> <span class=\"n\">s</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">MellinOfDeltaSpike</span> <span class=\"bp\">Ψ</span> <span class=\"n\">εpos</span> <span class=\"n\">s</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 426186996,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710267376
    },
    {
        "content": "<p>No idea why it is so complicated...</p>",
        "id": 426187741,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710267674
    },
    {
        "content": "<p>Great, thanks, I was missing <code>integral_ofReal</code>.</p>",
        "id": 426198311,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1710271767
    },
    {
        "content": "<p>Task 8. is done (and this time it really was as immediate as the math was indicating <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span>)</p>",
        "id": 426751080,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710511699
    },
    {
        "content": "<p>So I started looking at <code>limiting_cor_schwartz</code> and it seems that it is going to take a while. The idea of the proof is clear enough but controlling <code>\\psi_{&gt;R}</code> as described via <code>decay_bounds</code> means extending <code>decay_bounds</code> itself to the Schwartz class (which, sure it holds especially with an explicit constant that does not depend on the support). And the extension of that starts with truncation with a smooth cutoff, essentially duplicating a large part of the blueprint for <code>limiting_cor_schwartz</code>.</p>\n<p>So it seems that there are two reasonable approaches:</p>\n<ol>\n<li>Go through the whole file and replace everywhere \"compact support\" with \"Schwarz class\" (or something in between like C^2 with fast enough decay of the function and its first two derivatives, so that we do not lose any generality). But perhaps compact support is really fundamental at some step of the existing proof.</li>\n<li>Build some API around smooth truncation of functions (a part of that may already be in Mathlib somewhere, I did not look seriously yet), and use it to implement the blueprint as it is.</li>\n</ol>\n<p>Option 2 is certainly something of more general interest, but it would definitely take (a lot) longer. Any preference?</p>",
        "id": 427665166,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710845649
    },
    {
        "content": "<p>Hmm, well, compact support is needed in one place: to show that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>i</mi><mi>t</mi><mo stretchy=\"false\">)</mo><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G(1+it) \\psi(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span> is absolutely integrable (or more precisely, that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mi>σ</mi><mo>+</mo><mi>i</mi><mi>t</mi><mo stretchy=\"false\">)</mo><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G(\\sigma+it) \\psi(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span> is dominated by an absolutely integrable function as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span> approaches 1) in Lemma 4.  If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> were merely required to be Schwartz, then we would need an extra hypothesis that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> is of polynomial growth, which is true for our specific application, but makes the Wiener-Ikehara theorem weaker as this is not one of the standard hypotheses of the theorem.</p>\n<p>So perhaps what is needed is to perform Approach 1 for the decay bounds lemma (i.e., generalize Lemma 3 to Schwartz functions rather than compactly supported functions), and whatever is needed from approach 2 to then finish the job.  To prove the decay bounds lemma for Schwartz functions, I think the main thing that is needed is an integration by parts lemma of the form</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∫</mo><mi mathvariant=\"bold\">R</mi></msub><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><msup><mi>g</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>−</mo><msub><mo>∫</mo><mi mathvariant=\"bold\">R</mi></msub><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>d</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\"> \\int_{\\bf R} f(x) g&#x27;(x)\\ dx = - \\int_{\\bf R} f&#x27;(x) g(x)\\ dx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1608em;vertical-align:-0.3558em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1245em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">R</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3558em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1608em;vertical-align:-0.3558em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1245em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">R</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3558em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span></span></span><br>\nwhenever <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo separator=\"true\">,</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f, g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> are continuously differentiable, with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">fg</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> tending to zero at infinity, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><msup><mi>g</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">fg&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f&#x27;g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> both absolutely integrable.  This should be doable by integrating by parts on some finite interval <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo>−</mo><mi>R</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[-R,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> and then sending <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> to infinity.  That should be good enough to obtain the key identity<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><msup><mi>u</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo><mover accent=\"true\"><mi>ψ</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∫</mo><mi mathvariant=\"bold\">R</mi></msub><mo stretchy=\"false\">(</mo><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mfrac><mn>1</mn><mrow><mn>4</mn><msup><mi>π</mi><mn>2</mn></msup></mrow></mfrac><msup><mi>ψ</mi><mrow><mo mathvariant=\"normal\">′</mo><mo mathvariant=\"normal\">′</mo></mrow></msup><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mi>e</mi><mo stretchy=\"false\">(</mo><mo>−</mo><mi>t</mi><mi>u</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>d</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\"> (1 + u^2) \\hat \\psi(u) = \\int_{\\bf R} (\\psi(t) - \\frac{1}{4\\pi^2} \\psi&#x27;&#x27;(t)) e(-tu)\\ dt</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2079em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9579em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1389em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1608em;vertical-align:-0.3558em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1245em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">R</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3558em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">))</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span></span></span><br>\nfor Schwartz <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span>, which should then give the decay bounds.  (The <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> in the numerator in the blueprint for this formula is a typo.)</p>",
        "id": 427796479,
        "sender_full_name": "Terence Tao",
        "timestamp": 1710876233
    },
    {
        "content": "<p>Actually, a better way to proceed may be to show that (a) Schwartz functions are preserved under the operation of taking derivatives; (b) If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> is Schwartz, then Fourier transform of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>ψ</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\psi&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ξ</mi><mo>↦</mo><mn>2</mn><mi>π</mi><mi>i</mi><mi>ξ</mi><mover accent=\"true\"><mi>ψ</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>ξ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\xi \\mapsto 2\\pi i \\xi \\hat \\psi(\\xi)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2079em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">πi</span><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9579em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1389em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"mclose\">)</span></span></span></span>, as this will also give the decay bounds; and when combined with (a') Schwartz functions are preserved under the operation of multiplying by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>, and (b')  If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\"> \\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> is Schwartz, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>ψ</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\"> \\hat \\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1523em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9579em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1389em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span> is differentiable and the Fourier transform of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>↦</mo><mi>x</mi><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x \\mapsto x \\psi(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.522em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mo>−</mo><mn>1</mn></mrow><mrow><mn>2</mn><mi>π</mi><mi>i</mi></mrow></mfrac><mfrac><mi>d</mi><mrow><mi>d</mi><mi>ξ</mi></mrow></mfrac><mover accent=\"true\"><mi>ψ</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\frac{-1}{2\\pi i} \\frac{d}{d\\xi} \\hat \\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.439em;vertical-align:-0.4811em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">πi</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04601em;\">ξ</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9579em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1389em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span>, will also give that the Fourier transform of a Schwartz function is Schwartz, as this will be needed very shortly also.  (Claim (a) will still need the integration by parts lemma indicated above, which may still be worth proving as a standalone lemma.)</p>",
        "id": 427797228,
        "sender_full_name": "Terence Tao",
        "timestamp": 1710876543
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.integral_mul_deriv_eq_deriv_mul#doc\">docs#MeasureTheory.integral_mul_deriv_eq_deriv_mul</a> may help</p>",
        "id": 427806187,
        "sender_full_name": "llllvvuu",
        "timestamp": 1710880178
    },
    {
        "content": "<p>OK, that does help.  So I think the subgoals for <code>limiting_cor_schwarz</code> could be</p>\n<ol>\n<li>Show that the derivative of a Schwartz function is Schwartz.</li>\n<li>Show that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> is Schwartz, then the Fourier transform of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>ψ</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\psi&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo>↦</mo><mn>2</mn><mi>π</mi><mi>i</mi><mi>u</mi><mover accent=\"true\"><mi>ψ</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">u \\mapsto 2\\pi i u \\hat \\psi(u)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.522em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2079em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">πi</span><span class=\"mord mathnormal\">u</span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9579em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1389em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span></span></span></span> (here we would use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.integral_mul_deriv_eq_deriv_mul#doc\">docs#MeasureTheory.integral_mul_deriv_eq_deriv_mul</a> and also part 1, as well as the fact that Schwartz functions are absolutely integrable and decay to zero at infinity. )</li>\n<li>Show that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> is Schwartz, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo>↦</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><msup><mi>u</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo><mover accent=\"true\"><mi>ψ</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">u \\mapsto (1+u^2) \\hat \\psi(u)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.522em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2079em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9579em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1389em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span></span></span></span> is the Fourier transform of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi><mo>−</mo><mfrac><mn>1</mn><mrow><mn>4</mn><msup><mi>π</mi><mn>2</mn></msup></mrow></mfrac><msup><mi>ψ</mi><mrow><mo mathvariant=\"normal\">′</mo><mo mathvariant=\"normal\">′</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\psi - \\frac{1}{4\\pi^2} \\psi&#x27;&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′′</span></span></span></span></span></span></span></span></span></span></span></span>.  (This comes from 1, 2, and linearity of the Fourier transform.)</li>\n<li>Establish <code>decay_bounds</code> for Schwartz functions (this should be a modification of the existing proof once we have 3.)</li>\n<li>At this point the blueprint proof of <code>limiting_cor_schwartz</code> will hopefully be straightforward?</li>\n</ol>",
        "id": 427815388,
        "sender_full_name": "Terence Tao",
        "timestamp": 1710884047
    },
    {
        "content": "<p>This feels very doable. 1. is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=SchwartzMap.derivCLM#doc\">docs#SchwartzMap.derivCLM</a> 2. is <code>decay_bounds_aux3</code> in <code>Wiener.lean</code> extended from compact support to Schwartz class but compact support is only used in integration by parts so it should be reasonably easy, and the rest feels rather direct.</p>",
        "id": 427817871,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710885209
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"657719\">Terence Tao</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Outstanding.20Tasks.2C.20V4/near/427815388\">said</a>:</p>\n<blockquote>\n<p>[...]</p>\n<ol start=\"2\">\n<li>Show that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> is Schwartz, then the Fourier transform of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>ψ</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\psi&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo>↦</mo><mn>2</mn><mi>π</mi><mi>i</mi><mi>u</mi><mover accent=\"true\"><mi>ψ</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">u \\mapsto 2\\pi i u \\hat \\psi(u)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.522em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2079em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">πi</span><span class=\"mord mathnormal\">u</span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9579em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1389em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span></span></span></span> (here we would use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.integral_mul_deriv_eq_deriv_mul#doc\">docs#MeasureTheory.integral_mul_deriv_eq_deriv_mul</a> and also part 1, as well as the fact that Schwartz functions are absolutely integrable and decay to zero at infinity. )</li>\n</ol>\n</blockquote>\n<p><del>This is already in mathlib: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=hasDerivAt_fourierIntegral#doc\">docs#hasDerivAt_fourierIntegral</a> (under different assumptions, i.e. that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">f&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mn>1</mn></msup></mrow><annotation encoding=\"application/x-tex\">L^1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span>, but it shouldn't be hard to check that these hold for Schwartz functions).</del> EDIT: sorry, this is wrong, I was confusing this with the opposite statement (derivative of the transform, not transform of the derivative) – apologies for the noise!</p>",
        "id": 427866682,
        "sender_full_name": "David Loeffler",
        "timestamp": 1710919328
    },
    {
        "content": "<p>I can prove this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">fourierIntegral_deriv</span> <span class=\"o\">(</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">SchwartzMap</span> <span class=\"n\">ℝ</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">𝓕</span> <span class=\"o\">(</span><span class=\"n\">deriv</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"bp\">𝓕</span> <span class=\"n\">ψ</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>but the proof is awfully ugly, I am rewriting it.</p>",
        "id": 427922917,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710939912
    },
    {
        "content": "<p>BTW, it would definitely make sense to have a result like this under more minimal hypotheses, so that we can apply it both to Schwartz class and to C^2 with compact support, because as it is we will end up with a lot of code duplication. Ditto for the decay bounds, we should state it on W^{2,1} or something.</p>",
        "id": 427923443,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710940077
    },
    {
        "content": "<p>One set of hypotheses could be: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> is continuously differentiable, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>ψ</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\psi&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> are both absolutely integrable with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> converging to zero at infinity.  Actually, if one wanted to work a bit harder, one could drop the hypothesis of converging to zero at infinity, because the absolute integrability implies convergence to zero along a sequence tending to infinity, which suffices; but then one could not use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.integral_mul_deriv_eq_deriv_mul#doc\">docs#MeasureTheory.integral_mul_deriv_eq_deriv_mul</a>  \"out of the box\".  Then one would be close to the minimal hypotheses given that the Fourier transform in Lean only gives non-junk values for absolutely integrable functions (if I understand the documentation correctly).</p>",
        "id": 427950356,
        "sender_full_name": "Terence Tao",
        "timestamp": 1710947263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481963\">David Loeffler</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Outstanding.20Tasks.2C.20V4/near/427866682\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"657719\">Terence Tao</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Outstanding.20Tasks.2C.20V4/near/427815388\">said</a>:<br>\n<del>This is already in mathlib: <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=hasDerivAt_fourierIntegral#doc\">docs#hasDerivAt_fourierIntegral</a> (under different assumptions, i.e. that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">f&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mn>1</mn></msup></mrow><annotation encoding=\"application/x-tex\">L^1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span>, but it shouldn't be hard to check that these hold for Schwartz functions).</del> EDIT: sorry, this is wrong, I was confusing this with the opposite statement (derivative of the transform, not transform of the derivative) – apologies for the noise!</p>\n</blockquote>\n<p>No problem - that opposite statement will also come in handy later when we need to show that the Fourier transform of a Schwartz function is Schwartz.</p>",
        "id": 427950558,
        "sender_full_name": "Terence Tao",
        "timestamp": 1710947307
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"657719\">Terence Tao</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Outstanding.20Tasks.2C.20V4/near/427950356\">said</a>:</p>\n<blockquote>\n<p>One set of hypotheses could be: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> is continuously differentiable, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>ψ</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\psi&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> are both absolutely integrable with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span> converging to zero at infinity.  Actually, if one wanted to work a bit harder, one could drop the hypothesis of converging to zero at infinity, because the absolute integrability implies convergence to zero along a sequence tending to infinity, which suffices; but then one could not use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.integral_mul_deriv_eq_deriv_mul#doc\">docs#MeasureTheory.integral_mul_deriv_eq_deriv_mul</a>  \"out of the box\".  Then one would be close to the minimal hypotheses given that the Fourier transform in Lean only gives non-junk values for absolutely integrable functions (if I understand the documentation correctly).</p>\n</blockquote>\n<p>Like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">fourierIntegral_deriv</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">f'</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">HasDerivAt</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">f'</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">Integrable</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"n\">Integrable</span> <span class=\"n\">f'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h4</span> <span class=\"o\">:</span> <span class=\"n\">Tendsto</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">cocompact</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"mi\">0</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">𝓕</span> <span class=\"n\">f'</span> <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"bp\">𝓕</span> <span class=\"n\">f</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">convert_to</span> <span class=\"bp\">∫</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">e</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">*</span> <span class=\"n\">f'</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"bp\">∫</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">e</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">v</span>\n    <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">try</span> <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">fourierIntegral_real_eq</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n  <span class=\"k\">have</span> <span class=\"n\">l1</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">HasDerivAt</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"n\">u</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">hasDerivAt_e</span>\n  <span class=\"k\">have</span> <span class=\"n\">l3</span> <span class=\"o\">:</span> <span class=\"n\">Integrable</span> <span class=\"o\">(</span><span class=\"bp\">⇑</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">f'</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">fourierIntegral_deriv_aux2</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"n\">h3</span>\n  <span class=\"k\">have</span> <span class=\"n\">l4</span> <span class=\"o\">:</span> <span class=\"n\">Integrable</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"bp\">-</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"n\">u</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"o\">(</span><span class=\"n\">fourierIntegral_deriv_aux2</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"n\">h2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">const_mul</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">l7</span> <span class=\"o\">:</span> <span class=\"n\">Tendsto</span> <span class=\"o\">(</span><span class=\"bp\">⇑</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cocompact</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">tendsto_zero_iff_norm_tendsto_zero</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">h4</span>\n  <span class=\"k\">have</span> <span class=\"n\">l5</span> <span class=\"o\">:</span> <span class=\"n\">Tendsto</span> <span class=\"o\">(</span><span class=\"bp\">⇑</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">atBot</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">l7.mono_left</span> <span class=\"n\">_root_.atBot_le_cocompact</span>\n  <span class=\"k\">have</span> <span class=\"n\">l6</span> <span class=\"o\">:</span> <span class=\"n\">Tendsto</span> <span class=\"o\">(</span><span class=\"bp\">⇑</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">l7.mono_left</span> <span class=\"n\">_root_.atTop_le_cocompact</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">integral_mul_deriv_eq_deriv_mul</span> <span class=\"n\">l1</span> <span class=\"n\">h1</span> <span class=\"n\">l3</span> <span class=\"n\">l4</span> <span class=\"n\">l5</span> <span class=\"n\">l6</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">integral_neg</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">integral_mul_left</span><span class=\"o\">]</span> <span class=\"bp\">;</span> <span class=\"n\">congr</span> <span class=\"bp\">;</span> <span class=\"n\">ext</span> <span class=\"bp\">;</span> <span class=\"n\">ring</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">fourierIntegral_deriv_schwartz</span> <span class=\"o\">(</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"bp\">𝓢</span><span class=\"o\">(</span><span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">ℂ</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">𝓕</span> <span class=\"o\">(</span><span class=\"n\">deriv</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"bp\">𝓕</span> <span class=\"n\">ψ</span> <span class=\"n\">u</span> <span class=\"o\">:=</span>\n  <span class=\"n\">fourierIntegral_deriv</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">ψ.differentiableAt.hasDerivAt</span><span class=\"o\">)</span> <span class=\"n\">ψ.integrable</span>\n    <span class=\"o\">(</span><span class=\"n\">SchwartzMap.derivCLM</span> <span class=\"n\">ℝ</span> <span class=\"n\">ψ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">integrable</span> <span class=\"n\">ψ.toZeroAtInfty.zero_at_infty'</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">fourierIntegral_deriv_compactSupport</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">ContDiff</span> <span class=\"n\">ℝ</span> <span class=\"mi\">1</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">HasCompactSupport</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">𝓕</span> <span class=\"o\">(</span><span class=\"n\">deriv</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"bp\">𝓕</span> <span class=\"n\">f</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">l1</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">HasDerivAt</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">deriv</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">h1.differentiable</span> <span class=\"n\">le_rfl</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">differentiableAt.hasDerivAt</span>\n  <span class=\"k\">have</span> <span class=\"n\">l2</span> <span class=\"o\">:</span> <span class=\"n\">Integrable</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">h1.continuous.integrable_of_hasCompactSupport</span> <span class=\"n\">h2</span>\n  <span class=\"k\">have</span> <span class=\"n\">l3</span> <span class=\"o\">:</span> <span class=\"n\">Integrable</span> <span class=\"o\">(</span><span class=\"n\">deriv</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">h1.continuous_deriv</span> <span class=\"n\">le_rfl</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">integrable_of_hasCompactSupport</span> <span class=\"n\">h2.deriv</span>\n  <span class=\"n\">exact</span> <span class=\"n\">fourierIntegral_deriv</span> <span class=\"n\">l1</span> <span class=\"n\">l2</span> <span class=\"n\">l3</span> <span class=\"n\">h2.is_zero_at_infty</span> <span class=\"n\">u</span>\n</code></pre></div>",
        "id": 427952776,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710947787
    },
    {
        "content": "<blockquote>\n<p>the Fourier transform in Lean only gives non-junk values for absolutely integrable functions (if I understand the documentation correctly)</p>\n</blockquote>\n<p>That's correct, at least at present. (I think Sebastian Gouezel is working on Fourier transforms of tempered distributions, but it hasn't landed in mathlib yet.)</p>",
        "id": 427971141,
        "sender_full_name": "David Loeffler",
        "timestamp": 1710952646
    },
    {
        "content": "<p>Hmm, if there is ongoing work to establish Fourier transforms for tempered distributions, then surely that work would also have to show at some point that the (inverse) Fourier transform of a Schwartz function is Schwartz, which we will soon need ourselves...</p>",
        "id": 428005780,
        "sender_full_name": "Terence Tao",
        "timestamp": 1710964515
    },
    {
        "content": "<p>Decay bounds in the Schwartz class here <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/129\">https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/129</a> :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">decay_bounds</span> <span class=\"o\">{</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">ContDiff</span> <span class=\"n\">ℝ</span> <span class=\"mi\">2</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">HasCompactSupport</span> <span class=\"n\">ψ</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">ψ</span> <span class=\"n\">t</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hA'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">deriv</span><span class=\"bp\">^</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">ψ</span> <span class=\"n\">t</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"bp\">‖𝓕</span> <span class=\"n\">ψ</span> <span class=\"n\">u</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">π</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">u</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"n\">decay_bounds_W21</span> <span class=\"o\">(</span><span class=\"n\">W21_of_compactSupport</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span><span class=\"o\">)</span> <span class=\"n\">hA</span> <span class=\"n\">hA'</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">decay_bounds_schwartz</span> <span class=\"o\">(</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"bp\">𝓢</span><span class=\"o\">(</span><span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">ℂ</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">ψ</span> <span class=\"n\">t</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hA'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">deriv</span><span class=\"bp\">^</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">ψ</span> <span class=\"n\">t</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"bp\">‖𝓕</span> <span class=\"n\">ψ</span> <span class=\"n\">u</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">π</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">u</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"n\">decay_bounds_W21</span> <span class=\"o\">(</span><span class=\"n\">W21_of_schwartz</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"n\">hA</span> <span class=\"n\">hA'</span> <span class=\"n\">u</span>\n</code></pre></div>\n<p>At the moment we are not using the exact value for the bound, and the exact shape of the assumption on \\psi is not really used either, it is only exploited to show that both \\psi and its second derivative are integrable (with a small L^1 norm). Using this as a hypothesis instead would likely simplify the proof of <code>limiting_cor_schwartz</code> because instead of proving such a quantitative bound on the function minus its smooth truncation it seems that only convergence in L^1 of the truncated function would suffice?</p>",
        "id": 428043252,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1710984928
    },
    {
        "content": "<p>I refactored it just in case : this is true</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">decay_bounds_key</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">W21</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">‖𝓕</span> <span class=\"n\">f</span> <span class=\"n\">u</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"o\">((</span><span class=\"bp\">∫</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">v</span><span class=\"bp\">‖</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∫</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">deriv</span> <span class=\"o\">(</span><span class=\"n\">deriv</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">v</span><span class=\"bp\">‖</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">u</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span>\n</code></pre></div>\n<p>and this is also true</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">decay_bounds_aux</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">AEStronglyMeasurable</span> <span class=\"n\">f</span> <span class=\"n\">volume</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">t</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">A</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∫</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">t</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">A</span>\n</code></pre></div>\n<p>and this follows</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">decay_bounds_W21</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">W21</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">t</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">hA'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">deriv</span> <span class=\"o\">(</span><span class=\"n\">deriv</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">t</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">‖𝓕</span> <span class=\"n\">f</span> <span class=\"n\">u</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">π</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">A</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">u</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>but this takes a shortcut</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">decay_bounds_cor</span> <span class=\"o\">{</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">ContDiff</span> <span class=\"n\">ℝ</span> <span class=\"mi\">2</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">HasCompactSupport</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∃</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"bp\">‖𝓕</span> <span class=\"n\">ψ</span> <span class=\"n\">u</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">u</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">div_eq_mul_inv</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">decay_bounds_key</span> <span class=\"o\">(</span><span class=\"n\">W21_of_compactSupport</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span><span class=\"o\">)⟩</span>\n</code></pre></div>\n<p>which is enough for <code>limiting_fourier</code> but not for controlling tails after smooth cutoffs.</p>",
        "id": 428088912,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711014134
    },
    {
        "content": "<p>In fact <code>(∫ v, ‖f v‖) + (4 * π ^ 2)⁻¹ * (∫ v, ‖deriv (deriv f) v‖)</code> is a natural norm on the pseudo-W21 space here, and probably what is needed now is convergence of larger and larger truncations to the function in the corresponding topology.</p>",
        "id": 428089391,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711014320
    },
    {
        "content": "<p>I like this approach.  One could try to show that the functional <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi><mo>↦</mo><msub><mrow><mi mathvariant=\"normal\">lim sup</mi><mo>⁡</mo></mrow><mrow><mi>x</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></msub><mi mathvariant=\"normal\">∣</mi><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mfrac><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><mi>n</mi></mfrac><mover accent=\"true\"><mi>ψ</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi></mrow></mfrac><mi>log</mi><mo>⁡</mo><mfrac><mi>n</mi><mi>x</mi></mfrac><mo stretchy=\"false\">)</mo><mo>−</mo><mi>A</mi><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><mover accent=\"true\"><mi>ψ</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mfrac><mi>u</mi><mrow><mn>2</mn><mi>π</mi></mrow></mfrac><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>d</mi><mi>u</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">\\psi \\mapsto \\limsup_{x \\to \\infty} | \\sum_{n=1}^\\infty \\frac{f(n)}{n} \\hat \\psi(\\frac{1}{2\\pi} \\log \\frac{n}{x} ) - A \\int_{-\\infty}^\\infty \\hat \\psi(\\frac{u}{2\\pi})\\ du|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mord mathrm\">lim</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathrm\">sup</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0573em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9579em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1389em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6954em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.372em;vertical-align:-0.4142em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8593em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4142em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9579em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1389em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6954em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">u</span><span class=\"mord\">∣</span></span></span></span> is (a) continuous (in fact Lipschitz) in the Schwartz space equipped with this pseudo-W21 seminorm; (b) vanishes on compactly supported Schwartz functions; and that (c) the compactly supported Schwartz functions are dense in the Schwartz space under this seminorm.  Then it should vanish on the entire Schwartz space by some general topological lemma (possibly already in mathlib).  One downside of this approach though is that one may have to verify the semi-norm axioms, which could be a little tedious.</p>",
        "id": 428154891,
        "sender_full_name": "Terence Tao",
        "timestamp": 1711034381
    },
    {
        "content": "<p>I just PRed this, which is point (c), to PNT+:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">trunc</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">ContDiff</span> <span class=\"n\">ℝ</span> <span class=\"bp\">⊤</span> <span class=\"n\">g</span>\n  <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">HasCompactSupport</span> <span class=\"n\">g</span>\n  <span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Set.Icc</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">indicator</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span>\n  <span class=\"n\">h4</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"bp\">≤</span> <span class=\"n\">Set.indicator</span> <span class=\"o\">(</span><span class=\"n\">Set.Ioo</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"mi\">1</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">W21_approximation</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">W21</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">trunc</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Tendsto</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">R</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">W21.norm</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">v</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"bp\">*</span> <span class=\"n\">R</span><span class=\"bp\">⁻¹</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">v</span><span class=\"o\">))</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"bp\">𝓝</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>",
        "id": 428355103,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711121246
    },
    {
        "content": "<p>For this particular result, g being C^2 bounded with bounded first and second derivatives, and equal to 1 in a neighborhood of 0, is enough to get convergence</p>",
        "id": 428362280,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711123314
    },
    {
        "content": "<p>Great!  It looks like we have all the pieces then to get the Schwartz extension.</p>\n<p>One observation is that the lim sup functional is itself a seminorm, though I don't know whether that will make things any faster to formalize (it does mean though that continuity will follow once one can show that this seminorm is dominated by the W21 norm, which is what <code>decay_bounds</code> should do).</p>",
        "id": 428367574,
        "sender_full_name": "Terence Tao",
        "timestamp": 1711124868
    },
    {
        "content": "<p>I can prove this </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">bound_I2</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hψ</span> <span class=\"o\">:</span> <span class=\"n\">W21</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">‖∫</span> <span class=\"n\">u</span> <span class=\"k\">in</span> <span class=\"n\">Set.Ici</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">log</span> <span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"bp\">𝓕</span> <span class=\"n\">ψ</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">))</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">W21.norm</span> <span class=\"n\">ψ</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>which is fine, and this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">bound_I1</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hψ</span> <span class=\"o\">:</span> <span class=\"n\">W21</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hcheby</span> <span class=\"o\">:</span> <span class=\"n\">cumsum</span> <span class=\"o\">(</span><span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"bp\">·‖</span><span class=\"o\">)</span> <span class=\"bp\">=</span><span class=\"n\">O</span><span class=\"o\">[</span><span class=\"n\">atTop</span><span class=\"o\">]</span> <span class=\"o\">((</span><span class=\"bp\">↑</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"bp\">‖∑'</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"bp\">𝓕</span> <span class=\"n\">ψ</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">log</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"n\">x</span><span class=\"o\">))</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span>\n    <span class=\"n\">W21.norm</span> <span class=\"n\">ψ</span> <span class=\"bp\">*</span> <span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">/</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">Real.log</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">/</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>which should also be fine eventually but the bound depends on x so we will likely have to control the sum by an Abel transform again (the way these things are written now higher in the file is using <code>=O[]</code> for fixed x with implicit constants, so it is not enough).</p>",
        "id": 428430305,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711155958
    },
    {
        "content": "<p>Ugh, I had forgotten about this \"routine\" asymptotic computation.  One could possibly try to perform a dyadic decomposition based on the integer part of <code>Real.log (i/x)</code>, use <code>hcheby</code> to bound each component, and then sum up.  (One small thing is that it might be convenient to make a lemma that one can replace the <code>atTop</code> filter in <code>hcheby</code> by the <code>⊤</code> filter, so that one gets to control the <code>cumsum</code> for all <code>x</code>, not just for suffiicently large <code>x</code>.)</p>",
        "id": 428435105,
        "sender_full_name": "Terence Tao",
        "timestamp": 1711160744
    },
    {
        "content": "<p>I think I would rather use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.sum_range_by_parts#doc\">docs#Finset.sum_range_by_parts</a> together with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=tsum_le_of_sum_range_le#doc\">docs#tsum_le_of_sum_range_le</a> to match with the previous domination argument (and indeed, replacing <code>hcheby</code> with a uniform estimate does not affect generality and will simplify everything).</p>",
        "id": 429071833,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711192332
    },
    {
        "content": "<p>(OTOH, this dyadic approach is essentially a quantitative version of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=summable_condensed_iff_of_nonneg#doc\">docs#summable_condensed_iff_of_nonneg</a> which I used to show summability, so it will certainly come up at some point.)</p>",
        "id": 429071931,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711192461
    },
    {
        "content": "<p>I did not report a lot recently because I was going down a rabbit hole trying to give uniform bounds of derivatives on intervals of the form <code>log (i / x)</code> to <code>log ((i + 1) / x)</code> and failing to fight the system - but I finally realized that you can do the Abel transform, bound the sum of the norms of the <code>f i</code>, and then do the Abel transform backwards. So I now have a technical lemma saying this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">cancel_aux'</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hf'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">cumsum</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg'</span> <span class=\"o\">:</span> <span class=\"n\">Antitone</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">Finset.range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span>\n        <span class=\"n\">C</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n      <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"bp\">*</span> <span class=\"n\">cumsum</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n      <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Still needs some polishing, but I have hope that the pain is behind me :-)</p>",
        "id": 429619600,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711447277
    },
    {
        "content": "<p>We are lucky that <code>1 / (2 * \\pi)</code> is less than one!</p>",
        "id": 429619830,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711447345
    },
    {
        "content": "<p>Hm, should have finished the polishing before speaking, because the actual bound is like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">cancel_main</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">hf'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">cumsum</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg'</span> <span class=\"o\">:</span> <span class=\"n\">Antitone</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">Finset.range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">*</span> <span class=\"n\">cumsum</span> <span class=\"n\">g</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>This is very likely to be well known...</p>",
        "id": 429648691,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711457744
    },
    {
        "content": "<p>(And if <code>f 0 = 0</code> which we have, then it holds for all n.)</p>",
        "id": 429650445,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711458245
    },
    {
        "content": "<p>Nice lemma!  Things like this show up in harmonic analysis, where the Hardy-Littlewood maximal function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mo>=</mo><msub><mrow><mi>sup</mi><mo>⁡</mo></mrow><mrow><mi>r</mi><mo>&gt;</mo><mn>0</mn></mrow></msub><mfrac><mn>1</mn><mrow><mn>2</mn><mi>r</mi></mrow></mfrac><msubsup><mo>∫</mo><mrow><mi>x</mi><mo>−</mo><mi>r</mi></mrow><mrow><mi>x</mi><mo>+</mo><mi>r</mi></mrow></msubsup><mi mathvariant=\"normal\">∣</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi><mtext> </mtext><mi>d</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">Mf(x) := \\sup_{r&gt;0} \\frac{1}{2r} \\int_{x-r}^{x+r} |f(y)|\\ dy</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3804em;vertical-align:-0.4142em;\"></span><span class=\"mop\"><span class=\"mop\">sup</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mrel mtight\">&gt;</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2715em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9662em;\"><span style=\"top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span style=\"top:-3.2579em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4142em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord\">∣</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> is used to control other averages of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> around <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>, such as integrals of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> against a radially decreasing function around <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>.  I'm not sure that there is a canonical estimate of this form that would be general-purpose enough for Mathlib, though.</p>",
        "id": 429704528,
        "sender_full_name": "Terence Tao",
        "timestamp": 1711473872
    },
    {
        "content": "<p>All right,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">bound_sum_log'</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">chebyWith</span> <span class=\"n\">C</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∑'</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"bp\">‖</span> <span class=\"bp\">/</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">log</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">/</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>\n<p>Now to put the pieces together ...</p>",
        "id": 429959882,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711578698
    },
    {
        "content": "<p>And this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">bound_I1'</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ψ</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hψ</span> <span class=\"o\">:</span> <span class=\"n\">W21</span> <span class=\"n\">ψ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hcheby</span> <span class=\"o\">:</span> <span class=\"n\">chebyWith</span> <span class=\"n\">C</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">‖∑'</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"bp\">𝓕</span> <span class=\"n\">ψ</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">log</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"n\">x</span><span class=\"o\">))</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"n\">W21.norm</span> <span class=\"n\">ψ</span> <span class=\"bp\">*</span> <span class=\"n\">C</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n</code></pre></div>",
        "id": 429961196,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711579344
    },
    {
        "content": "<p><code>'limiting_cor_schwartz' depends on axioms: [propext, Classical.choice, Quot.sound]</code></p>",
        "id": 430170267,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711664283
    },
    {
        "content": "<p>I <em>think</em> that was the hardest step towards the Wiener-Ikehara theorem (and thence to PNT).  Hopefully we are in the home stretch now...</p>",
        "id": 430175964,
        "sender_full_name": "Terence Tao",
        "timestamp": 1711667637
    },
    {
        "content": "<p>(Not sure it is relevant for later, but in fact <code>limiting_cor_schwartz</code> works with no modification at all for all <code>W21</code> functions.)</p>",
        "id": 430232565,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711706868
    },
    {
        "content": "<p><del>deleted</del> sorry I did not think through this carefully ...</p>",
        "id": 430238153,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711709574
    },
    {
        "content": "<p>I have made  a lot of progress with <code>MellinCalculus.lean</code>, almost all the relevant proofs are finished. Some remarks:</p>\n<ul>\n<li>I would welcome any help to finish the integrability condition in MellinOfSmooth1a, as I've been stuck on that for quite some time. TLDR is <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Integrability.20of.20a.20function.20with.20support.20in.20a.20compact.20set\">here</a> and I have some doubts about the <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/3d2910bf2e956824ede63729710647d807bb0d6f/PrimeNumberTheoremAnd/MellinCalculus.lean#L1537\">current approach</a>.<br>\n<del>- <code>DeltaSpikeSupport</code> is <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bc9ccad512db3284589407bd3856f46ce3ade38f/PrimeNumberTheoremAnd/MellinCalculus.lean#L984\">done except when</a> <code>x</code> is negative (and the remaining goal is to show that <code>x ^ ε⁻¹</code> is also negative, which might not even make sense). I also just realized the statement is false (for example <code>x</code> could be negative and <code>ε</code> an even integer. Is there a good way to repair the statement without restricting the definition domain of <code>DeltaSpike</code> to <code>Ioi 0</code>?</del><br>\n<del>- After heavy refactoring, many proofs are now quite readable, but others would still benefit from a separate API (e.g., a simple partial integration calculation, which currently has over 100 lines) to not break the chain of thought. I'll keep working on that more and I'll appreciate any suggestions.</del></li>\n</ul>",
        "id": 430332774,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1711755688
    },
    {
        "content": "<p><code>MellinOfSmooth1a</code> is <a href=\"https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/pull/146\">done</a>, I found a nice shortcut. Thus <code>MellinCalculus</code> is sorry-free (except for four lemmas which  are never used).</p>",
        "id": 431365301,
        "sender_full_name": "Vláďa Sedláček",
        "timestamp": 1712251061
    }
]