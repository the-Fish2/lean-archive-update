[
    {
        "content": "<p>Hi all!<br>\n<span class=\"user-mention\" data-user-id=\"252920\">@Alex Kontorovich</span> and I have been discussing changing the color scheme for the dependency graph, to make the 'todo's a more different color from the 'done's. I through something together on a fork of PNT+: <a href=\"https://ianjauslin-rutgers.github.io/PrimeNumberTheoremAnd/web/dep_graph_document.html\">https://ianjauslin-rutgers.github.io/PrimeNumberTheoremAnd/web/dep_graph_document.html</a><br>\nDoes anyone have any suggestions?</p>",
        "id": 421531293,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707944189
    },
    {
        "content": "<p>I also made another change: definitions that are yet to be formalized have the 'todo' background, instead of the 'todo' border with the 'done' background.</p>",
        "id": 421531340,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707944220
    },
    {
        "content": "<p>What do you mean by \"todo border and done background\"? That should never happen</p>",
        "id": 421533126,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707944921
    },
    {
        "content": "<p>It does happen. My understanding of the philosophy, is that blueprint considers that definitions always have correct proofs, because there is no need for a proof. It can get confusing though, so I think it would be best to only color a proof as 'done' if it's been formalized.</p>",
        "id": 421533400,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707945023
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> I maintain that if this happens you have done something wrong. See in eg <a href=\"https://yaeldillies.github.io/LeanAPAP/blueprint/\">my blueprint</a> that it never happens that you have a green background and a blue border.</p>",
        "id": 421533716,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707945170
    },
    {
        "content": "<p>No no, we're talking about changing the color scheme. The idea is that Green looks like something is done, and it's hard to see the border without squinting (especially blue to green!). So definitions that aren't formalized look like they are. So we're discussing changing the convention.</p>",
        "id": 421534002,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707945295
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> is talking about the change that I made so that definitions don't show with a background of 'done' when they haven't been formalized yet.</p>",
        "id": 421534283,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707945418
    },
    {
        "content": "<p>That does happen though. Here's an example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"n\">documentclass</span><span class=\"o\">{</span><span class=\"n\">report</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">[</span><span class=\"n\">showmore</span><span class=\"o\">,</span> <span class=\"n\">dep_graph</span><span class=\"o\">,</span> <span class=\"n\">coverage</span><span class=\"o\">,</span> <span class=\"n\">project</span><span class=\"bp\">=../../</span><span class=\"o\">]{</span><span class=\"n\">blueprint</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">amsmath</span><span class=\"o\">,</span> <span class=\"n\">amsthm</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"n\">theoremstyle</span><span class=\"o\">{</span><span class=\"kd\">definition</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">newtheorem</span><span class=\"o\">{</span><span class=\"kd\">definition</span><span class=\"o\">}{</span><span class=\"n\">Definition</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">document</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"kd\">definition</span><span class=\"o\">}</span>\n<span class=\"n\">test</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"kd\">definition</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">document</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 421534324,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707945436
    },
    {
        "content": "<p>Oh I think I'm starting to see. Do we have <code>\\leanok</code>s on definitions that aren't formalized, is that what's wrong...?</p>",
        "id": 421534327,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707945437
    },
    {
        "content": "<p>Ah</p>",
        "id": 421534381,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707945460
    },
    {
        "content": "<p>In <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> 's blueprint, all the definitions have been formalized, so there's no problem.</p>",
        "id": 421534401,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707945469
    },
    {
        "content": "<p>You must have changed something to the blueprint, because I swear definitions always have the same background and border in my blueprints.</p>",
        "id": 421534789,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707945617
    },
    {
        "content": "<p>I am running the code that I pasted above with the latest commit of blueprint. No modifications.</p>",
        "id": 421535050,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707945729
    },
    {
        "content": "<p>If I run the following, (I just added a label to the definition):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"n\">documentclass</span><span class=\"o\">{</span><span class=\"n\">report</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">[</span><span class=\"n\">showmore</span><span class=\"o\">,</span> <span class=\"n\">dep_graph</span><span class=\"o\">,</span> <span class=\"n\">coverage</span><span class=\"o\">,</span> <span class=\"n\">project</span><span class=\"bp\">=../../</span><span class=\"o\">]{</span><span class=\"n\">blueprint</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">amsmath</span><span class=\"o\">,</span> <span class=\"n\">amsthm</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"n\">theoremstyle</span><span class=\"o\">{</span><span class=\"kd\">definition</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">newtheorem</span><span class=\"o\">{</span><span class=\"kd\">definition</span><span class=\"o\">}{</span><span class=\"n\">Definition</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">document</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"kd\">definition</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">label</span><span class=\"o\">{</span><span class=\"n\">test</span><span class=\"o\">}</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"o\">{</span><span class=\"n\">test</span><span class=\"o\">}</span>\n<span class=\"n\">test</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"kd\">definition</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">document</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>I get this:<br>\n<a href=\"/user_uploads/3121/ONw3P2VnLVVWz2GXqNkx0SnO/test.png\">test.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ONw3P2VnLVVWz2GXqNkx0SnO/test.png\" title=\"test.png\"><img src=\"/user_uploads/3121/ONw3P2VnLVVWz2GXqNkx0SnO/test.png\"></a></div><p>edit: without adding the label, I get the same thing, but with a random name instead of 'test'</p>",
        "id": 421535453,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707945914
    },
    {
        "content": "<p>That definitely didn't happen before. <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, did you accidentally change the background of definitions to always be green?</p>",
        "id": 421535708,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707946020
    },
    {
        "content": "<p>regardless of how it used to work, what do people think of our proposal for how it could look in the future?</p>",
        "id": 421536179,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707946215
    },
    {
        "content": "<p>Specifically, I am interested in what you think of the colors.</p>",
        "id": 421536312,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707946274
    },
    {
        "content": "<p>They are a bit confusable for deuteranomals like me</p>",
        "id": 421536354,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707946295
    },
    {
        "content": "<p>That's exactly what I was worried about. How about switching orange to purple (which has some blue in it)</p>",
        "id": 421536423,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707946323
    },
    {
        "content": "<p>Exactly! We're trying to make it <em>more</em> colorblind friendly!...</p>",
        "id": 421536497,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707946343
    },
    {
        "content": "<p>But Ian, how come, e.g., <code>RectangleIntegral</code>, which is a definition marked with <code>\\leanok</code>, showing up light green instead of dark green...?</p>",
        "id": 421536633,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707946422
    },
    {
        "content": "<p>A trick to make things colorblind-friendly is to have different fillings. cf the Discord status badges.</p>",
        "id": 421536664,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707946437
    },
    {
        "content": "<p>Let me have a look at this. This'll have to be a graphviz feature to integrate easily into blueprint.</p>",
        "id": 421536811,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707946487
    },
    {
        "content": "<p>I notice that zulip's colors for active vs idle users is green and orange!...</p>",
        "id": 421536841,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707946497
    },
    {
        "content": "<p>With different fillings!<br>\n<a href=\"/user_uploads/3121/EDRZLPR48mIZlyRTk6fVq-5E/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/EDRZLPR48mIZlyRTk6fVq-5E/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/EDRZLPR48mIZlyRTk6fVq-5E/image.png\"></a></div>",
        "id": 421537656,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707946825
    },
    {
        "content": "<p>Indeed... might be too hard to change that in blueprint...?</p>",
        "id": 421537965,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707946951
    },
    {
        "content": "<p>I don't think it will be hard. graphviz has a \"striped\" feature for filling. I think I can spin this up quickly.</p>",
        "id": 421538031,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707946991
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252920\">@Alex Kontorovich</span> : Do you have a preference between stripes or a color gradient?</p>",
        "id": 421540096,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707947863
    },
    {
        "content": "<p>hmm can we do an AB test?</p>",
        "id": 421543077,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1707949259
    },
    {
        "content": "<p>Alright! I've switched the 'todo' background color to a gradient, and the 'todo' boundary to a dashed line. How does this look: <a href=\"https://ianjauslin-rutgers.github.io/PrimeNumberTheoremAnd/web/dep_graph_document.html\">https://ianjauslin-rutgers.github.io/PrimeNumberTheoremAnd/web/dep_graph_document.html</a></p>",
        "id": 421548680,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707951987
    },
    {
        "content": "<p>It's a bit jarring. How does it look if you replace the gradient by stripes or by half-filling (in the style of the Zulip AFK badge)?</p>",
        "id": 421549319,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707952299
    },
    {
        "content": "<p>Also worth making sure that the dashes are different between arrows and borders since they mean different things</p>",
        "id": 421549477,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707952368
    },
    {
        "content": "<p>I can easily do a horizontal half filling, but then the text is not so easy to read. So I think a vertical half-filling would be best, but that takes a little more work.</p>\n<p>Ah yes, I forgot about the dashes on the arrows. I will dot the boundaries instead of dashing them</p>",
        "id": 421549662,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707952458
    },
    {
        "content": "<p>Well, it seems like rotating the stripes is annoying. Si here are my two options: gradient:<br>\n<a href=\"/user_uploads/3121/oN6u8Y6dxJz1efdFeia6XPzl/gradient.png\">gradient.png</a><br>\nor stripes:<br>\n<a href=\"/user_uploads/3121/FzCaxZ6kQSsD9lfV2AZ-elu-/hard.png\">hard.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/oN6u8Y6dxJz1efdFeia6XPzl/gradient.png\" title=\"gradient.png\"><img src=\"/user_uploads/3121/oN6u8Y6dxJz1efdFeia6XPzl/gradient.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/FzCaxZ6kQSsD9lfV2AZ-elu-/hard.png\" title=\"hard.png\"><img src=\"/user_uploads/3121/FzCaxZ6kQSsD9lfV2AZ-elu-/hard.png\"></a></div>",
        "id": 421553886,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707954707
    },
    {
        "content": "<p>I like the vertical halves best, followed by the horizontal halves</p>",
        "id": 421554193,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707954875
    },
    {
        "content": "<p>Gradient looks better, though tbh I would also be happy with a solid color.  Dotted line looks good (though I don't really understand the distinction between a dotted line boundary and a black boundary, but presumably whatever legend one has for the blueprint will clarify this).</p>",
        "id": 421556071,
        "sender_full_name": "Terence Tao",
        "timestamp": 1707955858
    },
    {
        "content": "<p>The black boundary occurs when the blueprint has no links to lean code. Ideally, the blueprint should be written in such a way to avoid this.</p>",
        "id": 421556257,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707955966
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Blueprint.20colors/near/421535708\">said</a>:</p>\n<blockquote>\n<p>That definitely didn't happen before. <span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span>, did you accidentally change the background of definitions to always be green?</p>\n</blockquote>\n<p>There was no recent change to colors. However it may be broken since January 5th when I did change some color stuff. In that case you can open an issue with a mwe.</p>",
        "id": 421562887,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1707960565
    },
    {
        "content": "<p>I have a fix on my fork, I will make a usable PR when I have some time tomorrow.</p>",
        "id": 421571798,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707966347
    },
    {
        "content": "<p>Why do you have a fork?</p>",
        "id": 421575462,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1707969121
    },
    {
        "content": "<p>So I can modify the code to suit my purposes. (I'm not sure I understand the question.)</p>",
        "id": 421578840,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1707971985
    },
    {
        "content": "<p>I don't understand why you do that instead of contributing to the upstream version so that everyone can benefit from improvements.</p>",
        "id": 421649966,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1708002507
    },
    {
        "content": "<p>because it's work in progress?</p>",
        "id": 421650056,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1708002536
    },
    {
        "content": "<p>If your modifications are unlikely to be wanted by anyone else then you can ask for more options.</p>",
        "id": 421650111,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1708002554
    },
    {
        "content": "<p>I think <span class=\"user-mention silent\" data-user-id=\"557226\">Ian Jauslin</span> meant \"fork\" in the Github sense, so basically \"personal clone\". And not \"fork\" in the traditional, I'm going my way and not yours and the community will have to choose between two versions.</p>",
        "id": 421651592,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1708002998
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"657719\">Terence Tao</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Blueprint.20colors/near/421556071\">said</a>:</p>\n<blockquote>\n<p>Gradient looks better, though tbh I would also be happy with a solid color.  Dotted line looks good (though I don't really understand the distinction between a dotted line boundary and a black boundary, but presumably whatever legend one has for the blueprint will clarify this).</p>\n</blockquote>\n<p>I agree, I like the left to right gradient better than horizontal line down the middle of the lemma name. I would also be perfectly happy with a solid color, but see the benefit of giving it a gradient if it'll help the colorblind...</p>",
        "id": 421659954,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1708005853
    },
    {
        "content": "<p>Yes, I meant a github fork of the repo where I can play around with the code. I'm not trying to spin off leanblueprint, just figuring out the best way for me to contribute.</p>\n<p>At the moment, I modified the hardcoded colorscheme, which I don't think is something I want to distribute to the community. When I have a bit of time, I would like to set things up so the colors can be adjusted from the configuration file. When I do that, I'll PR it to the main repo.</p>",
        "id": 421665995,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1708007504
    },
    {
        "content": "<p>Incidentally, <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> , leanblueprint still doesn't have a license. I think this could become a problem in the long run. (I would feel much more comfortable contributing to a project which is clearly marked as Free Software.)</p>",
        "id": 421666340,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1708007608
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"557226\">Ian Jauslin</span> <a href=\"#narrow/stream/423402-PrimeNumberTheorem.2B/topic/Blueprint.20colors/near/421665995\">said</a>:</p>\n<blockquote>\n<p>Yes, I meant a github fork of the repo where I can play around with the code. I'm not trying to spin off leanblueprint, just figuring out the best way for me to contribute.</p>\n<p>At the moment, I modified the hardcoded colorscheme, which I don't think is something I want to distribute to the community. When I have a bit of time, I would like to set things up so the colors can be adjusted from the configuration file. When I do that, I'll PR it to the main repo.</p>\n</blockquote>\n<p>What do you mean by “harcoded colorscheme”? Nothing is hardcoded here. You can modify colors from the TeX file.</p>",
        "id": 421675620,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1708009787
    },
    {
        "content": "<p>Ah, good. How does one do this?</p>",
        "id": 421675913,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1708009848
    },
    {
        "content": "<p>Or maybe I stopped halfway through this refactor because of Christmas...</p>",
        "id": 421676165,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1708009913
    },
    {
        "content": "<p>Indeed in the code I see everything is ready but the LaTeX macros don’t exist. This will be very easy to fix.</p>",
        "id": 421676431,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1708009972
    },
    {
        "content": "<p>Great! Looking forward to it being done.</p>",
        "id": 421676574,
        "sender_full_name": "Ian Jauslin",
        "timestamp": 1708010013
    },
    {
        "content": "<p>I added license files (in the client branch that will hopefully soon be merged to master).</p>",
        "id": 421678296,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1708010503
    }
]