[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sébastien Gouëzel</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2311776.20higher.20derivative.20of.20Fourier.20transform/near/430312143\">said</a>:</p>\n<blockquote>\n<p>I just wanted to mention that <a href=\"https://github.com/leanprover-community/mathlib4/pull/11776\">#11776</a> proves that the Fourier transform of a function with fast decay is smooth. This is a step towards the definition of the Fourier transform on the Schwartz space, which will probably be relevant for PNT (although I am doing it in proper generality, which is probably overkill for PNT). It is too big to be reviewed directly, but for now I have split off 4 bits that should be quite reasonable.</p>\n</blockquote>\n<p>fyi</p>",
        "id": 430312839,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1711743489
    },
    {
        "content": "<p>And we kind of have the setup to show that the Fourier transform of a fonction that is smooth has fast decay. (We have it for C^2, and it could suffice but I don't know.)</p>\n<p>Thanks for the pointer!</p>",
        "id": 430315451,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1711744924
    },
    {
        "content": "<p>The way the blueprint is set up, the next step is to show that (a) the Fourier inversion formula holds for Schwartz functions, and (b) the inverse Fourier transform of a Schwartz function is Schwartz.  One could possibly replace \"Schwartz\" here by something like \"the first two derivatives decay like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi mathvariant=\"normal\">∣</mi><mi>x</mi><msup><mi mathvariant=\"normal\">∣</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1/(1+|x|^2))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1/</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">))</span></span></span></span>\" but I figure that it shouldn't be massively more work to do the Schwartz case, which is inherently interesting since it is a standard class to define the Fourier transform on.  I guess since there is an ongoing project to do general Schwartz space Fourier analysis, we could just steal what we need from that project for now, and possibly refactor later.</p>",
        "id": 430350643,
        "sender_full_name": "Terence Tao",
        "timestamp": 1711768016
    }
]