[
    {
        "content": "<p>Minor UX note, but:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Common</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">HasInverse</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"n\">exists_inv_id</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">inv</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"bp\">∘</span> <span class=\"n\">inv</span> <span class=\"bp\">=</span> <span class=\"n\">ID</span> <span class=\"bp\">∧</span> <span class=\"n\">inv</span> <span class=\"bp\">∘</span>  <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">id</span>\n\n<span class=\"n\">initialize_simps_projections</span><span class=\"bp\">?</span> <span class=\"n\">HasInverse</span>\n</code></pre></div>\n<p>gives</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">simps.verbose</span><span class=\"o\">]</span> <span class=\"n\">generating</span> <span class=\"n\">projection</span> <span class=\"n\">information</span> <span class=\"n\">for</span> <span class=\"kd\">structure</span> <span class=\"n\">HasInverse.</span>\n\n<span class=\"o\">[</span><span class=\"n\">simps.verbose</span><span class=\"o\">]</span> <span class=\"n\">generated</span> <span class=\"n\">projections</span> <span class=\"n\">for</span> <span class=\"n\">HasInverse</span><span class=\"o\">:</span>\n    <span class=\"n\">No</span> <span class=\"n\">lemmas</span> <span class=\"n\">are</span> <span class=\"n\">generated</span> <span class=\"n\">for</span> <span class=\"n\">the</span> <span class=\"n\">projections</span><span class=\"o\">:</span> <span class=\"n\">exists_inv_id.</span>\n</code></pre></div>\n<p>i.e. the tactic did nothing. It'd be cool if this gave a warning or something, since pretty much any time this happens it's probably certain that the user (<em>cough</em> like myself <em>cough</em>) is using it wrong. (In this case I thought it'd make lemmas for Prop-typed fields and didn't think to check until later.)</p>",
        "id": 421752394,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1708036446
    }
]