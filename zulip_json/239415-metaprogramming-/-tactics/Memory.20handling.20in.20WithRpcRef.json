[
    {
        "content": "<p>Does someone know how exactly / well <code>WithRpcRef</code> is capable of avoiding memory leakage? <code>WithRpcRef</code> allows Lean sending a reference to a Lean object to Javascript so that Javascript code can then pass such a reference back to Lean functions tagged with <code>@[server_rpc_method]</code>. Now, these functions could return such references again, so there could be a sophisticated Javascript code operating on Lean data.<br>\nHowever, I am worried if Lean would be able to notice that Javascript has dropped such a reference, so it is safe to release it from memory on Lean side too.<br>\nIs my worry correct that such RPC references should not be overused, or can I just assume that memory will be handled automatically for me (as it often is in high level programming languages)?</p>",
        "id": 419689794,
        "sender_full_name": "Mirek Ol코치k",
        "timestamp": 1707044527
    },
    {
        "content": "<p>Yes, garbage collection of RPC references is automated, see <a href=\"https://github.com/leanprover/vscode-lean4/blob/c2b1918778b84162536d4a6533a9a8e6735c0c88/lean4-infoview-api/src/rpcSessions.ts#L72-L91\">https://github.com/leanprover/vscode-lean4/blob/c2b1918778b84162536d4a6533a9a8e6735c0c88/lean4-infoview-api/src/rpcSessions.ts#L72-L91</a></p>",
        "id": 419691428,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1707046237
    },
    {
        "content": "<p>Cool, thanks!</p>",
        "id": 419691563,
        "sender_full_name": "Mirek Ol코치k",
        "timestamp": 1707046401
    }
]