[
    {
        "content": "<p>The <code>slim_check</code> tactic fails, saying that it fails to create a testable instance, and I don't understand why.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">trace.Meta.synthInstance</span> <span class=\"n\">true</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">â„¤</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">â‰¤</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">â‰¤</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">â„š</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">slim_check</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> ok -/</span>\n<span class=\"kd\">instance</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">â„¤</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Decidable</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">â‰¤</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">â„š</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">infer_instance</span>\n</code></pre></div>\n<p>The trace has the following two lines:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"o\">[]</span> <span class=\"bp\">âœ…</span> <span class=\"n\">apply</span> <span class=\"n\">Rat.instDecidableLeRatInstLERat</span> <span class=\"n\">to</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">â„¤</span><span class=\"o\">)</span> <span class=\"bp\">â†’</span> <span class=\"n\">Decidable</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">â‰¤</span> <span class=\"bp\">â†‘</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">â–¼</span>\n  <span class=\"o\">[]</span> <span class=\"bp\">ðŸ’¥</span> <span class=\"n\">apply</span> <span class=\"bp\">@</span><span class=\"n\">instDecidableRelLeLeOfOrd</span> <span class=\"n\">to</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">â„¤</span><span class=\"o\">)</span> <span class=\"bp\">â†’</span> <span class=\"n\">Decidable</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">â‰¤</span> <span class=\"bp\">â†‘</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">â–¶</span>\n</code></pre></div>\n<p>I don't understand why it's trying to infer the decidability instance again and why it doesn't work</p>",
        "id": 437053600,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1714858482
    },
    {
        "content": "<p>Cant' reproduce this failure locally,  slimcheck simply reports success. If you change one of the 0s to a 1 it will give a counter example.</p>",
        "id": 437054217,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1714859146
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/aZadG4jMJzureUFHR8kbuvHd/Screenshot-2024-05-04-at-22.47.21.png\">Screenshot-2024-05-04-at-22.47.21.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/aZadG4jMJzureUFHR8kbuvHd/Screenshot-2024-05-04-at-22.47.21.png\" title=\"Screenshot-2024-05-04-at-22.47.21.png\"><img src=\"/user_uploads/3121/aZadG4jMJzureUFHR8kbuvHd/Screenshot-2024-05-04-at-22.47.21.png\"></a></div><p>Hmm. I'll update versions and see ifanything changes</p>",
        "id": 437054347,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1714859274
    },
    {
        "content": "<p>Updating fixes it! Thanks :)</p>",
        "id": 437055727,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1714860657
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"579936\">Gareth Ma</span> has marked this topic as resolved.</p>",
        "id": 437055730,
        "sender_full_name": "Notification Bot",
        "timestamp": 1714860660
    }
]