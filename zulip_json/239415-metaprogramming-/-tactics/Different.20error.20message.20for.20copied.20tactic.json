[
    {
        "content": "<p>What goes wrong here? I thought I could just copy-paste the <code>rewrite</code> tactic into my project (for now without any modification), but if I do so, it works as expected except that it does not show the error message \"unknown identifier\" anymore.</p>\n<p>Why does this happen? The only difference in the code should be that one is a <code>builtin_tactic</code> and one is a <code>tactic</code>...</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean.Elab.Tactic.Rewrite</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Lean.Elab.Tactic</span>\n<span class=\"kn\">open</span> <span class=\"n\">Meta</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean.Parser.Tactic</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> From Lean Core:</span>\n\n<span class=\"cm\">```</span>\n<span class=\"cm\">syntax (name := rewriteSeq) \"rewrite\" (config)? rwRuleSeq (location)? : tactic</span>\n<span class=\"cm\">```</span>\n\n<span class=\"cm\">and</span>\n\n<span class=\"cm\">```</span>\n<span class=\"cm\">@[builtin_tactic Lean.Parser.Tactic.rewriteSeq] def evalRewriteSeq : Tactic := fun stx =&gt; do</span>\n<span class=\"cm\">  let cfg ← elabRewriteConfig stx[1]</span>\n<span class=\"cm\">  let loc   := expandOptLocation stx[3]</span>\n<span class=\"cm\">  withRWRulesSeq stx[0] stx[2] fun symm term =&gt; do</span>\n<span class=\"cm\">    withLocation loc</span>\n<span class=\"cm\">      (rewriteLocalDecl term symm · cfg)</span>\n<span class=\"cm\">      (rewriteTarget term symm cfg)</span>\n<span class=\"cm\">      (throwTacticEx `rewrite · \"did not find instance of the pattern in the current goal\")</span>\n<span class=\"cm\">```</span>\n\n<span class=\"cm\">-/</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span> <span class=\"c1\">-- has `unknonwn identifier`</span>\n\n<span class=\"n\">syntax</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">_root_.MyProject.rewriteSeq</span><span class=\"o\">)</span> <span class=\"s2\">\"rewrite\"</span> <span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"n\">rwRuleSeq</span> <span class=\"o\">(</span><span class=\"n\">location</span><span class=\"o\">)</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">tactic</span> <span class=\"n\">_root_.MyProject.rewriteSeq</span><span class=\"kd\">]</span> <span class=\"kd\">def</span> <span class=\"n\">_root_.MyProject.evalRewriteSeq</span> <span class=\"o\">:</span> <span class=\"n\">Tactic</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">stx</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">cfg</span> <span class=\"bp\">←</span> <span class=\"n\">elabRewriteConfig</span> <span class=\"n\">stx</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n  <span class=\"k\">let</span> <span class=\"n\">loc</span>   <span class=\"o\">:=</span> <span class=\"n\">expandOptLocation</span> <span class=\"n\">stx</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n  <span class=\"n\">withRWRulesSeq</span> <span class=\"n\">stx</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"n\">stx</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"k\">fun</span> <span class=\"n\">symm</span> <span class=\"n\">term</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n    <span class=\"n\">withLocation</span> <span class=\"n\">loc</span>\n      <span class=\"o\">(</span><span class=\"n\">rewriteLocalDecl</span> <span class=\"n\">term</span> <span class=\"n\">symm</span> <span class=\"bp\">·</span> <span class=\"n\">cfg</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">rewriteTarget</span> <span class=\"n\">term</span> <span class=\"n\">symm</span> <span class=\"n\">cfg</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">throwTacticEx</span> <span class=\"bp\">`</span><span class=\"n\">rewrite</span> <span class=\"bp\">·</span> <span class=\"s2\">\"did not find instance of the pattern in the current goal\"</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span> <span class=\"c1\">-- does not have `unknown identifier`</span>\n</code></pre></div>",
        "id": 426702829,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1710494534
    }
]