[
    {
        "content": "<p>I would like to generate the syntax for a command <em>including</em> a comment.  Below is an example, but it seems that all comments get erased in the process.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.RunCmd</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"k\">in</span>\n<span class=\"kd\">run_cmd</span>\n  <span class=\"n\">logInfo</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">command</span><span class=\"bp\">|</span>\n    <span class=\"sd\">/-- doc-strings are ok -/</span>\n    <span class=\"kd\">def</span> <span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">mkIdent</span> <span class=\"bp\">`</span><span class=\"n\">newOne</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n    <span class=\"c1\">-- but comments are not</span>\n  <span class=\"o\">))</span>\n</code></pre></div>\n<p>prints</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- doc-strings are ok -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">newOne</span> <span class=\"o\">:=</span>\n  <span class=\"mi\">1</span>\n</code></pre></div>\n<p>and my comment is gone.</p>",
        "id": 423041836,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1708703119
    },
    {
        "content": "<p>I might be wrong here, but aren't comments already removed at the parsing step, so that <code>Syntax</code> doesn't know about them at all?</p>\n<p>(doc comments on the other hand are parsed as <code>Lean.Parser.Command.docComment</code>)</p>",
        "id": 423060323,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1708708692
    },
    {
        "content": "<p>Are you trying to preserve comments from existing code or just generate new comments? I think there are at least ways to do the latter that may have been discussed here…</p>",
        "id": 423061233,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1708708993
    },
    {
        "content": "<p>You are right: I would like to preserve existing comments.  I have a hacky way of inserting comments as strings.  You can see the actual code in <a href=\"https://github.com/leanprover-community/mathlib4/pull/10864\">#10864</a>.</p>",
        "id": 423068086,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1708711301
    },
    {
        "content": "<p>Although it seems that existing comments are preserved.</p>",
        "id": 423068318,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1708711397
    },
    {
        "content": "<p>After a very small amount of testing, it seems that using <code> `(command| ...)</code> any comments in <code>...</code> get parsed away.  However, if your function takes a <code>TSyntax `command</code> as input and the command has embedded comments, then the comments are preserved.</p>",
        "id": 423146033,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1708761157
    }
]