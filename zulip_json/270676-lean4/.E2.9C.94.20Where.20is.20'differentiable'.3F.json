[
    {
        "content": "<p>I'm working on porting the following  from lean3 to lean 4. I've already done some things, like changing commas to '=&gt;' in lambda expressions, ': by ...' to ':= by ...', and 'refl' to 'rfl'. Now the first error I'm seeing is at 'differentiable'. So I tried comparing ' analysis.calculus.deriv' in mathlib4 to mathlib3, but I can't find the definition of 'differentiable' in <a href=\"https://leanprover-community.github.io/mathlib_docs/analysis/calculus/deriv/basic.html\">mathlib3</a>. What am I missing?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.calculus.deriv</span> <span class=\"n\">analysis.special_functions.exp_deriv</span> <span class=\"n\">ring_theory.non_zero_divisors</span> <span class=\"n\">algebra.group.basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">real</span>\n\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">deriv</span> <span class=\"n\">f</span> <span class=\"n\">x</span>\n\n\n<span class=\"kd\">lemma</span> <span class=\"n\">D_add</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">df</span> <span class=\"o\">:</span> <span class=\"n\">differentiable</span> <span class=\"n\">ℝ</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">dg</span> <span class=\"o\">:</span> <span class=\"n\">differentiable</span> <span class=\"n\">ℝ</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">+</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">D</span> <span class=\"n\">f</span> <span class=\"bp\">+</span> <span class=\"n\">D</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n  <span class=\"n\">funext</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"k\">calc</span>\n      <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">deriv</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">g</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">x</span>  <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">refl</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">deriv</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">deriv</span> <span class=\"n\">g</span> <span class=\"n\">x</span>         <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">deriv_add</span> <span class=\"o\">(</span><span class=\"n\">df</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">dg</span> <span class=\"n\">x</span><span class=\"o\">))</span>\n</code></pre></div>",
        "id": 409468683,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1703195170
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Differentiable#doc\">docs#Differentiable</a></p>",
        "id": 409468761,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703195229
    },
    {
        "content": "<p>You can use <code>#lookup3 &lt;name&gt;</code>, IIRC.</p>",
        "id": 409468866,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703195284
    },
    {
        "content": "<p>I see. The mistake I was making was not checking the imported files; in this case `analysis.calculus.fderiv.basic'.</p>",
        "id": 409469046,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1703195401
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245476\">Quinn Culver</span> has marked this topic as resolved.</p>",
        "id": 409469107,
        "sender_full_name": "Notification Bot",
        "timestamp": 1703195411
    },
    {
        "content": "<p>Also, in case you haven't already been made aware, <a href=\"https://github.com/leanprover-community/mathport\">mathport</a> is the tool you should be using here. It's worthwhile if you have to translate more than about 50 theorems by hand</p>",
        "id": 409469163,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703195445
    },
    {
        "content": "<p>actually that's a bit of a large upper bound, even translating 2 chunky theorems by hand is tiresome</p>",
        "id": 409469345,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703195542
    }
]