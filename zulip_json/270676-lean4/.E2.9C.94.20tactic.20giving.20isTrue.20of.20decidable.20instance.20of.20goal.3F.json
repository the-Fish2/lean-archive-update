[
    {
        "content": "<p>To have something to use in conjunction with autoParam.<br>\ni.e</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Foo x has decidable instance</span>\n<span class=\"kd\">def</span> <span class=\"n\">Bar.foo</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Bar</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">autoParam</span> <span class=\"o\">(</span><span class=\"n\">Foo</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">decideTrueOrFail</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 430407795,
        "sender_full_name": "ohhaimark",
        "timestamp": 1711820896
    },
    {
        "content": "<p>you should be able to just write <code>(h : Foo x := by decide)</code>, if not please provide a proper <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 430407877,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1711821000
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"244748\">ohhaimark</span> has marked this topic as resolved.</p>",
        "id": 430407942,
        "sender_full_name": "Notification Bot",
        "timestamp": 1711821038
    }
]