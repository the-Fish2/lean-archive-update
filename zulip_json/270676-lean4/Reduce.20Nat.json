[
    {
        "content": "<p>Lean has various operations on <code>Nat</code> which are built into the kernel. Is there some function which reduces an <code>Expr</code> only according to those builtin operations? There's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Meta.reduceNat%3F#doc\">docs#Lean.Meta.reduceNat?</a>, but that has rather strict requirements on the form of the expression. For example, if won't reduce <code>1 + 1</code>, as that's actually <code>HAdd.hAdd ...</code> instead of <code>Nat.add</code> and <code>OfNat.ofNat ...</code> instead of <code>nat_lit 1</code>.</p>",
        "id": 434188197,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1713457671
    },
    {
        "content": "<p>It seems <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Meta.evalNat#doc\">docs#Lean.Meta.evalNat</a> is basically what I was looking for.</p>",
        "id": 434364821,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1713533864
    }
]