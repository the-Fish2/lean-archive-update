[
    {
        "content": "<p>Consider this mwe:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Parser</span>\n\n<span class=\"n\">macro</span> <span class=\"s2\">\"strTest\"</span> <span class=\"n\">s</span><span class=\"o\">:</span><span class=\"n\">strLit</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">if</span> <span class=\"n\">s.getString</span> <span class=\"bp\">=</span> <span class=\"s2\">\"T\"</span> <span class=\"k\">then</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">false</span><span class=\"o\">)</span>\n\n<span class=\"n\">macro</span> <span class=\"s2\">\"testChar\"</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"n\">charLit</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">if</span> <span class=\"n\">c.getChar</span> <span class=\"bp\">=</span> <span class=\"sc\">'T'</span> <span class=\"k\">then</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">false</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>The first works because the <code>strLit</code> parser returns <code>TSyntax `str</code> but the <code>charLit</code> parser returns <code>TSyntax `Lean.Parser.charLit</code> instead of <code>TSyntax `char</code>.</p>\n<p>Is there a reason for this difference?</p>",
        "id": 425807754,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1710106449
    },
    {
        "content": "<p>It looks like <code>strLit</code> is special cased in <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Elab.Command.expandMacroArg.mkAntiquotNode#doc\">docs#Lean.Elab.Command.expandMacroArg.mkAntiquotNode</a> and <code>charLit</code> isn't</p>",
        "id": 425808568,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710107225
    },
    {
        "content": "<p>Thanks! I was having a really had a hard time figuring out where that was from!</p>\n<p>I'm not sure that's a bug but I'll submit a report anyway...</p>",
        "id": 425808929,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1710107602
    }
]