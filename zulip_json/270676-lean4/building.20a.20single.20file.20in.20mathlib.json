[
    {
        "content": "<p>I was trying to do an automated <code>git bisect</code> on mathlib. But I realize that in Lean 4 I no longer know how to build a single Lean file. Can someone please educate me?</p>",
        "id": 421257882,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1707835574
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">env</span> <span class=\"n\">lean</span> <span class=\"o\">[</span><span class=\"n\">file</span><span class=\"o\">]</span>\n<span class=\"bp\">##</span> <span class=\"n\">or</span>\n<span class=\"n\">lake</span> <span class=\"n\">build</span> <span class=\"o\">[</span><span class=\"n\">file</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>one of the two takes a path, the other the same format as <code>import</code> -- can't remember which one.  Should be done from the root dir, I think.</p>",
        "id": 421258711,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707835834
    },
    {
        "content": "<p>Thanks</p>",
        "id": 421258811,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1707835861
    },
    {
        "content": "<p>I think that <code>build</code> will build the o/ileans, the other will not.</p>",
        "id": 421258852,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707835874
    },
    {
        "content": "<p>The first seems to do what I want (-;</p>",
        "id": 421259507,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1707836056
    },
    {
        "content": "<p>These are not the same! Only the latter command will rebuild dependencies and save .oleans</p>",
        "id": 421259902,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1707836166
    },
    {
        "content": "<p>I want to count heartbeats for some decl. So I don't think rebuilding is necessary, right?</p>",
        "id": 421260010,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1707836196
    },
    {
        "content": "<p>I'm grabbing oleans from the cache</p>",
        "id": 421260063,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1707836211
    },
    {
        "content": "<p>Then it's fine</p>",
        "id": 421260093,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1707836221
    },
    {
        "content": "<p>Maybe this is a separate question, but neither of the two work for a case where you have a directory not listed as a package in the <code>lakefile</code> -- is there a way to do that perchance? The use case is I have some directory <em>inside</em> my local mathlib repo where I have random self contained files I've played with that depend on Mathlib. It'd be convenient if there was a way to say \"build Scratch/foo.lean\", which doesn't work as-is because <code>Scratch</code> obviously isn't in Mathlib's lakefile as a package. But lake / lean must have all it needs to do that, because opening/editing files in there works fine and builds what's needed at edit-time, so I mostly haven't bothered and rely on this being built in the editor -- is there some CLI way to do it?</p>",
        "id": 421264654,
        "sender_full_name": "Julian Berman",
        "timestamp": 1707837419
    },
    {
        "content": "<p>It might also be ergonomic to use</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">time</span><span class=\"w\"> </span>-v<span class=\"w\"> </span>lake<span class=\"w\"> </span>env<span class=\"w\"> </span>lean<span class=\"w\"> </span>--profile<span class=\"w\"> </span>X/Y/Z.lean\n</code></pre></div>\n<p>if you don't want to jump into the editor ever.</p>",
        "id": 421274197,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1707839968
    },
    {
        "content": "<p>During the bisect, I just edited the file at the start, and git was smart enough to keep the edit in place all the way till the end of the bisect. So I didn't have to edit much either. But I'll keep this in mind.</p>",
        "id": 421275636,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1707840309
    },
    {
        "content": "<p>While we're on the topic of building single files:</p>\n<p>IMHO, the fact that <code>lake build</code> expects input in the same format as <code>import</code>, delimited with <code>.</code>, makes it un-ergonomic to build single files from the command line – it defeats the shell tab completion for filenames. This is a regression from lean 3, where <code>lean --make</code>happily accepted a file path. Can I take the opportunity to request support for tab-completion in <code>lake build</code>?</p>",
        "id": 421381289,
        "sender_full_name": "David Loeffler",
        "timestamp": 1707893762
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span></p>",
        "id": 421381416,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1707893847
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/2756\">lean4#2756</a></p>",
        "id": 421381860,
        "sender_full_name": "Mac Malone",
        "timestamp": 1707894128
    },
    {
        "content": "<p>For a temporary fix, take a look at</p>\n<p><a href=\"#narrow/stream/270676-lean4/topic/fastest.20way.20to.20copy.20module.20name.20of.20the.20current.20file.3F/near/401710404\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/fastest.20way.20to.20copy.20module.20name.20of.20the.20current.20file.3F/near/401710404</a></p>\n<p>(I'm on mobile, I hope the link works!)</p>",
        "id": 421390944,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707898232
    },
    {
        "content": "<p>Regarding <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> 's situation (also a regression from lean 3), I fixed this locally by moving my <code>scratch</code> directory into the <code>Mathlib</code> directory (which makes it slightly harder to find, but at least I can now compile on command line)</p>",
        "id": 421391987,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707898663
    },
    {
        "content": "<p>Bleh yeah reasonable, I guess I could do that too, it's just slightly easier to commit accidentally, but I'll gitignore.</p>",
        "id": 421505696,
        "sender_full_name": "Julian Berman",
        "timestamp": 1707934925
    },
    {
        "content": "<p>I edit my .git/info/exclude rather than goofing around with mathlib's .gitignore</p>",
        "id": 421523268,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707941079
    }
]