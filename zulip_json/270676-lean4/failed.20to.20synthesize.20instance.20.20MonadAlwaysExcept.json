[
    {
        "content": "<p>I am bumping a repo to latest Lean version (leanprover/lean4:v4.7.0-rc2). But I am stucked in the following codes.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">Smt</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">ReductionM</span> <span class=\"o\">:=</span> <span class=\"n\">ReaderT</span> <span class=\"n\">Config</span> <span class=\"n\">MetaM</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">traceReduce</span> <span class=\"o\">[</span><span class=\"n\">Monad</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">Expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">e'</span> <span class=\"o\">:</span> <span class=\"n\">Except</span> <span class=\"n\">ε</span> <span class=\"n\">Expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"n\">MessageData</span> <span class=\"o\">:=</span>\n  <span class=\"n\">return</span> <span class=\"n\">m</span><span class=\"bp\">!</span><span class=\"s2\">\"{e} ⤳ \"</span> <span class=\"bp\">++</span> <span class=\"k\">match</span> <span class=\"n\">e'</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">ok</span> <span class=\"n\">e'</span>   <span class=\"bp\">=&gt;</span> <span class=\"n\">m</span><span class=\"bp\">!</span><span class=\"s2\">\"{e'}\"</span>\n    <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">error</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">m</span><span class=\"bp\">!</span><span class=\"s2\">\"{bombEmoji}\"</span>\n\n<span class=\"n\">partial</span> <span class=\"kd\">def</span> <span class=\"n\">reduce</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">Expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">explicitOnly</span> <span class=\"n\">skipTypes</span> <span class=\"n\">skipProofs</span> <span class=\"o\">:=</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ReductionM</span> <span class=\"n\">Expr</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">rec</span> <span class=\"n\">visit</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">Expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">MonadCacheT</span> <span class=\"n\">Expr</span> <span class=\"n\">Expr</span> <span class=\"n\">ReductionM</span> <span class=\"n\">Expr</span> <span class=\"o\">:=</span>\n    <span class=\"n\">checkCache</span> <span class=\"n\">e</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Core.withIncRecDepth</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">withTraceNode</span> <span class=\"bp\">`</span><span class=\"n\">Smt.reduce</span> <span class=\"o\">(</span><span class=\"n\">traceReduce</span> <span class=\"n\">e</span> <span class=\"bp\">·</span><span class=\"o\">)</span> <span class=\"k\">do</span>\n<span class=\"bp\">...</span>\n<span class=\"kd\">end</span> <span class=\"n\">Smt</span>\n</code></pre></div>\n<p>in <code>withTraceNode ``Smt.reduce (traceReduce e ·) do</code> I got a error msg as follows,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"kd\">instance</span>\n  <span class=\"n\">MonadAlwaysExcept</span> <span class=\"bp\">?</span><span class=\"n\">m.66383</span> <span class=\"o\">(</span><span class=\"n\">MonadCacheT</span> <span class=\"n\">Expr</span> <span class=\"n\">Expr</span> <span class=\"n\">ReductionM</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I think this error mainly comes from the change of <code>withTraceNode</code> mensioned in <a href=\"https://github.com/leanprover/lean4/blob/master/RELEASES.md\">https://github.com/leanprover/lean4/blob/master/RELEASES.md</a> saying </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Lean.withTraceNode</span> <span class=\"n\">and</span> <span class=\"n\">variants</span> <span class=\"n\">got</span> <span class=\"n\">a</span> <span class=\"n\">stronger</span> <span class=\"n\">MonadAlwaysExcept</span> <span class=\"n\">assumption</span> <span class=\"n\">to</span> <span class=\"n\">fix</span> <span class=\"n\">trace</span> <span class=\"n\">trees</span> <span class=\"n\">not</span> <span class=\"n\">being</span> <span class=\"n\">built</span> <span class=\"n\">on</span> <span class=\"n\">elaboration</span> <span class=\"n\">runtime</span> <span class=\"n\">exceptions.</span> <span class=\"n\">Instances</span> <span class=\"n\">for</span> <span class=\"n\">most</span> <span class=\"n\">elaboration</span> <span class=\"n\">monads</span> <span class=\"n\">built</span> <span class=\"n\">on</span> <span class=\"n\">EIO</span> <span class=\"n\">Exception</span> <span class=\"n\">should</span> <span class=\"n\">be</span> <span class=\"n\">synthesized</span> <span class=\"n\">automatically.</span>\n</code></pre></div>\n<p>I have no idea about how to fix this error and could you give me some instructions? Thx!</p>",
        "id": 428049829,
        "sender_full_name": "Jiacheng Chen",
        "timestamp": 1710990044
    },
    {
        "content": "<p>Sorry, not sure about this corner of things. Maybe we can ping <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> who added those lines to the release notes?</p>",
        "id": 428052066,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710991839
    },
    {
        "content": "<p>Sounds good. Thx!</p>",
        "id": 428052312,
        "sender_full_name": "Jiacheng Chen",
        "timestamp": 1710992104
    },
    {
        "content": "<p>The missing instance follows the same structure as the others, you can copy it to your project until it manifests in a release: <a href=\"https://github.com/leanprover/lean4/pull/3726/files#diff-4e819de9d9430729a749ddb68313d355c5f04dce7dfb81e9924661414ad3d1b2R206-R208\">https://github.com/leanprover/lean4/pull/3726/files#diff-4e819de9d9430729a749ddb68313d355c5f04dce7dfb81e9924661414ad3d1b2R206-R208</a></p>",
        "id": 428079111,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1711010344
    },
    {
        "content": "<p>I have successfully fixed it. Thank you so much! <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span></p>",
        "id": 428081417,
        "sender_full_name": "Jiacheng Chen",
        "timestamp": 1711011330
    }
]