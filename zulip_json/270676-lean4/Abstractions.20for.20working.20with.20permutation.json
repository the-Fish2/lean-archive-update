[
    {
        "content": "<p>Hi all, I'm wondering what I should use to reason about permutations of some <code>T</code> (that is also a <code>Fintype</code>, if needed), any suggestions would be appreciated.</p>\n<p>I know I can probably use <code>List T</code>, but my problem with using <code>List T</code> is that doesn't really capture the fact that it is a permutation of elements of T (so it may not have all elements, it has duplication).<br>\nSimilar issue with <code>Finset T</code>,  where I don't have the order of elements embedded.<br>\nMy question would be: What should I use in Mathlib to represent the permutation so that (1) I can operate on the actual permutation like a <code>List T</code> where I can take or swap elements, and (2) embed the property that it is indeed a permutation within the type.</p>\n<p>Thanks!</p>\n<hr>\n<p>Some context of what I'm trying to do:</p>\n<ol>\n<li>Have some way of representing permutations of (all) elements in T (currently I knew I can use <code>List T</code>)</li>\n<li>Define equivalence between two permutations based on some domain specific logic (so something like <code>Equiv: List T -&gt; List T -&gt; Prop</code>)</li>\n<li>Define a partial order on T, and measure the \"unorderness\" in a permutation (something like: <code>f: List T -&gt; Nat</code>)</li>\n<li>Define operations that can transform one permutation to another (g: List T -&gt; List T) that maintains equivalence and alter the \"unorderness\".</li>\n<li>Proving that for certain permutations, there exists an equivalent permutation with certain \"unorderness\".</li>\n</ol>",
        "id": 431822791,
        "sender_full_name": "Zhuanhao Wu",
        "timestamp": 1712529965
    },
    {
        "content": "<p>How about <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=List.Perm#doc\">docs#List.Perm</a></p>",
        "id": 431823214,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1712530344
    },
    {
        "content": "<p>You could also consider the type of equivalences <code>T ≃ T</code>.</p>",
        "id": 431823973,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1712531014
    },
    {
        "content": "<p>which is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Equiv.Perm#doc\">docs#Equiv.Perm</a></p>",
        "id": 431823988,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712531036
    },
    {
        "content": "<p>thanks! i will give it a try</p>",
        "id": 431834733,
        "sender_full_name": "Zhuanhao Wu",
        "timestamp": 1712541506
    }
]