[
    {
        "content": "<p>I found this to be confusing, so I'm posting here to raise awareness.</p>\n<p>There are two distinct projects named \"leansat\":<br>\n<a href=\"https://github.com/JamesGallicchio/LeanSAT\">https://github.com/JamesGallicchio/LeanSAT</a> <br>\n<a href=\"https://github.com/leanprover/leansat\">https://github.com/leanprover/leansat</a></p>",
        "id": 422684864,
        "sender_full_name": "David Renshaw",
        "timestamp": 1708541789
    },
    {
        "content": "<p>And neither has much to do with the development of <a href=\"https://lean-sat.org/about.html\">small satellites</a>. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 422716753,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1708555484
    },
    {
        "content": "<p>Yeah, we did not intend to name clash <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 422904737,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1708636035
    },
    {
        "content": "<p>I may rename mine because it seems the leanprover leansat is going to be actively developed by the FRO</p>",
        "id": 422904820,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1708636079
    },
    {
        "content": "<p>Aren’t they meant to work together in the end?</p>",
        "id": 422905175,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1708636226
    },
    {
        "content": "<p>Ours is to do with verified encodings to SAT, the <code>leanprover/leansat</code> is attempting to provide a SAT tactic for expressions over bool and bitvec. Unclear whether they will be merged in the near future because the end user interfaces are so dissimilar. I'm hoping the backend interfaces to SAT solvers will be merged though!</p>",
        "id": 422905256,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1708636263
    },
    {
        "content": "<p>leanprover/leansat is being actively developed. Currently there is:</p>\n<ol>\n<li>a frontend that processes a Lean goal and reflects it to a <code>e : BoolExpr</code>, and a proof builder that can prove <code>False</code> given a proof of <code>e.unsat</code>.</li>\n<li>a translation from BoolExpr to CNF </li>\n<li>machinery to send that CNF to a SAT solver, and then verify in the kernel the lrat proof produced</li>\n</ol>\n<p>(1. and 2. are my work last week, 3. is mostly existing work of Josh Clune's in the leansat repo, which <span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> has been cleaning up. He's also provided all the necessary glue between 2. and 3.)</p>\n<p>It runs. However right now the proofs it produces contain a <code>sorry</code>, because the translation from BoolExpr to CNF is not verified. This should not be particularly difficult, and some combination of <span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>  and I will probably do it soon.</p>\n<p>It is quite preliminary, and there are unnecessary bottlenecks at several places in the current implementation. </p>\n<p>I've only briefly looked at James' repo. Happy to talk sometime to see if there is something we can incorporate from it. There's also yet another repo doing similar things, but which I think is currently private. </p>\n<p>More updates coming soon!</p>",
        "id": 422945291,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708659808
    },
    {
        "content": "<p>Both are being actively developed. It seems like there was a communication failure that lead to the project getting named the same as an existing active project</p>",
        "id": 422947063,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708661212
    },
    {
        "content": "<p>Sorry about this. My understanding is that Leo set up the leanprover/leansat to hold Josh's work last year (created June, first real commit November), and I guess wasn't aware of James'. </p>\n<p>(And apologies that my message may have implied the other wasn't being actively developed. The leansat one had been motionless until about a week ago: I wanted to make the distinction more between now and last week than between leanprover/leansat and JamesGallichio/leansat!)</p>",
        "id": 422954187,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708667334
    },
    {
        "content": "<blockquote>\n<p>This should not be particularly difficult</p>\n</blockquote>\n<p>I hope this is true... we resorted to the classic \"build a bunch of infrastructure\" strategy, roughly as follows:</p>\n<ul>\n<li>a state monad (<code>EncCNF</code>) to keep track of the map from (the original) variables to Nat, and the highest number used in the CNF (which grows as auxiliaries are allocated)</li>\n<li>a subtype of these monadic programs (<code>VEncCNF</code>) that states what is being encoded (over the <em>original</em> variables) with some inane verification condition that ensures the CNF is satisfiable iff the formula over the original variables is satisfiable. that way you can generate and use auxiliary variables for e.g. tseitin transformation but they are completely hidden by the signature.</li>\n</ul>\n<p>the proofs of those verification conditions have not been too bad, but it still required a surprising amount of infrastructure to finish. let me know if you get something simple working, I'll be very interested to check it out!!</p>\n<p>sidenote: <code>VEncCNF</code> is actually a dijkstra monad a la F*, but we have yet to find use for this observation.</p>",
        "id": 422955132,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1708668144
    },
    {
        "content": "<p>Okay, challenge accepted. :-) I agree I should not say \"not particularly difficult\" about something that I committed with a <code>sorry</code>. I'm certainly hoping still to be more lightweight here.</p>",
        "id": 422956015,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708668929
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"407274\">@James Gallicchio</span>, I pushed a tedious but low-tech verification in <a href=\"https://github.com/leanprover/leansat/pull/8\">https://github.com/leanprover/leansat/pull/8</a>. The actually transformation is about 15 lines in <code>LeanSat.Reflect.BoolExpr.Tseitin.Defs</code>, and the proof is 600 lines in <code>...Lemma</code>.</p>",
        "id": 423170251,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708781629
    },
    {
        "content": "<p>I'm pretty unimpressed with how many independent inductions I did over <code>BoolExpr</code>, but it seemed easier to just prove each fact I needed in order, rather than try to combine them.</p>",
        "id": 423170639,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708781908
    },
    {
        "content": "<p>The specific encoding I use it profligate with variables, which may hurt: a real SAT solver won't care at all, but the lrat verification step will. I'm hoping that the it's easy enough to post-process this profligacy out on the CNF side.</p>\n<p>But it would be great to have comparisons. If you were able to connect your Tseitin transform to our representation of <code>BoolExpr</code> and <code>CNF</code>, we could plug it into the pipeline and see how it runs. I think we will have a benchmark suite soon.</p>",
        "id": 423170852,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708782058
    },
    {
        "content": "<p>I heard from <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> earlier today about some of the leansat work happening at CMU. It would be great if we could have a get together sometime soon to discuss what should live in which repository. I'd propose we schedule around me + <span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>  + <span class=\"user-mention\" data-user-id=\"407274\">@James Gallicchio</span>, but then if there are others at CMU (or elsewhere) everyone is welcome. </p>\n<p>Unfortunately 9am-4pm Pittsburgh time I'm usually unavailable, but flexible before or afterwards.</p>",
        "id": 423233959,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708838600
    },
    {
        "content": "<p>It would be good if <span class=\"user-mention\" data-user-id=\"424407\">@Cayden Codel</span> can join the discussion as well. He and James can explain the project and its goals.</p>",
        "id": 423266721,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1708870534
    },
    {
        "content": "<p>I'd also like to attend, I have an alternative encoding proof that I'm hoping to upstream to CMU LeanSAT soon</p>",
        "id": 423306516,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708909581
    },
    {
        "content": "<p>Great: we're aiming at <time datetime=\"2024-02-26T22:00:00Z\">2024-02-27T09:00:00+11:00</time>. I'll send an invite, let me know if that time won't work.</p>",
        "id": 423306740,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708909808
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> bonk</p>",
        "id": 423491453,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1708984908
    },
    {
        "content": "<p>thoughts on renaming my leansat to <code>lean4sat</code> (lean proofs for sat tools) and the FRO's leansat to <code>sat4lean</code> (sat tools for lean proofs)? <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 433694989,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1713340540
    },
    {
        "content": "<p>it's unfortunate that the language is <code>lean4</code> because <code>lean4sat</code> can be mis-read as <code>lean4 SAT</code> instead of \"Lean for SAT\"</p>",
        "id": 433695135,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1713340583
    },
    {
        "content": "<p>we call that a pun</p>",
        "id": 433695186,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713340605
    },
    {
        "content": "<p><code>Leaninsat</code> and <code>satinlean</code>?</p>",
        "id": 433695339,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713340665
    },
    {
        "content": "<p>Satin Lean, the glossiest of Leans.</p>",
        "id": 433706625,
        "sender_full_name": "Julian Berman",
        "timestamp": 1713344372
    },
    {
        "content": "<p>While I do like the idea of the pun it seems to me personally like this is just asking for a mixup and potentially confusing google results for either package?</p>",
        "id": 433943296,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1713421217
    },
    {
        "content": "<p>to be fair, the names <code>LeanSAT</code> and <code>leansat</code> are not any less mixup-prone</p>",
        "id": 433968334,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713424151
    },
    {
        "content": "<p>Don't get me wrong I do think there should be a change, I just think we should nail it the first time and not change more later on.</p>",
        "id": 433969218,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1713424223
    },
    {
        "content": "<p>I think James's project could be called sat-tools or sat-encoding</p>",
        "id": 433969544,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713424252
    }
]