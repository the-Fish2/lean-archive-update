[
    {
        "content": "<p>If I do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- A comment that should go after the `set_option` -/</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">10000000</span> <span class=\"k\">in</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">simple</span> <span class=\"o\">:</span> <span class=\"mi\">7</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>I get the confusing error message</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">unexpected</span> <span class=\"n\">token</span> <span class=\"bp\">'</span><span class=\"kd\">set_option</span><span class=\"bp\">';</span> <span class=\"n\">expected</span> <span class=\"bp\">'#</span><span class=\"n\">guard_msgs'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">abbrev'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">add_decl_doc'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">alias'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">axiom</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">binder_predicate'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">builtin_initialize'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">class</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">declare_config_elab'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">declare_simp_like_tactic'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">declare_syntax_cat'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">def</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">elab'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">elab_rules'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">example</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">inductive</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">infix</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">infixl</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">infixr</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">initialize'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">instance</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">irreducible_def'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">lemma</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">macro'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">macro_rules'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">notation</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">notation3'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">opaque'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">postfix</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">prefix</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">proof_wanted'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">register_builtin_option'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">register_label_attr'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">register_option'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">register_simp_attr'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">scoped'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">structure</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">syntax'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">theorem</span><span class=\"bp\">'</span> <span class=\"n\">or</span> <span class=\"bp\">'</span><span class=\"n\">unif_hint'</span>\n</code></pre></div>\n<p>After some searching, I finally realized that it was supposed to be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">10000000</span> <span class=\"k\">in</span>\n<span class=\"sd\">/-- A comment that should go after the `set_option` -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">simple</span> <span class=\"o\">:</span> <span class=\"mi\">7</span> <span class=\"bp\">=</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>Would it be possible for the error message to give more of a hint in that direction?</p>",
        "id": 410865491,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1704210586
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 410876121,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1704215045
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"514145\">@Geoffrey Irving</span>, could you open an issue for this?</p>",
        "id": 411101290,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1704326908
    },
    {
        "content": "<p>^ Will do (later today)!</p>",
        "id": 411141188,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1704353759
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/issues/3135\">https://github.com/leanprover/lean4/issues/3135</a></p>",
        "id": 411156712,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1704361576
    }
]