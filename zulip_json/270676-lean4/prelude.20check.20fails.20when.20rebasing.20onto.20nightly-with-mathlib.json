[
    {
        "content": "<p>I'm just experimenting with a draft PR to try to fix a bug in lean4, and things work fine on master—but when I rebase onto <code>nightly-with-mathlib</code> to test, \"Check for modules that should use <code>prelude</code> / check-prelude (pull_request) \" fails (listing a bunch of files I haven't touched). Does anyone know what this means/how to fix it?</p>",
        "id": 423110970,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1708731379
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/3374\">lean#3374</a> and <a href=\"https://github.com/leanprover/lean4/pull/3463\">lean#3463</a> is what I noticed</p>",
        "id": 423111636,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1708731744
    },
    {
        "content": "<p>Ah, hmm. What's the best solution here? I imagine <code>nightly-with-mathlib</code> will catch up sooner or later, but it seems about a week behind...</p>",
        "id": 423112188,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1708732159
    },
    {
        "content": "<p>What is the reason you on nightly with mathlib to start?</p>",
        "id": 423112344,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1708732287
    },
    {
        "content": "<p>There is a clean up from zeta reduction changes in <code>simp</code> ongoing that has broken <code>nightly</code> for a bit</p>",
        "id": 423112373,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1708732318
    },
    {
        "content": "<p>I'm currently hitting \"<span aria-label=\"exclamation\" class=\"emoji emoji-2757\" role=\"img\" title=\"exclamation\">:exclamation:</span> Std/Mathlib CI will not be attempted unless your PR branches off the nightly-with-mathlib branch\", and I'd like to attempt Std/Mathlib CI.</p>",
        "id": 423112460,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1708732366
    },
    {
        "content": "<p>Yeah, I was just wondering if you really wanted std and mathlib. Since you do, I think you have to wait</p>",
        "id": 423112504,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1708732408
    },
    {
        "content": "<p>Hmm. I wonder if I could cherry-pick the result of <a href=\"https://github.com/leanprover/lean4/pull/3463\">lean#3463</a> into (onto?) my branch in the meantime.</p>",
        "id": 423112789,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1708732614
    },
    {
        "content": "<p>Or you could disable the CI temporarily <span aria-label=\"smiling devil\" class=\"emoji emoji-1f608\" role=\"img\" title=\"smiling devil\">:smiling_devil:</span></p>",
        "id": 423112889,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1708732704
    },
    {
        "content": "<p>But mathlib won’t build still</p>",
        "id": 423112919,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1708732736
    },
    {
        "content": "<p>Oh, earlier you meant that <del><code>nightly-with-testing</code></del> (I'm mixing my branches:<code>nightly-with-mathlib</code>) itself breaks mathlib?</p>",
        "id": 423112962,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1708732783
    },
    {
        "content": "<p>Yeah, sorry if that was unclear</p>",
        "id": 423112974,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1708732793
    },
    {
        "content": "<p>See the most recent <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8025309613/job/21925664760\">CI run</a></p>",
        "id": 423113117,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1708732863
    },
    {
        "content": "<p>Ah gotcha, part of me was hoping you did literally mean (lean4) <code>nightly</code> :P</p>",
        "id": 423113241,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1708732945
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> <a href=\"#narrow/stream/270676-lean4/topic/prelude.20check.20fails.20when.20rebasing.20onto.20nightly-with-mathlib/near/423110970\">said</a>:</p>\n<blockquote>\n<p>I'm just experimenting with a draft PR to try to fix a bug in lean4, and things work fine on master—but when I rebase onto <code>nightly-with-mathlib</code> to test, \"Check for modules that should use <code>prelude</code> / check-prelude (pull_request) \" fails (listing a bunch of files I haven't touched). Does anyone know what this means/how to fix it?</p>\n</blockquote>\n<p><a href=\"https://lean-lang.org/lean4/doc/dev/index.html#prelude\">https://lean-lang.org/lean4/doc/dev/index.html#prelude</a> this is the reasoning</p>",
        "id": 423160153,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1708772280
    }
]