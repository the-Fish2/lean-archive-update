[
    {
        "content": "<p>Is there a reason why all the operator typeclasses (e.g., HAppend) are defined for Type and not for Sort, meaning that they can't be instanced for Prop types?</p>",
        "id": 424097514,
        "sender_full_name": "Francisco Giordano",
        "timestamp": 1709236789
    },
    {
        "content": "<p>What would your use case be? Do you want to append propositions?</p>",
        "id": 424099034,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1709237285
    },
    {
        "content": "<p>Occasionally it's tempting to define <code>hx + hy : P (x + y)</code> for <code>hx : P x</code> and <code>hy : P y</code></p>",
        "id": 424099308,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1709237389
    },
    {
        "content": "<p>I just want the notation <code>++</code> for a specific proposition I've defined. In this case I want <code>hAppend</code> for a proposition with a non-proposition, so more like <code>hx ++ fy : P (x ++ y)</code> with <code>hx : P x, fy : T y</code></p>",
        "id": 424099823,
        "sender_full_name": "Francisco Giordano",
        "timestamp": 1709237571
    },
    {
        "content": "<p>I could redefine the ++ notation or use a different symbol. But I'm not sure why there is this limitation</p>",
        "id": 424100667,
        "sender_full_name": "Francisco Giordano",
        "timestamp": 1709237898
    }
]