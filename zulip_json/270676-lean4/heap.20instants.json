[
    {
        "content": "<p>Hello, I'm new here, I wanted to ask:<br>\nI have an inductive heap and I can't get an instant out of it in a way that I can look at the input and output of elements.<br>\nIt has a leaf and a node with right key value and left</p>",
        "id": 426514205,
        "sender_full_name": "elisheva morgenstern",
        "timestamp": 1710413179
    },
    {
        "content": "<p>Can you show us a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>?</p>",
        "id": 426516008,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710413850
    },
    {
        "content": "<p>I have this code:<br>\ninductive Heap (h : Type v) where<br>\n| leaf<br>\n| node (left : Heap h) (key : Nat) (value : h) (right : Heap h)<br>\nderiving Repr</p>\n<p>def insert {h : Type u} (t : Heap h) (k : Nat) (v : h) : Heap h :=<br>\n.........</p>\n<p>here I want to check the insert and tried a lot of things</p>",
        "id": 426919772,
        "sender_full_name": "elisheva morgenstern",
        "timestamp": 1710621014
    },
    {
        "content": "<p>You could edit your previous post once you've learnt about <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> and it will be nicer to read</p>",
        "id": 426920273,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1710621566
    },
    {
        "content": "<p>Hello, welcome! What do you mean by \"check the insert\" here and what do you mean by \"instant\"? (Also do please edit your messages to use <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> as mentioned!)</p>",
        "id": 426924538,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1710625868
    },
    {
        "content": "<p>In case what you want involves getting the arguments of <code>Heap.node</code>, is syntax like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">match</span> <span class=\"n\">t</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">leaf</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">node</span> <span class=\"n\">l</span> <span class=\"n\">k</span> <span class=\"n\">v</span> <span class=\"n\">r</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- &lt;do something with `l`, `k`, `v`, and `r`&gt;</span>\n</code></pre></div>\n<p>familiar to you?</p>",
        "id": 426924662,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1710626008
    },
    {
        "content": "<p>Hey thanks you! <br>\nEither it gave me an error or I didn't fully understand how to connect it to the code.<br>\nI also tried to print with IO Unit but I failed.<br>\nI am trying to send again in the format:</p>\n<p>'''<br>\nimport Lean</p>\n<p>inductive Heap (h : Type v) where<br>\n| leaf<br>\n| node (left : Heap h) (key : Nat) (value : h) (right : Heap h)<br>\nderiving Repr</p>\n<p>-- #check Nat</p>\n<p>def insert {h : Type u} (t : Heap h) (k : Nat) (v : h) : Heap h :=<br>\n  let rec insertAux : Heap h → Heap h :=<br>\n    λ tree =&gt;<br>\n      match tree with<br>\n      | Heap.leaf =&gt; Heap.node Heap.leaf k v Heap.leaf<br>\n      | Heap.node l key value r =&gt;<br>\n        if k &lt; key then<br>\n          Heap.node (insertAux l) key value r<br>\n        else<br>\n          Heap.node l key value (insertAux r)<br>\n  match t with<br>\n  | Heap.leaf =&gt; Heap.node Heap.leaf k v Heap.leaf<br>\n  | _ =&gt; insertAux t<br>\n'''</p>\n<p>it is ok?</p>",
        "id": 427511456,
        "sender_full_name": "elisheva morgenstern",
        "timestamp": 1710775588
    },
    {
        "content": "<p>Zulip tip: you are using the wrong kind of quotation marks: you need <code> ` </code></p>",
        "id": 427521713,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1710778176
    },
    {
        "content": "<p>(You are <em>much</em> more likely to get answers if you follow the requests above about <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>. e.g. it lets others open your code in the online editor, and be more confident that the code will run locally if they want to.)</p>",
        "id": 427596034,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710806137
    }
]