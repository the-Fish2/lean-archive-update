[
    {
        "content": "<p>Can I get the information that the <code>sorryAx</code> comes from <code>catchMe</code> in an automated way?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">isNice</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Bool</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">decide</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">5</span><span class=\"o\">)</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">catchMe</span> <span class=\"o\">:</span> <span class=\"n\">isNice</span> <span class=\"mi\">23</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">complicated</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">23</span> <span class=\"bp\">→</span> <span class=\"n\">isNice</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">hyp</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hyp</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">simp</span>\n\n<span class=\"k\">#print</span> <span class=\"kd\">axioms</span> <span class=\"n\">complicated</span>\n<span class=\"c1\">-- 'complicated' depends on axioms: [sorryAx, propext]</span>\n</code></pre></div>",
        "id": 418994431,
        "sender_full_name": "Malvin Gattinger",
        "timestamp": 1706692071
    },
    {
        "content": "<p>I think Mario made such a thing, maybe in lean3</p>",
        "id": 418999178,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706693710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> wrote this for Lean3</p>",
        "id": 419002399,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1706694706
    },
    {
        "content": "<p>Yes, here: <a href=\"https://github.com/leanprover-community/mathlib/pull/16911\">mathlib#16911</a>. Feel free to port/rewrite.</p>",
        "id": 419004646,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1706695441
    }
]