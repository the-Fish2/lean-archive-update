[
    {
        "content": "<p>I'm creating a package that bundles <code>lake</code> from the main Lean 4 repository. A MWE is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code><span class=\"c1\"># flake.nix</span>\n<span class=\"p\">{</span>\n  <span class=\"ss\">description</span> <span class=\"o\">=</span> <span class=\"s2\">\"Lean-Encapsulate\"</span><span class=\"p\">;</span>\n\n  <span class=\"ss\">inputs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    nixpkgs<span class=\"o\">.</span><span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:nixos/nixpkgs/nixos-unstable\"</span><span class=\"p\">;</span>\n    flake-parts<span class=\"o\">.</span><span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:hercules-ci/flake-parts\"</span><span class=\"p\">;</span>\n    lean<span class=\"o\">.</span><span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:leanprover/lean4?ref=v4.1.0\"</span><span class=\"p\">;</span>\n  <span class=\"p\">};</span>\n\n  <span class=\"ss\">outputs</span> <span class=\"o\">=</span> inputs <span class=\"p\">@</span> <span class=\"p\">{</span>\n    self<span class=\"p\">,</span>\n    nixpkgs<span class=\"p\">,</span>\n    flake-parts<span class=\"p\">,</span>\n    lean<span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n  <span class=\"p\">}</span> <span class=\"p\">:</span> flake-parts<span class=\"o\">.</span>lib<span class=\"o\">.</span>mkFlake <span class=\"p\">{</span> <span class=\"k\">inherit</span> inputs<span class=\"p\">;</span> <span class=\"p\">}</span> <span class=\"p\">{</span>\n    <span class=\"ss\">flake</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"p\">};</span>\n    <span class=\"ss\">systems</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"x86_64-linux\"</span>\n      <span class=\"s2\">\"x86_64-darwin\"</span>\n    <span class=\"p\">];</span>\n    <span class=\"ss\">perSystem</span> <span class=\"o\">=</span> <span class=\"p\">{</span> system<span class=\"p\">,</span> pkgs<span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}:</span> <span class=\"k\">let</span>\n      <span class=\"ss\">leanPkgs</span> <span class=\"o\">=</span> lean<span class=\"o\">.</span>packages<span class=\"o\">.</span><span class=\"si\">${</span>system<span class=\"si\">}</span><span class=\"p\">;</span>\n    <span class=\"k\">in</span> <span class=\"k\">rec</span> <span class=\"p\">{</span>\n      <span class=\"ss\">packages</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"ss\">lean</span> <span class=\"o\">=</span> leanPkgs<span class=\"o\">.</span>lean<span class=\"p\">;</span>\n      <span class=\"p\">};</span>\n      devShells<span class=\"o\">.</span><span class=\"ss\">default</span> <span class=\"o\">=</span> pkgs<span class=\"o\">.</span>mkShell <span class=\"p\">{</span>\n        <span class=\"ss\">buildInputs</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n          leanPkgs<span class=\"o\">.</span>lean\n          leanPkgs<span class=\"o\">.</span>Lake-Main<span class=\"o\">.</span>executable\n        <span class=\"p\">];</span>\n      <span class=\"p\">};</span>\n    <span class=\"p\">};</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Here I have a <code>devShell</code> with lean and lake packaged into it:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ which lean\n/nix/store/45iycrslp9n7z2c202q8p8n23hpnbsgk-lean/bin/lean\n$ which lake\n/nix/store/fsgh02bjxmy42rxsqmyk4k3m1fqwgk48-lake/bin/lake\n</code></pre></div>\n<p>However this version of lake is not working. For example, if I were to create a new project and to build it:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ lake --lean=lean new Project\n$ cd Project\n$ lake --lean=lean build\nerror: ./lakefile.lean:1:0: error: unknown package 'Init'\nerror: ./lakefile.lean:2:5: error: unknown namespace 'Lake'\nerror: ./lakefile.lean:4:0: error: unexpected identifier; expected command\nerror: ./lakefile.lean:10:17: error: unexpected identifier; expected 'abbrev', 'axiom', 'builtin_initialize', 'class', 'def', 'elab', 'elab_rules', 'example', 'inductive', 'infix', 'infixl', 'infixr', 'initialize', 'instance', 'macro', 'macro_rules', 'notation', 'opaque', 'postfix', 'prefix', 'structure', 'syntax' or 'theorem'\nerror: ./lakefile.lean: package configuration has errors\n</code></pre></div>\n<p>How can I use the bundled <code>lake</code>?</p>",
        "id": 420910079,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1707674975
    },
    {
        "content": "<p>The nix setup is essentially unmaintained, so you are more or less on your own, sorry. If you want a nixified dev setup, get <code>elan</code> from nixpkg, and let that handle fetching lean or lake.</p>",
        "id": 420913568,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1707678019
    },
    {
        "content": "<p>I have a nix flake setup:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">{</span>\n  <span class=\"n\">description</span> <span class=\"bp\">=</span> <span class=\"s2\">\"...\"</span><span class=\"bp\">;</span>\n  <span class=\"n\">inputs.nixpkgs.url</span> <span class=\"bp\">=</span> <span class=\"s2\">\"github:NixOS/nixpkgs/nixpkgs-unstable\"</span><span class=\"bp\">;</span>\n  <span class=\"n\">inputs.flake</span><span class=\"bp\">-</span><span class=\"n\">utils.url</span> <span class=\"bp\">=</span> <span class=\"s2\">\"github:numtide/flake-utils\"</span><span class=\"bp\">;</span>\n\n  <span class=\"n\">inputs.lean4.url</span> <span class=\"bp\">=</span> <span class=\"s2\">\"github:leanprover/lean4/v4.5.0\"</span><span class=\"bp\">;</span>\n\n  <span class=\"n\">outputs</span> <span class=\"bp\">=</span> <span class=\"o\">{</span> <span class=\"n\">self</span><span class=\"o\">,</span> <span class=\"n\">nixpkgs</span><span class=\"o\">,</span> <span class=\"n\">flake</span><span class=\"bp\">-</span><span class=\"n\">utils</span><span class=\"o\">,</span> <span class=\"n\">lean4</span> <span class=\"o\">}:</span>\n    <span class=\"n\">flake</span><span class=\"bp\">-</span><span class=\"n\">utils.lib.eachDefaultSystem</span> <span class=\"o\">(</span><span class=\"n\">system</span><span class=\"o\">:</span>\n      <span class=\"k\">let</span>\n        <span class=\"n\">pkgs</span> <span class=\"bp\">=</span> <span class=\"n\">nixpkgs.legacyPackages.</span><span class=\"bp\">$</span><span class=\"o\">{</span><span class=\"n\">system</span><span class=\"o\">}</span><span class=\"bp\">;</span>\n        <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">pkgs</span> <span class=\"bp\">=</span> <span class=\"n\">lean4.packages.</span><span class=\"bp\">$</span><span class=\"o\">{</span><span class=\"n\">system</span><span class=\"o\">}</span><span class=\"bp\">;</span>\n      <span class=\"k\">in</span> <span class=\"o\">{</span>\n        <span class=\"n\">devShells.default</span> <span class=\"bp\">=</span> <span class=\"n\">pkgs.mkShell</span> <span class=\"o\">{</span>\n          <span class=\"n\">packages</span> <span class=\"bp\">=</span> <span class=\"o\">[</span> <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">pkgs.lean</span><span class=\"bp\">-</span><span class=\"n\">all</span> <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">pkgs.vscode</span> <span class=\"o\">]</span><span class=\"bp\">;</span>\n        <span class=\"o\">}</span><span class=\"bp\">;</span>\n      <span class=\"o\">})</span><span class=\"bp\">;</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>I then use </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">new</span> <span class=\"bp\">&lt;</span><span class=\"n\">project</span><span class=\"bp\">&gt;</span>\n<span class=\"n\">lake</span> <span class=\"n\">init</span> <span class=\"bp\">&lt;</span><span class=\"n\">project</span><span class=\"bp\">&gt;</span>\n</code></pre></div>",
        "id": 420916095,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1707680181
    },
    {
        "content": "<p>Let me know if you have issues with what I posted, I've been using it for a while for a variety of lean versions</p>",
        "id": 420916301,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1707680402
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256383\">Enrico Borba</span> <a href=\"#narrow/stream/270676-lean4/topic/Using.20lake.20from.20nix.20flake/near/420916095\">said</a>:</p>\n<blockquote>\n<p>I have a nix flake setup:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">{</span>\n  <span class=\"n\">description</span> <span class=\"bp\">=</span> <span class=\"s2\">\"...\"</span><span class=\"bp\">;</span>\n  <span class=\"n\">inputs.nixpkgs.url</span> <span class=\"bp\">=</span> <span class=\"s2\">\"github:NixOS/nixpkgs/nixpkgs-unstable\"</span><span class=\"bp\">;</span>\n  <span class=\"n\">inputs.flake</span><span class=\"bp\">-</span><span class=\"n\">utils.url</span> <span class=\"bp\">=</span> <span class=\"s2\">\"github:numtide/flake-utils\"</span><span class=\"bp\">;</span>\n\n  <span class=\"n\">inputs.lean4.url</span> <span class=\"bp\">=</span> <span class=\"s2\">\"github:leanprover/lean4/v4.5.0\"</span><span class=\"bp\">;</span>\n\n  <span class=\"n\">outputs</span> <span class=\"bp\">=</span> <span class=\"o\">{</span> <span class=\"n\">self</span><span class=\"o\">,</span> <span class=\"n\">nixpkgs</span><span class=\"o\">,</span> <span class=\"n\">flake</span><span class=\"bp\">-</span><span class=\"n\">utils</span><span class=\"o\">,</span> <span class=\"n\">lean4</span> <span class=\"o\">}:</span>\n    <span class=\"n\">flake</span><span class=\"bp\">-</span><span class=\"n\">utils.lib.eachDefaultSystem</span> <span class=\"o\">(</span><span class=\"n\">system</span><span class=\"o\">:</span>\n      <span class=\"k\">let</span>\n        <span class=\"n\">pkgs</span> <span class=\"bp\">=</span> <span class=\"n\">nixpkgs.legacyPackages.</span><span class=\"bp\">$</span><span class=\"o\">{</span><span class=\"n\">system</span><span class=\"o\">}</span><span class=\"bp\">;</span>\n        <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">pkgs</span> <span class=\"bp\">=</span> <span class=\"n\">lean4.packages.</span><span class=\"bp\">$</span><span class=\"o\">{</span><span class=\"n\">system</span><span class=\"o\">}</span><span class=\"bp\">;</span>\n      <span class=\"k\">in</span> <span class=\"o\">{</span>\n        <span class=\"n\">devShells.default</span> <span class=\"bp\">=</span> <span class=\"n\">pkgs.mkShell</span> <span class=\"o\">{</span>\n          <span class=\"n\">packages</span> <span class=\"bp\">=</span> <span class=\"o\">[</span> <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">pkgs.lean</span><span class=\"bp\">-</span><span class=\"n\">all</span> <span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">pkgs.vscode</span> <span class=\"o\">]</span><span class=\"bp\">;</span>\n        <span class=\"o\">}</span><span class=\"bp\">;</span>\n      <span class=\"o\">})</span><span class=\"bp\">;</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>I then use </p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">new</span> <span class=\"bp\">&lt;</span><span class=\"n\">project</span><span class=\"bp\">&gt;</span>\n<span class=\"n\">lake</span> <span class=\"n\">init</span> <span class=\"bp\">&lt;</span><span class=\"n\">project</span><span class=\"bp\">&gt;</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>works perfectly! thanks</p>",
        "id": 421181559,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1707804152
    }
]