[
    {
        "content": "<p>Consider the MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#eval</span><span class=\"w\"> </span><span class=\"n\">Lean.versionString</span><span class=\"w\"> </span><span class=\"c1\">-- \"4.9.0-rc1\"</span>\n\n<span class=\"kd\">structure</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"w\"> </span><span class=\"n\">where</span>\n<span class=\"w\">  </span><span class=\"n\">pitch</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">UInt64</span>\n<span class=\"w\">  </span><span class=\"n\">start</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Nat</span>\n\n<span class=\"kd\">def</span><span class=\"w\"> </span><span class=\"n\">Note.containsNote</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n1</span><span class=\"w\"> </span><span class=\"n\">n2</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"n\">n1.start</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"n\">n2.start</span>\n\n<span class=\"kd\">def</span><span class=\"w\"> </span><span class=\"n\">Note.lowerSemitone</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">pitch</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">n.pitch</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">}</span>\n\n<span class=\"kd\">theorem</span><span class=\"w\"> </span><span class=\"n\">Note.self_containsNote_lowerSemitone_self</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">n.containsNote</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Note.lowerSemitone</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"kd\">by</span>\n<span class=\"w\">  </span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Note.containsNote</span><span class=\"o\">]</span>\n<span class=\"w\">  </span><span class=\"n\">unfold</span><span class=\"w\"> </span><span class=\"n\">Note.lowerSemitone</span>\n<span class=\"w\">  </span><span class=\"c\">/-</span>\n<span class=\"cm\">  n : Note</span>\n<span class=\"cm\">  ⊢ n.start ≤ { pitch := n.pitch - 1, start := n.start }.start</span>\n<span class=\"cm\">  -/</span>\n<span class=\"w\">  </span><span class=\"c1\">-- simp (config := { etaStruct := .none }) -- uncomment line to see lean hang.</span>\n</code></pre></div>\n<p>On uncommenting the last <code>simp</code> line, Lean hangs. Experiment <a href=\"https://live.lean-lang.org/#code=%23eval%20Lean.versionString%20--%20%224.9.0-rc1%22%0A%0Astructure%20Note%20where%0A%20%20pitch%20%3A%20UInt64%0A%20%20start%20%3A%20Nat%0A%0Adef%20Note.containsNote%20(n1%20n2%20%3A%20Note)%20%3A%20Prop%20%3A%3D%0A%20%20n1.start%20%E2%89%A4%20n2.start%0A%0Adef%20Note.lowerSemitone%20(n%20%3A%20Note)%20%3A%20Note%20%3A%3D%0A%20%20%7B%20n%20with%20pitch%20%3A%3D%20n.pitch%20-%201%20%7D%0A%0Atheorem%20Note.self_containsNote_lowerSemitone_self%20(n%20%3A%20Note)%20%3A%0A%20%20%20%20n.containsNote%20(Note.lowerSemitone%20n)%20%3A%3D%20by%0A%20%20simp%20%5BNote.containsNote%5D%0A%20%20unfold%20Note.lowerSemitone%0A%20%20%2F-%0A%20%20n%20%3A%20Note%0A%20%20%E2%8A%A2%20n.start%20%E2%89%A4%20%7B%20pitch%20%3A%3D%20n.pitch%20-%201%2C%20start%20%3A%3D%20n.start%20%7D.start%0A%20%20-%2F%0A%20%20--%20simp%20(config%20%3A%3D%20%7B%20etaStruct%20%3A%3D%20.none%20%7D)%20--%20uncomment%20line%20to%20see%20lean%20hang.%0A%0A\">at this live.lean-lang.org</a> URL. It feels like a bug to me, since the file has nothing in it, but I'm wondering if I'm holding <code>simp</code> wrong somehow? Should I file this as an issue?</p>",
        "id": 443668721,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1717985911
    },
    {
        "content": "<p>This is enough to hang <code>simp</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"bp\">.</span><span class=\"n\">self_containsNote_lowerSemitone_self</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">n</span><span class=\"bp\">.</span><span class=\"n\">containsNote</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Note</span><span class=\"bp\">.</span><span class=\"n\">lowerSemitone</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Note</span><span class=\"bp\">.</span><span class=\"n\">containsNote</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"bp\">.</span><span class=\"n\">lowerSemitone</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 443669796,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717986786
    },
    {
        "content": "<p>You can use <code>dsimp</code> as a workaround here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"bp\">.</span><span class=\"n\">self_containsNote_lowerSemitone_self</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">n</span><span class=\"bp\">.</span><span class=\"n\">containsNote</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Note</span><span class=\"bp\">.</span><span class=\"n\">lowerSemitone</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"n\">unfold</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"bp\">.</span><span class=\"n\">containsNote</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"bp\">.</span><span class=\"n\">lowerSemitone</span>\n<span class=\"w\">  </span><span class=\"n\">dsimp</span>\n<span class=\"w\">  </span><span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 443669941,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717986908
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> Thanks, though the actual scenario is more complex, so Is settled on the workaround:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span><span class=\"w\"> </span><span class=\"n\">Note.self_containsNote_lowerSemitone_self</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">n.containsNote</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Note.lowerSemitone</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"kd\">by</span>\n<span class=\"w\">  </span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Note.containsNote</span><span class=\"o\">]</span>\n<span class=\"w\">  </span><span class=\"n\">unfold</span><span class=\"w\"> </span><span class=\"n\">Note.lowerSemitone</span>\n<span class=\"w\">  </span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">le_refl</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">true_and</span><span class=\"o\">]</span>\n<span class=\"w\">  </span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Note.lastPlayed</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">le_refl</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Am I right in assuming that this is in fact a bug I should file?</p>",
        "id": 443670050,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1717987010
    },
    {
        "content": "<blockquote>\n<p>Should I file this as an issue?</p>\n</blockquote>\n<p>Yeah, I think this is an issue that you should report. Unless you think <code>etaStruct</code> should be part of it, I'd suggest using my single-<code>simp</code> version in the report, since it shows it has nothing to do with interactions between <code>simp</code>, <code>unfold</code>, and the <code>etaStruct</code> setting.</p>",
        "id": 443670057,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717987023
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 443670070,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1717987036
    },
    {
        "content": "<p>A little more playing around suggests:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#eval</span><span class=\"w\"> </span><span class=\"n\">Lean.versionString</span><span class=\"w\"> </span><span class=\"c1\">-- \"4.9.0-nightly-2024-05-23\"</span>\n\n<span class=\"kd\">structure</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"w\"> </span><span class=\"n\">where</span>\n<span class=\"w\">  </span><span class=\"n\">pitch</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">UInt64</span>\n<span class=\"w\">  </span><span class=\"n\">start</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Nat</span>\n\n<span class=\"kd\">def</span><span class=\"w\"> </span><span class=\"n\">Note.containsNote</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n1</span><span class=\"w\"> </span><span class=\"n\">n2</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"n\">n1.start</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"n\">n2.start</span>\n\n<span class=\"kd\">def</span><span class=\"w\"> </span><span class=\"n\">Note.lowerSemitone</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">pitch</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">n.pitch</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">}</span>\n\n<span class=\"kd\">theorem</span><span class=\"w\"> </span><span class=\"n\">Note.self_containsNote_lowerSemitone_self</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Note</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">n.containsNote</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Note.lowerSemitone</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"kd\">by</span>\n<span class=\"w\">  </span><span class=\"c1\">-- dsimp (config := { proj := false }) [Note.containsNote, Note.lowerSemitone] -- does not hang</span>\n<span class=\"w\">  </span><span class=\"n\">dsimp</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span><span class=\"n\">proj</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">true</span><span class=\"w\"> </span><span class=\"o\">})[</span><span class=\"n\">Note.containsNote</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Note.lowerSemitone</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"c1\">-- hangs.</span>\n</code></pre></div>\n<p>So it's something to do with projections?</p>",
        "id": 443670695,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1717987563
    },
    {
        "content": "<p>OK, filed as <a href=\"https://github.com/leanprover/lean4/issues/4413\">https://github.com/leanprover/lean4/issues/4413</a></p>",
        "id": 443670777,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1717987656
    }
]