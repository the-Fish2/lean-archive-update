[
    {
        "content": "<p><strong>EDIT</strong>: I now have this working; and the library is published to <a href=\"https://github.com/jeswr/RDF.lean\">https://github.com/jeswr/RDF.lean</a></p>\n<p>I'm trying to put together an <a href=\"https://en.wikipedia.org/wiki/Resource_Description_Framework\">RDF</a> library for lean, rather than building parsers and serialisers from the ground up - I am trying to use FFI with existing rust crates used in <a href=\"https://github.com/oxigraph/oxigraph\">Oxigraph</a>. This works for some functionalities, but fails to build when using the oxigraph parsers with the error below. Is there some way of configuring the linker from the lakefile so that it can find the pthread_atfork symbol?</p>\n<p>My code is at <a href=\"https://github.com/jeswr/RustFFI.lean\">https://github.com/jeswr/RustFFI.lean</a>, and the error can be reproduced by running <code>lake exe ffi</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">libc</span> <span class=\"n\">v0.2.152</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">cfg</span><span class=\"bp\">-</span><span class=\"k\">if</span> <span class=\"n\">v1.0.0</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">ppv</span><span class=\"bp\">-</span><span class=\"n\">lite86</span> <span class=\"n\">v0.2.17</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">oxiri</span> <span class=\"n\">v0.2.3</span><span class=\"bp\">-</span><span class=\"n\">alpha.1</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">oxilangtag</span> <span class=\"n\">v0.1.3</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">memchr</span> <span class=\"n\">v2.7.1</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">getrandom</span> <span class=\"n\">v0.2.12</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">rand_core</span> <span class=\"n\">v0.6.4</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">rand_chacha</span> <span class=\"n\">v0.3.1</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">rand</span> <span class=\"n\">v0.8.5</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">oxrdf</span> <span class=\"n\">v0.2.0</span><span class=\"bp\">-</span><span class=\"n\">alpha.2</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">oxttl</span> <span class=\"n\">v0.1.0</span><span class=\"bp\">-</span><span class=\"n\">alpha.2</span>\n   <span class=\"n\">Compiling</span> <span class=\"n\">some_rust_lib</span> <span class=\"n\">v0.1.0</span> <span class=\"o\">(</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jesght</span><span class=\"bp\">/</span><span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">GitHub</span><span class=\"bp\">/</span><span class=\"n\">RustFFI.lean</span><span class=\"o\">)</span>\n    <span class=\"n\">Finished</span> <span class=\"n\">release</span> <span class=\"o\">[</span><span class=\"n\">optimized</span><span class=\"o\">]</span> <span class=\"n\">target</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">38</span><span class=\"n\">s</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">libsome_rust_lib.so</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">ffi.c</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">Creating</span> <span class=\"n\">libffi.a</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">libffi.so</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">ffi</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jesght</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/leanc -o ./.lake/build/bin/ffi ./.lake/build/ir/Main.c.o ./.lake/build/libsome_rust_lib.a ./.lake/build/libffi.a</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">ld.lld</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">undefined</span> <span class=\"n\">symbol</span><span class=\"o\">:</span> <span class=\"n\">pthread_atfork</span>\n<span class=\"bp\">&gt;&gt;&gt;</span> <span class=\"n\">referenced</span> <span class=\"kd\">by</span> <span class=\"n\">rand.bc76296bf3435627</span><span class=\"bp\">-</span><span class=\"n\">cgu.1</span>\n<span class=\"bp\">&gt;&gt;&gt;</span>               <span class=\"n\">rand</span><span class=\"bp\">-</span><span class=\"mi\">3</span><span class=\"n\">f442ab5a627cfd5.rand.bc76296bf3435627</span><span class=\"bp\">-</span><span class=\"n\">cgu.1.rcgu.o</span><span class=\"o\">:(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">sys_common</span><span class=\"o\">::</span><span class=\"n\">once</span><span class=\"o\">::</span><span class=\"n\">futex</span><span class=\"o\">::</span><span class=\"n\">Once</span><span class=\"o\">::</span><span class=\"n\">call</span><span class=\"o\">::</span><span class=\"n\">h8aa64e5ca0a6779a</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">archive</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">libsome_rust_lib.a</span>\n<span class=\"bp\">&gt;&gt;&gt;</span> <span class=\"n\">did</span> <span class=\"n\">you</span> <span class=\"n\">mean</span><span class=\"o\">:</span> <span class=\"n\">pthread_atfork</span><span class=\"bp\">@</span><span class=\"n\">GLIBC_2.2.5</span>\n<span class=\"bp\">&gt;&gt;&gt;</span> <span class=\"n\">defined</span> <span class=\"k\">in</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jesght</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/lib/glibc/libpthread.so</span>\n<span class=\"n\">clang</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">linker</span> <span class=\"n\">command</span> <span class=\"n\">failed</span> <span class=\"k\">with</span> <span class=\"n\">exit</span> <span class=\"n\">code</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"bp\">-</span><span class=\"n\">v</span> <span class=\"n\">to</span> <span class=\"n\">see</span> <span class=\"n\">invocation</span><span class=\"o\">)</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jesght</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/leanc` exited with code</span>\n</code></pre></div>",
        "id": 418837780,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1706622091
    },
    {
        "content": "<p>While I'm responsible for that part of the toolchain I'm afraid I still don't understand Linux symbol versioning enough to pinpoint the issue. Two general remarks:</p>\n<ul>\n<li>You can force Lean to use the system linker (and C compiler) like Rust using the environment variable <code>LEANC_CC=cc</code></li>\n<li>Alternatively, using dynamic instead of static linking can simplify linking since then the Rust toolchain is responsible for linking Rust code</li>\n</ul>",
        "id": 418844712,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1706624326
    },
    {
        "content": "<blockquote>\n<p>You can force Lean to use the system linker (and C compiler) like Rust using the environment variable LEANC_CC=cc</p>\n</blockquote>\n<p>Doing this boils up new errors (below) that I fear will be a rabbit hole so leaving continuing with this pathway as a last resort</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jesght</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/leanc -o ./.lake/build/bin/ffi ./.lake/build/ir/Main.c.o ./.lake/build/libsome_rust_lib.a ./.lake/build/libffi.a</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">ld</span><span class=\"o\">:</span> <span class=\"n\">cannot</span> <span class=\"n\">find</span> <span class=\"bp\">-</span><span class=\"n\">lc</span><span class=\"bp\">++</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n<span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">ld</span><span class=\"o\">:</span> <span class=\"n\">cannot</span> <span class=\"n\">find</span> <span class=\"bp\">-</span><span class=\"n\">lc</span><span class=\"bp\">++</span><span class=\"n\">abi</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n<span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">ld</span><span class=\"o\">:</span> <span class=\"n\">cannot</span> <span class=\"n\">find</span> <span class=\"bp\">-</span><span class=\"n\">lgmp</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n<span class=\"n\">collect2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">ld</span> <span class=\"n\">returned</span> <span class=\"mi\">1</span> <span class=\"n\">exit</span> <span class=\"n\">status</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jesght</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/leanc` exited with code 1</span>\n</code></pre></div>\n<blockquote>\n<p>Alternatively, using dynamic instead of static linking can simplify linking since then the Rust toolchain is responsible for linking Rust code</p>\n</blockquote>\n<p>Do you have pointers to an example of how to configure this in Lean? I'm struggling to find any relevant resources - presumably I should be replacing <code>buildStaticLib</code> with a dynamic equivalent; I just cant work out what that should be.</p>",
        "id": 418847852,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1706625186
    },
    {
        "content": "<p>Turns this is something ChatGPT can answer with a bit of the right prompting (<a href=\"https://chat.openai.com/share/403f7afb-a66c-4095-916f-27ab418b5dbd\">https://chat.openai.com/share/403f7afb-a66c-4095-916f-27ab418b5dbd</a>). Working code is now pushed to <a href=\"https://github.com/jeswr/RustFFI.lean\">https://github.com/jeswr/RustFFI.lean</a>.</p>",
        "id": 418850894,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1706625969
    }
]