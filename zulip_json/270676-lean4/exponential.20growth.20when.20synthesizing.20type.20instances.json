[
    {
        "content": "<p>Consider the following code</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- creates a chain P → P → ... → P</span>\n<span class=\"kd\">@[</span><span class=\"n\">reducible</span><span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">imp_chain</span> <span class=\"o\">(</span><span class=\"n\">P</span><span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n    <span class=\"k\">match</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Nat.zero</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">P</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">m</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">P</span> <span class=\"bp\">→</span> <span class=\"n\">imp_chain</span> <span class=\"n\">P</span> <span class=\"n\">m</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">trace.Meta.synthInstance.newAnswer</span> <span class=\"n\">true</span> <span class=\"k\">in</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span><span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Decidable</span> <span class=\"n\">P</span><span class=\"o\">]:</span> <span class=\"n\">imp_chain</span> <span class=\"n\">P</span> <span class=\"mi\">6</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Decidable.byContradiction</span>   <span class=\"c1\">-- 3, 9, 21, 45, 93, 95</span>\n</code></pre></div>\n<p>The number you get from the trace are 3, 9, 21, 45, 93, 95.  The numbers are 3 * (2^n - 1) (exponentia), but then it slows down at 95.  If you increase 6 to 7 in the example, it becomes 97.  So it seems like it has hit linear growth after 93.</p>\n<p>But actually, this is because <code>synthInstance.maxSize</code> has a default value of 128.  If you increase <code>synthInstance.maxSize</code> to 256, then you do see the next number 189:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">synthInstance.maxSize</span> <span class=\"mi\">256</span> <span class=\"k\">in</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">trace.Meta.synthInstance.newAnswer</span> <span class=\"n\">true</span> <span class=\"k\">in</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span><span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Decidable</span> <span class=\"n\">P</span><span class=\"o\">]:</span> <span class=\"n\">imp_chain</span> <span class=\"n\">P</span> <span class=\"mi\">6</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Decidable.byContradiction</span>    <span class=\"c1\">-- 3, 9, 21, 45, 93, 189</span>\n</code></pre></div>\n<p>and now if you go to P 7, you get 191.</p>\n<p>It seems like the size grows exponentially until it hits the limit <code>synthInstance.maxSize</code>, then it becomes linear.  Why does it do that?  Why is it exponential at all?</p>",
        "id": 437292569,
        "sender_full_name": "Ted Hwa",
        "timestamp": 1715011166
    }
]