[
    {
        "content": "<p>I found a weird failure of type-class inference, and I am unable to minimize it, and therefore depends on Mathlib.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.InnerProductSpace.Calculus</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">trace.Meta.synthInstance</span> <span class=\"n\">true</span>\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NormedSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">H</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">InnerProductSpace</span> <span class=\"n\">ℝ</span> <span class=\"n\">H</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">OpensMeasurableSpace</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">H</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"n\">ℝ</span><span class=\"o\">]</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">↦</span> <span class=\"bp\">‖</span><span class=\"n\">g</span><span class=\"bp\">‖₊</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- let z : NormedAddCommGroup (E →L[ℝ] H) := by infer_instance -- this works</span>\n  <span class=\"n\">refine</span> <span class=\"n\">Measurable.nnnorm</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"c1\">-- this works, but caches a failure of `NormedSpace ℝ H`</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">fderiv</span> <span class=\"n\">ℝ</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- ... which causes this to fail</span>\n</code></pre></div>\n<p>The problem is that my <code>refine</code> succeeds, but caches a failure of <code>NormedSpace ℝ H</code> when trying to synthesize <code>NormedAddCommGroup (E →L[ℝ] H)</code>. This causes the last line to fail. Commenting out the <code>refine</code> line fixes the error on the next line. <br>\nMaking minor modifications does not cause this cached failure (see commented line). Here is the relevant part of the type-class trace. (The instance <code>InnerProductSpace.toNormedSpace</code> should unify, and does in the commented-out line.)<br>\n<a href=\"/user_uploads/3121/midrhnFr1FoA7wvb9y7RJydL/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/midrhnFr1FoA7wvb9y7RJydL/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/midrhnFr1FoA7wvb9y7RJydL/image.png\"></a></div>",
        "id": 424062863,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1709225272
    }
]