[
    {
        "content": "<p>(deleted)</p>",
        "id": 441193290,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716971951
    },
    {
        "content": "<p>I'm assumign you posted too early? Otherwise there is a bug and i can't see it</p>",
        "id": 441193539,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972044
    },
    {
        "content": "<p>I have the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"k\">with</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">i</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">)</span>\n\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>I can't get this eval to actually resolve - it seems there's some kind of issue with my recursion I guess - but this really doesn't look unreasonable to me. Any tips on how to fix this?</p>",
        "id": 441193601,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972068
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> ah! Yes I must have hit enter?</p>",
        "id": 441193659,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972097
    },
    {
        "content": "<p>Posted the message now :)</p>",
        "id": 441193676,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972103
    },
    {
        "content": "<p>Perm doesn't resolve for me, what namespaces do you have open?</p>",
        "id": 441193851,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972165
    },
    {
        "content": "<p>Ah, Equiv I think</p>",
        "id": 441193890,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972181
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/wMPO7RQow913iUQwYrcRHH4a/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/wMPO7RQow913iUQwYrcRHH4a/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/wMPO7RQow913iUQwYrcRHH4a/image.png\"></a></div><p>that's not enough^^</p>",
        "id": 441193970,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972205
    },
    {
        "content": "<p>You can try out your MWEs on <a href=\"http://live.lean-lang.org\">live.lean-lang.org</a> to see if they work in a bare environment</p>",
        "id": 441194014,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972221
    },
    {
        "content": "<p>I have adjusted my MWE :)</p>",
        "id": 441194324,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972344
    },
    {
        "content": "<p>I am not sure how to minimise the imports but that isn't so important.</p>",
        "id": 441194355,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972355
    },
    {
        "content": "<p>Basically, given some function <code>f : A -&gt; A</code>, I want to calculate doublings of <code>f</code>. And f is concretely defined and this is on a nice finite type and so forth.</p>",
        "id": 441194613,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972448
    },
    {
        "content": "<p>Right, I'm assuming that <code>![]</code> is a mathlib type? I would not be surprised if it is not at all made for evaluation and suffers from very poor performance characteristics tbh</p>",
        "id": 441194925,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972558
    },
    {
        "content": "<p><a href=\"https://tqft.net/mathlib4files/Data/Fin/VecNotation\">file#Data/Fin/VecNotation</a></p>",
        "id": 441194982,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716972583
    },
    {
        "content": "<p>It's notation for Fin n -&gt; A tuples.</p>",
        "id": 441194994,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972587
    },
    {
        "content": "<p>Ah thanks! Couldn't remember the file it was defined in.</p>",
        "id": 441195079,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972608
    },
    {
        "content": "<p>This doesn't seem to be related to the recursion, <code>#eval ![0, 31, 1, 30, 2, 29, 3, 28, 4, 27, 5, 26, 6, 25, 7, 24, 8, 23, 9, 22, 10, 21, 11, 20, 12, 19, 13, 18, 14, 17, 15, 16] 31</code> is already slow</p>",
        "id": 441195182,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1716972655
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"k\">with</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">][</span><span class=\"n\">i</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">)</span>\n\n<span class=\"w\"> </span><span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>so if I use an array here (If i understand correctly this is the proper translation? This computation basically runs instantly</p>",
        "id": 441195185,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972656
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Fin</span><span class=\"bp\">.</span><span class=\"n\">VecNotation</span>\n\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">])</span>\n<span class=\"w\">    </span><span class=\"o\">(</span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>And this doesn't evaluate I think.</p>",
        "id": 441195223,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972670
    },
    {
        "content": "<p>So if you want to do this I would suggest either use a proper data structure like array or figure out how to make this vecnotation yield performant code</p>",
        "id": 441195292,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972700
    },
    {
        "content": "<p>I don't think the iterated call is the issue:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">set_option</span><span class=\"w\"> </span><span class=\"n\">profiler</span><span class=\"w\"> </span><span class=\"n\">true</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">3</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">5</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">6</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">7</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">8</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">9</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">10</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">11</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">12</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">13</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">14</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">15</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">16</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">17</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">18</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"w\"> </span><span class=\"c1\">-- 118ms</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"c1\">-- 268ms</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"w\"> </span><span class=\"c1\">-- 619ms</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"w\"> </span><span class=\"c1\">-- 1.05s</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"w\"> </span><span class=\"c1\">-- 1.91s</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\"> </span><span class=\"c1\">-- 2.57s</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"c1\">-- 7.52s</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"c1\">-- 9.98s</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"w\"> </span><span class=\"c1\">-- 20.1s</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"w\"> </span><span class=\"c1\">-- ...</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">29</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">30</span>\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">31</span>\n</code></pre></div>",
        "id": 441195302,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716972701
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/Performant.20code.20.2B.20recursion/near/441195185\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"k\">with</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">][</span><span class=\"n\">i</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">)</span>\n\n<span class=\"w\"> </span><span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>so if I use an array here (If i understand correctly this is the proper translation? This computation basically runs instantly</p>\n</blockquote>\n<p>This doesn't surprise me! Is an array of fixed size?</p>",
        "id": 441195308,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972702
    },
    {
        "content": "<p>You can grow arrays as you want. They are what Rust or C++ would call a <code>Vec</code></p>",
        "id": 441195440,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972735
    },
    {
        "content": "<p>Right. Essentially I'm concerned with, if you like, arrays of fixed size, analogous to <code>Fin n -&gt; A</code>. The latter is easy to work with, but as I am finding, extremely not perfomant.</p>",
        "id": 441195582,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972783
    },
    {
        "content": "<p>Naively I thought it would be :)</p>",
        "id": 441195627,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972800
    },
    {
        "content": "<p>You can define a subtype <code>{ xs : Array a // xs.size = n}</code> if you want. Iirc some batteries people are working on bulding some API around this notion but you can live without that if you just want to index into it</p>",
        "id": 441195711,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972835
    },
    {
        "content": "<p>It is just a little embarassing as nominally I have implemented a \"faster\" version of another function, but in fact it is not faster in practice because of this.</p>",
        "id": 441195872,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972886
    },
    {
        "content": "<p>I have a feeling that you won't be able to convince mathlib of designing their abstractions such that they are performant for evaluation :P</p>",
        "id": 441195958,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972921
    },
    {
        "content": "<p>In a sense what I want to do is \"load\" the values of a \"f : Fin n -&gt; A\" into an array and work with that.</p>",
        "id": 441195973,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972925
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Array.ofFn#doc\">docs#Array.ofFn</a> this exists!</p>",
        "id": 441196036,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716972951
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/Performant.20code.20.2B.20recursion/near/441195958\">said</a>:</p>\n<blockquote>\n<p>I have a feeling that you won't be able to convince mathlib of designing their abstractions such that they are performant for evaluation :P</p>\n</blockquote>\n<p>This is for a personal project (for my thesis...) rather than anything that will be in mathlib.</p>",
        "id": 441196044,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972954
    },
    {
        "content": "<p>Ah very nice.</p>",
        "id": 441196113,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972971
    },
    {
        "content": "<p>Difficult to go the other way ofc</p>",
        "id": 441196147,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972985
    },
    {
        "content": "<p>but that might be fine.</p>",
        "id": 441196168,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716972993
    },
    {
        "content": "<p>Why? You can just partially apply <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Array.get#doc\">docs#Array.get</a> and get a <code>Fin array.size -&gt; a</code></p>",
        "id": 441196247,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716973023
    },
    {
        "content": "<p>It's actually quite difficult to get lean to compute a closure instead of eta-expanding</p>",
        "id": 441196284,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716973044
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/Performant.20code.20.2B.20recursion/near/441196247\">said</a>:</p>\n<blockquote>\n<p>Why? You can just partially apply <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Array.get#doc\">docs#Array.get</a> and get a <code>Fin array.size -&gt; a</code></p>\n</blockquote>\n<p>That is true.</p>",
        "id": 441196319,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716973061
    },
    {
        "content": "<p>Difficult if I need to iterate a permutation into a permutation but I can avoid that here.</p>",
        "id": 441196482,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716973109
    },
    {
        "content": "<p>This does seem to compile as desired:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">myArray</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">]</span>\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"k\">with</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">myArray</span><span class=\"bp\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"n\">i</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">)</span>\n\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">31</span>\n</code></pre></div>",
        "id": 441196924,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716973260
    },
    {
        "content": "<p>Aye. But I do need to start with a function for my context, and this doesn't.</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">myArray</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Array</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">    </span><span class=\"n\">Array</span><span class=\"bp\">.</span><span class=\"n\">ofFn</span><span class=\"w\"> </span><span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span>\n<span class=\"w\">      </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">]</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"k\">with</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">myArray</span><span class=\"bp\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"n\">i</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">)</span>\n\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">31</span>\n</code></pre></div>",
        "id": 441197181,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716973358
    },
    {
        "content": "<p>In a sense it feels like I want to - I want it to, I guess this is what you mean by compute the closure - I want it to fully compute that array, rather than be lazy about it</p>",
        "id": 441197269,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716973393
    },
    {
        "content": "<p>Incidentally, this starts getting slow again:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">myArray</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Array</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">   </span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span>\n<span class=\"w\">      </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">]</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"k\">with</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">myArray</span><span class=\"bp\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"n\">i</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">)</span>\n\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"mi\">31</span>\n</code></pre></div>",
        "id": 441197442,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716973449
    },
    {
        "content": "<p>And I think this <em>is</em> the recursion this time.</p>",
        "id": 441197472,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716973458
    },
    {
        "content": "<p>Oh except now it works on recompile. Shrug!</p>",
        "id": 441197533,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716973488
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">Equiv</span>\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">Perm</span><span class=\"bp\">.</span><span class=\"n\">fromArray</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">n</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Array</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Array</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">))</span>\n<span class=\"w\">    </span><span class=\"o\">(</span><span class=\"n\">ha</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">rfl</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"o\">(</span><span class=\"n\">hb</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">rfl</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">∀</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"o\">((</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"bp\">.</span><span class=\"n\">cast</span><span class=\"w\"> </span><span class=\"n\">ha</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">cast</span><span class=\"w\"> </span><span class=\"n\">hb</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">decide</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">Perm</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"n\">toFun</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"bp\">.</span><span class=\"n\">cast</span><span class=\"w\"> </span><span class=\"n\">ha</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"n\">invFun</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"bp\">.</span><span class=\"n\">cast</span><span class=\"w\"> </span><span class=\"n\">hb</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"n\">left_inv</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">ab</span>\n<span class=\"w\">  </span><span class=\"n\">right_inv</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">LeftInverse</span><span class=\"bp\">.</span><span class=\"n\">rightInverse_of_card_le</span>\n<span class=\"w\">    </span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"bp\">.</span><span class=\"n\">cast</span><span class=\"w\"> </span><span class=\"n\">hb</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"bp\">.</span><span class=\"n\">cast</span><span class=\"w\"> </span><span class=\"n\">ha</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"w\"> </span><span class=\"bp\">·</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">le_rfl</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">controlBits4_perm</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Perm</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"n\">Perm</span><span class=\"bp\">.</span><span class=\"n\">fromArray</span>\n<span class=\"w\">    </span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span>\n<span class=\"w\">      </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">]</span>\n<span class=\"w\">    </span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span>\n<span class=\"w\">      </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">]</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">controlBits4_perm_powers</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"k\">with</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">controlBits4_perm</span><span class=\"w\"> </span><span class=\"n\">i</span>\n<span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">controlBits4_perm_powers</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">controlBits4_perm_powers</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">)</span>\n\n<span class=\"bp\">#</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">controlBits4_perm_powers</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"mi\">31</span>\n</code></pre></div>",
        "id": 441199039,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716974068
    },
    {
        "content": "<p>Very nice.</p>",
        "id": 441199098,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974094
    },
    {
        "content": "<p>Somewhat more simply, I had luck with this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">myArray</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Array</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">   </span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span>\n<span class=\"w\">      </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">]</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">myInvArray</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Array</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">   </span><span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"mi\">28</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">]</span>\n\n<span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">controlBits4_perm</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Perm</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Fin</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"n\">toFun</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">myArray</span><span class=\"bp\">.</span><span class=\"n\">get</span>\n<span class=\"w\">  </span><span class=\"n\">invFun</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">myInvArray</span><span class=\"bp\">.</span><span class=\"n\">get</span>\n<span class=\"w\">  </span><span class=\"n\">left_inv</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">fin_cases</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"bp\">&lt;;&gt;</span><span class=\"w\"> </span><span class=\"n\">rfl</span>\n<span class=\"w\">  </span><span class=\"n\">right_inv</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">fin_cases</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"bp\">&lt;;&gt;</span><span class=\"w\"> </span><span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 441199327,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974172
    },
    {
        "content": "<p>So it does seem the key is: start it as an Array!</p>",
        "id": 441199359,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974185
    },
    {
        "content": "<p>you can use <code>by decide</code> instead of <code>fin_cases</code></p>",
        "id": 441199418,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716974205
    },
    {
        "content": "<p>ah thanks</p>",
        "id": 441199434,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974212
    },
    {
        "content": "<p>(my version saves on checking one of the two conditions because of the pigeonhole principle)</p>",
        "id": 441199492,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716974239
    },
    {
        "content": "<p><code>by decide </code> doesn't work for me because of the free variable.</p>",
        "id": 441199561,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974268
    },
    {
        "content": "<p>don't introduce it</p>",
        "id": 441199575,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716974275
    },
    {
        "content": "<p>Oh I see</p>",
        "id": 441199602,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974282
    },
    {
        "content": "<p>Very nice :)</p>",
        "id": 441199656,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974295
    },
    {
        "content": "<p>I wonder if you could generalise beyond the fins.</p>",
        "id": 441199905,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974398
    },
    {
        "content": "<p>Anyway: may I use this code? It's a nice efficient implementation.</p>",
        "id": 441199977,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974414
    },
    {
        "content": "<p>yes please, that's why I wrote it</p>",
        "id": 441200030,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716974433
    },
    {
        "content": "<p>It seemed polite to double check.</p>",
        "id": 441200061,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974450
    },
    {
        "content": "<p>I am glad I asked about this!</p>",
        "id": 441200107,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974466
    },
    {
        "content": "<p>You can't generalize beyond the fins, because that's how arrays work. If you want to use another type you should just pre/postcompose with an equiv</p>",
        "id": 441200140,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716974479
    },
    {
        "content": "<p>Right! As it happens I don't need that so it's all good.</p>",
        "id": 441200193,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716974500
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I have another function (I won't get into the details) that I am struggling to evaluate successfully for larger inputs. Is there a way to see where a function is bottlenecking? It would be good to understand what the slow parts of my code actually are.</p>",
        "id": 441209215,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716977907
    },
    {
        "content": "<p>You can compile them to a binary and use a profiler like <code>perf</code> + <code>hotspot</code> to check where you are spending most time in</p>",
        "id": 441225671,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1716984200
    },
    {
        "content": "<p>Aha</p>",
        "id": 441226182,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716984389
    }
]