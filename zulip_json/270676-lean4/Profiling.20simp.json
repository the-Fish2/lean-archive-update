[
    {
        "content": "<p>I have <code>set_option profiler true</code> to try to find out why my code is so slow. I got the output</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">simp</span> <span class=\"n\">took</span> <span class=\"mi\">225</span><span class=\"n\">ms</span>\n<span class=\"n\">simp</span> <span class=\"n\">took</span> <span class=\"mi\">469</span><span class=\"n\">ms</span>\n<span class=\"n\">simp</span> <span class=\"n\">took</span> <span class=\"mi\">285</span><span class=\"n\">ms</span>\n<span class=\"n\">simp</span> <span class=\"n\">took</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">03</span><span class=\"n\">s</span>\n<span class=\"n\">simp</span> <span class=\"n\">took</span> <span class=\"mi\">41</span><span class=\"bp\">.</span><span class=\"mi\">9</span><span class=\"n\">s</span>\n<span class=\"n\">type</span> <span class=\"n\">checking</span> <span class=\"n\">took</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">04</span><span class=\"n\">s</span>\n<span class=\"n\">elaboration</span> <span class=\"n\">took</span> <span class=\"mi\">18</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"n\">s</span>\n</code></pre></div>\n<p>for my proof</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">Marlin_numCommitments</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field_F</span> <span class=\"o\">:</span> <span class=\"n\">Field</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">fintype_F</span> <span class=\"o\">:</span> <span class=\"n\">Fintype</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DecidableEq</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Inhabited</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">ω</span> <span class=\"o\">:</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n_stmt</span> <span class=\"n\">n_wit</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Matrix</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"o\">(</span><span class=\"n\">n_stmt</span> <span class=\"bp\">+</span> <span class=\"n\">n_wit</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"o\">((</span><span class=\"n\">n_stmt</span> <span class=\"bp\">+</span> <span class=\"n\">n_wit</span><span class=\"o\">)))</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">MarlinProofSystem</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:=</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"n\">ω</span> <span class=\"n\">n_stmt</span> <span class=\"n\">n_wit</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">numCommitments</span> <span class=\"bp\">=</span> <span class=\"mi\">1029</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">MarlinProofSystem</span><span class=\"o\">,</span> <span class=\"n\">Marlin</span><span class=\"o\">,</span> <span class=\"n\">ProofSystem.fromIOPMonad</span><span class=\"o\">]</span>\n\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">commitment_counter_PolyCommitIOPMonad</span><span class=\"o\">]</span>\n\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">RowCheck</span><span class=\"o\">,</span> <span class=\"n\">LinCheck</span><span class=\"o\">,</span> <span class=\"n\">SumCheckToZero</span><span class=\"o\">,</span> <span class=\"n\">SumCheckTo</span><span class=\"o\">,</span> <span class=\"n\">MatrixCommit</span><span class=\"o\">,</span> <span class=\"n\">SendFieldElement</span><span class=\"o\">]</span>\n\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">bind_assoc</span><span class=\"o\">,</span> <span class=\"n\">SquareR1CS.default_def</span><span class=\"o\">]</span>\n\n  <span class=\"n\">done</span>\n</code></pre></div>",
        "id": 419746387,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1707093529
    },
    {
        "content": "<p>Why are there five different simp times when there are only four calls? Which times map to which calls?</p>",
        "id": 419746415,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1707093568
    },
    {
        "content": "<p>Could it be that <code>simp_rw</code> counts as 3 calls and only two of them are slow enough to trigger a trace mention?</p>",
        "id": 419774625,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707116106
    },
    {
        "content": "<p><code>set_option trace.profiler true</code> might give you the information you need.</p>",
        "id": 419776132,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707117080
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/270676-lean4/topic/Profiling.20simp/near/419774625\">said</a>:</p>\n<blockquote>\n<p>Could it be that <code>simp_rw</code> counts as 3 calls and only two of them are slow enough to trigger a trace mention?</p>\n</blockquote>\n<p>Likely that, yeah. <code>simp_rw</code> is just a sequence of <code>simp only</code> calls</p>",
        "id": 419790257,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707123365
    }
]