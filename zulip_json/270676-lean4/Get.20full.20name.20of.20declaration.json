[
    {
        "content": "<p>How do I get the full name of a declaration in macro/elaborator? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Parser</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Foo</span>\n  <span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"kd\">end</span> <span class=\"n\">Foo</span>\n<span class=\"kn\">open</span> <span class=\"n\">Foo</span>\n\n<span class=\"n\">elab</span> <span class=\"s2\">\"#print_full_name\"</span> <span class=\"n\">n</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"n\">IO.println</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"short name: {n}\"</span>\n  <span class=\"n\">IO.println</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"full name: {n}\"</span> <span class=\"c1\">-- how do I get `Foo.foo ?</span>\n\n<span class=\"bp\">#</span><span class=\"n\">print_full_name</span> <span class=\"n\">foo</span>\n</code></pre></div>\n<p>I want the above to output</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">short</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">foo</span>\n<span class=\"n\">full</span> <span class=\"n\">name</span><span class=\"o\">:</span> <span class=\"n\">Foo.foo</span>\n</code></pre></div>",
        "id": 424761089,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1709592180
    },
    {
        "content": "<p>If there is only one possiblity, this works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elab</span> <span class=\"s2\">\"#print_full_name\"</span> <span class=\"n\">d</span><span class=\"o\">:</span><span class=\"n\">declId</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">nd</span> <span class=\"bp\">←</span> <span class=\"n\">Lean.resolveGlobalConstNoOverload</span> <span class=\"n\">d.raw</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span>\n  <span class=\"n\">IO.println</span> <span class=\"n\">nd</span>\n\n<span class=\"bp\">#</span><span class=\"n\">print_full_name</span> <span class=\"n\">foo</span>\n</code></pre></div>",
        "id": 424761979,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709592540
    },
    {
        "content": "<p>Otherwise, removing the <code>NoOverload</code> will give you a list of possibilities.</p>",
        "id": 424762012,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709592561
    },
    {
        "content": "<p>Thanks, that is exactly the function I was looking for!</p>",
        "id": 424762120,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1709592604
    },
    {
        "content": "<p>Why a <code>declId</code> <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> ? That includes universe information, which you're dropping. You can do this too:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elab</span> <span class=\"s2\">\"#print_full_name\"</span> <span class=\"n\">d</span><span class=\"o\">:</span><span class=\"n\">ident</span> <span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">nd</span> <span class=\"bp\">←</span> <span class=\"n\">Lean.resolveGlobalConstNoOverload</span> <span class=\"n\">d</span>\n  <span class=\"n\">IO.println</span> <span class=\"n\">nd</span>\n</code></pre></div>",
        "id": 424779982,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1709603582
    },
    {
        "content": "<p>Because I had <code>declId</code> in my original question</p>",
        "id": 424780818,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1709604147
    },
    {
        "content": "<p>But then realised that it should be just <code>ident</code>  and simplified the mwe</p>",
        "id": 424780959,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1709604255
    }
]