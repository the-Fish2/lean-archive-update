[
    {
        "content": "<p>Hi, I'm working through FPIL and am a bit stuck on exercise 5 in section 1.6.<br>\nI wrote</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">zip</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">xs</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ys</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"o\">(</span><span class=\"n\">xs</span><span class=\"o\">,</span> <span class=\"n\">ys</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">([],[])</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"o\">[])</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"o\">([],</span><span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">::</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"o\">::</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">zip</span> <span class=\"n\">z</span> <span class=\"n\">w</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>but it complains that it fails to show termination. As it is very early on in FPIL, it feels like I probably should not be proving termination, so my definition must be wrong... can someone point out what I am doing wrong?</p>",
        "id": 422030727,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1708192308
    },
    {
        "content": "<p>Remove the brackets around <code>xs, ys</code> (and the patterns too)</p>",
        "id": 422030777,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1708192337
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/270676-lean4/topic/Hint.20in.20writing.20a.20.60zip.60.20function/near/422030777\">said</a>:</p>\n<blockquote>\n<p>Remove the brackets around <code>xs, ys</code> (and the patterns too)</p>\n</blockquote>\n<p>Thanks! I don’t know why I didn’t think of that…</p>",
        "id": 422030915,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1708192482
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"673728\">Josha Dekker</span> has marked this topic as resolved.</p>",
        "id": 422030921,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708192485
    },
    {
        "content": "<p>Truth is your way around of writing <em>should</em> work, but it currently doesn't. <span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> is working on that</p>",
        "id": 422030943,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1708192525
    },
    {
        "content": "<p>I don't have any concrete plans about this particular issue, where you match on a term that isn't simply one of the parameters, though.</p>",
        "id": 422091671,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1708256951
    }
]