[
    {
        "content": "<p>In the following example, <code>h</code> is marked as being unused even though it is used in the <code>decreasing_by</code> block:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">|</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">f</span> <span class=\"n\">m</span>\n<span class=\"n\">termination_by</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">n</span>\n<span class=\"n\">decreasing_by</span>\n  <span class=\"n\">simp_wf</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">Nat.lt_succ_self</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Is this expected behavior?</p>",
        "id": 410625042,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1704020037
    },
    {
        "content": "<p>You can usually avoid this by using <code>*</code> instead of <code>h</code> in the simp call</p>",
        "id": 410625132,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1704020108
    },
    {
        "content": "<p>But should <code>h</code> be marked as unused in the first place?</p>",
        "id": 410625156,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1704020145
    },
    {
        "content": "<p>And the only way to actually get the hypothesis into the context of the <code>decreasing_by</code> block is to name it. So I'd still have to call it <code>_h</code> to avoid the linter.</p>",
        "id": 410625219,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1704020196
    },
    {
        "content": "<p>Yeah, known issue (<a href=\"https://github.com/leanprover/lean4/issues/2920\">https://github.com/leanprover/lean4/issues/2920</a>). Work arounds are underscores or locally disabling the linter</p>",
        "id": 410635271,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1704030686
    }
]