[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">macro</span><span class=\"o\">:</span><span class=\"mi\">51</span> <span class=\"s2\">\"WHILE\"</span> <span class=\"n\">cond</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"s2\">\"DO\"</span> <span class=\"n\">body</span><span class=\"o\">:</span><span class=\"n\">ppGroup</span><span class=\"o\">(</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"s2\">\"END\"</span> <span class=\"o\">:</span> <span class=\"n\">term</span>  <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">Prog.while</span> <span class=\"bp\">$</span><span class=\"n\">cond</span> <span class=\"bp\">$</span><span class=\"n\">body</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I have the following macro, but ppGroup destroys the TSyntax and so <code>$body</code> doesn't have type <code>TSyntax `term</code>. How do I get around this?</p>",
        "id": 430378553,
        "sender_full_name": "ohhaimark",
        "timestamp": 1711794965
    },
    {
        "content": "<p>I'll split into syntax and macro_rules, but I wanted to be lazy.</p>",
        "id": 430379419,
        "sender_full_name": "ohhaimark",
        "timestamp": 1711795789
    },
    {
        "content": "<p>This was XY problem. Closing.</p>",
        "id": 430382688,
        "sender_full_name": "ohhaimark",
        "timestamp": 1711798631
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"244748\">ohhaimark</span> has marked this topic as resolved.</p>",
        "id": 430382692,
        "sender_full_name": "Notification Bot",
        "timestamp": 1711798634
    },
    {
        "content": "<p>For posterity:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">syntax</span> <span class=\"n\">term</span><span class=\"o\">:</span><span class=\"mi\">51</span> <span class=\"s2\">\"; \"</span> <span class=\"n\">ppDedent</span><span class=\"o\">(</span><span class=\"n\">ppLine</span> <span class=\"n\">term</span><span class=\"o\">:</span><span class=\"mi\">50</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span><span class=\"o\">:</span><span class=\"mi\">51</span> <span class=\"s2\">\"WHILE\"</span> <span class=\"n\">term</span> <span class=\"s2\">\"DO\"</span> <span class=\"n\">ppDedent</span><span class=\"o\">(</span><span class=\"n\">ppLine</span> <span class=\"n\">term</span> <span class=\"n\">ppDedent</span><span class=\"o\">(</span><span class=\"n\">ppLine</span> <span class=\"s2\">\"END\"</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span><span class=\"o\">:</span><span class=\"mi\">51</span> <span class=\"s2\">\"IF\"</span> <span class=\"n\">term</span> <span class=\"s2\">\"THEN\"</span> <span class=\"n\">ppLine</span> <span class=\"n\">term</span> <span class=\"n\">ppDedent</span><span class=\"o\">(</span><span class=\"n\">ppLine</span> <span class=\"s2\">\"END\"</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n<span class=\"n\">syntax</span><span class=\"o\">:</span><span class=\"mi\">51</span> <span class=\"s2\">\"IF\"</span> <span class=\"n\">term</span> <span class=\"s2\">\"THEN\"</span> <span class=\"n\">ppLine</span> <span class=\"n\">ppGroup</span><span class=\"o\">(</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"n\">ppDedent</span><span class=\"o\">(</span><span class=\"n\">ppLine</span> <span class=\"s2\">\"ELSE\"</span><span class=\"o\">)</span> <span class=\"n\">ppLine</span> <span class=\"n\">ppGroup</span><span class=\"o\">(</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"n\">ppDedent</span><span class=\"o\">(</span><span class=\"n\">ppLine</span> <span class=\"n\">ppDedent</span><span class=\"o\">(</span><span class=\"s2\">\"END\"</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n<span class=\"n\">macro_rules</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">WHILE</span> <span class=\"bp\">$</span><span class=\"n\">cond</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"n\">DO</span> <span class=\"bp\">$</span><span class=\"n\">body</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"n\">END</span><span class=\"o\">)</span>  <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">Prog.while</span> <span class=\"bp\">$</span><span class=\"n\">cond</span> <span class=\"bp\">$</span><span class=\"n\">body</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">IF</span> <span class=\"bp\">$</span><span class=\"n\">cond</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"n\">THEN</span> <span class=\"bp\">$</span><span class=\"n\">ifThen</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"n\">END</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">Prog.ift</span> <span class=\"bp\">$</span><span class=\"n\">cond</span> <span class=\"bp\">$</span><span class=\"n\">ifThen</span> <span class=\"bp\">.</span><span class=\"n\">skip</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">IF</span> <span class=\"bp\">$</span><span class=\"n\">cond</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"n\">THEN</span> <span class=\"bp\">$</span><span class=\"n\">ifThen</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"n\">ELSE</span> <span class=\"bp\">$</span><span class=\"n\">ifElse</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"n\">END</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">Prog.ift</span> <span class=\"bp\">$</span><span class=\"n\">cond</span> <span class=\"bp\">$</span><span class=\"n\">ifThen</span> <span class=\"bp\">$</span><span class=\"n\">ifElse</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">l</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"bp\">;</span> <span class=\"bp\">$</span><span class=\"n\">r</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">Prog.seq</span> <span class=\"bp\">$</span><span class=\"n\">l</span> <span class=\"bp\">$</span><span class=\"n\">r</span><span class=\"o\">)</span>\n<span class=\"n\">macro</span><span class=\"o\">:</span><span class=\"mi\">51</span> <span class=\"n\">var</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"s2\">\"::=\"</span> <span class=\"n\">e</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">term</span>  <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">Prog.assign</span> <span class=\"bp\">$</span><span class=\"n\">var</span> <span class=\"bp\">$</span><span class=\"n\">e</span><span class=\"o\">)</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">app_unexpander</span> <span class=\"n\">Prog.seq</span><span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">unexpandSeq</span> <span class=\"o\">:</span> <span class=\"n\">Lean.PrettyPrinter.Unexpander</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">_</span> <span class=\"bp\">$</span><span class=\"n\">l</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"bp\">$</span><span class=\"n\">r</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">l</span><span class=\"bp\">;</span> <span class=\"bp\">$</span><span class=\"n\">r</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">throw</span> <span class=\"o\">()</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">app_unexpander</span> <span class=\"n\">Prog.while</span><span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">unexpandWhile</span> <span class=\"o\">:</span> <span class=\"n\">Lean.PrettyPrinter.Unexpander</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">_</span> <span class=\"bp\">$</span><span class=\"n\">cond</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"bp\">$</span><span class=\"n\">body</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">WHILE</span> <span class=\"bp\">$</span><span class=\"n\">cond</span> <span class=\"n\">DO</span> <span class=\"bp\">$</span><span class=\"n\">body</span> <span class=\"n\">END</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">throw</span> <span class=\"o\">()</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">app_unexpander</span> <span class=\"n\">Prog.ift</span><span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">unexpandIf</span> <span class=\"o\">:</span> <span class=\"n\">Lean.PrettyPrinter.Unexpander</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"bp\">$</span><span class=\"n\">_</span> <span class=\"bp\">$</span><span class=\"n\">cond</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"bp\">$</span><span class=\"n\">ifThen</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"bp\">$</span><span class=\"n\">ifElse</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">IF</span> <span class=\"bp\">$</span><span class=\"n\">cond</span> <span class=\"n\">THEN</span> <span class=\"bp\">$</span><span class=\"n\">ifThen</span> <span class=\"n\">ELSE</span> <span class=\"bp\">$</span><span class=\"n\">ifElse</span> <span class=\"n\">END</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">throw</span> <span class=\"o\">()</span>\n\n\n<span class=\"k\">#check</span> <span class=\"n\">WHILE</span> <span class=\"n\">true</span> <span class=\"n\">DO</span>\n  <span class=\"bp\">.</span><span class=\"n\">skip</span><span class=\"bp\">;</span>\n  <span class=\"bp\">.</span><span class=\"n\">skip</span>\n<span class=\"n\">END</span><span class=\"bp\">;</span> <span class=\"n\">IF</span> <span class=\"n\">true</span> <span class=\"n\">THEN</span>\n  <span class=\"mi\">0</span> <span class=\"o\">::=</span> <span class=\"mi\">1</span>\n<span class=\"n\">END</span>\n</code></pre></div>\n<p>Is what I did.</p>",
        "id": 430382798,
        "sender_full_name": "ohhaimark",
        "timestamp": 1711798713
    }
]