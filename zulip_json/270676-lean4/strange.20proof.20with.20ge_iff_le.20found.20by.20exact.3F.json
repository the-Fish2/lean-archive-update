[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- returns exact ge_iff_le</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)(</span><span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">)(</span><span class=\"n\">hk</span><span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">):</span> <span class=\"o\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"o\">⟩</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span> <span class=\"bp\">↔</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span><span class=\"bp\">?</span>\n</code></pre></div>\n<p>It's strange because there are no <code>≥</code> anywhere in the statement.  In fact, just using <code>rfl</code> works.</p>",
        "id": 437488821,
        "sender_full_name": "Ted Hwa",
        "timestamp": 1715099234
    },
    {
        "content": "<p><code>a ≥ b</code> is an abbreviation for <code>b ≤ a</code>, so it's not surprising a lemma about <code>≥</code> would appear, but this does amount to an indirect way to write <code>Iff.rfl</code></p>",
        "id": 437500872,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715103935
    },
    {
        "content": "<p>It's too bad that <code>ge_iff_le</code> is necessary as a lemma. The issue is that, for example, you need to do <code>rw [ge_iff_le]</code> first if you want to <code>rw</code> using a lemma that's in terms of <code>≤</code>.</p>",
        "id": 437501066,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715103995
    },
    {
        "content": "<p>But in the lemma statement, both sides of the iff were <code>≤</code> to begin with. There was no <code>≥</code>.</p>",
        "id": 437506693,
        "sender_full_name": "Ted Hwa",
        "timestamp": 1715106214
    },
    {
        "content": "<p>Yes, but <code>exact ge_iff_le</code> does work as a proof, which is all <code>exact?</code> cares about</p>",
        "id": 437507021,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715106354
    },
    {
        "content": "<p>It care a bit more than that. The deal is that when it searches for proofs, it peeks through abbreviations. To <code>exact?</code>, <code>a ≥ b</code> looks exactly like <code>b ≤ a</code>.</p>",
        "id": 437508489,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715106919
    }
]