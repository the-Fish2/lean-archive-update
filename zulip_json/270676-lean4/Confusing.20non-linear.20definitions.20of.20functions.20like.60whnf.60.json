[
    {
        "content": "<p>There is a problem in lean when going to the definitions of <code>whnf</code>, <code>inferType</code>, <code>isExprDefEqAux</code>, <code>isLevelDefEqAux</code>, namely that they are opaque and have no reference to their definitions. I think the reaction of most newcomers trying to understand the code is that they cannot read these definitions anywhere. At least this was my reaction at first and I know I'm not the only one.</p>\n<p>There is this comment:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\">! WARNING: The following 4 constants are a hack for simulating forward declarations.</span>\n<span class=\"cm\">   They are defined later using the `export` attribute. This is hackish because we</span>\n<span class=\"cm\">   have to hard-code the true arity of these definitions here, and make sure the C names match.</span>\n<span class=\"cm\">   We have used another hack based on `IO.Ref`s in the past, it was safer but less efficient. -/</span>\n</code></pre></div>\n<p>I would much prefer it if the comment explicitly mentions the names <code>whnfImp</code>, <code>inferTypeImp</code>, <code>isExprDefEqAuxImpl</code>, <code>isLevelDefEqAuxImpl</code>.</p>",
        "id": 426623864,
        "sender_full_name": "Jovan Gerbscheid",
        "timestamp": 1710448444
    },
    {
        "content": "<p>Perhaps \"goto definition\" should also offer the <code>implemented_by</code> / <code>export</code> as the destination?</p>",
        "id": 426631097,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710451197
    },
    {
        "content": "<p>That would be great</p>",
        "id": 426638808,
        "sender_full_name": "Jovan Gerbscheid",
        "timestamp": 1710454594
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Confusing.20non-linear.20definitions.20of.20functions.20like.60whnf.60/near/426631097\">said</a>:</p>\n<blockquote>\n<p>Perhaps \"goto definition\" should also offer the <code>implemented_by</code> / <code>export</code> as the destination?</p>\n</blockquote>\n<p>That would indeed be great, I have long dreamed about implementing this, but it's pretty hard to get information about where externs are defined, because they could happen anywhere, including in C or C++ code</p>",
        "id": 426643097,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710456807
    },
    {
        "content": "<p>is there a way to get vscode-clickable links to other files, within a comment? then the comments could link to the files where they're defined, which requires manual maintenance but is better than status quo</p>",
        "id": 428198984,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1711048191
    },
    {
        "content": "<p>Not that I know of. Currently doc strings are not really broken up into link spans, which is actually kind of a problem because if you go-to-def on a docstring you often get a giant link to <code>elabDeclaration</code></p>",
        "id": 428220475,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1711056283
    },
    {
        "content": "<p>can we change that? <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 428220595,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1711056338
    }
]