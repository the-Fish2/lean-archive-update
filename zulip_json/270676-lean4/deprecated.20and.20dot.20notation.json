[
    {
        "content": "<p>Here is an <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">A</span> <span class=\"n\">where</span>\n  <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span>\n  <span class=\"n\">n_eq</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">42</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">A</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">deprecated</span> <span class=\"n\">n_eq</span><span class=\"kd\">]</span> <span class=\"kd\">theorem</span> <span class=\"n\">n_eq'</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x.n</span> <span class=\"bp\">=</span> <span class=\"mi\">42</span> <span class=\"o\">:=</span> <span class=\"n\">x.n_eq</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x.n</span> <span class=\"bp\">=</span> <span class=\"mi\">42</span> <span class=\"o\">:=</span> <span class=\"n\">x.n_eq'</span> <span class=\"c1\">-- no warning</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x.n</span> <span class=\"bp\">=</span> <span class=\"mi\">42</span> <span class=\"o\">:=</span> <span class=\"n\">n_eq'</span> <span class=\"n\">x</span> <span class=\"c1\">-- `A.n_eq'` has been deprecated</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">A</span>\n</code></pre></div>",
        "id": 429454319,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1711383369
    },
    {
        "content": "<p>This means that one can use deprecated theorems without getting warning. This happened in Mathlib with lemmas like <code>RingHom.map_prod</code>.</p>",
        "id": 429454544,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1711383417
    },
    {
        "content": "<p>There is an open issue about this already</p>",
        "id": 429454900,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1711383488
    },
    {
        "content": "<p>I'm sorry for not reading existing issues first.</p>",
        "id": 429455112,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1711383536
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/3270\">lean4#3270</a></p>",
        "id": 429455586,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1711383632
    }
]