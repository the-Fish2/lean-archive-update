[
    {
        "content": "<p>I can't work out how to inspect the <code>r • f</code> in the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.GroupAction.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Mul</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">•</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>if I click on the <code>•</code>, I get a very brief flash of information that I can't read, then I see <code>r : R</code>. How do I see the hover for <code>r • f</code>?</p>",
        "id": 417649451,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706104295
    },
    {
        "content": "<p>wooah that's weird. I tried this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.GroupAction.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Add</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>and you can just hover over the <code>+</code> in the infoview output for <code>#check</code> and see it fine. But my initial suspicion that \"it's a \\smul problem\" is not correct: the problem also happens with this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.GroupAction.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Add</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">+</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>so <code>+</code> is misbehaving there. So it's a function evaluation problem?</p>",
        "id": 417653719,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706105640
    },
    {
        "content": "<p>Maybe this is a misfire in the thing that prevents you inspecting <code>f a</code> in <code>(f a) b</code> when <code>f</code> is a regular function?</p>",
        "id": 417655373,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706106167
    },
    {
        "content": "<p>The 'only one frame' guess might be wrong: tooltips always initially show a 'Loading..' text before the Lean server replies with data; could it just be that you're seeing? In that case the issue would be that the annotation on <code>r • f</code> is incorrect, not that it's only shown for an instant.</p>",
        "id": 417982113,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1706139288
    },
    {
        "content": "<p>That's very plausible</p>",
        "id": 417982248,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706139375
    }
]