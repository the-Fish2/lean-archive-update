[
    {
        "content": "<p>I noticed that the <code>extends</code> syntax on structures comes <em>before</em> the sort annotation for the structure, as here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">LawfulSeq</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">outParam</span> <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">))</span> <span class=\"o\">[</span><span class=\"n\">Seq</span> <span class=\"n\">C</span> <span class=\"n\">τ</span><span class=\"o\">]</span>\n  <span class=\"kd\">extends</span>\n    <span class=\"n\">Mem.ToList</span> <span class=\"n\">C</span> <span class=\"n\">τ</span><span class=\"o\">,</span>\n    <span class=\"n\">Append.ToList</span> <span class=\"n\">C</span> <span class=\"n\">τ</span><span class=\"o\">,</span>\n    <span class=\"n\">Insert.ToMultiset</span> <span class=\"n\">C</span> <span class=\"n\">τ</span>\n  <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n  <span class=\"n\">where</span>\n</code></pre></div>\n<p>is this intended? It looks pretty unintuitive to me -- I was expecting <code>Prop</code> before <code>extends</code>, as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">LawfulSeq</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">outParam</span> <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">))</span> <span class=\"o\">[</span><span class=\"n\">Seq</span> <span class=\"n\">C</span> <span class=\"n\">τ</span><span class=\"o\">]</span>  <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n  <span class=\"kd\">extends</span>\n    <span class=\"n\">Mem.ToList</span> <span class=\"n\">C</span> <span class=\"n\">τ</span><span class=\"o\">,</span>\n    <span class=\"n\">Append.ToList</span> <span class=\"n\">C</span> <span class=\"n\">τ</span><span class=\"o\">,</span>\n    <span class=\"n\">Insert.ToMultiset</span> <span class=\"n\">C</span> <span class=\"n\">τ</span>\n  <span class=\"n\">where</span>\n</code></pre></div>",
        "id": 411463749,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1704506364
    },
    {
        "content": "<p>Should I make an RFC about this? I know it's low priority, just don't want to forget about it</p>",
        "id": 416659314,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1705616514
    }
]