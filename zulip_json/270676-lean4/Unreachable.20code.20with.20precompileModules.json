[
    {
        "content": "<p>I am hitting a</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">INTERNAL</span> <span class=\"n\">PANIC</span><span class=\"o\">:</span> <span class=\"n\">unreachable</span> <span class=\"n\">code</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">reached</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">christian</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/lean` exited with code 1</span>\n</code></pre></div>\n<p>error with latest stable release when using <code>precompileModules</code>. This is my <code>lakefile.lean</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">System</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"n\">unreachable</span> <span class=\"o\">{</span>\n  <span class=\"c\">/-</span><span class=\"cm\"> Setting this to `false` makes it work -/</span>\n  <span class=\"n\">precompileModules</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"n\">Unreachable</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span> <span class=\"n\">lean_exe</span> <span class=\"n\">test</span> <span class=\"o\">{</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p><code>Main.lean</code> is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Unreachable.Fails</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"n\">IO.println</span> <span class=\"s2\">\"hi\"</span>\n</code></pre></div>\n<p>and <code>Unreachable/Fails.lean</code> is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">World</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">elementary</span>\n  <span class=\"bp\">|</span> <span class=\"n\">composed</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Dropping the elementary constructor makes it work.-/</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">EType</span> <span class=\"o\">:</span> <span class=\"n\">World</span> <span class=\"bp\">â†’</span> <span class=\"kt\">Type</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">elementary</span> <span class=\"o\">:</span> <span class=\"n\">EType</span> <span class=\"bp\">.</span><span class=\"n\">elementary</span>\n  <span class=\"bp\">|</span> <span class=\"n\">composed</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">EType</span> <span class=\"bp\">.</span><span class=\"n\">composed</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">Composed</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">EType</span> <span class=\"bp\">.</span><span class=\"n\">composed</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Changing this to `def` makes it work. -/</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">Composed.name</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Composed</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">s</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">composed</span> <span class=\"n\">name</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">name</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Dropping this def makes it work. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">Composed.toString</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">Composed</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">String</span> <span class=\"o\">:=</span>\n  <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"column {c.name}\"</span>\n</code></pre></div>",
        "id": 419641288,
        "sender_full_name": "Christian Merten",
        "timestamp": 1706994265
    },
    {
        "content": "<p>Could you please open an issue with this repro?</p>",
        "id": 419664067,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1707016251
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/3251\">lean4#3251</a></p>",
        "id": 419682142,
        "sender_full_name": "Christian Merten",
        "timestamp": 1707037072
    }
]