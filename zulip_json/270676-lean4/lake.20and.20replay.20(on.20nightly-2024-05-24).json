[
    {
        "content": "<p>I've been using a nightly to be able to use the new incremental tactic processing improvements, so I am not sure this happens on v4.8.0-rc2. More than once, I've been hit with a strange lake bug. In the example below, I made a bad edit to a file upstream of Mathlib.Algebra.Group.Commute.Defs, which caused a compilation error (via LSP). I then reverted the upstream change, and the following happened:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">$</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">Group</span><span class=\"bp\">.</span><span class=\"n\">Commute</span><span class=\"bp\">.</span><span class=\"n\">Defs</span>\n<span class=\"bp\">✖</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"mi\">58</span><span class=\"bp\">/</span><span class=\"mi\">58</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">Replaying</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">Group</span><span class=\"bp\">.</span><span class=\"n\">Commute</span><span class=\"bp\">.</span><span class=\"n\">Defs</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"n\">command</span><span class=\"bp\">-</span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"n\">junk</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n<span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">Group</span><span class=\"bp\">/</span><span class=\"n\">Commute</span><span class=\"bp\">/</span><span class=\"n\">Defs</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">280</span><span class=\"o\">:</span><span class=\"mi\">37</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">synthesize</span>\n<span class=\"w\"> </span><span class=\"n\">One</span><span class=\"w\"> </span><span class=\"n\">ℕ</span>\n<span class=\"n\">Some</span><span class=\"w\"> </span><span class=\"n\">builds</span><span class=\"w\"> </span><span class=\"n\">logged</span><span class=\"w\"> </span><span class=\"n\">failures</span><span class=\"o\">:</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">Group</span><span class=\"bp\">.</span><span class=\"n\">Commute</span><span class=\"bp\">.</span><span class=\"n\">Defs</span>\n<span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"bp\">$</span><span class=\"w\"> </span><span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">ir</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">Group</span><span class=\"bp\">/</span><span class=\"n\">Commute</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">Group</span><span class=\"bp\">/</span><span class=\"n\">Commute</span>\n<span class=\"bp\">$</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">Group</span><span class=\"bp\">.</span><span class=\"n\">Commute</span><span class=\"bp\">.</span><span class=\"n\">Defs</span>\n<span class=\"n\">Build</span><span class=\"w\"> </span><span class=\"n\">completed</span><span class=\"w\"> </span><span class=\"n\">successfully</span><span class=\"bp\">.</span>\n</code></pre></div>\n<p>Is that something that has been fixed in a more recent nightly? Does lake invalidate its replay cache properly even when taking into account files with outdated dependencies processed by the LSP server?</p>",
        "id": 442224884,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1717414001
    },
    {
        "content": "<p>That sounds like <a href=\"https://github.com/leanprover/lean4/pull/4303\">lean#4303</a></p>",
        "id": 442226811,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1717414527
    },
    {
        "content": "<p>The <code>.trace</code> file is the same before and after, it just seems like <code>lake</code> replays the <code>.log.json</code> file whenever it exists (and it doesn't get deleted when it should, sometimes). Example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">$</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Nat</span><span class=\"bp\">.</span><span class=\"n\">Cast</span><span class=\"bp\">.</span><span class=\"n\">Defs</span>\n<span class=\"bp\">✖</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"mi\">54</span><span class=\"bp\">/</span><span class=\"mi\">54</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">Replaying</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Nat</span><span class=\"bp\">.</span><span class=\"n\">Cast</span><span class=\"bp\">.</span><span class=\"n\">Defs</span>\n<span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"n\">bla</span><span class=\"w\"> </span><span class=\"n\">bla</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n<span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">././././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Nat</span><span class=\"bp\">/</span><span class=\"n\">Cast</span><span class=\"bp\">/</span><span class=\"n\">Defs</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">202</span><span class=\"o\">:</span><span class=\"mi\">51</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">synthesize</span><span class=\"w\"> </span><span class=\"kn\">instance</span>\n<span class=\"w\"> </span><span class=\"n\">One</span><span class=\"w\"> </span><span class=\"n\">ℕ</span>\n<span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Lean</span><span class=\"w\"> </span><span class=\"n\">exited</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"n\">Some</span><span class=\"w\"> </span><span class=\"n\">builds</span><span class=\"w\"> </span><span class=\"n\">logged</span><span class=\"w\"> </span><span class=\"n\">failures</span><span class=\"o\">:</span>\n<span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Nat</span><span class=\"bp\">.</span><span class=\"n\">Cast</span><span class=\"bp\">.</span><span class=\"n\">Defs</span>\n<span class=\"n\">error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"bp\">$</span><span class=\"w\"> </span><span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Nat</span><span class=\"bp\">/</span><span class=\"n\">Cast</span><span class=\"bp\">/</span><span class=\"n\">Defs</span><span class=\"bp\">.</span><span class=\"n\">log</span><span class=\"bp\">.</span><span class=\"n\">json</span>\n<span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">same</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"n\">as</span><span class=\"w\"> </span><span class=\"n\">above</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">json</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n<span class=\"bp\">$</span><span class=\"w\"> </span><span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Nat</span><span class=\"bp\">/</span><span class=\"n\">Cast</span><span class=\"bp\">/</span><span class=\"n\">Defs</span><span class=\"bp\">.</span><span class=\"n\">trace</span>\n<span class=\"mi\">14484521835112575365</span>\n<span class=\"bp\">$</span><span class=\"w\"> </span><span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Nat</span><span class=\"bp\">/</span><span class=\"n\">Cast</span><span class=\"bp\">/</span><span class=\"n\">Defs</span><span class=\"bp\">.</span><span class=\"n\">log</span><span class=\"bp\">.</span><span class=\"n\">json</span>\n<span class=\"bp\">$</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Nat</span><span class=\"bp\">.</span><span class=\"n\">Cast</span><span class=\"bp\">.</span><span class=\"n\">Defs</span>\n<span class=\"n\">Build</span><span class=\"w\"> </span><span class=\"n\">completed</span><span class=\"w\"> </span><span class=\"n\">successfully</span><span class=\"bp\">.</span>\n<span class=\"bp\">$</span><span class=\"w\"> </span><span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Nat</span><span class=\"bp\">/</span><span class=\"n\">Cast</span><span class=\"bp\">/</span><span class=\"n\">Defs</span><span class=\"bp\">.</span><span class=\"n\">trace</span>\n<span class=\"mi\">14484521835112575365</span>\n</code></pre></div>",
        "id": 442227212,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1717414639
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/lake.20and.20replay.20.28on.20nightly-2024-05-24.29/near/442226811\">said</a>:</p>\n<blockquote>\n<p>That sounds like <a href=\"https://github.com/leanprover/lean4/pull/4303\">lean#4303</a></p>\n</blockquote>\n<p>Ah, that looks like it. Thanks! I will add my comment there.</p>",
        "id": 442227254,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1717414651
    }
]