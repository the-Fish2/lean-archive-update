[
    {
        "content": "<p>Does someone know why it doesn't work?</p>\n<p>axiom le_trans : ∀ a b c, a ≤ b → b ≤ c → a ≤ c</p>\n<p>typeclass instance problem is stuck, it is often due to metavariables LE ?m.212</p>",
        "id": 418634932,
        "sender_full_name": "Noah Noah",
        "timestamp": 1706534350
    },
    {
        "content": "<p>Can you please read the content of the following links and edit your question accordingly? <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 418635338,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1706534490
    },
    {
        "content": "<p>The issue is that Lean doesn't know what type <code>a b c</code> should be, what did you want there? Natural numbers, or some arbitrary type with a <code>LE</code> relation (less or equal).<br>\nYou should check that adding an axiom is really what you want to do though. That is not a usual way of using Lean.<br>\nInstead you should probably work by assuming you have some type with  a transitive LE relation. Normally we would write <code>variable {X : Type*} [Preorder X]</code> (which is a bit stronger but probably more useful). Then  less or equal being transitive is an assumption for the current context, rather than an axiom of mathematics itself!</p>",
        "id": 418666606,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1706543454
    }
]