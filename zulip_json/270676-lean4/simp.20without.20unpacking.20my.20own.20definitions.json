[
    {
        "content": "<p>I've been working on a proof that requires me to define a function <code>B₀</code>, and then I proved a convenience lemma about <code>B₀</code> so I can use its properties without having to refer to its definition down the line. I'm now trying to use it to prove something else, and I've narrowed my goal down to something that should be fairly easy to do with <code>simp</code> and a little extra. In particular I have in the context</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">hx</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"bp\">⋃</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">W</span> <span class=\"n\">n</span><span class=\"o\">}),</span> <span class=\"n\">B₀</span> <span class=\"n\">n</span> <span class=\"n\">C</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"bp\">⋃</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">W</span> <span class=\"n\">n</span><span class=\"o\">}),</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">C</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">⋃</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">B₀</span> <span class=\"n\">n</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"n\">C</span>\n</code></pre></div>\n<p>I would like to use <code>simp</code> to simplify what it means to be in this union and also the <code>fun C =&gt; blah</code> to simply <code>⋃ (n : ℕ), B₀ n C</code>, but whenever I do so, it also unpacks the definition of <code>B₀</code>, making things borderline unreadable. Is there any way to use <code>simp</code> that won't unpack the definition of <code>B₀</code>?</p>\n<p>For convenience, here's a MWE in <a href=\"/user_uploads/3121/TTuXsjQzOPYSqhqj89ttYx_W/Lem1.lean\">Lem1.lean</a>, with the relevant sorry identified.</p>",
        "id": 420485237,
        "sender_full_name": "Connor Gordon",
        "timestamp": 1707406987
    }
]