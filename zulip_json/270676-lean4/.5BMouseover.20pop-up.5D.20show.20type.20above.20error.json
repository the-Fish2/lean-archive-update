[
    {
        "content": "<p>In VSCode, when mousing over a constant, it shows </p>\n<ul>\n<li>First any errors on that constant</li>\n<li>Below it the type of the constant<br>\nExample:<br>\n<a href=\"/user_uploads/3121/MrPp1mL-Jm33gS1pD_NmYcOW/image.png\">image.png</a><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/MrPp1mL-Jm33gS1pD_NmYcOW/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/MrPp1mL-Jm33gS1pD_NmYcOW/image.png\"></a></div></li>\n</ul>\n<p>Now the error is already easily visible in the Lean Infoview, either in the <code>Messages</code> or <code>All Messages</code> tab. Therefore, when mousing over a term, I am never interested in seeing the error. However, the type of a constant is not as easily accessible elsewhere, and very often I want to see the type of the constant (usually to find out which arguments are explicit).</p>\n<p>Therefore my suggestion: show the type of the constant above the error in the mouse-over pop-up. It will save me a bit of scrolling time, because the error is often larger than the pop-up. This is a minor issue, but it happens very frequently.</p>",
        "id": 424316530,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1709322867
    },
    {
        "content": "<p>Oh yes, I would love that!</p>",
        "id": 424319720,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1709324317
    },
    {
        "content": "<p>I don't think that we can adjust this. The order of content in hovers is hardcoded in VS Code:<br>\n<a href=\"https://github.com/microsoft/vscode/blob/d374d10eea0154ce74b5cafe64d3e0096dd58717/src/vs/editor/contrib/hover/browser/markerHoverParticipant.ts#L57\">https://github.com/microsoft/vscode/blob/d374d10eea0154ce74b5cafe64d3e0096dd58717/src/vs/editor/contrib/hover/browser/markerHoverParticipant.ts#L57</a><br>\n<a href=\"https://github.com/microsoft/vscode/blob/d374d10eea0154ce74b5cafe64d3e0096dd58717/src/vs/editor/contrib/hover/browser/contentHover.ts#L55\">https://github.com/microsoft/vscode/blob/d374d10eea0154ce74b5cafe64d3e0096dd58717/src/vs/editor/contrib/hover/browser/contentHover.ts#L55</a></p>",
        "id": 424609332,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1709543973
    },
    {
        "content": "<p>Would it be possible to remove the error in the hover (and only show errors in the Infoview)? I would also be happy with that.</p>",
        "id": 424619205,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1709547238
    },
    {
        "content": "<p>We could in principle send diagnostics with an empty message, but I wouldn't be happy to implement that. Users from a programming background are used to utilizing hovers to display error messages.</p>",
        "id": 424620492,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1709547655
    },
    {
        "content": "<p>Could we make the hover display the bottom part of the window first? :-)</p>",
        "id": 424734935,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709581492
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/270676-lean4/topic/.5BMouseover.20pop-up.5D.20show.20type.20above.20error/near/424619205\">said</a>:</p>\n<blockquote>\n<p>Would it be possible to remove the error in the hover (and only show errors in the Infoview)? I would also be happy with that.</p>\n</blockquote>\n<p>I also think this kind of mode (don't send diagnostics for errors known to be shown in the infoview) might be interesting. (I.e. not an empty message, literally don't send one if the client tells the server \"there's an infoview open\").</p>",
        "id": 424748662,
        "sender_full_name": "Julian Berman",
        "timestamp": 1709586906
    },
    {
        "content": "<p>Though I guess thinking about that for longer than 2 seconds, I find diagnostics very very useful for navigation (in neovim), so I'm quite happy they're shown even when they're duplicated... Maybe I retract my interest :D</p>",
        "id": 424748954,
        "sender_full_name": "Julian Berman",
        "timestamp": 1709587050
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/270676-lean4/topic/.5BMouseover.20pop-up.5D.20show.20type.20above.20error/near/424609332\">said</a>:</p>\n<blockquote>\n<p>I don't think that we can adjust this. The order of content in hovers is hardcoded in VS Code:<br>\n<a href=\"https://github.com/microsoft/vscode/blob/d374d10eea0154ce74b5cafe64d3e0096dd58717/src/vs/editor/contrib/hover/browser/markerHoverParticipant.ts#L57\">https://github.com/microsoft/vscode/blob/d374d10eea0154ce74b5cafe64d3e0096dd58717/src/vs/editor/contrib/hover/browser/markerHoverParticipant.ts#L57</a><br>\n<a href=\"https://github.com/microsoft/vscode/blob/d374d10eea0154ce74b5cafe64d3e0096dd58717/src/vs/editor/contrib/hover/browser/contentHover.ts#L55\">https://github.com/microsoft/vscode/blob/d374d10eea0154ce74b5cafe64d3e0096dd58717/src/vs/editor/contrib/hover/browser/contentHover.ts#L55</a></p>\n</blockquote>\n<p>Just out of curiosity, what exactly is the difference between the error hover and the constant-info hover? Am I right in guessing that the former is a <code>MarkerHoverParticipant</code> and the latter is a <code>MarkdownHoverParticipant</code>?</p>",
        "id": 424758374,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1709591026
    },
    {
        "content": "<p>If so, could we in principle get around VS code's hardcoding with something like: before actually exposing the error/marker hover to VS code, check if there's a constant-info hover at the same spot, and if so, prepend that to the error/marker hover?</p>\n<p>(Not actually sure if this makes sense to do, as I'm not exactly sure where the boundaries between the Lean server, the extension, and VS code itself are in this situation. We'd ideally want to do this without changing what gets shown in the infoview, and I don't know if that's possible.)</p>",
        "id": 424759039,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1709591324
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/270676-lean4/topic/.5BMouseover.20pop-up.5D.20show.20type.20above.20error/near/424748662\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/270676-lean4/topic/.5BMouseover.20pop-up.5D.20show.20type.20above.20error/near/424619205\">said</a>:</p>\n<blockquote>\n<p>Would it be possible to remove the error in the hover (and only show errors in the Infoview)? I would also be happy with that.</p>\n</blockquote>\n<p>I also think this kind of mode (don't send diagnostics for errors known to be shown in the infoview) might be interesting. (I.e. not an empty message, literally don't send one if the client tells the server \"there's an infoview open\").</p>\n</blockquote>\n<p>Diagnostics are also used to display error/warning locations in the code.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/270676-lean4/topic/.5BMouseover.20pop-up.5D.20show.20type.20above.20error/near/424734935\">said</a>:</p>\n<blockquote>\n<p>Could we make the hover display the bottom part of the window first? :-)</p>\n</blockquote>\n<p>I don't think so. All of this UI is implemented in VS Code and not exposed via API.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> <a href=\"#narrow/stream/270676-lean4/topic/.5BMouseover.20pop-up.5D.20show.20type.20above.20error/near/424759039\">said</a>:</p>\n<blockquote>\n<p>If so, could we in principle get around VS code's hardcoding with something like: before actually exposing the error/marker hover to VS code, check if there's a constant-info hover at the same spot, and if so, prepend that to the error/marker hover?</p>\n<p>(Not actually sure if this makes sense to do, as I'm not exactly sure where the boundaries between the Lean server, the extension, and VS code itself are in this situation. We'd ideally want to do this without changing what gets shown in the infoview, and I don't know if that's possible.)</p>\n</blockquote>\n<p>I don't think so, but you're free to try. The <a href=\"https://code.visualstudio.com/api/references/vscode-api\">API</a> offered by VS Code to work with hovers is very limited.</p>",
        "id": 424814555,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1709625973
    }
]