[
    {
        "content": "<p>I defined a custom <code>Coe</code> instance below, but for some reason this coercion don't get pretty printed with the \"up arrow\" in goals.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Foo</span> <span class=\"o\">:=</span>\n  <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Int</span>\n  <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Coe</span> <span class=\"n\">Foo</span> <span class=\"n\">Int</span> <span class=\"n\">where</span>\n  <span class=\"n\">coe</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"n\">v.x</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Int</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c\">/-</span>\n<span class=\"cm\">    Goal:</span>\n<span class=\"cm\">    x : Foo</span>\n<span class=\"cm\">    y : Int</span>\n<span class=\"cm\">    h : x.x = y  -- HERE: I expected: h : (↑x) = y</span>\n<span class=\"cm\">    ⊢ True</span>\n<span class=\"cm\">  -/</span>\n  <span class=\"n\">trivial</span>\n</code></pre></div>\n<p>Does someone know where this might come from/how I could get the pretty-printing working?</p>",
        "id": 431308322,
        "sender_full_name": "Son Ho",
        "timestamp": 1712235712
    },
    {
        "content": "<p>You need to add <code>@[coe]</code> to the function, though I'm not sure what it should be here</p>",
        "id": 431309976,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712236182
    },
    {
        "content": "<p><code>attribute [coe] Foo.x</code>, maybe</p>",
        "id": 431310000,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712236191
    },
    {
        "content": "<p>It works, thanks!</p>",
        "id": 431313043,
        "sender_full_name": "Son Ho",
        "timestamp": 1712237078
    }
]