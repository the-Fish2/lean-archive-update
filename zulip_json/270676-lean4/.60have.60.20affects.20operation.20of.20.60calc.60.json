[
    {
        "content": "<p>This looks like a calc bug to me, is it indeed a bug and is it reported?  The presence of a <code>have</code> affects the (new in Lean 4, and much appreciated) nonterminal functioning of <code>calc</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"c1\">-- works</span>\n<span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Nat</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"k\">calc</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"w\">    </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"c\">/-</span>\n<span class=\"cm\">unsolved goals</span>\n<span class=\"cm\">x y : Nat</span>\n<span class=\"cm\">⊢ 8 ≤ 10</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"c1\">-- fails</span>\n<span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Nat</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">hk</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"w\">  </span><span class=\"k\">calc</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"w\">    </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"c\">/-</span>\n<span class=\"cm\">'calc' tactic failed, has type</span>\n<span class=\"cm\">  x + y ≤ 8</span>\n<span class=\"cm\">but it is expected to have type</span>\n<span class=\"cm\">  x + y ≤ 10</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 442398727,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1717457677
    },
    {
        "content": "<p>Looks like a mdata problem in <code>Lean.Elab.Tactic.evalCalc</code>. There's also a missing instantiateMVars in there.</p>",
        "id": 442400052,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717458263
    },
    {
        "content": "<p>Reported: <a href=\"https://github.com/leanprover/lean4/pull/4334\">lean4#4334</a></p>",
        "id": 442401719,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717459065
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 442402700,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1717459476
    },
    {
        "content": "<p>Fixed in <a href=\"https://github.com/leanprover/lean4/pull/4335\">lean4#4335</a></p>",
        "id": 442403240,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717459694
    }
]