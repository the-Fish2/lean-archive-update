[
    {
        "content": "<p>Why isn't <code>‚±º</code> (the lower index \"j\") allowed in identifiers?</p>",
        "id": 417174146,
        "sender_full_name": "Martin Dvo≈ô√°k",
        "timestamp": 1705910012
    },
    {
        "content": "<p>It is if you use french quotes. The reason is likely just implementation simplicity and the fact that unicode is laid out in an odd way <a href=\"https://github.com/leanprover/lean4/blob/5cc9f6f9cbcb2bae03f3860ffd4be30f2b050e72/src/Init/Meta.lean#L93\">https://github.com/leanprover/lean4/blob/5cc9f6f9cbcb2bae03f3860ffd4be30f2b050e72/src/Init/Meta.lean#L93</a> is the implementation of <a href=\"https://leanprover.github.io/reference/lexical_structure.html#identifiers\">https://leanprover.github.io/reference/lexical_structure.html#identifiers</a>. So you can check <a href=\"https://www.compart.com/en/unicode/block/U+2070\">https://www.compart.com/en/unicode/block/U+2070</a> and <a href=\"https://www.compart.com/en/unicode/block/U+1D00\">https://www.compart.com/en/unicode/block/U+1D00</a> to see what this really means.</p>",
        "id": 417225644,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1705928979
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvo≈ô√°k</span> has marked this topic as resolved.</p>",
        "id": 417263448,
        "sender_full_name": "Notification Bot",
        "timestamp": 1705939605
    },
    {
        "content": "<p>I think it would be pretty reasonable to change the grammar (in all of C, Lean, spec, and the syntax highlighters) to allow this character</p>",
        "id": 417265637,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1705940171
    },
    {
        "content": "<p>Sounds like too much work given that I am possibly the only one who cares.</p>",
        "id": 417266545,
        "sender_full_name": "Martin Dvo≈ô√°k",
        "timestamp": 1705940421
    },
    {
        "content": "<p>Also lexing would be slower, I suppose.</p>",
        "id": 417266723,
        "sender_full_name": "Martin Dvo≈ô√°k",
        "timestamp": 1705940482
    },
    {
        "content": "<p>The subscript and superscript characters for identifiers are very arbitrary unfortunately. I‚Äôve stumbled upon this a few times already. It would be nice to have consistency here</p>",
        "id": 417398867,
        "sender_full_name": "Max Nowak üêâ",
        "timestamp": 1706000439
    },
    {
        "content": "<p>The catch specific for <code>‚±º</code> is that <code>\\_j</code> works, hence the error message \"expected token\" surprises you and perhaps confuses you. I now get why it is implemented in this way, but I would still prefer <code>\\_j</code> to do nothing.</p>",
        "id": 417400733,
        "sender_full_name": "Martin Dvo≈ô√°k",
        "timestamp": 1706001122
    },
    {
        "content": "<p>I just encountered a situation where <code>‚±º</code> would be so convenient!</p>\n<p>Is there any alternative? Is there any \"Unicode squiggle\" that would look almost like lowercase j but could be used in identifiers? I'd be willing to use it even if VS Code didn't have a shortcut to write it.</p>",
        "id": 421426263,
        "sender_full_name": "Martin Dvo≈ô√°k",
        "timestamp": 1707910567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvo≈ô√°k</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20.E2.B1.BC.20.28U.2B2C7C.29.20in.20identifiers/near/417266545\">said</a>:</p>\n<blockquote>\n<p>Sounds like too much work given that I am possibly the only one who cares.</p>\n</blockquote>\n<p>Seems that you care enough that it might be worth <em>you</em> doing the work (with standard caveats that the work is wasted if no one at the FRO likes  the idea in the first place)</p>",
        "id": 421428052,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707911337
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvo≈ô√°k</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20.E2.B1.BC.20.28U.2B2C7C.29.20in.20identifiers/near/417266723\">said</a>:</p>\n<blockquote>\n<p>Also lexing would be slower, I suppose.</p>\n</blockquote>\n<p>This is surely totally negligeable</p>",
        "id": 421428087,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707911351
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20.E2.B1.BC.20.28U.2B2C7C.29.20in.20identifiers/near/421428052\">said</a>:</p>\n<blockquote>\n<p>(with standard caveats that the work is wasted if no one at the FRO likes  the idea in the first place)</p>\n</blockquote>\n<p>Sounds like a question I could bring to the today's Lean FRO office hours!</p>",
        "id": 421430372,
        "sender_full_name": "Martin Dvo≈ô√°k",
        "timestamp": 1707912186
    },
    {
        "content": "<p>I learnt I should create issues, not PRs.</p>\n<p><a href=\"https://github.com/leanprover/lean4/issues/3330\">https://github.com/leanprover/lean4/issues/3330</a></p>",
        "id": 421494718,
        "sender_full_name": "Martin Dvo≈ô√°k",
        "timestamp": 1707931298
    }
]