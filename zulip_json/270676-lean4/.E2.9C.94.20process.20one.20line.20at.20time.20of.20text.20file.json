[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">report</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">Except</span> <span class=\"n\">String</span> <span class=\"n\">MRS</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n <span class=\"k\">match</span> <span class=\"n\">r</span> <span class=\"k\">with</span>\n <span class=\"bp\">|</span> <span class=\"n\">Except.ok</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">IO.println</span> <span class=\"bp\">$</span> <span class=\"n\">List.length</span> <span class=\"n\">b.preds</span>\n <span class=\"bp\">|</span> <span class=\"n\">Except.error</span> <span class=\"n\">e</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">IO.println</span> <span class=\"n\">e</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">ls</span> <span class=\"bp\">←</span> <span class=\"n\">IO.FS.lines</span> <span class=\"s2\">\"/Users/ar/Temp/ws201.txt\"</span>\n  <span class=\"k\">let</span> <span class=\"n\">rs</span> <span class=\"o\">:=</span> <span class=\"n\">ls.toList.map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Lean.Parsec.run</span> <span class=\"n\">parseMRS</span> <span class=\"n\">l</span><span class=\"o\">)</span>\n  <span class=\"k\">let</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">rs.map</span> <span class=\"n\">report</span>\n  <span class=\"n\">return</span> <span class=\"o\">()</span>\n</code></pre></div>\n<p><code>lake exe delphin</code> produces no output! Why? I was expecting one line for each input line!</p>",
        "id": 410044014,
        "sender_full_name": "Alexandre Rademaker",
        "timestamp": 1703607501
    },
    {
        "content": "<p>When you write <code>let _ := rs.map report</code>, you're saving the unevaluated <code>IO</code> computation itself to a variable rather than causing it to execute and produce a value.</p>\n<p>Try <code>let _ &lt;- rs.mapM report</code></p>",
        "id": 410052428,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1703613639
    },
    {
        "content": "<p>By the way, there's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IO.ofExcept#doc\">docs#IO.ofExcept</a> for turning an <code>Except</code> into either an exception or the result.</p>",
        "id": 410052685,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1703613760
    },
    {
        "content": "<p>Thank you</p>",
        "id": 410077988,
        "sender_full_name": "Alexandre Rademaker",
        "timestamp": 1703633991
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121542\">Alexandre Rademaker</span> has marked this topic as resolved.</p>",
        "id": 410078047,
        "sender_full_name": "Notification Bot",
        "timestamp": 1703634007
    },
    {
        "content": "<p>By the way <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> , I didn’t see in my code how to use IO.ofExcept. I am curious to understand what did you see.</p>",
        "id": 410141897,
        "sender_full_name": "Alexandre Rademaker",
        "timestamp": 1703677052
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121542\">@Alexandre Rademaker</span> It changes the meaning of it, but if you want it to halt at the first error, you can  replace <code>rs.map report</code> with <code>(&lt;- rs.mapM IO.ofExcept).mapM report</code> after changing <code>report</code> to take just an <code>MRS</code> rather than an <code>Except String MRS</code>.</p>",
        "id": 410172826,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1703692797
    }
]