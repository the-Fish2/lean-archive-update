[
    {
        "content": "<p>Hello,</p>\n<p>I've only worked through a portion of the Functional Programming in Lean4 online book, but I did a google search to try and see how others may be unit/doc testing Lean4 code and the only thing that came up was this:<br>\n<a href=\"https://lean-lang.org/lean4/doc/dev/testing.html\">https://lean-lang.org/lean4/doc/dev/testing.html</a></p>\n<p>Which seems to be a test suite which covers the code which implements Lean4.</p>\n<p>I have no experience with C and have some intermediate knowledge of programming in Haskell in a non-professional capacity.</p>\n<p>I know that one of the Haskell doctest libraries basically collects the code which is being tested in the docstring and sends it through the REPL to be executed, receives the stdout in a string and compares it to what the user expected to be the result in the docstring.</p>\n<p>I've run lean -h to view all of the commands available to see if there might be an equivalent way to achieve this with lean, but that doesn't seem to be the case.</p>\n<p>I also did a quick search on this zulip chat for \"test\" and \"testing\" before I posted this; nothing came up, hence I decided to create this post.</p>\n<p>Any suggestions or help would be greatly appreciated!</p>",
        "id": 410628242,
        "sender_full_name": "James Good",
        "timestamp": 1704023379
    },
    {
        "content": "<p>You can use <a href=\"https://github.com/hargoniX/nest-unit\">https://github.com/hargoniX/nest-unit</a> for unit testing, tehre are plans to eventually integrate a proper testing framework with lake itself although I don't know about the progress on that.</p>",
        "id": 410630290,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1704025298
    },
    {
        "content": "<p>Thank you, I'll check that out.</p>",
        "id": 410696090,
        "sender_full_name": "James Good",
        "timestamp": 1704090306
    },
    {
        "content": "<p>The <a href=\"https://lean-fro.org/about/roadmap/\">FRO roadmap</a> points to <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> as someone in charge of testing - how's the progress on this?</p>",
        "id": 410718381,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1704111078
    },
    {
        "content": "<p>The core test framework is still in the design phase, but completing it is one of the goals for this new year! Reservori and Lake have just been higher priority until cloud builds are finished.</p>",
        "id": 410739362,
        "sender_full_name": "Mac Malone",
        "timestamp": 1704128839
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/270676-lean4/topic/How.20to.20unit.2Fdoc.20test.3F/near/410718381\">said</a>:</p>\n<blockquote>\n<p>The <a href=\"https://lean-fro.org/about/roadmap/\">FRO roadmap</a> points to <span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span> as someone in charge of testing - how's the progress on this?</p>\n</blockquote>\n<p>Wasn't aware of this roadmap. Looks great.</p>\n<p>Lean is still way over my head at the moment with everything that's possible, and I'll need to slowly get myself acclimated. However, I will say that as someone who has programmed a bit in Rust, I can definitely see the influence regarding the tooling for getting started and setting up an initial project.</p>\n<p>My first impression is rather positive, as the setup was seamless and easy to get a first hello world running and mess around with the language.</p>",
        "id": 410834468,
        "sender_full_name": "James Good",
        "timestamp": 1704196184
    },
    {
        "content": "<p>For super simple doctest-like functionality, the <code>#guard_msgs</code> command in <code>Std</code> is quite nice. Try:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std</span>\n\n<span class=\"bp\">#</span><span class=\"n\">guard_msgs</span> <span class=\"k\">in</span>\n<span class=\"k\">#eval</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>Lean will complain, and offer a quick fix to insert the expected output for you.</p>",
        "id": 411260241,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1704401908
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"354934\">David Thrane Christiansen</span> <a href=\"#narrow/stream/270676-lean4/topic/How.20to.20unit.2Fdoc.20test.3F/near/411260241\">said</a>:</p>\n<blockquote>\n<p>For super simple doctest-like functionality, the <code>#guard_msgs</code> command in <code>Std</code> is quite nice. Try:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std</span>\n\n<span class=\"bp\">#</span><span class=\"n\">guard_msgs</span> <span class=\"k\">in</span>\n<span class=\"k\">#eval</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>Lean will complain, and offer a quick fix to insert the expected output for you.</p>\n</blockquote>\n<p>This definitely works, thank you. I tried it out in the online lean4 playground, but I haven't been able to import Std when I try on a project on my computer.</p>\n<p>I took a look at the mathlib4 repo to get an idea of how requiring the std4 package from github works since I didn't see any instruction for how to do so in any of the official lean4 learning sources when I skimmed them.</p>\n<p>First time I tried running lake update, I was receiving an error due to some new syntax that's used in the std4 lib's lakefile, which I was able to correct by running 'elan update'.</p>\n<p>However, I ran into a final error which has stumped me; there's a red squiggle near where I attempt to import Std, and after some time of the vscode lean4 process doing some stuff in the background, it eventually fails with this error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/lake setup-file /home/james/Desktop/dev/lean4_learning/fp_in_lean/FpInLean/Basic.lean Init Std` failed:</span>\n\n<span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">34</span><span class=\"bp\">/</span><span class=\"mi\">161</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Lean.CoreM</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">35</span><span class=\"bp\">/</span><span class=\"mi\">162</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.RCases</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">54</span><span class=\"bp\">/</span><span class=\"mi\">195</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.NormCast.Ext</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">55</span><span class=\"bp\">/</span><span class=\"mi\">195</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Case</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">81</span><span class=\"bp\">/</span><span class=\"mi\">195</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.Lint.Misc</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">85</span><span class=\"bp\">/</span><span class=\"mi\">195</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Std.Tactic.TryThis</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/lib/lean:/home/james/.elan/toolchains/leanprover--lean4---stable/lib:./.lake/packages/std/.lake/build/lib /home/james/.elan/toolchains/leanprover--lean4---stable/bin/lean -Dlinter.missingDocs=true ./.lake/packages/std/././Std/Lean/CoreM.lean -R ./.lake/packages/std/./. -o ./.lake/packages/std/.lake/build/lib/Std/Lean/CoreM.olean -i ./.lake/packages/std/.lake/build/lib/Std/Lean/CoreM.ilean -c ./.lake/packages/std/.lake/build/ir/Std/Lean/CoreM.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Lean</span><span class=\"bp\">/</span><span class=\"n\">CoreM.lean</span><span class=\"o\">:</span><span class=\"mi\">48</span><span class=\"o\">:</span><span class=\"mi\">22</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">escape</span> <span class=\"n\">sequence</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/lean` exited with code 1</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/lib/lean:/home/james/.elan/toolchains/leanprover--lean4---stable/lib:./.lake/packages/std/.lake/build/lib /home/james/.elan/toolchains/leanprover--lean4---stable/bin/lean -Dlinter.missingDocs=true ./.lake/packages/std/././Std/Tactic/NormCast/Ext.lean -R ./.lake/packages/std/./. -o ./.lake/packages/std/.lake/build/lib/Std/Tactic/NormCast/Ext.olean -i ./.lake/packages/std/.lake/build/lib/Std/Tactic/NormCast/Ext.ilean -c ./.lake/packages/std/.lake/build/ir/Std/Tactic/NormCast/Ext.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">NormCast</span><span class=\"bp\">/</span><span class=\"n\">Ext.lean</span><span class=\"o\">:</span><span class=\"mi\">92</span><span class=\"o\">:</span><span class=\"mi\">19</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">escape</span> <span class=\"n\">sequence</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">NormCast</span><span class=\"bp\">/</span><span class=\"n\">Ext.lean</span><span class=\"o\">:</span><span class=\"mi\">99</span><span class=\"o\">:</span><span class=\"mi\">34</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">identifier</span><span class=\"bp\">;</span> <span class=\"n\">expected</span> <span class=\"sc\">'['</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">NormCast</span><span class=\"bp\">/</span><span class=\"n\">Ext.lean</span><span class=\"o\">:</span><span class=\"mi\">210</span><span class=\"o\">:</span><span class=\"mi\">21</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">token</span> <span class=\"bp\">'</span><span class=\"n\">for'</span><span class=\"bp\">;</span> <span class=\"n\">expected</span> <span class=\"sc\">'['</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/lean` exited with code 1</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/lib/lean:/home/james/.elan/toolchains/leanprover--lean4---stable/lib:./.lake/packages/std/.lake/build/lib /home/james/.elan/toolchains/leanprover--lean4---stable/bin/lean -Dlinter.missingDocs=true ./.lake/packages/std/././Std/Tactic/Lint/Misc.lean -R ./.lake/packages/std/./. -o ./.lake/packages/std/.lake/build/lib/Std/Tactic/Lint/Misc.olean -i ./.lake/packages/std/.lake/build/lib/Std/Tactic/Lint/Misc.ilean -c ./.lake/packages/std/.lake/build/ir/Std/Tactic/Lint/Misc.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Lint</span><span class=\"bp\">/</span><span class=\"n\">Misc.lean</span><span class=\"o\">:</span><span class=\"mi\">182</span><span class=\"o\">:</span><span class=\"mi\">90</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">escape</span> <span class=\"n\">sequence</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Lint</span><span class=\"bp\">/</span><span class=\"n\">Misc.lean</span><span class=\"o\">:</span><span class=\"mi\">185</span><span class=\"o\">:</span><span class=\"mi\">63</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">token</span> <span class=\"sc\">'.'</span><span class=\"bp\">;</span> <span class=\"n\">expected</span> <span class=\"n\">command</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Lint</span><span class=\"bp\">/</span><span class=\"n\">Misc.lean</span><span class=\"o\">:</span><span class=\"mi\">187</span><span class=\"o\">:</span><span class=\"mi\">61</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"kd\">universe</span> <span class=\"n\">level</span> <span class=\"n\">named</span> <span class=\"bp\">'</span><span class=\"n\">level'</span> <span class=\"n\">has</span> <span class=\"n\">already</span> <span class=\"n\">been</span> <span class=\"n\">declared</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Lint</span><span class=\"bp\">/</span><span class=\"n\">Misc.lean</span><span class=\"o\">:</span><span class=\"mi\">187</span><span class=\"o\">:</span><span class=\"mi\">66</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">token</span> <span class=\"sc\">')'</span><span class=\"bp\">;</span> <span class=\"n\">expected</span> <span class=\"n\">command</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Lint</span><span class=\"bp\">/</span><span class=\"n\">Misc.lean</span><span class=\"o\">:</span><span class=\"mi\">190</span><span class=\"o\">:</span><span class=\"mi\">31</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">token</span> <span class=\"sc\">'.'</span><span class=\"bp\">;</span> <span class=\"n\">expected</span> <span class=\"n\">command</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Lint</span><span class=\"bp\">/</span><span class=\"n\">Misc.lean</span><span class=\"o\">:</span><span class=\"mi\">190</span><span class=\"o\">:</span><span class=\"mi\">85</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">token</span> <span class=\"sc\">'`'</span><span class=\"bp\">;</span> <span class=\"n\">expected</span> <span class=\"bp\">'</span><span class=\"n\">abbrev'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">axiom</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">builtin_initialize'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">class</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">def</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">elab'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">elab_rules'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">example</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">inductive</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">infix</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">infixl</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">infixr</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">initialize'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">instance</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">macro'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">macro_rules'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">notation</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">opaque'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">postfix</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">prefix</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"kd\">structure</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">syntax'</span> <span class=\"n\">or</span> <span class=\"bp\">'</span><span class=\"kd\">theorem</span><span class=\"bp\">'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/lean` exited with code 1</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/lib/lean:/home/james/.elan/toolchains/leanprover--lean4---stable/lib:./.lake/packages/std/.lake/build/lib /home/james/.elan/toolchains/leanprover--lean4---stable/bin/lean -Dlinter.missingDocs=true ./.lake/packages/std/././Std/Tactic/Case.lean -R ./.lake/packages/std/./. -o ./.lake/packages/std/.lake/build/lib/Std/Tactic/Case.olean -i ./.lake/packages/std/.lake/build/lib/Std/Tactic/Case.ilean -c ./.lake/packages/std/.lake/build/ir/Std/Tactic/Case.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Case.lean</span><span class=\"o\">:</span><span class=\"mi\">129</span><span class=\"o\">:</span><span class=\"mi\">17</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">escape</span> <span class=\"n\">sequence</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Case.lean</span><span class=\"o\">:</span><span class=\"mi\">190</span><span class=\"o\">:</span><span class=\"mi\">56</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">evalCase</span> <span class=\"n\">__do_lift</span><span class=\"bp\">â</span> <span class=\"bp\">?</span><span class=\"n\">m.33776</span> <span class=\"bp\">?</span><span class=\"n\">m.33879</span> <span class=\"bp\">?</span><span class=\"n\">m.33980</span> <span class=\"n\">caseBody</span>\n<span class=\"n\">argument</span>\n  <span class=\"n\">caseBody</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">TSyntax</span> <span class=\"bp\">`</span><span class=\"n\">Std.Tactic.casePattTac</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">ST.Ref</span> <span class=\"n\">IO.RealWorld</span> <span class=\"n\">Term.State</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Case.lean</span><span class=\"o\">:</span><span class=\"mi\">190</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span> <span class=\"n\">name</span> <span class=\"bp\">'</span><span class=\"n\">close'</span> <span class=\"n\">for</span> <span class=\"n\">function</span> <span class=\"bp\">'</span><span class=\"n\">Lean.Elab.Tactic.evalCase'</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Case.lean</span><span class=\"o\">:</span><span class=\"mi\">190</span><span class=\"o\">:</span><span class=\"mi\">49</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">evalCase</span> <span class=\"n\">__do_lift</span><span class=\"bp\">â</span> <span class=\"bp\">?</span><span class=\"n\">m.33776</span> <span class=\"bp\">?</span><span class=\"n\">m.33879</span> <span class=\"n\">patts</span><span class=\"bp\">?</span>\n<span class=\"n\">argument</span>\n  <span class=\"n\">patts</span><span class=\"bp\">?</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">Array</span> <span class=\"o\">(</span><span class=\"n\">Option</span> <span class=\"o\">(</span><span class=\"n\">TSyntax</span> <span class=\"bp\">`</span><span class=\"n\">term</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">Term.Context</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Case.lean</span><span class=\"o\">:</span><span class=\"mi\">194</span><span class=\"o\">:</span><span class=\"mi\">57</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">evalCase</span> <span class=\"n\">__do_lift</span><span class=\"bp\">â</span> <span class=\"bp\">?</span><span class=\"n\">m.37601</span> <span class=\"bp\">?</span><span class=\"n\">m.37704</span> <span class=\"bp\">?</span><span class=\"n\">m.37805</span> <span class=\"n\">caseBody</span>\n<span class=\"n\">argument</span>\n  <span class=\"n\">caseBody</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">TSyntax</span> <span class=\"bp\">`</span><span class=\"n\">Std.Tactic.casePattTac</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">ST.Ref</span> <span class=\"n\">IO.RealWorld</span> <span class=\"n\">Term.State</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Case.lean</span><span class=\"o\">:</span><span class=\"mi\">194</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">argument</span> <span class=\"n\">name</span> <span class=\"bp\">'</span><span class=\"n\">close'</span> <span class=\"n\">for</span> <span class=\"n\">function</span> <span class=\"bp\">'</span><span class=\"n\">Lean.Elab.Tactic.evalCase'</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">Case.lean</span><span class=\"o\">:</span><span class=\"mi\">194</span><span class=\"o\">:</span><span class=\"mi\">50</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">evalCase</span> <span class=\"n\">__do_lift</span><span class=\"bp\">â</span> <span class=\"bp\">?</span><span class=\"n\">m.37601</span> <span class=\"bp\">?</span><span class=\"n\">m.37704</span> <span class=\"n\">patts</span><span class=\"bp\">?</span>\n<span class=\"n\">argument</span>\n  <span class=\"n\">patts</span><span class=\"bp\">?</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">Array</span> <span class=\"o\">(</span><span class=\"n\">Option</span> <span class=\"o\">(</span><span class=\"n\">TSyntax</span> <span class=\"bp\">`</span><span class=\"n\">term</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">Term.Context</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/lean` exited with code 1</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/lib/lean:/home/james/.elan/toolchains/leanprover--lean4---stable/lib:./.lake/packages/std/.lake/build/lib /home/james/.elan/toolchains/leanprover--lean4---stable/bin/lean -Dlinter.missingDocs=true ./.lake/packages/std/././Std/Tactic/TryThis.lean -R ./.lake/packages/std/./. -o ./.lake/packages/std/.lake/build/lib/Std/Tactic/TryThis.olean -i ./.lake/packages/std/.lake/build/lib/Std/Tactic/TryThis.ilean -c ./.lake/packages/std/.lake/build/ir/Std/Tactic/TryThis.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">TryThis.lean</span><span class=\"o\">:</span><span class=\"mi\">43</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">widget_module</span><span class=\"o\">]</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">TryThis.lean</span><span class=\"o\">:</span><span class=\"mi\">43</span><span class=\"o\">:</span><span class=\"mi\">37</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">Widget.Module'</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">TryThis.lean</span><span class=\"o\">:</span><span class=\"mi\">356</span><span class=\"o\">:</span><span class=\"mi\">4</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">Widget.savePanelWidgetInfo'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/lean` exited with code 1</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/lib/lean:/home/james/.elan/toolchains/leanprover--lean4---stable/lib:./.lake/packages/std/.lake/build/lib /home/james/.elan/toolchains/leanprover--lean4---stable/bin/lean -Dlinter.missingDocs=true ./.lake/packages/std/././Std/Tactic/RCases.lean -R ./.lake/packages/std/./. -o ./.lake/packages/std/.lake/build/lib/Std/Tactic/RCases.olean -i ./.lake/packages/std/.lake/build/lib/Std/Tactic/RCases.ilean -c ./.lake/packages/std/.lake/build/ir/Std/Tactic/RCases.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Tactic</span><span class=\"bp\">/</span><span class=\"n\">RCases.lean</span><span class=\"o\">:</span><span class=\"mi\">716</span><span class=\"o\">:</span><span class=\"mi\">39</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">escape</span> <span class=\"n\">sequence</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">james</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---stable/bin/lean` exited with code 1</span>\n</code></pre></div>",
        "id": 411361791,
        "sender_full_name": "James Good",
        "timestamp": 1704457667
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 411362034,
        "sender_full_name": "James Good",
        "timestamp": 1704457791
    },
    {
        "content": "<p>I suspect that this is an incompatibility between your Lean version and your <code>Std</code> version. Unfortunately, they're presently fairly tightly coupled, and there's no way for Std to declare ahead of time which versions of Lean it supports.</p>\n<p>Try copying the <code>lean-toolchain</code> file from the <code>Std</code> repository and then type <code>lake update</code> in a terminal. This will generate a lock file (Lake manifest) that keeps Std at the version you want until you decide to update.</p>\n<p>This will get easier in the future!</p>",
        "id": 411433293,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1704488967
    }
]