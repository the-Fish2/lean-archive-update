[
    {
        "content": "<p>Did something change recently with the server or extension? When I highlight a nonempty selection and then type <code>_</code> it will now surround the content with <code>_</code> on either side, similar to what it does for parentheses. This seems like something from the markdown mode, and it's a bad choice for lean because I often want to replace bad subterms with <code>_</code> to see the expected type</p>",
        "id": 427846647,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710904496
    },
    {
        "content": "<p>Git blame says this is from <a href=\"https://github.com/leanprover/vscode-lean4/pull/330\">leanprover/vscode-lean4#330</a>, cc: <span class=\"user-mention\" data-user-id=\"548935\">@Thomas Murrills</span> <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span></p>",
        "id": 427846918,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710904710
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/vscode-lean4/pull/415\">leanprover/vscode-lean4#415</a></p>",
        "id": 427847170,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710904910
    },
    {
        "content": "<p>Ah, yeah, that would be due to that PR, sorry. I suppose I personally would always backspace then type <code>_</code>, so it didn't occur to me/come up while I was testing it out...I'll make a PR removing it.</p>",
        "id": 427847173,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1710904912
    },
    {
        "content": "<p>Or, nevermind! Beat me to it. :)</p>",
        "id": 427847227,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1710904928
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> <a href=\"#narrow/stream/270676-lean4/topic/vscode.20server.3A.20selection.20.2B.20_/near/427847173\">said</a>:</p>\n<blockquote>\n<p>I suppose I personally would always backspace then type <code>_</code>, so it didn't occur to me...</p>\n</blockquote>\n<p>I don't like giving lean an opportunity to see a syntactically incorrect proof text when possible</p>",
        "id": 427847281,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710904979
    },
    {
        "content": "<p>No, yeah, definitely, and if I had imagined this situation (wanting to use highlight+<code>_</code> for intentional replacement) I wouldn't have proposed it in the first place.</p>",
        "id": 427847490,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1710905134
    },
    {
        "content": "<p>I guess this technically calls into question \\` being a surrounding pair as well, but hopefully \"highlighting then typing backtick to begin a name literal or syntax quotation\" is far less common than replacing something with an underscore.</p>",
        "id": 427848412,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1710905832
    },
    {
        "content": "<p>Testing this I've noticed something else that broke my muscle memory and which seems to be a bad interaction between the abbreviation and the auto-closing behavior:</p>\n<p>Typing <code>\\</code> + <code>&lt;</code> + <code> </code> results in the sequence <code>⟨⟩ |</code>where <code>|</code> represents your cursor position. This is very confusing, and different from the previous result which was <code>⟨ |</code>. I've learned that if I want to type an open bracket I have to type <code>\\</code> + <code>&lt;</code> + <code> </code> + backspace, but now this produces a <code>⟨⟩</code> so I find myself typing stuff like <code>⟨⟩h1, h2⟩</code> now</p>",
        "id": 427867037,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710919509
    },
    {
        "content": "<p>I think it would be better to not have unicode braces be auto-closing in vscode, because these are normally inserted by the abbreviation handler, not the user directly, and these two systems don't seem to be talking to each other</p>",
        "id": 427867270,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710919634
    },
    {
        "content": "<p>Normally you can use auto-closing brackets to bracket a selection, by selecting it and typing the auto-closing character in question, but for <code>\\&lt;</code> this is impossible AFAICT, you have to type two or three characters and by then the selection is gone</p>",
        "id": 427867579,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710919791
    },
    {
        "content": "<p>so the main remaining advantage of auto-closing characters is that you can type <code>⟨⟩</code> by just typing <code>⟨</code>, but we already have the <code>\\&lt;&gt;</code> abbreviation for that</p>",
        "id": 427867795,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710919903
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/vscode.20server.3A.20selection.20.2B.20_/near/427867037\">said</a>:</p>\n<blockquote>\n<p>Testing this I've noticed something else that broke my muscle memory and which seems to be a bad interaction between the abbreviation and the auto-closing behavior:</p>\n<p>Typing <code>\\</code> + <code>&lt;</code> + <code> </code> results in the sequence <code>⟨⟩ |</code>where <code>|</code> represents your cursor position. This is very confusing, and different from the previous result which was <code>⟨ |</code>. I've learned that if I want to type an open bracket I have to type <code>\\</code> + <code>&lt;</code> + <code> </code> + backspace, but now this produces a <code>⟨⟩</code> so I find myself typing stuff like <code>⟨⟩h1, h2⟩</code> now</p>\n</blockquote>\n<p>Ah, this is the result of a case that didn't come up in the abbreviation provider before (and that I unfortunately forgot to test because I usually use Tab to complete abbreviations early). What if this produced <code>⟨ |⟩</code> instead?</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/vscode.20server.3A.20selection.20.2B.20_/near/427867579\">said</a>:</p>\n<blockquote>\n<p>Normally you can use auto-closing brackets to bracket a selection, by selecting it and typing the auto-closing character in question, but for <code>\\&lt;</code> this is impossible AFAICT, you have to type two or three characters and by then the selection is gone</p>\n</blockquote>\n<p>This is a separate feature from auto-closing brackets.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/vscode.20server.3A.20selection.20.2B.20_/near/427867795\">said</a>:</p>\n<blockquote>\n<p>so the main remaining advantage of auto-closing characters is that you can type <code>⟨⟩</code> by just typing <code>⟨</code>, but we already have the <code>\\&lt;&gt;</code> abbreviation for that</p>\n</blockquote>\n<p>I'm fairly certain that most people do not know about <code>\\&lt;&gt;</code>.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/vscode.20server.3A.20selection.20.2B.20_/near/427867270\">said</a>:</p>\n<blockquote>\n<p>I think it would be better to not have unicode braces be auto-closing in vscode, because these are normally inserted by the abbreviation handler, not the user directly, and these two systems don't seem to be talking to each other</p>\n</blockquote>\n<p>Provided that I can make the auto-closing abbreviation with a space at the end work correctly, the main shortcoming seems to be that the pair of brackets will not be deleted when you delete the opening bracket to delete both opening and closing bracket immediately after the pair is inserted, and I don't consider this to be such a significant deviation from the usual behavior that we shouldn't have auto-closing unicode brackets at all.</p>",
        "id": 427872239,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1710922138
    },
    {
        "content": "<p>I use <code>\\&lt;&gt;</code> a lot personally</p>",
        "id": 427872349,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710922201
    },
    {
        "content": "<p>With the current situation I have to really fight to get angle brackets around an existing span of text</p>",
        "id": 427872447,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710922230
    },
    {
        "content": "<p>because I can't insert left brackets anymore</p>",
        "id": 427872471,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710922243
    },
    {
        "content": "<p>This is also not great: <code>\\&lt;a</code> produces <code>⟨⟩a</code></p>",
        "id": 427872853,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710922409
    },
    {
        "content": "<p>To be clear, I'm a big fan of auto-closing brackets... I just think that the current implementation auto-closes in all situations I don't want it to and doesn't auto-close when I want it to</p>",
        "id": 427873097,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710922507
    },
    {
        "content": "<p>maybe we should just petition to get a <code>⟨</code> key on the keyboard</p>",
        "id": 427873183,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710922556
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/vscode.20server.3A.20selection.20.2B.20_/near/427872447\">said</a>:</p>\n<blockquote>\n<p>With the current situation I have to really fight to get angle brackets around an existing span of text</p>\n</blockquote>\n<p>Ok, I agree and am convinced. I don't see a way to make surrounding brackets work either, and I agree that having brackets auto-close when you're trying to surround an expression is annoying. Very unfortunate, but I'll revert the change.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/vscode.20server.3A.20selection.20.2B.20_/near/427872853\">said</a>:</p>\n<blockquote>\n<p>This is also not great: <code>\\&lt;a</code> produces <code>⟨⟩a</code></p>\n</blockquote>\n<p>Yes, that's the same shortcoming mentioned earlier. Before, we simply didn't have any abbreviations that used $CURSOR manipulation and could also not be completed eagerly, so it never came up that trailing inputs were placed at the wrong position.</p>",
        "id": 427873407,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1710922641
    },
    {
        "content": "<p>a crazy idea: if you have a selection and type the leader key, then the selection is removed and you see <code>\\</code>, but it also saves the selection that was just deleted, and if you complete the abbreviation and it is an auto-closing left bracket, it brings back the original selection and puts the right bracket in, as though it was \"one composite key\"</p>",
        "id": 427873907,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710922837
    },
    {
        "content": "<p>I considered this too, but keeping any state whatsoever in sync with the text editor is unfortunately a massive pain.</p>",
        "id": 427874060,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1710922903
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/vscode.20server.3A.20selection.20.2B.20_/near/427873907\">said</a>:</p>\n<blockquote>\n<p>a crazy idea: if you have a selection and type the leader key, then the selection is removed and you see <code>\\</code>, but it also saves the selection that was just deleted, and if you complete the abbreviation and it is an auto-closing left bracket, it brings back the original selection and puts the right bracket in, as though it was \"one composite key\"</p>\n</blockquote>\n<p>I try this every once in a while, just to see if the day came where it was legal...</p>",
        "id": 427874067,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710922907
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/vscode-lean4/pull/418\">vscode-lean4#418</a> adds the <code>\\&lt;&gt;</code> abbreviation to the abbreviation hover of the opening bracket so that users can at least learn about this feature.</p>",
        "id": 427887463,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1710928026
    },
    {
        "content": "<p>2 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/beginner.20question\">#new members &gt; beginner question</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span>.</p>",
        "id": 427906741,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710934279
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/vscode.20server.3A.20selection.20.2B.20_/near/427873183\">said</a>:</p>\n<blockquote>\n<p>maybe we should just petition to get a <code>⟨</code> key on the keyboard</p>\n</blockquote>\n<p>I do have a ⟨ key and a ⟩ key on my keyboard. To be honest it requires pressing two keys but this is also true for many letters like é, è, à… and a lot of punctuation.</p>",
        "id": 427950559,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1710947307
    },
    {
        "content": "<p>But my keyboard has 34 keys and there are only 26 regular letters so I have a lot of room to spare.</p>",
        "id": 427950693,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1710947345
    },
    {
        "content": "<p>There is no need to have a fancy keyboard to use a keyboard layout including ⟨ and ⟩, see <a href=\"https://github.com/OneDeadKey/kalamine\">https://github.com/OneDeadKey/kalamine</a> for one very convenient way to tweak yours.</p>",
        "id": 427951297,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1710947478
    }
]