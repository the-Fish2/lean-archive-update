[
    {
        "content": "<p>Is this expected behavior?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.BigOperators.Order</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">have_works</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">Finset.range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">|</span><span class=\"n\">f</span> <span class=\"n\">j</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"bp\">∑</span> <span class=\"n\">c</span> <span class=\"k\">in</span> <span class=\"n\">Finset.range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">apply</span> <span class=\"n\">Finset.sum_le_sum</span> <span class=\"k\">fun</span> <span class=\"n\">j</span> <span class=\"n\">hj</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">abs_le.2</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n  <span class=\"gr\">sorry</span>\n  <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">suffices_by_bug</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- ↓ this line errors, but not if the `apply` line is comment out</span>\n  <span class=\"k\">suffices</span>\n      <span class=\"bp\">∑</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">Finset.range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">|</span><span class=\"n\">f</span> <span class=\"n\">j</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"bp\">∑</span> <span class=\"n\">c</span> <span class=\"k\">in</span> <span class=\"n\">Finset.range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">c</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Finset.sum_le_sum</span> <span class=\"k\">fun</span> <span class=\"n\">j</span> <span class=\"n\">hj</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">abs_le.2</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n</code></pre></div>",
        "id": 426127805,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710250998
    },
    {
        "content": "<p><code>refine Finset.sum_le_sum fun j hj =&gt; abs_le.2 ?_</code> works correctly, so it seems more likely that this is a bug in <code>apply</code> than in<code>suffices</code></p>",
        "id": 426127905,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710251039
    }
]