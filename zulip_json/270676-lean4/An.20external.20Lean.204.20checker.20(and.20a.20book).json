[
    {
        "content": "<p>For those who are interested in this side of things, the <a href=\"https://github.com/ammkrn/nanoda_lib\">rust flavored external type checker</a> is now up to date with Lean 4 and can be used to check Lean 4 export files. It includes optional support for the Nat and String literal kernel extensions, and supports a basic form of axiom whitelists to address a common concern in earlier discussions.</p>\n<p>I also published the first draft of <a href=\"https://ammkrn.github.io/type_checking_in_lean4/\">a book</a> about the kernel, trust/export matters, and writing your own external checker. I know there are many domain experts here with very deep knowledge of this domain, so please consider contributing if that's you.</p>\n<p>I would like to add that this work was done with the support of the <a href=\"https://lean-fro.org/\">Lean FRO</a>.</p>",
        "id": 412373824,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1704988983
    },
    {
        "content": "<p>We've being talking about changing our current CI for Mathlib, so that rather than running <code>lean4checker</code> on every push, we only run it on staging commits.</p>\n<p>Ideally we would actually run multiple checkers there, including <code>nanoda</code>. What do we need to do to run <code>nanoda</code> in Mathlib CI?</p>",
        "id": 412463749,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1705027003
    },
    {
        "content": "<p>You need cargo to build the program itself, and for now you need to use <a href=\"https://github.com/ammkrn/lean4export/tree/format2024\">this fork</a> of lean4export to produce the export file. There's an open PR to move these changes upstream.</p>\n<p>The other thing you need is to set up a config file to pass to the binary. There any community standards for pretty printers yet, so if a human reviewer isn't going to check the pretty printer output you can just omit printing and run the checker; an example config would be:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">{</span>\n    <span class=\"s2\">\"export_file_path\"</span><span class=\"o\">:</span> <span class=\"s2\">\"&lt;path to export file&gt;\"</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"use_stdin\"</span><span class=\"o\">:</span> <span class=\"n\">false</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"num_threads\"</span><span class=\"o\">:</span> <span class=\"bp\">&lt;</span><span class=\"n\">num</span> <span class=\"n\">threads</span><span class=\"bp\">&gt;</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"permitted_axioms\"</span><span class=\"o\">:</span> <span class=\"o\">[</span>\n        <span class=\"s2\">\"propext\"</span><span class=\"o\">,</span>\n        <span class=\"s2\">\"Classical.choice\"</span><span class=\"o\">,</span>\n        <span class=\"s2\">\"Quot.sound\"</span><span class=\"o\">,</span>\n        <span class=\"s2\">\"Lean.trustCompiler\"</span>\n    <span class=\"o\">],</span>\n    <span class=\"s2\">\"unpermitted_axiom_hard_error\"</span><span class=\"o\">:</span> <span class=\"n\">false</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"nat_extension\"</span><span class=\"o\">:</span> <span class=\"n\">true</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"string_extension\"</span><span class=\"o\">:</span> <span class=\"n\">true</span><span class=\"o\">,</span>\n    <span class=\"s2\">\"print_success_message\"</span><span class=\"o\">:</span> <span class=\"n\">true</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>Or you can leave out <code>export_file_path</code>, set <code>use_stdin</code> to true, and pipe the output of lean4export into stdin instead.</p>\n<p>One soft issue that comes up with developments that depend on core is that <code>sorryAx</code>, <code>Lean.ofReduceBool</code> and <code>Lean.ofReduceNat</code> are part of the exported environment, but they're not used by anything. The current options are to just let the checker ignore them entirely, or to put them in the whitelist which will check them, but would also let them be used by subsequent declarations. The config above just ignores them. If the exporter is modified to allow exclusions, excluding them from export would also be an option.</p>",
        "id": 412577147,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1705076523
    },
    {
        "content": "<p>If you make releases in github CI, mathlib CI could download it instead of building it every time</p>",
        "id": 412586392,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705079457
    },
    {
        "content": "<p>see the <a href=\"https://github.com/digama0/leangz/blob/master/.github/workflows/release.yml\">leangz workflow</a>, which is used to build <code>leantar</code> which is a rust program used by mathlib CI</p>",
        "id": 412586579,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705079525
    },
    {
        "content": "<p>Thanks, I'll look into that and report back.</p>",
        "id": 412588602,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1705080241
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I set up a release action, so the release assets should be available. Let me know if I didn't get the right target  triple for the Mathlib CI or something.</p>",
        "id": 413005185,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1705340035
    },
    {
        "content": "<p>We should add a link to this book to <a href=\"https://leanprover-community.github.io/learn.html#more-on-foundations\">https://leanprover-community.github.io/learn.html#more-on-foundations</a></p>",
        "id": 418811903,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1706612269
    },
    {
        "content": "<p>Wait, isn't it there already? It seems to have been added two weeks ago already.</p>",
        "id": 418895520,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1706638758
    },
    {
        "content": "<p>That PR was accepted, and I'm able to see it in the <code>More on Foundations</code> section. The vote of confidence  from Floris van Doorn is still greatly appreciated.</p>",
        "id": 418914385,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1706646376
    },
    {
        "content": "<p>And I voted twice: once when I approved Floris's suggestion above and once when I merged the PR two weeks ago...</p>",
        "id": 418939314,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1706657398
    },
    {
        "content": "<p>What do we still need to do to have this run during Mathlib CI?</p>",
        "id": 418941950,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1706658863
    },
    {
        "content": "<p>I set up a job to create/offer binaries for releases which gets rid of the cargo/rustc stuff, so <a href=\"#narrow/stream/270676-lean4/topic/An.20external.20Lean.204.20checker.20.28and.20a.20book.29/near/412577147\">this</a> minus the cargo requirement. Get the appropriate build artifact from the release, use the linked fork of lean4export to build the export file, and then run the checker against the export file.</p>",
        "id": 418945041,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1706660493
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/270676-lean4/topic/An.20external.20Lean.204.20checker.20.28and.20a.20book.29/near/418895520\">said</a>:</p>\n<blockquote>\n<p>Wait, isn't it there already? It seems to have been added two weeks ago already.</p>\n</blockquote>\n<p>Oh, my bad. I didn't read carefully enough!</p>",
        "id": 419033497,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1706705804
    },
    {
        "content": "<p>Can the answer at <a href=\"https://lean-lang.org/lean4/doc/faq.html#is-lean-sound-how-big-is-the-kernel-should-i-trust-it\">https://lean-lang.org/lean4/doc/faq.html#is-lean-sound-how-big-is-the-kernel-should-i-trust-it</a> be updated to contain this information?</p>",
        "id": 445340920,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1718712372
    },
    {
        "content": "<p>If someone suggests a blob of text to add, I can make the change.</p>",
        "id": 445748081,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718853238
    }
]