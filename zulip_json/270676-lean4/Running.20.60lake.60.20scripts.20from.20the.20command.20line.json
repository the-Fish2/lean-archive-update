[
    {
        "content": "<p>Previously, I used to run <code>lake</code> scripts from the command line by typing <code>lake run &lt;package-name&gt;/&lt;script-name&gt;</code> (or <code>lake run &lt;script-name&gt;</code> when working from the project where the script is defined). However, this no longer seems to be working for me on <code>lean4:v4.8.0-rc1</code>. Has the behaviour of <code>lake</code> changed with the update? I also tried <code>lake script run ...</code>, but this variant also gives the error message <code>error: unknown script lean-slides/serve-slides</code>.</p>\n<p>The actual script in question is <a href=\"https://github.com/0art0/lean-slides/blob/13bab1cd0492ae891991e71efca07a816a940e54/lakefile.lean#L33\">this one</a>, which I used to be able to run in downstream dependencies through <code>lake run lean-slides/serve-slides</code>. The name of this script still appears as a suggestion when I run <code>lake scripts</code>, so I'm hoping it's only the command that has changed.</p>",
        "id": 438812145,
        "sender_full_name": "Anand Rao Tadipatri",
        "timestamp": 1715782295
    },
    {
        "content": "<p>Pinging <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>  for this one.</p>",
        "id": 438905299,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715817546
    },
    {
        "content": "<p>This sounds like a bug. The Lake test suite does have a test for run scripts from upstream dependencies, so a breaking <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> could be helpful. I will also check to see if I can reproduce with <code>lean-slides</code> myself.</p>",
        "id": 438905646,
        "sender_full_name": "Mac Malone",
        "timestamp": 1715817704
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>  FWIW I've found an MWE for this, it seems to be something with the name of the script. The following in the lakefile (in an otherwise fresh project)</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"k\">do</span>\n<span class=\"w\">  </span><span class=\"n\">IO</span><span class=\"bp\">.</span><span class=\"n\">println</span><span class=\"w\"> </span><span class=\"s2\">\"hello\"</span>\n<span class=\"w\">  </span><span class=\"n\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"n\">script</span><span class=\"w\"> </span><span class=\"bp\">«</span><span class=\"n\">foo</span><span class=\"bp\">-</span><span class=\"n\">bar</span><span class=\"bp\">»</span><span class=\"w\"> </span><span class=\"k\">do</span>\n<span class=\"w\">  </span><span class=\"n\">IO</span><span class=\"bp\">.</span><span class=\"n\">println</span><span class=\"w\"> </span><span class=\"s2\">\"hello\"</span>\n<span class=\"w\">  </span><span class=\"n\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<p>results in:</p>\n<div class=\"codehilite\" data-code-language=\"Text output\"><pre><span></span><code><span class=\"go\">[goens@thinkpad-goens:/tmp]$ lake run foo</span>\n<span class=\"go\">hello</span>\n\n<span class=\"go\">[goens@thinkpad-goens:/tmp]$ lake run foo-bar</span>\n<span class=\"go\">error: unknown script foo-bar</span>\n</code></pre></div>",
        "id": 446944450,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1719335513
    },
    {
        "content": "<p>and for anyone else looking for a workaround, renaming <code>serve-slides</code> to <code>serve</code> or so in the lakefile makes it work</p>",
        "id": 446944621,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1719335550
    },
    {
        "content": "<p>Does it work if you include the french quotes on the command line?</p>",
        "id": 446979680,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719344701
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/270676-lean4/topic/Running.20.60lake.60.20scripts.20from.20the.20command.20line/near/446979680\">said</a>:</p>\n<blockquote>\n<p>Does it work if you include the french quotes on the command line?</p>\n</blockquote>\n<p>it does! nice!</p>",
        "id": 446984404,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1719346197
    },
    {
        "content": "<p>(I'd still think it's a bug, right? just that makes the workaround even easier, calling <code>lake run  lean-slides/«serve-slides»</code>)</p>",
        "id": 446984777,
        "sender_full_name": "Andrés Goens",
        "timestamp": 1719346309
    },
    {
        "content": "<p>Fix up at <a href=\"https://github.com/leanprover/lean4/pull/4564\">lean4#4564</a>.</p>",
        "id": 447010439,
        "sender_full_name": "Mac Malone",
        "timestamp": 1719354347
    }
]