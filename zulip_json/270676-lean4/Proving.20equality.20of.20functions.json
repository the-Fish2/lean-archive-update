[
    {
        "content": "<p>I have a simple toy data type with a function </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">Arrow</span>\n  <span class=\"bp\">|</span> <span class=\"n\">up</span>\n  <span class=\"bp\">|</span> <span class=\"n\">down</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">reverse</span> <span class=\"o\">:</span> <span class=\"n\">Arrow</span> <span class=\"bp\">→</span> <span class=\"n\">Arrow</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Arrow.up</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Arrow.down</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Arrow.down</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Arrow.up</span>\n</code></pre></div>\n<p>I want to prove that <code>reverse ∘ reverse = id</code>, but I can only do it by introducing an axiom that shows that two functions are equal iff they are pointwise equal:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">axiom</span> <span class=\"n\">pointwiseEquality</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∀</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">g</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">reverse</span> <span class=\"bp\">∘</span> <span class=\"n\">reverse</span> <span class=\"bp\">=</span> <span class=\"n\">id</span> <span class=\"o\">:=</span>\n  <span class=\"k\">have</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Arrow</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">reverse</span> <span class=\"bp\">∘</span> <span class=\"n\">reverse</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n    <span class=\"k\">match</span> <span class=\"n\">a</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Arrow.up</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Arrow.down</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">Iff.mp</span> <span class=\"o\">(</span><span class=\"n\">pointwiseEquality</span> <span class=\"o\">(</span><span class=\"n\">reverse</span> <span class=\"bp\">∘</span> <span class=\"n\">reverse</span><span class=\"o\">)</span> <span class=\"n\">id</span><span class=\"o\">)</span> <span class=\"n\">f</span>\n</code></pre></div>\n<p>Is there such an axiom in a standard library?</p>",
        "id": 426829376,
        "sender_full_name": "Artur Chakhvadze",
        "timestamp": 1710540295
    },
    {
        "content": "<p><code>funext</code></p>",
        "id": 426829429,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710540332
    }
]