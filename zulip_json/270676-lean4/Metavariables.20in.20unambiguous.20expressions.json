[
    {
        "content": "<p>When this expression is parsed, why does it generate metavariables?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"bp\">&lt;=</span> <span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>this generates <code>@LE.le ? ? (@OfNat.ofNat ? 2 ?) (@OfNat.ofNat ? 5 ?)</code></p>",
        "id": 438149698,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1715480311
    },
    {
        "content": "<p>Can you give a mwe?</p>",
        "id": 438175511,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715510063
    },
    {
        "content": "<p>This at least prints the expected result:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Meta</span> <span class=\"n\">Elab</span> <span class=\"n\">Term</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">pp.explicit</span> <span class=\"n\">true</span> <span class=\"k\">in</span>\n<span class=\"k\">#eval</span> <span class=\"k\">show</span> <span class=\"n\">TermElabM</span> <span class=\"n\">Unit</span> <span class=\"k\">from</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">e</span> <span class=\"bp\">←</span> <span class=\"n\">elabTerm</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"bp\">`</span><span class=\"o\">((</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"bp\">&lt;=</span> <span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)))</span> <span class=\"n\">none</span>\n  <span class=\"n\">println</span><span class=\"bp\">!</span> <span class=\"bp\">←</span> <span class=\"n\">ppExpr</span> <span class=\"n\">e</span> <span class=\"c1\">-- @LE.le Nat instLENat 2 5</span>\n</code></pre></div>",
        "id": 438179273,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1715514362
    }
]