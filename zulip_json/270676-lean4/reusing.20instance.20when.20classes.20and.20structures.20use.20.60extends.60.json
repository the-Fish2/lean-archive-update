[
    {
        "content": "<p>Given a class <code>ClassB</code> which extends another class <code>ClassA</code> and a structure <code>StructB</code> which extends <code>StructA</code>, is it possible to reuse the instance of <code>StructA</code> for <code>ClassA</code> when constructing the instance of <code>StructB</code> for <code>ClassB</code>?</p>\n<p>This mwe should make clear what I mean:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">ClassA</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">ClassB</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">ClassA</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">where</span>\n  <span class=\"n\">c</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">StructA</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">instA</span> <span class=\"o\">:</span> <span class=\"n\">ClassA</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">StructA</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">StructA.a</span>\n  <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">StructA.b</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">StructB</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">StructA</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n  <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">instB</span> <span class=\"o\">:</span> <span class=\"n\">ClassB</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">StructB</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">toClassA</span> <span class=\"o\">:=</span> <span class=\"n\">instA</span> <span class=\"c1\">-- error: wrong type</span>\n  <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">StructB.c</span>\n  <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">StructB.d</span>\n</code></pre></div>",
        "id": 423794680,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1709118176
    },
    {
        "content": "<p>This works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">ClassA</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">ClassB</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">ClassA</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">where</span>\n  <span class=\"n\">c</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">StructA</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">instA</span> <span class=\"o\">:</span> <span class=\"n\">ClassA</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">StructA</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">StructA.a</span>\n  <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">StructA.b</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">ClassA.comp</span> <span class=\"o\">[</span><span class=\"n\">ClassA</span> <span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">]</span>  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">γ</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ClassA</span> <span class=\"n\">α</span> <span class=\"n\">γ</span> <span class=\"n\">where</span>\n  <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">ClassA.a</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n  <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">ClassA.b</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">StructB</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">StructA</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n  <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n  <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">instB</span> <span class=\"o\">:</span> <span class=\"n\">ClassB</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">StructB</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">toClassA</span> <span class=\"o\">:=</span> <span class=\"n\">ClassA.comp</span> <span class=\"n\">StructB.toStructA</span>\n  <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">StructB.c</span>\n  <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">StructB.d</span>\n</code></pre></div>",
        "id": 423806464,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1709122871
    }
]