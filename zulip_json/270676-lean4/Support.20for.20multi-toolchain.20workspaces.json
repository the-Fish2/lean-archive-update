[
    {
        "content": "<p>The <a href=\"https://github.com/leanprover/vscode-lean4/pull/428\">support for multi-toolchain workspaces</a> PR was recently merged into vscode-lean4. It resolves several long-standing usability issues with the VS Code extension that disproportionally affect new users:</p>\n<ul>\n<li>It is now possible to open Lean 4 files in VS Code without first having to open the respective project as a folder.</li>\n<li>When opening a parent or a sub folder of a Lean 4 project and then opening files within it, Lean will work as expected.</li>\n<li>When opening a folder that contains multiple Lean 4 projects and then opening files within it, Lean will work as expected and use the correct language server for each given file.</li>\n</ul>\n<p>This PR is a significant refactor of the VS Code extension. It is likely that it still contains some bugs. I would greatly appreciate if people from the Lean community could help me test this version before it is released to everyone by installing the current vscode-lean4 pre-release (version 0.0.142) that contains this PR:<br>\n<a href=\"/user_uploads/3121/hiAMkTs8YFi6Axxcr9xOrSbS/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/hiAMkTs8YFi6Axxcr9xOrSbS/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/hiAMkTs8YFi6Axxcr9xOrSbS/image.png\"></a></div><p>Please let me know about any new issues you encounter while using the pre-release version.</p>\n<p>One caveat is that due to a limitation in the language client library used by the extension, vscode-lean4 unfortunately does not correctly support nested Lean projects yet. Similarly, when opening Lean files that are not contained in any Lean 4 project, the VS Code extension will use the parent folder of that file for the project scope of the language client. This means that if a non-project Lean file above a Lean 4 project is opened, it effectively acts like a nested project and will not work correctly, either. I hope to resolve these problems at some point in the future as well.</p>",
        "id": 434348689,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1713528590
    },
    {
        "content": "<blockquote>\n<p>It is now possible to open Lean 4 files in VS Code without first having to open the respective project as a folder.</p>\n</blockquote>\n<p>How does one do that? Here's what I tried:</p>\n<ul>\n<li>Prepare a project</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>git<span class=\"w\"> </span>clone<span class=\"w\"> </span>https://github.com/leanprover-community/mathematics_in_lean.git<span class=\"w\"> </span>mil\n<span class=\"nb\">cd</span><span class=\"w\"> </span>mil\nlake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get\n</code></pre></div>\n<ul>\n<li>Launch VS Code without opening last workspace</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>code<span class=\"w\"> </span>-n\n</code></pre></div>\n<ul>\n<li>Open 'Extensions' on the navigation bar and make sure the pre-release Lean 4 extension is selected</li>\n<li>Select 'Open File…' from the 'File' submenu on the main menu bar</li>\n<li>Select 'MIL/C08_Groups_and_Rings/S02_Rings.lean' inside the project directory created above</li>\n</ul>\n<p>And here's what happened:<br>\nThe language server starts as <code>lean.exe</code> (not the expected <code>lake.exe</code>), the <code>lean.exe</code> process has working directory \"c:\\projects\\lean\" (not the expected \"c:\\projects\\lean\\mil\") and the Infoview shows a message</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>unknown package 'Mathlib'\nYou might need to open 's:\\projects\\lean' as a workspace in your editor\n</code></pre></div>",
        "id": 434378795,
        "sender_full_name": "Richard Copley",
        "timestamp": 1713538207
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"400544\">Richard Copley</span> <a href=\"#narrow/stream/270676-lean4/topic/Support.20for.20multi-toolchain.20workspaces/near/434378795\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>It is now possible to open Lean 4 files in VS Code without first having to open the respective project as a folder.</p>\n</blockquote>\n<p>How does one do that? Here's what I tried:</p>\n<ul>\n<li>Prepare a project</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>git<span class=\"w\"> </span>clone<span class=\"w\"> </span>https://github.com/leanprover-community/mathematics_in_lean.git<span class=\"w\"> </span>mil\n<span class=\"nb\">cd</span><span class=\"w\"> </span>mil\nlake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get\n</code></pre></div>\n<ul>\n<li>Launch VS Code without opening last workspace</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>code<span class=\"w\"> </span>-n\n</code></pre></div>\n<ul>\n<li>Open 'Extensions' on the navigation bar and make sure the pre-release Lean 4 extension is selected</li>\n<li>Select 'Open File…' from the 'File' submenu on the main menu bar</li>\n<li>Select 'MIL/C08_Groups_and_Rings/S02_Rings.lean' inside the project directory created above</li>\n</ul>\n<p>And here's what happened:<br>\nThe language server starts as <code>lean.exe</code> (not the expected <code>lake.exe</code>), the <code>lean.exe</code> process has working directory \"c:\\projects\\lean\" (not the expected \"c:\\projects\\lean\\mil\") and the Infoview shows a message</p>\n<p><div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>unknown package 'Mathlib'\nYou might need to open 's:\\projects\\lean' as a workspace in your editor\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Does your <code>lean</code> folder contain a <code>lean-toolchain</code> file?</p>",
        "id": 434380516,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1713538736
    },
    {
        "content": "<p>It did! Having deleted it, things run much more smoothly (the recipe above runs <code>lake.exe</code> in the <code>mil</code> project directory, as desired). Thanks.</p>",
        "id": 434381971,
        "sender_full_name": "Richard Copley",
        "timestamp": 1713539203
    },
    {
        "content": "<p>The problem was that this is precisely the kind of nested project mentioned above which we unfortunately cannot support yet. In nested projects, vscode-lean4 picks the outer-most <code>lean-toolchain</code> it can find (unless you opened a folder that contains a <code>lean-toolchain</code> file, in which case it stops searching at the folder boundary so that it will not see any <code>lean-toolchain</code> files above it). This is the correct behavior for Lean files in <code>.lake</code> and it results in less catastrophic failures in combination with the language-client library than the alternative of using the inner-most <code>lean-toolchain</code> file to define the scope.</p>\n<p>Eventually, when we patch the language-client library to support nested clients, we should be able to use the inner-most <code>lean-toolchain</code> file instead and this interaction will work fine as well.</p>",
        "id": 434383617,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1713539743
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/270676-lean4/topic/Support.20for.20multi-toolchain.20workspaces/near/434383617\">said</a>:</p>\n<blockquote>\n<p>catastrophic failures</p>\n</blockquote>\n<p>I can imagine: a little like <a href=\"https://github.com/leanprover-community/lean4-mode/pull/48#issuecomment-2066573818\">this</a> in Emacs</p>",
        "id": 434383876,
        "sender_full_name": "Richard Copley",
        "timestamp": 1713539829
    },
    {
        "content": "<p>How should I install the experimental version of the VScode extension? Is there a \"nightly\" version, or something like that? I can't find it via the VScode extension search bar.</p>",
        "id": 434383909,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1713539838
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/270676-lean4/topic/Support.20for.20multi-toolchain.20workspaces/near/434383909\">said</a>:</p>\n<blockquote>\n<p>How should I install the experimental version of the VScode extension? Is there a \"nightly\" version, or something like that? I can't find it via the VScode extension search bar.</p>\n</blockquote>\n<p>Does the screenshot in the first post help?</p>",
        "id": 434384164,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1713539926
    },
    {
        "content": "<p>Oops, I'm really silly. Yes, that screenshot should be more than enough</p>",
        "id": 434419607,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1713553662
    },
    {
        "content": "<p>This is beautiful <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span>, I have files open from three random repos using different versions of Lean and all work. Thanks!!</p>",
        "id": 434495715,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1713614766
    },
    {
        "content": "<p>Since no further issues have come up with the pre-release, this has now been released to everyone.<br>\nMost importantly, not opening the Lean 4 project as a folder should not be a major source of errors anymore.</p>",
        "id": 437220839,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1714985648
    }
]