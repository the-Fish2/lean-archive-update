[
    {
        "content": "<p>I have this hypothesis in context:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"n\">vMap</span> <span class=\"o\">:=</span> <span class=\"n\">ls_pre.vMap</span><span class=\"bp\">;</span>  <span class=\"bp\">...</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ls_post_pair</span>\n</code></pre></div>\n<p>is there a tactic or clean way to extract this let as its own hypothesis?</p>",
        "id": 417547118,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1706052370
    },
    {
        "content": "<p><code>extract_lets</code> in particular expects hypotheses to have the let on the outside of the proposition/equality</p>",
        "id": 417547520,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1706052582
    },
    {
        "content": "<p>Can you make a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>?</p>",
        "id": 417547588,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706052606
    },
    {
        "content": "<p>(does <code>lift_lets</code> exist?)</p>",
        "id": 417547671,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706052668
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Mathlib.Tactic.lift_lets#doc\">docs#Mathlib.Tactic.lift_lets</a> !</p>",
        "id": 417547716,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706052696
    },
    {
        "content": "<p>that is perfect! thank you eric :)</p>",
        "id": 417548070,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1706052894
    }
]