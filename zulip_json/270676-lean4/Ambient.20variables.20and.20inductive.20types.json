[
    {
        "content": "<p>I find it really unintuitive that an ambient variable used in an inductive constructor is added as a parameter to the inductive family rather than the constructor.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">Foo</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"n\">α</span>\n<span class=\"k\">#check</span> <span class=\"n\">Foo</span> <span class=\"c1\">-- Foo {α : Type} (a : Type) : Prop</span>\n<span class=\"k\">#check</span> <span class=\"n\">Foo.mk</span> <span class=\"c1\">-- Foo.mk {α : Type} : Foo α α</span>\n</code></pre></div>\n<p>What I would expect here is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"n\">Foo</span> <span class=\"c1\">-- Foo (a : Type) : Prop</span>\n<span class=\"k\">#check</span> <span class=\"n\">Foo.mk</span> <span class=\"c1\">-- Foo.mk {α : Type} : Foo α</span>\n</code></pre></div>\n<p>Am I thinking about this wrong? My intuition is that the <code>mk</code> line is a definition of the <code>mk</code> constructor so I expect variables to be scoped to that definition.</p>",
        "id": 423197876,
        "sender_full_name": "Francisco Giordano",
        "timestamp": 1708803152
    },
    {
        "content": "<p>You want:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">Foo</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">Foo</span> <span class=\"n\">α</span>\n</code></pre></div>",
        "id": 423222695,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1708827154
    }
]