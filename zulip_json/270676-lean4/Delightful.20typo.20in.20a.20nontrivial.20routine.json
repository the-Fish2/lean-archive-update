[
    {
        "content": "<p>Here's a case-analysis intensive routine from what I'm currently working on, which is a fun example of programming alongside theorem proving:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Multiply, changing `s` -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">Interval.mul</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">Interval</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">Interval</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">Int64</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Interval</span> <span class=\"n\">u</span> <span class=\"o\">:=</span>\n  <span class=\"n\">bif</span> <span class=\"n\">x</span> <span class=\"bp\">==</span> <span class=\"mi\">0</span> <span class=\"bp\">||</span> <span class=\"n\">y</span> <span class=\"bp\">==</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"mi\">0</span>\n  <span class=\"k\">else</span> <span class=\"n\">bif</span> <span class=\"n\">x.lo</span> <span class=\"bp\">==</span> <span class=\"n\">nan</span> <span class=\"bp\">||</span> <span class=\"n\">x.hi</span> <span class=\"bp\">==</span> <span class=\"n\">nan</span> <span class=\"bp\">||</span> <span class=\"n\">y.lo</span> <span class=\"bp\">==</span> <span class=\"n\">nan</span> <span class=\"bp\">||</span> <span class=\"n\">y.hi</span> <span class=\"bp\">==</span> <span class=\"n\">nan</span> <span class=\"k\">then</span> <span class=\"o\">⟨</span><span class=\"n\">nan</span><span class=\"o\">,</span><span class=\"n\">nan</span><span class=\"o\">⟩</span>\n  <span class=\"k\">else</span> <span class=\"n\">bif</span> <span class=\"n\">x.lo.n.isNeg</span> <span class=\"bp\">!=</span> <span class=\"n\">x.hi.n.isNeg</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">y.lo.n.isNeg</span> <span class=\"bp\">!=</span> <span class=\"n\">x.hi.n.isNeg</span> <span class=\"k\">then</span>  <span class=\"c1\">-- x,y have mixed sign</span>\n    <span class=\"o\">⟨</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">x.lo.mul</span> <span class=\"n\">y.hi</span> <span class=\"n\">u</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x.hi.mul</span> <span class=\"n\">y.lo</span> <span class=\"n\">u</span> <span class=\"n\">false</span><span class=\"o\">),</span>\n     <span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">x.lo.mul</span> <span class=\"n\">y.lo</span> <span class=\"n\">u</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x.hi.mul</span> <span class=\"n\">y.hi</span> <span class=\"n\">u</span> <span class=\"n\">true</span><span class=\"o\">)⟩</span>\n  <span class=\"k\">else</span> <span class=\"c1\">-- At least one of x,y has constant sign, so we can save multiplications</span>\n    <span class=\"k\">let</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span><span class=\"n\">b</span><span class=\"o\">,</span><span class=\"n\">c</span><span class=\"o\">,</span><span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">match</span> <span class=\"o\">(</span><span class=\"n\">x.lo.n.isNeg</span><span class=\"o\">,</span> <span class=\"n\">x.hi.n.isNeg</span><span class=\"o\">,</span> <span class=\"n\">y.lo.n.isNeg</span><span class=\"o\">,</span> <span class=\"n\">y.hi.n.isNeg</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n      <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">)</span>    <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x.lo</span><span class=\"o\">,</span> <span class=\"n\">x.hi</span><span class=\"o\">,</span> <span class=\"n\">y.lo</span><span class=\"o\">,</span> <span class=\"n\">y.hi</span><span class=\"o\">)</span>  <span class=\"c1\">-- 0 ≤ x, 0 ≤ y</span>\n      <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x.hi</span><span class=\"o\">,</span> <span class=\"n\">x.hi</span><span class=\"o\">,</span> <span class=\"n\">y.lo</span><span class=\"o\">,</span> <span class=\"n\">y.hi</span><span class=\"o\">)</span>  <span class=\"c1\">-- 0 ≤ x, 0 ∈ y</span>\n      <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span>     <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x.hi</span><span class=\"o\">,</span> <span class=\"n\">x.lo</span><span class=\"o\">,</span> <span class=\"n\">y.lo</span><span class=\"o\">,</span> <span class=\"n\">y.hi</span><span class=\"o\">)</span>  <span class=\"c1\">-- 0 ≤ x, y ≤ 0</span>\n      <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x.lo</span><span class=\"o\">,</span> <span class=\"n\">x.hi</span><span class=\"o\">,</span> <span class=\"n\">y.hi</span><span class=\"o\">,</span> <span class=\"n\">y.hi</span><span class=\"o\">)</span>  <span class=\"c1\">-- 0 ∈ x, 0 ≤ y</span>\n      <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">)</span>     <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x.hi</span><span class=\"o\">,</span> <span class=\"n\">x.lo</span><span class=\"o\">,</span> <span class=\"n\">y.lo</span><span class=\"o\">,</span> <span class=\"n\">y.lo</span><span class=\"o\">)</span>  <span class=\"c1\">-- 0 ∈ x, y ≤ 0 (0 ∈ y is impossible)</span>\n      <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">)</span>     <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x.lo</span><span class=\"o\">,</span> <span class=\"n\">x.hi</span><span class=\"o\">,</span> <span class=\"n\">y.hi</span><span class=\"o\">,</span> <span class=\"n\">y.lo</span><span class=\"o\">)</span>  <span class=\"c1\">-- x ≤ 0, 0 ≤ y</span>\n      <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">)</span>  <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x.lo</span><span class=\"o\">,</span> <span class=\"n\">x.lo</span><span class=\"o\">,</span> <span class=\"n\">y.hi</span><span class=\"o\">,</span> <span class=\"n\">y.lo</span><span class=\"o\">)</span>  <span class=\"c1\">-- x ≤ 0, 0 ∈ y</span>\n      <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span>      <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">x.hi</span><span class=\"o\">,</span> <span class=\"n\">x.lo</span><span class=\"o\">,</span> <span class=\"n\">y.hi</span><span class=\"o\">,</span> <span class=\"n\">y.lo</span><span class=\"o\">)</span>  <span class=\"c1\">-- x ≤ 0, y ≤ 0</span>\n    <span class=\"o\">⟨</span><span class=\"n\">a.mul</span> <span class=\"n\">c</span> <span class=\"n\">u</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">b.mul</span> <span class=\"n\">d</span> <span class=\"n\">u</span> <span class=\"n\">true</span><span class=\"o\">⟩</span>\n</code></pre></div>\n<p>I proved this code correct: it is a conservative approximation of real multiplication.  However, it also has a typo: the first line in the following should be the second:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"k\">else</span> <span class=\"n\">bif</span> <span class=\"n\">x.lo.n.isNeg</span> <span class=\"bp\">!=</span> <span class=\"n\">x.hi.n.isNeg</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">y.lo.n.isNeg</span> <span class=\"bp\">!=</span> <span class=\"n\">x.hi.n.isNeg</span> <span class=\"k\">then</span>  <span class=\"c1\">-- wrong: last x should be a y</span>\n  <span class=\"k\">else</span> <span class=\"n\">bif</span> <span class=\"n\">x.lo.n.isNeg</span> <span class=\"bp\">!=</span> <span class=\"n\">x.hi.n.isNeg</span> <span class=\"bp\">&amp;&amp;</span> <span class=\"n\">y.lo.n.isNeg</span> <span class=\"bp\">!=</span> <span class=\"n\">y.hi.n.isNeg</span> <span class=\"k\">then</span>  <span class=\"c1\">-- correct</span>\n</code></pre></div>\n<p>But it doesn't matter!  The two comparisons <code>y.lo.n.isNeg != x.hi.n.isNeg</code> and <code>y.lo.n.isNeg != y.hi.n.isNeg</code> are equal when it matters, since if <code>x</code> has mixed sign then <code>x.hi</code> must be positive.  And indeed my split-and-simplify proof didn't notice this typo, since the relevant case simplified to the same thing. :)</p>",
        "id": 411536624,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1704573241
    },
    {
        "content": "<p>if it's still correct, is it really a typo?</p>",
        "id": 411855018,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704768638
    }
]