[
    {
        "content": "<p>What I am looking to do is to normalise strings with <code>simp</code> like so:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"s2\">\"a\"</span> <span class=\"bp\">â‰ </span> <span class=\"s2\">\"b\"</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"c1\">-- doesn't solve goal</span>\n</code></pre></div>\n<p>I could use <code>decide</code> in this example, but where I am trying to use this that wouldn't work (since the <code>\"a\" = \"b\"</code> expression I would want to decide is nested within the goal that cannot be closed by <code>decide</code> itself).</p>",
        "id": 419203329,
        "sender_full_name": "Thea Brick",
        "timestamp": 1706778933
    },
    {
        "content": "<p>Does using <code>congr</code> zoom into the right expression, giving you a goal involving just the strings?</p>",
        "id": 419204983,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1706779521
    },
    {
        "content": "<p>Try <code>simp (config := {decide := true})</code></p>",
        "id": 419206539,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1706780030
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/.60norm_num.60.20but.20for.20strings/near/419206539\">said</a>:</p>\n<blockquote>\n<p>Try <code>simp (config := {decide := true})</code></p>\n</blockquote>\n<p>Thank you yes this was exactly what I was looking for!</p>",
        "id": 419206978,
        "sender_full_name": "Thea Brick",
        "timestamp": 1706780169
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"601254\">Thea Brick</span> has marked this topic as resolved.</p>",
        "id": 419206989,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706780173
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/.E2.9C.94.20.60norm_num.60.20but.20for.20strings/near/419206539\">said</a>:</p>\n<blockquote>\n<p>Try <code>simp (config := {decide := true})</code></p>\n</blockquote>\n<p>For my understanding, why is this not the default with <code>simp</code>? Is it <code>decide</code> being too slow in some cases?</p>",
        "id": 419217115,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1706783840
    },
    {
        "content": "<p>this got turned off recently, iirc</p>",
        "id": 419221978,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706785445
    },
    {
        "content": "<p>See <a href=\"https://github.com/leanprover/lean4/pull/2722\">lean4#2722</a>. The goal was to make <code>simp</code> speed more predictable. There were many cases (some listed in the PR) where using decide would fail to solve the goal after a very long time.</p>",
        "id": 419283360,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706804672
    },
    {
        "content": "<p>Yes. <code>decide</code> is great when it works, but sometimes terrible (slow) when it doesn't.</p>",
        "id": 419339662,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1706824299
    }
]