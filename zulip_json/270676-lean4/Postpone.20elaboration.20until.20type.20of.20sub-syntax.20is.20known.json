[
    {
        "content": "<p>I would like to write a custom elaboration of element access and I seem to need to postpone it until I know the type of the container.</p>\n<p>So if I have elaborator like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab</span> <span class=\"n\">Term</span> <span class=\"k\">in</span>\n<span class=\"n\">elab</span> <span class=\"o\">(</span><span class=\"n\">priority</span><span class=\"o\">:=</span><span class=\"n\">high</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"n\">noWs</span> <span class=\"s2\">\"[\"</span> <span class=\"n\">i</span><span class=\"o\">:</span><span class=\"n\">term</span> <span class=\"s2\">\"]\"</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">do</span>\n  <span class=\"c1\">-- the plan is to do something more complicated here</span>\n  <span class=\"n\">elabTerm</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">GetElem.getElem</span> <span class=\"bp\">$</span><span class=\"n\">x</span> <span class=\"bp\">$</span><span class=\"n\">i</span> <span class=\"n\">True.intro</span><span class=\"o\">))</span> <span class=\"n\">none</span>\n</code></pre></div>\n<p>can I postpone it until I know what is the expected type of <code>x</code>?  </p>\n<p>Based on this <a href=\"#narrow/stream/270676-lean4/topic/Getting.20expected.20type.20in.20TermElabM\">question</a> I know how to get expected type of the whole expression bu</p>",
        "id": 425419964,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1709856638
    },
    {
        "content": "<p>I have tried this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"bp\">←</span> <span class=\"n\">elabTerm</span> <span class=\"n\">x</span> <span class=\"n\">none</span>\n  <span class=\"k\">let</span> <span class=\"n\">X</span> <span class=\"bp\">←</span> <span class=\"n\">inferType</span> <span class=\"n\">x</span>\n  <span class=\"k\">if</span> <span class=\"n\">X.isMVar</span> <span class=\"k\">then</span>\n    <span class=\"n\">throwPostpone</span>\n</code></pre></div>\n<p>but it does not work as expected.</p>",
        "id": 425425695,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1709860123
    }
]