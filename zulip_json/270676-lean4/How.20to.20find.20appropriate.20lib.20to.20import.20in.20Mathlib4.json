[
    {
        "content": "<p>I am having a hard time getting used to Mathlib4, which is different structure from Mathlib3.<br>\nI have an error in the following code. \"unknown tactic\" at \"mul_add\".  <br>\nHow should I deal with problems that arise from not properly importing the lib?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.NumberTheory.ArithmeticFunction</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Complex.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.FieldTheory.IsAlgClosed.AlgebraicClosure</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Logic.Equiv.Defs</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Ring.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.PowerSeries.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Ring.Defs</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">mathd_algebra</span>\n  <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Equiv</span> <span class=\"n\">ℝ</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">σ.1</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"mi\">12</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">σ.1</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">σ.2</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">47</span> <span class=\"bp\">/</span> <span class=\"mi\">24</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span>\n  <span class=\"n\">mul_add</span>\n</code></pre></div>",
        "id": 431573063,
        "sender_full_name": "Jaeboum Kim",
        "timestamp": 1712337879
    },
    {
        "content": "<p>That looks like things are working fine. <code>mul_add</code> isn't a tactic so the error is expected.</p>",
        "id": 431576153,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712339109
    },
    {
        "content": "<p>Actually, I got \"unexpected identifier; expected '['\" errors at the last line. <br>\nWhile debugging, I found mul_add has an error. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">mathd_algebra</span>\n  <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">Equiv</span> <span class=\"n\">ℝ</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">σ.1</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"mi\">12</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">σ.1</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">σ.2</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">47</span> <span class=\"bp\">/</span> <span class=\"mi\">24</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span>\n  <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">h₀</span><span class=\"o\">,</span> <span class=\"n\">mul_add</span><span class=\"o\">,</span> <span class=\"n\">add_mul</span><span class=\"o\">,</span> <span class=\"n\">sub_add_cancel</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">add_comm</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">congr_arg</span> <span class=\"n\">σ.to_fun</span> <span class=\"n\">h₁</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h₀</span> <span class=\"n\">at</span> <span class=\"n\">this</span>\n</code></pre></div>",
        "id": 431576615,
        "sender_full_name": "Jaeboum Kim",
        "timestamp": 1712339307
    },
    {
        "content": "<p>It should be <code>rw [h₀] at this</code></p>",
        "id": 431577261,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712339551
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Yes, you're right! How can I find proper lib for import? ex) <code>symmetry</code>  (unknown tactic)</p>",
        "id": 431577907,
        "sender_full_name": "Jaeboum Kim",
        "timestamp": 1712339797
    },
    {
        "content": "<p>It's now called <code>symm</code></p>",
        "id": 431577939,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712339810
    },
    {
        "content": "<p>How can I find these changes easily...?</p>",
        "id": 431578181,
        "sender_full_name": "Jaeboum Kim",
        "timestamp": 1712339891
    },
    {
        "content": "<p>Ask here <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 431578340,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712339950
    },
    {
        "content": "<p>Isn't there some \"crash course to mathlib 4 for mathlib 3 users\" somewhere? Maybe on the community website or the mathlib GitHub repo?</p>",
        "id": 431582516,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712341659
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/wiki/Lean-4-survival-guide-for-Lean-3-users\">https://github.com/leanprover-community/mathlib4/wiki/Lean-4-survival-guide-for-Lean-3-users</a></p>",
        "id": 431582593,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712341686
    }
]