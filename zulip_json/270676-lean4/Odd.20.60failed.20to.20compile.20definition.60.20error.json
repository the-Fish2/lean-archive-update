[
    {
        "content": "<p>I'm not sure what's going on here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Complex.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.SpecialFunctions.Pow.Real</span>  <span class=\"c1\">-- Removing this import fixes things</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">Approx</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">outParam</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">ApproxAddGroup</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">outParam</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">AddGroup</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"kd\">extends</span>\n  <span class=\"n\">Neg</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">Approx</span> <span class=\"n\">A</span> <span class=\"n\">R</span> <span class=\"n\">where</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">Box</span> <span class=\"n\">where</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Approx</span> <span class=\"n\">Box</span> <span class=\"n\">ℂ</span> <span class=\"n\">where</span>\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Neg</span> <span class=\"n\">Box</span> <span class=\"n\">where</span> <span class=\"n\">neg</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"sd\">/-- Bails with `consider marking it as noncomputable` if we do the `...Pow.Real` import -/</span>\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">ApproxAddGroup</span> <span class=\"n\">Box</span> <span class=\"n\">ℂ</span> <span class=\"n\">where</span>\n</code></pre></div>\n<p>What's noncomputable about <code>ApproxAddGroup</code>, given that it declares no code?  It also seems odd that removing the <code>Mathlib.Analysis.SpecialFunctions.Pow.Real</code> import fixes things.</p>",
        "id": 416656095,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1705615034
    },
    {
        "content": "<p>This isn't blocking me because I can in fact just mark the instances <code>noncomputable</code>, but it was surprising.</p>",
        "id": 416656603,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1705615260
    },
    {
        "content": "<p>Yeah I agree this is surprising / annoying, but it does make sense, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Complex.instNormedAddCommGroupComplex#doc\">docs#Complex.instNormedAddCommGroupComplex</a> is noncomputable and that is on the instance path that is used to infer <code>[AddGroup Complex]</code> as long as <code>Mathlib.Analysis.Complex.Basic</code> is imported (transitively). So even though the structure is projected to a bunch of things that are computable the viral <code>noncomputable</code> marker tricks lean. Maybe we need a <code>computable!</code> keyword or something for such cases. <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Complex.Complex.addGroupWithOne#doc\">docs#Complex.Complex.addGroupWithOne</a> is what is used without the import</p>",
        "id": 416781162,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1705672012
    },
    {
        "content": "<p>Ah, that makes sense.</p>",
        "id": 416788916,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1705674477
    }
]