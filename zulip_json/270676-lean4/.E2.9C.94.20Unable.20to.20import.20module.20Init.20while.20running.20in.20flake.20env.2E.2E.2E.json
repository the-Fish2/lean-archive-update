[
    {
        "content": "<p>Consider the program</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">main</span><span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"k\">do</span>\n    <span class=\"n\">Lean.initSearchPath</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">Lean.findSysroot</span><span class=\"o\">)</span>\n    <span class=\"k\">let</span> <span class=\"n\">env</span><span class=\"o\">:</span> <span class=\"n\">Environment</span> <span class=\"bp\">←</span> <span class=\"n\">importModules</span>\n    <span class=\"o\">(</span><span class=\"n\">imports</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"Init\"</span><span class=\"o\">]</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">str</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">{</span> <span class=\"n\">module</span> <span class=\"o\">:=</span> <span class=\"n\">str.toName</span><span class=\"o\">,</span> <span class=\"n\">runtimeOnly</span> <span class=\"o\">:=</span> <span class=\"n\">false</span> <span class=\"o\">}))</span>\n    <span class=\"o\">(</span><span class=\"n\">opts</span> <span class=\"o\">:=</span> <span class=\"o\">{})</span>\n    <span class=\"o\">(</span><span class=\"n\">trustLevel</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"n\">return</span> <span class=\"o\">()</span>\n</code></pre></div>\n<p>If I run this in a nix dev shell with dependency <code>leanPkgs.lean</code>, I get</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">Init'</span>\n</code></pre></div>\n<p>Without the dev shell it could run without problems. Is there anything else that must be present in the environment for this to work?</p>",
        "id": 430005106,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1711607763
    },
    {
        "content": "<p>If I were to leave <code>imports</code> as <code>#[]</code>, then many symbols such as <code>Or</code> or <code>Nat.add_comm</code> would not exist in the symbol table for <code>env</code>, so I suspect some importing here is still required</p>",
        "id": 430005325,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1711607952
    },
    {
        "content": "<p>Using nix for development isn’t really maintained or supported. I suggest you get <code>elan</code> (from nixpkgs, if you want, that’s what I do), but leave setting up the rest of the environment to <code>elan</code>.</p>",
        "id": 430040335,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1711623120
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> <a href=\"#narrow/stream/270676-lean4/topic/Unable.20to.20import.20module.20Init.20while.20running.20in.20flake.20environm/near/430040335\">said</a>:</p>\n<blockquote>\n<p>Using nix for development isn’t really maintained or supported. I suggest you get <code>elan</code> (from nixpkgs, if you want, that’s what I do), but leave setting up the rest of the environment to <code>elan</code>.</p>\n</blockquote>\n<p>I found that you could just get elan by adding <code>leanPkgs.lean-all</code> to the list of dependencies, and this made it possible to setup this environment.</p>",
        "id": 430147604,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1711653462
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"599027\">Leni Aniva</span> has marked this topic as resolved.</p>",
        "id": 430147634,
        "sender_full_name": "Notification Bot",
        "timestamp": 1711653478
    }
]