[
    {
        "content": "<p>Ideally the tactic state doesn't change too much while typing.<br>\nThis is a complaint I have heard more than once from beginners: \"The goal state is jumping around too much\". You can pause the goal state, but this is a bit of an inconvenient workaround.</p>\n<p>Examples with current behavior:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- in each example place the pointer right before the `--`</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"bp\">∧</span> <span class=\"n\">False</span> <span class=\"bp\">∧</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">false_and</span><span class=\"o\">]</span>\n  <span class=\"n\">ex</span> <span class=\"c1\">-- &lt;no tactic state&gt;, errors: unknown tactic / unsolved goals</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"bp\">∧</span> <span class=\"n\">False</span> <span class=\"bp\">∧</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">false_and</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"c1\">-- Tactic state: No goals / error: unexpected token</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"bp\">∧</span> <span class=\"n\">False</span> <span class=\"bp\">∧</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">false_and</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">true</span> <span class=\"c1\">-- Shows the correct tactic state / error: type mismatch</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"bp\">∧</span> <span class=\"n\">False</span> <span class=\"bp\">∧</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">false_and</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">true_</span> <span class=\"c1\">-- Tactic state: No goals / error: unknown identifier</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"bp\">∧</span> <span class=\"n\">False</span> <span class=\"bp\">∧</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">false_and</span><span class=\"o\">]</span>\n  <span class=\"n\">apply</span> <span class=\"n\">true_</span> <span class=\"c1\">-- Shows the correct tactic state / error: unknown identifier</span>\n</code></pre></div>\n<p><strong>Desired behavior</strong>: All examples should show the tactic state that is shown in examples 3 and 5.</p>\n<p>If you agree, please upvote <a href=\"https://github.com/leanprover/lean4/pull/4181\">lean4#4181</a>.</p>",
        "id": 438885872,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1715807283
    }
]