[
    {
        "content": "<p>The following code translated from my Agda code runs really slow on an 8 cases distinction, and maximizes my 16GB memory . My goal was to speedup the verification of a 2^12 cases distinction (Agda checks this in about 40min). Now it seems hard to achieve. Any methods that I can use to speedup my Lean4 code?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- import Nat</span>\n<span class=\"kd\">universe</span> <span class=\"n\">u</span>\n<span class=\"kn\">namespace</span> <span class=\"n\">VerCCZ</span>\n<span class=\"c1\">--abbrev ℕ := Nat</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"ℕ\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Nat</span>\n\n<span class=\"c1\">-- Basic gates. They act on the first few qubits of an n-qubit system.</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">Gate</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- one qubit gate.</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Omega</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Meas</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Gate</span>\n  <span class=\"c1\">-- two qubit gate.</span>\n  <span class=\"bp\">|</span> <span class=\"n\">CX</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">XC</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span> <span class=\"c1\">-- Controlled X gate with target on 0th qubit and control on 1st qubit.</span>\n  <span class=\"bp\">|</span> <span class=\"n\">CZ</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">CS</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Swap</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Gate</span> <span class=\"c1\">-- Swap gate on j-th and (j+1)-th qubits.</span>\n  <span class=\"c1\">-- three qubit gate.</span>\n  <span class=\"bp\">|</span> <span class=\"n\">CCZ</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"n\">CCX</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span> <span class=\"c1\">-- Toffoli gate.</span>\n\n<span class=\"c1\">-- Extended gates. They act on any qubits of an n-qubit system.</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">GateExt</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- one qubit gate.</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Omega</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Meas</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"c1\">-- two qubit gate.</span>\n  <span class=\"bp\">|</span> <span class=\"n\">CX</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">XC</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">CZ</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">CS</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Swap</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"c1\">-- three qubit gate.</span>\n  <span class=\"bp\">|</span> <span class=\"n\">CCZ</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span>\n  <span class=\"bp\">|</span> <span class=\"n\">CCX</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">GateExt</span> <span class=\"c1\">-- Toffoli gate.</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">Ket</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Type</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Ket1</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"bp\">-&gt;</span> <span class=\"o\">(</span><span class=\"n\">Ket</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">KetS</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Ket</span> <span class=\"mi\">1</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Ket</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"c1\">--  deriving Repr</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Ket</span>\n\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K0\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Ket1</span> <span class=\"n\">false</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K1\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Ket1</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K00\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">K0</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K01\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">K1</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K10\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">K0</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K11\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">K1</span>\n\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">K00</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K001\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">K01</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K010\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">K10</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K011\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">K11</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K100\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">K00</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K101\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">K01</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K110\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">K10</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K111\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">K11</span>\n\n\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K000000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">Ket1</span> <span class=\"n\">false</span><span class=\"o\">)))))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K000011\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">Ket1</span> <span class=\"n\">true</span><span class=\"o\">)))))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K001100\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">Ket1</span> <span class=\"n\">false</span><span class=\"o\">)))))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K001111\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">Ket1</span> <span class=\"n\">true</span><span class=\"o\">)))))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K110000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">Ket1</span> <span class=\"n\">false</span><span class=\"o\">)))))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K110011\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">Ket1</span> <span class=\"n\">true</span><span class=\"o\">)))))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K111100\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">Ket1</span> <span class=\"n\">false</span><span class=\"o\">)))))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K111111\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">Ket1</span> <span class=\"n\">true</span><span class=\"o\">)))))</span>\n\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K000000000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">K000000</span><span class=\"o\">))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K001000000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">K000000</span><span class=\"o\">))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K010000000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">K000000</span><span class=\"o\">))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K011000000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">K000000</span><span class=\"o\">))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K100000000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">K000000</span><span class=\"o\">))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K101000000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">K000000</span><span class=\"o\">))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K110000000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">K000000</span><span class=\"o\">))</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"K111000000\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">K000000</span><span class=\"o\">))</span>\n\n<span class=\"c1\">-- We only use omega ^ k, where k = 0,1,...,7.</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">Scalar</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">omega</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Scalar</span>\n<span class=\"kn\">open</span> <span class=\"n\">Scalar</span>\n\n<span class=\"n\">deriving</span> <span class=\"kd\">instance</span> <span class=\"n\">BEq</span><span class=\"o\">,</span> <span class=\"n\">Hashable</span><span class=\"o\">,</span> <span class=\"n\">Repr</span> <span class=\"n\">for</span> <span class=\"n\">Scalar</span>\n<span class=\"n\">deriving</span> <span class=\"kd\">instance</span> <span class=\"n\">BEq</span><span class=\"o\">,</span> <span class=\"n\">Hashable</span><span class=\"o\">,</span> <span class=\"n\">Repr</span> <span class=\"n\">for</span> <span class=\"n\">Gate</span>\n<span class=\"n\">deriving</span> <span class=\"kd\">instance</span> <span class=\"n\">BEq</span><span class=\"o\">,</span> <span class=\"n\">Hashable</span><span class=\"o\">,</span> <span class=\"n\">Repr</span> <span class=\"n\">for</span> <span class=\"n\">GateExt</span>\n<span class=\"n\">deriving</span> <span class=\"kd\">instance</span> <span class=\"n\">BEq</span><span class=\"o\">,</span> <span class=\"n\">Hashable</span><span class=\"o\">,</span> <span class=\"n\">Repr</span> <span class=\"n\">for</span> <span class=\"n\">Ket</span>\n\n\n<span class=\"c1\">-- Scalar multiplication.</span>\n<span class=\"kd\">def</span> <span class=\"n\">smul</span> <span class=\"o\">:</span> <span class=\"n\">Scalar</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Scalar</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Scalar</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">omega</span> <span class=\"n\">a</span><span class=\"o\">),</span>  <span class=\"o\">(</span><span class=\"n\">omega</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">omega</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">%</span> <span class=\"mi\">8</span><span class=\"o\">)</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Mul</span> <span class=\"n\">Scalar</span> <span class=\"n\">where</span>\n  <span class=\"n\">mul</span> <span class=\"o\">:=</span> <span class=\"n\">smul</span>\n\n\n<span class=\"kd\">notation</span> <span class=\"s2\">\"P1\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">omega</span> <span class=\"mi\">0</span> <span class=\"c1\">-- 1</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"Pw\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">omega</span> <span class=\"mi\">1</span> <span class=\"c1\">-- omega</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"M1\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">omega</span> <span class=\"mi\">4</span> <span class=\"c1\">-- -1</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"Mw\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">omega</span> <span class=\"mi\">5</span> <span class=\"c1\">-- -omega</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"Pi\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">omega</span> <span class=\"mi\">2</span> <span class=\"c1\">-- i</span>\n<span class=\"kd\">notation</span> <span class=\"s2\">\"Mi\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">omega</span> <span class=\"mi\">6</span> <span class=\"c1\">-- -i</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Ket</span>\n<span class=\"kn\">open</span> <span class=\"n\">List</span>\n<span class=\"kn\">open</span> <span class=\"n\">Gate</span>\n\n<span class=\"c1\">-- act works for n &gt;= 4. k' in the 1-qubit gate case is of</span>\n<span class=\"c1\">-- (n-1)-qubit, and 2-qubit gate case, (n-2)-qubit, and 3-qubit gate</span>\n<span class=\"c1\">-- case, (n-3)-qubit. k' cannot be 0-qubit.</span>\n<span class=\"kd\">def</span> <span class=\"n\">act</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">I</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Omega</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">Pw</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Omega</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">Pw</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Z</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">Z</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">M1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"k\">Pi</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">Pw</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">M1</span> <span class=\"o\">,</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Meas</span> <span class=\"n\">false</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Meas</span> <span class=\"n\">true</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CZ</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CZ</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CZ</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CZ</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">M1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CS</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CS</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CS</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CS</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"k\">Pi</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CX</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CX</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CX</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">CX</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">XC</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">XC</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">XC</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">XC</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Swap</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"n\">K00</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K00</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Swap</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"n\">K01</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K10</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Swap</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"n\">K10</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K01</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Swap</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"n\">K11</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K11</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Swap</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Swap</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Swap</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Swap</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">Swap</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">j</span><span class=\"o\">)),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">k1</span> <span class=\"n\">kj</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">p</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">let</span> <span class=\"o\">(</span><span class=\"n\">p1</span> <span class=\"o\">,</span> <span class=\"n\">p2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">p</span>\n      <span class=\"o\">(</span><span class=\"n\">p1</span> <span class=\"o\">,</span> <span class=\"n\">KetS</span> <span class=\"n\">k1</span> <span class=\"n\">p2</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">act</span> <span class=\"o\">(</span><span class=\"n\">Swap</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"n\">kj</span><span class=\"o\">)</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCZ</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCZ</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCZ</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCZ</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCZ</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCZ</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCZ</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCZ</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">M1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCX</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCX</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCX</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCX</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCX</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCX</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCX</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">CCX</span><span class=\"o\">),</span> <span class=\"n\">k</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">K0</span> <span class=\"n\">k'</span><span class=\"o\">)))</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n    <span class=\"bp\">|</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">scale</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">s1</span> <span class=\"o\">:</span> <span class=\"n\">Scalar</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s2k</span> <span class=\"o\">:</span> <span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">s1</span><span class=\"o\">,</span> <span class=\"n\">s2k</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">s1</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">s2</span> <span class=\"o\">,</span> <span class=\"n\">ket</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">s1</span> <span class=\"bp\">*</span> <span class=\"n\">s2</span> <span class=\"o\">,</span> <span class=\"n\">ket</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">actsigned</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">sk</span> <span class=\"o\">:</span> <span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">sk</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">ket</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">scale</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">act</span> <span class=\"n\">g</span> <span class=\"n\">ket</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">actlist</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Gate</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">l</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">ls</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">join</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">actsigned</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">ls</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">actcir</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Gate</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ls</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">ls</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"o\">[],</span> <span class=\"n\">lsk</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">lsk</span>\n    <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">::</span> <span class=\"n\">t</span><span class=\"o\">),</span> <span class=\"n\">lsk</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">actcir</span> <span class=\"n\">t</span> <span class=\"o\">(</span><span class=\"n\">actlist</span> <span class=\"n\">h</span> <span class=\"n\">lsk</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 413016965,
        "sender_full_name": "Xiaoning Bian",
        "timestamp": 1705346220
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Nat</span>\n<span class=\"c1\">-- generate a list of Swap gate, which equals Swap j l.</span>\n<span class=\"kd\">def</span> <span class=\"n\">gswap</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">List</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Swap</span> <span class=\"mi\">0</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Swap</span> <span class=\"n\">j</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">Swap</span> <span class=\"n\">j</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Swap</span> <span class=\"mi\">0</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">j</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">Swap</span> <span class=\"n\">j</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"n\">j</span> <span class=\"mi\">0</span> <span class=\"bp\">++</span> <span class=\"n\">Swap</span> <span class=\"n\">j</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">j</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">if</span> <span class=\"n\">Nat.blt</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"n\">l</span> <span class=\"k\">then</span> <span class=\"n\">Swap</span> <span class=\"n\">l</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">Swap</span> <span class=\"n\">l</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span>\n    <span class=\"k\">if</span> <span class=\"n\">Nat.beq</span> <span class=\"n\">l</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"k\">then</span> <span class=\"n\">Swap</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span>\n    <span class=\"k\">if</span> <span class=\"n\">Nat.beq</span> <span class=\"n\">j</span> <span class=\"n\">l</span> <span class=\"k\">then</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"n\">Swap</span> <span class=\"n\">j</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"n\">j</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">Swap</span> <span class=\"n\">j</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n\n<span class=\"c1\">-- Desugar GateExt to Gate.</span>\n<span class=\"kd\">def</span> <span class=\"n\">desugar</span> <span class=\"o\">:</span> <span class=\"n\">GateExt</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">List</span> <span class=\"n\">Gate</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.Omega</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">Omega</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.I</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">I</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.Z</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">Z</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.S</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">S</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.T</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">T</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.H</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">H</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.X</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">X</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.Meas</span> <span class=\"n\">b</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">Meas</span> <span class=\"n\">b</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.CX</span> <span class=\"n\">j</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">CX</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.XC</span> <span class=\"n\">j</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">XC</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.CZ</span> <span class=\"n\">j</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">CZ</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.CS</span> <span class=\"n\">j</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">CS</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.Swap</span> <span class=\"n\">j</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"n\">j</span> <span class=\"n\">l</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.CCZ</span> <span class=\"n\">j</span> <span class=\"n\">l</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">2</span> <span class=\"n\">m</span> <span class=\"bp\">++</span> <span class=\"n\">CCZ</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">2</span> <span class=\"n\">m</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">GateExt.CCX</span> <span class=\"n\">j</span> <span class=\"n\">l</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">2</span> <span class=\"n\">m</span> <span class=\"bp\">++</span> <span class=\"n\">CCX</span> <span class=\"o\">::</span> <span class=\"n\">gswap</span> <span class=\"mi\">2</span> <span class=\"n\">m</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">1</span> <span class=\"n\">l</span> <span class=\"bp\">++</span> <span class=\"n\">gswap</span> <span class=\"mi\">0</span> <span class=\"n\">j</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">actext</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">GateExt</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">actcir</span> <span class=\"o\">(</span><span class=\"n\">join</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"n\">desugar</span> <span class=\"n\">e</span><span class=\"o\">))</span> <span class=\"n\">k</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">enc</span> <span class=\"o\">(</span><span class=\"n\">a0</span> <span class=\"n\">b0</span> <span class=\"n\">a1</span> <span class=\"n\">b1</span> <span class=\"n\">a2</span> <span class=\"n\">b2</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">GateExt</span> <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">b0</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.Z</span> <span class=\"mi\">0</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">a0</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.X</span> <span class=\"mi\">0</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">b1</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.Z</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">a1</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.X</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">b2</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.Z</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">a2</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.X</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">copy</span> <span class=\"o\">(</span><span class=\"n\">c0</span> <span class=\"n\">c1</span> <span class=\"n\">c2</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">GateExt</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">GateExt.H</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.CX</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.H</span> <span class=\"mi\">5</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.CX</span> <span class=\"mi\">5</span> <span class=\"mi\">6</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.H</span> <span class=\"mi\">7</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.CX</span> <span class=\"mi\">7</span> <span class=\"mi\">8</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.XC</span> <span class=\"mi\">0</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.XC</span> <span class=\"mi\">1</span> <span class=\"mi\">5</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.XC</span> <span class=\"mi\">2</span> <span class=\"mi\">7</span> <span class=\"o\">::</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n  <span class=\"o\">(</span><span class=\"n\">GateExt.Meas</span> <span class=\"n\">c0</span> <span class=\"mi\">0</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.Meas</span> <span class=\"n\">c1</span> <span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.Meas</span> <span class=\"n\">c2</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n  <span class=\"o\">(</span><span class=\"n\">GateExt.CX</span> <span class=\"mi\">0</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.CX</span> <span class=\"mi\">0</span> <span class=\"mi\">4</span>  <span class=\"o\">::</span> <span class=\"n\">GateExt.CX</span> <span class=\"mi\">1</span> <span class=\"mi\">5</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.CX</span> <span class=\"mi\">1</span> <span class=\"mi\">6</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.CX</span> <span class=\"mi\">2</span> <span class=\"mi\">7</span> <span class=\"o\">::</span> <span class=\"n\">GateExt.CX</span> <span class=\"mi\">2</span> <span class=\"mi\">8</span> <span class=\"o\">::</span> <span class=\"o\">[])</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">dec</span> <span class=\"o\">(</span><span class=\"n\">a0</span> <span class=\"n\">b0</span> <span class=\"n\">a1</span> <span class=\"n\">b1</span> <span class=\"n\">a2</span> <span class=\"n\">b2</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">GateExt</span> <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">a0</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.X</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">b0</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.Z</span> <span class=\"mi\">3</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">a1</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.X</span> <span class=\"mi\">5</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">b1</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.Z</span> <span class=\"mi\">5</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">a2</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.X</span> <span class=\"mi\">7</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span> <span class=\"bp\">++</span>\n    <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">b2</span> <span class=\"k\">then</span> <span class=\"n\">GateExt.Z</span> <span class=\"mi\">7</span> <span class=\"o\">::</span> <span class=\"o\">[]</span> <span class=\"k\">else</span> <span class=\"o\">[])</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">myxor</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Bool</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Bool</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">false</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">false</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">true</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">true</span>\n  <span class=\"bp\">|</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">false</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">true</span>\n  <span class=\"bp\">|</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">true</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">false</span>\n\n<span class=\"kd\">infixl</span><span class=\"o\">:</span><span class=\"mi\">55</span> <span class=\"s2\">\" ^^ \"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">myxor</span>\n\n<span class=\"c1\">-- 2^12 = 4096 circuits for QHE for CCZ gate.</span>\n<span class=\"c1\">-- def cczcondcir (a0 b0 c0 k0 a1 b1 c1 k1 a2 b2 c2 k2 : Bool) : List GateExt := sorry</span>\n\n<span class=\"c1\">-- Discard qubit 0,1,2,4,6,8.</span>\n<span class=\"kd\">def</span> <span class=\"n\">discard</span> <span class=\"o\">:</span> <span class=\"n\">Ket</span> <span class=\"mi\">9</span> <span class=\"bp\">→</span> <span class=\"n\">Ket</span> <span class=\"mi\">3</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b2</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b3</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b4</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b5</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b6</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b7</span> <span class=\"n\">b8</span><span class=\"o\">))))))))</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">KetS</span> <span class=\"n\">b3</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b5</span> <span class=\"o\">(</span><span class=\"n\">b7</span><span class=\"o\">))</span>\n\n<span class=\"c1\">-- Discard qubit 0,1,2.</span>\n<span class=\"kd\">def</span> <span class=\"n\">discard2</span> <span class=\"o\">:</span> <span class=\"n\">Ket</span> <span class=\"mi\">9</span> <span class=\"bp\">→</span> <span class=\"n\">Ket</span> <span class=\"mi\">6</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b0</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b1</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b2</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b3</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b4</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b5</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b6</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b7</span> <span class=\"n\">b8</span><span class=\"o\">))))))))</span> <span class=\"bp\">=&gt;</span><span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b3</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b4</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b5</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b6</span> <span class=\"o\">(</span><span class=\"n\">KetS</span> <span class=\"n\">b7</span> <span class=\"n\">b8</span><span class=\"o\">)))))</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">discard_signed</span> <span class=\"o\">:</span> <span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"mi\">9</span> <span class=\"bp\">→</span> <span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"mi\">3</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">sign</span> <span class=\"o\">,</span> <span class=\"n\">ket9</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">sign</span> <span class=\"o\">,</span> <span class=\"n\">discard</span> <span class=\"n\">ket9</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">discard_signed2</span> <span class=\"o\">:</span> <span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"mi\">9</span> <span class=\"bp\">→</span> <span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"mi\">6</span>\n <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">sign</span> <span class=\"o\">,</span> <span class=\"n\">ket9</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">sign</span> <span class=\"o\">,</span> <span class=\"n\">discard2</span> <span class=\"n\">ket9</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- Definition of \"implementing a scaled CCZ gate\". Ignoring the</span>\n<span class=\"c1\">-- measured qubit and ignoring the four state |0&gt; qubits for Bell</span>\n<span class=\"c1\">-- state, implementing a CCZ gate on the first two qubits means:</span>\n\n<span class=\"c1\">-- CCZ |111 000000&gt; to -|111&gt;</span>\n<span class=\"c1\">-- CCZ |abc 000000&gt; to  |abc&gt;  when not all a b c are 1.</span>\n\n<span class=\"c1\">-- The scaled version for some scalar s is:</span>\n\n<span class=\"c1\">-- CCZ |111 000000&gt; to - s |111&gt;</span>\n<span class=\"c1\">-- CCZ |abc 000000&gt; to   s |abc&gt;  when not all a b c are 1.</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">_maps_to_</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">GateExt</span> <span class=\"bp\">→</span> <span class=\"n\">Ket</span> <span class=\"mi\">9</span> <span class=\"bp\">→</span> <span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n  <span class=\"bp\">|</span> <span class=\"n\">cir</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">map</span> <span class=\"n\">discard_signed</span> <span class=\"o\">(</span><span class=\"n\">actext</span> <span class=\"n\">cir</span> <span class=\"o\">((</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]))</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">_maps2_to_</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">GateExt</span> <span class=\"bp\">→</span> <span class=\"n\">Ket</span> <span class=\"mi\">9</span> <span class=\"bp\">→</span> <span class=\"n\">Scalar</span> <span class=\"bp\">×</span> <span class=\"n\">Ket</span> <span class=\"mi\">6</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n  <span class=\"bp\">|</span> <span class=\"n\">cir</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">map</span> <span class=\"n\">discard_signed2</span> <span class=\"o\">(</span><span class=\"n\">actext</span> <span class=\"n\">cir</span> <span class=\"o\">((</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"o\">[]))</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">::</span> <span class=\"o\">[]</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">_implements_scaled_CCZ</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">GateExt</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n  <span class=\"bp\">|</span> <span class=\"n\">cir</span> <span class=\"bp\">=&gt;</span>\n  <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Scalar</span><span class=\"o\">),</span>\n  <span class=\"n\">_maps_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K000000000</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">,</span> <span class=\"n\">K000</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n  <span class=\"n\">_maps_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K001000000</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">,</span> <span class=\"n\">K001</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n  <span class=\"n\">_maps_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K010000000</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">,</span> <span class=\"n\">K010</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n  <span class=\"n\">_maps_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K011000000</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">,</span> <span class=\"n\">K011</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n  <span class=\"n\">_maps_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K100000000</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">,</span> <span class=\"n\">K100</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n  <span class=\"n\">_maps_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K101000000</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">,</span> <span class=\"n\">K101</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n  <span class=\"n\">_maps_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K110000000</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">,</span> <span class=\"n\">K110</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n  <span class=\"n\">_maps_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K111000000</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"n\">M1</span> <span class=\"o\">,</span> <span class=\"n\">K111</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">_implements_copy</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">GateExt</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n  <span class=\"bp\">|</span> <span class=\"n\">cir</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">_maps2_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K000000000</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K000000</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n    <span class=\"n\">_maps2_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K001000000</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K000011</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n    <span class=\"n\">_maps2_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K010000000</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K001100</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n    <span class=\"n\">_maps2_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K011000000</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K001111</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n    <span class=\"n\">_maps2_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K100000000</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K110000</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n    <span class=\"n\">_maps2_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K101000000</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K110011</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n    <span class=\"n\">_maps2_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K110000000</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K111100</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n    <span class=\"n\">_maps2_to_</span> <span class=\"n\">cir</span> <span class=\"n\">K111000000</span> <span class=\"o\">(</span><span class=\"n\">P1</span> <span class=\"o\">,</span> <span class=\"n\">K111111</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Eq</span>\n<span class=\"kd\">infixr</span><span class=\"o\">:</span><span class=\"mi\">55</span> <span class=\"s2\">\" ,, \"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">And.intro</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">lemma1</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n  <span class=\"bp\">|</span> <span class=\"n\">true</span> <span class=\"bp\">=&gt;</span>  <span class=\"k\">show</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">show</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">maxRecDepth</span> <span class=\"mi\">12000</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">800000</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">lemma_copy</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">c0</span> <span class=\"n\">c1</span> <span class=\"n\">c2</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">_implements_copy</span> <span class=\"o\">(</span><span class=\"n\">copy</span> <span class=\"n\">c0</span> <span class=\"n\">c1</span> <span class=\"n\">c2</span><span class=\"o\">))</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">false</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">show</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">true</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">show</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">false</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">show</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">true</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">show</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">false</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">show</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">,</span> <span class=\"n\">true</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">show</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">false</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">show</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span>\n  <span class=\"bp\">|</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">true</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">show</span> <span class=\"n\">_</span> <span class=\"k\">from</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span> <span class=\"o\">,,</span> <span class=\"n\">refl</span> <span class=\"n\">_</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">lemma_copy</span>\n\n<span class=\"c\">/-</span>\n<span class=\"cm\">-- Theorem: QHE scheme for CCZ works, i.e., for all skey a0,b0,a1,b1,a2,b2</span>\n<span class=\"cm\">-- and for all measurement result c0,k0,c1,k1,c2,k2 the circuit always</span>\n<span class=\"cm\">-- implements a scaled CCZ gate.</span>\n<span class=\"cm\">Theorem QHE_CCZ : ∀ (a0 b0 c0 k0 a1 b1 c1 k1 a2 b2 c2 k2 : Bool) →  _implements-scaled-CCZ (cczcond-cir a0 b0 c0 k0 a1 b1 c1 k1 a2 b2 c2 k2)</span>\n<span class=\"cm\">  | false, false, false, false, false, false, false, false, false, false, false, false =&gt; show _ from Exists.intro P1 (refl , refl , refl , refl , refl , refl , refl , refl</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 413017001,
        "sender_full_name": "Xiaoning Bian",
        "timestamp": 1705346240
    },
    {
        "content": "<p>I haven't looked at all at your code, but is it possible to encode the theorem efficiently in SAT? We've been working on ways to send off proof goals to SAT solvers and get verified proofs back, as well as transport those SAT results to other problems encoded in SAT. Might work for your use case?</p>",
        "id": 413076662,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1705378057
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"407274\">James Gallicchio</span> <a href=\"#narrow/stream/270676-lean4/topic/Efficiency.20issue.3A.20small.20computation.20takes.2010min.20and.20max.20mem/near/413076662\">said</a>:</p>\n<blockquote>\n<p>I haven't looked at all at your code, but is it possible to encode the theorem efficiently in SAT? We've been working on ways to send off proof goals to SAT solvers and get verified proofs back, as well as transport those SAT results to other problems encoded in SAT. Might work for your use case?</p>\n</blockquote>\n<p>I don't know, but now I cannot see how SAT helps.  The equalities I want to prove is easy enough: 8 equalities of the form 'a = b0', proved by simplifying 'a' and the simplification (actext in my code) is easy and short. In Agda, it takes about 1min and small memory. I don't want that SAT gives me a clever solution, I just want Lean4 to do the computation and check if the result is the given 'b0' .</p>",
        "id": 413170151,
        "sender_full_name": "Xiaoning Bian",
        "timestamp": 1705416535
    }
]