[
    {
        "content": "<p>\"deriving instance Repr for T1, T2\" doesn't work for T2, though it typechecks. E.g.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">abbrev</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">Nat</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">Ket</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Type</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">Ket1</span> <span class=\"o\">:</span> <span class=\"n\">Bool</span> <span class=\"bp\">-&gt;</span> <span class=\"o\">(</span><span class=\"n\">Ket</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"bp\">|</span> <span class=\"n\">KetS</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Ket</span> <span class=\"mi\">1</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Ket</span> <span class=\"n\">n</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Ket</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"kn\">open</span> <span class=\"n\">Ket</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">Scalar</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">omega</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Scalar</span>\n  <span class=\"c1\">-- deriving Repr -- This works.</span>\n<span class=\"kn\">open</span> <span class=\"n\">Scalar</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">Scalar2</span> <span class=\"n\">where</span>\n  <span class=\"bp\">|</span> <span class=\"n\">omega2</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Scalar2</span>\n<span class=\"kn\">open</span> <span class=\"n\">Scalar2</span>\n\n<span class=\"c1\">-- This works.</span>\n<span class=\"c1\">--deriving instance Repr for Ket</span>\n<span class=\"c1\">--deriving instance Repr for Scalar</span>\n<span class=\"c1\">--deriving instance Repr for Scalar2</span>\n\n<span class=\"c1\">-- This won't work for Scalar.</span>\n<span class=\"n\">deriving</span> <span class=\"kd\">instance</span> <span class=\"n\">Repr</span> <span class=\"n\">for</span> <span class=\"n\">Ket</span><span class=\"o\">,</span> <span class=\"n\">Scalar</span>\n\n<span class=\"c1\">-- This won't work for Scalar either.</span>\n<span class=\"n\">deriving</span> <span class=\"kd\">instance</span> <span class=\"n\">Repr</span> <span class=\"n\">for</span> <span class=\"n\">Scalar2</span><span class=\"o\">,</span> <span class=\"n\">Scalar</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">Ket1</span> <span class=\"n\">true</span>\n<span class=\"k\">#eval</span> <span class=\"n\">omega</span> <span class=\"mi\">1</span>\n<span class=\"k\">#eval</span> <span class=\"n\">omega2</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">#eval</span> <span class=\"o\">(</span><span class=\"n\">Ket1</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">omega</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"k\">#eval</span> <span class=\"o\">(</span><span class=\"n\">omega2</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">omega</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"k\">#eval</span> <span class=\"o\">(</span><span class=\"n\">Ket1</span> <span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">omega2</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 412906049,
        "sender_full_name": "Xiaoning Bian",
        "timestamp": 1705307006
    },
    {
        "content": "<p>The fix  has been merged (<a href=\"https://github.com/leanprover/lean4/pull/3058\">lean4#3058</a>) and should be part of the next release (4.6.0)</p>",
        "id": 412906554,
        "sender_full_name": "Arthur Adjedj",
        "timestamp": 1705307210
    }
]