[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Custom</span>\n\n<span class=\"n\">syntax</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">Parser.unfoldInsts</span><span class=\"o\">)</span> <span class=\"s2\">\"unfold_insts% \"</span> <span class=\"n\">term</span> <span class=\"o\">:</span> <span class=\"n\">term</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean.Elab</span> <span class=\"o\">(</span><span class=\"n\">throwUnsupportedSyntax</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lean.Elab.Term.Quotation</span> <span class=\"o\">(</span><span class=\"n\">Precheck</span> <span class=\"n\">precheck</span><span class=\"o\">)</span> <span class=\"k\">in</span>\n<span class=\"kd\">@[</span><span class=\"n\">quot_precheck</span> <span class=\"n\">Custom.Parser.unfoldInsts</span><span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">Precheck.unfoldInsts</span> <span class=\"o\">:</span> <span class=\"n\">Precheck</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">unfold_insts</span><span class=\"bp\">%</span> <span class=\"bp\">$</span><span class=\"n\">term</span><span class=\"o\">:</span><span class=\"n\">term</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">precheck</span> <span class=\"n\">term</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">throwUnsupportedSyntax</span>\n\n<span class=\"k\">#check</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"o\">)</span>                 <span class=\"c1\">-- works</span>\n<span class=\"k\">#check</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"o\">)</span>                <span class=\"c1\">-- (correct) error: unknown identifier 'x'</span>\n<span class=\"k\">#check</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"o\">)</span>                 <span class=\"c1\">-- works</span>\n<span class=\"k\">#check</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"o\">)</span>                <span class=\"c1\">-- works</span>\n<span class=\"k\">#check</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">unfold_insts</span><span class=\"bp\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"o\">)</span>   <span class=\"c1\">-- works</span>\n<span class=\"k\">#check</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"n\">unfold_insts</span><span class=\"bp\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"o\">)</span>  <span class=\"c1\">-- works</span>\n<span class=\"k\">#check</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">unfold_insts</span><span class=\"bp\">%</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"o\">)</span>   <span class=\"c1\">-- works</span>\n<span class=\"k\">#check</span> <span class=\"bp\">``</span><span class=\"o\">(</span><span class=\"n\">unfold_insts</span><span class=\"bp\">%</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"o\">)</span>  <span class=\"c1\">-- (correct) error: unknown identifier 'x'</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">Custom</span>\n</code></pre></div>\n<p>This code breaks if <code>@[quot_precheck Custom.Parser.unfoldInsts]</code> is replaced by <code>@[quot_precheck Parser.unfoldInsts]</code>.<br>\nMore precisely, only the last line breaks, in that the error changes to \"no <code>quot_precheck</code> instance found for <code>unfold_insts%</code>\".<br>\nOther metaprogramming attributes like <code>macro</code>, <code>term_elab</code>, <code>command_elab</code> do not behave like this behaviour AFAIK.</p>\n<p>What's going on here?</p>",
        "id": 425872296,
        "sender_full_name": "Raghuram",
        "timestamp": 1710150760
    },
    {
        "content": "<p><code>quot_precheck</code> doesn't appear to resolve the name given to it. Instead, it just uses the name as-is.</p>",
        "id": 425976911,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1710178902
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"501683\">Raghuram</span> has marked this topic as resolved.</p>",
        "id": 425979547,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710179861
    }
]