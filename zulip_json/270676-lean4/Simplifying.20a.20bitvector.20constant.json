[
    {
        "content": "<p>Hi all, what would be a short solution for this problem that involves a big bit-vector constant?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Std.Data.BitVec.Basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Std.BitVec</span>\n\n<span class=\"kd\">example</span><span class=\"o\">:</span> <span class=\"bp\">âˆƒ</span> <span class=\"n\">y'</span><span class=\"o\">,</span> <span class=\"n\">Std.BitVec.toNat</span> <span class=\"o\">(</span><span class=\"n\">signExtend</span> <span class=\"mi\">64</span> <span class=\"mi\">126</span><span class=\"bp\">#</span><span class=\"mi\">7</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y'</span> <span class=\"bp\">&lt;&lt;&lt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- The below tactic raises 'maximum recursion depth has been reached'</span>\n  <span class=\"c1\">-- simp (config := { ground := true})</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 421759862,
        "sender_full_name": "Juneyoung Lee",
        "timestamp": 1708040072
    },
    {
        "content": "<p>I think there's a thread somewhere about normalizing bitvectors? let me look</p>",
        "id": 421763276,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1708041920
    },
    {
        "content": "<p>I do not see it, sorry <span aria-label=\"frowning\" class=\"emoji emoji-1f626\" role=\"img\" title=\"frowning\">:frowning:</span></p>",
        "id": 421763748,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1708042166
    },
    {
        "content": "<p>We're aware of some problems with <code>config := { ground := true }</code> giving similar errors, and Leo is looking into them in the next few days.</p>",
        "id": 421795986,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708063088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124696\">@Juneyoung Lee</span>, Leo's updates have just landed, and if you change your toolchain to <code>leanprover/lean4:nightly-2024-02-18</code> this problem has been resolved.</p>",
        "id": 422077748,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708243361
    },
    {
        "content": "<p>You can find a version of Std compatible with this toolchain at the tag <code>nightly-testing-2024-02-18</code>. (i.e. you can put that in your lakefile instead of <code>main</code>)</p>",
        "id": 422079816,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708245483
    }
]