[
    {
        "content": "<p>I have the following snippet in my <code>lakefile</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"k\">if</span> <span class=\"n\">get_config</span><span class=\"bp\">?</span> <span class=\"n\">env</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"s2\">\"dev\"</span> <span class=\"k\">then</span>\n<span class=\"n\">require</span> <span class=\"bp\">«</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">»</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover/doc-gen4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n</code></pre></div>\n<p>I execute this code locally with <code>lake -Kenv=dev update</code>. But since <code>leanprover/lean4:v4.5.0-rc1</code> (I think?), the <code>-Kenv=dev</code> flag doesn't seem to do anything. For example,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">post_update</span> <span class=\"k\">do</span>\n  <span class=\"n\">IO.println</span> <span class=\"o\">(</span><span class=\"n\">get_config</span><span class=\"bp\">?</span> <span class=\"n\">env</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>prints <code>none</code>. I can't see anything in the update notes about this behaviour.</p>",
        "id": 409738544,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1703355516
    },
    {
        "content": "<p>cc: <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span></p>",
        "id": 409747675,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703364019
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"492774\">@Sky Wilshaw</span> I suspect you need to run <code>lake -R -Kenv=dev update</code>.</p>",
        "id": 409747711,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703364075
    },
    {
        "content": "<p>That does indeed fix the issue, thanks.</p>",
        "id": 409747811,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1703364174
    },
    {
        "content": "<p>In future runs, will I need the <code>-R</code> flag?</p>",
        "id": 409747823,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1703364189
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"492774\">@Sky Wilshaw</span>  Without <code>-R</code> will used the cached configuration, instead of re-elaborating the configuration. <code>-R</code> forces a reconfiguration. To change <code>-K</code> options, you need to reconfigure. Some more details on the matter are mentioned in the <a href=\"https://github.com/leanprover/lean4/releases/tag/v4.1.0\">v4.1.0 release notes</a>.</p>",
        "id": 409747992,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703364370
    },
    {
        "content": "<p>so this is not anything new to v4.5.0, right</p>",
        "id": 409748025,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703364414
    },
    {
        "content": "<p>That's interesting. I seem to have been able to use <code>-K</code> flags without reconfiguring until this update, which is weird.</p>",
        "id": 409748027,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1703364417
    },
    {
        "content": "<p>There has been some dicussion on improving this matter and making things work more intuitively.</p>",
        "id": 409748032,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703364421
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"492774\">@Sky Wilshaw</span> Lake will also reocnfigure automatically if detects it needs to (e.g., if the toolchain changes, there is no cached configuration, etc.). It may be that your previous times changing the <code>-K</code> options worked because they concided with an automatic reconfigure.</p>",
        "id": 409748174,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703364552
    },
    {
        "content": "<p>That would explain things - I use this script to bump mathlib, which (due to my frequency of updating) often coincides with a toolchain bump.</p>",
        "id": 409748185,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1703364580
    },
    {
        "content": "<p>Thanks for clearing up the issue!</p>",
        "id": 409748236,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1703364604
    },
    {
        "content": "<p>You're welcome!</p>",
        "id": 409748243,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703364613
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Possible.20lake.20.60get_config.3F.60.20regression/near/409748025\">said</a>:</p>\n<blockquote>\n<p>so this is not anything new to v4.5.0, right</p>\n</blockquote>\n<p>One thing that did change in v4.3.0 is that the options are now persisted in the trace. Thus, automatic reconfigures no longer take the options from the command line, but rather those from the trace. This could explain why <span class=\"user-mention\" data-user-id=\"492774\">@Sky Wilshaw</span>'s script now stop working. For instance, on a v4.3.0 -&gt; v4.4.0 bump it would use the cached options  whereas on a  v4.2.0 -&gt; v4.3.0 bump it would use the CLI options.</p>",
        "id": 409748556,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703364936
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"492774\">Sky Wilshaw</span> <a href=\"#narrow/stream/270676-lean4/topic/Possible.20lake.20.60get_config.3F.60.20regression/near/409748027\">said</a>:</p>\n<blockquote>\n<p>That's interesting. I seem to have been able to use <code>-K</code> flags without reconfiguring until this update, which is weird.</p>\n</blockquote>\n<p>Me too, in fact. And I bumped my projects very regularly. So something really seems to have happened in <code>v4.5.0</code>.</p>",
        "id": 409748625,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703365002
    },
    {
        "content": "<p>What do you mean by the \"trace\"? Is there some documentation I can look at?</p>",
        "id": 409748647,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1703365024
    },
    {
        "content": "<p>It's also possible that something in mathlib's lakefile changed recently and so these changes only mattered now.</p>",
        "id": 409748736,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1703365115
    },
    {
        "content": "<p>this is supposedly internal details, so I don't think there is much docs on it</p>",
        "id": 409748742,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703365131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"492774\">@Sky Wilshaw</span> Sorry for the confusion. The trace in question is <code>.lake/lakefile.olean.trace</code> which is an internal file used to version the configuration cache. On the user end, the current rule (since v4.1.0) is that <code>-K</code> options should not be used without <code>-R</code>.</p>",
        "id": 409748757,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703365146
    },
    {
        "content": "<p>but the existence of caching that sometimes ignores your settings is something that needs documentation</p>",
        "id": 409748766,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703365162
    },
    {
        "content": "<p>Is it ever correct behaviour to pass <code>-K</code> flags without <code>-R</code>? If not, should a warning or error be raised by lake?</p>",
        "id": 409748803,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1703365203
    },
    {
        "content": "<p>the name <code>-R</code> \"reconfigure\" certainly doesn't help, people universally have no idea when to use it</p>",
        "id": 409748846,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703365211
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Possible.20lake.20.60get_config.3F.60.20regression/near/409748766\">said</a>:</p>\n<blockquote>\n<p>but the existence of caching that sometimes ignores your settings is something that needs documentation</p>\n</blockquote>\n<p>That part is documented in the v4.1.0 release notes I mentioned.</p>",
        "id": 409748850,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703365215
    },
    {
        "content": "<p>this is not a release notes thing, it needs to be a part of the permanent documentation</p>",
        "id": 409748879,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703365238
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"492774\">Sky Wilshaw</span> <a href=\"#narrow/stream/270676-lean4/topic/Possible.20lake.20.60get_config.3F.60.20regression/near/409748803\">said</a>:</p>\n<blockquote>\n<p>Is it ever correct behaviour to pass <code>-K</code> flags without <code>-R</code>? If not, should a warning or error be raised by lake?</p>\n</blockquote>\n<p>An error would have been a good idea, yes.</p>",
        "id": 409748883,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703365239
    },
    {
        "content": "<p>at least until it is replaced by something saner :)</p>",
        "id": 409748902,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703365251
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Possible.20lake.20.60get_config.3F.60.20regression/near/409748879\">said</a>:</p>\n<blockquote>\n<p>this is not a release notes thing, it needs to be a part of the permanent documentation</p>\n</blockquote>\n<p>While I do agree, there is a question of where. In some part of the README? I doubt that would get much more visibility than the release notes.</p>",
        "id": 409748983,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703365304
    },
    {
        "content": "<p>Maybe in <code>lake --help</code>? I see no help option for <code>-K</code> flags at the moment.</p>",
        "id": 409749057,
        "sender_full_name": "Sky Wilshaw",
        "timestamp": 1703365332
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"492774\">Sky Wilshaw</span> <a href=\"#narrow/stream/270676-lean4/topic/Possible.20lake.20.60get_config.3F.60.20regression/near/409748803\">said</a>:</p>\n<blockquote>\n<p>Is it ever correct behaviour to pass <code>-K</code> flags without <code>-R</code>? If not, should a warning or error be raised by lake?</p>\n</blockquote>\n<p>The other pitfall is that after using <code>-K</code> and <code>-R</code> to set options, if you ever want to <em>remove</em> the <code>-K</code> option you have to use <code>-R</code> again, using <code>lake</code> without arguments will keep using the <code>-K</code> option</p>",
        "id": 409749213,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703365428
    },
    {
        "content": "<p>Yeah, this is largely why <code>-R</code> is separate from the <code>-K</code>.</p>",
        "id": 409749278,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703365457
    },
    {
        "content": "<p>and the other other pitfall is that if you don't pass <code>-K</code> options every time, after learning that they are persisted most of the time as long as you don't pass <code>-R</code>, then you are the mercy of lake's auto reconfigure logic whether that state will be lost and you start compiling with default settings again</p>",
        "id": 409749438,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703365635
    },
    {
        "content": "<p>not sure if this is what changed in 4.3.0</p>",
        "id": 409749449,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703365653
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Possible.20lake.20.60get_config.3F.60.20regression/near/409749449\">said</a>:</p>\n<blockquote>\n<p>not sure if this is what changed in 4.3.0</p>\n</blockquote>\n<p>That is one thing that changed (automatic reconfigures preserve the options now).</p>",
        "id": 409749456,
        "sender_full_name": "Mac Malone",
        "timestamp": 1703365665
    }
]