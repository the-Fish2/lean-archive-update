[
    {
        "content": "<p>Consider this example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span><span class=\"o\">:</span> <span class=\"bp\">âˆ€</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">),</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">n</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Nat.brecOn</span>\n</code></pre></div>\n<p>This fills in the motive as <code>fun t =&gt; n + 0 = t</code> which is obviously wrong. Is there a way to disable this behaviour at the <code>MetaM</code> level? In general the behaviour I want is that if <code>isDefEq</code> is unifying <code>?m1 ?m2</code> with <code>x</code>, it should leave <code>?m1</code> and <code>?m2</code> untouched because there could be multiple potential solutions.</p>",
        "id": 433849278,
        "sender_full_name": "Leni Aniva",
        "timestamp": 1713378373
    }
]