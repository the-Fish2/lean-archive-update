[
    {
        "content": "<p>Suppose I have installed a thing with <code>Lean.addAndCompile</code> named <code>cow : Name</code>. How do I actually obtain the the object that was installed, i.e., I how do I tell the kernel \"give me the object whose name is equal to the value of <code>cow</code>\"?</p>",
        "id": 434734448,
        "sender_full_name": "Andrej Bauer",
        "timestamp": 1713788567
    },
    {
        "content": "<p><code>Lean.getConstInfo</code> is <em>probably</em> what you're looking for to start with.</p>",
        "id": 434735258,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713788800
    },
    {
        "content": "<p>It's more likely that I want to create a quoted expressions that is essentially the name of the thing I want to lookup, and tell the kernel to \"evaluate\" it (I expect the kernel to complain if no such thing exists, and otherwise give me a blessed object).</p>",
        "id": 434735929,
        "sender_full_name": "Andrej Bauer",
        "timestamp": 1713788975
    },
    {
        "content": "<p>Maybe <code>Lean.evalConst</code>.</p>",
        "id": 434737602,
        "sender_full_name": "Andrej Bauer",
        "timestamp": 1713789422
    },
    {
        "content": "<p>If you want to go from a named symbolic term to a run-time value then yes. For what it's worth, the IR generation step necessary for this happens outside the kernel, and the IR is not evaluated until required such as through <code>evalConst</code></p>",
        "id": 434775376,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1713798485
    }
]