[
    {
        "content": "<p>As I understand it, to use imports in a lean file one needs to setup a package and build with <code>lake</code>. The process of setting up a lake project and writing a lakefile is somewhat difficult, though. Is there a way to compile a file (inside or outside a package) containing some <code>import Mathlib</code> statement using only <code>lean</code> and not <code>lake</code>?</p>",
        "id": 426221592,
        "sender_full_name": "Tanner Reese",
        "timestamp": 1710281731
    },
    {
        "content": "<blockquote>\n<p>The process of setting up a lake project and writing a lakefile is somewhat difficult, though.</p>\n</blockquote>\n<p>Are you aware of <code>lake new $Proj math</code> which does most of this for you? The alternative of not using <code>lake</code> is much more difficult!</p>",
        "id": 426225595,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710283952
    },
    {
        "content": "<p>Yes, I was aware of <code>lake new</code>. Perhaps, I should have phrased it as \"I feel setting up a whole lake project is overkill for a single file\". Many languages have compilers that allow one to provide a search path for dependencies as a command line argument. I was wondering if <code>lean</code> had such an option.<br>\nAlso, it seems that there is a built-in libraries path provided by <code>lean --print-libdir</code>. Is it possible (and would it cause issues) to place Mathlib or other packages directly in this folder?</p>",
        "id": 426405050,
        "sender_full_name": "Tanner Reese",
        "timestamp": 1710355288
    },
    {
        "content": "<p>I really would recommend against trying to work around lake</p>",
        "id": 426410299,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710357303
    },
    {
        "content": "<p>Does <code>lean</code> have the ability to deal with packages independently of <code>lake</code>, though?</p>",
        "id": 426628539,
        "sender_full_name": "Tanner Reese",
        "timestamp": 1710450220
    },
    {
        "content": "<p>Everything that you are likely to want to do can be done by invoking <code>lean</code> manually and setting <code>LEAN_PATH</code> to point to the locations of the dependencies; but if you are using Mathlib, this amounts to 4000 separate invocations, which you certainly don't want to do manually</p>",
        "id": 426631472,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710451328
    },
    {
        "content": "<p>(If your goal is to add cmake / nix/ SCons / bazel / brazil / ... support for Lean 4 for some reason or another, then this is viable)</p>",
        "id": 426631840,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710451484
    },
    {
        "content": "<p>Is there a way to run a single file outside of a project with <code>lake</code> such that it will use the appropriate dependencies?</p>",
        "id": 426632006,
        "sender_full_name": "Tanner Reese",
        "timestamp": 1710451554
    },
    {
        "content": "<p>The other useful trick is using <code>lean --deps file</code> to have it locate the dependencies of a lean file</p>",
        "id": 426632126,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1710451588
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"693891\">Tanner Reese</span> <a href=\"#narrow/stream/270676-lean4/topic/Compile.20file.20using.20.60lean.60.20without.20a.20lake.20project/near/426632006\">said</a>:</p>\n<blockquote>\n<p>Is there a way to run a single file outside of a project with <code>lake</code> such that it will use the appropriate dependencies?</p>\n</blockquote>\n<p>From the project that sets up the dependencies, you can <code>lake env lean ../../path/to/single/file/outside/project.lean</code>.</p>",
        "id": 426636592,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710453545
    }
]