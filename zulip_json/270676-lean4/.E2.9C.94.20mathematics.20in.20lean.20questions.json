[
    {
        "content": "<p>About question C05S03</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Prime</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.BigOperators.Order</span>\n<span class=\"kn\">import</span> <span class=\"n\">MIL.Common</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">C05S03</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">two_le</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h0</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">cases</span> <span class=\"n\">m</span><span class=\"bp\">;</span> <span class=\"n\">contradiction</span>\n  <span class=\"n\">case</span> <span class=\"n\">succ</span> <span class=\"n\">m</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">cases</span> <span class=\"n\">m</span><span class=\"bp\">;</span> <span class=\"n\">contradiction</span>\n    <span class=\"n\">repeat'</span> <span class=\"n\">apply</span> <span class=\"n\">Nat.succ_le_succ</span>\n    <span class=\"n\">apply</span> <span class=\"n\">zero_le</span>\n</code></pre></div>\n<p>why after the first contradiction tactic, the variable name is changed from <code>m</code> to <code>nt</code>, and why directly say<code>cases nt</code> after the contradiction doesnt work, has to do `case succ m =&gt;' to change variable name?</p>",
        "id": 431564699,
        "sender_full_name": "Yufei Liu",
        "timestamp": 1712335007
    },
    {
        "content": "<p>Please don't double-post, and please ask questions about code which involves mathlib in a more appropriate stream such as <a class=\"stream\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4\">#mathlib4</a> . This stream is for core lean questions.</p>",
        "id": 431565778,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712335371
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/270676-lean4/topic/mathematics.20in.20lean.20questions/near/431565778\">said</a>:</p>\n<blockquote>\n<p>Please don't double-post, and please ask questions about code which involves mathlib in a more appropriate stream such as <a class=\"stream\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4\">#mathlib4</a> . This stream is for core lean questions.</p>\n</blockquote>\n<p>ok sorry i'll change it to mathlib</p>",
        "id": 431568011,
        "sender_full_name": "Yufei Liu",
        "timestamp": 1712336099
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"620519\">Yufei Liu</span> has marked this topic as resolved.</p>",
        "id": 431568368,
        "sender_full_name": "Notification Bot",
        "timestamp": 1712336209
    }
]