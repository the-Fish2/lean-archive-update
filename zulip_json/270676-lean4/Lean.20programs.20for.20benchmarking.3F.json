[
    {
        "content": "<p>Hello,</p>\n<p>I've been looking for programs in the Lean ecosystem where execution time matters, and preferably, one already has (micro) benchmarking setup for these examples where one can clearly see how improvements to the compiler affect performance. </p>\n<p>AFAIK, we currently use the Lean compiler itself to bench Lean's performance, along with the benchmarks carried in the Lean source tree (<a href=\"http://speed.lean-lang.org/lean4/compare/38fb221e-6556-43f8-9963-e833d9d810b8/to/d65b9c7b-5faf-42bf-ba96-0c051e024ebd\">http://speed.lean-lang.org/lean4/compare/38fb221e-6556-43f8-9963-e833d9d810b8/to/d65b9c7b-5faf-42bf-ba96-0c051e024ebd</a>).</p>\n<p>I am looking for more examples of programs where one cares about seeing performance improvements. Good examples of such programs would be raytracers, compilers, solvers, and the like, where the performance is compute/memory bound (not I/O bound). </p>\n<p>I'd be very grateful to pointers for programs where people care about performance improvements!</p>",
        "id": 430503318,
        "sender_full_name": "Siddharth Bhat",
        "timestamp": 1711915298
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>'s racetracer sounds like a good example: <a href=\"https://github.com/kmill/lean4-raytracer\">https://github.com/kmill/lean4-raytracer</a></p>",
        "id": 430505626,
        "sender_full_name": "Mac Malone",
        "timestamp": 1711917455
    }
]