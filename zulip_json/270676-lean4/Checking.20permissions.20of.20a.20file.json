[
    {
        "content": "<p>I'd like to rewrite the check for executable Lean files in mathlib: in short, I'd like to rewrite the following line in Lean.<br>\n<code>executable_files=\"$(find . -name '*.lean' -type f \\( -perm -u=x -o -perm -g=x -o -perm -o=x \\))</code><br>\n(I can shell out to <code>find</code>, but would prefer not to.)</p>\n<p>Finding all <code>.lean</code> files is doable (there's code for this already) --- can I check a file's permissions in Lean? I didn't see anything obvious from the documentation.</p>",
        "id": 440837043,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716810361
    },
    {
        "content": "<p>I think it's ok to leave some checks in bash, especially the ones that don't need to know anything about lean</p>",
        "id": 440859615,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716817806
    },
    {
        "content": "<p>In particular, if you write it in Lean, then you run into trouble on windows where the permissions bits don't really exist in the same way except where emulated by git bash.</p>",
        "id": 440860051,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716817945
    },
    {
        "content": "<p>For such I/O missing from Lean, I was told to use Alloy to call C code directly from Lean.  In this<br>\nsituation, you can get the platform from System.Platform and call the appropriate C code to get file<br>\npermissions if the platform allows it.  I still haven't tested this workflow, though.</p>",
        "id": 441067990,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1716911263
    }
]