[
    {
        "content": "<p>what did you do?</p>",
        "id": 238062104,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620594664
    },
    {
        "content": "<p>I followed the instructions on the Lean4 Manual: tried once with the Basic setup, did not work, ran \"elan self uninstall\" and ran the Quickstart setup from the same manual but I have the same problems, both with stable and nightly.<br>\nWhen I call leanpkg from the command line I get an uncaught exception message and vscode gives an error message, he cannot start lean in server mode</p>",
        "id": 238062292,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620594864
    },
    {
        "content": "<p>Please post the error messages and the commands you ran</p>",
        "id": 238062356,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620594954
    },
    {
        "content": "<p>isaia@aiace-laptop:~/Isabelle/Isabelle2021$ leanpkg<br>\nuncaught exception: Lean package manager, version 4.0.0</p>\n<p>Usage: leanpkg &lt;command&gt;</p>\n<p>init &lt;name&gt;      create a Lean package in the current directory<br>\nconfigure        download and build dependencies<br>\nbuild [&lt;args&gt;]   configure and build *.olean files</p>\n<p>See <code>leanpkg help &lt;command&gt;</code> for more information on a specific command.</p>",
        "id": 238062433,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620595013
    },
    {
        "content": "<p>In VSCode I get a Server has stopped with error code</p>",
        "id": 238062459,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620595060
    },
    {
        "content": "<p>And leanpkg.path does not exist</p>",
        "id": 238062463,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620595072
    },
    {
        "content": "<p>the OS is Ubuntu 20.10</p>",
        "id": 238062566,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620595184
    },
    {
        "content": "<p>As the error message says, <code>leanpkg</code> requires a subcommand like <code>leanpkg init MyProject</code> or <code>leanpkg build</code></p>",
        "id": 238062883,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620595474
    },
    {
        "content": "<p>I think lean 4 doesn't use <code>leanpkg.path</code> anymore, that's a lean 3 thing</p>",
        "id": 238062932,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620595523
    },
    {
        "content": "<p>I will check now if there is amismatch in the VSCode extension</p>",
        "id": 238063010,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620595584
    },
    {
        "content": "<p>ok, it seems like I installed the old lean extension instead of the lean4 extension</p>",
        "id": 238063051,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620595651
    },
    {
        "content": "<p>Are you using elan?</p>",
        "id": 238063128,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620595696
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/elan\">https://github.com/leanprover/elan</a></p>",
        "id": 238063139,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620595707
    },
    {
        "content": "<p>yes, I installed everything through elan</p>",
        "id": 238063154,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620595721
    },
    {
        "content": "<p>I will try to restart vscode, it gave me an error, \"The Lean 4 server crashed 5 times in the last 3 minutes. The server will not be restarted.\"</p>",
        "id": 238063205,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620595796
    },
    {
        "content": "<p>what does <code>lean --version</code> at the console give?</p>",
        "id": 238063280,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620595828
    },
    {
        "content": "<p>If it says lean 3, try <code>elan override set leanprover/lean4:nightly</code></p>",
        "id": 238063312,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620595856
    },
    {
        "content": "<p>Lean (version 4.0.0-m2, commit 26dda3f63d88, Release)</p>",
        "id": 238063351,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620595903
    },
    {
        "content": "<p>you might still want to use nightly in case there is some bug that's been fixed</p>",
        "id": 238063426,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620595976
    },
    {
        "content": "<p>VSCode is giving this output and then crashes<br>\nWatchdog error: Got unknown document URI (file:///home/isaia/lean/my_playground/gatto.lean)<br>\n[Info  - 6:32:39 PM] Connection to server got closed. Server will restart.<br>\n[Error - 6:32:39 PM] Request textDocument/documentSymbol failed.<br>\nError: Connection got disposed.<br>\n    at Object.dispose (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:145943)<br>\n    at Object.dispose (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:226115)<br>\n    at C.handleConnectionClosed (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:226328)<br>\n    at C.handleConnectionClosed (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:286716)<br>\n    at t (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:224417)<br>\n    at invoke (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:147556)<br>\n    at <a href=\"http://o.fire\">o.fire</a> (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:148317)<br>\n    at Y (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:135201)<br>\n    at invoke (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:147556)<br>\n    at <a href=\"http://o.fire\">o.fire</a> (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:148317)<br>\n    at g.fireClose (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:156198)<br>\n    at Socket.&lt;anonymous&gt; (/home/isaia/.vscode/extensions/leanprover.lean4-0.0.25/out/extension.js:2:157783)<br>\n    at Socket.emit (events.js:327:22)<br>\n    at Pipe.&lt;anonymous&gt; (net.js:673:12)</p>",
        "id": 238063522,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620596045
    },
    {
        "content": "<p>I will try the nightly</p>",
        "id": 238063587,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620596103
    },
    {
        "content": "<p>Yeah, you need to use nightly: <a href=\"#narrow/stream/270676-lean4/topic/vscode-lean4.20Doesn't.20Work.20When.20I.20Switch.20Files/near/232024638\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/vscode-lean4.20Doesn't.20Work.20When.20I.20Switch.20Files/near/232024638</a></p>",
        "id": 238063593,
        "sender_full_name": "Chris B",
        "timestamp": 1620596112
    },
    {
        "content": "<p>For now at least.</p>",
        "id": 238063604,
        "sender_full_name": "Chris B",
        "timestamp": 1620596118
    },
    {
        "content": "<p>ah, perfect! Now it seems to work! Thank you so much!</p>",
        "id": 238063722,
        "sender_full_name": "Isaia Nisoli",
        "timestamp": 1620596224
    },
    {
        "content": "<p>After installing Git (Windows 11), the lean4 VSCode extension and having that install elan / lean, I get the error \"Watchdog error: no such file or directory (error code: 2)\". Any idea, what I did wrong?</p>",
        "id": 397271656,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697622094
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"659983\">Jürgen Uhl</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/397271656\">said</a>:</p>\n<blockquote>\n<p>After installing Git (Windows 11), the lean4 VSCode extension and having that install elan / lean, I get the error \"Watchdog error: no such file or directory (error code: 2)\". Any idea, what I did wrong?</p>\n</blockquote>\n<p>What's your directory tree like (suitably anonymised ofc)?</p>",
        "id": 397274453,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623124
    },
    {
        "content": "<p>which directory tree?</p>",
        "id": 397274531,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623163
    },
    {
        "content": "<p>where you have opened vscode</p>",
        "id": 397274545,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623172
    },
    {
        "content": "<p>well, i open vsc from the startup icon and then select the working directory. The WD is D:\\Develop\\VSCode\\Lean</p>",
        "id": 397274688,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623216
    },
    {
        "content": "<p>How would I find out the startup directory?</p>",
        "id": 397274719,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623230
    },
    {
        "content": "<p>okay, let me start a few step earlier</p>",
        "id": 397274801,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623259
    },
    {
        "content": "<p>are commands like <code>elan --version</code> and <code>lake version</code> showing some output?</p>",
        "id": 397274943,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623311
    },
    {
        "content": "<p>elan 3.0.0 (cdb40bff5 2023-09-08)</p>",
        "id": 397275055,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623339
    },
    {
        "content": "<p>Lake version 5.0.0-a832f39 (Lean version 4.1.0)</p>",
        "id": 397275096,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623358
    },
    {
        "content": "<p>okay perfect. Now Please follow the steps I suggest below to create a new lean project and open it in vscode</p>",
        "id": 397275163,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623386
    },
    {
        "content": "<p><code>cd &lt;folder where you want to create your project&gt;</code></p>",
        "id": 397275199,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623404
    },
    {
        "content": "<p><code>lake new &lt;project name&gt;</code></p>",
        "id": 397275220,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623415
    },
    {
        "content": "<p><code>cd &lt;project name&gt;</code></p>",
        "id": 397275281,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623443
    },
    {
        "content": "<p><code>code .</code></p>",
        "id": 397275328,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623456
    },
    {
        "content": "<p>error</p>",
        "id": 397275371,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623469
    },
    {
        "content": "<p>which step?<br>\nwhat error?</p>",
        "id": 397275387,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623480
    },
    {
        "content": "<p>oh, should I have run that in VS Code console or windows consloe or powershell or what?</p>",
        "id": 397275456,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623504
    },
    {
        "content": "<p>usually use powershell (or even better for convenience, use the terminal that windows comes with these days)</p>",
        "id": 397275500,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623529
    },
    {
        "content": "<p>I ran in vs console and the last \"code .\" gave an error</p>",
        "id": 397275503,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623530
    },
    {
        "content": "<p>vs console? Inside vscode?</p>",
        "id": 397275540,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623546
    },
    {
        "content": "<p>yes</p>",
        "id": 397275563,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623557
    },
    {
        "content": "<p>What is the error?</p>",
        "id": 397275577,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697623561
    },
    {
        "content": "<p>code : Die Benennung \"code\" wurde nicht als Name eines Cmdlet, einer Funktion, einer Skriptdatei oder eines ausführbaren Programms erkannt. <br>\nÜberprüfen Sie die Schreibweise des Namens, oder ob der Pfad korrekt ist (sofern enthalten), und wiederholen Sie den Vorgang.<br>\nIn Zeile:1 Zeichen:1</p>\n<ul>\n<li>code .</li>\n<li>~~~~<br>\n    + CategoryInfo          : ObjectNotFound: (code:String) [], CommandNotFoundException<br>\n    + FullyQualifiedErrorId : CommandNotFoundException</li>\n</ul>",
        "id": 397275640,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623571
    },
    {
        "content": "<p>you understand that or should i translate?</p>",
        "id": 397275684,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623587
    },
    {
        "content": "<p>THat's because you are running the command in the cmd shell</p>",
        "id": 397275690,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623588
    },
    {
        "content": "<p>so where should I run it?</p>",
        "id": 397275741,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623609
    },
    {
        "content": "<p>On windows 11 you should have an app called terminal</p>",
        "id": 397275766,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623622
    },
    {
        "content": "<p>but that does not know \"code\", apparently</p>",
        "id": 397275917,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623673
    },
    {
        "content": "<p>maybe when installing vscode i did not add the path</p>",
        "id": 397275993,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623687
    },
    {
        "content": "<p>wait. Once you open the terminal, windows adds extra steps</p>",
        "id": 397276008,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623692
    },
    {
        "content": "<p>okay that's possible.</p>",
        "id": 397276029,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623697
    },
    {
        "content": "<p>Please check the PATH variable first.</p>",
        "id": 397276084,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623723
    },
    {
        "content": "<p>okay, started it with explicit path.</p>",
        "id": 397276221,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623775
    },
    {
        "content": "<p>says \"Waiting for Lean Server to start...\"</p>",
        "id": 397276340,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623805
    },
    {
        "content": "<p>Is your toolchain on your PATH variable?</p>",
        "id": 397276380,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623822
    },
    {
        "content": "<p>And did it start?</p>",
        "id": 397276453,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623850
    },
    {
        "content": "<p>Seems to work now.</p>",
        "id": 397276484,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623864
    },
    {
        "content": "<p>Awesome</p>",
        "id": 397276527,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623882
    },
    {
        "content": "<p>Sorry, what is \"toolchain\"</p>",
        "id": 397276532,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623885
    },
    {
        "content": "<p>the collection of <code>lean</code> the compiler, <code>lake</code> the build tool, and some basic libraries (not Mathlib)</p>",
        "id": 397276796,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623916
    },
    {
        "content": "<p>and where would I find that?</p>",
        "id": 397276871,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697623930
    },
    {
        "content": "<p><code>cd ~/.elan</code></p>",
        "id": 397277018,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697623973
    },
    {
        "content": "<p>In powershell. AFAIK, windows <code>cmd</code> doesn't know the command <code>cd</code></p>",
        "id": 397277332,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697624036
    },
    {
        "content": "<p>For simplicity you might want to make powershell your default terminal in your windows settings</p>",
        "id": 397277437,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697624058
    },
    {
        "content": "<p>ah, found it. And that should go into the Windows PATH, correct?</p>",
        "id": 397277489,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697624078
    },
    {
        "content": "<p>Well, anyway, seems to be working now. Thanks a lot! (Could I have found that by myself from the docs, btw.?)</p>",
        "id": 397277604,
        "sender_full_name": "Jürgen Uhl",
        "timestamp": 1697624105
    },
    {
        "content": "<p>I would not recommend tinkering with a working setup. If vscode can find the lean extension and you are able to execute commands like <code>elan --version</code> and <code>lake --version</code> you should already have the correct PATH variable</p>",
        "id": 397277760,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697624156
    },
    {
        "content": "<p>I was on autopilot when asking you about the lean toolchain being on path question</p>",
        "id": 397278002,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697624214
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"659983\">Jürgen Uhl</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/397277604\">said</a>:</p>\n<blockquote>\n<p>Well, anyway, seems to be working now. Thanks a lot! (Could I have found that by myself from the docs, btw.?)</p>\n</blockquote>\n<p>Good question. I think yes, but the docs are split between multiple places at the moment. There is an ongoing effort to rationalise and reorganise all this.</p>",
        "id": 397279268,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697624617
    },
    {
        "content": "<p>Hello guys, Im new here, sorry If my issue is misplaced.<br>\nMac M1, I cant build project with mathlib included (I even cant build the pre-existed project, I tried mathematics_in_lean as was suggested), the error is \"unknown package 'Mathlib'\", Is this a common issue or is this me?:)</p>",
        "id": 397393046,
        "sender_full_name": "Anotherpieceofmyhead",
        "timestamp": 1697669334
    },
    {
        "content": "<p>It's probably you not following the instructions exactly. :-)</p>",
        "id": 397393567,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697669807
    },
    {
        "content": "<p>Did you open the correct folder in VSCode? (it's essential that you use \"open folder\", rather than opening an individual file, and you must open the folder containing the <code>lakefile.lean</code>).</p>",
        "id": 397393619,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697669861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"660233\">@Anotherpieceofmyhead</span></p>",
        "id": 397393627,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697669868
    },
    {
        "content": "<p>well, that makes me sad, but thats possible:)<br>\nYes, i was opening a folder.<br>\nTo be honest I thought that it might be my mistake, but after failing to build the <a href=\"https://leanprover-community.github.io/mathematics_in_lean/mathematics_in_lean.pdf\">https://leanprover-community.github.io/mathematics_in_lean/mathematics_in_lean.pdf</a> I was wondering if this is something common</p>",
        "id": 397394085,
        "sender_full_name": "Anotherpieceofmyhead",
        "timestamp": 1697670156
    },
    {
        "content": "<p>Nah, I figured it out, you were right about the folders and I feel ashamed :D</p>\n<p>Thanks a lot</p>",
        "id": 397394802,
        "sender_full_name": "Anotherpieceofmyhead",
        "timestamp": 1697670781
    },
    {
        "content": "<p>I was opening the broader folder all the time, and lean didnt like it</p>",
        "id": 397394917,
        "sender_full_name": "Anotherpieceofmyhead",
        "timestamp": 1697670879
    },
    {
        "content": "<p>One of my students reports the following problem. After following the first steps of <a href=\"https://leanprover-community.github.io/install/windows.html\">these instructions</a> (install VSCode, install git, install the Lean4 extension, set up a text file), after clicking the <code>Install Lean using Elan</code> button, an error message appears (sorry for the German)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">prompt</span><span class=\"o\">)</span><span class=\"bp\">&gt;</span> <span class=\"n\">Start</span><span class=\"bp\">-</span><span class=\"n\">BitsTransfer</span> <span class=\"bp\">-</span><span class=\"n\">Source</span>\n <span class=\"s2\">\"https://raw.githubusercontent.com/leanprover/elan/master/elan-init.ps1\"</span>\n <span class=\"bp\">-</span><span class=\"n\">Destination</span> <span class=\"s2\">\"elan-init.ps1\"</span>\n <span class=\"n\">Die</span> <span class=\"n\">Benennung</span> <span class=\"s2\">\"Start-BitsTransfer\"</span> <span class=\"n\">wurde</span> <span class=\"n\">nicht</span> <span class=\"n\">als</span> <span class=\"n\">Name</span> <span class=\"n\">eines</span> <span class=\"n\">Cmdlet</span><span class=\"o\">,</span>\n <span class=\"n\">einer</span> <span class=\"n\">Funktion</span><span class=\"o\">,</span> <span class=\"n\">einer</span> <span class=\"n\">Skriptdatei</span> <span class=\"n\">oder</span> <span class=\"n\">eines</span> <span class=\"n\">ausf</span><span class=\"bp\">ü</span><span class=\"n\">hrbaren</span> <span class=\"n\">Programms</span>\n <span class=\"n\">erkannt.</span> <span class=\"bp\">Ü</span><span class=\"n\">berpr</span><span class=\"bp\">ü</span><span class=\"n\">fen</span> <span class=\"n\">Sie</span> <span class=\"n\">die</span> <span class=\"n\">Schreibweise</span> <span class=\"n\">des</span> <span class=\"n\">Namens</span><span class=\"o\">,</span> <span class=\"n\">oder</span> <span class=\"n\">ob</span> <span class=\"n\">der</span> <span class=\"n\">Pfad</span>\n <span class=\"n\">korrekt</span> <span class=\"n\">ist</span> <span class=\"o\">(</span><span class=\"n\">sofern</span> <span class=\"n\">enthalten</span><span class=\"o\">),</span> <span class=\"n\">und</span> <span class=\"n\">wiederholen</span> <span class=\"n\">Sie</span> <span class=\"n\">den</span> <span class=\"n\">Vorgang.</span>\n <span class=\"n\">Bei</span> <span class=\"n\">Zeile</span><span class=\"o\">:</span><span class=\"mi\">1</span> <span class=\"n\">Zeichen</span><span class=\"o\">:</span><span class=\"mi\">19</span>\n <span class=\"bp\">+</span> <span class=\"n\">Start</span><span class=\"bp\">-</span><span class=\"n\">BitsTransfer</span> <span class=\"bp\">&lt;&lt;&lt;&lt;</span>  <span class=\"bp\">-</span><span class=\"n\">Source</span>\n <span class=\"s2\">\"https://raw.githubusercontent.com/leanprover/elan/master/elan-init.ps1\"</span>\n <span class=\"bp\">-</span><span class=\"n\">Destination</span> <span class=\"s2\">\"elan-init.ps1\"</span>\n      <span class=\"bp\">+</span> <span class=\"n\">CategoryInfo</span>          <span class=\"o\">:</span> <span class=\"n\">ObjectNotFound</span><span class=\"o\">:</span>\n <span class=\"o\">(</span><span class=\"n\">Start</span><span class=\"bp\">-</span><span class=\"n\">BitsTransfer</span><span class=\"o\">:</span><span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">[],</span> <span class=\"n\">CommandNotFoundException</span>\n      <span class=\"bp\">+</span> <span class=\"n\">FullyQualifiedErrorId</span> <span class=\"o\">:</span> <span class=\"n\">CommandNotFoundException</span>\n</code></pre></div>\n<p>To my eyes, it looks like the process tries to run a command <code>Start-BitsTransfer</code>, which does not exist or cannot be found in the PATH. Any ideas? (I'm working with Linux myself and don't know a lot about Windows...)</p>",
        "id": 398146515,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1698090578
    },
    {
        "content": "<p>I don't know anything about Windows either, but searching seems to suggest that error means that the student is on an old Powershell (1.0). What version of Windows is this, do you know?</p>",
        "id": 398147013,
        "sender_full_name": "Julian Berman",
        "timestamp": 1698090835
    },
    {
        "content": "<p>I don't know, but I've asked.</p>",
        "id": 398147343,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1698090989
    },
    {
        "content": "<p>Assuming I can interpret the page I'm reading I <em>believe</em> the answer will be \"quite old\", as I think this is saying Powershell 2.0 is present already even in Windows 7. But let's see.</p>",
        "id": 398147412,
        "sender_full_name": "Julian Berman",
        "timestamp": 1698091033
    },
    {
        "content": "<p>Regardless, it might be asking them to follow <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.3\">https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.3</a> is going might be the next step.</p>",
        "id": 398147557,
        "sender_full_name": "Julian Berman",
        "timestamp": 1698091090
    },
    {
        "content": "<p>I'm still waiting for an answer regarding the Windows version. Going to bed now...</p>",
        "id": 398152900,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1698093610
    },
    {
        "content": "<p>following the instructions on<br>\n<a href=\"https://leanprover-community.github.io/install/macos.html\">https://leanprover-community.github.io/install/macos.html</a><br>\n to install lean4 on my Mac (Sonoma 14.2.1) I got an error message:<br>\n/usr/local/Library/Homebrew/version.rb:186:in `initialize': Version value must be a string (TypeError)<br>\nWhat can I do about this?</p>",
        "id": 418408187,
        "sender_full_name": "René Schoof",
        "timestamp": 1706352693
    },
    {
        "content": "<p>That sounds like your Homebrew is possibly very old or very broken.</p>",
        "id": 418417932,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706362273
    },
    {
        "content": "<p>Try running <code>brew update</code></p>",
        "id": 418417944,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706362281
    },
    {
        "content": "<p>Thanks for the hint. But I get the same error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"n\">brew</span> <span class=\"n\">update</span>\n<span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">Library</span><span class=\"bp\">/</span><span class=\"n\">Homebrew</span><span class=\"bp\">/</span><span class=\"n\">version.rb</span><span class=\"o\">:</span><span class=\"mi\">186</span><span class=\"o\">:</span><span class=\"k\">in</span> <span class=\"bp\">`</span><span class=\"n\">initialize'</span><span class=\"o\">:</span> <span class=\"n\">Version</span> <span class=\"n\">value</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">a</span> <span class=\"n\">string</span> <span class=\"o\">(</span><span class=\"n\">TypeError</span><span class=\"o\">)</span>\n    <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">Library</span><span class=\"bp\">/</span><span class=\"n\">Homebrew</span><span class=\"bp\">/</span><span class=\"n\">os</span><span class=\"bp\">/</span><span class=\"n\">mac</span><span class=\"bp\">/</span><span class=\"n\">version.rb</span><span class=\"o\">:</span><span class=\"mi\">25</span><span class=\"o\">:</span><span class=\"k\">in</span> <span class=\"bp\">`</span><span class=\"n\">initialize'</span>\n    <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">Library</span><span class=\"bp\">/</span><span class=\"n\">Homebrew</span><span class=\"bp\">/</span><span class=\"n\">os</span><span class=\"bp\">/</span><span class=\"n\">mac.rb</span><span class=\"o\">:</span><span class=\"mi\">15</span><span class=\"o\">:</span><span class=\"k\">in</span> <span class=\"bp\">`</span><span class=\"n\">new'</span>\n    <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">Library</span><span class=\"bp\">/</span><span class=\"n\">Homebrew</span><span class=\"bp\">/</span><span class=\"n\">os</span><span class=\"bp\">/</span><span class=\"n\">mac.rb</span><span class=\"o\">:</span><span class=\"mi\">15</span><span class=\"o\">:</span><span class=\"k\">in</span> <span class=\"bp\">`</span><span class=\"n\">version'</span>\n    <span class=\"k\">from</span> <span class=\"bp\">/</span><span class=\"n\">usr</span><span class=\"bp\">/</span><span class=\"kn\">local</span><span class=\"bp\">/</span><span class=\"n\">Library</span><span class=\"bp\">/</span><span class=\"n\">brew.rb</span><span class=\"o\">:</span><span class=\"mi\">31</span><span class=\"o\">:</span><span class=\"k\">in</span> <span class=\"bp\">`&lt;</span><span class=\"n\">main</span><span class=\"bp\">&gt;'</span>\n</code></pre></div>",
        "id": 418421514,
        "sender_full_name": "René Schoof",
        "timestamp": 1706365613
    },
    {
        "content": "<p>(You can post output like this in between blank lines containing triple backticks <code> ``` </code> (see <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> for more information). Then it won't look all messed up.)</p>",
        "id": 418425475,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706369085
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"687159\">@René Schoof</span> that's the output you get from <code>brew update</code>? If so I'd recommend reinstalling Homebrew entirely.</p>",
        "id": 418439595,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706382468
    },
    {
        "content": "<p>Do you have things you know you've installed with it as far as you're aware?</p>",
        "id": 418439669,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706382515
    },
    {
        "content": "<p>Feel free to ask if you need help doing the reinstall -- otherwise, especially if the answer to the above is \"no\", you probably want to run <a href=\"https://github.com/homebrew/install#uninstall-homebrew\">https://github.com/homebrew/install#uninstall-homebrew</a> then you can re-run the Lean installation script</p>",
        "id": 418439719,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706382579
    },
    {
        "content": "<p>Someone suggested purging homebrew completely <span class=\"user-mention\" data-user-id=\"687159\">@René Schoof</span> and then <code>lean</code> might just work immediately.</p>",
        "id": 418459703,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706403238
    },
    {
        "content": "<p>I’m not sure about lean itself, but I think the easy macOS install script might work after purging (it attempts to install a fresh homebrew of it can’t find <code>brew</code> in the path). IIRC homebrew has an official uninstall script?</p>",
        "id": 418459992,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1706403553
    },
    {
        "content": "<p>Yes, I linked it :)</p>",
        "id": 418460134,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706403705
    },
    {
        "content": "<p>Tangential, but the documented way to install lean 4 is a total nightmare from China, where github is a banned domain.</p>\n<p>I can download files myself if you'll tell me where they are. I can put them in appropriate locations if you'll tell me where they are supposed to be. But it's an enormous pain to constantly swap back and forth between a configuration that lets me use git to clone git repositories from github and a different, incompatible configuration that lets <code>lake.exe</code> download files from github using normal download protocols, all while having to repeatedly root through error logs for indications of what the magic VSCode script wanted to happen so that I can accomplish the broken part myself, or switch into the opposite 'get things from github' configuration.</p>",
        "id": 418518096,
        "sender_full_name": "Michael",
        "timestamp": 1706461174
    },
    {
        "content": "<p>there was some discussion about lean in china <a href=\"#narrow/stream/113486-announce/topic/Release.20of.20.60glean.60.3A.20all-in-one.20.20tool.20for.20Lean.20mirror\">here</a> and <a href=\"#narrow/stream/113488-general/topic/Discussion.20of.20.60glean.60\">here</a></p>",
        "id": 418518420,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706461435
    },
    {
        "content": "<p>I'd be happy to work with someone in china to figure out how to make elan and cache work better with approved domains; I don't really know how the whole great firewall thing works in practice</p>",
        "id": 418518535,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706461516
    },
    {
        "content": "<p>how it works in practice is that your traffic gets dropped.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">PS</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Michael</span><span class=\"bp\">\\</span><span class=\"n\">lean</span><span class=\"bp\">\\</span><span class=\"n\">mathematics_in_lean</span><span class=\"bp\">&gt;</span> <span class=\"n\">ping</span> <span class=\"n\">github.com</span>\n\n<span class=\"n\">Pinging</span> <span class=\"n\">github.com</span> <span class=\"o\">[</span><span class=\"mi\">20</span><span class=\"bp\">.</span><span class=\"mi\">205</span><span class=\"bp\">.</span><span class=\"mi\">243</span><span class=\"bp\">.</span><span class=\"mi\">166</span><span class=\"o\">]</span> <span class=\"k\">with</span> <span class=\"mi\">32</span> <span class=\"n\">bytes</span> <span class=\"n\">of</span> <span class=\"n\">data</span><span class=\"o\">:</span>\n<span class=\"n\">Request</span> <span class=\"n\">timed</span> <span class=\"n\">out.</span>\n<span class=\"n\">Request</span> <span class=\"n\">timed</span> <span class=\"n\">out.</span>\n<span class=\"n\">Request</span> <span class=\"n\">timed</span> <span class=\"n\">out.</span>\n<span class=\"n\">Request</span> <span class=\"n\">timed</span> <span class=\"n\">out.</span>\n\n<span class=\"n\">Ping</span> <span class=\"n\">statistics</span> <span class=\"n\">for</span> <span class=\"mi\">20</span><span class=\"bp\">.</span><span class=\"mi\">205</span><span class=\"bp\">.</span><span class=\"mi\">243</span><span class=\"bp\">.</span><span class=\"mi\">166</span><span class=\"o\">:</span>\n    <span class=\"n\">Packets</span><span class=\"o\">:</span> <span class=\"n\">Sent</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"n\">Received</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">Lost</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"n\">loss</span><span class=\"o\">),</span>\n</code></pre></div>",
        "id": 418518659,
        "sender_full_name": "Michael",
        "timestamp": 1706461618
    },
    {
        "content": "<p>No how is it supposed to <em>work</em></p>",
        "id": 418518676,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706461631
    },
    {
        "content": "<p>I get that the regular methods don't work</p>",
        "id": 418518686,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706461645
    },
    {
        "content": "<p>but what are the non-regular methods that do?</p>",
        "id": 418518698,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706461656
    },
    {
        "content": "<p>how do you access anything from github at all?</p>",
        "id": 418518741,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706461683
    },
    {
        "content": "<p>is it just a matter of replacing occurrences of <code>github.com</code> with <code>github.cn</code> or whatever in the HTTP requests?</p>",
        "id": 418518808,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706461734
    },
    {
        "content": "<p>well, I can say what I did, but it's all workarounds:</p>\n<p>I run a shadowsocks server on a residential IP address in the United States. I run a shadowsocks client here, in China, giving me an encrypted tunnel to the US. Any traffic I can send through that tunnel is fine. I have git configured to proxy connections to <a href=\"http://github.com\">github.com</a> through that. (I also have Firefox configured to proxy almost all connections through it.)</p>\n<p>But <em>Windows</em>, overall, isn't willing to proxy through it as a general matter. So when elan.exe tries to download from <a href=\"http://github.com\">github.com</a>, that fails, because it's making the request to Windows and Windows is too stupid to know how to handle it. The workaround to <em>that</em> is to enable a VPN that forces all outgoing connections to use itself. But this is a very bad solution in general, because the great firewall will quickly pick up on it and block all my connections. (Theoretically, I could probably create something that appears to be such a coercive VPN to windows, but just sends all my traffic through the shadowsocks client, but I don't know how to do that...) Having the VPN enabled, as long as it hasn't yet been blocked, means that elan.exe's attempts to download stuff can succeed.</p>\n<p>(Technically, my shadowsocks tunnel appears to be some sort of grandfathered thing. It works without hiccups as long as the connection is coming from my home network. Trying to connect from my cell phone over the cellular network is instantly blocked. I don't know if the rules are different for home broadband vs cellular or what; it can't quite be that my broadband provider knows I'm foreign and gives me looser treatment, because my cell service is part of a bundle with the broadband. Not really relevant to the lean issues, but if someone <em>does</em> know more about this, I'd like to know it too.)</p>",
        "id": 418519450,
        "sender_full_name": "Michael",
        "timestamp": 1706462263
    },
    {
        "content": "<p>If lean hosted its stuff on a domain that wasn't github, then that domain wouldn't be blocked (assuming it was something specific to lean... any social media domain tends to be blocked) and the current system would work... as well as it's supposed to work.</p>",
        "id": 418519525,
        "sender_full_name": "Michael",
        "timestamp": 1706462306
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418518808\">said</a>:</p>\n<blockquote>\n<p>is it just a matter of replacing occurrences of <code>github.com</code> with <code>github.cn</code> or whatever in the HTTP requests?</p>\n</blockquote>\n<p>Replacing <code>github.com</code> with some other URL would work in that the great firewall would not object to that URL and the connection would go through. <code>github.com</code> is on a blacklist. But it wouldn't work, in the sense of installing lean, unless that other URL reached a server somewhere that provided the appropriate files.</p>\n<p>(Let me revise that a bit... as the ping showed, I can make a DNS request for <code>github.com</code> just fine. But I can't actually connect to it without a workaround, so what's on a blacklist is probably a set of IP addresses owned by github.)</p>",
        "id": 418519888,
        "sender_full_name": "Michael",
        "timestamp": 1706462640
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418518535\">said</a>:</p>\n<blockquote>\n<p>I'd be happy to work with someone in china to figure out how to make elan and cache work better with approved domains; I don't really know how the whole great firewall thing works in practice</p>\n</blockquote>\n<p>So, currently elan automatically reaches out to <a href=\"http://github.com\">github.com</a>. The great firewall thinks this is bad and drops the traffic. If it used a different domain that wasn't banned, that would pretty much be the end of things as far as the great firewall is concerned. But that would mean making a couple of changes:</p>\n<ul>\n<li>either elan would be switched from its current strategy of \"always use github, no matter what\" to \"always use <a href=\"http://lean4.net\">lean4.net</a> [for example], no matter what\", or there would have to be a way to configure elan to check the URL of the user's choice</li>\n<li>the relevant lean files would have to be made available somewhere other than github.</li>\n</ul>",
        "id": 418520396,
        "sender_full_name": "Michael",
        "timestamp": 1706463014
    },
    {
        "content": "<p>Wow! Is this what everyone in China has to do to get a reasonable Lean experience? This to me sounds like a problem which the community should be interested in solving. I know that last summer I had a student in China who wanted to work with me but could never get the system installed and I couldn't do anything to help them, I had no idea how to debug and fix the issues they were having, or whether the things I wanted to suggest would even work in China.</p>",
        "id": 418520413,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706463030
    },
    {
        "content": "<p>My favored solution would be to take some of the magic out of the VSCode installation script, though as has correctly been noted it would also be necessary to take some of the magic out of lake and elan, if that was the approach</p>",
        "id": 418520550,
        "sender_full_name": "Michael",
        "timestamp": 1706463130
    },
    {
        "content": "<p>Does elan not work even if you set <code>http_proxy</code> / <code>https_proxy</code> env vars to your SOCKS proxy?</p>",
        "id": 418520615,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463172
    },
    {
        "content": "<p>I'd expect the rust stdlib should respect those.</p>",
        "id": 418520622,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463178
    },
    {
        "content": "<p>The \"simple\" solution would be for the lean project to stop relying on github for free file hosting, and host its stuff on its own website, but that amounts to me making demands for other people to do work (and incur some expenses); I do not actually feel entitled to make this demand.</p>",
        "id": 418520644,
        "sender_full_name": "Michael",
        "timestamp": 1706463206
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418520615\">said</a>:</p>\n<blockquote>\n<p>Does elan not work even if you set <code>http_proxy</code> / <code>https_proxy</code> env vars to your SOCKS proxy?</p>\n</blockquote>\n<p>I tried to do that, but I don't guarantee that I did it correctly.</p>",
        "id": 418520665,
        "sender_full_name": "Michael",
        "timestamp": 1706463237
    },
    {
        "content": "<p>It'd take some chasing (of Windows  / elan source / Rust docs) to be sure I could tell you the right incantation I think. Maybe someone will know off-hand. To me initially though other than what you say (hosting mirrors of the files elsewhere) that seems like the right avenue to pursue.</p>",
        "id": 418520783,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463321
    },
    {
        "content": "<p>I guess first let's see what elan uses to do HTTP.</p>",
        "id": 418520810,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463355
    },
    {
        "content": "<p>do you have some example elan commands for me to play with? (to see whether I can get the connection to route properly)</p>",
        "id": 418520813,
        "sender_full_name": "Michael",
        "timestamp": 1706463356
    },
    {
        "content": "<p>Looks like it has 2 backends, one using curl and the other using <code>reqwest</code>. The latter definitely supports <code>https_proxy</code>, I'm sure curl does too.</p>",
        "id": 418520916,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463458
    },
    {
        "content": "<p><code>export https_proxy=socks5://yourproxy</code> then <code>elan toolchain download nightly</code> maybe</p>",
        "id": 418520946,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463482
    },
    {
        "content": "<p>just to be clear, <code>elan toolchain download nightly</code> won't do anything that I wouldn't have wanted?</p>",
        "id": 418521005,
        "sender_full_name": "Michael",
        "timestamp": 1706463529
    },
    {
        "content": "<p>it does nothing damaging to your system or irreversible</p>",
        "id": 418521053,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706463592
    },
    {
        "content": "<p>it downloads an additional lean toolchain that you probably won't be using much</p>",
        "id": 418521119,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706463612
    },
    {
        "content": "<p>Ah wait, so <code>elan</code> depends on <code>reqwest</code> but doesn't enable the <code>socks</code> feature. So I think that's not going to work on that backend (maybe still using curl though).</p>",
        "id": 418521140,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463622
    },
    {
        "content": "<p>I don't know what rust packaging norms are for enabling features of downstream deps but probably that's an easy fix to add.</p>",
        "id": 418521168,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463638
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">USAGE</span><span class=\"o\">:</span>\n    <span class=\"n\">elan.exe</span> <span class=\"n\">toolchain</span> <span class=\"bp\">&lt;</span><span class=\"n\">SUBCOMMAND</span><span class=\"bp\">&gt;</span>\n\n<span class=\"n\">FLAGS</span><span class=\"o\">:</span>\n    <span class=\"bp\">-</span><span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"c1\">--help    Prints help information</span>\n\n<span class=\"n\">SUBCOMMANDS</span><span class=\"o\">:</span>\n    <span class=\"n\">list</span>         <span class=\"n\">List</span> <span class=\"n\">installed</span> <span class=\"n\">toolchains</span>\n    <span class=\"n\">install</span>      <span class=\"n\">Install</span> <span class=\"n\">or</span> <span class=\"n\">update</span> <span class=\"n\">a</span> <span class=\"n\">given</span> <span class=\"n\">toolchain</span>\n    <span class=\"n\">uninstall</span>    <span class=\"n\">Uninstall</span> <span class=\"n\">a</span> <span class=\"n\">toolchain</span>\n    <span class=\"n\">link</span>         <span class=\"n\">Create</span> <span class=\"n\">a</span> <span class=\"n\">custom</span> <span class=\"n\">toolchain</span> <span class=\"kd\">by</span> <span class=\"n\">symlinking</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">directory</span>\n    <span class=\"n\">help</span>         <span class=\"n\">Prints</span> <span class=\"n\">this</span> <span class=\"n\">message</span> <span class=\"n\">or</span> <span class=\"n\">the</span> <span class=\"n\">help</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">given</span> <span class=\"n\">subcommand</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>there is no <code>download</code> subcommand</p>",
        "id": 418521174,
        "sender_full_name": "Michael",
        "timestamp": 1706463646
    },
    {
        "content": "<p>Sorry, <code>install</code>.</p>",
        "id": 418521185,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463660
    },
    {
        "content": "<p><code>elan toolchain install nightly</code></p>",
        "id": 418521195,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463667
    },
    {
        "content": "<p>with no attempt to proxy at all:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">PS</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Michael</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">bin</span><span class=\"bp\">&gt;</span> <span class=\"bp\">.\\</span><span class=\"n\">elan.exe</span> <span class=\"n\">toolchain</span> <span class=\"n\">install</span> <span class=\"n\">nightly</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">syncing</span> <span class=\"n\">channel</span> <span class=\"n\">updates</span> <span class=\"n\">for</span> <span class=\"bp\">'</span><span class=\"n\">nightly'</span>\n<span class=\"n\">thread</span> <span class=\"bp\">'</span><span class=\"n\">main'</span> <span class=\"n\">panicked</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">called</span> <span class=\"bp\">`</span><span class=\"n\">Result</span><span class=\"o\">::</span><span class=\"n\">unwrap</span><span class=\"o\">()</span><span class=\"bp\">`</span> <span class=\"n\">on</span> <span class=\"n\">an</span> <span class=\"bp\">`</span><span class=\"n\">Err</span><span class=\"bp\">`</span> <span class=\"n\">value</span><span class=\"o\">:</span>\n<span class=\"n\">Error</span> <span class=\"o\">{</span>\n  <span class=\"n\">description</span><span class=\"o\">:</span> <span class=\"s2\">\"Timeout was reached\"</span><span class=\"o\">,</span>\n  <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">28</span><span class=\"o\">,</span>\n  <span class=\"n\">extra</span><span class=\"o\">:</span> <span class=\"n\">Some</span><span class=\"o\">(</span><span class=\"s2\">\"Failed to connect to github.com port 443 after 21039 ms: Couldn't connect to server\"</span><span class=\"o\">)</span>\n<span class=\"o\">}</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"n\">src</span><span class=\"bp\">\\</span><span class=\"n\">elan</span><span class=\"bp\">-</span><span class=\"n\">utils</span><span class=\"bp\">\\</span><span class=\"n\">src</span><span class=\"bp\">\\</span><span class=\"n\">utils.rs</span><span class=\"o\">:</span><span class=\"mi\">514</span><span class=\"o\">:</span><span class=\"mi\">32</span>\n</code></pre></div>\n<p>(this is expected; I'm just posting it to be informational)</p>",
        "id": 418521291,
        "sender_full_name": "Michael",
        "timestamp": 1706463755
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418521168\">said</a>:</p>\n<blockquote>\n<p>I don't know what rust packaging norms are for enabling features of downstream deps but probably that's an easy fix to add.</p>\n</blockquote>\n<p>Not entirely sure what you are asking here, but I think we can just enable the <code>socks</code> feature in <code>elan</code> releases for everyone</p>",
        "id": 418521317,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706463787
    },
    {
        "content": "<p>Yeah that sounds nice then (I was asking essentially whether there's a way for end users to add features on install, but of course that makes no sense since install is a single binary in rust)</p>",
        "id": 418521399,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463852
    },
    {
        "content": "<p>for testing purposes, <span class=\"user-mention\" data-user-id=\"686884\">@Michael</span> could download elan manually and recompile it with that feature enabled, and then hopefully your <code>export</code> trick works</p>",
        "id": 418521403,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706463856
    },
    {
        "content": "<p>Let's see if it works anyhow with the curl backend I think.</p>",
        "id": 418521416,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463877
    },
    {
        "content": "<p>what do you mean by that?</p>",
        "id": 418521433,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706463903
    },
    {
        "content": "<p>Or is which backend is used hardcoded</p>",
        "id": 418521434,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463904
    },
    {
        "content": "<p>I don't recall <code>elan</code> having any option to switch out the backend</p>",
        "id": 418521446,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706463923
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418521433\">said</a>:</p>\n<blockquote>\n<p>what do you mean by that?</p>\n</blockquote>\n<p>(Stop me when I'm saying things you know are totally wrong, I'm sure you've looked at this more than I have)</p>",
        "id": 418521456,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463937
    },
    {
        "content": "<p>maybe it has one in the code but then that would also require a recompile</p>",
        "id": 418521458,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706463938
    },
    {
        "content": "<p>OK yeah I just saw...</p>",
        "id": 418521463,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463949
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/elan/blob/640358e252e6eda100ed4a96a993b2bbb97d0574/src/download/src/lib.rs#L20-L23\">https://github.com/leanprover/elan/blob/640358e252e6eda100ed4a96a993b2bbb97d0574/src/download/src/lib.rs#L20-L23</a></p>",
        "id": 418521473,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463960
    },
    {
        "content": "<p>But if there's no CLI option to swap then we're out of luck.</p>",
        "id": 418521517,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706463975
    },
    {
        "content": "<p>It looks liek the default is curl though: <a href=\"https://github.com/leanprover/elan/blob/640358e252e6eda100ed4a96a993b2bbb97d0574/Cargo.toml#L15\">https://github.com/leanprover/elan/blob/640358e252e6eda100ed4a96a993b2bbb97d0574/Cargo.toml#L15</a></p>",
        "id": 418521541,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706464014
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"686884\">@Michael</span> keep going, let's see what happens :)</p>",
        "id": 418521552,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706464024
    },
    {
        "content": "<p>There is an env var <code>ELAN_USE_REQWEST</code></p>",
        "id": 418521560,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706464036
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/elan/blob/640358e252e6eda100ed4a96a993b2bbb97d0574/src/elan-utils/src/utils.rs#L219C65-L219C81\">https://github.com/leanprover/elan/blob/640358e252e6eda100ed4a96a993b2bbb97d0574/src/elan-utils/src/utils.rs#L219C65-L219C81</a></p>",
        "id": 418521574,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706464046
    },
    {
        "content": "<p>Right I just found that too.</p>",
        "id": 418521579,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706464050
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">PS</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Michael</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">bin</span><span class=\"bp\">&gt;</span> <span class=\"bp\">$</span><span class=\"n\">env</span><span class=\"o\">:</span><span class=\"n\">http_proxy</span> <span class=\"bp\">=</span> <span class=\"s2\">\"http://localhost:9198\"</span>\n<span class=\"n\">PS</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Michael</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">bin</span><span class=\"bp\">&gt;</span> <span class=\"bp\">$</span><span class=\"n\">env</span><span class=\"o\">:</span><span class=\"n\">http_proxy</span>\n<span class=\"n\">http</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">localhost</span><span class=\"o\">:</span><span class=\"mi\">9198</span>\n<span class=\"n\">PS</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">Michael</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">bin</span><span class=\"bp\">&gt;</span> <span class=\"bp\">.\\</span><span class=\"n\">elan.exe</span> <span class=\"n\">toolchain</span> <span class=\"n\">install</span> <span class=\"n\">nightly</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">syncing</span> <span class=\"n\">channel</span> <span class=\"n\">updates</span> <span class=\"n\">for</span> <span class=\"bp\">'</span><span class=\"n\">nightly'</span>\n<span class=\"n\">thread</span> <span class=\"bp\">'</span><span class=\"n\">main'</span> <span class=\"n\">panicked</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">called</span> <span class=\"bp\">`</span><span class=\"n\">Result</span><span class=\"o\">::</span><span class=\"n\">unwrap</span><span class=\"o\">()</span><span class=\"bp\">`</span> <span class=\"n\">on</span> <span class=\"n\">an</span> <span class=\"bp\">`</span><span class=\"n\">Err</span><span class=\"bp\">`</span> <span class=\"n\">value</span><span class=\"o\">:</span>\n<span class=\"n\">Error</span> <span class=\"o\">{</span>\n  <span class=\"n\">description</span><span class=\"o\">:</span> <span class=\"s2\">\"Timeout was reached\"</span><span class=\"o\">,</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">28</span><span class=\"o\">,</span>\n  <span class=\"n\">extra</span><span class=\"o\">:</span> <span class=\"n\">Some</span><span class=\"o\">(</span><span class=\"s2\">\"Failed to connect to github.com port 443 after 21050 ms: Couldn't connect to server\"</span><span class=\"o\">)</span>\n<span class=\"o\">}</span><span class=\"bp\">'</span><span class=\"o\">,</span> <span class=\"n\">src</span><span class=\"bp\">\\</span><span class=\"n\">elan</span><span class=\"bp\">-</span><span class=\"n\">utils</span><span class=\"bp\">\\</span><span class=\"n\">src</span><span class=\"bp\">\\</span><span class=\"n\">utils.rs</span><span class=\"o\">:</span><span class=\"mi\">514</span><span class=\"o\">:</span><span class=\"mi\">32</span>\n<span class=\"n\">note</span><span class=\"o\">:</span> <span class=\"n\">run</span> <span class=\"k\">with</span> <span class=\"bp\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"bp\">`</span> <span class=\"n\">environment</span> <span class=\"kd\">variable</span> <span class=\"n\">to</span> <span class=\"n\">display</span> <span class=\"n\">a</span> <span class=\"n\">backtrace</span>\n</code></pre></div>\n<p>Same error with proxy given as <code>http://</code>. (I know that's not <code>socks5://</code>, but it works in other contexts; I'm about to try <code>socks5://</code>.)</p>",
        "id": 418521918,
        "sender_full_name": "Michael",
        "timestamp": 1706464353
    },
    {
        "content": "<p>wait, better news! It appears to work after setting <code>$env:https_proxy = \"http://localhost:9198\"</code></p>",
        "id": 418521975,
        "sender_full_name": "Michael",
        "timestamp": 1706464429
    },
    {
        "content": "<p>I should note that this exact solution is unlikely to work well for actual Chinese people, who will have a harder time using a US residential IP address. Running a shadowsocks tunnel to a major provider like DigitalOcean gets blocked; the residential IP is a load-bearing part of my setup.</p>",
        "id": 418522071,
        "sender_full_name": "Michael",
        "timestamp": 1706464512
    },
    {
        "content": "<p>The other relevant internet-hitting operations:</p>\n<ul>\n<li><code>git clone https://github.com/leanprover-community/mathlib4</code></li>\n<li><code>lake exe cache</code> from mathlib4 folder (which will clone all the dependent repos from github)</li>\n<li><code>lake exe cache get</code> (which will download the cache files from azure)</li>\n</ul>",
        "id": 418522157,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706464577
    },
    {
        "content": "<p>(on the other hand, VPN use in Chinese universities is routine; I'd expect professors and students to be aware of workarounds that are available to them?)</p>",
        "id": 418522183,
        "sender_full_name": "Michael",
        "timestamp": 1706464609
    },
    {
        "content": "<p>If this works, I think we will want to document how to set <code>https_proxy</code> but leave it to them to figure out what proxy to supply</p>",
        "id": 418522221,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706464654
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"686884\">Michael</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418521975\">said</a>:</p>\n<blockquote>\n<p>wait, better news! It appears to work after setting <code>$env:https_proxy = \"http://localhost:9198\"</code></p>\n</blockquote>\n<p>(which syntax you use will have to do with whether you're using Powershell, which it sounds like you are, or git bash, and of course where your proxy is listening on)</p>\n<p>But glad it worked!</p>",
        "id": 418522386,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706464804
    },
    {
        "content": "<p>Are there more advanced techniques that need more than just a proxy that we need to prepare for?</p>",
        "id": 418522418,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706464820
    },
    {
        "content": "<p>I don't think it is feasible for us to get off github, because it's not just lean but also the whole package registry that we'd have to host (and handle authentication for...)</p>",
        "id": 418522427,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706464836
    },
    {
        "content": "<p>you have access controls on your packages? I kind of figured they were available to everyone</p>",
        "id": 418522470,
        "sender_full_name": "Michael",
        "timestamp": 1706464892
    },
    {
        "content": "<p>we have access controls on pushing new content to existing packages</p>",
        "id": 418522479,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706464909
    },
    {
        "content": "<p>or rather, github does, they are just github projects and the owner decides what they want to push</p>",
        "id": 418522536,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706464943
    },
    {
        "content": "<p>I think a normal workflow would be to keep package creation on github, and have some kind of automatic process that mirrors artifacts over to the lean website -- but again, don't take that as a demand</p>",
        "id": 418522585,
        "sender_full_name": "Michael",
        "timestamp": 1706464992
    },
    {
        "content": "<p>ok, for git in specific, that works for me based on configuring the git variable <code>http.proxy</code>; the command to set that is <code>git config --global http.proxy http://host:port</code>, where <code>http://host:port</code> is whatever the path to your proxy is. Supposedly there are ways to set proxy variables for specific domains.</p>",
        "id": 418523105,
        "sender_full_name": "Michael",
        "timestamp": 1706465426
    },
    {
        "content": "<p>don't know whether git will also look for the environment variable; haven't checked</p>",
        "id": 418523128,
        "sender_full_name": "Michael",
        "timestamp": 1706465448
    },
    {
        "content": "<p>with the <code>https_proxy</code> env variable set, <code>lake.exe exe cache</code> appears to work</p>",
        "id": 418523278,
        "sender_full_name": "Michael",
        "timestamp": 1706465598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"686884\">Michael</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418523128\">said</a>:</p>\n<blockquote>\n<p>don't know whether git will also look for the environment variable; haven't checked</p>\n</blockquote>\n<p>It should. (But I'd leave your git-specific config anyhow).</p>",
        "id": 418523534,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706465846
    },
    {
        "content": "<p><code>lake.exe exe cache get</code> also appears to work (with the <code>https_proxy</code> env var set)</p>",
        "id": 418523661,
        "sender_full_name": "Michael",
        "timestamp": 1706465971
    },
    {
        "content": "<p>However, I have a remaining concern, which is that the documented installation procedure doesn't involve me running these commands. Instead, it says I should install a VSCode addon that runs them for me. The env vars would have to be set within that environment.</p>\n<p>(My other complaint about the VSCode-script approach to setup is that, when the installation script breaks, I have to go look at the error log, which is annoying... and if the error log has produced too much output, VSCode <strong>truncates</strong> it, which is much worse than just being annoying.)</p>",
        "id": 418523809,
        "sender_full_name": "Michael",
        "timestamp": 1706466093
    },
    {
        "content": "<p>VSCode has its own HTTP proxy setting, but I attempted to use that and it didn't help with the lake commands</p>",
        "id": 418523916,
        "sender_full_name": "Michael",
        "timestamp": 1706466181
    },
    {
        "content": "<p>I suspect VSCode should respect <code>https_proxy</code> as well, any good HTTP client should AIUI.</p>",
        "id": 418524240,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706466473
    },
    {
        "content": "<p>I.e. if you run <code>code .</code> after that export <em>hopefully</em> the install works the \"normal\" way.</p>",
        "id": 418524294,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706466494
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418522221\">said</a>:</p>\n<blockquote>\n<p>If this works, I think we will want to document how to set <code>https_proxy</code> but leave it to them to figure out what proxy to supply</p>\n</blockquote>\n<p>this sounds fairly reasonable; summing up what I see as the requirements for this approach:</p>\n<ol start=\"0\">\n<li>(optional?) \"here's how to set git's <code>http.proxy</code> variable\"</li>\n<li>\"you'll need to set an environment variable named <code>https_proxy</code>\"</li>\n<li>\"here's how to do that on the major platforms\"</li>\n<li>\"here's how to set it so that it's visible to the installation script running from VSCode\"</li>\n</ol>\n<p>It is possible to make a permanent change to the Windows environment variables using a GUI interface that is available in a couple of places, but that's actually something I'd prefer not to do when the variable in question is <code>https_proxy</code>.</p>",
        "id": 418524385,
        "sender_full_name": "Michael",
        "timestamp": 1706466597
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418524294\">said</a>:</p>\n<blockquote>\n<p>I.e. if you run <code>code .</code> after that export <em>hopefully</em> the install works the \"normal\" way.</p>\n</blockquote>\n<p>this is not knowledge that I have; I had never previously used VSCode. Instructions for how to resume the installation script within VSCode after it breaks (and after manually setting the environment variable) would meet my needs.</p>",
        "id": 418524515,
        "sender_full_name": "Michael",
        "timestamp": 1706466690
    },
    {
        "content": "<p>(+1 for that list), but I think what you said before is important to consider though, I don't know that everyone who runs into this is going to have a SOCKS proxy.</p>",
        "id": 418524525,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706466707
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"686884\">Michael</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418524515\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418524294\">said</a>:</p>\n<blockquote>\n<p>I.e. if you run <code>code .</code> after that export <em>hopefully</em> the install works the \"normal\" way.</p>\n</blockquote>\n<p>this is not knowledge that I have; I had never previously used VSCode. Instructions for how to resume the installation script within VSCode after it breaks (and after manually setting the environment variable) would meet my needs.</p>\n</blockquote>\n<p>Right not discounting anything you've said about improving docs of course!</p>",
        "id": 418524536,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706466722
    },
    {
        "content": "<p>(Though at that point, things are getting pretty hacky and I'm pretty sure there will be people who get frustrated and give up. I have a high tolerance for futzing around with the installation script.)</p>",
        "id": 418524625,
        "sender_full_name": "Michael",
        "timestamp": 1706466763
    },
    {
        "content": "<p>Given the way that people in China are apparently supposed to connect to the internet, it makes me despair for any general solution we can just package up in a script that a child could run</p>",
        "id": 418524777,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706466896
    },
    {
        "content": "<p>Right, as long as you're seen as a threat (because of your domain), people will need to provide their own solution for getting past the firewall, and mostly what you need to do is allow them to do that.</p>\n<p>The current system is painful, in my eyes, because it has several layers, VSCode running an installation script that calls various executables, and providing the proxy at the top layer, the VSCode <code>Http: Proxy</code> setting, didn't work. So I had to peek inside and try to manipulate the stuff in the middle, and in the event I didn't quite know how.</p>\n<p>Potentially, the installation script might check the VSCode setting and, if present, supply it as an environment variable when it calls <code>lake</code> and/or <code>git</code>? That still requires the user to have a working proxy, but it centralizes the method of supplying it to the installation process.</p>",
        "id": 418525461,
        "sender_full_name": "Michael",
        "timestamp": 1706467444
    },
    {
        "content": "<p>And at the very least it makes documenting \"if you need to use a proxy, here's the place where you tell the system about it\" easier, if it works.</p>",
        "id": 418525508,
        "sender_full_name": "Michael",
        "timestamp": 1706467503
    },
    {
        "content": "<p>though then again...</p>",
        "id": 418525610,
        "sender_full_name": "Michael",
        "timestamp": 1706467574
    },
    {
        "content": "<p>The VSCode setting specifically states that, if not set within VSCode, it will inherit from the <code>https_proxy</code> environment variable. So if that is set globally, I guess that sort of amounts to the same thing, except that setting the environment variable is what the script really wants and setting the VSCode variable is what the user wants to have to do instead.</p>",
        "id": 418525697,
        "sender_full_name": "Michael",
        "timestamp": 1706467672
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/7quUswlrmZHm-TnIE8Jqlc8y/vscode_setting.png\">vscode_setting.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/7quUswlrmZHm-TnIE8Jqlc8y/vscode_setting.png\" title=\"vscode_setting.png\"><img src=\"/user_uploads/3121/7quUswlrmZHm-TnIE8Jqlc8y/vscode_setting.png\"></a></div>",
        "id": 418525882,
        "sender_full_name": "Michael",
        "timestamp": 1706467817
    },
    {
        "content": "<p>the other approach to a general script, the one that appeals to me personally, is to package things up in a script that doesn't reach out to the internet, and to have the instructions be more along the lines of</p>\n<ol>\n<li>Download this package. [link]</li>\n<li>Put it somewhere appropriate.</li>\n<li>Run this script [link], which assumes you've already downloaded the right stuff.</li>\n</ol>",
        "id": 418526060,
        "sender_full_name": "Michael",
        "timestamp": 1706468008
    },
    {
        "content": "<p>(another advantage of that approach is that it naturally enables someone who doesn't have a proxy to copy a working lean installation from someone who does)</p>",
        "id": 418528888,
        "sender_full_name": "Michael",
        "timestamp": 1706470199
    },
    {
        "content": "<p>Just dropping a link to an elan issue about this <a href=\"https://github.com/leanprover/elan/issues/117\">https://github.com/leanprover/elan/issues/117</a>, where I noticed that there has been simultaneous (but perhaps disconnected?) discussion.</p>",
        "id": 418795058,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1706606159
    },
    {
        "content": "<p>Well, then I'll also mention for anyone who ends up finding this thread -- on the subject of \"how many users is this applicable to\" -- if you're behind the firewall, what you really need is any SSH'able host outside the firewall that you can get to, because anything you can SSH to you can also SOCKS proxy through (because SSH is just that good, hooray). The command you need is usually <code>ssh -D 3737 YOURSSHHOST -N</code> (where 3737 can be any port number you like). And then once you run that it will sit there looking like it's not doing anything, but if you open a second terminal you can now set <code>export https_proxy='socks://127.0.0.1:3737'</code> and proceed with the above.</p>",
        "id": 418836390,
        "sender_full_name": "Julian Berman",
        "timestamp": 1706621612
    },
    {
        "content": "<p>I doubt this helps windows users, but on linux and mac I have had huge success with <code>sshuttle</code>. It completely seamlessly redirects all your network traffic through an ssh connection, without any per-application proxy configuration.</p>",
        "id": 418942308,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1706659087
    },
    {
        "content": "<p>Another issue about http_proxy: <a href=\"https://github.com/leanprover/lean4/issues/3211\">https://github.com/leanprover/lean4/issues/3211</a></p>",
        "id": 418974628,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1706681694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20installation.20issues/near/418836390\">said</a>:</p>\n<blockquote>\n<p>Well, then I'll also mention for anyone who ends up finding this thread -- on the subject of \"how many users is this applicable to\" -- if you're behind the firewall, what you really need is any SSH'able host outside the firewall that you can get to, because anything you can SSH to you can also SOCKS proxy through (because SSH is just that good, hooray). The command you need is usually <code>ssh -D 3737 YOURSSHHOST -N</code> (where 3737 can be any port number you like). And then once you run that it will sit there looking like it's not doing anything, but if you open a second terminal you can now set <code>export https_proxy='socks://127.0.0.1:3737'</code> and proceed with the above.</p>\n</blockquote>\n<p>That will work for a while, likely long enough to get lean installed, but it's not stable; a socks-over-ssh tunnel will get blocked within a couple of days.</p>",
        "id": 419101338,
        "sender_full_name": "Michael",
        "timestamp": 1706726010
    },
    {
        "content": "<p>if it's a machine that you need to access for other reasons, running a socks proxy to it is a good way to get yourself cut off from it for an extended period</p>",
        "id": 419101656,
        "sender_full_name": "Michael",
        "timestamp": 1706726143
    }
]