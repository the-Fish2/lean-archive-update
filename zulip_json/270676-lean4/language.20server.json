[
    {
        "content": "<p>I usually develop with nix and use nix develop to set <code>LEAN_PATH</code> and <code>LEAN_SRC_PATH</code> with the respective dependencies. I also add local directories with to <code>LEAN_PATH</code>, but this isn't perfect. Because the language server <code>lean --server</code> complains that there is no .olean files in the local dir. Why can't it just compile them? I want to make several improvements to the Lsp so that it becomes more nix friendly. </p>\n<p>On a different note: Would it be possible to integrate the lean parser with <code>tree-sitter</code> so that one doesn't have to reimplement the parser there?</p>",
        "id": 271105120,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1644314752
    },
    {
        "content": "<p>You should not have to do any of this. <code>lean-dev/emacs-dev/vscode-dev</code> take care of compiling everything on the fly.</p>",
        "id": 271105597,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644315001
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"433842\">Anders Christiansen Sørby</span> <a href=\"#narrow/stream/270676-lean4/topic/language.20server/near/271105120\">said</a>:</p>\n<blockquote>\n<p>On a different note: Would it be possible to integrate the lean parser with <code>tree-sitter</code> so that one doesn't have to reimplement the parser there?</p>\n</blockquote>\n<p>A static grammar like Tree-sitter's will never fully understand Lean's dynamic syntax. But writing a tool that generates a Tree-sitter grammar from a given set of Lean modules might be possible.</p>",
        "id": 271106012,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644315237
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/language.20server/near/271105597\">said</a>:</p>\n<blockquote>\n<p>You should not have to do any of this. <code>lean-dev/emacs-dev/vscode-dev</code> take care of compiling everything on the fly.</p>\n</blockquote>\n<p>Yes, but I'm using helix editor and it would be nice if the language server itself took care of generating olean files IMO.</p>",
        "id": 271109523,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1644317274
    },
    {
        "content": "<p>Now I have to do it manually with lean</p>",
        "id": 271109604,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1644317304
    },
    {
        "content": "<p>Then use <code>lean-dev</code> from your editor, just like <code>emacs-dev</code> and <code>vscode-dev</code> do</p>",
        "id": 271109675,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644317366
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> has been working on a tree sitter parser iiuc <a href=\"https://github.com/Julian/tree-sitter-lean\">https://github.com/Julian/tree-sitter-lean</a></p>",
        "id": 271110504,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1644317853
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/270676-lean4/topic/language.20server/near/271105597\">said</a>:</p>\n<blockquote>\n<p>You should not have to do any of this. <code>lean-dev/emacs-dev/vscode-dev</code> take care of compiling everything on the fly.</p>\n</blockquote>\n<p>I missed that part. Maybe move/copy it to an editor specific section?</p>",
        "id": 271111011,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1644318162
    },
    {
        "content": "<p>I am new to Lean 4 and I'm having a considerable amount of grief trying to even be able to work with this language in VSCode. </p>\n<p>For example,  working off of the <code>greeting</code> example in the text, I now bring in the <code>mathlib</code> as a dependency in my lakefile.lean:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"bp\">«</span><span class=\"n\">greeting</span><span class=\"bp\">»</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add package configuration options here</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"bp\">«</span><span class=\"n\">Greeting</span><span class=\"bp\">»</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add library configuration options here</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_exe</span> <span class=\"bp\">«</span><span class=\"n\">greeting</span><span class=\"bp\">»</span> <span class=\"n\">where</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n  <span class=\"c1\">-- Enables the use of the Lean interpreter by the executable (e.g.,</span>\n  <span class=\"c1\">-- `runFrontend`) at the expense of increased binary size on Linux.</span>\n  <span class=\"c1\">-- Remove this line if you do not need such functionality.</span>\n  <span class=\"n\">supportInterpreter</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4\"</span>\n</code></pre></div>\n<p>However, when I go to now work with <code>Greeting/Basic.lean</code> and start typing</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span>\n</code></pre></div>\n<p>I immediately am hit with an error: <code>import failed, trying to import module with anonymous name</code> instead of a tooltip, or suggestion, or anything I can work with. I don't see any suggestions for packages I can import here, just an error.</p>\n<p>I followed the set up instructions to work with Lean 4 in VSCode, running on macOS. Just for sake of posterity, here are my versions:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\">❯ lean --version</span>\n<span class=\"go\">Lean (version 4.7.0, aarch64-apple-darwin, commit 6fce8f7d5cd1, Release)</span>\n\n<span class=\"go\">❯ elan --version</span>\n<span class=\"go\">elan 3.1.1 (71ddc6633 2024-02-22)</span>\n\n<span class=\"go\">❯ lake --version</span>\n<span class=\"go\">Lake version 5.0.0-6fce8f7 (Lean version 4.7.0)</span>\n</code></pre></div>\n<p>Am I doing something wrong here? What are the ways I can improve my developer experience in writing functional programs with Lean so that I can get the most out of a modern IDE?</p>\n<p>I also apologize if this is not in the correct post location. This is my first post on the Lean 4 Zulip so please help me in suggesting the right place this should have gone! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> </p>\n<p>I look forward to being able to work with this language both for FP and proof assistance. I just need to get over the hump of setting up a DE for this!</p>",
        "id": 434508130,
        "sender_full_name": "Colin Roberts",
        "timestamp": 1713625098
    },
    {
        "content": "<p>It wouldn't surprise me at all if everything were working fine here. <code>import</code> by itself attempts to import a file with no name, which corresponds to the error message. Try <code>import Lean</code>?</p>",
        "id": 434508800,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713625764
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"711468\">Colin Roberts</span> <a href=\"#narrow/stream/270676-lean4/topic/language.20server/near/434508130\">said</a>:</p>\n<blockquote>\n<p>I am new to Lean 4 and I'm having a considerable amount of grief trying to even be able to work with this language in VSCode. </p>\n<p>For example,  working off of the <code>greeting</code> example in the text, I now bring in the <code>mathlib</code> as a dependency in my lakefile.lean:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"bp\">«</span><span class=\"n\">greeting</span><span class=\"bp\">»</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add package configuration options here</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"bp\">«</span><span class=\"n\">Greeting</span><span class=\"bp\">»</span> <span class=\"n\">where</span>\n  <span class=\"c1\">-- add library configuration options here</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_exe</span> <span class=\"bp\">«</span><span class=\"n\">greeting</span><span class=\"bp\">»</span> <span class=\"n\">where</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n  <span class=\"c1\">-- Enables the use of the Lean interpreter by the executable (e.g.,</span>\n  <span class=\"c1\">-- `runFrontend`) at the expense of increased binary size on Linux.</span>\n  <span class=\"c1\">-- Remove this line if you do not need such functionality.</span>\n  <span class=\"n\">supportInterpreter</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4\"</span>\n</code></pre></div>\n<p>However, when I go to now work with <code>Greeting/Basic.lean</code> and start typing</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span>\n</code></pre></div>\n<p>I immediately am hit with an error: <code>import failed, trying to import module with anonymous name</code> instead of a tooltip, or suggestion, or anything I can work with. I don't see any suggestions for packages I can import here, just an error.</p>\n<p>I followed the set up instructions to work with Lean 4 in VSCode, running on macOS. Just for sake of posterity, here are my versions:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\">❯ lean --version</span>\n<span class=\"go\">Lean (version 4.7.0, aarch64-apple-darwin, commit 6fce8f7d5cd1, Release)</span>\n\n<span class=\"go\">❯ elan --version</span>\n<span class=\"go\">elan 3.1.1 (71ddc6633 2024-02-22)</span>\n\n<span class=\"go\">❯ lake --version</span>\n<span class=\"go\">Lake version 5.0.0-6fce8f7 (Lean version 4.7.0)</span>\n</code></pre></div>\n<p>Am I doing something wrong here? What are the ways I can improve my developer experience in writing functional programs with Lean so that I can get the most out of a modern IDE?</p>\n<p>I also apologize if this is not in the correct post location. This is my first post on the Lean 4 Zulip so please help me in suggesting the right place this should have gone! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> </p>\n<p>I look forward to being able to work with this language both for FP and proof assistance. I just need to get over the hump of setting up a DE for this!</p>\n</blockquote>\n<p>What happens if you trigger the auto-completion after <code>import</code> using Ctrl+Space? (Option+Esc on MacOS, I believe)</p>",
        "id": 434508875,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1713625814
    },
    {
        "content": "<p>PS this question is not quite in the right place -- you should start a new thread rather than just continuing someone else's on another question.</p>",
        "id": 434514614,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713629455
    }
]