[
    {
        "content": "<p>The following definition takes around 2 seconds to compile:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Elab.Tactic</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"n\">TacticM</span>\n<span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"n\">logInfo</span> <span class=\"s2\">\"\"</span>\n</code></pre></div>\n<p>Why is this and can it be fixed?</p>",
        "id": 418756242,
        "sender_full_name": "Jovan Gerbscheid",
        "timestamp": 1706581230
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">profiler.threshold</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>reveals that all the time is spent in compilation.</p>",
        "id": 418769318,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1706591610
    },
    {
        "content": "<p>It seems to be a one-off cost: adding <code>def g : M Unit := logInfo \"\"</code> adds no time.</p>",
        "id": 418769388,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1706591646
    },
    {
        "content": "<p><del>Could you open a bug report?</del></p>\n<p>(Please say explicitly that without using the <code>abbrev</code> it is fine, to be clear.)</p>",
        "id": 418769455,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1706591733
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/270676-lean4/topic/slow.20compilation.20of.20logInfo/near/418769388\">said</a>:</p>\n<blockquote>\n<p>It seems to be a one-off cost: adding <code>def g : M Unit := logInfo \"\"</code> adds no time.</p>\n</blockquote>\n<p>It appears to be the cost of specializing <code>Lean.log</code> and <code>Lean.logAt</code> for a new monad</p>",
        "id": 418772340,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706594266
    },
    {
        "content": "<p>the new compiler doesn't seem to have as much trouble, so I'm guessing this won't be fixed</p>",
        "id": 418772464,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706594394
    },
    {
        "content": "<p>What is the new compiler? Will it come with the next release of Lean?</p>",
        "id": 418815635,
        "sender_full_name": "Jovan Gerbscheid",
        "timestamp": 1706613731
    },
    {
        "content": "<p>That's item 21 in <a href=\"https://lean-fro.org/about/roadmap/\">https://lean-fro.org/about/roadmap/</a>, corresponding to the <a href=\"https://github.com/leanprover/lean4/issues?q=is%3Aopen+is%3Aissue+label%3A%22depends+on+new+code+generator%22\">\"depends on new code generator\" label</a> in the Lean 4 issue tracker. The roadmap says work on it is \"[re]starting on year 2\", but I don't know if year 1 started when the FRO was founded (late July) or when the roadmap was published (late November, so basically year 1 = 2024).</p>",
        "id": 418823112,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706616699
    },
    {
        "content": "<p>The former</p>",
        "id": 418824605,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1706617311
    }
]