[
    {
        "content": "<p>I just noticed something very weird:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">True</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">∃</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">    </span><span class=\"c1\">-- Using apply with a hole create a new goal right here</span>\n<span class=\"w\">    </span><span class=\"c1\">-- apply Nat.exists_eq_add_of_le (?_ : 2 ≤ 5)</span>\n<span class=\"w\">    </span><span class=\"c1\">-- Using rcases teleports the new goal outside of the have block</span>\n<span class=\"w\">    </span><span class=\"n\">rcases</span><span class=\"w\"> </span><span class=\"n\">Nat</span><span class=\"bp\">.</span><span class=\"n\">exists_eq_add_of_le</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">?_</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">hk</span><span class=\"bp\">⟩</span>\n<span class=\"w\">    </span><span class=\"n\">exact</span><span class=\"w\"> </span><span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">hk</span><span class=\"bp\">⟩</span>\n<span class=\"w\">  </span><span class=\"n\">trivial</span><span class=\"w\"> </span><span class=\"c1\">-- This trivial solves 2 ≤ 5</span>\n<span class=\"w\">  </span><span class=\"n\">trivial</span><span class=\"w\"> </span><span class=\"c1\">-- this one takes care of True</span>\n</code></pre></div>",
        "id": 440575664,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716583816
    },
    {
        "content": "<p>This happens with lean4.8.0-rc2. And it <em>is</em> a mwe, no import is required.</p>",
        "id": 440575856,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716583911
    },
    {
        "content": "<p>I might guess that it's that <code>rcases</code> is forgetting to capture the metavariables and create new goals, but <code>have</code> then captures the metavariables in the resulting proof term (for example, <code>have : True := ?_</code> creates a new goal).</p>\n<p>This has a similar effect, but with swapped goals for some reason:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">True</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">∃</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">    </span><span class=\"k\">let</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">Nat</span><span class=\"bp\">.</span><span class=\"n\">exists_eq_add_of_le</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">?_</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">≤</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"k\">by</span>\n<span class=\"w\">      </span><span class=\"n\">rcases</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">hk</span><span class=\"bp\">⟩</span>\n<span class=\"w\">      </span><span class=\"n\">exact</span><span class=\"w\"> </span><span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">hk</span><span class=\"bp\">⟩</span>\n<span class=\"w\">  </span><span class=\"n\">trivial</span><span class=\"w\"> </span><span class=\"c1\">-- this one takes care of True</span>\n<span class=\"w\">  </span><span class=\"n\">trivial</span><span class=\"w\"> </span><span class=\"c1\">-- This trivial solves 2 ≤ 5</span>\n</code></pre></div>",
        "id": 440576860,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1716584407
    },
    {
        "content": "<p>I’ve hit this issue again so I opened <a href=\"https://github.com/leanprover/lean4/issues/4331\">https://github.com/leanprover/lean4/issues/4331</a></p>",
        "id": 442363801,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1717446207
    }
]