[
    {
        "content": "<p>Hello,<br>\nI am new here. I am trying to get the information in the infoview as a string. Is there an easy way to do this using the Lean language and within the Lean environment? In the infoview, I'm only interested in the goals.</p>\n<p>I would guess methods such as Linarith, simp, exact?, and apply? also extract the current goal as a string and then work on  the string.  Is that so? Where can I find the implementation of exact? and apply? ?</p>",
        "id": 428080449,
        "sender_full_name": "Roozbeh Yousefzadeh",
        "timestamp": 1711010907
    },
    {
        "content": "<p>No, nothing uses String representations of the goal.</p>",
        "id": 428080586,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711010975
    },
    {
        "content": "<p>The implementation of <code>exact?</code> is at <a href=\"https://github.com/leanprover/lean4/blob/master/src/Lean/Elab/Tactic/LibrarySearch.lean\">https://github.com/leanprover/lean4/blob/master/src/Lean/Elab/Tactic/LibrarySearch.lean</a> and imports thereof.</p>",
        "id": 428080729,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711011024
    },
    {
        "content": "<p>You might find the <a href=\"https://leanprover-community.github.io/lean4-metaprogramming-book/\">Lean metaprogramming book</a> a reasonable place to start to learn how to manipulate goals programmatically.</p>",
        "id": 428080811,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711011066
    },
    {
        "content": "<p>Thank you for your helpful response.</p>",
        "id": 428081188,
        "sender_full_name": "Roozbeh Yousefzadeh",
        "timestamp": 1711011235
    },
    {
        "content": "<p>If I were to calculate the length of my current goal (i.e., just knowing how many characters there are in the current goal), is there a way to do that within lean?</p>",
        "id": 428081754,
        "sender_full_name": "Roozbeh Yousefzadeh",
        "timestamp": 1711011475
    },
    {
        "content": "<p>e.g.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">Lean</span> <span class=\"n\">Lean.Elab.Tactic</span> <span class=\"n\">Lean.Meta</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">run_tac</span> <span class=\"k\">do</span>\n    <span class=\"k\">let</span> <span class=\"n\">g</span> <span class=\"bp\">←</span> <span class=\"n\">getMainTarget</span>\n    <span class=\"k\">let</span> <span class=\"n\">s</span> <span class=\"bp\">←</span> <span class=\"n\">ppExpr</span> <span class=\"n\">g</span>\n    <span class=\"n\">logInfo</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"{(toString s).length}\"</span>\n  <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 428092575,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1711015529
    },
    {
        "content": "<p>Perfect, thanks. I can now build on this function doing more sophisticated calculations.</p>\n<p>The meta programming book is great. I came across the TacticM and Lean.saveState. </p>\n<p>I am trying to develop an automatic system for proving theorems.</p>",
        "id": 428095223,
        "sender_full_name": "Roozbeh Yousefzadeh",
        "timestamp": 1711016464
    }
]