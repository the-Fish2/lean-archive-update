[
    {
        "content": "<p>I noticed a little issue with the meta flags. Consider this CI pipeline: <a href=\"https://github.com/leanprover-community/mathlib4_docs/blob/30f98df234e610b33b4139eed8247f020325c2b4/.github/workflows/docs.yaml\">https://github.com/leanprover-community/mathlib4_docs/blob/30f98df234e610b33b4139eed8247f020325c2b4/.github/workflows/docs.yaml</a> we always run with -kdoc=on but the cache is pretty much ignored. It gets downloaded and unpacked but once we reach the compile mathlib4 step it will recompile mathlib plus deps from scratch.</p>\n<p>I assume that this is a cache invalidation issue in Lake? CC <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span></p>",
        "id": 411177672,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704370026
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>Lake does not use the configuration options as part of the mdoule trace and I do not believe doc-gen4 does either. However, <a href=\"https://github.com/leanprover-community/mathlib4/blob/95f91f8e66f14c0eecde8da6dbfeff39d44cbd81/Cache/Hashing.lean#L70\">cache does hash the <code>lake-manifest.json</code></a>, which could cause the problem?</p>",
        "id": 411236227,
        "sender_full_name": "Mac Malone",
        "timestamp": 1704391413
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span> <a href=\"#narrow/stream/270676-lean4/topic/Cache.20vs.20Lake.20flags/near/411236227\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span>Lake does not use the configuration options as part of the mdoule trace and I do not believe doc-gen4 does either. However, <a href=\"https://github.com/leanprover-community/mathlib4/blob/95f91f8e66f14c0eecde8da6dbfeff39d44cbd81/Cache/Hashing.lean#L70\">cache does hash the <code>lake-manifest.json</code></a>, which could cause the problem?</p>\n</blockquote>\n<p>Okay i updated it to this: <a href=\"https://github.com/leanprover-community/mathlib4_docs/blob/main/.github/workflows/docs.yaml#L37-L52\">https://github.com/leanprover-community/mathlib4_docs/blob/main/.github/workflows/docs.yaml#L37-L52</a></p>\n<p>in the CI run: <a href=\"https://github.com/leanprover-community/mathlib4_docs/actions/runs/7413174666/job/20171569945\">https://github.com/leanprover-community/mathlib4_docs/actions/runs/7413174666/job/20171569945</a> it downloads 4k cache files and then begins to build mathlib from scratch :(</p>",
        "id": 411237183,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704391789
    },
    {
        "content": "<p>IMO this is why the <code>-Kdoc=on</code> design with optional dependencies is bad. It's <em>not</em> a dependency of mathlib, and the cache files are built without it</p>",
        "id": 411237393,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704391873
    },
    {
        "content": "<p>But that is a separate concern isn't it?</p>",
        "id": 411237435,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704391900
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> what is your desired solution? The cache works, or the cache is not run?</p>",
        "id": 411237438,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704391902
    },
    {
        "content": "<p>The cache <em>is</em> already downloaded, why does lake not respect it?</p>",
        "id": 411237471,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704391919
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Cache.20vs.20Lake.20flags/near/411237438\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> what is your desired solution? The cache works, or the cache is not run?</p>\n</blockquote>\n<p>the cache works I would say, doc-gen itself only runs like 10 min.</p>",
        "id": 411237563,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704391953
    },
    {
        "content": "<p>Why do you need to insert docgen as an additional dependency of mathlib?</p>",
        "id": 411237589,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704391977
    },
    {
        "content": "<p>Because doc-gen operates as a lake facet right now.</p>",
        "id": 411237635,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704392000
    },
    {
        "content": "<p>Do you need elaboration outputs or are oleans sufficient?</p>",
        "id": 411237657,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392012
    },
    {
        "content": "<p>No I get that much, I'm asking about the ideal future design here</p>",
        "id": 411237720,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392042
    },
    {
        "content": "<p>I need information from the oleans and from the lakefile (for source linking)</p>",
        "id": 411237773,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704392049
    },
    {
        "content": "<p>Doesn't <code>lake env</code> already give you what you need with <code>LEAN_SRC_PATH</code> then?</p>",
        "id": 411237855,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392097
    },
    {
        "content": "<p>If so, doc-gen could just be a standalone executable you run under <code>lake env</code>, similar to e.g. <code>lean4checker</code></p>",
        "id": 411237915,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392129
    },
    {
        "content": "<p>These kind of programs can be very fast, <code>lake exe shake</code> analyzes the import graph of mathlib by looking at oleans and it only takes 8 seconds to do everything</p>",
        "id": 411238046,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392182
    },
    {
        "content": "<p>No, we want to link to e.g. the github locations so I actually need access to the lake interna (<a href=\"https://github.com/leanprover/doc-gen4/blob/main/lakefile.lean#L117\">getSrcUri</a>). doc-gen used to be a standalone executable, there were 3 reasons that I moved away from that approach once facets came up:</p>\n<ul>\n<li>It wasn't well integrated with the (dynamic) rebuilding from lake, i.e. it would always compile all docs. Now if you have a file that you didn't change it also wont regenerate docs.</li>\n<li>It wasn't parallelized, which would of course have been possible but lake gave us this for free.</li>\n<li>When core added new env extensions you'd have be careful to compile the binary with the exact same compiler version as your project such that you dont get weird crashes. (This was the most annoying one because it meant that people either had to manually edit lean-toolchain or make sure they stay in sync with doc-gen or the other way around in the case of mathlib)</li>\n</ul>\n<p>Re performance: doc-gen is not \"slow\" (if analyzing thousands of files in 10 min counts as slow) because of lake, I did ran perf on the top level lake call and one can see that by now the majority of time is spent in the delaboration facilities of the lean compiler itself.</p>",
        "id": 411238371,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704392336
    },
    {
        "content": "<p>(I didn't mean to suggest that 10 min is slow, but rather that the hour previous to those 10 min could be skipped with this approach)</p>",
        "id": 411238604,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392422
    },
    {
        "content": "<p>Still, I think the fundamental issue is that doc-gen should work on lake projects that do not contain <code>doc-gen</code> in them anywhere</p>",
        "id": 411238875,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392530
    },
    {
        "content": "<p>and \"facets\" as currently designed don't seem to capture that properly</p>",
        "id": 411238930,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392572
    },
    {
        "content": "<p>assuming that mathlib has to be the one to add a doc-gen facet to <code>Mathlib</code></p>",
        "id": 411238991,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392601
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/Cache.20vs.20Lake.20flags/near/411238371\">said</a>:</p>\n<blockquote>\n<p>When core added new env extensions you'd have be careful to compile the binary with the exact same compiler version as your project such that you dont get weird crashes. (This was the most annoying one because it meant that people either had to manually edit lean-toolchain or make sure they stay in sync with doc-gen or the other way around in the case of mathlib)</p>\n</blockquote>\n<p>This is also an issue for other standalone tools, I would really like to have a better solution for getting lake to do this properly</p>",
        "id": 411239704,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392928
    },
    {
        "content": "<p>I want to point to two lake projects A and B and tell lake \"please run A on B\" without them being dependencies of each other in either direction</p>",
        "id": 411239768,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704392963
    },
    {
        "content": "<p>A common project C that imports both might be an option, but it's really just a shim</p>",
        "id": 411239935,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393034
    },
    {
        "content": "<p>It seems like <code>doc-gen</code> could be a standalone executable if we exported the ability to <a href=\"https://github.com/leanprover/lean4/blob/504b6dc93f46785ccddb8c5ff4a8df5be513d887/src/lake/Lake/Load/Main.lean#L229\">load a workspace</a> into a standalone library and perhaps some of the concurrent build logic.</p>",
        "id": 411240008,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1704393075
    },
    {
        "content": "<p>I like the idea of a common project that imports both as an immediate workaround though.</p>",
        "id": 411240254,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1704393174
    },
    {
        "content": "<p>yeah, a code interface to Lake would be great</p>",
        "id": 411240273,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393185
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110994\">Joe Hendrix</span> <a href=\"#narrow/stream/270676-lean4/topic/Cache.20vs.20Lake.20flags/near/411240008\">said</a>:</p>\n<blockquote>\n<p>It seems like <code>doc-gen</code> could be a standalone executable if we exported the ability to <a href=\"https://github.com/leanprover/lean4/blob/504b6dc93f46785ccddb8c5ff4a8df5be513d887/src/lake/Lake/Load/Main.lean#L229\">load a workspace</a> into a standalone library and perhaps some of the concurrent build logic.</p>\n</blockquote>\n<p>doc-gen used to do this by simply <code>import Lake</code> (which, just like <code>import Lean</code>, just works <span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span> ). But Mac tends to break his APIs semi frequently so that was also a bit annoying to maintain in the long run which is another reason that I'm with the current approach.</p>",
        "id": 411240357,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704393230
    },
    {
        "content": "<p>A <em>stable and supported</em> code interface to lake</p>",
        "id": 411240439,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393252
    },
    {
        "content": "<p>something that you can count on about as well as the lakefile format itself</p>",
        "id": 411240534,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393296
    },
    {
        "content": "<p>The flake approach is not actually a solution to this instability btw. the doc-gen flake (which is arguably the most complex one out there) does also break on lake changes every now and then (although that frequency has also decreased over the time)</p>",
        "id": 411240770,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704393378
    },
    {
        "content": "<p>I feel like support for nix in the lean ecosystem has waned</p>",
        "id": 411240927,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393462
    },
    {
        "content": "<p>Oh sorry not flake, facet of course, facet.</p>",
        "id": 411240959,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704393480
    },
    {
        "content": "<p>I know approximately nothing about flakes</p>",
        "id": 411240962,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393481
    },
    {
        "content": "<p>I think the solution to the instability is to get <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> to document the actual public API instead of equivocating about it</p>",
        "id": 411241207,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393583
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110994\">Joe Hendrix</span> <a href=\"#narrow/stream/270676-lean4/topic/Cache.20vs.20Lake.20flags/near/411240254\">said</a>:</p>\n<blockquote>\n<p>I like the idea of a common project that imports both as an immediate workaround though.</p>\n</blockquote>\n<p>Fun fact: Thats exactly how the mathlib4_docs build used to work until I posted this issue, but for an entirely different reason! The reason was that lake wasn't able to update dependencies selectively so if i ran lake update in a mathlib4 tree i could not specify to only update doc-gen. However that's now possible and I had a bit of free time so I thought why not just try it out.</p>\n<p>Guess I'll revert my just try it out changes for now^^</p>",
        "id": 411241208,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704393583
    },
    {
        "content": "<p>If you have a project that depends on mathlib (without -Kdoc=on), then you should be able to reuse the cache without issue</p>",
        "id": 411241457,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393694
    },
    {
        "content": "<p>Yes, it can do that</p>",
        "id": 411241488,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704393704
    },
    {
        "content": "<p>If you view older doc-gen builds you'll see they are in the 15 min ballpark</p>",
        "id": 411241550,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704393724
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/l-1qdEsw4qoulxheBEgF_788/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/l-1qdEsw4qoulxheBEgF_788/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/l-1qdEsw4qoulxheBEgF_788/image.png\"></a></div>",
        "id": 411241620,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704393744
    },
    {
        "content": "<p>is that a doc-gen job or a mathlib job?</p>",
        "id": 411241700,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393779
    },
    {
        "content": "<p>or should it be a separate project?</p>",
        "id": 411241733,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393791
    },
    {
        "content": "<p>That's a doc-gen job that pulls the cache, builds doc-gen, runs doc-gen and uploads the result. It runs over here: <a href=\"https://github.com/leanprover-community/mathlib4_docs/actions?page=2\">https://github.com/leanprover-community/mathlib4_docs/actions?page=2</a></p>",
        "id": 411241766,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704393810
    },
    {
        "content": "<p>it feels like building mathlib docs is something mathlib should be doing</p>",
        "id": 411241779,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393815
    },
    {
        "content": "<p>although I can imagine you want to watch it for doc-gen regressions and issues</p>",
        "id": 411241900,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393854
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/Cache.20vs.20Lake.20flags/near/411241779\">said</a>:</p>\n<blockquote>\n<p>it feels like building mathlib docs is something mathlib should be doing</p>\n</blockquote>\n<p>yes yes, we've had this talk before^^ originally we had the job on my repo, then it moved to this one.</p>",
        "id": 411241984,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704393898
    },
    {
        "content": "<p>So it sounds like \"project C\" already exists, maybe it could be a lake project?</p>",
        "id": 411242059,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704393928
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/270676-lean4/topic/Cache.20vs.20Lake.20flags/near/411241208\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110994\">Joe Hendrix</span> <a href=\"#narrow/stream/270676-lean4/topic/Cache.20vs.20Lake.20flags/near/411240254\">said</a>:</p>\n<blockquote>\n<p>I like the idea of a common project that imports both as an immediate workaround though.</p>\n</blockquote>\n<p>Fun fact: Thats exactly how the mathlib4_docs build used to work until I posted this issue, but for an entirely different reason! The reason was that lake wasn't able to update dependencies selectively so if i ran lake update in a mathlib4 tree i could not specify to only update doc-gen. However that's now possible and I had a bit of free time so I thought why not just try it out.</p>\n<p>Guess I'll revert my just try it out changes for now^^</p>\n</blockquote>\n<p>-&gt; <a href=\"https://github.com/leanprover-community/mathlib4_docs/blob/main/.github/workflows/docs.yaml#L46\">https://github.com/leanprover-community/mathlib4_docs/blob/main/.github/workflows/docs.yaml#L46</a> </p>\n<p>It makes a lake project!</p>",
        "id": 411242224,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704393991
    },
    {
        "content": "<p>That's awesome.</p>",
        "id": 411243278,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1704394446
    },
    {
        "content": "<p>And everything back to normal: <a href=\"https://github.com/leanprover-community/mathlib4_docs/actions/runs/7413577649\">https://github.com/leanprover-community/mathlib4_docs/actions/runs/7413577649</a></p>",
        "id": 411244600,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704394958
    },
    {
        "content": "<p>wow, there are a lot of failures on that workflow, is this just the recent cache hiccup or does it really break that often</p>",
        "id": 411245099,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704395116
    },
    {
        "content": "<p>THe recent cache hiccup is responsible for the recent failures. In decreasing order of frequency the reasons for failure are:</p>\n<ol>\n<li>The fact that this job is run on different machines (and for reasons unknownst to me never in a docker container) and sometimes these machines have a git configuration set up (which I didn't dare override) sometimes they don't. Since I do create a commit on the workaround project, I need an author and email set up. Some of these machines have this configured, others dont. (This was my main motivation for doing what I did today) If I dont have an author and try to commit, git fails. But I learned just now that you can have an author per repo so I added that and now these issues should be issues of the past</li>\n<li>The hard drive is full ^^</li>\n<li>lake breaks its API</li>\n<li>(very rare nowadays) some Lean compiler API that I use inside of doc-gen changed its types and doc-gen doesn't compile on the release that mathlib uses</li>\n</ol>\n<p>so TLDR: This ratio should drastically improve from now on.</p>",
        "id": 411246037,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704395443
    }
]