[
    {
        "content": "<p>My proof is taking a long time, and one suspicion I have is that I am trying to simplify expressions built out of several applications of <code>List.modifyNth</code> to various lists. I am considering replacing <code>List</code> with <code>Array</code> where relevant in my code. But the <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Array#doc\">docs#Array</a> says \"From the point of view of proofs Array α is just a wrapper around List α.\" Is this statement meant to convey that the speed of proofs using List is the same as analogous proofs using Array operations, or could Array be faster?</p>",
        "id": 420168816,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1707272196
    },
    {
        "content": "<p>This might be a complicated question to answer. It sounds like you have some expressions you want to prove something about and those expressions currently involve lists and you are asking if you make them arrays whether the proofs will elaborate/typecheck faster.</p>\n<p>List and array have essentially the same expression representation during elaboration. So, any tactics you use to manipulate expressions about list/array will probably behave about the same.</p>\n<p>For elaboration, a rough metric of how fast things will be is how large your expressions are. Large expressions will make most tactic calls slow because they have to traverse large expressions. If you have a big, static list expression <code>[a, …, z]</code>, then elaboration will probably be kinda slow. And changing to <code>#[]</code> doesn’t really change the expression size so it’ll still be slow.</p>\n<p>I think <code>set_option trace.profiler</code> is quite helpful for figuring out why elaboration is taking a lot of time.</p>",
        "id": 420177488,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1707278749
    },
    {
        "content": "<p>(Notably, if you are using lists in some <em>metaprograms</em> then you may notice speed up by using arrays, because I think arrays might evaluate differently in the VM, and they definitely evaluate differently in compiled code)</p>",
        "id": 420177846,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1707279007
    }
]