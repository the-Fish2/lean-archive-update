[
    {
        "content": "<p>I <em>think</em> the consensus is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Doc-comments that fit on one line are great! -/</span>\n<span class=\"sd\">/--</span>\n<span class=\"sd\">And when they require</span>\n<span class=\"sd\">multiple</span>\n<span class=\"sd\">lines, the delimiters should go on their own line, but variation is permitted here.</span>\n\n<span class=\"sd\">No indentation is required in block comments.</span>\n<span class=\"sd\">-/</span>\n<span class=\"c1\">-- All comments, single line or otherwise, have a space after the `--`, `/-` or `/--`, and a space before the `-/`.</span>\n<span class=\"c1\">-- Comments should have appropriate punctuation.</span>\n<span class=\"c1\">-- They don't need to be complete sentences, but can be. (This previously said they should be!)</span>\n<span class=\"sd\">/-- We prefer the indicative mood over the imperative, because it tends to be more robust to appearing in difference locations (hovers, embedded in manuals, etc). -/</span>\n<span class=\"c\">/-</span><span class=\"cm\"> Comments should always come *before* the thing they are talking about, never after. -/</span>\n</code></pre></div>\n<p>Or at least, I remember David being surprised that everyone in the FRO happily agreed that this was consensus. :-)</p>\n<p>Is that is this case --- is this documented somewhere? If not, let's!</p>",
        "id": 438709035,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715743300
    },
    {
        "content": "<p>In fact, the <a href=\"https://leanprover-community.github.io/contribute/doc.html\">doc style guide</a> contains examples which seem to imply that delimiters shouldn't go on their own lines in the second case.</p>",
        "id": 438709470,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1715743490
    },
    {
        "content": "<p>Indeed! I hope we can change that. :-)</p>",
        "id": 438709540,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715743526
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/475\">#475</a></p>",
        "id": 438711176,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1715744232
    },
    {
        "content": "<p>Looks great to me, but let's leave 24 hours in case bikeshedding is required here. :-)</p>",
        "id": 438711817,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715744515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/270676-lean4/topic/style.20guide.20for.20comments.3F/near/438709035\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Comments should typically be complete sentences, with punctuation.</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Should this maybe be broadened to something like “or complete grammatical phrases” (also with punctuation)? The style guide has this example, which is not a complete sentence but looks ok to me (or at least, there are docstrings of the same form which look ok):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- The brackets corresponding to a given `BinderInfo`. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">brackets</span> <span class=\"o\">:</span> <span class=\"bp\">…</span>\n</code></pre></div>\n<p>Plus, docstrings on functions of the form “Does <em>x</em>” seem ok; there’s an imperative-mood docstring in the style guide which would still look ok to me if indicative (“Finds”/“replaces”instead of “Find”/“replace”), but might be unnecessarily cluttered if prefixed with “<code>mapPrefix</code> finds…” or “This function finds…”</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Find the largest prefix `n` of a `Name` such that `f n != none`, then replace this prefix</span>\n<span class=\"sd\">with the value of `f n`. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">mapPrefix</span> <span class=\"o\">:</span> <span class=\"bp\">…</span>\n</code></pre></div>\n<p>But, there could be an argument/preference for insisting on complete sentences here.</p>",
        "id": 438715212,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1715745718
    },
    {
        "content": "<p>Yeah, I agree that complete sentences is asking too much.</p>",
        "id": 438715319,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715745757
    },
    {
        "content": "<p>Could there be examples for inductive mood v.s. imperative?</p>",
        "id": 438721763,
        "sender_full_name": "Utensil Song",
        "timestamp": 1715748402
    },
    {
        "content": "<p>Do you mean here, or in the style guide?</p>",
        "id": 438722438,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715748645
    },
    {
        "content": "<p>I mean in the style guide.</p>",
        "id": 438722523,
        "sender_full_name": "Utensil Song",
        "timestamp": 1715748677
    },
    {
        "content": "<p>Some of the constraints about doc-strings could be enforced by a syntax linter: would that be desirable?</p>\n<p>I think that regular comments (i.e. non-doc-strings) are (almost) completely invisible to lean linters.</p>",
        "id": 438725045,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1715749543
    },
    {
        "content": "<p>Personally I don't think delimiters should go on their own lines. That's just wasted space in the editor</p>",
        "id": 438728486,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715752016
    },
    {
        "content": "<p>Thanks for initiating this discussion!</p>\n<p>Re: <code>/-- The brackets corresponding to a given `BinderInfo`. -/</code>,<br>\nI actually prefer omitting a full stop here: to me, this is not a complete sentence, hence should not get a full stop. (I do not care <em>a lot</em>, so would not personally rewrite lots of docstrings to match my style - but I would prefer changing the style guide accordingly.)</p>",
        "id": 438733161,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1715754500
    },
    {
        "content": "<p>Maybe</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gd\">- Comments should have appropriate punctuation.</span>\n<span class=\"gd\">- They don't need to be complete sentences, but can be. (This previously said they should be!)</span>\n<span class=\"gi\">+ Comments should be complete sentences with appropriate punctuation, or complete grammatical phrases with optional punctuation.</span>\n</code></pre></div>",
        "id": 438740287,
        "sender_full_name": "Utensil Song",
        "timestamp": 1715757607
    },
    {
        "content": "<p>And maybe</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gd\">- lines, the delimiters should go on their own line, but variation is permitted here.</span>\n<span class=\"gi\">+ lines, the delimiters could go on their own line, or be on the same lines of comments, as long as the same style is used in a file consistently.</span>\n</code></pre></div>",
        "id": 438740369,
        "sender_full_name": "Utensil Song",
        "timestamp": 1715757640
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/270676-lean4/topic/style.20guide.20for.20comments.3F/near/438728486\">said</a>:</p>\n<blockquote>\n<p>Personally I don't think delimiters should go on their own lines. That's just wasted space in the editor</p>\n</blockquote>\n<p>Without this rule we end up with a lot of</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- this is</span>\n<span class=\"sd\">    a long message that I decided to indent -/</span>\n</code></pre></div>\n<p>which leads to confusion about whether comments should be indented</p>",
        "id": 438770941,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715768750
    },
    {
        "content": "<p>Why don't we just disallow indenting?</p>",
        "id": 438775030,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715770436
    },
    {
        "content": "<p>I was using the imperative mood quite a bit, not knowing the consensus, so documenting this would be helpful.</p>",
        "id": 438778646,
        "sender_full_name": "Jovan Gerbscheid",
        "timestamp": 1715771801
    },
    {
        "content": "<p>For multiline comments, the rule could be to put <code>/--</code> is on its own line, but <code>-/</code> does not have to be. If there are multiple paragraphs, I think putting <code>-/</code> on its own line would then be preferred.</p>",
        "id": 438782738,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1715773363
    },
    {
        "content": "<p>I am in favour of <span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span>'s proposal: delimiters at the start/end of a line, no indenting.</p>\n<p>Even though large screens are getting cheaper, I still think putting delimiters on their own lines is somewhat wasting vertical screen real estate.</p>",
        "id": 438785844,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715774456
    },
    {
        "content": "<p>I would be strongly opposed to a rule that says you can't put delimiters on their own line. (Note the FRO's internal style guide now says they must be on their own lines!)</p>\n<p>But I guess I can compromise with either variant being allowed. :-)</p>",
        "id": 438797888,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715778506
    },
    {
        "content": "<p>Yeah, I didn't mean to forbid the other options. I just meant to indicate what my preferred style is.</p>",
        "id": 438798111,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715778584
    },
    {
        "content": "<p>I'd prefer consensus on this in mathlib. I've already been imposing this style on Batteries based on what I perceived the most common style to be: single line comments are fine, otherwise comment delimiters are on their own line with no indentation. By the way another aspect that might tilt the preference here: using <code>-/</code> on the same line as the markdown <code> ``` </code> at the end of a markdown code snippet causes highlighting to break:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- This is a nifty lean function:</span>\n<span class=\"sd\">```</span>\n<span class=\"sd\">def nifty := Nat.succ</span>\n<span class=\"sd\">``` -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">nifty</span> <span class=\"o\">:=</span> <span class=\"n\">Nat.zero</span>\n</code></pre></div>",
        "id": 438807911,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715781323
    },
    {
        "content": "<p>I would also prefer consensus. In the past, I've found myself doing both. Personally, I'd just as soon stick with the FRO on this for uniformity, even at the cost of a bit of vertical space.</p>",
        "id": 438815960,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1715783223
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/270676-lean4/topic/style.20guide.20for.20comments.3F/near/438807911\">said</a>:</p>\n<blockquote>\n<p>I've already been imposing this style on Batteries based on what I perceived the most common style to be: single line comments are fine, otherwise comment delimiters are on their own line with no indentation.</p>\n</blockquote>\n<p>I slightly prefer <span class=\"user-mention\" data-user-id=\"560559\">@Richard Osborn</span>'s rule of \"delimiters on own line if there are paragraphs\", with the reading that a code block or double blank line is always a new paragraph.</p>",
        "id": 438862712,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715797650
    },
    {
        "content": "<p>Lean is also already far denser than most programming languages in terms of info per line. There's very little boilerplate (good), but the high density can make it hard for me to read sometimes. So I'm in favor of all style preferences that add some whitespace, including putting <code>/--</code> on its own line :-)</p>",
        "id": 438870407,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1715800696
    },
    {
        "content": "<p>I like <code>gofmt</code></p>",
        "id": 438870829,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715800915
    },
    {
        "content": "<p>Though on mathlib I expect people will want <code>golfmt</code>. (SCNR)</p>",
        "id": 438887839,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1715808106
    },
    {
        "content": "<p><code>/--</code> and <code>-/</code> on their own lines also seems much easier for tools to get right by themselves. Having them inline with the comments seems likely to require aesthetic judgement calls. :-)</p>",
        "id": 438905066,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715817389
    },
    {
        "content": "<p>“Delimiters on their own lines iff the docstring contains paragraphs” seems tool-enforceable! :)</p>\n<p>A different option is “Delimiters on their own lines iff the body takes up &gt;2 lines”. I feel like a two-line docstring with delimiters inline is ok, but a three-line one starts getting dense. </p>\n<p>(Plus, putting delimiters on their own line doubles the line count in the 2-line body case, which contributes to the awkward feeling, I think, but only increases it by 2/3 in the 3-line case…)</p>",
        "id": 438910740,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1715821766
    },
    {
        "content": "<p>(This of course trivially avoids the markdown code block issue, as you need at least 3 lines for a code block.)</p>",
        "id": 438910905,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1715821896
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> <a href=\"#narrow/stream/270676-lean4/topic/style.20guide.20for.20comments.3F/near/438910740\">said</a>:</p>\n<blockquote>\n<p>“Delimiters on their own lines iff the docstring contains paragraphs” seems tool-enforceable! :)</p>\n</blockquote>\n<p>Unless said tool is expected to have basic understanding of markdown.</p>",
        "id": 438923016,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1715829708
    },
    {
        "content": "<p>I would further add that single line comments should not use markdown other than <code>*..*</code> and <code>**..**</code>. TeX math should be limited too but we shouldn't expect a tool to actually enforce anything in there.</p>",
        "id": 438923516,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1715830080
    },
    {
        "content": "<p>Allowing only bold and italic seems pretty arbitrary to me. Surely <code>/-- `foo x y` foos `x` with `y` -/</code> is fine? What inline markdown syntax are you trying to forbid?</p>",
        "id": 438930821,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715833861
    },
    {
        "content": "<p>Sorry, an incomplete thought was partly expressed :/ I did not mean to exclude inline code.</p>\n<p>The problem is: what's a paragraph?  That becomes murky if you expect the tool to understand markdown. Then again you don't want the tool to ignore markdown altogether. So markdown's definition of paragraph can't be used but markdown can't be ignored.</p>\n<p>I think this is a case where someone needs to write the tool to do the right thing and then let people struggle to explain what it actually does...</p>",
        "id": 438939721,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1715837861
    },
    {
        "content": "<p>Isn’t “contains a paragraph” just “contains \"\\n\\n\" or \"\\n```\"”? How does markdown enter into it?</p>",
        "id": 439089856,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1715888760
    },
    {
        "content": "<p>Hmm, I suppose you’ve got to account for bullets too…but beyond that, are there other markdown paragraph sources?</p>\n<p>I’m starting to see how markdown could have the <em>potential</em> to be an issue (at least on the implementation side) if we used a paragraph definition, though…I suppose it would depend on how easy it really is to check for paragraphs.</p>",
        "id": 439090196,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1715888916
    },
    {
        "content": "<p>I really think it makes more sense to go with the simplest approach: multiline comments get the delimiters on their own lines.</p>",
        "id": 439095884,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1715891348
    },
    {
        "content": "<p>At the very least, it's easier to remember and explain.</p>",
        "id": 439095962,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1715891394
    },
    {
        "content": "<p>I agree, either <code>#lines &gt; 2</code> or <code>#lines &gt; 1</code> seems like a very simple rule and seems completely sufficient. I kinda liked the former one for exactly the reasons Thomas mentioned.</p>",
        "id": 439098063,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1715892211
    },
    {
        "content": "<p>In principle I agree with \"multiple lines, use <code>/--</code> and <code>-/</code> on their own line.\" But, with structure fields, I'm still tempted to allow that one line to be flowed across multiple lines, like <a href=\"https://github.com/leanprover-community/mathlib4/blob/95ac1e61bdd0f33d6ed2b0eef28d70cc9fe28d39/Mathlib/Tactic/Congr!.lean#L41-L43\">here</a>.</p>\n<p>Maybe an easy-to-explain rule is \"<code>/--</code> and <code>-/</code> don't have to go on their own line if the comment has just been reflowed to meet the 100 character line rule\"? This probably should only be allowed for two to <em>maybe</em> three lines.</p>",
        "id": 439099164,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715892637
    },
    {
        "content": "<p>I am amazed by Kyle’s negotiation skills in this “I agree with this idea that only single line comments should have delimiters on the same line, but what about single line comments that span multiple lines?”.</p>",
        "id": 439100777,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715893302
    },
    {
        "content": "<p>And I also agree that the structure field example that he cited would look worse with delimiters on their own lines.</p>",
        "id": 439100886,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715893341
    },
    {
        "content": "<p>I've also been using same-line <code>/--</code> for structure fields and inductive constructors, although both positions seem defensible here</p>",
        "id": 439125837,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715906453
    },
    {
        "content": "<p>Is it the place to advocate for the use of semantic line breaks in comments?</p>",
        "id": 439161286,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1715928498
    },
    {
        "content": "<p>It's always the right place to advocate for that.</p>",
        "id": 439171891,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715932861
    },
    {
        "content": "<p>I now even more strongly believe in the last part of my earlier comment:</p>\n<blockquote>\n<p>I think this is a case where someone needs to write the tool to do the right thing and then let people struggle to explain what it actually does...</p>\n</blockquote>\n<p>I think there is much stronger agreement on what is actually right than explaining and defining what is right. Let's write a draft tool and then quibble on the very rare edge cases.</p>",
        "id": 439184060,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1715937578
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119741\">François G. Dorais</span> <a href=\"#narrow/stream/270676-lean4/topic/style.20guide.20for.20comments.3F/near/439184060\">said</a>:</p>\n<blockquote>\n<p>I now even more strongly believe in the last part of my earlier comment:</p>\n<blockquote>\n<p>I think this is a case where someone needs to write the tool to do the right thing and then let people struggle to explain what it actually does...</p>\n</blockquote>\n<p>I think there is much stronger agreement on what is actually right than explaining and defining what is right. Let's write a draft tool and then quibble on the very rare edge cases.</p>\n</blockquote>\n<p>If the tool is reasonable, I'd be very happy to just agree on \"whatever that tool does\" (modulo bugs).</p>",
        "id": 439190506,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1715939885
    },
    {
        "content": "<p>Just like a code formatter can alleviate many formatting discussions.</p>",
        "id": 439190511,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1715939887
    }
]