[
    {
        "content": "<p>Does anyone know why the changes in this PR don't seem to actually check whether the cache works? The latest builds shouldn't have any oleans, but they seem to regardless.</p>",
        "id": 417519777,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706040388
    },
    {
        "content": "<p>Any ideas? As it currently stands, this CI step just wastes time and doesn't actually check the cache.</p>",
        "id": 418027512,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706170620
    },
    {
        "content": "<p>Sorry for bumping this again, but I will just re-iterate the state of thi: at the current moment, this check does nothing <em>except wasting CI time.</em> I can't seem to figure out why my attempted fixes don't fix it properly, but <strong>every</strong> CI run is wasting about 5 minutes on this check that is currently a no-op. I would appreciate some suggestions, or if not we can remove the check until we can make it work properly.</p>",
        "id": 419463809,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706882709
    },
    {
        "content": "<p>Can you explain what is is you're looking at, what you're seeing, and how it differs from what you expect? </p>\n<p>In <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7757040527/job/21155666514\">this CI run</a> from about an hour ago, that stage appears to finish in 3s. </p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gi\">+            lake exe cache clean!</span>\n<span class=\"gi\">+            ls</span>\n<span class=\"gi\">+            find Mathlib -name \"*.olean\" -type f -delete</span>\n</code></pre></div>\n<p>Is this being done the top level of the repo? (Because then why would there be oleans in the source folder, rather than in <code>.lake/build</code>?)</p>",
        "id": 419481488,
        "sender_full_name": "Richard Copley",
        "timestamp": 1706888103
    },
    {
        "content": "<p>OK, so in the state of the CI runs that have been run in this branch don't work. (I can't remember how this specific issue was fixed, it may still be the case). I think you flagged down the specific issue, though - in Lean3, oleans were downloaded into the exact same folder as the *.lean files, as opposed to <code>.lake/build</code>. Let me try this.</p>",
        "id": 419488889,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706890274
    },
    {
        "content": "<p>why would it be 5 minutes to run this check?</p>",
        "id": 419489987,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706890597
    },
    {
        "content": "<p>it probably is wasting CI time right now but it shouldn't be that much</p>",
        "id": 419490051,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706890613
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239933.20actually.20check.20cache.20works/near/419489987\">said</a>:</p>\n<blockquote>\n<p>why would it be 5 minutes to run this check?</p>\n</blockquote>\n<p>it was 5 minutes in the previous run, c.f. <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7629290386/job/20782369309?pr=9933\">https://github.com/leanprover-community/mathlib4/actions/runs/7629290386/job/20782369309?pr=9933</a>; but I think this was the slow <code>find</code> command</p>\n<p>now that I know where <code>olean</code>s are really stored, I replaced this with <code>rm -rf</code> and it should hopefully be fine</p>",
        "id": 419490532,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706890783
    },
    {
        "content": "<p>it failed successfully! Thank you very much Richard!</p>",
        "id": 419491807,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706891207
    },
    {
        "content": "<p>Another bump - would be nice to fix this CI step!</p>",
        "id": 421832381,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1708079887
    },
    {
        "content": "<p>What's the status? Do we have working code that needs reviewing or broken code that needs fixing?</p>",
        "id": 421832795,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708080014
    },
    {
        "content": "<p>The code now, as far as I know, fully works.</p>",
        "id": 421834127,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1708080460
    }
]