[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/12470\">#12470</a> I am attempting to split the file <code>MeasureTheory.Constructions.BorelSpace.Basic</code> of approx. 2500 lines into four pieces: <code>Basic.lean</code> (\"the original\"), <code>Order.lean</code> (Borel sigma-algebras on order topologies), <code>Real.lean</code> (specific to reals, nnreals, ennreals), <code>Metric.lean</code> (specific to Borel sigma-algebras on pseudometric spaces).</p>\n<p>This is my first attempt at a serious split-refactor, and I'm facing a problem (or perhaps several problems) that I don't understand. There is a build failure <em>\"check for noisy stdout lines\"</em>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Run</span> <span class=\"n\">grep</span> <span class=\"c1\">--after-context=1 \"stdout\" stdout.log &amp;&amp; ret=0</span>\n<span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"n\">measurable_of_Iic.</span><span class=\"o\">{</span><span class=\"n\">u_4</span><span class=\"o\">,</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_4</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">inst</span><span class=\"bp\">✝</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">inst</span><span class=\"bp\">✝¹</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">Process</span> <span class=\"n\">completed</span> <span class=\"k\">with</span> <span class=\"n\">exit</span> <span class=\"n\">code</span> <span class=\"mi\">1</span><span class=\"bp\">.</span>\n</code></pre></div>\n<p>The declaration <code>measurable_of_Iic</code> in <code>MeasureTheory.Constructions.BorelSpace.Order</code> seems to compile just fine on my local machine. Does anyone understand what is going on? Thanks!</p>",
        "id": 435856154,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1714299062
    },
    {
        "content": "<p>(To be clear, the PR in its current state is a work-in-progress. For example the module docstrings etc. are not updated and cleaned up yet, and I would ideally use <a href=\"https://mathlib-changelog.org/\">#changelog</a> to check if authorships obviously require something else than copying from the split file. And my uses of <code>variables</code> in the new files are not necessarily the cleanest yet. I plan to improve these if I get this PR to compile and if the split seems worthwhile.)</p>",
        "id": 435856763,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1714299250
    },
    {
        "content": "<p>If you look at the <code>build mathlib</code> step, you will see that the noisy line is in <code>Building Mathlib.Geometry.Manifold.IntegralCurve</code>.</p>",
        "id": 435857875,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1714299648
    },
    {
        "content": "<p>Thank you! I'm used to seeing any \"errors\" readily folded open, and did not think of further opening up the <code>build mathlib</code> step inside the <code>build</code> CI stage... I believe I know how to debug from here, thanks a lot!</p>",
        "id": 435858532,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1714299877
    },
    {
        "content": "<p>In fact I'm wrong, because printing is asynchronous. It's from one of the files that is being built at that time, i.e., Mathlib/Probability/Process/Stopping.lean (there is a <code>#check</code> in there).</p>",
        "id": 435858540,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1714299882
    },
    {
        "content": "<p>Oh! That must be just something I accidentally left while fixing downstream things... <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span> (I feel pretty stupid, because I should have learned by now what and who the cause of noisy things usually is...) </p>\n<p>Thanks!</p>",
        "id": 435858670,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1714299933
    },
    {
        "content": "<p>I though I'd note here. I wanted to double-check that the types of the declarations did not change because of my variables placements in the new files. The Leaff tool of <span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> seems fantastic for this, <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span>.</p>\n<p>Leaff reported really nicely about the current diff: many of the moves and changed imports were exactly as expected. But it also said there were changed types, which was a bit of a surprise to me. Perhaps these are due to changed argument orders due to <code>variables</code> placed slightly differently in the new files, or perhaps even false positives --- since I do not observe any changes in any downstream behavior. I checked a number of statements against Loogle of the existing versions, and I saw basically just universe variable name differences.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Found</span> <span class=\"n\">differences</span><span class=\"o\">:</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Real</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">+</span> <span class=\"n\">module</span> <span class=\"n\">added</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Real</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Order</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">+</span> <span class=\"n\">module</span> <span class=\"n\">added</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Order</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Metric</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">+</span> <span class=\"n\">module</span> <span class=\"n\">added</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Metric</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.NumberTheory.Padics.PadicVal</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">+</span> <span class=\"n\">added</span> <span class=\"n\">le_padicValNat_iff_replicate_subperm_factors</span>\n<span class=\"bp\">+</span> <span class=\"n\">added</span> <span class=\"n\">le_multiplicity_iff_replicate_subperm_factors</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.Data.Nat.Factors</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">+</span> <span class=\"n\">added</span> <span class=\"n\">Nat.replicate_subperm_factors_iff</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.Data.List.Lex</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">+</span> <span class=\"n\">added</span> <span class=\"n\">List.nil_le.</span><span class=\"o\">{</span><span class=\"n\">u_1</span><span class=\"o\">}</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.Algebra.BigOperators.List.Lemmas</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">+</span> <span class=\"n\">added</span> <span class=\"n\">List.Sublist.prod_dvd_prod.</span><span class=\"o\">{</span><span class=\"n\">u_3</span><span class=\"o\">}</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.Data.List.Perm</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">+</span> <span class=\"n\">added</span> <span class=\"n\">List.subperm_nil.</span><span class=\"o\">{</span><span class=\"n\">u_1</span><span class=\"o\">}</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.AlgebraicGeometry.GammaSpecAdjunction</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AlgebraicGeometry.Spec</span><span class=\"bp\">Γ</span><span class=\"n\">Identity_hom_app_presheaf_obj</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AlgebraicGeometry.</span><span class=\"bp\">Γ</span><span class=\"n\">Spec.adjunction_unit_app_app_top</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AlgebraicGeometry.Spec</span><span class=\"bp\">Γ</span><span class=\"n\">Identity_naturality</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AlgebraicGeometry.LocallyRingedSpace.comp_ring_hom_ext</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AlgebraicGeometry.</span><span class=\"bp\">Γ</span><span class=\"n\">Spec.isIso_locallyRingedSpaceAdjunction_counit</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AlgebraicGeometry.Spec</span><span class=\"bp\">Γ</span><span class=\"n\">Identity_naturality_assoc</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Real</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">ENNReal.measurable_of_tendsto'</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AEMeasurable.ennreal_tsum</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">NNReal.measurable_of_tendsto'</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.nnreal_tsum</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">ENNReal.aemeasurable_of_tendsto'</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_of_tendsto_ennreal'</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AEMeasurable.nnreal_tsum</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_of_tendsto_nnreal'</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.ennreal_tsum'</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.ennreal_tsum</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Order</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_of_Iic</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AEMeasurable.max</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">MeasureTheory.Measure.ext_of_Ioc_finite</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurableSet_lt</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.isGLB_of_mem</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">MeasureTheory.Measure.ext_of_Ioc</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">MeasureTheory.Measure.ext_of_Iic</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_of_Ici</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measure_eq_measure_preimage_add_measure_tsum_Ico_zpow</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurableSet_le</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">aemeasurable_iInf</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.min</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AEMeasurable.min</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Dense.borel_eq_generateFrom_Ico_mem_aux</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">aemeasurable_iSup</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurableSet_bddBelow_range</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_liminf</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">UpperSemicontinuous.measurable</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">borel_eq_generateFrom_Ioc</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_of_Iio</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">aemeasurable_biInf</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurableSet_bddAbove_range</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">MeasureTheory.Measure.ext_of_Ici</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_iSup</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">MeasureTheory.Measure.ext_of_Ico'</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">LowerSemicontinuous.measurable</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AEMeasurable.isGLB</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.isGLB</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">aemeasurable_biSup</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">borel_eq_generateFrom_Ico</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_sSup</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_of_Ioi</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">MeasureTheory.Measure.ext_of_Ico_finite</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_biSup</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">AEMeasurable.isLUB</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.iInf_Prop</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Dense.borel_eq_generateFrom_Ico_mem</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Dense.borel_eq_generateFrom_Ioc_mem</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">generateFrom_Ico_mem_le_borel</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.isLUB_of_mem</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">nullMeasurableSet_lt</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_limsup'</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">nullMeasurableSet_le</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.iSup_Prop</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">MeasureTheory.Measure.ext_of_Ico</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_limsup</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Dense.borel_eq_generateFrom_Ioc_mem_aux</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_sInf</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_iInf</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.isLUB</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">MeasureTheory.Measure.ext_of_Ioc'</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_liminf'</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">Measurable.max</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">measurable_biInf</span>\n<span class=\"bp\">@@</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.BorelSpace.Metric</span> <span class=\"bp\">@@</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">exists_opensMeasurableSpace_of_hasCountableSeparatingOn</span>\n<span class=\"bp\">!</span> <span class=\"n\">type</span> <span class=\"n\">changed</span> <span class=\"n\">for</span> <span class=\"n\">exists_borelSpace_of_countablyGenerated_of_separatesPoints</span>\n<span class=\"bp\">...</span>\n<span class=\"mi\">503</span> <span class=\"n\">differences</span>\n</code></pre></div>",
        "id": 436155699,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1714431419
    }
]