[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13145\">#13145</a> is a small little PR, but I think it could benefit from the original author of the content (who I think was <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>) having a look to make sure you're happy with my changes (which I have tried to make as minimal as possible). The PR description should give all essential information.</p>",
        "id": 440353081,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716479915
    },
    {
        "content": "<p>I shall have a look in an indeterminate amount of time (exams in 10 days!)</p>",
        "id": 440353178,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716479954
    },
    {
        "content": "<p>That's fine :) - it's not a blocker on me for anything - I'm just (slowly!!) writing up thesis stuff and noticed a generalisation was possible.</p>",
        "id": 440353251,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716479987
    },
    {
        "content": "<p>(Specifically I have just been writing about why it's important to choose an appropriate contextual level of generality, and explaining why exactly finiteness can be such a powerful assumption.)</p>",
        "id": 440353477,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716480046
    },
    {
        "content": "<p>I read rapidly the modifications, they are perfectly natural.</p>",
        "id": 440383283,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716491833
    },
    {
        "content": "<p>They suggest further generalizations, for example regarding the support, as well as generalizations in the files that develop the decomposition of a permutation into cycles. However, by removing the finiteness assumption on the ambient type, the support is no finite anymore, and there could be possibly infinitely many cycles, hence no Finset of cycles. For these reasons, it is not clear how these further generalizations should be implemented. (One could imagine to have a <code>Set</code> version of all of this, with <code>Fintype</code>/<code>Finite</code> attributes when possible, eventually <code>Finset</code>s).</p>",
        "id": 440383861,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716492050
    },
    {
        "content": "<p>Yes, I think further generalisations would be possible, but it's beyond the scope of what this PR tries to do</p>",
        "id": 440388592,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716494014
    },
    {
        "content": "<p>Certainly.</p>",
        "id": 440400047,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716499017
    },
    {
        "content": "<p>The case about the support came to my mind first, because except for the fact that the support of an <code>Equiv.Perm _</code> is only defined as a finset, the proofs would work as well. For the set of cycles, it's probably the same, unless there is a particularly clever algorithm to compute that set when the ambient type is finite. Maybe <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> has an idea of how theses Sets/Finsets could/should be generalized to have greater generality and relatively little burden in writing it.</p>",
        "id": 440400407,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716499163
    },
    {
        "content": "<p>Yes, I don't really know why the support is defined that way</p>",
        "id": 440401117,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716499443
    },
    {
        "content": "<p>To me it would make sense to define it as a <em>Set</em>.</p>",
        "id": 440401150,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716499459
    },
    {
        "content": "<p>I think a lot of the cycle work was made for abel-ruffini and other finite group theory work.</p>",
        "id": 440403423,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1716500524
    },
    {
        "content": "<p>Mmm. I do think sometimes finiteness is the right choice - for a concrete example, I have worked in some of my thesis work with the \"minimum of an element under its cycle under a permutation\", which doesn't work unless \"minimum\" is well-defined, which it may not be (but is easier to find for finite sets).</p>",
        "id": 440985475,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716883548
    },
    {
        "content": "<p>But I do think overall it would be good to detach the finiteness where possible in general.</p>",
        "id": 440985609,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716883580
    },
    {
        "content": "<p>(In your case of having minimal elements in cycles, you just need to assume a well ordering on the type.)</p>",
        "id": 441022640,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716897195
    },
    {
        "content": "<p>(That doesn't imply that what you did in your thesis is relevant for permutations of infinite stuff. Also : there is an interesting — normal — subgroup of the group of all permutations, which is the group of permutations  with finite support on which you can find minima in cycles.)</p>",
        "id": 441022975,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716897304
    },
    {
        "content": "<p>Yes, a well-ordering is what's needed, but in practice it was easier to work with finite things</p>",
        "id": 441024086,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716897671
    },
    {
        "content": "<p>(More importantly, that might have been the relevant cases — not every generality is important.)</p>",
        "id": 441051109,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1716905891
    },
    {
        "content": "<p>Indeed</p>",
        "id": 441055687,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716907318
    },
    {
        "content": "<p>Computer scientists rarely truly care about infinity</p>",
        "id": 441055763,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1716907332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> hi! Did you ever look at this?</p>",
        "id": 447172297,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1719395622
    },
    {
        "content": "<p>No sorry I am graduating tomorrow and going on holidays afterwards so I don't have time for new reviews. Ask me again on the 5th of July?</p>",
        "id": 447172439,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1719395656
    },
    {
        "content": "<p>Fair dos :)</p>",
        "id": 447172465,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1719395667
    },
    {
        "content": "<p>It isn't a priority - enjoy yout holiday</p>",
        "id": 447172511,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1719395682
    },
    {
        "content": "<p>reviewed and delegated <span aria-label=\"peace sign\" class=\"emoji emoji-270c\" role=\"img\" title=\"peace sign\">:peace_sign:</span></p>",
        "id": 447209902,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1719405974
    },
    {
        "content": "<p>Oh nice</p>",
        "id": 447210031,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1719405999
    },
    {
        "content": "<p>I also think we could look at removing finiteness from the support but that would be more work</p>",
        "id": 447210184,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1719406026
    }
]