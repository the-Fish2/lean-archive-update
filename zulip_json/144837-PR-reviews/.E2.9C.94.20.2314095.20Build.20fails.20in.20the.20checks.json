[
    {
        "content": "<p>In PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/14095\">#14095</a> when the checks are performed, they fail at the step Build. In the details, it is mentioned some errors in Mathlib.LinearAlgebra.CliffordAlgebra.Basic. However, I do not change anything from this file and I donâ€™t see any interaction with this file.</p>",
        "id": 447496740,
        "sender_full_name": "Thomas Lanard",
        "timestamp": 1719499082
    },
    {
        "content": "<p>You added instances in your PR and these propagate downstream affecting typeclass synthesis.</p>",
        "id": 447497614,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1719499321
    },
    {
        "content": "<p>(Haven't checked the errors though)</p>",
        "id": 447497699,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1719499335
    },
    {
        "content": "<p>I tried changing the priority of the instances, but that didn't seem to fix the problem.</p>",
        "id": 447512847,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1719503499
    },
    {
        "content": "<p>The error is that it times out when looking for an  instance. You could add <code>set_option synthInstance.maxHeartbeats 30000 in</code> before <code>CliffordAlgebra.induction</code> which fixes the error there, but I don't know if thats a desirable solution.</p>",
        "id": 447513708,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1719503740
    },
    {
        "content": "<p>I would prefer <code>attribute [-instance] badInstance in</code> before <code>CliffordAlgebra.induction</code> so we don't have to recreate the knowledge of <code>badInstance</code> here. </p>\n<p>Also, please bench before merging</p>",
        "id": 447514072,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1719503835
    },
    {
        "content": "<p>How do you find out what <code>badInstance</code> is?</p>",
        "id": 447514331,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1719503908
    },
    {
        "content": "<p>Try </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span><span class=\"w\"> </span><span class=\"n\">trace.Meta.synthInstance</span><span class=\"w\"> </span><span class=\"n\">true</span><span class=\"w\"> </span><span class=\"k\">in</span>\n<span class=\"kd\">set_option</span><span class=\"w\"> </span><span class=\"n\">profiler</span><span class=\"w\"> </span><span class=\"n\">true</span><span class=\"w\"> </span><span class=\"k\">in</span>\n</code></pre></div>\n<p>to figure out what is taking so much time.</p>",
        "id": 447515029,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1719504091
    },
    {
        "content": "<p>Ok it seems that : <code>attribute [-instance] IntermediateField.module' normalClosure.algebra in </code> works.</p>",
        "id": 447517060,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1719504664
    },
    {
        "content": "<p>The <code>module'</code> instances are always slow because of the search space</p>",
        "id": 447517415,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1719504778
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 447696156,
        "sender_full_name": "Thomas Lanard",
        "timestamp": 1719563453
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"666481\">Thomas Lanard</span> has marked this topic as resolved.</p>",
        "id": 447696178,
        "sender_full_name": "Notification Bot",
        "timestamp": 1719563457
    }
]