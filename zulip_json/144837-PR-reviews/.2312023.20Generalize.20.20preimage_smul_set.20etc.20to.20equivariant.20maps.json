[
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=preimage_smul_set#doc\">docs#preimage_smul_set</a> and variants were specific to linear maps. They are now generalized to equivariant maps in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12023\">#12023</a>.</p>\n<p>However, two questions are worth being answered:</p>\n<ol>\n<li>\n<p><code>preimage_smul_setₛₗ</code> can be proved under (probably minimal) hypothesis that <code>σ</code> is a plain map such that <code>c</code> and <code>σ c</code> both act bijectively. A simple way to assure this bijectivity is to impose that <code>c</code> and <code>σ c</code> are units.<br>\nThis is the case in <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=preimage_smul#doc\">docs#preimage_smul</a>_setₛₗ (automatic link does not work), because <code>σ</code> is a <code>MonoidHom</code> and <code>c</code> is a unit (hence <code>σ c</code> is a unit).<br>\nThis is also the case in <code>preimage_smul_setₛₗ'</code>, because then both <code>c</code> and <code>σ c</code> are automatically units since the ambient monoids are groups.<br>\nShould I provide the indicated generalization? Should I then provide particular cases that would be easier to use?</p>\n</li>\n<li>\n<p>Plain maps do not seem to work when Lean expects a <code>FunLike</code> class. Is this normal behaviour? Is Mathlib missing a <code>Funlike</code> instance for maps?</p>\n</li>\n</ol>",
        "id": 432139547,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1712644682
    }
]