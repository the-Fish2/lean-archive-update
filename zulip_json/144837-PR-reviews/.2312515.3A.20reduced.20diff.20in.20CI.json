[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12515\">#12515</a> introduces a quick-and-dirty check for which declarations have been added, removed or moved around by a PR.</p>\n<p>It is text-based, so that it does not have to wait for <code>lake build</code> to finish, which means that it is not perfectly accurate.</p>\n<p>I tested it on a couple of past PRs that were splitting files and scattering lemmas and it was quite effective.  The PR makes the test run in CI on every push.</p>",
        "id": 436126575,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714420172
    },
    {
        "content": "<p>If you are worried about timing, the test runs in under 20s: ~18s are used to download <code>mathlib</code>s git history, and ~1s is the test itself.</p>\n<p>The git-history is used by the script to find the commit where the PR branch diverged from master.</p>",
        "id": 436126793,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714420236
    },
    {
        "content": "<p>Incidentally, if you know how to get the commit hash of the last merge of master that would be great!  In fact, getting the commit that GitHub uses for displaying the diff would be ideal, but I do not know how to get either of those hashes.</p>",
        "id": 436126951,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714420292
    },
    {
        "content": "<p>Here is a sample output of the step:</p>\n<p>[Begin quoted summary]</p>\n<hr>\n<h3>Summary</h3>\n<ul>\n<li><code>+</code> <code>inductives counted even if it is inductives, rather than inductive</code></li>\n<li><code>+</code> <code>theorem hello</code></li>\n</ul>\n<hr>\n<ul>\n<li>2  added declarations</li>\n<li>0  removed declarations</li>\n<li>0  paired declarations</li>\n</ul>\n<hr>\n<p>Reference commit: <code>d64b17d9f56213fc34a8ee9f15b0fab522ab6eae</code></p>\n<hr>\n<p>You can run this locally using</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>./scripts/no_lost_declarations.sh<span class=\"w\"> </span>&lt;optional_commit&gt;\n</code></pre></div>\n<hr>\n<p>[End quoted summary]</p>",
        "id": 436130327,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714421470
    },
    {
        "content": "<p>(This ran on the actual PR, which \"adds\" two declarations, since it contains these two lines:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">hello</span>\n<span class=\"n\">inductives</span> <span class=\"n\">counted</span> <span class=\"n\">even</span> <span class=\"k\">if</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">inductives</span><span class=\"o\">,</span> <span class=\"n\">rather</span> <span class=\"n\">than</span> <span class=\"kd\">inductive</span>\n</code></pre></div>\n<p>These lines are a comment in the shell script and serve as an in-PR test that the step is actually doing something.)</p>",
        "id": 436130566,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714421549
    },
    {
        "content": "<p><code>git merge-base HEAD origin/master</code> gives you the most recent common parent, but is not the same as the heuristic that GitHub uses</p>",
        "id": 436134576,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714423000
    },
    {
        "content": "<p>(that's what the SHA-commenting porting bot used, and it regularly got confused)</p>",
        "id": 436134669,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714423039
    },
    {
        "content": "<p>Yes, <code>merge-base</code> is the commit that the PR uses as well.</p>",
        "id": 436134690,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714423047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2312515.3A.20reduced.20diff.20in.20CI/near/436126951\">said</a>:</p>\n<blockquote>\n<p>Incidentally, if you know how to get the commit hash of the last merge of master that would be great! </p>\n</blockquote>\n<p>Ah, I thought this question meant you didn't already know that!</p>",
        "id": 436134880,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714423112
    },
    {
        "content": "<p>If you literally mean \"the last merge commit\", this is meaningless because merge commits can contain anything</p>",
        "id": 436134978,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714423151
    },
    {
        "content": "<p>Oh, is that the commit of the last merge of master, or of the \"best common parent\", which normally means the master commit from which you branched?</p>",
        "id": 436135010,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714423165
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2312515.3A.20reduced.20diff.20in.20CI/near/436134978\">said</a>:</p>\n<blockquote>\n<p>If you literally mean \"the last merge commit\", this is meaningless because merge commits can contain anything</p>\n</blockquote>\n<p>Ok, so maybe this is the reason why I could not google for such a commit...</p>",
        "id": 436135087,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714423199
    },
    {
        "content": "<p>Anyway, the PR uses <code>merge-base</code>, but I would rather have the one that github uses.</p>",
        "id": 436135174,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714423217
    },
    {
        "content": "<p>It's possible that one of the mathlib3 bots got this right</p>",
        "id": 436135241,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714423242
    },
    {
        "content": "<p>(In my mind, when I \"update a PR\", I usually do <code>git merge master</code> and I would have liked to retrieve <em>that</em> master commit that got merged.)</p>",
        "id": 436135291,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714423263
    },
    {
        "content": "<p>I think the answer is \"use the GitHub API to get exactly the diff, rather than the git command line\"</p>",
        "id": 436135302,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714423267
    },
    {
        "content": "<p>Ok, I tried googling for what to do, but failed.  I will try to look into the GitHub API, thanks!</p>",
        "id": 436135377,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714423301
    },
    {
        "content": "<p>I think looking for some other GitHub action that already does that is probably faster :)</p>",
        "id": 436135475,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714423327
    },
    {
        "content": "<p>(Also, the script takes an optional commit against which it runs the diff, but of course the CI one needs to be standalone.)</p>",
        "id": 436135542,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714423360
    },
    {
        "content": "<p>Reading more, I think the actual answer is \"don't use a reference commit at all\"</p>",
        "id": 436135850,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714423481
    },
    {
        "content": "<p>Use <code>git diff origin/master...HEAD</code></p>",
        "id": 436135901,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714423501
    },
    {
        "content": "<p>Ah, maybe it is time I learned the difference between <code>..</code> and <code>...</code>...</p>",
        "id": 436136107,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714423566
    },
    {
        "content": "<p>Eric, <code>...</code> works great!  I updated the PR to use it!</p>\n<p>The script still takes an optional commit hash, but defaults to <code>origin/master...HEAD</code> if nothing is given.</p>",
        "id": 436139728,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1714424884
    },
    {
        "content": "<p>I made some tweaks to the output: if from <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8893727002/job/24420519871?pr=12515\">this page</a> you click on the cogwheel in the top right and select \"View job summary\"</p>\n<p><a href=\"/user_uploads/3121/O1fbaaoF1rLYhPFK49UooJRU/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/O1fbaaoF1rLYhPFK49UooJRU/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/O1fbaaoF1rLYhPFK49UooJRU/image.png\"></a></div><p>you see</p>\n<hr>\n<h3>Summary</h3>\n<table>\n<thead>\n<tr>\n<th>File</th>\n<th>+-</th>\n<th>Declaration</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>b/scripts/no_lost_declarations.sh</td>\n<td><code>+</code></td>\n<td><code>inductives counted even if it is inductives, rather than inductive</code></td>\n</tr>\n<tr>\n<td>b/scripts/no_lost_declarations.sh</td>\n<td><code>+</code></td>\n<td><code>theorem hello</code></td>\n</tr>\n<tr>\n<td>---</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>2  added declarations</li>\n<li>0  removed declarations</li>\n<li>0  paired declarations</li>\n</ul>\n<hr>\n<p>You can run this locally using</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>./scripts/no_lost_declarations.sh<span class=\"w\"> </span>&lt;optional_commit&gt;\n</code></pre></div>",
        "id": 438082680,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1715407069
    }
]