[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13110\">#13110</a> makes defining structures which use <code>aesop_cat</code> to fill in auto_params slightly more ergonomic. If data fields still contain <code>sorry</code>, rather than getting an error message from <code>aesop_cat</code> about the goal it can't solve, <code>aesop_cat</code> will just use <code>sorry</code> too.</p>",
        "id": 440229003,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716428790
    },
    {
        "content": "<p>Could this be a general behavior of auto-params?</p>",
        "id": 440257061,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716446311
    },
    {
        "content": "<p>Good question. It's probably pretty easy for other users of auto_params to adopt the <code>sorry_if_sorry</code> I used here. If it turns out to convenient in more than one use case (i.e. enough that people adopt it), then we can consider whether changing the language feature makes sense.</p>",
        "id": 440260070,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716447795
    },
    {
        "content": "<p>Yeah I think we never want an auto-param to fail simply because the user hasn't finished writing down the data. This is just (very confusing to beginners!) noise.</p>",
        "id": 440260302,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716447928
    },
    {
        "content": "<p>Possible counterpoint to my argument: Currently we can write <code>nsmul := _</code> when defining a monoid and the auto-param <code>rfl</code> in <code>nsmul_def : nsmul = nsmulRec</code> closes the goal by unifying the <code>_</code> with <code>nsmulRec</code>.</p>",
        "id": 440260451,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716448000
    },
    {
        "content": "<p>Though I guess <code>nsmul</code> doesn't contain <code>sorry</code> in that example</p>",
        "id": 440260476,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716448022
    },
    {
        "content": "<p>Yes, the present state with <code>aesop_cat</code> sometimes gives confusing errors messages with metavariables.</p>",
        "id": 440260850,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716448230
    }
]