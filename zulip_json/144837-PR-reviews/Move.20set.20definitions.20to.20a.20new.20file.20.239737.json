[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/9737\">#9737</a> I move definitions like <code>Set.preimage</code> to a new file so that later we can change some imports from <code>Set.Basic</code> to <code>Set.Defs</code>. What names should I put in the header?</p>\n<p>Also, we may want to merge this file with <code>Init/Set</code> later.</p>",
        "id": 412789321,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705215727
    },
    {
        "content": "<p>I'll fix the other issues together with adding the header to avoid another rebuild of the whole library.</p>",
        "id": 412789487,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705215923
    },
    {
        "content": "<p>It's ready for review now.</p>",
        "id": 412853846,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705273521
    },
    {
        "content": "<p>Looks fine to me. Left a couple of comments. Try running leaff on it?</p>",
        "id": 412859605,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1705278060
    },
    {
        "content": "<p>Where can I find instructions on running <code>leaff</code>?</p>",
        "id": 412866657,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705280887
    },
    {
        "content": "<p>The simplest way is to make a new branch and merge the leaff branch into it</p>",
        "id": 412867623,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1705281423
    },
    {
        "content": "<p>The leaff branch being alexjbest/leaff, if you push this leaff will print the diff to the actions summary view (you don't need to open a PR for the new branch to see the output)</p>",
        "id": 412867868,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1705281551
    },
    {
        "content": "<p><a href=\"https://github.com/alexjbest/leaff?tab=readme-ov-file#usage\">https://github.com/alexjbest/leaff?tab=readme-ov-file#usage</a> is how to run it directly</p>",
        "id": 412868045,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1705281636
    },
    {
        "content": "<p>Thank you! I'll try to run it directly, then use the \"merge\" trick if it fails.</p>",
        "id": 412868128,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705281694
    },
    {
        "content": "<p>I see lots of \"type changed\", most probably because I added notation class instances before the boolean algebra instance.</p>",
        "id": 412869085,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705282257
    },
    {
        "content": "<p>I'll make the same change on <code>master</code>, then compare.</p>",
        "id": 412869120,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705282277
    },
    {
        "content": "<p>A similar PR: <a href=\"https://github.com/leanprover-community/mathlib4/pull/9750\">#9750</a></p>",
        "id": 412870631,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705283135
    },
    {
        "content": "<p>What does</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">collision</span> <span class=\"n\">when</span> <span class=\"n\">hashing</span> <span class=\"n\">for</span> <span class=\"o\">[</span><span class=\"n\">Trait.name</span><span class=\"o\">,</span> <span class=\"n\">Trait.value</span><span class=\"o\">],</span> <span class=\"n\">all</span> <span class=\"n\">bets</span> <span class=\"n\">are</span> <span class=\"n\">off</span> <span class=\"n\">HasCompl.recOn</span> <span class=\"o\">(</span><span class=\"n\">HasCompl.casesOn</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>mean?</p>",
        "id": 412870962,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705283293
    },
    {
        "content": "<p>It reports about 200 differences between a2fd24f606 and 7c0bd74547. Can it be because I changed <code>Type u</code> to <code>Type*</code> here and there?</p>",
        "id": 412871133,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705283385
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/Move.20set.20definitions.20to.20a.20new.20file.20.239737/near/412870962\">said</a>:</p>\n<blockquote>\n<p>What does</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">collision</span> <span class=\"n\">when</span> <span class=\"n\">hashing</span> <span class=\"n\">for</span> <span class=\"o\">[</span><span class=\"n\">Trait.name</span><span class=\"o\">,</span> <span class=\"n\">Trait.value</span><span class=\"o\">],</span> <span class=\"n\">all</span> <span class=\"n\">bets</span> <span class=\"n\">are</span> <span class=\"n\">off</span> <span class=\"n\">HasCompl.recOn</span> <span class=\"o\">(</span><span class=\"n\">HasCompl.casesOn</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>mean?</p>\n</blockquote>\n<p>This is not your fault, it basically means that <code>HasCompl.recOn</code> and <code>HasCompl.casesOn</code> have the same type exactly, but this shouldn't affect anything (I'll remove these warnings when I'm happy everything works)</p>",
        "id": 412871475,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1705283532
    },
    {
        "content": "<p>Hmm I'm not sure about type u and type*, possibly that could be a difference. As I mentioned in my talk I'd like to differentiate a bit more between things that changed for technical reasons, and things that really are different</p>",
        "id": 412871624,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1705283613
    },
    {
        "content": "<p>Also, what does \"proof changed for <a href=\"http://Bot.bot\">Bot.bot</a>\" mean? <code>Bot.bot</code> is not a theorem.</p>",
        "id": 412871774,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705283677
    },
    {
        "content": "<p>It means the value of the def changed in that case (it is a todo to display this better)</p>",
        "id": 412873056,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1705284350
    },
    {
        "content": "<p>I'll sync <code>Type u</code> vs <code>Type*</code> and see if there are any differences remain.</p>",
        "id": 412875126,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705285583
    },
    {
        "content": "<p>I tried to sync <code>Type u</code> vs <code>Type*</code> but it didn't help. Probably, <code>Type*</code> generates a semi-random name or id and it's different in 2 branches.</p>",
        "id": 412879323,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705288782
    },
    {
        "content": "<p>Is there any way to actually inspect the differences?</p>",
        "id": 412879365,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705288804
    },
    {
        "content": "<p>So, I suggest that we aren't waiting for a clean <code>leaff</code> output in <a href=\"https://github.com/leanprover-community/mathlib4/pull/9737\">#9737</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/9750\">#9750</a></p>",
        "id": 412880002,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705289301
    },
    {
        "content": "<p>I agree, but I suggested running it because it should catch any major issues like dropped theorems, I think?</p>",
        "id": 412961929,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1705326777
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/Move.20set.20definitions.20to.20a.20new.20file.20.239737/near/412879365\">said</a>:</p>\n<blockquote>\n<p>Is there any way to actually inspect the differences?</p>\n</blockquote>\n<p>Not yet, but this is planned too, and has been highly requested indeed.</p>",
        "id": 412962302,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1705326888
    }
]