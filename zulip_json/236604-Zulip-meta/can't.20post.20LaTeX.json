[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">So</span> <span class=\"bp\">$$</span><span class=\"n\">q</span><span class=\"bp\">$$</span> <span class=\"n\">can</span> <span class=\"n\">just</span> <span class=\"n\">be</span> <span class=\"bp\">$$</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"o\">{</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">}</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"bp\">$$</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">the</span> <span class=\"n\">big</span> <span class=\"n\">question</span> <span class=\"n\">is</span> <span class=\"n\">how</span> <span class=\"n\">to</span> <span class=\"n\">make</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">work.</span> <span class=\"n\">Because</span> <span class=\"bp\">$$</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">ax</span><span class=\"o\">)</span><span class=\"bp\">$$</span> <span class=\"n\">is</span> <span class=\"n\">getting</span> <span class=\"n\">bigger</span> <span class=\"n\">as</span> <span class=\"bp\">$$</span><span class=\"n\">x</span><span class=\"bp\">$$</span> <span class=\"n\">increases</span> <span class=\"n\">to</span> <span class=\"bp\">$$</span><span class=\"n\">a</span><span class=\"bp\">$$</span> <span class=\"k\">from</span> <span class=\"n\">below</span><span class=\"o\">,</span> <span class=\"k\">if</span> <span class=\"n\">we</span> <span class=\"n\">can</span> <span class=\"n\">make</span> <span class=\"n\">sure</span> <span class=\"n\">that</span> <span class=\"bp\">$$</span><span class=\"n\">C</span><span class=\"bp\">\\</span><span class=\"n\">leq</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">ap</span><span class=\"o\">)</span><span class=\"bp\">$$</span> <span class=\"k\">then</span> <span class=\"n\">this</span> <span class=\"n\">is</span> <span class=\"n\">going</span> <span class=\"n\">to</span> <span class=\"n\">work.</span> <span class=\"n\">Because</span> <span class=\"bp\">$$</span><span class=\"n\">p</span><span class=\"bp\">$$</span> <span class=\"n\">is</span> <span class=\"n\">just</span> <span class=\"n\">a</span> <span class=\"n\">tiny</span> <span class=\"n\">bit</span> <span class=\"n\">less</span> <span class=\"n\">than</span> <span class=\"bp\">$$</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"o\">{</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">}</span><span class=\"bp\">$$</span><span class=\"o\">,</span> <span class=\"bp\">$$</span><span class=\"n\">ap</span><span class=\"bp\">$$</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">a</span> <span class=\"n\">tiny</span> <span class=\"n\">bit</span> <span class=\"n\">less</span> <span class=\"n\">than</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">so</span> <span class=\"bp\">$$</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">ap</span><span class=\"o\">)</span><span class=\"bp\">$$</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">positive</span><span class=\"o\">,</span> <span class=\"n\">so</span> <span class=\"n\">we</span> <span class=\"n\">can</span> <span class=\"n\">multiply</span> <span class=\"n\">both</span> <span class=\"n\">sides</span> <span class=\"kd\">by</span> <span class=\"bp\">$$</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">ap</span><span class=\"o\">)</span><span class=\"bp\">$$</span> <span class=\"n\">and</span> <span class=\"n\">reduce</span> <span class=\"n\">our</span> <span class=\"n\">problem</span> <span class=\"n\">to</span> <span class=\"n\">finding</span> <span class=\"n\">a</span> <span class=\"bp\">$$</span><span class=\"n\">p</span><span class=\"bp\">$$</span> <span class=\"n\">such</span> <span class=\"n\">that</span> <span class=\"bp\">$$</span><span class=\"n\">C</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">ap</span><span class=\"o\">)</span><span class=\"bp\">\\</span><span class=\"n\">leq</span> <span class=\"mi\">1</span><span class=\"bp\">$$.</span> <span class=\"n\">Doing</span> <span class=\"n\">the</span> <span class=\"n\">algebra</span> <span class=\"n\">we</span> <span class=\"n\">see</span> <span class=\"bp\">$$</span><span class=\"n\">C</span><span class=\"bp\">-</span><span class=\"n\">Cap</span><span class=\"bp\">\\</span><span class=\"n\">leq</span> <span class=\"mi\">1</span><span class=\"bp\">$$</span> <span class=\"n\">so</span> <span class=\"bp\">$$</span><span class=\"n\">C</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">\\</span><span class=\"n\">leq</span> <span class=\"n\">Cap</span><span class=\"bp\">$$</span> <span class=\"n\">and</span> <span class=\"n\">now</span> <span class=\"n\">we</span> <span class=\"k\">have</span> <span class=\"n\">to</span> <span class=\"n\">be</span> <span class=\"n\">a</span> <span class=\"n\">bit</span> <span class=\"n\">careful</span> <span class=\"n\">because</span> <span class=\"n\">we</span> <span class=\"n\">want</span> <span class=\"n\">to</span> <span class=\"n\">divide</span> <span class=\"kd\">by</span> <span class=\"bp\">$$</span><span class=\"n\">C</span><span class=\"bp\">$$</span> <span class=\"n\">to</span> <span class=\"n\">isolate</span> <span class=\"bp\">$$</span><span class=\"n\">p</span><span class=\"bp\">$$</span> <span class=\"n\">but</span> <span class=\"n\">don't</span> <span class=\"n\">know</span> <span class=\"n\">the</span> <span class=\"n\">sign</span> <span class=\"n\">of</span> <span class=\"bp\">$$</span><span class=\"n\">C</span><span class=\"bp\">$$</span> <span class=\"n\">so</span> <span class=\"n\">we</span> <span class=\"n\">can't</span> <span class=\"n\">control</span> <span class=\"n\">the</span> <span class=\"n\">inequality.</span>\n</code></pre></div>",
        "id": 424300303,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709316287
    },
    {
        "content": "<p>If I view source of that message, remove the triple quotes, and just try and post the LaTeX, then with 100% reliability the post fails for me (I get the red error icons like you do if you're on a train and lose connection)</p>",
        "id": 424300411,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709316338
    },
    {
        "content": "<p><a href=\"#narrow/stream/113489-new-members/topic/FIlter.2ETendsto.20atTop.20Help.20on.20Proof/near/424299810\">here</a> I split the paragraph into two, and I manage to send the message successfully.</p>",
        "id": 424300553,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709316392
    },
    {
        "content": "<p>On Ubuntu 22.04, using the desktop app.</p>",
        "id": 424300652,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709316431
    },
    {
        "content": "<p>We have some performance problems rendering messages with a large number of separate <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8988em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6833em;\"><span style=\"top:-2.905em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4678em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">â€‹</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span> blocks in them; as you've found, splitting it into two messages is a workaround.  </p>\n<p>I expect we'll have a solution for this in the next month or so.  <a href=\"https://github.com/zulip/zulip/issues/17425\">https://github.com/zulip/zulip/issues/17425</a> is the bug to follow for updates.</p>",
        "id": 424307676,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1709319228
    },
    {
        "content": "<p>yeah I opened that in 2021 :-) The situation is much better now -- when the post failed today I could still access the post in drafts so I could copy-paste to a file and not lose it; I just reposted it in chunks. But conversely my paragraph above was much smaller than the large multi-paragraph messages I was struggling with in 2021.</p>",
        "id": 424309168,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709319775
    },
    {
        "content": "<p>The raw number of <code>$$foo$$</code> blocks is the relevant limitation.  The short summary is that it takes some time to render each one, and we time out trying to render the message if we take too long.</p>",
        "id": 424309895,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1709320075
    },
    {
        "content": "<p>I count 18 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8988em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6833em;\"><span style=\"top:-2.905em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4678em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">â€‹</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span> blocks in there.  My suspicion is that the paragraphs in 2021 may have been longer, but may not have had more <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8988em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6833em;\"><span style=\"top:-2.905em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4678em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">â€‹</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span> blocks in them.</p>",
        "id": 424310107,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1709320171
    },
    {
        "content": "<p>Hm.  I guess your example in the 2021 bug report, reproduced below, has more than 18 blocks, and you did get it to render eventually:<br>\n<a href=\"/user_uploads/3121/Sq4J1OyC_mCV41EC4lTi5JMa/109338371-18026080-785e-11eb-9f1b-97ca11c4fdba.png\">109338371-18026080-785e-11eb-9f1b-97ca11c4fdba.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Sq4J1OyC_mCV41EC4lTi5JMa/109338371-18026080-785e-11eb-9f1b-97ca11c4fdba.png\" title=\"109338371-18026080-785e-11eb-9f1b-97ca11c4fdba.png\"><img src=\"/user_uploads/3121/Sq4J1OyC_mCV41EC4lTi5JMa/109338371-18026080-785e-11eb-9f1b-97ca11c4fdba.png\"></a></div>",
        "id": 424310278,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1709320244
    },
    {
        "content": "<p>So there may be a performance regression in this codepath which is limiting how many \"fit\" before it times out.</p>",
        "id": 424310384,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1709320293
    },
    {
        "content": "<p>Tangentially, <a href=\"https://github.com/zulip/zulip/issues/28626\">https://github.com/zulip/zulip/issues/28626</a> to make it easier to compose several messages, to be sent back-to-back, by splitting at paragraph breaks, is also making some progress.</p>",
        "id": 424310769,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1709320445
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"351644\">Alex Vandiver</span> <a href=\"#narrow/stream/236604-Zulip-meta/topic/can't.20post.20LaTeX/near/424307676\">said</a>:</p>\n<blockquote>\n<p>I expect we'll have a solution for this in the next month or so.  <a href=\"https://github.com/zulip/zulip/issues/17425\">https://github.com/zulip/zulip/issues/17425</a> is the bug to follow for updates.</p>\n</blockquote>\n<p>This is now live.  Taking your above example:</p>\n<blockquote>\n<p>So <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> can just be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>a</mi><mrow><mo>âˆ’</mo><mn>1</mn></mrow></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">a^{-1}+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">âˆ’</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>, and the big question is how to make (a) work. Because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>âˆ’</mo><mi>a</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">1/(1-ax)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">âˆ’</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is getting bigger as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> increases to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> from below, if we can make sure that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>â‰¤</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>âˆ’</mo><mi>a</mi><mi>p</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C\\leq 1/(1-ap)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">â‰¤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">âˆ’</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span></span> then this is going to work. Because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> is just a tiny bit less than <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>a</mi><mrow><mo>âˆ’</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">a^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">âˆ’</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">ap</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span></span></span></span> will be a tiny bit less than 1, so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>âˆ’</mo><mi>a</mi><mi>p</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(1-ap)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">âˆ’</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span></span> will be positive, so we can multiply both sides by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>âˆ’</mo><mi>a</mi><mi>p</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(1-ap)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">âˆ’</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span></span> and reduce our problem to finding a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>âˆ’</mo><mi>a</mi><mi>p</mi><mo stretchy=\"false\">)</mo><mo>â‰¤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">C(1-ap)\\leq 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">âˆ’</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">â‰¤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>. Doing the algebra we see <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>âˆ’</mo><mi>C</mi><mi>a</mi><mi>p</mi><mo>â‰¤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">C-Cap\\leq 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">âˆ’</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">â‰¤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>âˆ’</mo><mn>1</mn><mo>â‰¤</mo><mi>C</mi><mi>a</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">C-1\\leq Cap</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">âˆ’</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">â‰¤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span></span></span></span> and now we have to be a bit careful because we want to divide by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> to isolate <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> but don't know the sign of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> so we can't control the inequality.</p>\n</blockquote>",
        "id": 429774111,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1711508627
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 429807554,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1711528597
    },
    {
        "content": "<p>Rendering <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8988em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6833em;\"><span style=\"top:-2.905em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4678em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">â€‹</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span> should now be fast enough that I do not expect messages with even copious amounts of it to fail to render.  Please bring it to our attention if you're still seeing any failures of that form.</p>",
        "id": 429903523,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1711557725
    }
]