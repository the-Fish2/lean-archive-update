[
    {
        "content": "<p>On Zulip, <code>abbrev</code> (at the beginning of  a line near the bottom of this code) is showing up in a different colour to everything around it (as is <code>import</code>, but at least <code>import</code> is some non-default colour). Is this expected?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Basic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">is_filter</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">):</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">filter_example</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">is_filter</span> <span class=\"n\">filter_example</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">Filter</span> <span class=\"o\">(</span><span class=\"n\">filter</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"n\">filter_proof</span><span class=\"o\">:</span> <span class=\"n\">is_filter</span> <span class=\"n\">filter</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"o\">(</span><span class=\"n\">filter_example</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">foo</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">N</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fil</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">refined_filter_is_filter</span> <span class=\"o\">(</span><span class=\"n\">N</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fil</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">inst</span><span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">fil</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">is_filter</span> <span class=\"o\">(</span><span class=\"n\">refine</span> <span class=\"n\">N</span> <span class=\"n\">fil</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fil</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Filter</span> <span class=\"n\">fil</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"o\">(</span><span class=\"n\">refine</span> <span class=\"n\">N</span> <span class=\"n\">fil</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">refined_filter_is_filter</span> <span class=\"n\">N</span> <span class=\"n\">fil</span><span class=\"o\">⟩</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">refined_filter_example</span> <span class=\"o\">:=</span> <span class=\"n\">refine</span> <span class=\"n\">Nat.zero</span> <span class=\"n\">filter_example</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">test1</span> <span class=\"o\">:</span> <span class=\"n\">is_filter</span> <span class=\"n\">refined_filter_example</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">refined_filter_is_filter</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">test2</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">refined_filter_example</span> <span class=\"o\">:=</span> <span class=\"n\">inferInstance</span>\n</code></pre></div>",
        "id": 418302714,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706284353
    },
    {
        "content": "<p>I believe that <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> recently updated the Pygments parser for lean; I don't know if we've taken that update yet, or if this is a change from that.</p>",
        "id": 418304832,
        "sender_full_name": "Alex Vandiver",
        "timestamp": 1706284973
    },
    {
        "content": "<p>Pygments has not yet made a release with that update</p>",
        "id": 418307431,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706285757
    },
    {
        "content": "<p>But the update will fix the issue above (after we also reconfigure our default language on Zulip to be Lean4)</p>",
        "id": 418307589,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706285795
    },
    {
        "content": "<p>GitHub claims they're aiming for a release in the next few days</p>",
        "id": 418307717,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706285846
    }
]