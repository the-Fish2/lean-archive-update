[
    {
        "content": "<p>Current in <code>test/lint_unreachableTactic.lean</code> we have:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/--</span>\n<span class=\"sd\">warning: this tactic is never executed</span>\n<span class=\"sd\">note: this linter can be disabled with `set_option linter.unreachableTactic false`</span>\n<span class=\"sd\">-/</span>\n<span class=\"bp\">#</span><span class=\"n\">guard_msgs</span> <span class=\"k\">in</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rfl</span> <span class=\"bp\">&lt;;&gt;</span> <span class=\"n\">simp</span>\n</code></pre></div>\n<p>Here <code>#guard_msgs</code> is successfully checking the emitted warning, however unlike every other case, it doesn't actually suppress the warning.</p>\n<p>This means this file is the sole \"noisy\" test in Batteries. Can we fix this? (I'm guessing it is a problem in unreachableTactic, rather than guard_msgs, but haven't looked.) <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 438686404,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715733247
    },
    {
        "content": "<p>This may not be everyone's opinion of an elegant solution, but I found that sometimes this works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">linter.multiGoal</span> <span class=\"n\">false</span> <span class=\"k\">in</span>\n <span class=\"bp\">#</span><span class=\"n\">guard_msgs</span><span class=\"o\">(</span><span class=\"n\">drop</span> <span class=\"n\">warning</span><span class=\"o\">)</span> <span class=\"k\">in</span>\n <span class=\"kd\">set_option</span> <span class=\"n\">linter.multiGoal</span> <span class=\"n\">true</span> <span class=\"k\">in</span>\n <span class=\"sd\">/--</span>\n<span class=\"sd\"> warning: 'rfl' leaves 1 goal 'Lean.Parser.Tactic.tacticRfl'</span>\n<span class=\"sd\"> note: this linter can be disabled with `set_option linter.multiGoal false`</span>\n<span class=\"sd\"> -/</span>\n <span class=\"c1\">-- the linter allows `iterate` and `repeat'`, but continues to lint.</span>\n <span class=\"bp\">#</span><span class=\"n\">guard_msgs</span> <span class=\"k\">in</span>\n<span class=\"bp\">&lt;</span><span class=\"n\">Actual</span> <span class=\"n\">test</span><span class=\"bp\">&gt;</span>\n</code></pre></div>",
        "id": 438686992,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1715733621
    },
    {
        "content": "<p>That'll do for me, thanks! <a href=\"https://github.com/leanprover-community/batteries/pull/798\">batteries#798</a></p>",
        "id": 438687373,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715733841
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> This is a known issue with <code>#guard_msgs</code>, that linters are run on <code>#guard_msgs</code> itself (linters are run twice, once on the command inside <code>#guard_msgs</code>, and once again on the whole <code>#guard_msgs</code> command). The workaround for the unused variables linter was to add <code>#guard_msgs</code> as an exception, but this is not general solution for all linters.</p>",
        "id": 438687445,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715733883
    },
    {
        "content": "<p>Damiano's idea is a good workaround.</p>",
        "id": 438687527,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715733935
    },
    {
        "content": "<p>I've updated the comment, thanks.</p>",
        "id": 438687636,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715733989
    },
    {
        "content": "<p>If there were some protocol to be able to disable <a href=\"https://github.com/leanprover/lean4/blob/master/src/Lean/Elab/Command.lean#L336-L337\">these lines</a> for <code>#guard_msgs</code> then this would be solved once and for all.</p>",
        "id": 438688272,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1715734384
    }
]