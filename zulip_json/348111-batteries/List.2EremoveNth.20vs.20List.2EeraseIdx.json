[
    {
        "content": "<p>It looks like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=List.removeNth#doc\">docs#List.removeNth</a> from Std is the same as <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=List.eraseIdx#doc\">docs#List.eraseIdx</a> from core.</p>",
        "id": 435836737,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714284800
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> What do you prefer to do? Drop Std version (probably, making it a deprecated alias first)? Something else?</p>",
        "id": 435836826,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714284882
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Ping here.</p>",
        "id": 436905680,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714749438
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12388\">#12388</a> adds lemmas about <code>eraseIdx</code> to Mathlib. Should I leave it as is, or migrate to <code>removeNth</code>?</p>",
        "id": 436905833,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714749485
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a>: I want to redefine <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.offDiag#doc\">docs#Finset.offDiag</a> based on</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">offDiag</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">l.enum.bind</span> <span class=\"k\">fun</span> <span class=\"n\">nx</span> <span class=\"bp\">↦</span> <span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">Prod.mk</span> <span class=\"n\">nx.2</span><span class=\"o\">)</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">l.eraseIdx</span> <span class=\"n\">nx.1</span>\n</code></pre></div>",
        "id": 436906657,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714749730
    },
    {
        "content": "<p>Drop the std version makes sense</p>",
        "id": 436925560,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714756287
    },
    {
        "content": "<p>OK, I'll prepare a PR over the weekend.</p>",
        "id": 436966080,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714774092
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/std4/pull/781\">std4#781</a> <a href=\"https://github.com/leanprover-community/mathlib4/pull/12660\">#12660</a></p>",
        "id": 437029612,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714836511
    }
]