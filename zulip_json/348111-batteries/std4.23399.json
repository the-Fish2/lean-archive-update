[
    {
        "content": "<p>Could I ping on <a href=\"https://github.com/leanprover/std4/pull/399\">std4#399</a>, \"run List (MetaM x) asynchronously, returning an MLList MetaM x in the order they return\"?</p>\n<p>It is a prerequisite for the <code>hint</code> tactic PR's as <a href=\"https://github.com/leanprover/std4/pull/395\">std4#395</a>, which I would really like to get out into users' hands.</p>",
        "id": 409063522,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703038476
    },
    {
        "content": "<p>The effect of this will be that <code>hint</code> is nondeterministic, right?</p>",
        "id": 409204996,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1703084758
    },
    {
        "content": "<p>Isn't it now?</p>",
        "id": 409205246,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1703084818
    },
    {
        "content": "<p>Right now I think it runs them in a deterministic order; the proposed change makes them run in parallel, and keep the results based on (nondeterministic) runtime; which means that writing tests for (or diagnosing issues with) <code>hint</code> is going to be tricky</p>",
        "id": 409206034,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1703085054
    },
    {
        "content": "<p>Ah indeed,  <a href=\"https://github.com/leanprover-community/mathlib4/pull/8435\">#8435</a> hasn't landed yet</p>",
        "id": 409207555,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1703085550
    },
    {
        "content": "<p>The ideal solution would be to ask for the heartbeat count of the successful task, and then have a \"soft\" cancellation that updates the heartbeat limit of the other tasks to not exceed the one that succeeded; but that seems like too much effort for too little gain.</p>",
        "id": 409209694,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1703086231
    },
    {
        "content": "<p>How many hint tactics are there typically?  If there are many, hints later in the list aren't necessarily going to run until the earlier ones finish.</p>",
        "id": 409214487,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1703087772
    },
    {
        "content": "<p>Can the tests limit the number of jobs that run concurrently?</p>",
        "id": 409215783,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1703088136
    },
    {
        "content": "<p>There are currently 7 <code>register_hint</code> commands in Mathlib, but likely that number will grow, although perhap not to more than 20 or so.</p>",
        "id": 409315624,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703138111
    }
]