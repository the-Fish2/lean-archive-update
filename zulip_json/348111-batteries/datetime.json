[
    {
        "content": "<p>Is the a lib available for parsing / calculating with datetimes?</p>",
        "id": 436276392,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714485029
    },
    {
        "content": "<p>I know nothing about it except that it exists, but: <a href=\"https://github.com/ammkrn/timelib\">https://github.com/ammkrn/timelib</a></p>",
        "id": 436278029,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1714485495
    },
    {
        "content": "<p>A datetime library downstream of mathlib, eek!</p>",
        "id": 436280296,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714486124
    },
    {
        "content": "<p>Kim, you should see this as an indication that you are doing an important work when trying to upstream programmy stuff!</p>",
        "id": 436282981,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1714486888
    },
    {
        "content": "<p>It depends on Mathlib here: <a href=\"https://github.com/ammkrn/timelib/blob/main/Timelib/Util.lean\">https://github.com/ammkrn/timelib/blob/main/Timelib/Util.lean</a></p>",
        "id": 436283680,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1714487087
    },
    {
        "content": "<p>I found another file that depends on Mathlib.<br>\nIt raises an interesting question: how can one depend on Mathlib without depending on its entirety? This \"lazy dependency\" is something I haven't seen anywhere else</p>",
        "id": 436284496,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1714487310
    },
    {
        "content": "<p>Actually it's \"possible\" in Rust if the upstream project is structured with the right hierarchy of sub-crates.<br>\nFor example, suppose I were able to depend on the <code>Mathlib.Algebra.Order</code> \"submodule\" and then Lake would download that for me, besides the transitive dependencies of <code>Mathlib.Algebra.Order</code>... and <em>nothing else</em></p>",
        "id": 436286450,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1714487860
    },
    {
        "content": "<p>I guess some of Yaël's work might help with that. Also some kind of tree shaking algorithm could be interesting</p>",
        "id": 436287138,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714488068
    },
    {
        "content": "<p>Ruben is right. See <a href=\"https://github.com/leanprover-community/mathlib4/pull/11757\">#11757</a>, <span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span></p>",
        "id": 436296441,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714490455
    },
    {
        "content": "<p>So Lake already supports partial dependencies on a project?<br>\nSorry for derailing the thread btw</p>",
        "id": 436312284,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1714495005
    },
    {
        "content": "<p>If you split the project, yes :)</p>",
        "id": 436313784,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714495542
    },
    {
        "content": "<p>I would say that it doesn't really support this. You can't really split projects easily either because there are still reservoir-related constraints on having multiple projects in the same repo or a project in a subfolder, and as far as I know there is no way to depend on only one library in a package without depending on the whole package</p>",
        "id": 436333607,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714502817
    },
    {
        "content": "<p>I have been arguing for better support for mathlib-style packages where the expectation is that you aren't depending on most of the files in the package, but currently you get all the sources downloaded no matter what, and <code>lake exe cache get</code> will download all the oleans unless you specifically ask otherwise. If lake was handling <code>cache</code> then it would be able to download the right files every time</p>",
        "id": 436334041,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714502976
    },
    {
        "content": "<p>adding <span class=\"user-mention\" data-user-id=\"228466\">@Chris Bailey</span> to the conversation</p>",
        "id": 436640843,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1714637951
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/348111-std4/topic/datetime/near/436276392\">said</a>:</p>\n<blockquote>\n<p>Is the a lib available for parsing / calculating with datetimes?</p>\n</blockquote>\n<p>There's also  <a href=\"https://github.com/T-Brick/DateTime\">this one</a> which currently has more parsing/printing implemented but is more limited in scope. Just a heads up, it's GPL-3. </p>\n<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/348111-std4/topic/datetime/near/436284496\">said</a>:</p>\n<blockquote>\n<p>I found another file that depends on Mathlib.<br>\nIt raises an interesting question: how can one depend on Mathlib without depending on its entirety? This \"lazy dependency\" is something I haven't seen anywhere else</p>\n</blockquote>\n<p>At least in the case of something like Timelib, authors can split their work into two packages, one has the core functionality (leaving out proofs and fancy typeclass instances) and another has the mathlib dependency and provides all of the proofs and fancier typeclass instances.</p>\n<p>If users want a slim dependency that's just to do date arithmetic, they can take the basic dependency. If they want the full thing, they also import <code>TimelibExtras</code> or whatever.</p>\n<p>Mathlib still holds a lot of important declarations and is pretty hard to get around in the wild.</p>",
        "id": 436776668,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1714683889
    }
]