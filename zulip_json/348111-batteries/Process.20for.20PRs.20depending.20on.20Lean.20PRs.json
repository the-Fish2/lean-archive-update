[
    {
        "content": "<p>I'm working on following up with my RFC <a href=\"https://github.com/leanprover/lean4/pull/3198\">lean4#3198</a>. This involves making a PR to core and a dependent PR to Std (perhaps even another PR for Mathlib). This is actually my first time doing this for a long time.</p>\n<p>I tried to keep track of the various features to facilitate this process but I was only passively reading as they were happening. Is there some documentation how to properly use <code>bump/v4.6.0</code> and <code>nightly-testing</code> branches. Right now I'm following my nose and things are working out but I'm worried I'm doing it wrong and I might have to backtrack and do it all over again.</p>",
        "id": 418217945,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1706249929
    },
    {
        "content": "<p>There is documentation here: <a href=\"https://leanprover-community.github.io/contribute/tags_and_branches.html\">https://leanprover-community.github.io/contribute/tags_and_branches.html</a></p>",
        "id": 418228333,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1706256394
    },
    {
        "content": "<p>That's exactly what I was looking for! Thanks!</p>",
        "id": 418292080,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1706281218
    },
    {
        "content": "<p>I keep running into small issues. Most are due to my ignorance but some appear to be due to the fact that I'm working from a fork on lean4 and std4 rather than a branch. Pro-tips from git experts would be most welcome!</p>",
        "id": 418366528,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1706312567
    },
    {
        "content": "<p>You need to branch off from <code>nightly-with-mathlib</code>, not <code>master</code>.</p>",
        "id": 418404320,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1706348548
    },
    {
        "content": "<p>This means that your git log should show your changes, and then as the first commit that isn't yours the one labeled <code>nightly-with-mathlib</code>.</p>",
        "id": 418404963,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1706349233
    },
    {
        "content": "<p>The issue is that my fork is only set to track the master branch from upstream. It's a serious pain to get other upstream branches.</p>",
        "id": 418441225,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1706384071
    },
    {
        "content": "<p><code>git fetch origin</code> plus referring to the branch as <code>origin/nightly-with-mathlib</code> should work fine. Does it go wrong somehow?</p>",
        "id": 418442056,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706384947
    },
    {
        "content": "<p>I'm on a fork, origin is my fork, upstream is where the branch is. I had to go and edit .git/config to track all branches from upstream instead of just master. It took forever to figure out that was the problem!</p>",
        "id": 418442379,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1706385287
    },
    {
        "content": "<p><code>git fetch upstream</code> and referring to the branch as <code>upstream/nightly-with-mathlib</code> is supposed to work out of the box, but glad to hear your issue is solved!</p>",
        "id": 418442413,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706385355
    },
    {
        "content": "<p>At least when I add a new remote it says <code>fetch = +refs/heads/*:refs/remotes/REMOTE_NAME/*</code> in .git/config by default</p>",
        "id": 418442487,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706385441
    },
    {
        "content": "<p>(I'm a fan of additionally having <code>fetch = +refs/pull/*/head:refs/pullreqs/*</code> so I can refer to branches by PR number)</p>",
        "id": 418442572,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706385535
    },
    {
        "content": "<p>That was the problem, mine was set to <code>fetch = +refs/heads/master:refs/remotes/upstream/master</code> for unknown reasons.</p>",
        "id": 418442606,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1706385589
    },
    {
        "content": "<p>Oh, ouch. The manpage says <code>git remote add -t master &lt;name&gt; &lt;URL&gt;</code> does that, I wonder what porcelain does that by default</p>",
        "id": 418442721,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706385681
    },
    {
        "content": "<p>Indeed! I created that fork a long time ago so I don't recall.</p>",
        "id": 418442831,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1706385811
    },
    {
        "content": "<p>Now that my setup woes are all resolved, everything is on-track. The <code>nightly-testing</code> on Std doesn't work right now but I have a PR ready that builds on the most recent <code>nightly-testing-2024-01-24</code>. I now need write access to the branch <code>lean-pr-testing-3223</code> but that can wait after <code>nighly-testing</code> is fixed. <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span></p>",
        "id": 418479743,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1706425865
    },
    {
        "content": "<p>Holiday still, will probably fix it on the next 24 hours!</p>",
        "id": 418491778,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1706438717
    }
]