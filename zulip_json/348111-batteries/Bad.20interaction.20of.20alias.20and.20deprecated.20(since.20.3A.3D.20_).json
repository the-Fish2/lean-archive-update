[
    {
        "content": "<p>Using <code>deprecated (since := _)</code> on an <code>alias</code> makes the deprecation forget what the source declaration was.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Batteries.Tactic.Alias</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">deprecated</span> <span class=\"o\">(</span><span class=\"n\">since</span> <span class=\"o\">:=</span> <span class=\"s2\">\"\"</span><span class=\"o\">)</span><span class=\"kd\">]</span> <span class=\"n\">alias</span> <span class=\"n\">bar</span> <span class=\"o\">:=</span> <span class=\"n\">foo</span>\n\n<span class=\"sd\">/-- warning: `bar` has been deprecated -/</span>\n<span class=\"bp\">#</span><span class=\"n\">guard_msgs</span> <span class=\"k\">in</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"n\">bar</span>\n\n<span class=\"c1\">-- Expected: `bar` has been deprecated, use `foo` instead</span>\n</code></pre></div>",
        "id": 439757782,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716279597
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 439757789,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716279600
    },
    {
        "content": "<p>Minimised from <a href=\"https://github.com/leanprover-community/mathlib4/pull/12653\">#12653</a></p>",
        "id": 439757845,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716279610
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/batteries/pull/804\">batteries#804</a></p>",
        "id": 439775547,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716284844
    },
    {
        "content": "<p>And after <a href=\"https://github.com/leanprover-community/mathlib4/pull/13081\">#13081</a> passes CI this will be fixed on Mathlib master.</p>",
        "id": 439785406,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716288350
    },
    {
        "content": "<p>Nice, thanks!</p>",
        "id": 440630015,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716637162
    }
]