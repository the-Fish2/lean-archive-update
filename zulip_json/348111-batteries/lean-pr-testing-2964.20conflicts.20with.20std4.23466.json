[
    {
        "content": "<p>We've just got nightly-2023-12-21, which will hopefully turn into <code>v4.5.0-rc1</code> tomorrow. This nightly includes <a href=\"https://github.com/leanprover/lean4/pull/2964\">lean4#2964</a>, the recent bundle of widget improvements. (<span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> will be happy!)</p>\n<p>I've run into a slight problem, however, which is that <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span>'s <a href=\"https://github.com/Vtec234/std4/tree/lean-pr-testing-2964\">Std branch</a> containing adaptations for <a href=\"https://github.com/leanprover/lean4/pull/2964\">lean4#2964</a> (here's the <a href=\"https://github.com/leanprover/std4/compare/main...Vtec234:std4:lean-pr-testing-2964\">diff</a>) has a conflict with <a href=\"https://github.com/leanprover/std4/pull/466\">std4#466</a>, <span class=\"user-mention\" data-user-id=\"548935\">@Thomas Murrills</span>'s recent PR allowing customization of the \"Try this\" prompt.</p>\n<p>For now, on Std's <code>nightly-testing</code> branch I have simply reverted <a href=\"https://github.com/leanprover/std4/pull/466\">std4#466</a>, and then successfully merged Vtec234/lean-pr-testing-2964. This all works (and Mathlib's <code>nightly-testing</code> branch, with the Mathlib <code>lean-pr-testing-2964</code> branch merged in, does too).</p>\n<p>Now we need to get these changes back onto the <code>bump/v4.5.0</code> branches for both Std and Mathlib, in preparation for the release candidate tomorrow...</p>",
        "id": 409341518,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703149246
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"548935\">@Thomas Murrills</span>, might you be able to help me \"replay\" <a href=\"https://github.com/leanprover/std4/pull/466\">std4#466</a> onto <code>nightly-testing</code>? Once we've got the changes from <a href=\"https://github.com/leanprover/std4/pull/466\">std4#466</a> incorporated there, it should be relatively easy to construct the PR to <code>bump/v4.5.0</code>.</p>",
        "id": 409341755,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703149320
    },
    {
        "content": "<p>Ah, actually I think I can do this myself.</p>",
        "id": 409342677,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703149648
    },
    {
        "content": "<p>Ok! (Sorry, was a bit late.) I took a look at the diff, and the implementation would have to change a little: we’d have to push an <code>Array (String × Option String)</code> onto the info tree along along with an <code>Option String</code>.</p>",
        "id": 409342963,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703149747
    },
    {
        "content": "<p>Specifically, we want <code>TryThisInfo</code> to instead have the fields</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">range</span> <span class=\"o\">:</span> <span class=\"bp\">&lt;</span><span class=\"n\">as</span> <span class=\"n\">before</span><span class=\"bp\">&gt;</span>\n<span class=\"n\">suggestionTexts</span> <span class=\"o\">:</span> <span class=\"n\">Array</span> <span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"bp\">×</span> <span class=\"n\">Option</span> <span class=\"n\">String</span><span class=\"o\">)</span>\n<span class=\"n\">codeActionPrefix</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span>\n</code></pre></div>\n<p>and then, in the code action provider, have something equivalent to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">let</span> <span class=\"o\">(</span><span class=\"n\">newText</span><span class=\"o\">,</span> <span class=\"n\">codeAction</span><span class=\"bp\">?</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">suggestions</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"bp\">'</span><span class=\"n\">h.2</span>\n<span class=\"bp\">…</span>\n<span class=\"n\">eager.title</span> <span class=\"o\">:=</span> <span class=\"n\">codeAction</span><span class=\"bp\">?.</span><span class=\"n\">getD</span> <span class=\"bp\">&lt;|</span> <span class=\"o\">(</span><span class=\"n\">codeActionPrefix</span><span class=\"bp\">?.</span><span class=\"n\">getD</span> <span class=\"s2\">\"Try this: \"</span><span class=\"o\">)</span> <span class=\"bp\">++</span> <span class=\"n\">newText</span>\n</code></pre></div>",
        "id": 409344596,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703150282
    },
    {
        "content": "<p>Hmm, I did something a bit different.</p>",
        "id": 409344710,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703150306
    },
    {
        "content": "<p>I added the fields:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"sd\">/-- The prefix to display before the code action for a \"Try this\" suggestion. -/</span>\n  <span class=\"n\">codeActionPrefix</span> <span class=\"o\">:</span> <span class=\"n\">String</span> <span class=\"o\">:=</span> <span class=\"s2\">\"Try this: \"</span>\n  <span class=\"sd\">/--</span>\n<span class=\"sd\">  The title of the code action.</span>\n<span class=\"sd\">  If this is `none`, then the title will be contructed out of `codeActionPrefix` and the suggestion.</span>\n<span class=\"sd\">  -/</span>\n  <span class=\"n\">codeActionTitle</span><span class=\"bp\">?</span> <span class=\"o\">:</span> <span class=\"n\">Option</span> <span class=\"n\">String</span>\n</code></pre></div>",
        "id": 409344779,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703150331
    },
    {
        "content": "<p>But I guess that doesn't actually make sense.</p>",
        "id": 409344876,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703150364
    },
    {
        "content": "<p>Right, the code action title is individual to each suggestion if provided, and otherwise we look for a code action prefix (and if not found we use <code>Try this:</code>)!</p>",
        "id": 409345136,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703150447
    },
    {
        "content": "<p>The remaining pieces are</p>\n<ul>\n<li>constructing the <code>.ofCustomInfo</code> for <code>pushInfoLeaf</code></li>\n<li>cleaning up <code>toJsonM</code> and <code>addSuggestionCore</code> (we no longer include <code>codeActionPrefix</code> and <code>codeAction</code> in the json)</li>\n</ul>",
        "id": 409345897,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703150683
    },
    {
        "content": "<p>I</p>",
        "id": 409346075,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703150747
    },
    {
        "content": "<p>I <em>think</em> I've done it correctly now.</p>",
        "id": 409346098,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703150754
    },
    {
        "content": "<p>Would you be able to take a look at <code>Std/Tactic/TryThis.lean</code> on the <code>nightly-testing</code> branch?</p>",
        "id": 409346175,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703150771
    },
    {
        "content": "<p>(just pushed now)</p>",
        "id": 409346226,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703150786
    },
    {
        "content": "<p>Hmm, it's not quite right. In the test the \"Also consider\" case is not working.</p>",
        "id": 409346378,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703150837
    },
    {
        "content": "<p>I think I can fix it. Also I’d like to avoid pretty-printing twice! (I’m going to change it to <code>toJsonAndInfoM</code>, if that’s alright) Shall I push?</p>",
        "id": 409347258,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703151086
    },
    {
        "content": "<p>(Er, by push i mean “type it out, then push.” :P)</p>",
        "id": 409347343,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703151112
    },
    {
        "content": "<p>Yes please!</p>",
        "id": 409347972,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703151307
    },
    {
        "content": "<p>Ok! Struggled with git a bit but it should now be on nightly-testing on <code>thorimur/std4</code>.</p>",
        "id": 409351246,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703152384
    },
    {
        "content": "<p>(Is there a nice way to link to that or something else I should be doing? Or is that accessible?)</p>",
        "id": 409351490,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703152457
    },
    {
        "content": "<p>I <em>think</em> zulip now subscribes people to threads they start, but here’s a ping just in case since it was 20 minutes between messages :) <span class=\"user-mention silent\" data-user-id=\"110524\">Scott Morrison</span></p>",
        "id": 409353076,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703152953
    },
    {
        "content": "<p>Got it. :-)</p>",
        "id": 409353371,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703153048
    },
    {
        "content": "<p>(Unrelated, but that is…apparently not the same Scott Morrison when you click on the text? I don’t know what zulip is doing with tagging here <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>)</p>",
        "id": 409353615,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703153146
    },
    {
        "content": "<p>Alright, if that's all good(?), I'm going to go to sleep now—this turned out to be a fun little impromptu coding challenge! <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 409354305,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703153380
    },
    {
        "content": "<p>Oof, I forgot two small things:</p>\n<ol>\n<li>the docstring part about <code>codeActionPrefix?</code> for <code>addSuggestions</code> got lost</li>\n<li>I had forgotten to pass <code>codeActionPrefix?</code> to all user-facing functions besides <code>addSuggestions</code></li>\n</ol>",
        "id": 409357205,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703154297
    },
    {
        "content": "<p>There are now 2 extra commits on my <code>nightly-testing</code> branch (described as such) which fixes that, if you want to add it in. If not I can always PR the fix later, no big deal. :)</p>",
        "id": 409357378,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703154358
    },
    {
        "content": "<p>(As well as a third commit because I missed a space before <code>:</code> in those additions. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span>)</p>",
        "id": 409358153,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703154599
    },
    {
        "content": "<p>Fantastic, just looking over it now.</p>",
        "id": 409358477,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703154694
    },
    {
        "content": "<p>I've merged it to <code>nightly-testing</code>, and will make a PR for <code>bump/v4.5.0</code> soon.</p>",
        "id": 409358516,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703154710
    },
    {
        "content": "<p>Okay, looks great!</p>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, <span class=\"user-mention\" data-user-id=\"110994\">@Joe Hendrix</span>,  <a href=\"https://github.com/leanprover/std4/pull/475\">https://github.com/leanprover/std4/pull/475</a> should be the last PR required to the <code>bump/v4.5.0</code> branch. (nightly-2023-12-21 will become v4.5.0-rc1 tomorrow).</p>",
        "id": 409359325,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703154992
    },
    {
        "content": "<p>Great! :D (I'll be turning in now, but if those TryThis changes somehow made something explode (hopefully not!) I'll still be available tomorrow. :) )</p>",
        "id": 409359677,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1703155127
    },
    {
        "content": "<p>Thanks a lot for your help with this!</p>",
        "id": 409363664,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703156517
    },
    {
        "content": "<p>No problem! I think I've got the adaptation PR for Mathlib (i.e. turning <code>lean-pr-testing-2964</code> into a PR to <code>bump/v4.5.0</code>) ready to go.</p>",
        "id": 409363863,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703156565
    },
    {
        "content": "<p>Just compiling locally.</p>",
        "id": 409363884,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703156571
    },
    {
        "content": "<p>Looks good to me: <a href=\"https://github.com/leanprover-community/mathlib4/pull/9176\">https://github.com/leanprover-community/mathlib4/pull/9176</a></p>",
        "id": 409365063,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703156990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> that branch has the wrong adaptations :( I'm really sorry, I made those first and then changed it to the current state <a href=\"https://github.com/leanprover-community/mathlib4/compare/nightly-testing...lean-pr-testing-2964\">here</a>. It's only the new diff that should be used.</p>",
        "id": 409365437,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703157125
    },
    {
        "content": "<p>Oh no! My fault, I must have had an old copy of <code>lean-pr-testing-2964</code> and forgot to pull.</p>",
        "id": 409366637,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703157537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span>, could you look at <a href=\"https://github.com/leanprover-community/mathlib4/pull/9176\">#9176</a> again? Hopefully it is right this time.</p>",
        "id": 409368148,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703158093
    },
    {
        "content": "<p>Looks good now! Thank you.</p>",
        "id": 409368295,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1703158161
    }
]