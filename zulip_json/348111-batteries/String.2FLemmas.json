[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/batteries/pull/857\">batteries#857</a>: deal with nonterminal simps in String/Lemmas </p>\n<p>Makes a quick pass to turn nonterminal <code>simp</code>s into <code>simp only</code>s, as this file was breaking during an experiment with <code>Nat</code> simp lemmas.</p>",
        "id": 446485932,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719184276
    },
    {
        "content": "<p>I have left many <code>-- FIXME nonterminal simp, but `simp?` gives a different result</code> in the file. They don't seem to obstruct my progress, so I wasn't planning on resolving them.</p>",
        "id": 446486001,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719184306
    },
    {
        "content": "<p>If one of the authors of the file (<span class=\"user-mention\" data-user-id=\"417769\">@Bulhwi Cha</span>, <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>?) might have a look at these, possibly creating an issue for the underlying <code>simp?</code> problem, that would be lovely.</p>",
        "id": 446486102,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719184334
    },
    {
        "content": "<p>Actually, some of these FIXMEs <em>are</em> obstructing further progress. In particular <code>extract.go₂_add_right_cancel</code> and <code>extract.go₁_add_right_cancel</code> are breaking on my branch, and both having an earlier nonterminal <code>&lt;;&gt; simp</code> which requires restructing the whole proof to avoid.</p>\n<p>Help on fixing these would be appreciated.</p>",
        "id": 446486385,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719184533
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> are you aware of the <code>squeeze_scope</code> tactic?</p>",
        "id": 446570864,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719223364
    },
    {
        "content": "<p>Yes, and I promise I did try it! Can't remember why I wasn't satisfied, sorry.</p>",
        "id": 446571082,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719223412
    },
    {
        "content": "<p>I managed to use it and get something that compiles, although I didn't look at the proofs too hard</p>",
        "id": 446571315,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719223451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/348111-batteries/topic/String.2FLemmas/near/446486385\">said</a>:</p>\n<blockquote>\n<p>Help on fixing these would be appreciated.</p>\n</blockquote>\n<p>I'm a little busy lately, but I'll look into these this week.</p>",
        "id": 446578214,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719225371
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/348111-batteries/topic/String.2FLemmas/near/446486385\">said</a>:</p>\n<blockquote>\n<p>In particular <code>extract.go₂_add_right_cancel</code> and <code>extract.go₁_add_right_cancel</code> are breaking on my branch, and both having an earlier nonterminal <code>&lt;;&gt; simp</code> which requires restructing the whole proof to avoid.</p>\n</blockquote>\n<p>I see that <span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> has already removed the nonterminal <code>simp</code>s from these lemmas.</p>",
        "id": 448079993,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719730725
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417769\">Bulhwi Cha</span> <a href=\"#narrow/stream/348111-batteries/topic/ten.20unproved.20string.20theorems/near/445185717\">said</a>:</p>\n<blockquote>\n<p>I've spent too much time proving <code>String.splitOn_of_valid</code>, which hasn't been reviewed for two months. I want to wait until the overhaul is finished.</p>\n</blockquote>\n<p>This discourages me from working on lemmas about strings again. Still, it'll be easy to replace nonterminal <code>simp</code>s with <code>simp only</code>s using <code>set_option tactic.simp.trace true</code>. I'll try it.</p>",
        "id": 448081849,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719731398
    },
    {
        "content": "<p>the easy version of this is to use <code>simp?</code> and accept the \"try this\" suggestion</p>",
        "id": 448082041,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719731444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417769\">Bulhwi Cha</span> <a href=\"#narrow/stream/348111-batteries/topic/String.2FLemmas/near/448081849\">said</a>:</p>\n<blockquote>\n<p>Still, it'll be easy to replace nonterminal <code>simp</code>s with <code>simp only</code>s using <code>set_option tactic.simp.trace true</code>. I'll try it.</p>\n</blockquote>\n<p>Oh, this isn't working, and neither is <code>simp?</code>.</p>",
        "id": 448082547,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719731592
    },
    {
        "content": "<p>The lemmas that still have nonterminal <code>simp</code>s aren't created by me. I'll deal with them after the Lean core team completes the planned overhaul of the library work on strings.</p>",
        "id": 448084403,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719732339
    },
    {
        "content": "<p>what do you mean by not working?</p>",
        "id": 448084840,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719732751
    },
    {
        "content": "<p>When I replaced the nonterminal <code>simp</code> in the proof of the theorem <code>prev</code> with the <code>simp only</code> that <code>simp?</code> suggested, the latter part of the proof broke down.</p>",
        "id": 448085384,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719733274
    },
    {
        "content": "<p>it appears that the issue is the reference to <code>prev</code> which should be <code>Iterator.prev</code></p>",
        "id": 448085518,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719733416
    },
    {
        "content": "<p>You're right. I'll look into the other lemmas and see if I can do the same.</p>",
        "id": 448085616,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719733498
    },
    {
        "content": "<p>I guess that's a pretty printer bug</p>",
        "id": 448085655,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719733525
    },
    {
        "content": "<p>It seems that <code>simp?</code> mixes up a name with the same one in a different namespace.</p>",
        "id": 448086038,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719733886
    },
    {
        "content": "<p>I've removed all nonterminal <code>simp</code>s from the lemmas that had the <code>FIXME</code> comment.</p>",
        "id": 448086377,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719734198
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> Is it okay to create a pull request whose base branch is for another person's PR? I've just created <a href=\"https://github.com/leanprover-community/batteries/pull/864\">batteries#864</a>.</p>",
        "id": 448088133,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719735692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <a href=\"#narrow/stream/348111-batteries/topic/String.2FLemmas/near/448085655\">said</a>:</p>\n<blockquote>\n<p>I guess that's a pretty printer bug</p>\n</blockquote>\n<p>Did you create a bug report? If not, I'll do it.</p>",
        "id": 448089377,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719736704
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417769\">Bulhwi Cha</span> <a href=\"#narrow/stream/348111-batteries/topic/String.2FLemmas/near/448089377\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/348111-batteries/topic/String.2FLemmas/near/448085655\">said</a>:</p>\n<blockquote>\n<p>I guess that's a pretty printer bug</p>\n</blockquote>\n<p>Did you create a bug report? If not, I'll do it.</p>\n</blockquote>\n<p>Thanks!</p>",
        "id": 448090037,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719737253
    },
    {
        "content": "<p>I've opened <a href=\"https://github.com/leanprover/lean4/pull/4591\">lean#4591</a>.</p>",
        "id": 448105025,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1719745954
    }
]