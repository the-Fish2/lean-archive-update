[
    {
        "content": "<p>I'm stuck on showing the following simple example: vector dot product a sum of vectors = sum of vector dot product.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.Reflection</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.RowCol</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.BigOperators.Finprod</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.BigOperators.Basic</span>\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n<span class=\"kn\">open</span> <span class=\"n\">Finset</span>\n<span class=\"kn\">open</span> <span class=\"n\">Matrix</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">w</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">w</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 438445078,
        "sender_full_name": "victoria",
        "timestamp": 1715633263
    },
    {
        "content": "<p>update code</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.InnerProductSpace.PiL2</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.Reflection</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.RowCol</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.BigOperators.Finprod</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.BigOperators.Basic</span>\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span>\n<span class=\"kn\">open</span> <span class=\"n\">Finset</span>\n<span class=\"kn\">open</span> <span class=\"n\">Matrix</span>\n\n\n<span class=\"kd\">variable</span><span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">)</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">w</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">w</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 438445785,
        "sender_full_name": "victoria",
        "timestamp": 1715633502
    },
    {
        "content": "<p>(note that <code>set_option autoImplicit false</code>would have given you a clearer error for the first code)</p>",
        "id": 438446937,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715633904
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span> Matrix.dot_product, Finset.sum</p>",
        "id": 438448713,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715634530
    },
    {
        "content": "<p><span aria-label=\"exclamation\" class=\"emoji emoji-2757\" role=\"img\" title=\"exclamation\">:exclamation:</span> unknown identifier 'Matrix.dot_product'<br>\nDid you mean <a href=\"https://loogle.lean-lang.org/?q=%22Matrix.dot_product%22%2C%20Finset.sum\"><code>\"Matrix.dot_product\", Finset.sum</code></a>?</p>",
        "id": 438448715,
        "sender_full_name": "loogle",
        "timestamp": 1715634531
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"644391\">@loogle</span>  Matrix.dotProduct, Finset.sum</p>",
        "id": 438448749,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715634550
    },
    {
        "content": "<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Matrix/Basic.html#Matrix.dotProduct_one\">Matrix.dotProduct_one</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Matrix/Basic.html#Matrix.one_dotProduct\">Matrix.one_dotProduct</a>, and <a href=\"https://loogle.lean-lang.org/?q=Matrix.dotProduct%2C%20Finset.sum\">5 more</a></p>",
        "id": 438448751,
        "sender_full_name": "loogle",
        "timestamp": 1715634551
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">A</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">convert_to</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">ᵥ*</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">*ᵥ</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">·</span> <span class=\"n\">unfold</span> <span class=\"n\">Matrix.vecMul</span> <span class=\"n\">Matrix.dotProduct</span>\n    <span class=\"n\">aesop</span>\n  <span class=\"bp\">·</span> <span class=\"n\">congr</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">Matrix.mulVec</span><span class=\"o\">]</span>\n    <span class=\"n\">ext</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">Matrix.dotProduct</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Matrix.dotProduct_comm</span> <span class=\"n\">_</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">Matrix.dotProduct_mulVec</span><span class=\"o\">,</span> <span class=\"n\">Matrix.dotProduct_comm</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 438448758,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1715634553
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">w</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">w</span> <span class=\"n\">i</span> <span class=\"o\">:=</span>\n  <span class=\"n\">map_sum</span>\n    <span class=\"o\">{</span> <span class=\"n\">toFun</span> <span class=\"o\">:=</span> <span class=\"n\">dotProduct</span> <span class=\"n\">v</span>\n      <span class=\"n\">map_add'</span> <span class=\"o\">:=</span> <span class=\"n\">dotProduct_add</span> <span class=\"n\">v</span>\n      <span class=\"n\">map_zero'</span> <span class=\"o\">:=</span> <span class=\"n\">dotProduct_zero</span> <span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">_</span> <span class=\"bp\">→+</span> <span class=\"n\">_</span> <span class=\"o\">}</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n</code></pre></div>",
        "id": 438449160,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715634718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"644391\">loogle</span> <a href=\"#narrow/stream/113488-general/topic/vector.20dotproduct.20with.20summention/near/438448751\">said</a>:</p>\n<blockquote>\n<p><span aria-label=\"search\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"search\">:search:</span> <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Matrix/Basic.html#Matrix.dotProduct_one\">Matrix.dotProduct_one</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Matrix/Basic.html#Matrix.one_dotProduct\">Matrix.one_dotProduct</a>, and <a href=\"https://loogle.lean-lang.org/?q=Matrix.dotProduct%2C%20Finset.sum\">5 more</a></p>\n</blockquote>\n<p>This lemma is evidently missing; want to contribute (a more general version of) it to mathlib?</p>",
        "id": 438449257,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715634747
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span> <span class=\"n\">Matrix</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NonUnitalNonAssocSemiring</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"n\">nonrec</span> <span class=\"kd\">def</span> <span class=\"n\">Matrix.dotProduct_addHom</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">→+</span> <span class=\"n\">α</span> <span class=\"n\">where</span>\n  <span class=\"n\">toFun</span> <span class=\"o\">:=</span> <span class=\"n\">dotProduct</span> <span class=\"n\">v</span>\n  <span class=\"n\">map_add'</span> <span class=\"o\">:=</span> <span class=\"n\">dotProduct_add</span> <span class=\"n\">v</span>\n  <span class=\"n\">map_zero'</span> <span class=\"o\">:=</span> <span class=\"n\">dotProduct_zero</span> <span class=\"n\">v</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">Matrix.dotProduct_sum</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">w</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">w</span> <span class=\"n\">i</span> <span class=\"o\">:=</span>\n  <span class=\"n\">map_sum</span> <span class=\"o\">(</span><span class=\"n\">dotProduct_addHom</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">w</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">w</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span><span class=\"bp\">?</span> <span class=\"n\">says</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">dotProduct_sum</span><span class=\"o\">]</span>\n      <span class=\"c1\">-- \"no goals\"</span>\n</code></pre></div>",
        "id": 438454198,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715636406
    }
]