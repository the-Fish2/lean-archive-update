[
    {
        "content": "<p>When you write an <code>import</code> statement about a file that doesn't exist, the build instantly fails. Is there a reason why it's so, instead of letting the build continue for every file not downstream of the wrong import, like every other error?</p>",
        "id": 430263472,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711722210
    },
    {
        "content": "<ol>\n<li>In mathlib CI, it's annoying because I don't get to see the next error, and sometimes I have several wrong imports and don't notice until I have wasted 2-3 CI cycles.</li>\n<li>I thought maybe this has to do with the fact that we wouldn't even know what to build when an import is wrong, but actually that's not true. Any file whose transitive dependencies all have correct imports can be built.</li>\n<li>The error only tells me what the wrong import is, but not where it is.</li>\n</ol>",
        "id": 430263815,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711722366
    },
    {
        "content": "<p>A workaround: run <code>timeout 20 lake build</code> before <code>git push</code></p>",
        "id": 430356652,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1711773828
    },
    {
        "content": "<p>Yeah, I know about that workaround, but it involves more brain power than I have when I push</p>",
        "id": 430365233,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711782440
    },
    {
        "content": "<p>I think the reason is simply that this will need extra code, so could you log a Lake issue at lean4?</p>",
        "id": 430373809,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1711790543
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/3809\">lean4#3809</a></p>",
        "id": 430382631,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711798575
    },
    {
        "content": "<p>Does the proposal also include the possibility of importing a file that exists but contains an error and still try to make the best of it?</p>",
        "id": 430385035,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1711800744
    },
    {
        "content": "<p>No</p>",
        "id": 430389778,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711804906
    }
]