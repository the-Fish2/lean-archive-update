[
    {
        "content": "<p>Are there any good references regarding the Lean build system (i.e., how the object files work, how long a full Lean/Mathlib build takes, what hardware is being used, etc.), or can somebody tell me about that? I can see the system in action on github, but other than that I just found a few references that multi-threading exists.</p>",
        "id": 425933236,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1710170444
    },
    {
        "content": "<ul>\n<li><code>make -C build/release -j32</code> in the lean4 repo takes &lt;2 minutes  (on a 16 core M2 Ultra)</li>\n<li><code>lake build</code> takes about 20 minutes in the mathlib4 repo (it's been a while since I actually timed this). Mathlib CI runs on a combination of Github CI machines, and machines privately hosted by the Hoskinson centre.</li>\n</ul>",
        "id": 426028416,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710200446
    },
    {
        "content": "<p>There's no a lot written down about our build infrastructure outside of the <code>.github/workflows</code> directories in the lean4/Std/Mathlib repos.</p>",
        "id": 426028462,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710200494
    },
    {
        "content": "<p>Thanks for the info! Is this with precompiled <code>olean</code> files, or completely without?</p>",
        "id": 426111088,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1710245466
    },
    {
        "content": "<p>So running the mathlib makefile took 28 minutes on my fastest workstation (24 core i9-12900K), and it appeared to use all cores. Does this seem reasonable?</p>",
        "id": 426156868,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1710258383
    },
    {
        "content": "<p>mathlib doesn't have a makefile, and I'm not sure what you mean by running it</p>",
        "id": 426159278,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259082
    },
    {
        "content": "<p>if you mean <code>lake build</code> then yes I would expect it to take about 20-30 minutes using 100% of a fast machine</p>",
        "id": 426159414,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259114
    },
    {
        "content": "<p>That will use precompiled things only if they happen to be lying around after a previous build or because you ran <code>lake exe cache get</code>. If you delete <code>.lake</code> then it will definitely not be using those caches. (However lean + lake itself is always downloaded pre-built by <code>elan</code>.)</p>",
        "id": 426160052,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259263
    },
    {
        "content": "<p>Most users don't use this workflow because building mathlib is too expensive. Instead, you run <code>lake exe cache get</code> and it will download built oleans from the cloud machines</p>",
        "id": 426160270,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259319
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Building.20lean.2Fmathlib.3A.20Technology.2C.20Timings.2C.20References.3F/near/426159278\">said</a>:</p>\n<blockquote>\n<p>mathlib doesn't have a makefile, and I'm not sure what you mean by running it</p>\n</blockquote>\n<p>I ran <code>make</code>, there is a <code>GNUmakefile</code>.</p>",
        "id": 426160432,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1710259351
    },
    {
        "content": "<p>(Running on bbf2206 in mathlib4, to clarify things)</p>",
        "id": 426160526,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1710259379
    },
    {
        "content": "<p>so there is... I don't think it is used much</p>",
        "id": 426160628,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259407
    },
    {
        "content": "<p>Though some of he tests in the end failed.</p>",
        "id": 426160663,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1710259417
    },
    {
        "content": "<p>I see.</p>",
        "id": 426160760,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1710259437
    },
    {
        "content": "<p>looks like it is being used for orchestrating building the tests, which can't be run through lake ATM</p>",
        "id": 426160835,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259448
    },
    {
        "content": "<p>not sure what happened to the tests, I would expect them all to pass on master since they are run in CI. What error did you get?</p>",
        "id": 426161154,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259541
    },
    {
        "content": "<p>there is a note in the CI though:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">bash</span> <span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"n\">pipefail</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"s2\">\"</span>\n<span class=\"s2\"># Tests use parts of ProofWidgets not imported by Mathlib.</span>\n<span class=\"s2\"># Ensure everything has been built.</span>\n<span class=\"s2\">lake build ProofWidgets</span>\n<span class=\"s2\">make -k -j 8 test\"</span>\n</code></pre></div>",
        "id": 426161288,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259569
    },
    {
        "content": "<p>most likely if you just run <code>make test</code> without building <code>ProofWidgets</code> you will get an error about missing oleans or something</p>",
        "id": 426161418,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259611
    },
    {
        "content": "<p>Yes, that was the error. I see.</p>",
        "id": 426161493,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1710259637
    },
    {
        "content": "<p>(this would have been handled automatically by lake if it understood how to build test files)</p>",
        "id": 426161742,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259707
    },
    {
        "content": "<p>One more question: What are these tests? Are they relevant for the formalizations?</p>",
        "id": 426162179,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1710259813
    },
    {
        "content": "<p>many of them are testing the tactics, which are programs like any other and can have bugs in them</p>",
        "id": 426162294,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259845
    },
    {
        "content": "<p>Thanks for all the info!</p>",
        "id": 426162407,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1710259873
    },
    {
        "content": "<p>(almost all of them in fact, most tests are named after the tactic under test)</p>",
        "id": 426162481,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710259898
    }
]