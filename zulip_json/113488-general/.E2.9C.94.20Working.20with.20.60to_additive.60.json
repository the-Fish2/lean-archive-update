[
    {
        "content": "<p>I'm trying to define the additive version of this definition, which should be called <code>conv</code>. How should I do this, because the current way of writing it gives me an error.. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.Prod.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Measure.MeasureSpace</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">MeasureTheory</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Measure</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n\n<span class=\"sd\">/-- Multiplicative convolution of measures. They are defined for arbitrary measures on a monoid M that is also</span>\n<span class=\"sd\">a measurable space.-/</span>\n<span class=\"kd\">@[</span><span class=\"n\">to_additive</span><span class=\"kd\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">mconv</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ν</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">Measure</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"n\">Measure.map</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">×</span> <span class=\"n\">M</span> <span class=\"bp\">↦</span> <span class=\"n\">x.1</span> <span class=\"bp\">*</span> <span class=\"n\">x.2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Measure.prod</span> <span class=\"n\">μ</span> <span class=\"n\">ν</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 421673422,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1708009315
    },
    {
        "content": "<p><code>@[to_additive conv]</code></p>",
        "id": 421674340,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1708009529
    },
    {
        "content": "<p>I tried that but thought the error message didn't change. Apparently that works but I should make it a non-computable def! Thank you!</p>",
        "id": 421674967,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1708009646
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"673728\">Josha Dekker</span> has marked this topic as resolved.</p>",
        "id": 421677789,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708010350
    }
]