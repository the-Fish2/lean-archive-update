[
    {
        "content": "<p>Hi all, I'm moderating a panel for a conference this weekend, which will touch a bit on Lean and formalization tools. I'd like to be able to cite some statistics about Lean and mathlib.</p>\n<p>This page [<a href=\"https://leanprover-community.github.io/mathlib_stats.html\">https://leanprover-community.github.io/mathlib_stats.html</a>] says there are around 300 contributors to mathlib. That seems low to me, maybe it's only for mathlib4? I'm also pretty sure there used to be an actual list somewhere, so e.g. if I wanted to look at the number of users who've contributed ≥X lines of code or ≥Y PRs (I remember going and finding my own name on it!).</p>\n<p>Can anyone confirm that this is the correct number? Or point me to some other statistics?</p>",
        "id": 417973914,
        "sender_full_name": "Jake Levinson",
        "timestamp": 1706134836
    },
    {
        "content": "<p>We hit 400 on mathlib before the port, so I think your guess is correct (it only looks at mathlib4)</p>",
        "id": 417974353,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1706135042
    },
    {
        "content": "<p>The stats table disappeared because stats were hugely skewed due to porting. I don't know whether there's plans to bring it back in some form.</p>",
        "id": 417974478,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1706135102
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Fish\"><pre><span></span><code>~&gt; git --git-dir<span class=\"o\">=</span>./mathlib4/.git log --format<span class=\"o\">=</span><span class=\"s1\">'%aN'</span> <span class=\"o\">|</span> sort -u <span class=\"o\">&gt;</span> mathlib4_authors.txt\n~&gt; git --git-dir<span class=\"o\">=</span>./mathlib/.git log --format<span class=\"o\">=</span><span class=\"s1\">'%aN'</span> <span class=\"o\">|</span> sort -u <span class=\"o\">&gt;</span> mathlib3_authors.txt\n~&gt; cat mathlib4_authors.txt <span class=\"o\">|</span> wc -l\n210\n~&gt; cat mathlib3_authors.txt <span class=\"o\">|</span> wc -l\n330\n~&gt; cat mathlib3_authors.txt mathlib4_authors.txt <span class=\"o\">|</span> sort -u <span class=\"o\">|</span> wc -l\n425\n</code></pre></div>\n<p>This is not perfect, because a few names appear twice in slighly different versions (e.g. with and without space, or in capital letters and without), but it should be a good rough estimate?!</p>",
        "id": 417977122,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1706136483
    },
    {
        "content": "<p>This is at 65a1391a for mathlib and at a686ba82 for mathlib4</p>",
        "id": 417977225,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1706136548
    },
    {
        "content": "<p>shouldn't you pipe the last command into <code>uniq</code> to avoid duplicates?</p>",
        "id": 417977300,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1706136600
    },
    {
        "content": "<p>or does the <code>-u</code> flag do this?</p>",
        "id": 417977349,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1706136611
    },
    {
        "content": "<p>TIL!</p>",
        "id": 417977393,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1706136644
    },
    {
        "content": "<p>There's probably some API provided by github that would give the data from <a href=\"https://github.com/leanprover-community/mathlib4/graphs/contributors\">https://github.com/leanprover-community/mathlib4/graphs/contributors</a> which will then include number of commits, loc, etc. per contributor</p>",
        "id": 417977667,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1706136778
    },
    {
        "content": "<p>Thank you all, this is great!</p>",
        "id": 417983002,
        "sender_full_name": "Jake Levinson",
        "timestamp": 1706139942
    },
    {
        "content": "<p>A metric I'd be interested in seeing is the following. Pick a time period, say 6 months and calculate the net number of lines added. Then take all contributors, sort them by net lines added (unfortunately this unfairly punishes golfers) in this period and count many are required till the sum of their net lines added is some critical percentage, say 95%. Then plot this count over time.</p>",
        "id": 418041994,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1706175994
    },
    {
        "content": "<p>FYI, the count on the stats page was never updated with the port. It's fixed at the mathlib 3 number. PRs to the website repo to compute the updated number here would be welcome.</p>",
        "id": 418096407,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1706194377
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"240862\">Oliver Nash</span> <a href=\"#narrow/stream/113488-general/topic/Number.20of.20contributors.20to.20mathlib.3F/near/418041994\">said</a>:</p>\n<blockquote>\n<p>A metric I'd be interested in seeing is the following. Pick a time period, say 6 months and calculate the net number of lines added. Then take all contributors, sort them by net lines added (unfortunately this unfairly punishes golfers) in this period and count many are required till the sum of their net lines added is some critical percentage, say 95%. Then plot this count over time.</p>\n</blockquote>\n<p>Maybe you could add up the absolute number of lines added or removed per PR, instead of lines added? If my PR reduces a 50-line proof to 20-lines, I feel like I've contributed 30 lines (of negative space). Of course if someone repeatedly adds and removes the same material, that would be overcounted, but I imagine that doesn't actually happen much.</p>",
        "id": 418157412,
        "sender_full_name": "Jake Levinson",
        "timestamp": 1706213667
    },
    {
        "content": "<p>What <em>does</em> happen though are cleanup or renaming, which may touch a lot of lines, but are perhaps not very hard.</p>\n<p>In any case, I think the spirit of Oliver's suggestion is probably more along the lines of: what does the Lorenz curve of Mathlib contributions look like as a function of time?</p>",
        "id": 418207025,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1706240861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/113488-general/topic/Number.20of.20contributors.20to.20mathlib.3F/near/418207025\">said</a>:</p>\n<blockquote>\n<p>What <em>does</em> happen though are cleanup or renaming, which may touch a lot of lines, but are perhaps not very hard.</p>\n</blockquote>\n<p>If you look at <code>|linesAdded - linesRemoved|</code> for each PR, then renaming PRs will have ~zero impact.</p>",
        "id": 418210870,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706243737
    },
    {
        "content": "<p>Aha, that's different than what I was thinking. Yes, indeed, that could be a nice metric.</p>",
        "id": 418215564,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1706247913
    }
]