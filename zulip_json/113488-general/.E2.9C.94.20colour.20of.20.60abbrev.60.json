[
    {
        "content": "<p>When answering <a href=\"#narrow/stream/113489-new-members/topic/Refining.20an.20instance.20of.20a.20typeclass/near/418269099\">another question</a> I noticed that</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Basic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">is_filter</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">):</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">filter_example</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">is_filter</span> <span class=\"n\">filter_example</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">Filter</span> <span class=\"o\">(</span><span class=\"n\">filter</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"n\">where</span>\n  <span class=\"n\">filter_proof</span><span class=\"o\">:</span> <span class=\"n\">is_filter</span> <span class=\"n\">filter</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"o\">(</span><span class=\"n\">filter_example</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">foo</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">N</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fil</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">refined_filter_is_filter</span> <span class=\"o\">(</span><span class=\"n\">N</span><span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fil</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">inst</span><span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">fil</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">is_filter</span> <span class=\"o\">(</span><span class=\"n\">refine</span> <span class=\"n\">N</span> <span class=\"n\">fil</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fil</span><span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Filter</span> <span class=\"n\">fil</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"o\">(</span><span class=\"n\">refine</span> <span class=\"n\">N</span> <span class=\"n\">fil</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">refined_filter_is_filter</span> <span class=\"n\">N</span> <span class=\"n\">fil</span><span class=\"o\">⟩</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">refined_filter_example</span> <span class=\"o\">:=</span> <span class=\"n\">refine</span> <span class=\"n\">Nat.zero</span> <span class=\"n\">filter_example</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">test1</span> <span class=\"o\">:</span> <span class=\"n\">is_filter</span> <span class=\"n\">refined_filter_example</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">refined_filter_is_filter</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">test2</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">refined_filter_example</span> <span class=\"o\">:=</span> <span class=\"n\">inferInstance</span>\n</code></pre></div>\n<p><code>abbrev</code> isn't the same colour as all the other things like <code>theorem</code> etc. Is this expected?</p>",
        "id": 418301310,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706283954
    },
    {
        "content": "<p>There are other situations I encountered (but are hard to reproduce) where syntax highlighting in vscode fails at some point for some unclear reason. If I restart the editor it usually gets resolved. Does restarting fix it in this case?</p>",
        "id": 418301884,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1706284137
    },
    {
        "content": "<p>Oh sorry -- it's fine in VS Code (at least for me at this point) -- this was a question about Zulip.</p>",
        "id": 418302080,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706284189
    },
    {
        "content": "<p>Aha! That's probably a question for <a class=\"stream\" data-stream-id=\"236604\" href=\"/#narrow/stream/236604-Zulip-meta\">#Zulip meta</a> .</p>",
        "id": 418302221,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1706284218
    },
    {
        "content": "<p>Apparently I don't have permission to move messages between streams -- I'll close and re-ask.</p>",
        "id": 418302493,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706284306
    },
    {
        "content": "<p><a href=\"#narrow/stream/236604-Zulip-meta/topic/colour.20of.20.60abbrev.60/near/418302714\">https://leanprover.zulipchat.com/#narrow/stream/236604-Zulip-meta/topic/colour.20of.20.60abbrev.60/near/418302714</a></p>",
        "id": 418302767,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706284364
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> has marked this topic as resolved.</p>",
        "id": 418302779,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706284368
    }
]