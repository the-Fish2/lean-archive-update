[
    {
        "content": "<p>Hey all,</p>\n<p>Is there a way to apply a theorem for real numbers to integers? As integers are contained in the reals, this should theoretically be possible.</p>\n<p>For instance, consider the very simple example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Int.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">fact</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Real</span><span class=\"o\">):</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ring</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">factWithInt</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Int</span><span class=\"o\">):</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"c1\">--How do I use \"fact\" to deduce \"factWithInt\"?</span>\n</code></pre></div>",
        "id": 431226346,
        "sender_full_name": "Eric Chen",
        "timestamp": 1712207519
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">factWithInt</span>\n    <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Int</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact_mod_cast</span> <span class=\"n\">fact</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n</code></pre></div>",
        "id": 431227656,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712208502
    },
    {
        "content": "<p>what this actually does is first assert <code>fact a b</code> (which is really <code>fact ↑a ↑b</code>), which produces a statement about real numbers with lots of cast expressions in it, then bubbles all the casts out to get a statement about integers</p>",
        "id": 431227707,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712208572
    }
]