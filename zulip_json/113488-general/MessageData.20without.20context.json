[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/113488-general/topic/v4.2E9.2E0-rc1.20discussion/near/444127287\">said</a>:</p>\n<blockquote>\n<p>Shall I change this to:</p>\n</blockquote>\n<p>I would have expected this to help, but it seems that my understanding of <code>MetaM</code> and <code>MessageData</code> is still incomplete.</p>",
        "id": 444163996,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718176573
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> <a href=\"#narrow/stream/113488-general/topic/v4.2E9.2E0-rc1.20discussion/near/444163996\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/113488-general/topic/v4.2E9.2E0-rc1.20discussion/near/444127287\">said</a>:</p>\n<blockquote>\n<p>Shall I change this to:</p>\n</blockquote>\n<p>I would have expected this to help, but it seems that my understanding of <code>MetaM</code> and <code>MessageData</code> is still incomplete.</p>\n</blockquote>\n<p>You were right about <code>addMessageContextFull</code> working here, just needed to be put in another place as well (Batteries has a linter frontend that wraps every warning, so even though the warning itself has content, the wrapper text didn't have context. The wrapper stuff is in <code>CoreM</code> so I added <code>addMessageContextPartial</code>  in <a href=\"https://github.com/leanprover-community/batteries/pull/838\">batteries#838</a> and that worked)</p>",
        "id": 444165251,
        "sender_full_name": "llllvvuu",
        "timestamp": 1718177019
    },
    {
        "content": "<p>I wish these two functions had docstrings and maybe better names (<code>addLocalMessageContext</code> and <code>addGlobalMessageContext</code>?).</p>\n<p>Would you consider <a href=\"https://github.com/leanprover-community/batteries/pull/838\">batteries#838</a> a proper fix, or a work-around for a bug in lean?</p>",
        "id": 444165641,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718177125
    },
    {
        "content": "<p>Probably we want both: The fix in the linter, so that there is a context (so that hovers can work), but also the fix in lean to have degrade gracefully if someone did not set a context. Or is it better to fail badly so that developers fix their <code>MessageData</code>?</p>",
        "id": 444165883,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718177188
    },
    {
        "content": "<blockquote>\n<p>Or is it better to fail badly so that developers fix their <code>MessageData</code>?</p>\n</blockquote>\n<p>I commented this in <a href=\"https://github.com/leanprover-community/mathlib4/pull/4433\">#4433</a> as well, but either judgment call seems fine. If the documentation and error messages align towards this being a requirement to use the API, then as a user I'd be happy to accommodate as I did in <a href=\"https://github.com/leanprover-community/batteries/pull/838\">batteries#838</a>. Particularly \"(invalid MessageData.lazy, missing context)\" could prescribe some courses of actions, although that's a bit tricky as we just saw.</p>",
        "id": 444166852,
        "sender_full_name": "llllvvuu",
        "timestamp": 1718177477
    },
    {
        "content": "<p>Is my theory true that without the batteries fix (and only the lean fix), the message would appear, but the names would not be hoverable?</p>",
        "id": 444167014,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718177523
    },
    {
        "content": "<p>It's a bit tricky to test this since there is no missing context issue in <code>#lint</code>, but only in <code>lake exe runLinter</code>. So I guess there may be some code path in <code>#lint</code> that is adding context that is missing from the <code>runLinter</code> CLI.</p>",
        "id": 444168713,
        "sender_full_name": "llllvvuu",
        "timestamp": 1718178187
    },
    {
        "content": "<p>Hmm I guess I could simulate this by wrapping the relevant <code>Expr</code>s in <code>toString</code></p>",
        "id": 444168817,
        "sender_full_name": "llllvvuu",
        "timestamp": 1718178237
    },
    {
        "content": "<p>Or maybe it’s the difference between <code>MessageData.format</code> and <code>MessageData.msgToInteractiveAux</code>.</p>",
        "id": 444168826,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718178242
    },
    {
        "content": "<p>It might be good to understand the issue fully, and document the results</p>",
        "id": 444168942,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718178279
    },
    {
        "content": "<p>doing <code>pure m!\"#check {toString (← mkConstWithLevelParams declName)} /- {warning} -/\"</code> instead of <code>pure m!\"#check {← mkConstWithLevelParams declName} /- {warning} -/\"</code> in batteries does seem to remove the hover</p>",
        "id": 444169051,
        "sender_full_name": "llllvvuu",
        "timestamp": 1718178320
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> <a href=\"#narrow/stream/113488-general/topic/v4.2E9.2E0-rc1.20discussion/near/444168826\">said</a>:</p>\n<blockquote>\n<p>Or maybe it’s the difference between <code>MessageData.format</code> and <code>MessageData.msgToInteractiveAux</code>.</p>\n</blockquote>\n<p>Ah, I think you're right. The <code>runLinter</code> CLI does: <code>IO.print (← fmtResults.toString)</code> whereas <code>#lint</code> (good) does <code>logError fmtResults</code> and if I change that to <code>logError (← fmtResults.toString)</code> then it's bad</p>",
        "id": 444169829,
        "sender_full_name": "llllvvuu",
        "timestamp": 1718178595
    },
    {
        "content": "<p>Is <code>fmtResults</code> here a <code>MessageData</code> with a context node? If so, maybe we can fix <code>MessageData.format</code>.</p>",
        "id": 444169990,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718178637
    },
    {
        "content": "<p>It is <code>MessageData</code> interpolated of two things: <code>m!\"#check {← mkConstWithLevelParams declName} /- {warning} -/\"</code>. In this case, <code>{warning}</code> does have context from <code>addMessageContextFull</code>, but <code>{← mkConstWithLevelParams declName}</code> does not have context.</p>\n<p>It looks like <code>logAt</code> <a href=\"https://github.com/leanprover/lean4/blob/bedcbfcfeed429428c3e7f008b6984fc8c2b2b76/src/Lean/Log.lean#L68\">does inject context</a>, but <code>toString</code> does not. I think the real fix for batteries would be to put <code>addMessageContext</code> in front of the <code>IO.print</code> instead of where I put it.</p>",
        "id": 444172102,
        "sender_full_name": "llllvvuu",
        "timestamp": 1718179322
    },
    {
        "content": "<p>Exactly; if you are going to pass a <code>MessageData</code> to <code>IO</code>, you have to use <code>addMessageContextPartial</code> while you still can, i.e. with access to the environment and options.</p>",
        "id": 444172310,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718179394
    },
    {
        "content": "<p>Just checking if we are not deadlocked: are you still investigating something about this? When and if you are done and have a concrete course of action, please drop a short note here or at the lean4 PR.</p>",
        "id": 444398919,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718262860
    },
    {
        "content": "<p>Ah, and maybe add docstrings explaining this to the message data type and the addMessageContext functions: that a MessageData value makes most sense within context, and when taking it out of context (e.g. leaving MetaM), the context ought to be added to it. So hopefully the next person debugging this has an easier time :-)</p>",
        "id": 444401800,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718263897
    },
    {
        "content": "<p>I'm all set on my end. Up to you whether no context should degrade vs error. I've added the documentation so that it's navigable either way.</p>",
        "id": 444532395,
        "sender_full_name": "llllvvuu",
        "timestamp": 1718303280
    },
    {
        "content": "<p>Sent to the merge queue. Thanks for bearing with me here!</p>",
        "id": 444645878,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1718352982
    }
]