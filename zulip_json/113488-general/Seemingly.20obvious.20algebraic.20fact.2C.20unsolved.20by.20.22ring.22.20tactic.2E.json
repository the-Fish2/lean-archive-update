[
    {
        "content": "<p>I'm trying to prove the following theorem, and I heard that the Ring tactic should solve the problem directly. However, the goal shows something that is purely an algebraic fact that I don't understand. Why doesn't Ring solve this, and how could I solve this?<br>\n<a href=\"/user_uploads/3121/9pArwzV0nBk6z2HWspm3mbRo/Screenshot-2024-03-10-at-3.13.33PM.png\">Screenshot-2024-03-10-at-3.13.33PM.png</a><br>\nThank you so much!</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/9pArwzV0nBk6z2HWspm3mbRo/Screenshot-2024-03-10-at-3.13.33PM.png\" title=\"Screenshot-2024-03-10-at-3.13.33PM.png\"><img src=\"/user_uploads/3121/9pArwzV0nBk6z2HWspm3mbRo/Screenshot-2024-03-10-at-3.13.33PM.png\"></a></div>",
        "id": 425810265,
        "sender_full_name": "Eric Chen",
        "timestamp": 1710108817
    },
    {
        "content": "<p>My intuition is that it's something to do with the fact that we need n % 3 = 1, but I don't know how or where I could utilize this in the definition of A.</p>",
        "id": 425810386,
        "sender_full_name": "Eric Chen",
        "timestamp": 1710108933
    },
    {
        "content": "<p>Right, this is non-obvious because <code>/</code> rounds; (1 / 3) * 3 = 0 * 3 = 0, not 1</p>",
        "id": 425811463,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710109955
    },
    {
        "content": "<p>I think you can rewrite with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Int.ediv_mul_cancel#doc\">docs#Int.ediv_mul_cancel</a></p>",
        "id": 425811563,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710110046
    },
    {
        "content": "<p>That worked :). However, now it wants me to show that 3 | -1 + n, which sounds like a direct application of h2. However, \"apply\" and \"rw\" both don't work for this task.</p>",
        "id": 425812017,
        "sender_full_name": "Eric Chen",
        "timestamp": 1710110570
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Int.dvd_sub_of_emod_eq#doc\">docs#Int.dvd_sub_of_emod_eq</a> should help there</p>",
        "id": 425812145,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1710110669
    },
    {
        "content": "<p>you might need to rewrite with <code>add_comm</code> (so that the goal is <code>3 | n + -1</code>)</p>",
        "id": 425812183,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1710110718
    },
    {
        "content": "<p>Solved, thank you all so much :). I'm new to Lean, and this gives me some intuition about which tactics/theorems to use.</p>",
        "id": 425812480,
        "sender_full_name": "Eric Chen",
        "timestamp": 1710111034
    },
    {
        "content": "<p>The answer to \"why doesn't <code>ring</code> work\" is \"your goal is not a statement of commutative ring theory\" (as it involves division)</p>",
        "id": 425814235,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1710112768
    },
    {
        "content": "<p>Do we have field tactics?</p>",
        "id": 425822857,
        "sender_full_name": "Xiyu Zhai",
        "timestamp": 1710121252
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Seemingly.20obvious.20algebraic.20fact.2C.20unsolved.20by.20.22ring.22.20tactic.2E/near/425814235\">said</a>:</p>\n<blockquote>\n<p>The answer to \"why doesn't <code>ring</code> work\" is \"your goal is not a statement of commutative ring theory\" (as it involves division)</p>\n</blockquote>\n<p>Why does <code>example (x : ℝ) : x/3 * 3 = x := by ring</code> work, then? I think it's a bit stronger</p>",
        "id": 425843000,
        "sender_full_name": "Daniel Weber",
        "timestamp": 1710137957
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466120\">Xiyu Zhai</span> <a href=\"#narrow/stream/113488-general/topic/Seemingly.20obvious.20algebraic.20fact.2C.20unsolved.20by.20.22ring.22.20tactic.2E/near/425822857\">said</a>:</p>\n<blockquote>\n<p>Do we have field tactics?</p>\n</blockquote>\n<p>There's <code>field_simp</code></p>",
        "id": 425843085,
        "sender_full_name": "Daniel Weber",
        "timestamp": 1710138010
    },
    {
        "content": "<p>I'm surprised that it does</p>",
        "id": 425843087,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710138014
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"690858\">Daniel Weber</span> <a href=\"#narrow/stream/113488-general/topic/Seemingly.20obvious.20algebraic.20fact.2C.20unsolved.20by.20.22ring.22.20tactic.2E/near/425843085\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"466120\">Xiyu Zhai</span> <a href=\"#narrow/stream/113488-general/topic/Seemingly.20obvious.20algebraic.20fact.2C.20unsolved.20by.20.22ring.22.20tactic.2E/near/425822857\">said</a>:</p>\n<blockquote>\n<p>Do we have field tactics?</p>\n</blockquote>\n<p>There's <code>field_simp</code></p>\n</blockquote>\n<p>But note that your question didn't involve field division</p>",
        "id": 425843118,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710138041
    },
    {
        "content": "<p>A preprocessor changes x / (numerical constant c known to be nonzero) in a field to x * (c^{-1}). It won't work with x / y if y isn't numerical. It's like how omega only claims to work with goals without multiplication, but it works on 3 * n because it changes it to n + n + n.</p>",
        "id": 425853332,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1710144167
    },
    {
        "content": "<p>more specifically, ring works with multivariate polynomials over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>3</mn><mo>∈</mo><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">1/3\\in \\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span></p>",
        "id": 425856949,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710145525
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"693676\">@Eric Chen</span>, please read <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>, and post questions with standalone code blocks, not screenshots. You'll get <em>much</em> better help.</p>",
        "id": 426028716,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710200666
    }
]