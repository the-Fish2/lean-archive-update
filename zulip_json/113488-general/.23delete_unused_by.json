[
    {
        "content": "<p>Do we currently have the technology which would enable implementing <code>#delete_unused_by foo</code>, which would provide a code action to delete all declarations in the current file not used by <code>foo</code>?</p>\n<p>(Obtaining the list of such declarations is easy: it's the code action to delete that I don't know how to do.)</p>",
        "id": 430912325,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712115236
    },
    {
        "content": "<p>I do not know how to do it, but I would be very curious about this, or even just finding beginning and ending positions for declarations.  As far as I can tell, they are not contained in the <code>ilean</code>s.  This was the main missing step in a mwe-zation algorithm that I had...</p>",
        "id": 430917515,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1712118851
    },
    {
        "content": "<p>(I was heading down the same path.)</p>",
        "id": 430917535,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712118878
    },
    {
        "content": "<p>I hope I will be able to implement this on top of the new REPL... but not yet. :-)</p>",
        "id": 430921903,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1712122086
    },
    {
        "content": "<p>I still want us to have a framework for being able to write full-project rewrites which involve re-elaborating every file so that they can be info-tree aware. This is slow (basically the same as compiling the project), but many kinds of global refactoring will not have the necessary information otherwise</p>",
        "id": 430935515,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712129331
    },
    {
        "content": "<p>I don't think it will be a code-action interface, more like a standalone program that you run which rewrites all the files in the project (like shake)</p>",
        "id": 430935607,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712129379
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/std4/pull/734\">std4#734</a> implements a related tool, <code>#show_unused</code>, which will highlight declarations in the current file that aren't used by some set of declarations you specify. (The really nice part is that it will highlight them <em>in-place</em>, meaning you can easily use \"go to error\" to clean these up or move them elsewhere. The message indicates where the <code>#show_unused</code> line is though since otherwise it can be confusing to have a message on one line being produced by a command on a later line.)</p>",
        "id": 433028513,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712997628
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"kd\">def</span> <span class=\"n\">baz</span> <span class=\"o\">:=</span> <span class=\"mi\">2</span> <span class=\"c1\">-- baz is highlighted</span>\n<span class=\"kd\">def</span> <span class=\"n\">bar</span> <span class=\"o\">:=</span> <span class=\"n\">foo</span>\n\n<span class=\"bp\">#</span><span class=\"n\">show_unused</span> <span class=\"n\">bar</span> <span class=\"c1\">-- baz is unused</span>\n</code></pre></div>",
        "id": 433028528,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712997664
    }
]