[
    {
        "content": "<p>I recently computed \"the long pole\" in mathlib --- the longest chain of transitive imports, weighted by the compilation time of each file. Given arbitrary parallelism, this would give us the compilation time of the entirety of mathlib.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">real</span><span class=\"bp\">/</span><span class=\"n\">pi</span>    <span class=\"mi\">34</span><span class=\"bp\">.</span><span class=\"mi\">9626</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">integrals</span>    <span class=\"mi\">50</span><span class=\"bp\">.</span><span class=\"mi\">0778</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">interval_integral</span>   <span class=\"mi\">88</span><span class=\"bp\">.</span><span class=\"mi\">211</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">lebesgue</span> <span class=\"mi\">29</span><span class=\"bp\">.</span><span class=\"mi\">6158</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">pi</span> <span class=\"mi\">40</span><span class=\"bp\">.</span><span class=\"mi\">3023</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">prod</span>   <span class=\"mi\">53</span><span class=\"bp\">.</span><span class=\"mi\">4363</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">set_integral</span>    <span class=\"mi\">39</span><span class=\"bp\">.</span><span class=\"mi\">7534</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">bochner</span> <span class=\"mi\">70</span><span class=\"bp\">.</span><span class=\"mi\">9691</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">set_to_l1</span>   <span class=\"mi\">47</span><span class=\"bp\">.</span><span class=\"mi\">3601</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">simple_func_dense</span>   <span class=\"mi\">72</span><span class=\"bp\">.</span><span class=\"mi\">6324</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">l1_space</span>    <span class=\"mi\">51</span><span class=\"bp\">.</span><span class=\"mi\">5644</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">lp_space</span>    <span class=\"mi\">147</span><span class=\"bp\">.</span><span class=\"mi\">01</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">mean_inequalities</span>   <span class=\"mi\">17</span><span class=\"bp\">.</span><span class=\"mi\">5914</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">mean_inequalities</span>  <span class=\"mi\">36</span><span class=\"bp\">.</span><span class=\"mi\">4278</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">convex</span><span class=\"bp\">/</span><span class=\"n\">specific_functions</span>  <span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">9636</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">pow</span>  <span class=\"mi\">124</span><span class=\"bp\">.</span><span class=\"mi\">392</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">trigonometric</span>    <span class=\"mi\">172</span><span class=\"bp\">.</span><span class=\"mi\">476</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">exp_log</span>  <span class=\"mi\">24</span><span class=\"bp\">.</span><span class=\"mi\">8909</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">complex</span><span class=\"bp\">/</span><span class=\"n\">real_deriv</span> <span class=\"mi\">16</span><span class=\"bp\">.</span><span class=\"mi\">6262</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">complex</span><span class=\"bp\">/</span><span class=\"n\">conformal</span>  <span class=\"mi\">24</span><span class=\"bp\">.</span><span class=\"mi\">4022</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">conformal_linear_map</span>  <span class=\"mi\">13</span><span class=\"bp\">.</span><span class=\"mi\">4382</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">inner_product</span> <span class=\"mi\">225</span><span class=\"bp\">.</span><span class=\"mi\">452</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">sqrt</span> <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">66522</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">times_cont_diff</span>   <span class=\"mi\">115</span><span class=\"bp\">.</span><span class=\"mi\">127</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">mean_value</span>    <span class=\"mi\">24</span><span class=\"bp\">.</span><span class=\"mi\">793</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">local_extr</span>    <span class=\"mi\">16</span><span class=\"bp\">.</span><span class=\"mi\">9887</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">deriv</span> <span class=\"mi\">87</span><span class=\"bp\">.</span><span class=\"mi\">9592</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">fderiv</span>    <span class=\"mi\">114</span><span class=\"bp\">.</span><span class=\"mi\">51</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">analytic</span><span class=\"bp\">/</span><span class=\"n\">basic</span> <span class=\"mi\">73</span><span class=\"bp\">.</span><span class=\"mi\">1241</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">formal_multilinear_series</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">70325</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">multilinear</span>   <span class=\"mi\">130</span><span class=\"bp\">.</span><span class=\"mi\">405</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">operator_norm</span> <span class=\"mi\">97</span><span class=\"bp\">.</span><span class=\"mi\">637</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">linear_isometry</span>   <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">22745</span>\n<span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">finite_dimensional</span>   <span class=\"mi\">58</span><span class=\"bp\">.</span><span class=\"mi\">8543</span>\n<span class=\"n\">field_theory</span><span class=\"bp\">/</span><span class=\"n\">finiteness</span> <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">43609</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">finiteness</span>  <span class=\"mi\">27</span><span class=\"bp\">.</span><span class=\"mi\">3561</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">algebra_tower</span>   <span class=\"mi\">24</span><span class=\"bp\">.</span><span class=\"mi\">1719</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">adjoin</span><span class=\"bp\">/</span><span class=\"n\">fg</span>   <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">21294</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">adjoin</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span>   <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">80635</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">basic</span>    <span class=\"mi\">72</span><span class=\"bp\">.</span><span class=\"mi\">7344</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">principal_ideal_domain</span>  <span class=\"mi\">12</span><span class=\"bp\">.</span><span class=\"mi\">6089</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">unique_factorization_domain</span> <span class=\"mi\">42</span><span class=\"bp\">.</span><span class=\"mi\">9805</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">integral_domain</span> <span class=\"mi\">9</span><span class=\"bp\">.</span><span class=\"mi\">11644</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">ring_division</span>   <span class=\"mi\">16</span><span class=\"bp\">.</span><span class=\"mi\">6944</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">div</span> <span class=\"mi\">12</span><span class=\"bp\">.</span><span class=\"mi\">952</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">monic</span>   <span class=\"mi\">13</span><span class=\"bp\">.</span><span class=\"mi\">6841</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">reverse</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">24052</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">eval</span>    <span class=\"mi\">33</span><span class=\"bp\">.</span><span class=\"mi\">6065</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">degree</span><span class=\"bp\">/</span><span class=\"n\">definitions</span>  <span class=\"mi\">21</span><span class=\"bp\">.</span><span class=\"mi\">1174</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">monomial</span>    <span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"mi\">8134</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">coeff</span>   <span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"mi\">6286</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">basic</span>   <span class=\"mi\">41</span><span class=\"bp\">.</span><span class=\"mi\">7989</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">monoid_algebra</span><span class=\"bp\">/</span><span class=\"n\">basic</span>    <span class=\"mi\">77</span><span class=\"bp\">.</span><span class=\"mi\">746</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">non_unital_alg_hom</span>  <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">13058</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">basic</span>   <span class=\"mi\">37</span><span class=\"bp\">.</span><span class=\"mi\">5372</span>\n<span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">tensor_product</span>   <span class=\"mi\">45</span><span class=\"bp\">.</span><span class=\"mi\">8692</span>\n<span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">bilinear_map</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">95732</span>\n<span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">basic</span>    <span class=\"mi\">92</span><span class=\"bp\">.</span><span class=\"mi\">5836</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">dfinsupp</span>   <span class=\"mi\">59</span><span class=\"bp\">.</span><span class=\"mi\">9861</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">module</span><span class=\"bp\">/</span><span class=\"n\">linear_map</span>   <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">07023</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">group_action_hom</span>    <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">23101</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">group_ring_action</span>   <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">2552</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">subring</span> <span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"mi\">4688</span>\n<span class=\"n\">group_theory</span><span class=\"bp\">/</span><span class=\"n\">subgroup</span>   <span class=\"mi\">37</span><span class=\"bp\">.</span><span class=\"mi\">3691</span>\n<span class=\"n\">group_theory</span><span class=\"bp\">/</span><span class=\"n\">submonoid</span><span class=\"bp\">/</span><span class=\"n\">center</span>   <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">91385</span>\n<span class=\"n\">group_theory</span><span class=\"bp\">/</span><span class=\"n\">submonoid</span><span class=\"bp\">/</span><span class=\"n\">operations</span>   <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">3513</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">pointwise</span>   <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">32447</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">module</span><span class=\"bp\">/</span><span class=\"n\">basic</span>    <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">11838</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">big_operators</span><span class=\"bp\">/</span><span class=\"n\">basic</span> <span class=\"mi\">26</span><span class=\"bp\">.</span><span class=\"mi\">6518</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">abel</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">3525</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">norm_num</span> <span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">2906</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">rat</span><span class=\"bp\">/</span><span class=\"n\">cast</span>   <span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">50179</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">int</span><span class=\"bp\">/</span><span class=\"n\">char_zero</span>  <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">92927</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">char_zero</span>   <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">30769</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">fintype</span><span class=\"bp\">/</span><span class=\"n\">basic</span>  <span class=\"mi\">26</span><span class=\"bp\">.</span><span class=\"mi\">5525</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">finset</span><span class=\"bp\">/</span><span class=\"n\">powerset</span>    <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">87303</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">finset</span><span class=\"bp\">/</span><span class=\"n\">lattice</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">63514</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">finset</span><span class=\"bp\">/</span><span class=\"n\">fold</span>    <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">0229</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">finset</span><span class=\"bp\">/</span><span class=\"n\">basic</span>   <span class=\"mi\">34</span><span class=\"bp\">.</span><span class=\"mi\">6086</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">multiset</span><span class=\"bp\">/</span><span class=\"n\">finset_ops</span>    <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">31185</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">multiset</span><span class=\"bp\">/</span><span class=\"n\">erase_dup</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">25666</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">multiset</span><span class=\"bp\">/</span><span class=\"n\">nodup</span> <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">91105</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">multiset</span><span class=\"bp\">/</span><span class=\"n\">powerset</span>  <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">57061</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">multiset</span><span class=\"bp\">/</span><span class=\"n\">basic</span> <span class=\"mi\">25</span><span class=\"bp\">.</span><span class=\"mi\">7305</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">perm</span>  <span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">7846</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">erase_dup</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">60637</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">nodup</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">45075</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">pairwise</span>  <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">81794</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">sublists</span>  <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">30711</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">basic</span> <span class=\"mi\">42</span><span class=\"bp\">.</span><span class=\"mi\">1169</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">nat</span><span class=\"bp\">/</span><span class=\"n\">basic</span>  <span class=\"mi\">9</span><span class=\"bp\">.</span><span class=\"mi\">98537</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">ordered_ring</span>    <span class=\"mi\">17</span><span class=\"bp\">.</span><span class=\"mi\">1195</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">set</span><span class=\"bp\">/</span><span class=\"n\">intervals</span><span class=\"bp\">/</span><span class=\"n\">basic</span>    <span class=\"mi\">16</span><span class=\"bp\">.</span><span class=\"mi\">4385</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">ordered_group</span>   <span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"mi\">7727</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">ordered_monoid</span>  <span class=\"mi\">10</span><span class=\"bp\">.</span><span class=\"mi\">291</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">group</span><span class=\"bp\">/</span><span class=\"n\">prod</span>  <span class=\"mi\">5</span><span class=\"bp\">.</span><span class=\"mi\">30827</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">opposites</span>   <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">50444</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">field</span>   <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">38681</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">ring</span><span class=\"bp\">/</span><span class=\"n\">basic</span>  <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">85919</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">regular</span><span class=\"bp\">/</span><span class=\"n\">basic</span>   <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">31733</span>\n<span class=\"n\">logic</span><span class=\"bp\">/</span><span class=\"n\">embedding</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">46166</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">equiv</span><span class=\"bp\">/</span><span class=\"n\">basic</span>    <span class=\"mi\">15</span><span class=\"bp\">.</span><span class=\"mi\">8946</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">set</span><span class=\"bp\">/</span><span class=\"n\">function</span>   <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">41891</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">set</span><span class=\"bp\">/</span><span class=\"n\">basic</span>  <span class=\"mi\">18</span><span class=\"bp\">.</span><span class=\"mi\">229</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">boolean_algebra</span>   <span class=\"mi\">11</span><span class=\"bp\">.</span><span class=\"mi\">0211</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">bounded_lattice</span>   <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">16343</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">lattice</span>   <span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">56701</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">rel_classes</span>   <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">19856</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">basic</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">60228</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">prod</span>   <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">839731</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">basic</span>    <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">567406</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">obviously</span>    <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">494836</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">tidy</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">568107</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">norm_cast</span>    <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">24841</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">hint</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">558297</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">interactive</span>  <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">2318</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">dependencies</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">609335</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">core</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">68626</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">binder_matching</span>  <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">456182</span>\n<span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr</span>   <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">04582</span>\n<span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">rb_map</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">421523</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">defs</span>  <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">947617</span>\n<span class=\"n\">logic</span><span class=\"bp\">/</span><span class=\"n\">basic</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">61654</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">doc_commands</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">477453</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">fix_reflect_string</span>   <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">359337</span>\n</code></pre></div>",
        "id": 253932389,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632044274
    },
    {
        "content": "<p>If anyone is interested I can post the longest chain starting at any given (or even all) files in mathlib.</p>",
        "id": 253932444,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632044302
    },
    {
        "content": "<p>If anyone sees something slow on that list that shouldn't really be needed for <code>data/real/pi</code>, feel free to PR changes that move things off this chain, or speed them up!</p>",
        "id": 253932482,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632044367
    },
    {
        "content": "<p>Here's a spanning tree of mathlib, for which each file's parent has been chosen as the slowest-to-compile-given-arbitrary-parallelism:</p>\n<p><a href=\"/user_uploads/3121/SzTF1YhQtjQRYkE4qxLPoVOw/Screen-Shot-2021-09-19-at-8.44.03-pm.png\">Screen-Shot-2021-09-19-at-8.44.03-pm.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/SzTF1YhQtjQRYkE4qxLPoVOw/Screen-Shot-2021-09-19-at-8.44.03-pm.png\" title=\"Screen-Shot-2021-09-19-at-8.44.03-pm.png\"><img src=\"/user_uploads/3121/SzTF1YhQtjQRYkE4qxLPoVOw/Screen-Shot-2021-09-19-at-8.44.03-pm.png\"></a></div><p>I have a version in mathematica with tooltips that actually show the files names, but I don't have an easy to share version of that.</p>",
        "id": 253936297,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632048390
    },
    {
        "content": "<p>It certainly looks like poor <code>π</code> needs to wait for a lot of stuff. Finite dimensional vector spaces, inner products, unique factorization domains.</p>",
        "id": 253938595,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632050780
    },
    {
        "content": "<p>How did you obtain the data? Is it something we should set up a CI bot to do?</p>",
        "id": 253946556,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632059380
    },
    {
        "content": "<p>I pulled the JSON file of mathlib build times from the CI stream (e.g. \"<a href=\"https://mathlib-bench.limperg.de/commit/10a620163757cd2cf745db99c686e9721a1d0d3b/json\">https://mathlib-bench.limperg.de/commit/10a620163757cd2cf745db99c686e9721a1d0d3b/json</a>\"), and then parsed all the mathlib files for <code>import</code> statements.</p>",
        "id": 253973715,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632087545
    },
    {
        "content": "<p>It's written in mathematica, so not exactly deployable in CI, but it would be easy to translate if someone wanted to.</p>",
        "id": 253973799,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632087617
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/_RH2PL51yO-_cbXChYFsTz76/mathlib-imports.nb\">mathlib-imports.nb</a></p>",
        "id": 253973810,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632087633
    },
    {
        "content": "<p>Seems like <code>smul_eq_C_mul</code> in <code>data/polynomial/monomial</code> is the only reason that file can't import <code>data/polynomial/basic</code> directly instead of <code>data/polynomial/coeff</code>. I remember there being some kind of awkward interdependency between those, but I guess it's resolved now.</p>",
        "id": 253981628,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1632096314
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/9289\">#9289</a> was motivated by this analysis: we don't need the theory of finite dimensional vector spaces to develop pi.</p>",
        "id": 253987429,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632102318
    },
    {
        "content": "<p>It reduces the long pole from 54.6 minutes to 51.6 minutes.</p>",
        "id": 253987441,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632102347
    },
    {
        "content": "<p>Does the longest pole switch to something completely different when you make this change, or is most of it the same?</p>",
        "id": 253990911,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1632106024
    },
    {
        "content": "<p>No, this one is going to be the long pole for a long time.</p>",
        "id": 253991958,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632107162
    },
    {
        "content": "<p>After <a href=\"https://github.com/leanprover-community/mathlib/issues/9292\">#9292</a> and <a href=\"https://github.com/leanprover-community/mathlib/issues/9293\">#9293</a> the long pole is down to 46.5 minutes.</p>",
        "id": 253996525,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632112515
    },
    {
        "content": "<p>Here's a script, based on <code>get_axioms_used</code>, that will print the files used in all dependents of a given list of target theorems. If you run this on all theorems in <code>data.real.pi</code> you should get a lower bound on the files that are needed to actually prove the theorems, assuming you don't split any files up:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.pi</span>\n\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">tactic.get_dependents_aux</span> <span class=\"o\">(</span><span class=\"n\">env</span> <span class=\"o\">:</span> <span class=\"n\">environment</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">name</span> <span class=\"bp\">→</span>\n  <span class=\"n\">name_set</span> <span class=\"bp\">×</span> <span class=\"n\">name_set</span> <span class=\"bp\">→</span> <span class=\"n\">tactic</span> <span class=\"o\">(</span><span class=\"n\">name_set</span> <span class=\"bp\">×</span> <span class=\"n\">name_set</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">n</span> <span class=\"n\">p</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">fs</span><span class=\"o\">,</span> <span class=\"n\">ns</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">ns.contains</span> <span class=\"n\">n</span> <span class=\"k\">then</span> <span class=\"n\">pure</span> <span class=\"n\">p</span> <span class=\"k\">else</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">fs</span> <span class=\"o\">:=</span> <span class=\"k\">match</span> <span class=\"n\">env.decl_olean</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"o\">:=</span> <span class=\"n\">fs</span>\n  <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">fs.insert</span> <span class=\"n\">f</span>\n  <span class=\"kd\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">d</span> <span class=\"bp\">←</span> <span class=\"n\">env.get</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">ns</span> <span class=\"o\">:=</span> <span class=\"n\">ns.insert</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">process</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"o\">(</span><span class=\"n\">name_set</span> <span class=\"bp\">×</span> <span class=\"n\">name_set</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"k\">do</span>\n    <span class=\"n\">v.fold</span> <span class=\"o\">(</span><span class=\"n\">pure</span> <span class=\"o\">(</span><span class=\"n\">fs</span><span class=\"o\">,</span> <span class=\"n\">ns</span><span class=\"o\">))</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">e</span> <span class=\"n\">_</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"bp\">&gt;&gt;=</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n      <span class=\"k\">if</span> <span class=\"n\">e.is_constant</span> <span class=\"k\">then</span> <span class=\"n\">tactic.get_dependents_aux</span> <span class=\"n\">e.const_name</span> <span class=\"n\">p</span> <span class=\"k\">else</span> <span class=\"n\">pure</span> <span class=\"n\">p</span><span class=\"o\">),</span>\n  <span class=\"k\">match</span> <span class=\"n\">d</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">declaration.defn</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">v</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">process</span> <span class=\"n\">v</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">declaration.thm</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">v</span><span class=\"o\">)</span>      <span class=\"o\">:=</span> <span class=\"n\">process</span> <span class=\"n\">v.get</span>\n  <span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">pure</span> <span class=\"o\">(</span><span class=\"n\">fs</span><span class=\"o\">,</span> <span class=\"n\">ns</span><span class=\"o\">)</span>\n  <span class=\"kd\">end</span>\n\n<span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">tactic.get_dependents</span> <span class=\"o\">(</span><span class=\"n\">ns</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">name_set</span> <span class=\"o\">:=</span>\n<span class=\"k\">do</span> <span class=\"n\">env</span> <span class=\"bp\">←</span> <span class=\"n\">tactic.get_env</span><span class=\"o\">,</span>\n  <span class=\"n\">prod.fst</span> <span class=\"bp\">&lt;$&gt;</span> <span class=\"n\">ns.mfoldl</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">tactic.get_dependents_aux</span> <span class=\"n\">env</span> <span class=\"n\">n</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mk_name_set</span><span class=\"o\">,</span> <span class=\"n\">mk_name_set</span><span class=\"o\">)</span>\n\n<span class=\"k\">#eval</span> <span class=\"k\">do</span>\n  <span class=\"n\">s</span> <span class=\"bp\">←</span> <span class=\"n\">tactic.get_dependents</span> <span class=\"o\">[</span><span class=\"bp\">``</span><span class=\"n\">real.pi_gt_3141592</span><span class=\"o\">,</span> <span class=\"bp\">``</span><span class=\"n\">real.pi_lt_3141593</span><span class=\"o\">],</span>\n  <span class=\"n\">s.fold</span> <span class=\"o\">(</span><span class=\"n\">pure</span> <span class=\"o\">())</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">e</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">tactic.trace</span> <span class=\"n\">e</span>\n</code></pre></div>",
        "id": 253997791,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632113966
    },
    {
        "content": "<p>Taking the diff from the \"long pole\" above yields the following list of files, which are imported but for which none of the theorems are used transitively:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">group_ring_action</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">monoid_algebra</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">non_unital_alg_hom</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">opposites</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">ordered_group</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">ordered_monoid</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">ordered_ring</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">analytic</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">local_extr</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">complex</span><span class=\"bp\">/</span><span class=\"n\">conformal</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">convex</span><span class=\"bp\">/</span><span class=\"n\">specific_functions</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">mean_inequalities</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">conformal_linear_map</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">integrals</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">pow</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">sqrt</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">finset</span><span class=\"bp\">/</span><span class=\"n\">powerset</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">sublists</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">multiset</span><span class=\"bp\">/</span><span class=\"n\">powerset</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">coeff</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">degree</span><span class=\"bp\">/</span><span class=\"n\">definitions</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">div</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">eval</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">monic</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">monomial</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">reverse</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">ring_division</span>\n<span class=\"n\">group_theory</span><span class=\"bp\">/</span><span class=\"n\">submonoid</span><span class=\"bp\">/</span><span class=\"n\">center</span>\n<span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">tensor_product</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">pi</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">prod</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">l1_space</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">lp_space</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">simple_func_dense</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">bochner</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">interval_integral</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">mean_inequalities</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">set_integral</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">set_to_l1</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">lebesgue</span>\n<span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr</span>\n<span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">rb_map</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">adjoin</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">integral_domain</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">subring</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">unique_factorization_domain</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">binder_matching</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">core</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">dependencies</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">doc_commands</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">fix_reflect_string</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">hint</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">interactive</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">obviously</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">tidy</span>\n</code></pre></div>",
        "id": 253998003,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632114119
    },
    {
        "content": "<p>Very interesting! Taking the files appearing in the long pile to <code>data.real.pi</code>, subtracting out Mario's list (everything that is actually needed), we get:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">group_ring_action</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">opposites</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">analytic</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">inverse</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">local_extr</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">convex</span><span class=\"bp\">/</span><span class=\"n\">specific_functions</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">mean_inequalities</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">integrals</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">pow</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">dfinsupp</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">finset</span><span class=\"bp\">/</span><span class=\"n\">powerset</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">sublists</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">multiset</span><span class=\"bp\">/</span><span class=\"n\">powerset</span>\n<span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">tensor_product</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">pi</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">prod</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">l1_space</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">lp_space</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">simple_func_dense</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">bochner</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">interval_integral</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">mean_inequalities</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">set_integral</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">set_to_l1</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">lebesgue</span>\n<span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr</span>\n<span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">rb_map</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">subring</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">binder_matching</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">core</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">dependencies</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">doc_commands</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">fix_reflect_string</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">hint</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">interactive</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">obviously</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">tidy</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">infinite_sum</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">instances</span><span class=\"bp\">/</span><span class=\"n\">ennreal</span>\n</code></pre></div>",
        "id": 253998298,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632114372
    },
    {
        "content": "<p>we got different lists <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 253998337,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632114427
    },
    {
        "content": "<p>These are the files that we are \"uselessly importing\" on the way to <code>data.real.pi</code>. In particular \"most of measure theory\".</p>",
        "id": 253998362,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632114462
    },
    {
        "content": "<p>No -- this complement is exactly what is interesting. It's the stuff that, by doing a bit of splitting so we can only import what we really need, can be removed from the import dependencies of <code>data.real.pi</code>.</p>",
        "id": 253998437,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632114509
    },
    {
        "content": "<p>No, I mean I updated my list above to do basically the same calculation (I think) and got a different list of files</p>",
        "id": 253998457,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632114541
    },
    {
        "content": "<p>mine doesn't have any topology</p>",
        "id": 253998465,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632114550
    },
    {
        "content": "<p>Oh! I missed the edit above, soory.</p>",
        "id": 253998471,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632114560
    },
    {
        "content": "<p>Oh, maybe you are including the effect of those PRs</p>",
        "id": 253998482,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632114586
    },
    {
        "content": "<p>I used latest master</p>",
        "id": 253998495,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632114599
    },
    {
        "content": "<p>Yes, I was using a local branch which was the sup of today's PRs on this.</p>",
        "id": 253998540,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632114610
    },
    {
        "content": "<p>So the difference between our lists is what I've already removed from the import dependencies of <code>data.real.pi</code>.</p>",
        "id": 253998556,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632114629
    },
    {
        "content": "<p>Of course, my PRs have not finished CI, so are probably still horribly broken by missing imports. :-)</p>",
        "id": 253998590,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632114675
    },
    {
        "content": "<p>Also, I didn't include all of the theorems in <code>data.real.pi</code>, just the bound calculation</p>",
        "id": 253998602,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632114692
    },
    {
        "content": "<p>Oh, and it makes a difference: all these files are added to the list when you add in the wallis product and leibniz series:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">big_operators</span><span class=\"bp\">/</span><span class=\"n\">finsupp</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">char_p</span><span class=\"bp\">/</span><span class=\"n\">invertible</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">invertible</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">monoid_algebra</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">opposites</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">extend_deriv</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">local_extr</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">convex</span><span class=\"bp\">/</span><span class=\"n\">combination</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">convex</span><span class=\"bp\">/</span><span class=\"n\">cone</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">convex</span><span class=\"bp\">/</span><span class=\"n\">specific_functions</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">mean_inequalities</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">dual</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">extend</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">hahn_banach</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">indicator_function</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">units</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">integrals</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">pow</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">equiv</span><span class=\"bp\">/</span><span class=\"n\">encodable</span><span class=\"bp\">/</span><span class=\"n\">lattice</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">equiv</span><span class=\"bp\">/</span><span class=\"n\">local_equiv</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">equiv</span><span class=\"bp\">/</span><span class=\"n\">nat</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">equiv</span><span class=\"bp\">/</span><span class=\"n\">ring</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">nat</span><span class=\"bp\">/</span><span class=\"n\">parity</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">opposite</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">coeff</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">derivative</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">eval</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">polynomial</span><span class=\"bp\">/</span><span class=\"n\">induction</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">real</span><span class=\"bp\">/</span><span class=\"n\">conjugate_exponents</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">real</span><span class=\"bp\">/</span><span class=\"n\">ereal</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">set</span><span class=\"bp\">/</span><span class=\"n\">accumulate</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">set</span><span class=\"bp\">/</span><span class=\"n\">intervals</span><span class=\"bp\">/</span><span class=\"n\">disjoint</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">set</span><span class=\"bp\">/</span><span class=\"n\">intervals</span><span class=\"bp\">/</span><span class=\"n\">proj_Icc</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">set</span><span class=\"bp\">/</span><span class=\"n\">pairwise</span>\n<span class=\"n\">group_theory</span><span class=\"bp\">/</span><span class=\"n\">perm</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">linear_pmap</span>\n<span class=\"n\">logic</span><span class=\"bp\">/</span><span class=\"n\">relator</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">borel_space</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">ae_eq_fun</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">ae_measurable_sequence</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">ess_sup</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">l1_space</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">lp_space</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">simple_func_dense</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">group</span><span class=\"bp\">/</span><span class=\"n\">arithmetic</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">bochner</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">integrable_on</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">interval_integral</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">lebesgue</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">mean_inequalities</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">set_integral</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">set_to_l1</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">vitali_caratheodory</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measurable_space</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measurable_space_def</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">lebesgue</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">measure_space</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">measure_space_def</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">outer_measure</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">regular</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">stieltjes</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">pi_system</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">disjointed</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">filter</span><span class=\"bp\">/</span><span class=\"n\">archimedean</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">filter</span><span class=\"bp\">/</span><span class=\"n\">cofinite</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">filter</span><span class=\"bp\">/</span><span class=\"n\">countable_Inter</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">filter</span><span class=\"bp\">/</span><span class=\"n\">ennreal</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">filter</span><span class=\"bp\">/</span><span class=\"n\">extr</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">filter</span><span class=\"bp\">/</span><span class=\"n\">germ</span>\n<span class=\"n\">order</span><span class=\"bp\">/</span><span class=\"n\">liminf_limsup</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">ring_exp</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">group_with_zero</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">infinite_sum</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">ordered</span><span class=\"bp\">/</span><span class=\"n\">liminf_limsup</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">ordered</span><span class=\"bp\">/</span><span class=\"n\">proj_Icc</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">bases</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">dense_embedding</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">instances</span><span class=\"bp\">/</span><span class=\"n\">ennreal</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">instances</span><span class=\"bp\">/</span><span class=\"n\">ereal</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">local_extr</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">local_homeomorph</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">metric_space</span><span class=\"bp\">/</span><span class=\"n\">cau_seq_filter</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">semicontinuous</span>\n<span class=\"n\">topology</span><span class=\"bp\">/</span><span class=\"n\">sequences</span>\n</code></pre></div>",
        "id": 253998833,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632114958
    },
    {
        "content": "<p>which brings the list of unnecessary imports down to:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">group_ring_action</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">analytic</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">calculus</span><span class=\"bp\">/</span><span class=\"n\">inverse</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">dfinsupp</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">finset</span><span class=\"bp\">/</span><span class=\"n\">powerset</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">list</span><span class=\"bp\">/</span><span class=\"n\">sublists</span>\n<span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">multiset</span><span class=\"bp\">/</span><span class=\"n\">powerset</span>\n<span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">tensor_product</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">pi</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">prod</span>\n<span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">expr</span>\n<span class=\"kd\">meta</span><span class=\"bp\">/</span><span class=\"n\">rb_map</span>\n<span class=\"n\">ring_theory</span><span class=\"bp\">/</span><span class=\"n\">subring</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">basic</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">binder_matching</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">core</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">dependencies</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">doc_commands</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">fix_reflect_string</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">hint</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">interactive</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">obviously</span>\n<span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">tidy</span>\n</code></pre></div>",
        "id": 253998943,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632115082
    },
    {
        "content": "<p>but it also suggests that maybe the two halves of <code>data.real.pi</code> shouldn't be in the same file</p>",
        "id": 253999001,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632115118
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> What is the difference between the length of the long pole and the length of an actual mathlib compile? Can we gain something by making lean aware of the long pole?</p>",
        "id": 254081844,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632156946
    },
    {
        "content": "<p>The Wallis product argument could be rephrased to use the mean value theorem rather than the fundamental theorem of calculus (thus, no measure theory import), if we want to displace the precise position of the long pole.</p>",
        "id": 254098405,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1632163545
    },
    {
        "content": "<p>I don't think it's particularly valuable to reduce the long pole at the cost of new mathematical arguments, unless they are independently \"better\".</p>",
        "id": 254113424,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632169942
    },
    {
        "content": "<p>I don't want to object to anyone using high powered maths to give easy proofs. :-)</p>",
        "id": 254113460,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632169957
    },
    {
        "content": "<p>But, like in real life, if someone gave me a long-winded introduction to subject X, then gave an argument that didn't use it at all, I would be annoyed!</p>",
        "id": 254113572,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632170013
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/254081844\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> What is the difference between the length of the long pole and the length of an actual mathlib compile? Can we gain something by making lean aware of the long pole?</p>\n</blockquote>\n<p>I guess potentially we could.</p>\n<p>Currently the long pole analysis assumes infinite parallelism, in which case the build would be deterministic --- everything would compile as soon as it possibly could. In that idealisation the only way to speed things up is to shorten the long pole by changing the code.</p>\n<p>With finite parallelism, every time a core come free you have to make a choice between the new compilation units that become available.</p>\n<p>It's not immediately clear how to do a cheap computation on-the-fly to decide this. I guess at the beginning we could just assign each file a score \"total compilation time remaining after this file, assuming infinite parallelism\", and always pick the file with largest score. This would be pretty easy to implement. It would even be reasonable to simulate (e.g. and compare against the \"random\" and \"smallest score\" strategies to get a sense of value).</p>",
        "id": 254132873,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632179718
    },
    {
        "content": "<p>Lean is also more finely parallelized than this - each proof is processed independently, although perhaps the advantage of this is dubious and I believe this is no longer done in lean 4. So this \"long pole\" model is maybe a little too coarse, although it's not entirely wrong to consider the cost of reading through the definitions and other objects involved in parsing a lean file (the single threaded part) since they contribute to this \"long pole\", but it is a bit untrue to put the elaboration cost of all the proofs in that metric.</p>",
        "id": 254147035,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632191196
    },
    {
        "content": "<p>The per-declaration parallelisation is gone in Lean4, and I'm not sure it actually crosses file boundaries in Lean3 anyway. (Does anyone know for sure on this? That is, if <code>A</code> imports <code>B</code>, does compilation of <code>A</code> start once all the definitions on <code>B</code> are done, even if there are still proofs to <code>B</code> being worked on? Or does <code>A</code> not start until the <code>B</code> is completely finished?)</p>",
        "id": 254149543,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632193583
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/254132873\">said</a>:</p>\n<blockquote>\n<p>With finite parallelism, every time a core come free you have to make a choice between the new compilation units that become available.</p>\n<p>It's not immediately clear how to do a cheap computation on-the-fly to decide this. I guess at the beginning we could just assign each file a score \"total compilation time remaining after this file, assuming infinite parallelism\", and always pick the file with largest score. This would be pretty easy to implement. It would even be reasonable to simulate (e.g. and compare against the \"random\" and \"smallest score\" strategies to get a sense of value).</p>\n</blockquote>\n<p>Right, I meant exactly this. The score is only an approximation of the \"real 16-core parallelism score\" because it makes a simplification in computing the score. But it might still be a better heuristic than \"pick something random\".</p>",
        "id": 254152105,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632196375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/254149543\">said</a>:</p>\n<blockquote>\n<p>The per-declaration parallelisation is gone in Lean4, and I'm not sure it actually crosses file boundaries in Lean3 anyway. (Does anyone know for sure on this? That is, if <code>A</code> imports <code>B</code>, does compilation of <code>A</code> start once all the definitions on <code>B</code> are done, even if there are still proofs to <code>B</code> being worked on? Or does <code>A</code> not start until the <code>B</code> is completely finished?)</p>\n</blockquote>\n<p>I made a simple test project to check whether lean does move on to lemmas in later files and it seems it does.<br>\nIn <a href=\"https://github.com/alexjbest/pole-test\">https://github.com/alexjbest/pole-test</a> there are two lean files <code>a</code> and <code>b</code>, each of which has two lemmas, the ones in <code>a</code> sleep for 10 and 20 seconds respectively. The ones in <code>b</code> just spam the CPU with dumb rfl statements. So running <code>lean -j2 src/b.lean</code> to check these files with 2 threads I see nothing happening to the CPU for 10 seconds, then 100% of one core, then 10 seconds later 200%, which I think shows lean is moving on to <code>b</code> with one thread while the longer lemma in <code>a</code> is still being processed. Of course this will look a bit different if your machine is fast enough to do the <code>b</code> lemmas in &lt; 10s.</p>",
        "id": 254223601,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1632237117
    },
    {
        "content": "<p>Good to know! Thank you. In any case this behaviour is disappearing in Lean4, so we shouldn't plan around it. :-)</p>",
        "id": 254293161,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632266788
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/9344\">#9344</a> is a PR for a python implementation of this script.</p>",
        "id": 254494233,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1632382856
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"282271\">@Bolton Bailey</span>, I see you closed the PR in favour of a PR to mathlibtools. It's perfect if this functionality ends up in <code>leanproject</code>, but be aware the quality standards for <code>leanproject</code> are going to much higher than the <code>scripts/</code> directory of mathlib. Perfect is the enemy of good: if this doesn't make it into <code>leanproject</code>, please do dump it into <code>scripts/</code>!</p>",
        "id": 254500109,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632385866
    },
    {
        "content": "<p>A middle ground would be to just <code>import mathlibtools</code>, as something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">from</span> <span class=\"n\">mathlibtools.lib</span> <span class=\"kn\">import</span> <span class=\"n\">LeanProject</span>\n\n<span class=\"n\">proj</span> <span class=\"bp\">=</span> <span class=\"n\">LeanProject.from_path</span><span class=\"o\">(</span><span class=\"n\">Path</span><span class=\"o\">(</span><span class=\"s2\">\".\"</span><span class=\"o\">))</span>\n<span class=\"n\">graph</span> <span class=\"bp\">=</span> <span class=\"n\">proj.import_graph</span>\n</code></pre></div>",
        "id": 254501266,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632386500
    },
    {
        "content": "<p>That might be the better choice anyway, in fact, as the json files this processes only really exist for mathlib</p>",
        "id": 254501440,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632386608
    },
    {
        "content": "<p>The only downside is that the install instructions for mathlibtools don't make the import available on all platforms</p>",
        "id": 254501529,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632386644
    },
    {
        "content": "<p>But if you use <code>pip</code> and not <code>pipx</code> it works fine</p>",
        "id": 254501576,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632386678
    },
    {
        "content": "<p>Ok, I cracked and wrote a mathlib scheduler simulator.</p>\n<p>These graphs are based on a random scheduler.</p>\n<p>Compile time as function of max cores:<br>\n<a href=\"/user_uploads/3121/NmNXT--bG_Urn9alQhxrMsIB/Screen-Shot-2021-09-23-at-8.54.29-pm.png\">Screen-Shot-2021-09-23-at-8.54.29-pm.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/NmNXT--bG_Urn9alQhxrMsIB/Screen-Shot-2021-09-23-at-8.54.29-pm.png\" title=\"Screen-Shot-2021-09-23-at-8.54.29-pm.png\"><img src=\"/user_uploads/3121/NmNXT--bG_Urn9alQhxrMsIB/Screen-Shot-2021-09-23-at-8.54.29-pm.png\"></a></div><p>Core usage with max 4/10/40 cores:<br>\n<a href=\"/user_uploads/3121/qYdwrHXH3QT3GzDt1wZhC11i/Screen-Shot-2021-09-23-at-8.50.31-pm.png\">Screen-Shot-2021-09-23-at-8.50.31-pm.png</a> <a href=\"/user_uploads/3121/NN9AS-48M85N0SkXl--cAN-z/Screen-Shot-2021-09-23-at-8.50.36-pm.png\">Screen-Shot-2021-09-23-at-8.50.36-pm.png</a> <a href=\"/user_uploads/3121/njV_vPYNCiSeOu6BuYECK60H/Screen-Shot-2021-09-23-at-8.50.43-pm.png\">Screen-Shot-2021-09-23-at-8.50.43-pm.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/qYdwrHXH3QT3GzDt1wZhC11i/Screen-Shot-2021-09-23-at-8.50.31-pm.png\" title=\"Screen-Shot-2021-09-23-at-8.50.31-pm.png\"><img src=\"/user_uploads/3121/qYdwrHXH3QT3GzDt1wZhC11i/Screen-Shot-2021-09-23-at-8.50.31-pm.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/NN9AS-48M85N0SkXl--cAN-z/Screen-Shot-2021-09-23-at-8.50.36-pm.png\" title=\"Screen-Shot-2021-09-23-at-8.50.36-pm.png\"><img src=\"/user_uploads/3121/NN9AS-48M85N0SkXl--cAN-z/Screen-Shot-2021-09-23-at-8.50.36-pm.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/njV_vPYNCiSeOu6BuYECK60H/Screen-Shot-2021-09-23-at-8.50.43-pm.png\" title=\"Screen-Shot-2021-09-23-at-8.50.43-pm.png\"><img src=\"/user_uploads/3121/njV_vPYNCiSeOu6BuYECK60H/Screen-Shot-2021-09-23-at-8.50.43-pm.png\"></a></div>",
        "id": 254515818,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632394548
    },
    {
        "content": "<p>So far, trying different scheduling strategies gives no more than about a 10% variation. And \"random\" seems to be close to the best. :-)</p>",
        "id": 254516465,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632394879
    },
    {
        "content": "<p>hmmm, thanks a lot!</p>",
        "id": 254516608,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632394953
    },
    {
        "content": "<p>Even though it's a bit disappointing that \"random\" is good enough</p>",
        "id": 254516630,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632394967
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> what are these graphs/what is the scheduler simulator? is it just working at file level granularity?</p>",
        "id": 254519188,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1632396494
    },
    {
        "content": "<p>Here's another interesting way to cut the data: weight the files extra based on how much under-utilization there is. That is, if CPU utilization is 3 CPUs when 10 are available, then all three active files get 10/3 more \"effective time\" to their name. Files with the most effective time spent on them exist at cutpoints and decreases in the time spent there will have outsized benefits</p>",
        "id": 254519304,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632396586
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span>, yes, it's just working at file level. I keep track of a set of files remaining. Each entry is a filename, a time to compile that file, and a list of remaining dependencies. Whenever there is a CPU available and at least one file with no remaining dependencies, I pass the list of such files to the \"scheduler\" function to pick which one to start work on.</p>",
        "id": 254600798,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632429353
    },
    {
        "content": "<p>Mario's suggestion, top 20 by utilisation-weighted compilation time:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">interval_integral</span>   <span class=\"mi\">912</span><span class=\"bp\">.</span><span class=\"mi\">659</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">simple_func_dense</span>   <span class=\"mi\">717</span><span class=\"bp\">.</span><span class=\"mi\">784</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">bochner</span> <span class=\"mi\">698</span><span class=\"bp\">.</span><span class=\"mi\">796</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">set_to_l1</span>   <span class=\"mi\">535</span><span class=\"bp\">.</span><span class=\"mi\">138</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">constructions</span><span class=\"bp\">/</span><span class=\"n\">prod</span>   <span class=\"mi\">533</span><span class=\"bp\">.</span><span class=\"mi\">549</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">integrals</span>    <span class=\"mi\">511</span><span class=\"bp\">.</span><span class=\"mi\">95</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">pow</span>  <span class=\"mi\">417</span><span class=\"bp\">.</span><span class=\"mi\">861</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">integral</span><span class=\"bp\">/</span><span class=\"n\">set_integral</span>    <span class=\"mi\">400</span><span class=\"bp\">.</span><span class=\"mi\">362</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">lp_space</span>    <span class=\"mi\">373</span><span class=\"bp\">.</span><span class=\"mi\">746</span>\n<span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">quadratic_form</span>   <span class=\"mi\">331</span><span class=\"bp\">.</span><span class=\"mi\">299</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">function</span><span class=\"bp\">/</span><span class=\"n\">l1_space</span>    <span class=\"mi\">255</span><span class=\"bp\">.</span><span class=\"mi\">831</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">hausdorff</span>    <span class=\"mi\">244</span><span class=\"bp\">.</span><span class=\"mi\">415</span>\n<span class=\"n\">geometry</span><span class=\"bp\">/</span><span class=\"n\">euclidean</span><span class=\"bp\">/</span><span class=\"n\">circumcenter</span> <span class=\"mi\">236</span><span class=\"bp\">.</span><span class=\"mi\">834</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">normed_space</span><span class=\"bp\">/</span><span class=\"n\">inner_product</span> <span class=\"mi\">227</span><span class=\"bp\">.</span><span class=\"mi\">198</span>\n<span class=\"n\">geometry</span><span class=\"bp\">/</span><span class=\"n\">manifold</span><span class=\"bp\">/</span><span class=\"n\">times_cont_mdiff</span>  <span class=\"mi\">221</span><span class=\"bp\">.</span><span class=\"mi\">865</span>\n<span class=\"n\">linear_algebra</span><span class=\"bp\">/</span><span class=\"n\">clifford_algebra</span><span class=\"bp\">/</span><span class=\"n\">equivs</span>  <span class=\"mi\">217</span><span class=\"bp\">.</span><span class=\"mi\">447</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">lebesgue</span> <span class=\"mi\">207</span><span class=\"bp\">.</span><span class=\"mi\">226</span>\n<span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">special_functions</span><span class=\"bp\">/</span><span class=\"n\">trigonometric</span>    <span class=\"mi\">192</span><span class=\"bp\">.</span><span class=\"mi\">349</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">decomposition</span><span class=\"bp\">/</span><span class=\"n\">lebesgue</span>   <span class=\"mi\">181</span><span class=\"bp\">.</span><span class=\"mi\">744</span>\n<span class=\"n\">measure_theory</span><span class=\"bp\">/</span><span class=\"n\">measure</span><span class=\"bp\">/</span><span class=\"n\">measure_space</span>    <span class=\"mi\">166</span><span class=\"bp\">.</span><span class=\"mi\">835</span>\n</code></pre></div>",
        "id": 254601485,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632429608
    },
    {
        "content": "<p>I'm not sure that it is that interesting ---  mostly we're just seeing that the rest of mathlib is done by the time we get to integration.</p>",
        "id": 254601595,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632429650
    },
    {
        "content": "<p>I think the measure space library generally opts to introduce a notion and prove everything about it all in one file, so it ends up being a long sequence of files, each depending on one file before it, and not much parallelism is possible.</p>",
        "id": 254811629,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632548864
    },
    {
        "content": "<p>As an example, I found it pretty surprising that the file in which we define a product measure already imports \"everything\" about Lebesgue measure. I would have thought that the basic construction would come much earlier. (e.g. even in a context where integration isn't set up, so Fubini/Tonelli would happen in a later file).</p>",
        "id": 254811742,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632548979
    },
    {
        "content": "<p>What can we do to detect such \"short poles\" in mathlib? That is, linear sequences of files with high compile time</p>",
        "id": 254811824,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632549046
    },
    {
        "content": "<p>This is a version of the spanning tree, where the y-coordinate of a node gives the time to reach that file under infinite parallelism, and the parent of each node is the last-to-start import.</p>\n<p><a href=\"/user_uploads/3121/vWAif9iwHih8CSnvPD48gLNA/mathlib-spanning-tree.png\">mathlib-spanning-tree.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/vWAif9iwHih8CSnvPD48gLNA/mathlib-spanning-tree.png\" title=\"mathlib-spanning-tree.png\"><img src=\"/user_uploads/3121/vWAif9iwHih8CSnvPD48gLNA/mathlib-spanning-tree.png\"></a></div>",
        "id": 254814761,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632552172
    },
    {
        "content": "<p>Part of the problem is that Bochner integration imports L1 space which imports Lp space, which imports the function of raising a real number to the p-th power, which imports all of calculus.</p>\n<p>We have a construction of the exponential which doesn't use calculus:<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/find/data.complex.exponential\">docs#data.complex.exponential</a><br>\nWould it be worth adding the definition of powers to this file, too?  Then measure theory could be compiled in parallel to calculus rather than after it.</p>",
        "id": 254840814,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1632577353
    },
    {
        "content": "<p>This sounds great! It does seem like we should be able to do a lot of integration theory without calculus.</p>",
        "id": 254849557,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632585091
    },
    {
        "content": "<p>Is the correct version of that link <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complex.exp\">docs#complex.exp</a>?</p>",
        "id": 254849788,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632585282
    },
    {
        "content": "<p>I think Heather wanted to link to a file. I guess we could potentially have file#data.complex.exponential ?</p>",
        "id": 254858334,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632593011
    },
    {
        "content": "<p>It seems a reasonable first step might be to break <code>analysis/mean_inequalities</code> into separate files, so it's easier to pinpoint exactly which lemmas about <code>has_pow ℝ ℝ</code> are really needed.</p>",
        "id": 254875759,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632609140
    },
    {
        "content": "<p>Yes -- note that it's possible that some proofs currently use calculus but wouldn't have to, like I wouldn't be surprised if there's a more direct proof of convexity.</p>",
        "id": 254875824,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1632609241
    },
    {
        "content": "<p>Another possibility is</p>\n<ul>\n<li>define <code>[Lp_class f g]</code> where <code>f</code> and <code>g</code> are a pair of inverse functions from <code>ℝ≥0∞</code> to itself satisfying ... some list of properties</li>\n<li>define <code>Lp_space</code> to take <code>(f : ℝ≥0∞ → ℝ≥0∞) (g : ℝ≥0∞ → ℝ≥0∞) [Lp_class f g]</code> rather than <code>p</code></li>\n<li>check that <code>[Lp_class id id]</code> and define <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mn>1</mn></msup></mrow><annotation encoding=\"application/x-tex\">L^1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span> to be <code>Lp_space id id</code></li>\n<li>much later in the hierarchy, check that <code>[Lp_class (λ x, x ^ p) (λ x, x ^ (1 / p))]</code></li>\n</ul>",
        "id": 254876142,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1632609540
    },
    {
        "content": "<p>Hmm, I feel like this is too far a compromise. Mathlib compiling fast is nice, and I don't mind changing from one mathematically plausible definition to another to achieve this, but <code>[Lp_class]</code> doesn't really have a leg to stand on mathematically. :-)</p>",
        "id": 254876483,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632609881
    },
    {
        "content": "<p>There would actually be one other use for <code>Lp_class</code>.  It is rather a pain currently that when people work with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">L^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>, the squaring involved is raising to the <code>(2:ℝ≥0∞)</code> power rather than the nat-2 power.  One has to mess around with power-cast lemmas, usually explicitly because it's a bit beyond the capabilities of <code>norm_cast</code>. This would let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">L^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> be defined with nat-2 powers.</p>",
        "id": 254876734,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1632610142
    },
    {
        "content": "<p>I feel like changing the proof of convexity of the exponential (and rpow) to use a direct computation (like the first answer there: <a href=\"https://math.stackexchange.com/questions/1583000/convexity-of-exponential-function\">https://math.stackexchange.com/questions/1583000/convexity-of-exponential-function</a>) and isolating the use of calculus in analysis.special_functions.pow is the simpler approach.</p>",
        "id": 254877115,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1632610532
    },
    {
        "content": "<p>But I agree that the ennreal power in L2 is a pain :)</p>",
        "id": 254877181,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1632610589
    },
    {
        "content": "<p>OK, let's do that!  Maybe we just need to sit down and figure out the right simp-lemmas to improve working in L2.</p>",
        "id": 254877217,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1632610635
    },
    {
        "content": "<p>I'd thought I could try working on this today, but I seem to be in a no-ssh-allowed internet environment for a little while, and working on mathlib may just be too painful.</p>",
        "id": 254877229,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632610653
    },
    {
        "content": "<p>I have started working on isolating calculus in analysis/special_functions. Currently, all proofs of continuity of exp, log and the trigonometric functions use the existence of derivatives. Then continuity of exp is used for the definition of the real log, which is used in the definition of complex log, cpow, etc.<br>\nI am replacing the proofs of continuity by direct ones in order to get a definition of all those objects without using derivatives.</p>",
        "id": 254915354,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1632647609
    },
    {
        "content": "<p>Do we need the continuity for Lp spaces, though?</p>",
        "id": 254932095,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1632663479
    },
    {
        "content": "<p>i don't know? i am not sure that I get what you ask.<br>\nI have observed that in order to define log (and everything that depends on it), we currently use continuity of the exponential: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.log\">docs#real.log</a> uses <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.exp_order_iso\">docs#real.exp_order_iso</a>, whose surjectivity is proven through continuity. Hence I have made that continuity derivative-free. You want to avoid talking about continuity in those definitions?</p>",
        "id": 254932445,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1632663804
    },
    {
        "content": "<p>What is our proof that a function defined by a power series <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∑</mo><mi>n</mi></msub><msub><mi>a</mi><mi>n</mi></msub><msup><mi>z</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\sum_n a_nz^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span> is continuous where the power series converges? [I mean, what does it use?]</p>",
        "id": 254932515,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632663863
    },
    {
        "content": "<p>I see, you're right, continuity seems like the easiest proof of surjectivity.  I can think of three approaches to get continuity:</p>\n<ul>\n<li>directly as you've done</li>\n<li>via <a href=\"https://leanprover-community.github.io/mathlib_docs/find/analytic_at.continuous_at\">docs#analytic_at.continuous_at</a> as <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> suggests</li>\n<li>prove that convex implies continuous (useful to have in any case)</li>\n</ul>",
        "id": 254949002,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1632678772
    },
    {
        "content": "<p>Oh, do we not have the last one?</p>",
        "id": 254952863,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632682224
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"350992\">@Rémy Degenne</span>, please note I have <a href=\"https://github.com/leanprover-community/mathlib/issues/9340\">#9340</a> open, which splits the development of trigonometry across several files. This seems likely to conflict with what you're doing, so perhaps you could either have a look at my PR, or base your work on top of it?</p>",
        "id": 254968278,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632696112
    },
    {
        "content": "<p>Indeed, I now have a big pile of conflicts because I split that file in a different way. That merge will be fun.</p>",
        "id": 255009577,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1632730153
    },
    {
        "content": "<p>Sorry. :-( If it is too painful I can abandon mine. I'd prefer that content-ful PRs get priority over merely re-arranging PRs, of course.</p>",
        "id": 255011551,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632731246
    },
    {
        "content": "<p>No problem. I'll deal with it.</p>",
        "id": 255011981,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1632731502
    },
    {
        "content": "<p>And <a href=\"https://github.com/leanprover-community/mathlib/issues/9340\">#9340</a> is already merged into master anyway, so it's a bit late to abandon it :)</p>",
        "id": 255012123,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1632731590
    },
    {
        "content": "<p>Looks like <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> is also modifying those files in <a href=\"https://github.com/leanprover-community/mathlib/issues/9405\">#9405</a> and <a href=\"https://github.com/leanprover-community/mathlib/issues/9406\">#9406</a> . I'll come back to this in a few days, when the special_functions folder stabilizes a bit.</p>",
        "id": 255039799,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1632746112
    },
    {
        "content": "<p>Hi, did I miss some refactoring going on?</p>",
        "id": 255040168,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632746280
    },
    {
        "content": "<p>A big sweepy swoop!</p>",
        "id": 255040238,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632746301
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/9405\">#9405</a> and <a href=\"https://github.com/leanprover-community/mathlib/issues/9406\">#9406</a> are small PRs, I can redo them on top of any large refactor (though if the refactor is not ready yet, then I'd prefer to merge these, then help merging master).</p>",
        "id": 255040312,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632746349
    },
    {
        "content": "<p>The refactor is not ready yet, because I did not see another PR that got merged recently and split many files. I will need time to fix my branch. You should go ahead with your PRs.</p>\n<p>The story is that I want to remove the dependence on derivatives in the definitions of the various special functions, which means removing derivatives from some proofs of continuity. Then all the files should be split into two, one of which does not import calculus.</p>",
        "id": 255040612,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1632746509
    },
    {
        "content": "<p>The end goal, which relates this to the title of the thread, is to remove calculus from the imports of lp_space in measure theory</p>",
        "id": 255040738,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1632746567
    },
    {
        "content": "<p>Note that I'd like to have <code>exp</code> redefined in terms of power series from <code>analytic_at</code> some day.</p>",
        "id": 255041343,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632746833
    },
    {
        "content": "<p>And use the same definition for real numbers, complex numbers, and any Banach algebra.</p>",
        "id": 255041515,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632746894
    },
    {
        "content": "<p>Though others may not agree.</p>",
        "id": 255041910,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632747068
    },
    {
        "content": "<p>previous discussion on this: <a href=\"#narrow/stream/113488-general/topic/exponential.20in.20banach.20algebras/near/248773988\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/exponential.20in.20banach.20algebras/near/248773988</a></p>",
        "id": 255043098,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1632747588
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> would it be possible to produce the same kind of spanning tree you showed above in that thread, applied to <a href=\"https://github.com/leanprover-community/mathlib/tree/pow_split\">branch#pow_split</a> ? In that branch, most of measure theory does not import derivatives.</p>",
        "id": 256384553,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1633513777
    },
    {
        "content": "<p>Sure!</p>",
        "id": 256384612,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633513803
    },
    {
        "content": "<p>Ah, maybe not, <a href=\"https://mathlib-bench.limperg.de/commit/ab7d25193590b63a2380632018cfb3c8616accdf\">https://mathlib-bench.limperg.de/commit/ab7d25193590b63a2380632018cfb3c8616accdf</a> is down, and I don't have a local copy.</p>",
        "id": 256384782,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633513907
    },
    {
        "content": "<p>(These are the build times for files on master --- this won't really be accurate for analysing a different branch: we'll just use a different import graph, and pretend the compile times of individual files haven't changed.)</p>",
        "id": 256384888,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633513952
    },
    {
        "content": "<p>I created and deleted files in that branch</p>",
        "id": 256384943,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1633513988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256311\">@Jannis Limperg</span>, any idea why the build time bot logs are offline?</p>",
        "id": 256384960,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633514002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"350992\">@Rémy Degenne</span>, it may not actually matter that much --- it will be a matter of whether you've shortened the long pole, rather than sped up individual files.</p>",
        "id": 256385014,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633514035
    },
    {
        "content": "<p>i.e. you will still see all the benefit of removing imports, when we look at the cumulative time to reach a given file.</p>",
        "id": 256385079,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633514062
    },
    {
        "content": "<p>Right, having an inaccurate time for a few changed files won't matter much.</p>",
        "id": 256385141,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1633514106
    },
    {
        "content": "<p>But if you want that level of meaningfulness, we'd have to ask Jannis if he can run the bot on your branch.</p>",
        "id": 256385152,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633514112
    },
    {
        "content": "<p>I'll check tomorrow if his site has come back online, but probably won't have further time tonight.</p>",
        "id": 256385225,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633514159
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/256384960\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"256311\">Jannis Limperg</span>, any idea why the build time bot logs are offline?</p>\n</blockquote>\n<p>They occasionally die for unknown reasons. I've restarted the service; thanks for the ping!</p>\n<p>I've also started a build of bc09898fabb811d5da516a854aff52eaa98a14e7 for comparison. <span class=\"user-mention\" data-user-id=\"350992\">@Rémy Degenne</span> is this the right commit?</p>",
        "id": 256389184,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1633516235
    },
    {
        "content": "<p>yes, that's the right one. Thanks!</p>",
        "id": 256389718,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1633516584
    },
    {
        "content": "<p>Okay, subject to the timing data being dodgy as described above, <a href=\"https://github.com/leanprover-community/mathlib/tree/pow_split\">branch#pow_split</a> should reduce the infinite-core compile time from 45.9 minutes to 43.6 minutes!</p>",
        "id": 256390247,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633516891
    },
    {
        "content": "<p>Nice!</p>",
        "id": 256390250,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633516892
    },
    {
        "content": "<p>Thanks for the computation. I expected a bigger effect than a 2min improvement :)</p>",
        "id": 256390372,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1633516962
    },
    {
        "content": "<p>Call it a 5% improvement? That sounds pretty good!</p>",
        "id": 256390412,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633516992
    },
    {
        "content": "<p>When Jannis' build comes back I can give you a more accurate number.</p>",
        "id": 256390466,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633517032
    },
    {
        "content": "<p>Ah wait do you need per-file timings from the branch build?</p>",
        "id": 256390573,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1633517078
    },
    {
        "content": "<p>Yes, that's what would let me do something more accurate.</p>",
        "id": 256390596,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633517095
    },
    {
        "content": "<p>Okay, then I'll have to set that up real quick.</p>",
        "id": 256390625,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1633517115
    },
    {
        "content": "<p>But I don't think it matters too much. In any case, I'm off to bed for today.</p>",
        "id": 256390630,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633517116
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Here are the timings for the <code>pow_split</code> branch: <a href=\"/user_uploads/3121/TYzbNX-mbiVskVInJMAPy57l/pow-split-timings.txt\">pow-split-timings.txt</a></p>",
        "id": 256636348,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1633635031
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>  has a PR for this <a href=\"https://github.com/leanprover-community/mathlib4/pull/8361\">#8361</a>, and there has been some additional discussion of this in <a href=\"#narrow/stream/270676-lean4/topic/Lake.20parallel.20builds/near/401563001\">this thread</a>. I got this working again and got the longest pole for the most recent version of mathlib:</p>\n<div class=\"codehilite\" data-code-language=\"txt\"><pre><span></span><code>file                                                  | instructions | parallelism\n----------------------------------------------------- | ------------ | -----------\nMathlib                                               | 6724535      | x16.34\nMathlib.NumberTheory.Cyclotomic.PID                   | 6717048      | x7.42\nMathlib.NumberTheory.Cyclotomic.Rat                   | 6708512      | x7.39\n...\nMathlib.Logic.Basic                                   | 173409       | x4.06\nMathlib.Init.Function                                 | 164218       | x4.05\nMathlib.Tactic.Basic                                  | 161557       | x4.06\nMathlib.Tactic.TypeStar                               | 157514       | x4.14\nStd                                                   | 156385       | x4.15\nStd.Data.UnionFind                                    | 155614       | x1.27\nStd.Data.UnionFind.Lemmas                             | 154967       | x1.27\nStd.Data.UnionFind.Basic                              | 145102       | x1.29\nStd.Data.Array.Lemmas                                 | 121792       | x1.29\nStd.Data.List.Lemmas                                  | 86157        | x1.35\nStd.Data.List.Basic                                   | 30986        | x1.00\n</code></pre></div>\n<p>6.7M instructions seems like a pretty good improvement, since in the previous thread from a few months ago, it was 7.3M. It also looks like <code>Data.List.Basic</code> is gone, which is cool, since there have been a few PRs spinning files off of that file.</p>",
        "id": 430663399,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712005436
    },
    {
        "content": "<p>What's behind <code>...</code>?</p>",
        "id": 430670266,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1712008206
    },
    {
        "content": "<p>Zulip is telling me I can't make a post that long</p>",
        "id": 430677989,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712012414
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Todotxt\"><pre><span></span><code>Analyzing Mathlib at 16f050086b364e6b67ec3793ef652238271f5411\nfile                                                  | instructions | parallelism\n----------------------------------------------------- | ------------ | -----------\nMathlib                                               | 6724535      | x16.34\nMathlib.NumberTheory.Cyclotomic.PID                   | 6717048      | x7.42\nMathlib.NumberTheory.Cyclotomic.Rat                   | 6708512      | x7.39\nMathlib.NumberTheory.Cyclotomic.Discriminant          | 6572320      | x7.52\nMathlib.NumberTheory.NumberField.Discriminant         | 6527517      | x7.41\nMathlib.NumberTheory.NumberField.CanonicalEmbedding   | 6227667      | x7.70\nMathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls  | 5830610      | x6.74\nMathlib.Analysis.SpecialFunctions.Gamma.BohrMollerup  | 5764077      | x6.79\nMathlib.Analysis.SpecialFunctions.Gaussian            | 5727699      | x6.83\nMathlib.Analysis.Fourier.PoissonSummation             | 5588962      | x6.65\nMathlib.Analysis.Distribution.SchwartzSpace           | 5551742      | x6.38\nMathlib.Analysis.SpecialFunctions.JapaneseBracket     | 5399452      | x6.46\nMathlib.MeasureTheory.Integral.Layercake              | 5339962      | x6.49\nMathlib.Analysis.SpecialFunctions.Integrals           | 5313393      | x6.52\nMathlib.Analysis.SpecialFunctions.NonIntegrable       | 5199809      | x6.53\nMathlib.MeasureTheory.Integral.FundThmCalculus        | 5185849      | x6.17\nMathlib.MeasureTheory.Integral.DominatedConvergence   | 5104778      | x5.97\nMathlib.MeasureTheory.Integral.IntervalIntegral       | 5077810      | x6.00\nMathlib.MeasureTheory.Integral.SetIntegral            | 5003059      | x5.66\nMathlib.MeasureTheory.Integral.Bochner                | 4902616      | x5.74\nMathlib.MeasureTheory.Integral.SetToL1                | 4674004      | x5.98\nMathlib.MeasureTheory.Function.SimpleFuncDenseLp      | 4412502      | x6.27\nMathlib.MeasureTheory.Function.L1Space                | 4311017      | x6.40\nMathlib.MeasureTheory.Function.LpOrder                | 4223349      | x6.51\nMathlib.MeasureTheory.Function.LpSpace                | 4212933      | x6.52\nMathlib.MeasureTheory.Function.LpSeminorm.CompareExp  | 4009883      | x6.73\nMathlib.MeasureTheory.Integral.MeanInequalities       | 3985244      | x6.20\nMathlib.Analysis.MeanInequalities                     | 3948943      | x6.01\nMathlib.Analysis.SpecialFunctions.Pow.NNReal          | 3893988      | x5.83\nMathlib.Analysis.SpecialFunctions.Pow.Real            | 3857867      | x5.87\nMathlib.Analysis.SpecialFunctions.Pow.Complex         | 3817991      | x5.92\nMathlib.Analysis.SpecialFunctions.Complex.Log         | 3799711      | x5.95\nMathlib.Analysis.SpecialFunctions.Complex.Arg         | 3782074      | x5.96\nMathlib.Analysis.SpecialFunctions.Trigonometric.Angle | 3739233      | x6.01\nMathlib.Analysis.SpecialFunctions.Trigonometric.Basic | 3690905      | x5.93\nMathlib.Analysis.SpecialFunctions.Exp                 | 3623406      | x6.02\nMathlib.Analysis.Complex.Basic                        | 3604885      | x5.97\nMathlib.Data.Complex.Module                           | 3536249      | x5.71\nMathlib.FieldTheory.Tower                             | 3442738      | x5.05\nMathlib.LinearAlgebra.FreeModule.Finite.Matrix        | 3432206      | x5.07\nMathlib.LinearAlgebra.FreeModule.StrongRankCondition  | 3410216      | x5.09\nMathlib.LinearAlgebra.Charpoly.Basic                  | 3401236      | x5.10\nMathlib.FieldTheory.Minpoly.Field                     | 3387788      | x5.11\nMathlib.RingTheory.Algebraic                          | 3358245      | x5.14\nMathlib.RingTheory.IntegralClosure                    | 3324918      | x5.18\nMathlib.LinearAlgebra.Matrix.Charpoly.LinearMap       | 3238551      | x5.24\nMathlib.LinearAlgebra.Matrix.Charpoly.Coeff           | 3199658      | x5.29\nMathlib.LinearAlgebra.Matrix.Charpoly.Basic           | 3113608      | x5.34\nMathlib.RingTheory.PolynomialAlgebra                  | 3094619      | x4.99\nMathlib.RingTheory.MatrixAlgebra                      | 3057938      | x4.95\nMathlib.RingTheory.TensorProduct.Basic                | 3025048      | x4.99\nMathlib.LinearAlgebra.FiniteDimensional               | 2793401      | x5.25\nMathlib.LinearAlgebra.Dimension.DivisionRing          | 2695110      | x5.40\nMathlib.LinearAlgebra.Dimension.Constructions         | 2638543      | x5.44\nMathlib.Algebra.Module.Torsion                        | 2560830      | x5.53\nMathlib.GroupTheory.Torsion                           | 2482285      | x5.64\nMathlib.GroupTheory.PGroup                            | 2465115      | x5.67\nMathlib.GroupTheory.SpecificGroups.Cyclic             | 2439380      | x5.63\nMathlib.GroupTheory.Exponent                          | 2402998      | x5.26\nMathlib.Data.Nat.Factorization.Basic                  | 2377262      | x5.10\nMathlib.NumberTheory.Padics.PadicVal                  | 2318516      | x5.20\nMathlib.RingTheory.Int.Basic                          | 2299289      | x5.18\nMathlib.RingTheory.PrincipalIdealDomain               | 2283730      | x5.18\nMathlib.RingTheory.UniqueFactorizationDomain          | 2261252      | x5.22\nMathlib.RingTheory.Noetherian                         | 2162416      | x5.40\nMathlib.RingTheory.Nilpotent                          | 2026743      | x5.53\nMathlib.LinearAlgebra.Matrix.ToLin                    | 2009704      | x5.55\nMathlib.Algebra.Algebra.Subalgebra.Tower              | 1869400      | x5.70\nMathlib.Algebra.Algebra.Subalgebra.Basic              | 1859830      | x5.71\nMathlib.RingTheory.Ideal.Operations                   | 1789788      | x5.89\nMathlib.Algebra.Algebra.Operations                    | 1658742      | x5.67\nMathlib.Algebra.Algebra.Bilinear                      | 1565294      | x4.99\nMathlib.LinearAlgebra.TensorProduct.Basic             | 1545527      | x4.51\nMathlib.Algebra.Module.Submodule.Bilinear             | 1337524      | x5.03\nMathlib.LinearAlgebra.Span                            | 1321405      | x5.01\nMathlib.LinearAlgebra.Basic                           | 1259256      | x4.87\nMathlib.Algebra.Module.Submodule.Ker                  | 1189156      | x5.09\nMathlib.Algebra.Module.Submodule.Map                  | 1164777      | x5.17\nMathlib.Algebra.Module.Submodule.Lattice              | 1126149      | x5.30\nMathlib.Algebra.Module.Submodule.Basic                | 1093883      | x5.11\n</code></pre></div>",
        "id": 430678023,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712012436
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"txt\"><pre><span></span><code>Mathlib.GroupTheory.Submonoid.Membership              | 1067502      | x4.28\nMathlib.Data.Finset.NoncommProd                       | 1038551      | x4.25\nMathlib.Algebra.BigOperators.Basic                    | 1018066      | x4.31\nMathlib.Data.Finset.Preimage                          | 907117       | x4.47\nMathlib.Data.Set.Finite                               | 900846       | x4.50\nMathlib.Data.Finite.Basic                             | 858174       | x4.66\nMathlib.Data.Fintype.Sigma                            | 854982       | x4.42\nMathlib.Data.Finset.Sigma                             | 834043       | x4.46\nMathlib.Data.Finset.Lattice                           | 825364       | x4.48\nMathlib.Data.Finset.Prod                              | 756249       | x4.63\nMathlib.Data.Finset.Card                              | 733394       | x4.75\nMathlib.Data.Finset.Image                             | 715327       | x4.84\nMathlib.Data.Finset.Basic                             | 692607       | x4.86\nMathlib.Data.Multiset.FinsetOps                       | 622502       | x4.88\nMathlib.Data.Multiset.Dedup                           | 614858       | x4.93\nMathlib.Data.Multiset.Nodup                           | 610623       | x4.95\nMathlib.Data.Multiset.Bind                            | 600021       | x4.96\nMathlib.Algebra.BigOperators.Multiset.Basic           | 583196       | x5.04\nMathlib.Data.Multiset.Basic                           | 569694       | x5.14\nMathlib.Data.List.Perm                                | 498692       | x5.61\nMathlib.Data.List.Dedup                               | 480633       | x5.51\nMathlib.Data.List.Nodup                               | 477272       | x4.71\nMathlib.Data.Set.Pairwise.Basic                       | 465889       | x4.41\nMathlib.Data.Set.Function                             | 456630       | x3.99\nMathlib.Data.Set.Prod                                 | 430524       | x4.17\nMathlib.Data.Set.Image                                | 405136       | x4.37\nMathlib.Data.Set.Basic                                | 384570       | x4.46\nMathlib.Order.SymmDiff                                | 335960       | x4.56\nMathlib.Order.BooleanAlgebra                          | 319024       | x4.59\nMathlib.Order.Heyting.Basic                           | 294815       | x4.89\nMathlib.Order.PropInstances                           | 265583       | x5.32\nMathlib.Order.Disjoint                                | 263152       | x5.36\nMathlib.Order.BoundedOrder                            | 252537       | x4.41\nMathlib.Order.Lattice                                 | 244722       | x4.46\nMathlib.Order.Monotone.Basic                          | 228304       | x4.62\nMathlib.Order.RelClasses                              | 217151       | x4.31\nMathlib.Order.Basic                                   | 209198       | x4.24\nMathlib.Tactic.Convert                                | 191938       | x3.81\nMathlib.Tactic.Congr!                                 | 188556       | x3.86\nMathlib.Logic.Basic                                   | 173409       | x4.06\nMathlib.Init.Function                                 | 164218       | x4.05\nMathlib.Tactic.Basic                                  | 161557       | x4.06\nMathlib.Tactic.TypeStar                               | 157514       | x4.14\nStd                                                   | 156385       | x4.15\nStd.Data.UnionFind                                    | 155614       | x1.27\nStd.Data.UnionFind.Lemmas                             | 154967       | x1.27\nStd.Data.UnionFind.Basic                              | 145102       | x1.29\nStd.Data.Array.Lemmas                                 | 121792       | x1.29\nStd.Data.List.Lemmas                                  | 86157        | x1.35\nStd.Data.List.Basic                                   | 30986        | x1.00\n</code></pre></div>",
        "id": 430678036,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712012441
    },
    {
        "content": "<p>Maybe we should ban <code>import Std</code> in mathlib after all, for similar reasons as lean banning <code>import Init</code>. We can just import CodeAction and the tactics (that haven't already been upstreamed); everything else (data structures and theorems) should just be imported normally like everything else in mathlib</p>",
        "id": 430682900,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712015716
    },
    {
        "content": "<p>(this calculus might change if we start shipping Std precompiled, but right now it's eating up precious build parallelism)</p>",
        "id": 430683155,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712015941
    },
    {
        "content": "<p>Has anyone had a go at making <code>Finset.Defs</code>? There are so many things in mathlib that want to talk about finiteness that are limited by the stack leading to <code>Finset</code>, even though you could define <code>Multiset</code> and <code>Finset</code> in less than 30 lines</p>",
        "id": 430683353,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712016082
    },
    {
        "content": "<p>(regarding the remark that Data.List.Basic is off the long pole: are you sure it hasn't just had its content moved to <code>Std.Data.List.Basic</code>, which is on the long pole?)</p>",
        "id": 430683483,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712016162
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/430683483\">said</a>:</p>\n<blockquote>\n<p>(regarding the remark that Data.List.Basic is off the long pole: are you sure it hasn't just had its content moved to <code>Std.Data.List.Basic</code>, which is on the long pole?)</p>\n</blockquote>\n<p>Not sure - I was thinking of <a href=\"https://github.com/leanprover-community/mathlib4/pull/11662\">#11662</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/11542\">#11542</a>, and <a href=\"https://github.com/leanprover-community/mathlib4/pull/10337\">#10337</a> which I think moved things to other files in Mathlib</p>",
        "id": 430685457,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712017599
    },
    {
        "content": "<p>Mario, fyi, <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> is working hard to golf the path to Finset</p>",
        "id": 430690773,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1712021270
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/430683353\">said</a>:</p>\n<blockquote>\n<p>Has anyone had a go at making <code>Finset.Defs</code>?</p>\n</blockquote>\n<p>Yes, as Johan says, I'm working on this. All relevant PRs are linked in <a href=\"https://github.com/leanprover-community/mathlib4/pull/11757\">#11757</a> and reviews are welcome <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 430728821,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712043243
    },
    {
        "content": "<p>Well, I'm not quite working towards having the <em>definition</em> of <code>Finset</code> in 30 lines, but rather having all the basic API without any mentions to algebra and order theory</p>",
        "id": 430729034,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712043345
    },
    {
        "content": "<p>Observation at first glance: does <code>Mathlib.FieldTheory.Tower</code> really warrant all these transitive imports?</p>",
        "id": 430782926,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712062104
    },
    {
        "content": "<p>(Not sure if the issue is in <code>Tower</code> itself needing to be split, or that its transitive dependencies are too strong.)</p>",
        "id": 430783072,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712062155
    },
    {
        "content": "<p>Also the bit around <code>Mathlib.Data.Nat.Factorization.Basic</code> importing <code>Mathlib.NumberTheory.Padics.PadicVal</code> seems like it can be optimized.</p>",
        "id": 430783571,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712062323
    },
    {
        "content": "<p>That's just related to the several ways to write factorizations mess</p>",
        "id": 430784190,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1712062505
    },
    {
        "content": "<p>I think Padics.PadicsVal can be quite basic, even though the name sounds heavy</p>",
        "id": 430916440,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1712118032
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/430682900\">said</a>:</p>\n<blockquote>\n<p>Maybe we should ban <code>import Std</code> in mathlib after all, for similar reasons as lean banning <code>import Init</code>. We can just import CodeAction and the tactics (that haven't already been upstreamed); everything else (data structures and theorems) should just be imported normally like everything else in mathlib</p>\n</blockquote>\n<p>After <a href=\"https://github.com/leanprover-community/mathlib4/pull/11876\">#11876</a>, there is only one <code>import Std</code> in Mathlib; though it is in <code>Tactic.Basic</code> where it is probably intended to prevent any downstream code from having to think about <code>Std</code>.</p>",
        "id": 431191610,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712185020
    },
    {
        "content": "<p>It's not about how many times <code>import Std</code> is used; obviously once is enough. The clear intent behind putting <code>import Std</code> in an early file is to have all of std available in all of mathlib, but my point is that this is an unnecessary build bottleneck, and it will get worse as Std grows. Seeing <code>Std.Data.UnionFind</code> in the dependencies of <code>Mathlib.Init.Function</code> was what gave me this impression: there are lots of Std things which are useful for specific use cases but aren't necessarily worth the \"convenience\" of having available with no (additional) imports.</p>\n<p>There are four main reasons mathlib wants to have Std imported, all related to metaprogramming:</p>\n<ul>\n<li>code actions (e.g. \"fill out this inductive pattern match\")</li>\n<li>tactics/commands like <code>#where</code> and <code>alias</code></li>\n<li>syntax linters like the unused tactic linter</li>\n<li>environment linters like <code>simpNF</code></li>\n</ul>\n<p>So why not just import these things in the relevant early mathlib file, instead of importing everything? I think it is perfectly reasonable for downstream mathlib code to be importing files like <code>Std.Data.HashMap.Lemmas</code> only when needed, and I'm sure if we do this there will be some std files that are not used in mathlib at all (like <code>UnionFind</code>). We may want to put <code>import Std</code> in <code>Mathlib.lean</code> so that the full Std cache is available in CI, but there is no need for it to be asked for any earlier than that.</p>",
        "id": 431211583,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712198472
    },
    {
        "content": "<p>Note: re: <code>import Std</code> in <code>Mathlib.Tactic.TypeStar</code>, this is definitely deliberate, a case of a file which is imported by literally everything in mathlib and which itself has no mathlib imports which would make it unsuitable as a \"first file\". This is what makes <code>Mathlib.Tactic.Basic</code> a bad \"first file\" - it has too many mathlib imports - which means that if you are in a dependency of <code>Mathlib.Tactic.Basic</code> then you don't get Std. We should really just have a \"first file\" or \"first folder\", but the obvious name for this is <code>Mathlib.Init</code> and it's taken right now. How about we rename <code>Mathlib.Init</code> to <code>Mathlib.Lean3Cruft</code> and make <code>Mathlib.Init</code> actually useful per its name?</p>",
        "id": 431213514,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712199555
    },
    {
        "content": "<p>Let me advertise <a href=\"https://github.com/leanprover-community/mathlib4/pull/10709\">#10709</a> as a PR that would reduce said cruft</p>",
        "id": 431229162,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712209702
    },
    {
        "content": "<p>I'm willing to try reducing the <code>Mathlib.Init</code> folder, but I need support on the merging side</p>",
        "id": 431229747,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712210106
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/11882\">#11882</a> for another one</p>",
        "id": 431235913,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712213292
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/431211583\">said</a>:</p>\n<blockquote>\n<p>We may want to put <code>import Std</code> in <code>Mathlib.lean</code> so that the full Std cache is available in CI, but there is no need for it to be asked for any earlier than that.</p>\n</blockquote>\n<p>This sounds good to me, but our current CI scripts will reject the attempt to add this import</p>",
        "id": 431238507,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712214557
    },
    {
        "content": "<p>Also note that if we want to carve out Algebra, Data and Order sublibraries (as per <a href=\"https://github.com/leanprover-community/mathlib4/pull/11757\">#11757</a>) then we will need some sublibrary living just above Std, which we might call MathlibInit, containing a few basic things, like the content of <code>Data.Nat.Defs</code> and <code>Data.Int.Defs</code> and also a few tactics. It could act as a buffer zone for things that could go to Std</p>",
        "id": 431238629,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712214613
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/431238507\">said</a>:</p>\n<blockquote>\n<p>our current CI scripts will reject the attempt to add this import</p>\n</blockquote>\n<p>We could just add a file <code>Mathlib.Std</code> containing <code>import Std</code> and all would be well again</p>",
        "id": 431238658,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712214643
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/430916440\">said</a>:</p>\n<blockquote>\n<p>I think Padics.PadicsVal can be quite basic, even though the name sounds heavy</p>\n</blockquote>\n<p>I remember a very old Number Theory textbook starting the Prelude with \"...let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> be prime and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> an integer such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>p</mi></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">v_p(n) &gt; 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>\"...  <span aria-label=\"melting face\" class=\"emoji emoji-1fae0\" role=\"img\" title=\"melting face\">:melting_face:</span></p>",
        "id": 431319877,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1712239121
    },
    {
        "content": "<p>I reformatted the table a bit so that you can see which files contribute the most instructions to the total.<br>\nHere's a recent <code>origin/master</code>:</p>\n<div class=\"codehilite\" data-code-language=\"txt\"><pre><span></span><code>Analyzing Mathlib at 89a00da8c4971f8ed447d45fcae246634308dc73\nfile                                                  | instructions | (cumulative) | parallelism\n----------------------------------------------------- | ------------ | ------------ | -----------\nMathlib                                               |         7493 |      6434115 | x17.26\nMathlib.NumberTheory.Cyclotomic.PID                   |         8543 |      6426621 | x7.30\nMathlib.NumberTheory.Cyclotomic.Rat                   |       136308 |      6418078 | x7.27\nMathlib.NumberTheory.Cyclotomic.Discriminant          |        44893 |      6281770 | x7.40\nMathlib.NumberTheory.NumberField.Discriminant         |       291794 |      6236876 | x7.28\nMathlib.NumberTheory.NumberField.CanonicalEmbedding   |       397262 |      5945081 | x7.53\nMathlib.NumberTheory.NumberField.Embeddings           |       122132 |      5547819 | x7.17\nMathlib.Analysis.Complex.Polynomial                   |        25565 |      5425686 | x7.03\nMathlib.Analysis.Complex.Liouville                    |        16110 |      5400121 | x6.75\nMathlib.Analysis.Complex.CauchyIntegral               |        47260 |      5384010 | x6.77\nMathlib.MeasureTheory.Integral.CircleIntegral         |        69606 |      5336750 | x6.62\nMathlib.Analysis.SpecialFunctions.NonIntegrable       |        13991 |      5267143 | x6.63\nMathlib.MeasureTheory.Integral.FundThmCalculus        |        81098 |      5253152 | x6.27\nMathlib.MeasureTheory.Integral.DominatedConvergence   |        27147 |      5172053 | x6.10\nMathlib.MeasureTheory.Integral.IntervalIntegral       |        74808 |      5144906 | x6.13\nMathlib.MeasureTheory.Integral.SetIntegral            |       113097 |      5070097 | x5.86\nMathlib.MeasureTheory.Integral.Bochner                |       228661 |      4957000 | x5.76\nMathlib.MeasureTheory.Integral.SetToL1                |       262713 |      4728338 | x5.99\nMathlib.MeasureTheory.Function.SimpleFuncDenseLp      |       102206 |      4465625 | x6.28\nMathlib.MeasureTheory.Function.L1Space                |        90571 |      4363418 | x6.41\nMathlib.MeasureTheory.Function.LpOrder                |        10424 |      4272847 | x6.52\nMathlib.MeasureTheory.Function.LpSpace                |       203155 |      4262422 | x6.53\nMathlib.MeasureTheory.Function.LpSeminorm.CompareExp  |        24632 |      4059266 | x6.74\nMathlib.MeasureTheory.Integral.MeanInequalities       |        36290 |      4034633 | x6.21\nMathlib.Analysis.MeanInequalities                     |        54955 |      3998343 | x6.02\nMathlib.Analysis.SpecialFunctions.Pow.NNReal          |        36148 |      3943388 | x5.84\nMathlib.Analysis.SpecialFunctions.Pow.Real            |        39883 |      3907239 | x5.88\nMathlib.Analysis.SpecialFunctions.Pow.Complex         |        18323 |      3867355 | x5.93\nMathlib.Analysis.SpecialFunctions.Complex.Log         |        17650 |      3849032 | x5.95\nMathlib.Analysis.SpecialFunctions.Complex.Arg         |        42854 |      3831381 | x5.97\nMathlib.Analysis.SpecialFunctions.Trigonometric.Angle |        48331 |      3788526 | x6.02\nMathlib.Analysis.SpecialFunctions.Trigonometric.Basic |        69457 |      3740194 | x5.93\nMathlib.Analysis.SpecialFunctions.Exp                 |        18556 |      3670737 | x6.03\nMathlib.Analysis.Complex.Basic                        |        68601 |      3652181 | x5.98\nMathlib.Data.Complex.Module                           |        93488 |      3583580 | x5.69\nMathlib.FieldTheory.Tower                             |        10542 |      3490091 | x5.04\nMathlib.LinearAlgebra.FreeModule.Finite.Matrix        |        21999 |      3479548 | x5.05\nMathlib.LinearAlgebra.FreeModule.StrongRankCondition  |         8985 |      3457549 | x5.07\nMathlib.LinearAlgebra.Charpoly.Basic                  |        13453 |      3448563 | x5.08\nMathlib.FieldTheory.Minpoly.Field                     |        29799 |      3435109 | x5.10\nMathlib.RingTheory.Algebraic                          |        33322 |      3405309 | x5.13\nMathlib.RingTheory.IntegralClosure                    |        86363 |      3371987 | x5.16\nMathlib.LinearAlgebra.Matrix.Charpoly.LinearMap       |        38920 |      3285624 | x5.22\nMathlib.LinearAlgebra.Matrix.Charpoly.Coeff           |        86035 |      3246703 | x5.27\nMathlib.LinearAlgebra.Matrix.Charpoly.Basic           |        18998 |      3160668 | x5.32\nMathlib.RingTheory.PolynomialAlgebra                  |        36691 |      3141669 | x4.97\nMathlib.RingTheory.MatrixAlgebra                      |        32898 |      3104978 | x4.93\nMathlib.RingTheory.TensorProduct.Basic                |       231778 |      3072079 | x4.97\nMathlib.LinearAlgebra.FiniteDimensional               |        98361 |      2840301 | x5.23\nMathlib.LinearAlgebra.Dimension.DivisionRing          |        58382 |      2741940 | x5.38\nMathlib.LinearAlgebra.Dimension.Constructions         |        77698 |      2683558 | x5.42\nMathlib.Algebra.Module.Torsion                        |        78447 |      2605860 | x5.50\nMathlib.GroupTheory.Torsion                           |        17171 |      2527412 | x5.61\nMathlib.GroupTheory.PGroup                            |        25746 |      2510240 | x5.64\nMathlib.GroupTheory.SpecificGroups.Cyclic             |        36378 |      2484494 | x5.59\nMathlib.GroupTheory.Exponent                          |        25738 |      2448115 | x5.21\nMathlib.Data.Nat.Factorization.Basic                  |        58753 |      2422377 | x5.05\nMathlib.NumberTheory.Padics.PadicVal                  |        19259 |      2363623 | x5.15\nMathlib.RingTheory.Int.Basic                          |        15560 |      2344364 | x5.13\nMathlib.RingTheory.PrincipalIdealDomain               |        22481 |      2328803 | x5.13\nMathlib.RingTheory.UniqueFactorizationDomain          |        98834 |      2306321 | x5.17\nMathlib.RingTheory.Noetherian                         |       137178 |      2207487 | x5.34\nMathlib.RingTheory.Nilpotent                          |        17036 |      2070309 | x5.47\nMathlib.LinearAlgebra.Matrix.ToLin                    |       140511 |      2053272 | x5.48\nMathlib.Algebra.Algebra.Subalgebra.Tower              |         9575 |      1912761 | x5.63\nMathlib.Algebra.Algebra.Subalgebra.Basic              |        70044 |      1903185 | x5.64\nMathlib.RingTheory.Ideal.Operations                   |       131145 |      1833140 | x5.81\nMathlib.Algebra.Algebra.Operations                    |        93853 |      1701994 | x5.59\nMathlib.Algebra.Algebra.Bilinear                      |        19768 |      1608141 | x4.92\nMathlib.LinearAlgebra.TensorProduct.Basic             |       208022 |      1588372 | x4.45\nMathlib.Algebra.Module.Submodule.Bilinear             |        16125 |      1380349 | x4.95\n</code></pre></div>",
        "id": 431403683,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712265386
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Todotxt\"><pre><span></span><code>Mathlib.LinearAlgebra.Span                            |        62150 |      1364224 | x4.93\nMathlib.LinearAlgebra.Basic                           |        70265 |      1302073 | x4.79\nMathlib.Algebra.Module.Submodule.Ker                  |        24506 |      1231808 | x4.99\nMathlib.Algebra.Module.Submodule.Map                  |        38645 |      1207301 | x5.08\nMathlib.Algebra.Module.Submodule.Lattice              |        32269 |      1168656 | x5.20\nMathlib.Algebra.Module.Submodule.Basic                |        26383 |      1136387 | x5.00\nMathlib.GroupTheory.Submonoid.Membership              |        28939 |      1110004 | x4.20\nMathlib.Data.Finset.NoncommProd                       |        20489 |      1081064 | x4.14\nMathlib.Algebra.BigOperators.Basic                    |       110922 |      1060574 | x4.20\nMathlib.Data.Finset.Preimage                          |         6269 |       949652 | x4.29\nMathlib.Data.Set.Finite                               |        42663 |       943382 | x4.31\nMathlib.Data.Finite.Basic                             |         3190 |       900719 | x4.46\nMathlib.Data.Fintype.Sigma                            |        20937 |       897529 | x4.23\nMathlib.Data.Finset.Sigma                             |         8679 |       876592 | x4.26\nMathlib.Data.Finset.Lattice                           |        69115 |       867912 | x4.28\nMathlib.Data.Finset.Prod                              |        22856 |       798796 | x4.22\nMathlib.Data.Finset.Card                              |        18064 |       775940 | x4.31\nMathlib.Data.Finset.Image                             |        22720 |       757875 | x4.39\nMathlib.Data.Finset.Union                             |         9040 |       735155 | x4.37\nMathlib.Data.Finset.Basic                             |        70102 |       726114 | x4.32\nMathlib.Data.Multiset.FinsetOps                       |         7681 |       656012 | x4.58\nMathlib.Data.Multiset.Dedup                           |         4234 |       648330 | x4.62\nMathlib.Data.Multiset.Nodup                           |        10579 |       644096 | x4.65\nMathlib.Data.Multiset.Range                           |         2692 |       633516 | x4.71\nMathlib.Data.Multiset.Basic                           |        70996 |       630823 | x4.72\nMathlib.Data.List.Perm                                |        18045 |       559826 | x5.19\nMathlib.Data.List.Permutation                         |         8155 |       541781 | x5.29\nMathlib.Data.List.Join                                |         5506 |       533626 | x5.36\nMathlib.Algebra.BigOperators.List.Basic               |        36210 |       528120 | x5.40\nMathlib.Data.List.Rotate                              |        11071 |       491909 | x4.48\nMathlib.Data.List.Nodup                               |        11471 |       480838 | x4.53\nMathlib.Data.Set.Pairwise.Basic                       |         9255 |       469367 | x4.39\nMathlib.Data.Set.Function                             |        26221 |       460111 | x3.97\nMathlib.Data.Set.Prod                                 |        25380 |       433890 | x4.15\nMathlib.Data.Set.Image                                |        20562 |       408510 | x4.34\nMathlib.Data.Set.Basic                                |        48609 |       387948 | x4.44\nMathlib.Order.SymmDiff                                |        16936 |       339339 | x4.53\nMathlib.Order.BooleanAlgebra                          |        24206 |       322402 | x4.56\nMathlib.Order.Heyting.Basic                           |        29233 |       298196 | x4.85\nMathlib.Order.PropInstances                           |         2429 |       268963 | x5.27\nMathlib.Order.Disjoint                                |        10608 |       266533 | x5.31\nMathlib.Order.BoundedOrder                            |         7813 |       255925 | x4.37\nMathlib.Order.Lattice                                 |        16408 |       248111 | x4.42\nMathlib.Order.Monotone.Basic                          |        11155 |       231703 | x4.58\nMathlib.Order.RelClasses                              |         7947 |       220547 | x4.27\nMathlib.Order.Basic                                   |        17256 |       212600 | x4.19\nMathlib.Tactic.Convert                                |         3380 |       195344 | x3.77\nMathlib.Tactic.Congr!                                 |        15146 |       191963 | x3.82\nMathlib.Logic.Basic                                   |         9192 |       176817 | x4.01\nMathlib.Init.Function                                 |         2658 |       167624 | x3.99\nMathlib.Tactic.Basic                                  |         4041 |       164965 | x4.01\nMathlib.Tactic.TypeStar                               |         1127 |       160924 | x4.08\nStd                                                   |          770 |       159797 | x4.09\nStd.Data.UnionFind                                    |          645 |       159027 | x1.26\nStd.Data.UnionFind.Lemmas                             |         9872 |       158381 | x1.26\nStd.Data.UnionFind.Basic                              |        23305 |       148509 | x1.28\nStd.Data.Array.Lemmas                                 |        38010 |       125204 | x1.27\nStd.Data.List.Lemmas                                  |        55034 |        87193 | x1.34\nStd.Data.List.Basic                                   |        32159 |        32159 | x1.00\n</code></pre></div>",
        "id": 431403707,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712265398
    },
    {
        "content": "<p>And here it is after spitting the longest file in <a href=\"https://github.com/leanprover-community/mathlib4/pull/11873\">#11873</a></p>\n<div class=\"codehilite\" data-code-language=\"Todotxt\"><pre><span></span><code>Analyzing Mathlib at 860785ff08f395da41a31713466a42ad324f075c\nfile                                                  | instructions | (cumulative) | parallelism\n----------------------------------------------------- | ------------ | ------------ | -----------\nMathlib                                               |         7473 |      6230844 | x17.78\nMathlib.NumberTheory.Cyclotomic.PID                   |         8518 |      6223371 | x7.50\nMathlib.NumberTheory.Cyclotomic.Rat                   |       136278 |      6214853 | x7.47\nMathlib.NumberTheory.Cyclotomic.Discriminant          |        44868 |      6078574 | x7.61\nMathlib.NumberTheory.NumberField.Discriminant         |       291784 |      6033706 | x7.49\nMathlib.NumberTheory.NumberField.CanonicalEmbedding   |       195755 |      5741922 | x7.76\nMathlib.NumberTheory.NumberField.Embeddings           |       122107 |      5546166 | x7.16\nMathlib.Analysis.Complex.Polynomial                   |        25542 |      5424058 | x7.03\nMathlib.Analysis.Complex.Liouville                    |        16084 |      5398516 | x6.75\nMathlib.Analysis.Complex.CauchyIntegral               |        47232 |      5382431 | x6.76\nMathlib.MeasureTheory.Integral.CircleIntegral         |        69583 |      5335198 | x6.62\nMathlib.Analysis.SpecialFunctions.NonIntegrable       |        13966 |      5265615 | x6.63\nMathlib.MeasureTheory.Integral.FundThmCalculus        |        81064 |      5251648 | x6.27\nMathlib.MeasureTheory.Integral.DominatedConvergence   |        27123 |      5170584 | x6.10\nMathlib.MeasureTheory.Integral.IntervalIntegral       |        74783 |      5143460 | x6.12\nMathlib.MeasureTheory.Integral.SetIntegral            |       113081 |      5068676 | x5.86\nMathlib.MeasureTheory.Integral.Bochner                |       228637 |      4955595 | x5.75\nMathlib.MeasureTheory.Integral.SetToL1                |       262697 |      4726957 | x5.98\nMathlib.MeasureTheory.Function.SimpleFuncDenseLp      |       102179 |      4464259 | x6.28\nMathlib.MeasureTheory.Function.L1Space                |        90551 |      4362080 | x6.40\nMathlib.MeasureTheory.Function.LpOrder                |        10403 |      4271528 | x6.52\nMathlib.MeasureTheory.Function.LpSpace                |       203127 |      4261125 | x6.53\nMathlib.MeasureTheory.Function.LpSeminorm.CompareExp  |        24611 |      4057997 | x6.74\nMathlib.MeasureTheory.Integral.MeanInequalities       |        36267 |      4033386 | x6.21\nMathlib.Analysis.MeanInequalities                     |        54934 |      3997118 | x6.01\nMathlib.Analysis.SpecialFunctions.Pow.NNReal          |        36133 |      3942184 | x5.83\nMathlib.Analysis.SpecialFunctions.Pow.Real            |        39868 |      3906051 | x5.87\nMathlib.Analysis.SpecialFunctions.Pow.Complex         |        18303 |      3866183 | x5.93\nMathlib.Analysis.SpecialFunctions.Complex.Log         |        17631 |      3847879 | x5.95\nMathlib.Analysis.SpecialFunctions.Complex.Arg         |        42841 |      3830248 | x5.96\nMathlib.Analysis.SpecialFunctions.Trigonometric.Angle |        48324 |      3787407 | x6.01\nMathlib.Analysis.SpecialFunctions.Trigonometric.Basic |        69434 |      3739082 | x5.93\nMathlib.Analysis.SpecialFunctions.Exp                 |        18533 |      3669648 | x6.02\nMathlib.Analysis.Complex.Basic                        |        68572 |      3651114 | x5.97\nMathlib.Data.Complex.Module                           |        93459 |      3582542 | x5.69\nMathlib.FieldTheory.Tower                             |        10523 |      3489082 | x5.03\nMathlib.LinearAlgebra.FreeModule.Finite.Matrix        |        21977 |      3478558 | x5.04\nMathlib.LinearAlgebra.FreeModule.StrongRankCondition  |         8967 |      3456581 | x5.06\nMathlib.LinearAlgebra.Charpoly.Basic                  |        13435 |      3447614 | x5.07\nMathlib.FieldTheory.Minpoly.Field                     |        29779 |      3434179 | x5.09\nMathlib.RingTheory.Algebraic                          |        33303 |      3404400 | x5.12\nMathlib.RingTheory.IntegralClosure                    |        86341 |      3371097 | x5.16\nMathlib.LinearAlgebra.Matrix.Charpoly.LinearMap       |        38896 |      3284755 | x5.21\nMathlib.LinearAlgebra.Matrix.Charpoly.Coeff           |        86015 |      3245859 | x5.26\nMathlib.LinearAlgebra.Matrix.Charpoly.Basic           |        18977 |      3159844 | x5.31\nMathlib.RingTheory.PolynomialAlgebra                  |        36669 |      3140867 | x4.96\nMathlib.RingTheory.MatrixAlgebra                      |        32874 |      3104197 | x4.93\nMathlib.RingTheory.TensorProduct.Basic                |       231765 |      3071323 | x4.97\nMathlib.LinearAlgebra.FiniteDimensional               |        98334 |      2839557 | x5.22\nMathlib.LinearAlgebra.Dimension.DivisionRing          |        58359 |      2741223 | x5.37\nMathlib.LinearAlgebra.Dimension.Constructions         |        77677 |      2682863 | x5.41\nMathlib.Algebra.Module.Torsion                        |        78428 |      2605186 | x5.49\nMathlib.GroupTheory.Torsion                           |        17150 |      2526757 | x5.60\nMathlib.GroupTheory.PGroup                            |        25726 |      2509607 | x5.63\nMathlib.GroupTheory.SpecificGroups.Cyclic             |        36350 |      2483880 | x5.58\nMathlib.GroupTheory.Exponent                          |        25714 |      2447530 | x5.20\nMathlib.Data.Nat.Factorization.Basic                  |        58724 |      2421815 | x5.05\nMathlib.NumberTheory.Padics.PadicVal                  |        19232 |      2363090 | x5.14\nMathlib.RingTheory.Int.Basic                          |        15539 |      2343858 | x5.12\nMathlib.RingTheory.PrincipalIdealDomain               |        22461 |      2328319 | x5.12\nMathlib.RingTheory.UniqueFactorizationDomain          |        98812 |      2305857 | x5.16\nMathlib.RingTheory.Noetherian                         |       137540 |      2207045 | x5.33\nMathlib.RingTheory.Nilpotent                          |        17016 |      2069504 | x5.46\nMathlib.LinearAlgebra.Matrix.ToLin                    |       140479 |      2052488 | x5.47\nMathlib.Algebra.Algebra.Subalgebra.Tower              |         9555 |      1912008 | x5.62\nMathlib.Algebra.Algebra.Subalgebra.Basic              |        70030 |      1902452 | x5.63\nMathlib.RingTheory.Ideal.Operations                   |       131120 |      1832422 | x5.80\nMathlib.Algebra.Algebra.Operations                    |        93833 |      1701301 | x5.58\nMathlib.Algebra.Algebra.Bilinear                      |        19748 |      1607468 | x4.91\nMathlib.LinearAlgebra.TensorProduct.Basic             |       208012 |      1587720 | x4.44\nMathlib.Algebra.Module.Submodule.Bilinear             |        16093 |      1379707 | x4.94\n</code></pre></div>",
        "id": 431403846,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712265462
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Todotxt\"><pre><span></span><code>Mathlib.LinearAlgebra.Span                            |        62130 |      1363613 | x4.92\nMathlib.LinearAlgebra.Basic                           |        70239 |      1301483 | x4.78\nMathlib.Algebra.Module.Submodule.Ker                  |        24462 |      1231244 | x4.98\nMathlib.Algebra.Module.Submodule.Map                  |        38623 |      1206782 | x5.06\nMathlib.Algebra.Module.Submodule.Lattice              |        32251 |      1168158 | x5.18\nMathlib.Algebra.Module.Submodule.Basic                |        26364 |      1135907 | x4.99\nMathlib.GroupTheory.Submonoid.Membership              |        28924 |      1109543 | x4.19\nMathlib.Data.Finset.NoncommProd                       |        20468 |      1080618 | x4.13\nMathlib.Algebra.BigOperators.Basic                    |       110892 |      1060150 | x4.19\nMathlib.Data.Finset.Preimage                          |         6251 |       949257 | x4.28\nMathlib.Data.Set.Finite                               |        42633 |       943005 | x4.30\nMathlib.Data.Finite.Basic                             |         3172 |       900371 | x4.45\nMathlib.Data.Fintype.Sigma                            |        20913 |       897199 | x4.21\nMathlib.Data.Finset.Sigma                             |         8660 |       876285 | x4.25\nMathlib.Data.Finset.Lattice                           |        69092 |       867625 | x4.26\nMathlib.Data.Finset.Prod                              |        22835 |       798533 | x4.20\nMathlib.Data.Finset.Card                              |        18033 |       775698 | x4.29\nMathlib.Data.Finset.Image                             |        22698 |       757664 | x4.37\nMathlib.Data.Finset.Union                             |         9023 |       734966 | x4.35\nMathlib.Data.Finset.Basic                             |        70058 |       725942 | x4.30\nMathlib.Data.Multiset.FinsetOps                       |         7661 |       655884 | x4.56\nMathlib.Data.Multiset.Dedup                           |         4215 |       648222 | x4.60\nMathlib.Data.Multiset.Nodup                           |        10559 |       644006 | x4.63\nMathlib.Data.Multiset.Range                           |         2674 |       633447 | x4.69\nMathlib.Data.Multiset.Basic                           |        70972 |       630773 | x4.70\nMathlib.Data.List.Perm                                |        18030 |       559800 | x5.16\nMathlib.Data.List.Permutation                         |         8174 |       541770 | x5.27\nMathlib.Data.List.Join                                |         5488 |       533595 | x5.33\nMathlib.Algebra.BigOperators.List.Basic               |        36192 |       528106 | x5.38\nMathlib.Data.List.Rotate                              |        11077 |       491913 | x4.45\nMathlib.Data.List.Nodup                               |        11451 |       480836 | x4.51\nMathlib.Data.Set.Pairwise.Basic                       |         9235 |       469384 | x4.35\nMathlib.Data.Set.Function                             |        26218 |       460149 | x3.98\nMathlib.Data.Set.Prod                                 |        25378 |       433930 | x4.16\nMathlib.Data.Set.Image                                |        20558 |       408551 | x4.36\nMathlib.Data.Set.Basic                                |        48565 |       387993 | x4.45\nMathlib.Order.SymmDiff                                |        16934 |       339428 | x4.54\nMathlib.Order.BooleanAlgebra                          |        24198 |       322493 | x4.58\nMathlib.Order.Heyting.Basic                           |        29232 |       298295 | x4.87\nMathlib.Order.PropInstances                           |         2428 |       269063 | x5.29\nMathlib.Order.Disjoint                                |        10607 |       266634 | x5.33\nMathlib.Order.BoundedOrder                            |         7813 |       256027 | x4.37\nMathlib.Order.Lattice                                 |        16406 |       248214 | x4.42\nMathlib.Order.Monotone.Basic                          |        11153 |       231807 | x4.57\nMathlib.Order.RelClasses                              |         7947 |       220653 | x4.26\nMathlib.Order.Basic                                   |        17255 |       212706 | x4.19\nMathlib.Tactic.Convert                                |         3380 |       195450 | x3.77\nMathlib.Tactic.Congr!                                 |        15146 |       192069 | x3.81\nMathlib.Logic.Basic                                   |         9289 |       176923 | x4.01\nMathlib.Init.Function                                 |         2659 |       167634 | x3.99\nMathlib.Tactic.Basic                                  |         4041 |       164975 | x4.01\nMathlib.Tactic.TypeStar                               |         1127 |       160933 | x4.08\nStd                                                   |          770 |       159806 | x4.09\nStd.Data.UnionFind                                    |          645 |       159036 | x1.26\nStd.Data.UnionFind.Lemmas                             |         9874 |       158391 | x1.26\nStd.Data.UnionFind.Basic                              |        23305 |       148517 | x1.28\nStd.Data.Array.Lemmas                                 |        38013 |       125211 | x1.27\nStd.Data.List.Lemmas                                  |        55039 |        87198 | x1.34\nStd.Data.List.Basic                                   |        32158 |        32158 | x1.00\n</code></pre></div>",
        "id": 431403860,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712265469
    },
    {
        "content": "<p>Hmm, I'm a bit confused by this, <code>Mathlib.NumberTheory.NumberField.Discriminant</code> doesn't import <code>Mathlib.NumberTheory.NumberField. CanonicalEmbedding</code> directly in <code>860785ff08f395da41a31713466a42ad324f075c</code>, Update: I think I see - the code gets the import graph from the current branch.</p>",
        "id": 431405356,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712266147
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282271\">Bolton Bailey</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/430663399\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span>  has a PR for this <a href=\"https://github.com/leanprover-community/mathlib4/pull/8361\">#8361</a>, and there has been some additional discussion of this in <a href=\"#narrow/stream/270676-lean4/topic/Lake.20parallel.20builds/near/401563001\">this thread</a>. I got this working again and [...]</p>\n</blockquote>\n<p>I commented on the PR, if the code only depends on <code>Std</code> it could make sense to move it to the <a href=\"https://reservoir.lean-lang.org/@leanprover-community/importGraph\">repo</a> where <code>lake exe graph</code>, <code>#find_home</code>, etc. live.</p>",
        "id": 431454180,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1712298177
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/430783571\">said</a>:</p>\n<blockquote>\n<p>Also the bit around <code>Mathlib.Data.Nat.Factorization.Basic</code> importing <code>Mathlib.NumberTheory.Padics.PadicVal</code> seems like it can be optimized.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/11919\">#11919</a> lightens <code>Mathlib.NumberTheory.Padics.PadicVal</code> a bit</p>",
        "id": 431486193,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712309710
    },
    {
        "content": "<p>I experimented a bit more at <a href=\"https://github.com/leanprover-community/mathlib4/compare/wip-padic-reduce-imports\">https://github.com/leanprover-community/mathlib4/compare/wip-padic-reduce-imports</a> . Dropping the dependency on big operators might be worthwhile, but a bit more work than I'm planning to take on right now (mostly splitting out things about factorials). Feel free to pick up anything if you think it's useful.</p>\n<p>I've made <a href=\"https://github.com/leanprover-community/mathlib4/pull/11923\">#11923</a> for the Nat.ModEq change because it looks simple, but on its own it doesn't help much with PadicVal</p>",
        "id": 431508454,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712318260
    },
    {
        "content": "<p>Ok here is the hopefully less buggy pole now that that PR is merged</p>\n<div class=\"codehilite\" data-code-language=\"Todotxt\"><pre><span></span><code>Analyzing Mathlib at 9aded8e01ba2ac52c5e6864d9847cf26c6aaa015\nfile                                                           | instructions | (cumulative) | parallelism\n-------------------------------------------------------------- | ------------ | ------------ | -----------\nMathlib                                                        |         7498 |      6529833 | x17.04\nMathlib.NumberTheory.Cyclotomic.PID                            |         8587 |      6522334 | x7.76\nMathlib.NumberTheory.Cyclotomic.Rat                            |       137087 |      6513747 | x7.74\nMathlib.NumberTheory.Cyclotomic.Discriminant                   |        46695 |      6376660 | x7.87\nMathlib.NumberTheory.NumberField.Discriminant                  |       289819 |      6329964 | x7.76\nMathlib.NumberTheory.NumberField.CanonicalEmbedding.ConvexBody |       200295 |      6040144 | x8.07\nMathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls           |        67084 |      5839849 | x6.93\nMathlib.Analysis.SpecialFunctions.Gamma.BohrMollerup           |        35701 |      5772764 | x6.99\nMathlib.Analysis.SpecialFunctions.Gaussian                     |       140785 |      5737063 | x7.03\nMathlib.Analysis.Fourier.PoissonSummation                      |        38129 |      5596277 | x6.84\nMathlib.Analysis.Distribution.SchwartzSpace                    |       171595 |      5558148 | x6.56\nMathlib.Analysis.SpecialFunctions.JapaneseBracket              |        72311 |      5386552 | x6.67\nMathlib.MeasureTheory.Integral.Layercake                       |        32061 |      5314241 | x6.72\nMathlib.Analysis.SpecialFunctions.Integrals                    |       115445 |      5282179 | x6.75\nMathlib.Analysis.SpecialFunctions.NonIntegrable                |        14038 |      5166734 | x6.77\nMathlib.MeasureTheory.Integral.FundThmCalculus                 |        82623 |      5152695 | x6.40\nMathlib.MeasureTheory.Integral.DominatedConvergence            |        27155 |      5070071 | x6.22\nMathlib.MeasureTheory.Integral.IntervalIntegral                |        74826 |      5042916 | x6.25\nMathlib.MeasureTheory.Integral.SetIntegral                     |       114938 |      4968090 | x5.98\nMathlib.MeasureTheory.Integral.Bochner                         |       228199 |      4853152 | x5.87\nMathlib.MeasureTheory.Integral.SetToL1                         |       262871 |      4624952 | x6.11\nMathlib.MeasureTheory.Function.SimpleFuncDenseLp               |       102223 |      4362081 | x6.42\nMathlib.MeasureTheory.Function.L1Space                         |        90936 |      4259857 | x6.55\nMathlib.MeasureTheory.Function.LpOrder                         |        10425 |      4168921 | x6.67\nMathlib.MeasureTheory.Function.LpSpace                         |       202461 |      4158496 | x6.69\nMathlib.MeasureTheory.Function.LpSeminorm.CompareExp           |        24587 |      3956035 | x6.91\nMathlib.MeasureTheory.Integral.MeanInequalities                |        35974 |      3931447 | x6.36\nMathlib.Analysis.MeanInequalities                              |        54169 |      3895472 | x6.17\nMathlib.Analysis.SpecialFunctions.Pow.NNReal                   |        35267 |      3841303 | x5.98\nMathlib.Analysis.SpecialFunctions.Pow.Real                     |        39861 |      3806035 | x6.03\nMathlib.Analysis.SpecialFunctions.Pow.Complex                  |        18269 |      3766174 | x6.08\nMathlib.Analysis.SpecialFunctions.Complex.Log                  |        17681 |      3747905 | x6.11\nMathlib.Analysis.SpecialFunctions.Complex.Arg                  |        42822 |      3730223 | x6.12\nMathlib.Analysis.SpecialFunctions.Trigonometric.Angle          |        48465 |      3687400 | x6.17\nMathlib.Analysis.SpecialFunctions.Trigonometric.Basic          |        69788 |      3638935 | x6.09\nMathlib.Analysis.SpecialFunctions.Exp                          |        18755 |      3569147 | x6.19\nMathlib.Analysis.Complex.Basic                                 |        70413 |      3550392 | x6.14\nMathlib.Data.Complex.Module                                    |        94305 |      3479978 | x5.85\nMathlib.FieldTheory.Tower                                      |        10483 |      3385673 | x5.18\nMathlib.LinearAlgebra.FreeModule.Finite.Matrix                 |        21986 |      3375189 | x5.20\nMathlib.LinearAlgebra.FreeModule.StrongRankCondition           |         9078 |      3353203 | x5.22\nMathlib.LinearAlgebra.Charpoly.Basic                           |        13481 |      3344124 | x5.23\nMathlib.FieldTheory.Minpoly.Field                              |        30077 |      3330643 | x5.25\nMathlib.RingTheory.Algebraic                                   |        33056 |      3300565 | x5.28\nMathlib.RingTheory.IntegralClosure                             |        85731 |      3267509 | x5.32\nMathlib.LinearAlgebra.Matrix.Charpoly.LinearMap                |        38087 |      3181777 | x5.38\nMathlib.LinearAlgebra.Matrix.Charpoly.Coeff                    |        86962 |      3143689 | x5.43\nMathlib.LinearAlgebra.Matrix.Charpoly.Basic                    |        19035 |      3056726 | x5.49\nMathlib.RingTheory.PolynomialAlgebra                           |        36592 |      3037691 | x5.13\nMathlib.RingTheory.MatrixAlgebra                               |        33432 |      3001098 | x5.09\nMathlib.RingTheory.TensorProduct.Basic                         |       231997 |      2967665 | x5.14\nMathlib.LinearAlgebra.FiniteDimensional                        |        99016 |      2735668 | x5.41\nMathlib.LinearAlgebra.Dimension.DivisionRing                   |        57448 |      2636651 | x5.58\nMathlib.LinearAlgebra.Dimension.Constructions                  |        77616 |      2579203 | x5.62\nMathlib.Algebra.Module.Torsion                                 |        78504 |      2501586 | x5.71\nMathlib.GroupTheory.Torsion                                    |        17214 |      2423082 | x5.83\nMathlib.GroupTheory.PGroup                                     |        25650 |      2405867 | x5.87\nMathlib.GroupTheory.SpecificGroups.Cyclic                      |        36439 |      2380217 | x5.82\nMathlib.GroupTheory.Exponent                                   |        25685 |      2343778 | x5.43\nMathlib.Data.Nat.Factorization.Basic                           |        56279 |      2318092 | x5.27\nMathlib.RingTheory.Int.Basic                                   |        15617 |      2261812 | x5.30\nMathlib.RingTheory.PrincipalIdealDomain                        |        22467 |      2246195 | x5.30\nMathlib.RingTheory.UniqueFactorizationDomain                   |        98901 |      2223728 | x5.35\nMathlib.RingTheory.Noetherian                                  |       138260 |      2124826 | x5.53\nMathlib.RingTheory.Nilpotent                                   |        16963 |      1986565 | x5.68\nMathlib.LinearAlgebra.Matrix.ToLin                             |       137541 |      1969602 | x5.70\nMathlib.Algebra.Algebra.Subalgebra.Tower                       |         9468 |      1832060 | x5.86\nMathlib.Algebra.Algebra.Subalgebra.Basic                       |        70064 |      1822592 | x5.87\nMathlib.RingTheory.Ideal.Operations                            |       131287 |      1752527 | x6.06\nMathlib.LinearAlgebra.Basis                                    |       121153 |      1621240 | x5.62\nMathlib.LinearAlgebra.LinearIndependent                        |       100974 |      1500087 | x5.46\nMathlib.LinearAlgebra.Finsupp                                  |       114425 |      1399112 | x5.38\nMathlib.LinearAlgebra.Span                                     |        61802 |      1284686 | x5.16\n</code></pre></div>",
        "id": 431820100,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712527344
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Todotxt\"><pre><span></span><code>Mathlib.LinearAlgebra.Basic                                    |        70224 |      1222884 | x5.01\nMathlib.Algebra.Module.Submodule.Ker                           |        24234 |      1152659 | x5.24\nMathlib.Algebra.Module.Submodule.Map                           |        38621 |      1128425 | x5.34\nMathlib.Algebra.Module.Submodule.Lattice                       |        32241 |      1089803 | x5.47\nMathlib.Algebra.Module.Submodule.Basic                         |        26357 |      1057561 | x5.27\nMathlib.GroupTheory.Submonoid.Membership                       |        28986 |      1031203 | x4.39\nMathlib.Data.Finset.NoncommProd                                |        20422 |      1002216 | x4.28\nMathlib.Algebra.BigOperators.Basic                             |       103835 |       981794 | x4.35\nMathlib.Data.Finset.Preimage                                   |         6250 |       877958 | x4.56\nMathlib.Data.Set.Finite                                        |        42637 |       871707 | x4.59\nMathlib.Data.Finite.Basic                                      |         3171 |       829070 | x4.76\nMathlib.Data.Fintype.Sigma                                     |        20912 |       825899 | x4.51\nMathlib.Data.Finset.Sigma                                      |         8657 |       804986 | x4.55\nMathlib.Data.Finset.Lattice                                    |        69089 |       796329 | x4.58\nMathlib.Data.Finset.Prod                                       |        22763 |       727239 | x4.56\nMathlib.Data.Finset.Card                                       |        18015 |       704475 | x4.67\nMathlib.Data.Finset.Image                                      |        22384 |       686460 | x4.77\nMathlib.Data.Finset.Union                                      |         8709 |       664076 | x4.49\nMathlib.Data.Finset.Basic                                      |        66898 |       655366 | x4.12\nMathlib.Data.Multiset.FinsetOps                                |         7217 |       588467 | x4.37\nMathlib.Data.Multiset.Dedup                                    |         3840 |       581250 | x4.41\nMathlib.Data.Multiset.Nodup                                    |        10156 |       577409 | x4.43\nMathlib.Data.Multiset.Range                                    |         2494 |       567253 | x4.43\nMathlib.Data.Multiset.Basic                                    |        66419 |       564759 | x4.45\nMathlib.Data.List.Perm                                         |        15192 |       498339 | x4.44\nMathlib.Data.List.Dedup                                        |         3342 |       483146 | x4.48\nMathlib.Data.List.Nodup                                        |        11453 |       479804 | x4.51\nMathlib.Data.Set.Pairwise.Basic                                |         9326 |       468350 | x4.34\nMathlib.Data.Set.Function                                      |        26219 |       459024 | x3.98\nMathlib.Data.Set.Prod                                          |        25378 |       432804 | x4.16\nMathlib.Data.Set.Image                                         |        20557 |       407426 | x4.36\nMathlib.Data.Set.Basic                                         |        48565 |       386869 | x4.46\nMathlib.Order.SymmDiff                                         |        16933 |       338303 | x4.55\nMathlib.Order.BooleanAlgebra                                   |        24200 |       321370 | x4.59\nMathlib.Order.Heyting.Basic                                    |        29231 |       297170 | x4.88\nMathlib.Order.PropInstances                                    |         2428 |       267938 | x5.30\nMathlib.Order.Disjoint                                         |        10607 |       265509 | x5.34\nMathlib.Order.BoundedOrder                                     |         7813 |       254902 | x4.38\nMathlib.Order.Lattice                                          |        16407 |       247088 | x4.43\nMathlib.Order.Monotone.Basic                                   |        11154 |       230681 | x4.58\nMathlib.Order.RelClasses                                       |         7947 |       219526 | x4.27\nMathlib.Order.Basic                                            |        17257 |       211578 | x4.21\nMathlib.Tactic.Convert                                         |         3380 |       194320 | x3.79\nMathlib.Tactic.Congr!                                          |        15146 |       190940 | x3.84\nMathlib.Logic.Basic                                            |         9289 |       175793 | x4.03\nMathlib.Init.Function                                          |         2659 |       166503 | x4.02\nMathlib.Tactic.Basic                                           |         4041 |       163844 | x4.03\nStd                                                            |          770 |       159803 | x4.09\nStd.Data.UnionFind                                             |          645 |       159033 | x1.26\nStd.Data.UnionFind.Lemmas                                      |         9872 |       158387 | x1.26\nStd.Data.UnionFind.Basic                                       |        23305 |       148515 | x1.28\nStd.Data.Array.Lemmas                                          |        38014 |       125209 | x1.27\nStd.Data.List.Lemmas                                           |        55036 |        87195 | x1.34\nStd.Data.List.Basic                                            |        32158 |        32158 | x1.00\n</code></pre></div>",
        "id": 431820104,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712527352
    },
    {
        "content": "<p><code>FieldTheory.Tower</code> -&gt; <code>Data.Complex.Module</code> looks bogus to mz</p>",
        "id": 432796662,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712873959
    },
    {
        "content": "<p><code>FieldTheory.Tower</code> -&gt; <code>Data.Complex.Module</code> looks bogus to mz</p>",
        "id": 432796668,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712873962
    },
    {
        "content": "<p><code>FieldTheory.Tower</code> -&gt; <code>Data.Complex.Module</code> looks bogus to me</p>",
        "id": 432796670,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712873962
    },
    {
        "content": "<p>Oh sorry, consecutive lines don't correspond to imports</p>",
        "id": 432796806,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712874030
    },
    {
        "content": "<p><code>Data.Complex.Module</code> imports <code>FieldTheory.Tower</code>, seems like the (first?) reason is that the former has <code>instance : FiniteDimensional ℝ ℂ</code> and <code>FiniteDimensional</code> is defined in the latter.</p>",
        "id": 432800547,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1712876275
    },
    {
        "content": "<p>In <code>Data.Complex.Module</code> we can replace <code>FieldTheory.Tower</code> with <code>LinearAlgebra.FiniteDimensional</code> and still have everything work, except for <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=FiniteDimensional.complexToReal#doc\">docs#FiniteDimensional.complexToReal</a> which relies on <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=FiniteDimensional.trans#doc\">docs#FiniteDimensional.trans</a></p>",
        "id": 432842974,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712906315
    },
    {
        "content": "<p>Actually, looks like there would be no issue moving <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=FiniteDimensional.trans#doc\">docs#FiniteDimensional.trans</a> to <code>LinearAlgebra.FiniteDimensional</code>, since it's just a copy of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Module.Finite.trans#doc\">docs#Module.Finite.trans</a> which is defined much higher up the import hierarchy.</p>",
        "id": 432843349,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712906480
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12079\">#12079</a></p>",
        "id": 432846174,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712907207
    },
    {
        "content": "<p>Updated pole:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>file                                                           | instructions | parallelism\n-------------------------------------------------------------- | ------------ | -----------\nMathlib                                                        | 6296980      | x17.66\nMathlib.NumberTheory.Cyclotomic.PID                            | 6289474      | x8.03\nMathlib.NumberTheory.Cyclotomic.Rat                            | 6280882      | x8.00\nMathlib.NumberTheory.Cyclotomic.Discriminant                   | 6144735      | x8.15\nMathlib.NumberTheory.NumberField.Discriminant                  | 6096480      | x8.04\nMathlib.NumberTheory.NumberField.CanonicalEmbedding.ConvexBody | 5818365      | x8.36\nMathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls           | 5618402      | x7.18\nMathlib.Analysis.SpecialFunctions.Gamma.BohrMollerup           | 5551180      | x7.24\nMathlib.Analysis.SpecialFunctions.Gaussian                     | 5515474      | x7.28\nMathlib.Analysis.Fourier.PoissonSummation                      | 5374842      | x7.10\nMathlib.Analysis.Distribution.SchwartzSpace                    | 5336524      | x6.81\nMathlib.Analysis.SpecialFunctions.JapaneseBracket              | 5165411      | x6.93\nMathlib.MeasureTheory.Integral.Layercake                       | 5093004      | x6.99\nMathlib.Analysis.SpecialFunctions.Integrals                    | 5060935      | x7.03\nMathlib.Analysis.SpecialFunctions.NonIntegrable                | 4945455      | x7.05\nMathlib.MeasureTheory.Integral.FundThmCalculus                 | 4931397      | x6.71\nMathlib.MeasureTheory.Integral.DominatedConvergence            | 4848810      | x6.52\nMathlib.MeasureTheory.Integral.IntervalIntegral                | 4821643      | x6.55\nMathlib.MeasureTheory.Integral.SetIntegral                     | 4746730      | x6.27\nMathlib.MeasureTheory.Integral.Bochner                         | 4633296      | x6.17\nMathlib.MeasureTheory.Integral.SetToL1                         | 4405112      | x6.44\nMathlib.MeasureTheory.Function.SimpleFuncDenseLp               | 4142309      | x6.78\nMathlib.MeasureTheory.Function.L1Space                         | 4040222      | x6.93\nMathlib.MeasureTheory.Function.LpOrder                         | 3949895      | x7.07\nMathlib.MeasureTheory.Function.LpSpace                         | 3939481      | x7.08\nMathlib.MeasureTheory.Function.LpSeminorm.CompareExp           | 3737001      | x7.34\nMathlib.MeasureTheory.Function.LpSeminorm.Basic                | 3712412      | x7.27\nMathlib.MeasureTheory.Function.AEEqFun                         | 3657664      | x6.95\nMathlib.MeasureTheory.Function.StronglyMeasurable.Basic        | 3624519      | x6.96\nMathlib.Topology.Algebra.Module.FiniteDimension                | 3558210      | x6.06\nMathlib.LinearAlgebra.FreeModule.Finite.Matrix                 | 3465216      | x5.07\nMathlib.LinearAlgebra.FreeModule.StrongRankCondition           | 3443228      | x5.09\nMathlib.LinearAlgebra.Charpoly.Basic                           | 3434149      | x5.10\nMathlib.FieldTheory.Minpoly.Field                              | 3420667      | x5.12\nMathlib.RingTheory.Algebraic                                   | 3390598      | x5.15\nMathlib.RingTheory.IntegralClosure                             | 3357514      | x5.18\nMathlib.LinearAlgebra.Matrix.Charpoly.LinearMap                | 3271188      | x5.24\nMathlib.LinearAlgebra.Matrix.Charpoly.Coeff                    | 3233094      | x5.29\nMathlib.LinearAlgebra.Matrix.Charpoly.Basic                    | 3146112      | x5.34\nMathlib.RingTheory.PolynomialAlgebra                           | 3127078      | x4.99\nMathlib.RingTheory.MatrixAlgebra                               | 3090546      | x4.95\nMathlib.RingTheory.TensorProduct.Basic                         | 3057062      | x4.99\nMathlib.LinearAlgebra.FiniteDimensional                        | 2825299      | x5.25\nMathlib.LinearAlgebra.Dimension.DivisionRing                   | 2725676      | x5.40\nMathlib.LinearAlgebra.Dimension.Constructions                  | 2668226      | x5.44\nMathlib.Algebra.Module.Torsion                                 | 2590606      | x5.53\nMathlib.GroupTheory.Torsion                                    | 2512105      | x5.64\nMathlib.GroupTheory.PGroup                                     | 2494895      | x5.67\nMathlib.GroupTheory.SpecificGroups.Cyclic                      | 2469244      | x5.62\nMathlib.GroupTheory.Exponent                                   | 2432809      | x5.22\nMathlib.Data.Nat.Factorization.Basic                           | 2407125      | x5.07\nMathlib.RingTheory.Int.Basic                                   | 2350843      | x5.10\nMathlib.RingTheory.PrincipalIdealDomain                        | 2335226      | x5.10\nMathlib.RingTheory.UniqueFactorizationDomain                   | 2312759      | x5.14\nMathlib.RingTheory.Noetherian                                  | 2213855      | x5.30\nMathlib.RingTheory.Finiteness                                  | 2075469      | x5.49\nMathlib.RingTheory.Nilpotent                                   | 1986404      | x5.68\nMathlib.LinearAlgebra.Matrix.ToLin                             | 1969444      | x5.69\nMathlib.Algebra.Algebra.Subalgebra.Tower                       | 1831905      | x5.85\nMathlib.Algebra.Algebra.Subalgebra.Basic                       | 1822436      | x5.86\nMathlib.RingTheory.Ideal.Operations                            | 1752364      | x6.05\nMathlib.LinearAlgebra.Basis                                    | 1621158      | x5.61\nMathlib.LinearAlgebra.LinearIndependent                        | 1499996      | x5.45\nMathlib.LinearAlgebra.Finsupp                                  | 1399018      | x5.38\nMathlib.LinearAlgebra.Span                                     | 1284597      | x5.15\nMathlib.LinearAlgebra.Basic                                    | 1222798      | x5.02\nMathlib.Algebra.Module.Submodule.Ker                           | 1152575      | x5.26\nMathlib.Algebra.Module.Submodule.Map                           | 1128338      | x5.35\nMathlib.Algebra.Module.Submodule.Lattice                       | 1089713      | x5.48\nMathlib.Algebra.Module.Submodule.Basic                         | 1057470      | x5.29\nMathlib.GroupTheory.Submonoid.Membership                       | 1031111      | x4.40\nMathlib.Data.Finset.NoncommProd                                | 1002127      | x4.29\nMathlib.Algebra.BigOperators.Basic                             | 981701       | x4.36\nMathlib.Data.Finset.Preimage                                   | 877849       | x4.57\nMathlib.Data.Set.Finite                                        | 871596       | x4.60\nMathlib.Data.Finite.Basic                                      | 828959       | x4.77\nMathlib.Data.Fintype.Sigma                                     | 825786       | x4.53\nMathlib.Data.Finset.Sigma                                      | 804870       | x4.57\nMathlib.Data.Finset.Lattice                                    | 796211       | x4.59\nMathlib.Data.Finset.Prod                                       | 727121       | x4.58\nMathlib.Data.Finset.Card                                       | 704357       | x4.69\nMathlib.Data.Finset.Image                                      | 686340       | x4.79\nMathlib.Data.Finset.Union                                      | 663957       | x4.51\nMathlib.Data.Finset.Basic                                      | 655244       | x4.14\nMathlib.Data.Multiset.FinsetOps                                | 588337       | x4.39\nMathlib.Data.Multiset.Dedup                                    | 581116       | x4.43\nMathlib.Data.Multiset.Nodup                                    | 577272       | x4.46\nMathlib.Data.Multiset.Range                                    | 567113       | x4.45\nMathlib.Data.Multiset.Basic                                    | 564617       | x4.47\nMathlib.Data.List.Perm                                         | 498193       | x4.46\nMathlib.Data.List.Dedup                                        | 482999       | x4.51\nMathlib.Data.List.Nodup                                        | 479654       | x4.53\nMathlib.Data.Set.Pairwise.Basic                                | 468199       | x4.35\nMathlib.Data.Set.Function                                      | 458872       | x3.98\nMathlib.Data.Set.Prod                                          | 432996       | x4.16\nMathlib.Data.Set.Image                                         | 407617       | x4.36\nMathlib.Data.Set.Basic                                         | 387059       | x4.45\nMathlib.Order.SymmDiff                                         | 338474       | x4.55\nMathlib.Order.BooleanAlgebra                                   | 321537       | x4.58\nMathlib.Order.Heyting.Basic                                    | 297337       | x4.88\nMathlib.Order.PropInstances                                    | 268096       | x5.30\nMathlib.Order.Disjoint                                         | 265667       | x5.34\nMathlib.Order.BoundedOrder                                     | 255059       | x4.38\nMathlib.Order.Lattice                                          | 247245       | x4.43\nMathlib.Order.Monotone.Basic                                   | 230837       | x4.58\nMathlib.Order.RelClasses                                       | 219587       | x4.27\nMathlib.Order.Basic                                            | 211638       | x4.21\nMathlib.Tactic.Convert                                         | 194380       | x3.79\nMathlib.Tactic.Congr!                                          | 190999       | x3.83\nMathlib.Logic.Basic                                            | 175852       | x4.03\nMathlib.Init.Function                                          | 166502       | x4.02\nMathlib.Tactic.Basic                                           | 163842       | x4.03\n...\n</code></pre></div>",
        "id": 432898637,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712926745
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>...\nStd                                                            | 159801       | x4.09\nStd.Data.UnionFind                                             | 159031       | x1.26\nStd.Data.UnionFind.Lemmas                                      | 158386       | x1.26\nStd.Data.UnionFind.Basic                                       | 148518       | x1.28\nStd.Data.Array.Lemmas                                          | 125213       | x1.27\nStd.Data.List.Lemmas                                           | 87194        | x1.34\nStd.Data.List.Basic                                            | 32157        | x1.00\n</code></pre></div>",
        "id": 432898692,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712926763
    },
    {
        "content": "<p><code>Mathlib.RingTheory.IntegralClosure</code> → <code>Mathlib.LinearAlgebra.Matrix.Charpoly.LinearMap</code> looks a bit weird. Apparently needed to prove <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Module.End.isIntegral#doc\">docs#Module.End.isIntegral</a> and to state <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsIntegral.det#doc\">docs#IsIntegral.det</a>. Probably the whole file can be split apart.</p>",
        "id": 432899900,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712927095
    },
    {
        "content": "<p>Oh I see, this import was used in <a href=\"https://github.com/leanprover-community/mathlib4/commit/8dba065d4a693e23ed06348923cd5effc765cb75\"><code>8dba065d</code></a> to generalize to the noncommutative case. I guess it's fine then.</p>",
        "id": 432902667,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712928057
    },
    {
        "content": "<p>I did some splitting so we can get rid of the import <code>RingTheory.Ideal.Operations</code> → <code>LinearAlgebra.Quotient</code>: <a href=\"https://github.com/leanprover-community/mathlib4/pull/12090\">#12090</a></p>",
        "id": 432917779,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1712932564
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432796806\">said</a>:</p>\n<blockquote>\n<p>Oh sorry, consecutive lines don't correspond to imports</p>\n</blockquote>\n<p>Nevermind, I misread</p>",
        "id": 432951808,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712943916
    },
    {
        "content": "<p><code>RingTheory.Int.Basic</code> -&gt; <code>Data.Nat.Factorization.Basic</code> is suspicious</p>",
        "id": 432951839,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712943937
    },
    {
        "content": "<p><code>Topology.Algebra.Module.FiniteDimension</code> -&gt; <code>MeasureTheory.Function.StronglyMeasurable</code> also looks a bit weird</p>",
        "id": 432952772,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712944317
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432951839\">said</a>:</p>\n<blockquote>\n<p><code>RingTheory.Int.Basic</code> -&gt; <code>Data.Nat.Factorization.Basic</code> is suspicious</p>\n</blockquote>\n<p>Yeah, I'm looking into this one. <code>theorem factors_count_eq {n p : ℕ} : n.factors.count p = n.factorization p</code> goes through UFDs</p>",
        "id": 432959883,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712946213
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432959883\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432951839\">said</a>:</p>\n<blockquote>\n<p><code>RingTheory.Int.Basic</code> -&gt; <code>Data.Nat.Factorization.Basic</code> is suspicious</p>\n</blockquote>\n<p>Yeah, I'm looking into this one. <code>theorem factors_count_eq {n p : ℕ} : n.factors.count p = n.factorization p</code> goes through UFDs</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/compare/wip-factors_count_eq\">https://github.com/leanprover-community/mathlib4/compare/wip-factors_count_eq</a> , will try to PR tomorrow</p>",
        "id": 432967319,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712949262
    },
    {
        "content": "<p>I'm coming late to this discussion here; but if the aim here is to shorten the \"long pole\", then some shortening could be achieved near the very top end by splitting up <code>Analysis.SpecialFunctions.Gaussian</code>. Some of the results in that file require Poisson summation, Schwartz functions, etc; but these aren't the ones needed for the last few files in the \"long pole\", which (I think) only depend on the first half (ish) of  <code>Analysis.SpecialFunctions.Gaussian</code> (which requires slightly less imports).</p>",
        "id": 432972107,
        "sender_full_name": "David Loeffler",
        "timestamp": 1712951511
    },
    {
        "content": "<p>I don't think the aim is necessarily dogmatically attacking the long pole, but more reviewing if there's any dependencies in the list that look questionable</p>",
        "id": 432972473,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1712951674
    },
    {
        "content": "<p>Yes, I don't really care about the long pole in itself. I do however care about having a reasonably stratified library</p>",
        "id": 432974281,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712952447
    },
    {
        "content": "<p>The longest pole is the limiting factor (assuming sufficient compute) for things like:</p>\n<ul>\n<li>Time taken to wait for a benchmark</li>\n<li>Time taken to get a build to test a lean nightly</li>\n</ul>\n<p>so it is a reasonable think to optimize for in itself</p>",
        "id": 432994390,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712962966
    },
    {
        "content": "<p>Eric, that assumes that files compile in equal time, which is definitely not the case.</p>",
        "id": 432997668,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1712965523
    },
    {
        "content": "<p>Oh, I assumed we were measuring pole length in instructions, not number of files (edit: from the columns in the table above, I think that is what we're doing?)</p>",
        "id": 432997947,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712965780
    },
    {
        "content": "<p>(unless your point is that instructions are not a great proxy for wall time)</p>",
        "id": 432998047,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712965844
    },
    {
        "content": "<p>Oh, maybe I misunderstood. I thought it was the longest chain of files, but we measured the instructions in the chain. I think you're right though.</p>",
        "id": 433004183,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1712971324
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432994390\">said</a>:</p>\n<blockquote>\n<p>The longest pole is the limiting factor (assuming sufficient compute) for things like:</p>\n<ul>\n<li>Time taken to wait for a benchmark</li>\n<li>Time taken to get a build to test a lean nightly</li>\n</ul>\n<p>so it is a reasonable think to optimize for in itself</p>\n</blockquote>\n<p>On these grounds I have made a PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/12104\">#12104</a> which should shorten the long pole somewhat, by removing <code>Mathlib.Analysis.Fourier.PoissonSummation</code>, <code>Mathlib.Analysis.Distribution.SchwartzSpace</code>, and a large fraction of  what was formerly in <code>Mathlib.Analysis.SpecialFunctions.Gaussian</code> from the critical path.</p>",
        "id": 433025442,
        "sender_full_name": "David Loeffler",
        "timestamp": 1712994383
    },
    {
        "content": "<p>(I don't know how to benchmark the effect of this change – is the script that generates these long-pole lists public?)</p>",
        "id": 433025577,
        "sender_full_name": "David Loeffler",
        "timestamp": 1712994520
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432967319\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432959883\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432951839\">said</a>:</p>\n<blockquote>\n<p><code>RingTheory.Int.Basic</code> -&gt; <code>Data.Nat.Factorization.Basic</code> is suspicious</p>\n</blockquote>\n<p>Yeah, I'm looking into this one. <code>theorem factors_count_eq {n p : ℕ} : n.factors.count p = n.factorization p</code> goes through UFDs</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/compare/wip-factors_count_eq\">https://github.com/leanprover-community/mathlib4/compare/wip-factors_count_eq</a> , will try to PR tomorrow</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12105\">#12105</a> if someone wants to review</p>",
        "id": 433035390,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713003064
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481963\">David Loeffler</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/433025577\">said</a>:</p>\n<blockquote>\n<p>(I don't know how to benchmark the effect of this change – is the script that generates these long-pole lists public?)</p>\n</blockquote>\n<p>Currently it resides in PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/8361\">#8361</a>. The quickest process I know to be able to run the script on a pr is:</p>\n<ol>\n<li>Merge this PR into the one you want to measure.</li>\n<li>Run <code>!bench</code> in GitHub so <a href=\"http://speed.lean-fro.org\">speed.lean-fro.org</a> benchmarks it.</li>\n<li>Once that is done, run the script while in the commit that was benchmarked.</li>\n</ol>",
        "id": 433059327,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1713025372
    },
    {
        "content": "<p>If you can wait until after your pr is merged, you can also just merge master into the <code>longest_pole</code> branch then do <code>!bench</code> on that.</p>",
        "id": 433059817,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1713025803
    },
    {
        "content": "<p>Or, perhaps even more simply, someone could just merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/8361\">#8361</a> to master and then it would be possible to get the pole in any PR by default without any additional merging.</p>",
        "id": 433060047,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1713025976
    },
    {
        "content": "<p>My memory is that this is counting instructions, retrieved from the speed center, but I haven't looked at the code recently!</p>",
        "id": 433073815,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713038027
    },
    {
        "content": "<p>It's intended to be a proxy for build time assuming infinite parallelism.</p>",
        "id": 433073880,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713038064
    },
    {
        "content": "<p>Hopefully as we shorten the pole it re-routes through different parts of the library (i.e. helping us avoid over optimizing on some areas).</p>",
        "id": 433074013,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713038173
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/433073815\">said</a>:</p>\n<blockquote>\n<p>My memory is that this is counting instructions, retrieved from the speed center, but I haven't looked at the code recently!</p>\n</blockquote>\n<p>Yes this is right, it gets the instruction counts from speed center and it gets the import graph from <code>ImportGraph</code>. You can ask speedcenter to give you a graph for a different commit, but unfortunately I don't know enough about <code>ImportGraph</code> to know if it can give me an import graph for a different commit.</p>",
        "id": 433082123,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1713046046
    },
    {
        "content": "<p>As far as I know, <code>ImportGraph</code> gets the project structure from the built oleans, so I think the answer is \"no\", unless you check out and download cache for that commit manually.</p>",
        "id": 433146583,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1713111784
    },
    {
        "content": "<p>If <code>ImportGraph</code> is only looking at file-to-file imports, it should be easy to get that from the .lean files instead of .olean's, would that be useful?</p>",
        "id": 433149347,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713114148
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/432917779\">said</a>:</p>\n<blockquote>\n<p>I did some splitting so we can get rid of the import <code>RingTheory.Ideal.Operations</code> → <code>LinearAlgebra.Quotient</code>: <a href=\"https://github.com/leanprover-community/mathlib4/pull/12090\">#12090</a></p>\n</blockquote>\n<p>I was going to do this next but I got ill, so please enjoy this delayed deletion of the import <code>Algebra.Algebra.Subalgebra.Basic → RingTheory.Ideal.Operations</code>: <a href=\"https://github.com/leanprover-community/mathlib4/pull/12267\">#12267</a></p>",
        "id": 434356714,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1713531294
    },
    {
        "content": "<p>Hope you're feeling better! You may be interested in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12184\">#12184</a> as well (which <a href=\"https://github.com/leanprover-community/mathlib4/pull/12090\">#12090</a> will bitrot slightly)</p>",
        "id": 434359673,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713532249
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Analyzing</span> <span class=\"n\">Mathlib</span> <span class=\"n\">at</span> <span class=\"mi\">02</span><span class=\"n\">bb10d877e8044bcc5e429b43db03a7868fff29</span>\n<span class=\"n\">file</span>                                                           <span class=\"bp\">|</span> <span class=\"n\">instructions</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">cumulative</span><span class=\"o\">)</span> <span class=\"bp\">|</span> <span class=\"n\">parallelism</span>\n<span class=\"c1\">-------------------------------------------------------------- | ------------ | ------------ | -----------</span>\n<span class=\"n\">Mathlib</span>                                                        <span class=\"bp\">|</span>         <span class=\"mi\">7557</span> <span class=\"bp\">|</span>      <span class=\"mi\">6075834</span> <span class=\"bp\">|</span> <span class=\"n\">x18.54</span>\n<span class=\"n\">Mathlib.NumberTheory.Cyclotomic.PID</span>                            <span class=\"bp\">|</span>         <span class=\"mi\">8571</span> <span class=\"bp\">|</span>      <span class=\"mi\">6068277</span> <span class=\"bp\">|</span> <span class=\"n\">x8.12</span>\n<span class=\"n\">Mathlib.NumberTheory.Cyclotomic.Rat</span>                            <span class=\"bp\">|</span>       <span class=\"mi\">133971</span> <span class=\"bp\">|</span>      <span class=\"mi\">6059706</span> <span class=\"bp\">|</span> <span class=\"n\">x8.10</span>\n<span class=\"n\">Mathlib.NumberTheory.Cyclotomic.Discriminant</span>                   <span class=\"bp\">|</span>        <span class=\"mi\">48246</span> <span class=\"bp\">|</span>      <span class=\"mi\">5925734</span> <span class=\"bp\">|</span> <span class=\"n\">x8.25</span>\n<span class=\"n\">Mathlib.NumberTheory.NumberField.Discriminant</span>                  <span class=\"bp\">|</span>       <span class=\"mi\">276543</span> <span class=\"bp\">|</span>      <span class=\"mi\">5877488</span> <span class=\"bp\">|</span> <span class=\"n\">x8.13</span>\n<span class=\"n\">Mathlib.NumberTheory.NumberField.CanonicalEmbedding.ConvexBody</span> <span class=\"bp\">|</span>       <span class=\"mi\">199477</span> <span class=\"bp\">|</span>      <span class=\"mi\">5600944</span> <span class=\"bp\">|</span> <span class=\"n\">x8.47</span>\n<span class=\"n\">Mathlib.NumberTheory.NumberField.CanonicalEmbedding.Basic</span>      <span class=\"bp\">|</span>       <span class=\"mi\">218422</span> <span class=\"bp\">|</span>      <span class=\"mi\">5401467</span> <span class=\"bp\">|</span> <span class=\"n\">x8.33</span>\n<span class=\"n\">Mathlib.NumberTheory.NumberField.Embeddings</span>                    <span class=\"bp\">|</span>       <span class=\"mi\">108135</span> <span class=\"bp\">|</span>      <span class=\"mi\">5183044</span> <span class=\"bp\">|</span> <span class=\"n\">x7.72</span>\n<span class=\"n\">Mathlib.Analysis.Complex.Polynomial</span>                            <span class=\"bp\">|</span>        <span class=\"mi\">26471</span> <span class=\"bp\">|</span>      <span class=\"mi\">5074908</span> <span class=\"bp\">|</span> <span class=\"n\">x7.56</span>\n<span class=\"n\">Mathlib.Analysis.Complex.Liouville</span>                             <span class=\"bp\">|</span>        <span class=\"mi\">16349</span> <span class=\"bp\">|</span>      <span class=\"mi\">5048437</span> <span class=\"bp\">|</span> <span class=\"n\">x7.26</span>\n<span class=\"n\">Mathlib.Analysis.Complex.CauchyIntegral</span>                        <span class=\"bp\">|</span>        <span class=\"mi\">46224</span> <span class=\"bp\">|</span>      <span class=\"mi\">5032088</span> <span class=\"bp\">|</span> <span class=\"n\">x7.28</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.CircleIntegral</span>                  <span class=\"bp\">|</span>        <span class=\"mi\">67000</span> <span class=\"bp\">|</span>      <span class=\"mi\">4985863</span> <span class=\"bp\">|</span> <span class=\"n\">x7.13</span>\n<span class=\"n\">Mathlib.Analysis.SpecialFunctions.NonIntegrable</span>                <span class=\"bp\">|</span>        <span class=\"mi\">14098</span> <span class=\"bp\">|</span>      <span class=\"mi\">4918862</span> <span class=\"bp\">|</span> <span class=\"n\">x7.15</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.FundThmCalculus</span>                 <span class=\"bp\">|</span>        <span class=\"mi\">85436</span> <span class=\"bp\">|</span>      <span class=\"mi\">4904764</span> <span class=\"bp\">|</span> <span class=\"n\">x6.80</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.DominatedConvergence</span>            <span class=\"bp\">|</span>        <span class=\"mi\">27318</span> <span class=\"bp\">|</span>      <span class=\"mi\">4819328</span> <span class=\"bp\">|</span> <span class=\"n\">x6.62</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.IntervalIntegral</span>                <span class=\"bp\">|</span>        <span class=\"mi\">74961</span> <span class=\"bp\">|</span>      <span class=\"mi\">4792010</span> <span class=\"bp\">|</span> <span class=\"n\">x6.65</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.SetIntegral</span>                     <span class=\"bp\">|</span>       <span class=\"mi\">114757</span> <span class=\"bp\">|</span>      <span class=\"mi\">4717048</span> <span class=\"bp\">|</span> <span class=\"n\">x6.37</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.Bochner</span>                         <span class=\"bp\">|</span>       <span class=\"mi\">228811</span> <span class=\"bp\">|</span>      <span class=\"mi\">4602290</span> <span class=\"bp\">|</span> <span class=\"n\">x6.26</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.SetToL1</span>                         <span class=\"bp\">|</span>       <span class=\"mi\">262883</span> <span class=\"bp\">|</span>      <span class=\"mi\">4373479</span> <span class=\"bp\">|</span> <span class=\"n\">x6.54</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.SimpleFuncDenseLp</span>               <span class=\"bp\">|</span>       <span class=\"mi\">102235</span> <span class=\"bp\">|</span>      <span class=\"mi\">4110595</span> <span class=\"bp\">|</span> <span class=\"n\">x6.89</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.L1Space</span>                         <span class=\"bp\">|</span>        <span class=\"mi\">91289</span> <span class=\"bp\">|</span>      <span class=\"mi\">4008359</span> <span class=\"bp\">|</span> <span class=\"n\">x7.04</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.LpOrder</span>                         <span class=\"bp\">|</span>        <span class=\"mi\">10455</span> <span class=\"bp\">|</span>      <span class=\"mi\">3917070</span> <span class=\"bp\">|</span> <span class=\"n\">x7.18</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.LpSpace</span>                         <span class=\"bp\">|</span>       <span class=\"mi\">202478</span> <span class=\"bp\">|</span>      <span class=\"mi\">3906615</span> <span class=\"bp\">|</span> <span class=\"n\">x7.20</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.LpSeminorm.CompareExp</span>           <span class=\"bp\">|</span>        <span class=\"mi\">24632</span> <span class=\"bp\">|</span>      <span class=\"mi\">3704137</span> <span class=\"bp\">|</span> <span class=\"n\">x7.46</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.LpSeminorm.Basic</span>                <span class=\"bp\">|</span>        <span class=\"mi\">54788</span> <span class=\"bp\">|</span>      <span class=\"mi\">3679504</span> <span class=\"bp\">|</span> <span class=\"n\">x7.40</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.AEEqFun</span>                         <span class=\"bp\">|</span>        <span class=\"mi\">33177</span> <span class=\"bp\">|</span>      <span class=\"mi\">3624716</span> <span class=\"bp\">|</span> <span class=\"n\">x7.08</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.StronglyMeasurable.Basic</span>        <span class=\"bp\">|</span>        <span class=\"mi\">66353</span> <span class=\"bp\">|</span>      <span class=\"mi\">3591538</span> <span class=\"bp\">|</span> <span class=\"n\">x7.09</span>\n<span class=\"n\">Mathlib.Topology.Algebra.Module.FiniteDimension</span>                <span class=\"bp\">|</span>        <span class=\"mi\">93030</span> <span class=\"bp\">|</span>      <span class=\"mi\">3525185</span> <span class=\"bp\">|</span> <span class=\"n\">x6.17</span>\n<span class=\"n\">Mathlib.LinearAlgebra.FreeModule.Finite.Matrix</span>                 <span class=\"bp\">|</span>        <span class=\"mi\">21912</span> <span class=\"bp\">|</span>      <span class=\"mi\">3432155</span> <span class=\"bp\">|</span> <span class=\"n\">x5.17</span>\n<span class=\"n\">Mathlib.LinearAlgebra.FreeModule.StrongRankCondition</span>           <span class=\"bp\">|</span>         <span class=\"mi\">9129</span> <span class=\"bp\">|</span>      <span class=\"mi\">3410242</span> <span class=\"bp\">|</span> <span class=\"n\">x5.19</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Charpoly.Basic</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">13678</span> <span class=\"bp\">|</span>      <span class=\"mi\">3401113</span> <span class=\"bp\">|</span> <span class=\"n\">x5.20</span>\n<span class=\"n\">Mathlib.FieldTheory.Minpoly.Field</span>                              <span class=\"bp\">|</span>        <span class=\"mi\">30154</span> <span class=\"bp\">|</span>      <span class=\"mi\">3387434</span> <span class=\"bp\">|</span> <span class=\"n\">x5.22</span>\n<span class=\"n\">Mathlib.RingTheory.Algebraic</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">33527</span> <span class=\"bp\">|</span>      <span class=\"mi\">3357279</span> <span class=\"bp\">|</span> <span class=\"n\">x5.25</span>\n<span class=\"n\">Mathlib.RingTheory.IntegralClosure</span>                             <span class=\"bp\">|</span>        <span class=\"mi\">87882</span> <span class=\"bp\">|</span>      <span class=\"mi\">3323752</span> <span class=\"bp\">|</span> <span class=\"n\">x5.29</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Matrix.Charpoly.LinearMap</span>                <span class=\"bp\">|</span>        <span class=\"mi\">38388</span> <span class=\"bp\">|</span>      <span class=\"mi\">3235869</span> <span class=\"bp\">|</span> <span class=\"n\">x5.35</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Matrix.Charpoly.Coeff</span>                    <span class=\"bp\">|</span>        <span class=\"mi\">87282</span> <span class=\"bp\">|</span>      <span class=\"mi\">3197481</span> <span class=\"bp\">|</span> <span class=\"n\">x5.40</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Matrix.Charpoly.Basic</span>                    <span class=\"bp\">|</span>        <span class=\"mi\">19108</span> <span class=\"bp\">|</span>      <span class=\"mi\">3110199</span> <span class=\"bp\">|</span> <span class=\"n\">x5.45</span>\n<span class=\"n\">Mathlib.RingTheory.PolynomialAlgebra</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">36681</span> <span class=\"bp\">|</span>      <span class=\"mi\">3091090</span> <span class=\"bp\">|</span> <span class=\"n\">x5.10</span>\n<span class=\"n\">Mathlib.RingTheory.MatrixAlgebra</span>                               <span class=\"bp\">|</span>        <span class=\"mi\">33650</span> <span class=\"bp\">|</span>      <span class=\"mi\">3054409</span> <span class=\"bp\">|</span> <span class=\"n\">x5.06</span>\n<span class=\"n\">Mathlib.RingTheory.TensorProduct.Basic</span>                         <span class=\"bp\">|</span>       <span class=\"mi\">279177</span> <span class=\"bp\">|</span>      <span class=\"mi\">3020758</span> <span class=\"bp\">|</span> <span class=\"n\">x5.11</span>\n<span class=\"n\">Mathlib.LinearAlgebra.FiniteDimensional</span>                        <span class=\"bp\">|</span>       <span class=\"mi\">101642</span> <span class=\"bp\">|</span>      <span class=\"mi\">2741581</span> <span class=\"bp\">|</span> <span class=\"n\">x5.45</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Dimension.DivisionRing</span>                   <span class=\"bp\">|</span>        <span class=\"mi\">47963</span> <span class=\"bp\">|</span>      <span class=\"mi\">2639938</span> <span class=\"bp\">|</span> <span class=\"n\">x5.62</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Dimension.RankNullity</span>                    <span class=\"bp\">|</span>        <span class=\"mi\">27173</span> <span class=\"bp\">|</span>      <span class=\"mi\">2591974</span> <span class=\"bp\">|</span> <span class=\"n\">x5.67</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Dimension.Constructions</span>                  <span class=\"bp\">|</span>        <span class=\"mi\">89051</span> <span class=\"bp\">|</span>      <span class=\"mi\">2564801</span> <span class=\"bp\">|</span> <span class=\"n\">x5.69</span>\n<span class=\"n\">Mathlib.Algebra.Module.Torsion</span>                                 <span class=\"bp\">|</span>        <span class=\"mi\">79516</span> <span class=\"bp\">|</span>      <span class=\"mi\">2475749</span> <span class=\"bp\">|</span> <span class=\"n\">x5.80</span>\n<span class=\"n\">Mathlib.GroupTheory.Torsion</span>                                    <span class=\"bp\">|</span>        <span class=\"mi\">17471</span> <span class=\"bp\">|</span>      <span class=\"mi\">2396233</span> <span class=\"bp\">|</span> <span class=\"n\">x5.93</span>\n<span class=\"n\">Mathlib.GroupTheory.PGroup</span>                                     <span class=\"bp\">|</span>        <span class=\"mi\">25768</span> <span class=\"bp\">|</span>      <span class=\"mi\">2378762</span> <span class=\"bp\">|</span> <span class=\"n\">x5.97</span>\n<span class=\"n\">Mathlib.GroupTheory.SpecificGroups.Cyclic</span>                      <span class=\"bp\">|</span>        <span class=\"mi\">36693</span> <span class=\"bp\">|</span>      <span class=\"mi\">2352993</span> <span class=\"bp\">|</span> <span class=\"n\">x5.92</span>\n<span class=\"n\">Mathlib.GroupTheory.Exponent</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">25889</span> <span class=\"bp\">|</span>      <span class=\"mi\">2316299</span> <span class=\"bp\">|</span> <span class=\"n\">x5.50</span>\n<span class=\"n\">Mathlib.Data.Nat.Factorization.Basic</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">56391</span> <span class=\"bp\">|</span>      <span class=\"mi\">2290409</span> <span class=\"bp\">|</span> <span class=\"n\">x5.34</span>\n<span class=\"n\">Mathlib.RingTheory.Int.Basic</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">15653</span> <span class=\"bp\">|</span>      <span class=\"mi\">2234017</span> <span class=\"bp\">|</span> <span class=\"n\">x5.38</span>\n<span class=\"n\">Mathlib.RingTheory.PrincipalIdealDomain</span>                        <span class=\"bp\">|</span>        <span class=\"mi\">22817</span> <span class=\"bp\">|</span>      <span class=\"mi\">2218364</span> <span class=\"bp\">|</span> <span class=\"n\">x5.38</span>\n<span class=\"n\">Mathlib.RingTheory.UniqueFactorizationDomain</span>                   <span class=\"bp\">|</span>        <span class=\"mi\">97989</span> <span class=\"bp\">|</span>      <span class=\"mi\">2195546</span> <span class=\"bp\">|</span> <span class=\"n\">x5.42</span>\n<span class=\"n\">Mathlib.RingTheory.Noetherian</span>                                  <span class=\"bp\">|</span>       <span class=\"mi\">137500</span> <span class=\"bp\">|</span>      <span class=\"mi\">2097557</span> <span class=\"bp\">|</span> <span class=\"n\">x5.60</span>\n<span class=\"n\">Mathlib.RingTheory.Finiteness</span>                                  <span class=\"bp\">|</span>        <span class=\"mi\">89730</span> <span class=\"bp\">|</span>      <span class=\"mi\">1960057</span> <span class=\"bp\">|</span> <span class=\"n\">x5.82</span>\n<span class=\"n\">Mathlib.RingTheory.Nilpotent</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">17076</span> <span class=\"bp\">|</span>      <span class=\"mi\">1870326</span> <span class=\"bp\">|</span> <span class=\"n\">x6.04</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Matrix.ToLin</span>                             <span class=\"bp\">|</span>       <span class=\"mi\">142896</span> <span class=\"bp\">|</span>      <span class=\"mi\">1853249</span> <span class=\"bp\">|</span> <span class=\"n\">x5.85</span>\n<span class=\"n\">Mathlib.Algebra.Algebra.Subalgebra.Tower</span>                       <span class=\"bp\">|</span>         <span class=\"mi\">9393</span> <span class=\"bp\">|</span>      <span class=\"mi\">1710353</span> <span class=\"bp\">|</span> <span class=\"n\">x5.60</span>\n<span class=\"n\">Mathlib.Algebra.Algebra.Subalgebra.Basic</span>                       <span class=\"bp\">|</span>        <span class=\"mi\">50649</span> <span class=\"bp\">|</span>      <span class=\"mi\">1700959</span> <span class=\"bp\">|</span> <span class=\"n\">x5.62</span>\n<span class=\"n\">Mathlib.Algebra.Algebra.Operations</span>                             <span class=\"bp\">|</span>        <span class=\"mi\">92569</span> <span class=\"bp\">|</span>      <span class=\"mi\">1650310</span> <span class=\"bp\">|</span> <span class=\"n\">x5.76</span>\n<span class=\"n\">Mathlib.Algebra.Algebra.Bilinear</span>                               <span class=\"bp\">|</span>        <span class=\"mi\">20234</span> <span class=\"bp\">|</span>      <span class=\"mi\">1557740</span> <span class=\"bp\">|</span> <span class=\"n\">x5.06</span>\n<span class=\"n\">Mathlib.LinearAlgebra.TensorProduct.Basic</span>                      <span class=\"bp\">|</span>       <span class=\"mi\">214317</span> <span class=\"bp\">|</span>      <span class=\"mi\">1537506</span> <span class=\"bp\">|</span> <span class=\"n\">x4.52</span>\n<span class=\"n\">Mathlib.Algebra.Module.Submodule.Bilinear</span>                      <span class=\"bp\">|</span>        <span class=\"mi\">13848</span> <span class=\"bp\">|</span>      <span class=\"mi\">1323188</span> <span class=\"bp\">|</span> <span class=\"n\">x5.07</span>\n</code></pre></div>",
        "id": 435801371,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1714264931
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Mathlib.LinearAlgebra.Span</span>                                     <span class=\"bp\">|</span>        <span class=\"mi\">62342</span> <span class=\"bp\">|</span>      <span class=\"mi\">1309340</span> <span class=\"bp\">|</span> <span class=\"n\">x5.04</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Basic</span>                                    <span class=\"bp\">|</span>        <span class=\"mi\">70639</span> <span class=\"bp\">|</span>      <span class=\"mi\">1246998</span> <span class=\"bp\">|</span> <span class=\"n\">x4.91</span>\n<span class=\"n\">Mathlib.Algebra.Module.Submodule.Ker</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">24499</span> <span class=\"bp\">|</span>      <span class=\"mi\">1176358</span> <span class=\"bp\">|</span> <span class=\"n\">x5.13</span>\n<span class=\"n\">Mathlib.Algebra.Module.Submodule.Map</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">38777</span> <span class=\"bp\">|</span>      <span class=\"mi\">1151859</span> <span class=\"bp\">|</span> <span class=\"n\">x5.22</span>\n<span class=\"n\">Mathlib.Algebra.Module.Submodule.Lattice</span>                       <span class=\"bp\">|</span>        <span class=\"mi\">32691</span> <span class=\"bp\">|</span>      <span class=\"mi\">1113081</span> <span class=\"bp\">|</span> <span class=\"n\">x5.35</span>\n<span class=\"n\">Mathlib.Algebra.Module.Equiv</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">50562</span> <span class=\"bp\">|</span>      <span class=\"mi\">1080390</span> <span class=\"bp\">|</span> <span class=\"n\">x3.93</span>\n<span class=\"n\">Mathlib.Algebra.Module.LinearMap.End</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">37265</span> <span class=\"bp\">|</span>      <span class=\"mi\">1029827</span> <span class=\"bp\">|</span> <span class=\"n\">x4.07</span>\n<span class=\"n\">Mathlib.Algebra.Module.LinearMap.Basic</span>                         <span class=\"bp\">|</span>       <span class=\"mi\">110905</span> <span class=\"bp\">|</span>       <span class=\"mi\">992562</span> <span class=\"bp\">|</span> <span class=\"n\">x4.19</span>\n<span class=\"n\">Mathlib.GroupTheory.GroupAction.Hom</span>                            <span class=\"bp\">|</span>        <span class=\"mi\">55618</span> <span class=\"bp\">|</span>       <span class=\"mi\">881656</span> <span class=\"bp\">|</span> <span class=\"n\">x4.52</span>\n<span class=\"n\">Mathlib.Algebra.Module.Basic</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">48234</span> <span class=\"bp\">|</span>       <span class=\"mi\">826038</span> <span class=\"bp\">|</span> <span class=\"n\">x4.72</span>\n<span class=\"n\">Mathlib.Tactic.Abel</span>                                            <span class=\"bp\">|</span>        <span class=\"mi\">25440</span> <span class=\"bp\">|</span>       <span class=\"mi\">777803</span> <span class=\"bp\">|</span> <span class=\"n\">x4.79</span>\n<span class=\"n\">Mathlib.Tactic.NormNum</span>                                         <span class=\"bp\">|</span>         <span class=\"mi\">1924</span> <span class=\"bp\">|</span>       <span class=\"mi\">752362</span> <span class=\"bp\">|</span> <span class=\"n\">x4.91</span>\n<span class=\"n\">Mathlib.Tactic.NormNum.DivMod</span>                                  <span class=\"bp\">|</span>        <span class=\"mi\">11035</span> <span class=\"bp\">|</span>       <span class=\"mi\">750437</span> <span class=\"bp\">|</span> <span class=\"n\">x4.86</span>\n<span class=\"n\">Mathlib.Tactic.NormNum.Ineq</span>                                    <span class=\"bp\">|</span>        <span class=\"mi\">26623</span> <span class=\"bp\">|</span>       <span class=\"mi\">739402</span> <span class=\"bp\">|</span> <span class=\"n\">x4.92</span>\n<span class=\"n\">Mathlib.Tactic.NormNum.Eq</span>                                      <span class=\"bp\">|</span>         <span class=\"mi\">7355</span> <span class=\"bp\">|</span>       <span class=\"mi\">712778</span> <span class=\"bp\">|</span> <span class=\"n\">x5.04</span>\n<span class=\"n\">Mathlib.Tactic.NormNum.Inv</span>                                     <span class=\"bp\">|</span>        <span class=\"mi\">16749</span> <span class=\"bp\">|</span>       <span class=\"mi\">705423</span> <span class=\"bp\">|</span> <span class=\"n\">x5.08</span>\n<span class=\"n\">Mathlib.Data.Rat.Cast.CharZero</span>                                 <span class=\"bp\">|</span>         <span class=\"mi\">4956</span> <span class=\"bp\">|</span>       <span class=\"mi\">688673</span> <span class=\"bp\">|</span> <span class=\"n\">x5.07</span>\n<span class=\"n\">Mathlib.Data.Rat.Cast.Defs</span>                                     <span class=\"bp\">|</span>        <span class=\"mi\">10168</span> <span class=\"bp\">|</span>       <span class=\"mi\">683717</span> <span class=\"bp\">|</span> <span class=\"n\">x5.00</span>\n<span class=\"n\">Mathlib.Data.Rat.Field</span>                                         <span class=\"bp\">|</span>         <span class=\"mi\">2953</span> <span class=\"bp\">|</span>       <span class=\"mi\">673548</span> <span class=\"bp\">|</span> <span class=\"n\">x4.99</span>\n<span class=\"n\">Mathlib.Algebra.Order.Nonneg.Field</span>                             <span class=\"bp\">|</span>        <span class=\"mi\">16181</span> <span class=\"bp\">|</span>       <span class=\"mi\">670594</span> <span class=\"bp\">|</span> <span class=\"n\">x4.77</span>\n<span class=\"n\">Mathlib.Algebra.Order.Nonneg.Ring</span>                              <span class=\"bp\">|</span>        <span class=\"mi\">33701</span> <span class=\"bp\">|</span>       <span class=\"mi\">654413</span> <span class=\"bp\">|</span> <span class=\"n\">x4.72</span>\n<span class=\"n\">Mathlib.Order.CompleteLatticeIntervals</span>                         <span class=\"bp\">|</span>        <span class=\"mi\">12349</span> <span class=\"bp\">|</span>       <span class=\"mi\">620711</span> <span class=\"bp\">|</span> <span class=\"n\">x3.92</span>\n<span class=\"n\">Mathlib.Order.ConditionallyCompleteLattice.Basic</span>               <span class=\"bp\">|</span>        <span class=\"mi\">30199</span> <span class=\"bp\">|</span>       <span class=\"mi\">608362</span> <span class=\"bp\">|</span> <span class=\"n\">x3.89</span>\n<span class=\"n\">Mathlib.Data.Set.Lattice</span>                                       <span class=\"bp\">|</span>        <span class=\"mi\">43130</span> <span class=\"bp\">|</span>       <span class=\"mi\">578162</span> <span class=\"bp\">|</span> <span class=\"n\">x4.03</span>\n<span class=\"n\">Mathlib.Order.CompleteBooleanAlgebra</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">26474</span> <span class=\"bp\">|</span>       <span class=\"mi\">535032</span> <span class=\"bp\">|</span> <span class=\"n\">x3.89</span>\n<span class=\"n\">Mathlib.Order.CompleteLattice</span>                                  <span class=\"bp\">|</span>        <span class=\"mi\">34588</span> <span class=\"bp\">|</span>       <span class=\"mi\">508558</span> <span class=\"bp\">|</span> <span class=\"n\">x4.04</span>\n<span class=\"n\">Mathlib.Order.Hom.Set</span>                                          <span class=\"bp\">|</span>         <span class=\"mi\">3291</span> <span class=\"bp\">|</span>       <span class=\"mi\">473969</span> <span class=\"bp\">|</span> <span class=\"n\">x4.04</span>\n<span class=\"n\">Mathlib.Logic.Equiv.Set</span>                                        <span class=\"bp\">|</span>        <span class=\"mi\">14805</span> <span class=\"bp\">|</span>       <span class=\"mi\">470677</span> <span class=\"bp\">|</span> <span class=\"n\">x3.93</span>\n<span class=\"n\">Mathlib.Data.Set.Function</span>                                      <span class=\"bp\">|</span>        <span class=\"mi\">25877</span> <span class=\"bp\">|</span>       <span class=\"mi\">455872</span> <span class=\"bp\">|</span> <span class=\"n\">x4.02</span>\n<span class=\"n\">Mathlib.Data.Set.Prod</span>                                          <span class=\"bp\">|</span>        <span class=\"mi\">25370</span> <span class=\"bp\">|</span>       <span class=\"mi\">429995</span> <span class=\"bp\">|</span> <span class=\"n\">x4.20</span>\n<span class=\"n\">Mathlib.Data.Set.Image</span>                                         <span class=\"bp\">|</span>        <span class=\"mi\">20536</span> <span class=\"bp\">|</span>       <span class=\"mi\">404624</span> <span class=\"bp\">|</span> <span class=\"n\">x4.40</span>\n<span class=\"n\">Mathlib.Data.Set.Subsingleton</span>                                  <span class=\"bp\">|</span>         <span class=\"mi\">4475</span> <span class=\"bp\">|</span>       <span class=\"mi\">384087</span> <span class=\"bp\">|</span> <span class=\"n\">x4.50</span>\n<span class=\"n\">Mathlib.Data.Set.Basic</span>                                         <span class=\"bp\">|</span>        <span class=\"mi\">44493</span> <span class=\"bp\">|</span>       <span class=\"mi\">379612</span> <span class=\"bp\">|</span> <span class=\"n\">x4.54</span>\n<span class=\"n\">Mathlib.Order.SymmDiff</span>                                         <span class=\"bp\">|</span>        <span class=\"mi\">16941</span> <span class=\"bp\">|</span>       <span class=\"mi\">335118</span> <span class=\"bp\">|</span> <span class=\"n\">x4.61</span>\n<span class=\"n\">Mathlib.Order.BooleanAlgebra</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">24199</span> <span class=\"bp\">|</span>       <span class=\"mi\">318177</span> <span class=\"bp\">|</span> <span class=\"n\">x4.65</span>\n<span class=\"n\">Mathlib.Order.Heyting.Basic</span>                                    <span class=\"bp\">|</span>        <span class=\"mi\">29241</span> <span class=\"bp\">|</span>       <span class=\"mi\">293978</span> <span class=\"bp\">|</span> <span class=\"n\">x4.95</span>\n<span class=\"n\">Mathlib.Order.PropInstances</span>                                    <span class=\"bp\">|</span>         <span class=\"mi\">2431</span> <span class=\"bp\">|</span>       <span class=\"mi\">264736</span> <span class=\"bp\">|</span> <span class=\"n\">x5.38</span>\n<span class=\"n\">Mathlib.Order.Disjoint</span>                                         <span class=\"bp\">|</span>        <span class=\"mi\">10608</span> <span class=\"bp\">|</span>       <span class=\"mi\">262305</span> <span class=\"bp\">|</span> <span class=\"n\">x5.42</span>\n<span class=\"n\">Mathlib.Order.BoundedOrder</span>                                     <span class=\"bp\">|</span>         <span class=\"mi\">7817</span> <span class=\"bp\">|</span>       <span class=\"mi\">251697</span> <span class=\"bp\">|</span> <span class=\"n\">x4.45</span>\n<span class=\"n\">Mathlib.Order.Lattice</span>                                          <span class=\"bp\">|</span>        <span class=\"mi\">16411</span> <span class=\"bp\">|</span>       <span class=\"mi\">243880</span> <span class=\"bp\">|</span> <span class=\"n\">x4.50</span>\n<span class=\"n\">Mathlib.Order.Monotone.Basic</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">11254</span> <span class=\"bp\">|</span>       <span class=\"mi\">227468</span> <span class=\"bp\">|</span> <span class=\"n\">x4.67</span>\n<span class=\"n\">Mathlib.Order.RelClasses</span>                                       <span class=\"bp\">|</span>         <span class=\"mi\">7951</span> <span class=\"bp\">|</span>       <span class=\"mi\">216214</span> <span class=\"bp\">|</span> <span class=\"n\">x4.36</span>\n<span class=\"n\">Mathlib.Order.Basic</span>                                            <span class=\"bp\">|</span>        <span class=\"mi\">17261</span> <span class=\"bp\">|</span>       <span class=\"mi\">208263</span> <span class=\"bp\">|</span> <span class=\"n\">x4.29</span>\n<span class=\"n\">Mathlib.Tactic.Convert</span>                                         <span class=\"bp\">|</span>         <span class=\"mi\">3383</span> <span class=\"bp\">|</span>       <span class=\"mi\">191001</span> <span class=\"bp\">|</span> <span class=\"n\">x3.87</span>\n<span class=\"n\">Mathlib.Tactic.Congr</span><span class=\"bp\">!</span>                                          <span class=\"bp\">|</span>        <span class=\"mi\">15149</span> <span class=\"bp\">|</span>       <span class=\"mi\">187618</span> <span class=\"bp\">|</span> <span class=\"n\">x3.92</span>\n<span class=\"n\">Mathlib.Logic.Basic</span>                                            <span class=\"bp\">|</span>         <span class=\"mi\">9200</span> <span class=\"bp\">|</span>       <span class=\"mi\">172468</span> <span class=\"bp\">|</span> <span class=\"n\">x4.13</span>\n<span class=\"n\">Mathlib.Init.Function</span>                                          <span class=\"bp\">|</span>         <span class=\"mi\">2661</span> <span class=\"bp\">|</span>       <span class=\"mi\">163267</span> <span class=\"bp\">|</span> <span class=\"n\">x4.12</span>\n<span class=\"n\">Mathlib.Tactic.Basic</span>                                           <span class=\"bp\">|</span>         <span class=\"mi\">4043</span> <span class=\"bp\">|</span>       <span class=\"mi\">160606</span> <span class=\"bp\">|</span> <span class=\"n\">x4.14</span>\n<span class=\"n\">Std</span>                                                            <span class=\"bp\">|</span>          <span class=\"mi\">772</span> <span class=\"bp\">|</span>       <span class=\"mi\">156563</span> <span class=\"bp\">|</span> <span class=\"n\">x4.20</span>\n<span class=\"n\">Std.Data.UnionFind</span>                                             <span class=\"bp\">|</span>          <span class=\"mi\">645</span> <span class=\"bp\">|</span>       <span class=\"mi\">155791</span> <span class=\"bp\">|</span> <span class=\"n\">x1.29</span>\n<span class=\"n\">Std.Data.UnionFind.Lemmas</span>                                      <span class=\"bp\">|</span>         <span class=\"mi\">9868</span> <span class=\"bp\">|</span>       <span class=\"mi\">155145</span> <span class=\"bp\">|</span> <span class=\"n\">x1.29</span>\n<span class=\"n\">Std.Data.UnionFind.Basic</span>                                       <span class=\"bp\">|</span>        <span class=\"mi\">23302</span> <span class=\"bp\">|</span>       <span class=\"mi\">145277</span> <span class=\"bp\">|</span> <span class=\"n\">x1.31</span>\n<span class=\"n\">Std.Data.Array.Lemmas</span>                                          <span class=\"bp\">|</span>        <span class=\"mi\">34812</span> <span class=\"bp\">|</span>       <span class=\"mi\">121974</span> <span class=\"bp\">|</span> <span class=\"n\">x1.31</span>\n<span class=\"n\">Std.Data.List.Lemmas</span>                                           <span class=\"bp\">|</span>        <span class=\"mi\">55003</span> <span class=\"bp\">|</span>        <span class=\"mi\">87162</span> <span class=\"bp\">|</span> <span class=\"n\">x1.35</span>\n<span class=\"n\">Std.Data.List.Basic</span>                                            <span class=\"bp\">|</span>        <span class=\"mi\">32159</span> <span class=\"bp\">|</span>        <span class=\"mi\">32159</span> <span class=\"bp\">|</span> <span class=\"n\">x1.00</span>\n</code></pre></div>",
        "id": 435801375,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1714264939
    },
    {
        "content": "<p>Pretty cool to see the top-line cumulative instruction count come down over the past few weeks!</p>",
        "id": 435801423,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1714264997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span>, did you open a PR for the <code>RingTheory.Int.Basic -&gt; Data.Nat.Factorization.Basic</code> import?</p>",
        "id": 435837887,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714285321
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12105\">#12105</a>, I think.</p>",
        "id": 435839674,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1714286882
    },
    {
        "content": "<p>Juggling too many things - looks like Kim put it on the bors queue</p>",
        "id": 435844383,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714289673
    },
    {
        "content": "<p>I'm hoping <a href=\"https://github.com/leanprover-community/mathlib4/pull/12311\">#12311</a> will help a little too</p>",
        "id": 435844457,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714289751
    },
    {
        "content": "<p>How is RingTheory.Nilpotent still in the list after <a href=\"https://github.com/leanprover-community/mathlib4/pull/12184\">#12184</a>, though?</p>",
        "id": 435844576,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714289853
    },
    {
        "content": "<p>Also I should advertise the trio <a href=\"https://github.com/leanprover-community/mathlib4/pull/11986\">#11986</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/11863\">#11863</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/11855\">#11855</a> that will clean up things slightly off the pole</p>",
        "id": 435846511,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714291687
    },
    {
        "content": "<p>So I believe we should make it so that <code>`GroupTheory.Torsion</code> does not transitively import <code>Algebra.Module.Submodule.Basic</code>. Is that the case after <a href=\"https://github.com/leanprover-community/mathlib4/pull/12105\">#12105</a> ?</p>",
        "id": 435846900,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714292148
    },
    {
        "content": "<p>No, it's not yet the case. Let me see what the path is</p>",
        "id": 435847104,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714292322
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">It</span> <span class=\"n\">is</span> <span class=\"n\">defined</span> <span class=\"k\">in</span> <span class=\"n\">Mathlib.Algebra.Module.Submodule.Basic</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.Algebra.Module.Submodule.Lattice</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.Algebra.Module.Submodule.Map</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.Algebra.Module.Submodule.Ker</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.Algebra.Algebra.Basic</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.Algebra.Algebra.Hom</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.Algebra.Algebra.NonUnitalHom</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.Algebra.Algebra.Bilinear</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.Algebra.Algebra.Operations</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.RingTheory.Ideal.Operations</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.Data.ZMod.Basic</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.Data.ZMod.Quotient</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.GroupTheory.Exponent</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.GroupTheory.SpecificGroups.Cyclic</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">Mathlib.GroupTheory.PGroup</span><span class=\"o\">,</span>\n  <span class=\"n\">which</span> <span class=\"n\">is</span> <span class=\"n\">imported</span> <span class=\"kd\">by</span> <span class=\"n\">this</span> <span class=\"n\">file.</span>\n</code></pre></div>\n<p>Much appreciation to whoever added that to <code>assert_not_exists</code></p>",
        "id": 435847139,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714292358
    },
    {
        "content": "<p><code>Data.ZMod.Basic</code> seems like a good target</p>",
        "id": 435847177,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714292382
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12478\">#12478</a> is a start, but I probably won't continue with it for now</p>",
        "id": 435847701,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714292882
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/435846900\">said</a>:</p>\n<blockquote>\n<p>So I believe we should make it so that <code>`GroupTheory.Torsion</code> does not transitively import <code>Algebra.Module.Submodule.Basic</code>. Is that the case after <a href=\"https://github.com/leanprover-community/mathlib4/pull/12105\">#12105</a> ?</p>\n</blockquote>\n<p>There's still other paths too;</p>\n<ul>\n<li><code>Mathlib.Algebra.Group.UniqueProds</code> → <code>Mathlib.LinearAlgebra.Basis.VectorSpace</code></li>\n<li>Mathlib.GroupTheory.Exponent → Mathlib.Data.ZMod.Quotient → Mathlib.RingTheory.Int.Basic/Mathlib.RingTheory.Ideal.QuotientOperations</li>\n<li>Mathlib.Algebra.FreeAlgebra → Mathlib.RingTheory.Adjoin.Basic/Mathlib.Algebra.Algebra.Subalgebra.Basic</li>\n</ul>",
        "id": 435848129,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714293257
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/435847139\">said</a>:</p>\n<blockquote>\n<p>Much appreciation to whoever added that to <code>assert_not_exists</code></p>\n</blockquote>\n<p>I asked for it but I don't actually know who implemented it</p>",
        "id": 435851242,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714295972
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/435847701\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12478\">#12478</a> is a start, but I probably won't continue with it for now</p>\n</blockquote>\n<p>I had some time and finished it - reviews welcome. (Sorry, not sorry for adding some documentation in the process.)</p>",
        "id": 435860798,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1714300732
    },
    {
        "content": "<p>Has anyone looked recently at the stretch:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Mathlib.GroupTheory.Exponent</span>\n<span class=\"n\">Mathlib.Data.Nat.Factorization.Basic</span>\n<span class=\"n\">Mathlib.RingTheory.Int.Basic</span>\n<span class=\"n\">Mathlib.RingTheory.PrincipalIdealDomain</span>\n<span class=\"n\">Mathlib.RingTheory.UniqueFactorizationDomain</span>\n<span class=\"n\">Mathlib.RingTheory.Noetherian</span>\n</code></pre></div>\n<p>I would hope one could at least define group-theoretic exponents without knowing what a Noetherian ring is.</p>",
        "id": 435912137,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714341445
    },
    {
        "content": "<p>It's comprised within my comment above but I haven't tried anything with it yet (nor will I have the time, most likely</p>",
        "id": 435912500,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714341734
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Analyzing</span> <span class=\"n\">Mathlib</span> <span class=\"n\">at</span> <span class=\"mi\">28</span><span class=\"n\">c802f9bf63b6766003fe0cfcd1830f9d3692e1</span>\n<span class=\"n\">file</span>                                                           <span class=\"bp\">|</span> <span class=\"n\">instructions</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">cumulative</span><span class=\"o\">)</span> <span class=\"bp\">|</span> <span class=\"n\">parallelism</span>\n<span class=\"c1\">-------------------------------------------------------------- | ------------ | ------------ | -----------</span>\n<span class=\"n\">Mathlib</span>                                                        <span class=\"bp\">|</span>         <span class=\"mi\">7581</span> <span class=\"bp\">|</span>      <span class=\"mi\">5896677</span> <span class=\"bp\">|</span> <span class=\"n\">x18.98</span>\n<span class=\"n\">Mathlib.NumberTheory.Cyclotomic.PID</span>                            <span class=\"bp\">|</span>         <span class=\"mi\">8519</span> <span class=\"bp\">|</span>      <span class=\"mi\">5889095</span> <span class=\"bp\">|</span> <span class=\"n\">x8.32</span>\n<span class=\"n\">Mathlib.NumberTheory.Cyclotomic.Rat</span>                            <span class=\"bp\">|</span>       <span class=\"mi\">127515</span> <span class=\"bp\">|</span>      <span class=\"mi\">5880576</span> <span class=\"bp\">|</span> <span class=\"n\">x8.29</span>\n<span class=\"n\">Mathlib.NumberTheory.Cyclotomic.Discriminant</span>                   <span class=\"bp\">|</span>        <span class=\"mi\">45372</span> <span class=\"bp\">|</span>      <span class=\"mi\">5753060</span> <span class=\"bp\">|</span> <span class=\"n\">x8.45</span>\n<span class=\"n\">Mathlib.NumberTheory.NumberField.Discriminant</span>                  <span class=\"bp\">|</span>       <span class=\"mi\">257639</span> <span class=\"bp\">|</span>      <span class=\"mi\">5707687</span> <span class=\"bp\">|</span> <span class=\"n\">x8.32</span>\n<span class=\"n\">Mathlib.NumberTheory.NumberField.CanonicalEmbedding.ConvexBody</span> <span class=\"bp\">|</span>       <span class=\"mi\">196404</span> <span class=\"bp\">|</span>      <span class=\"mi\">5450048</span> <span class=\"bp\">|</span> <span class=\"n\">x8.66</span>\n<span class=\"n\">Mathlib.NumberTheory.NumberField.CanonicalEmbedding.Basic</span>      <span class=\"bp\">|</span>       <span class=\"mi\">215976</span> <span class=\"bp\">|</span>      <span class=\"mi\">5253643</span> <span class=\"bp\">|</span> <span class=\"n\">x8.52</span>\n<span class=\"n\">Mathlib.NumberTheory.NumberField.Embeddings</span>                    <span class=\"bp\">|</span>       <span class=\"mi\">104846</span> <span class=\"bp\">|</span>      <span class=\"mi\">5037667</span> <span class=\"bp\">|</span> <span class=\"n\">x7.90</span>\n<span class=\"n\">Mathlib.Analysis.Complex.Polynomial</span>                            <span class=\"bp\">|</span>        <span class=\"mi\">25863</span> <span class=\"bp\">|</span>      <span class=\"mi\">4932821</span> <span class=\"bp\">|</span> <span class=\"n\">x7.75</span>\n<span class=\"n\">Mathlib.Analysis.Complex.Liouville</span>                             <span class=\"bp\">|</span>        <span class=\"mi\">15996</span> <span class=\"bp\">|</span>      <span class=\"mi\">4906957</span> <span class=\"bp\">|</span> <span class=\"n\">x7.44</span>\n<span class=\"n\">Mathlib.Analysis.Complex.CauchyIntegral</span>                        <span class=\"bp\">|</span>        <span class=\"mi\">46078</span> <span class=\"bp\">|</span>      <span class=\"mi\">4890961</span> <span class=\"bp\">|</span> <span class=\"n\">x7.46</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.CircleIntegral</span>                  <span class=\"bp\">|</span>        <span class=\"mi\">65734</span> <span class=\"bp\">|</span>      <span class=\"mi\">4844882</span> <span class=\"bp\">|</span> <span class=\"n\">x7.31</span>\n<span class=\"n\">Mathlib.Analysis.SpecialFunctions.NonIntegrable</span>                <span class=\"bp\">|</span>        <span class=\"mi\">14013</span> <span class=\"bp\">|</span>      <span class=\"mi\">4779148</span> <span class=\"bp\">|</span> <span class=\"n\">x7.33</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.FundThmCalculus</span>                 <span class=\"bp\">|</span>        <span class=\"mi\">83110</span> <span class=\"bp\">|</span>      <span class=\"mi\">4765134</span> <span class=\"bp\">|</span> <span class=\"n\">x6.98</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.DominatedConvergence</span>            <span class=\"bp\">|</span>        <span class=\"mi\">26598</span> <span class=\"bp\">|</span>      <span class=\"mi\">4682023</span> <span class=\"bp\">|</span> <span class=\"n\">x6.80</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.IntervalIntegral</span>                <span class=\"bp\">|</span>        <span class=\"mi\">73067</span> <span class=\"bp\">|</span>      <span class=\"mi\">4655424</span> <span class=\"bp\">|</span> <span class=\"n\">x6.83</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.SetIntegral</span>                     <span class=\"bp\">|</span>       <span class=\"mi\">111542</span> <span class=\"bp\">|</span>      <span class=\"mi\">4582357</span> <span class=\"bp\">|</span> <span class=\"n\">x6.55</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.Bochner</span>                         <span class=\"bp\">|</span>       <span class=\"mi\">224061</span> <span class=\"bp\">|</span>      <span class=\"mi\">4470814</span> <span class=\"bp\">|</span> <span class=\"n\">x6.44</span>\n<span class=\"n\">Mathlib.MeasureTheory.Integral.SetToL1</span>                         <span class=\"bp\">|</span>       <span class=\"mi\">258830</span> <span class=\"bp\">|</span>      <span class=\"mi\">4246753</span> <span class=\"bp\">|</span> <span class=\"n\">x6.73</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.SimpleFuncDenseLp</span>               <span class=\"bp\">|</span>        <span class=\"mi\">95663</span> <span class=\"bp\">|</span>      <span class=\"mi\">3987923</span> <span class=\"bp\">|</span> <span class=\"n\">x7.10</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.L1Space</span>                         <span class=\"bp\">|</span>        <span class=\"mi\">92186</span> <span class=\"bp\">|</span>      <span class=\"mi\">3892259</span> <span class=\"bp\">|</span> <span class=\"n\">x7.25</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.LpOrder</span>                         <span class=\"bp\">|</span>        <span class=\"mi\">10468</span> <span class=\"bp\">|</span>      <span class=\"mi\">3800072</span> <span class=\"bp\">|</span> <span class=\"n\">x7.40</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.LpSpace</span>                         <span class=\"bp\">|</span>       <span class=\"mi\">197232</span> <span class=\"bp\">|</span>      <span class=\"mi\">3789604</span> <span class=\"bp\">|</span> <span class=\"n\">x7.42</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.LpSeminorm.CompareExp</span>           <span class=\"bp\">|</span>        <span class=\"mi\">24411</span> <span class=\"bp\">|</span>      <span class=\"mi\">3592371</span> <span class=\"bp\">|</span> <span class=\"n\">x7.70</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.LpSeminorm.Basic</span>                <span class=\"bp\">|</span>        <span class=\"mi\">53842</span> <span class=\"bp\">|</span>      <span class=\"mi\">3567959</span> <span class=\"bp\">|</span> <span class=\"n\">x7.63</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.AEEqFun</span>                         <span class=\"bp\">|</span>        <span class=\"mi\">33186</span> <span class=\"bp\">|</span>      <span class=\"mi\">3514116</span> <span class=\"bp\">|</span> <span class=\"n\">x7.31</span>\n<span class=\"n\">Mathlib.MeasureTheory.Function.StronglyMeasurable.Basic</span>        <span class=\"bp\">|</span>        <span class=\"mi\">64680</span> <span class=\"bp\">|</span>      <span class=\"mi\">3480930</span> <span class=\"bp\">|</span> <span class=\"n\">x7.32</span>\n<span class=\"n\">Mathlib.Topology.Algebra.Module.FiniteDimension</span>                <span class=\"bp\">|</span>        <span class=\"mi\">92236</span> <span class=\"bp\">|</span>      <span class=\"mi\">3416250</span> <span class=\"bp\">|</span> <span class=\"n\">x6.39</span>\n<span class=\"n\">Mathlib.LinearAlgebra.FreeModule.Finite.Matrix</span>                 <span class=\"bp\">|</span>        <span class=\"mi\">21302</span> <span class=\"bp\">|</span>      <span class=\"mi\">3324013</span> <span class=\"bp\">|</span> <span class=\"n\">x5.36</span>\n<span class=\"n\">Mathlib.LinearAlgebra.FreeModule.StrongRankCondition</span>           <span class=\"bp\">|</span>         <span class=\"mi\">9143</span> <span class=\"bp\">|</span>      <span class=\"mi\">3302711</span> <span class=\"bp\">|</span> <span class=\"n\">x5.38</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Charpoly.Basic</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">13703</span> <span class=\"bp\">|</span>      <span class=\"mi\">3293567</span> <span class=\"bp\">|</span> <span class=\"n\">x5.39</span>\n<span class=\"n\">Mathlib.FieldTheory.Minpoly.Field</span>                              <span class=\"bp\">|</span>        <span class=\"mi\">30203</span> <span class=\"bp\">|</span>      <span class=\"mi\">3279864</span> <span class=\"bp\">|</span> <span class=\"n\">x5.41</span>\n<span class=\"n\">Mathlib.RingTheory.Algebraic</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">32977</span> <span class=\"bp\">|</span>      <span class=\"mi\">3249661</span> <span class=\"bp\">|</span> <span class=\"n\">x5.45</span>\n<span class=\"n\">Mathlib.RingTheory.IntegralClosure</span>                             <span class=\"bp\">|</span>        <span class=\"mi\">86918</span> <span class=\"bp\">|</span>      <span class=\"mi\">3216683</span> <span class=\"bp\">|</span> <span class=\"n\">x5.49</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Matrix.Charpoly.LinearMap</span>                <span class=\"bp\">|</span>        <span class=\"mi\">37973</span> <span class=\"bp\">|</span>      <span class=\"mi\">3129765</span> <span class=\"bp\">|</span> <span class=\"n\">x5.55</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Matrix.Charpoly.Coeff</span>                    <span class=\"bp\">|</span>        <span class=\"mi\">83945</span> <span class=\"bp\">|</span>      <span class=\"mi\">3091792</span> <span class=\"bp\">|</span> <span class=\"n\">x5.61</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Matrix.Charpoly.Basic</span>                    <span class=\"bp\">|</span>        <span class=\"mi\">18850</span> <span class=\"bp\">|</span>      <span class=\"mi\">3007846</span> <span class=\"bp\">|</span> <span class=\"n\">x5.66</span>\n</code></pre></div>",
        "id": 435912661,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1714341906
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Mathlib.RingTheory.PolynomialAlgebra</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">36431</span> <span class=\"bp\">|</span>      <span class=\"mi\">2988995</span> <span class=\"bp\">|</span> <span class=\"n\">x5.30</span>\n<span class=\"n\">Mathlib.RingTheory.MatrixAlgebra</span>                               <span class=\"bp\">|</span>        <span class=\"mi\">32923</span> <span class=\"bp\">|</span>      <span class=\"mi\">2952564</span> <span class=\"bp\">|</span> <span class=\"n\">x5.26</span>\n<span class=\"n\">Mathlib.RingTheory.TensorProduct.Basic</span>                         <span class=\"bp\">|</span>       <span class=\"mi\">279572</span> <span class=\"bp\">|</span>      <span class=\"mi\">2919640</span> <span class=\"bp\">|</span> <span class=\"n\">x5.31</span>\n<span class=\"n\">Mathlib.LinearAlgebra.FiniteDimensional</span>                        <span class=\"bp\">|</span>       <span class=\"mi\">100402</span> <span class=\"bp\">|</span>      <span class=\"mi\">2640068</span> <span class=\"bp\">|</span> <span class=\"n\">x5.77</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Dimension.DivisionRing</span>                   <span class=\"bp\">|</span>        <span class=\"mi\">46884</span> <span class=\"bp\">|</span>      <span class=\"mi\">2539665</span> <span class=\"bp\">|</span> <span class=\"n\">x5.95</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Dimension.RankNullity</span>                    <span class=\"bp\">|</span>        <span class=\"mi\">27125</span> <span class=\"bp\">|</span>      <span class=\"mi\">2492781</span> <span class=\"bp\">|</span> <span class=\"n\">x6.00</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Dimension.Constructions</span>                  <span class=\"bp\">|</span>        <span class=\"mi\">85723</span> <span class=\"bp\">|</span>      <span class=\"mi\">2465655</span> <span class=\"bp\">|</span> <span class=\"n\">x6.03</span>\n<span class=\"n\">Mathlib.Algebra.Module.Torsion</span>                                 <span class=\"bp\">|</span>        <span class=\"mi\">77407</span> <span class=\"bp\">|</span>      <span class=\"mi\">2379932</span> <span class=\"bp\">|</span> <span class=\"n\">x6.16</span>\n<span class=\"n\">Mathlib.GroupTheory.Torsion</span>                                    <span class=\"bp\">|</span>        <span class=\"mi\">17375</span> <span class=\"bp\">|</span>      <span class=\"mi\">2302525</span> <span class=\"bp\">|</span> <span class=\"n\">x6.29</span>\n<span class=\"n\">Mathlib.GroupTheory.PGroup</span>                                     <span class=\"bp\">|</span>        <span class=\"mi\">25647</span> <span class=\"bp\">|</span>      <span class=\"mi\">2285149</span> <span class=\"bp\">|</span> <span class=\"n\">x6.34</span>\n<span class=\"n\">Mathlib.GroupTheory.SpecificGroups.Cyclic</span>                      <span class=\"bp\">|</span>        <span class=\"mi\">36279</span> <span class=\"bp\">|</span>      <span class=\"mi\">2259502</span> <span class=\"bp\">|</span> <span class=\"n\">x6.29</span>\n<span class=\"n\">Mathlib.GroupTheory.Exponent</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">25350</span> <span class=\"bp\">|</span>      <span class=\"mi\">2223223</span> <span class=\"bp\">|</span> <span class=\"n\">x5.76</span>\n<span class=\"n\">Mathlib.Data.ZMod.Quotient</span>                                     <span class=\"bp\">|</span>        <span class=\"mi\">20200</span> <span class=\"bp\">|</span>      <span class=\"mi\">2197873</span> <span class=\"bp\">|</span> <span class=\"n\">x5.75</span>\n<span class=\"n\">Mathlib.RingTheory.Int.Basic</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">15479</span> <span class=\"bp\">|</span>      <span class=\"mi\">2177672</span> <span class=\"bp\">|</span> <span class=\"n\">x5.53</span>\n<span class=\"n\">Mathlib.RingTheory.PrincipalIdealDomain</span>                        <span class=\"bp\">|</span>        <span class=\"mi\">22823</span> <span class=\"bp\">|</span>      <span class=\"mi\">2162193</span> <span class=\"bp\">|</span> <span class=\"n\">x5.53</span>\n<span class=\"n\">Mathlib.RingTheory.UniqueFactorizationDomain</span>                   <span class=\"bp\">|</span>        <span class=\"mi\">97990</span> <span class=\"bp\">|</span>      <span class=\"mi\">2139369</span> <span class=\"bp\">|</span> <span class=\"n\">x5.57</span>\n<span class=\"n\">Mathlib.RingTheory.Noetherian</span>                                  <span class=\"bp\">|</span>       <span class=\"mi\">135236</span> <span class=\"bp\">|</span>      <span class=\"mi\">2041379</span> <span class=\"bp\">|</span> <span class=\"n\">x5.77</span>\n<span class=\"n\">Mathlib.RingTheory.Nilpotent.Lemmas</span>                            <span class=\"bp\">|</span>         <span class=\"mi\">6812</span> <span class=\"bp\">|</span>      <span class=\"mi\">1906143</span> <span class=\"bp\">|</span> <span class=\"n\">x5.93</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Matrix.ToLin</span>                             <span class=\"bp\">|</span>       <span class=\"mi\">143061</span> <span class=\"bp\">|</span>      <span class=\"mi\">1899331</span> <span class=\"bp\">|</span> <span class=\"n\">x5.74</span>\n<span class=\"n\">Mathlib.Algebra.Algebra.Subalgebra.Tower</span>                       <span class=\"bp\">|</span>         <span class=\"mi\">9400</span> <span class=\"bp\">|</span>      <span class=\"mi\">1756269</span> <span class=\"bp\">|</span> <span class=\"n\">x5.50</span>\n<span class=\"n\">Mathlib.Algebra.Algebra.Subalgebra.Basic</span>                       <span class=\"bp\">|</span>        <span class=\"mi\">50664</span> <span class=\"bp\">|</span>      <span class=\"mi\">1746868</span> <span class=\"bp\">|</span> <span class=\"n\">x5.51</span>\n<span class=\"n\">Mathlib.Algebra.Algebra.Operations</span>                             <span class=\"bp\">|</span>        <span class=\"mi\">92843</span> <span class=\"bp\">|</span>      <span class=\"mi\">1696204</span> <span class=\"bp\">|</span> <span class=\"n\">x5.64</span>\n<span class=\"n\">Mathlib.Algebra.Algebra.Bilinear</span>                               <span class=\"bp\">|</span>        <span class=\"mi\">20237</span> <span class=\"bp\">|</span>      <span class=\"mi\">1603361</span> <span class=\"bp\">|</span> <span class=\"n\">x4.96</span>\n<span class=\"n\">Mathlib.LinearAlgebra.TensorProduct.Basic</span>                      <span class=\"bp\">|</span>       <span class=\"mi\">244766</span> <span class=\"bp\">|</span>      <span class=\"mi\">1583123</span> <span class=\"bp\">|</span> <span class=\"n\">x4.43</span>\n<span class=\"n\">Mathlib.Algebra.Module.Submodule.Bilinear</span>                      <span class=\"bp\">|</span>        <span class=\"mi\">13851</span> <span class=\"bp\">|</span>      <span class=\"mi\">1338357</span> <span class=\"bp\">|</span> <span class=\"n\">x5.03</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Span</span>                                     <span class=\"bp\">|</span>        <span class=\"mi\">62259</span> <span class=\"bp\">|</span>      <span class=\"mi\">1324505</span> <span class=\"bp\">|</span> <span class=\"n\">x5.01</span>\n<span class=\"n\">Mathlib.LinearAlgebra.Basic</span>                                    <span class=\"bp\">|</span>        <span class=\"mi\">51556</span> <span class=\"bp\">|</span>      <span class=\"mi\">1262245</span> <span class=\"bp\">|</span> <span class=\"n\">x4.87</span>\n<span class=\"n\">Mathlib.Algebra.Module.Submodule.Range</span>                         <span class=\"bp\">|</span>        <span class=\"mi\">23542</span> <span class=\"bp\">|</span>      <span class=\"mi\">1210689</span> <span class=\"bp\">|</span> <span class=\"n\">x5.02</span>\n<span class=\"n\">Mathlib.Algebra.Module.Submodule.Ker</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">24509</span> <span class=\"bp\">|</span>      <span class=\"mi\">1187146</span> <span class=\"bp\">|</span> <span class=\"n\">x5.10</span>\n<span class=\"n\">Mathlib.Algebra.Module.Submodule.Map</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">38798</span> <span class=\"bp\">|</span>      <span class=\"mi\">1162637</span> <span class=\"bp\">|</span> <span class=\"n\">x5.19</span>\n<span class=\"n\">Mathlib.Algebra.Module.Submodule.Lattice</span>                       <span class=\"bp\">|</span>        <span class=\"mi\">32691</span> <span class=\"bp\">|</span>      <span class=\"mi\">1123839</span> <span class=\"bp\">|</span> <span class=\"n\">x5.32</span>\n<span class=\"n\">Mathlib.Algebra.Module.Equiv</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">50598</span> <span class=\"bp\">|</span>      <span class=\"mi\">1091148</span> <span class=\"bp\">|</span> <span class=\"n\">x3.91</span>\n<span class=\"n\">Mathlib.Algebra.Module.LinearMap.End</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">37313</span> <span class=\"bp\">|</span>      <span class=\"mi\">1040549</span> <span class=\"bp\">|</span> <span class=\"n\">x4.05</span>\n<span class=\"n\">Mathlib.Algebra.Module.LinearMap.Basic</span>                         <span class=\"bp\">|</span>       <span class=\"mi\">110901</span> <span class=\"bp\">|</span>      <span class=\"mi\">1003235</span> <span class=\"bp\">|</span> <span class=\"n\">x4.16</span>\n<span class=\"n\">Mathlib.GroupTheory.GroupAction.Hom</span>                            <span class=\"bp\">|</span>        <span class=\"mi\">55621</span> <span class=\"bp\">|</span>       <span class=\"mi\">892333</span> <span class=\"bp\">|</span> <span class=\"n\">x4.49</span>\n<span class=\"n\">Mathlib.Algebra.Module.Basic</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">48022</span> <span class=\"bp\">|</span>       <span class=\"mi\">836712</span> <span class=\"bp\">|</span> <span class=\"n\">x4.69</span>\n<span class=\"n\">Mathlib.Tactic.Abel</span>                                            <span class=\"bp\">|</span>        <span class=\"mi\">25450</span> <span class=\"bp\">|</span>       <span class=\"mi\">788689</span> <span class=\"bp\">|</span> <span class=\"n\">x4.75</span>\n<span class=\"n\">Mathlib.Tactic.NormNum</span>                                         <span class=\"bp\">|</span>         <span class=\"mi\">1926</span> <span class=\"bp\">|</span>       <span class=\"mi\">763239</span> <span class=\"bp\">|</span> <span class=\"n\">x4.87</span>\n<span class=\"n\">Mathlib.Tactic.NormNum.DivMod</span>                                  <span class=\"bp\">|</span>        <span class=\"mi\">11050</span> <span class=\"bp\">|</span>       <span class=\"mi\">761313</span> <span class=\"bp\">|</span> <span class=\"n\">x4.82</span>\n<span class=\"n\">Mathlib.Tactic.NormNum.Ineq</span>                                    <span class=\"bp\">|</span>        <span class=\"mi\">26626</span> <span class=\"bp\">|</span>       <span class=\"mi\">750262</span> <span class=\"bp\">|</span> <span class=\"n\">x4.88</span>\n<span class=\"n\">Mathlib.Tactic.NormNum.Eq</span>                                      <span class=\"bp\">|</span>         <span class=\"mi\">7369</span> <span class=\"bp\">|</span>       <span class=\"mi\">723635</span> <span class=\"bp\">|</span> <span class=\"n\">x4.99</span>\n<span class=\"n\">Mathlib.Tactic.NormNum.Inv</span>                                     <span class=\"bp\">|</span>        <span class=\"mi\">16769</span> <span class=\"bp\">|</span>       <span class=\"mi\">716266</span> <span class=\"bp\">|</span> <span class=\"n\">x5.03</span>\n<span class=\"n\">Mathlib.Data.Rat.Cast.CharZero</span>                                 <span class=\"bp\">|</span>         <span class=\"mi\">4967</span> <span class=\"bp\">|</span>       <span class=\"mi\">699496</span> <span class=\"bp\">|</span> <span class=\"n\">x5.02</span>\n<span class=\"n\">Mathlib.Data.Rat.Cast.Defs</span>                                     <span class=\"bp\">|</span>        <span class=\"mi\">15473</span> <span class=\"bp\">|</span>       <span class=\"mi\">694529</span> <span class=\"bp\">|</span> <span class=\"n\">x4.95</span>\n<span class=\"n\">Mathlib.Data.Rat.Field</span>                                         <span class=\"bp\">|</span>         <span class=\"mi\">3013</span> <span class=\"bp\">|</span>       <span class=\"mi\">679055</span> <span class=\"bp\">|</span> <span class=\"n\">x4.97</span>\n<span class=\"n\">Mathlib.Algebra.Order.Nonneg.Field</span>                             <span class=\"bp\">|</span>        <span class=\"mi\">20924</span> <span class=\"bp\">|</span>       <span class=\"mi\">676042</span> <span class=\"bp\">|</span> <span class=\"n\">x4.75</span>\n<span class=\"n\">Mathlib.Algebra.Order.Nonneg.Ring</span>                              <span class=\"bp\">|</span>        <span class=\"mi\">33702</span> <span class=\"bp\">|</span>       <span class=\"mi\">655118</span> <span class=\"bp\">|</span> <span class=\"n\">x4.72</span>\n<span class=\"n\">Mathlib.Order.CompleteLatticeIntervals</span>                         <span class=\"bp\">|</span>        <span class=\"mi\">12349</span> <span class=\"bp\">|</span>       <span class=\"mi\">621415</span> <span class=\"bp\">|</span> <span class=\"n\">x3.91</span>\n<span class=\"n\">Mathlib.Order.ConditionallyCompleteLattice.Basic</span>               <span class=\"bp\">|</span>        <span class=\"mi\">30198</span> <span class=\"bp\">|</span>       <span class=\"mi\">609066</span> <span class=\"bp\">|</span> <span class=\"n\">x3.88</span>\n<span class=\"n\">Mathlib.Data.Set.Lattice</span>                                       <span class=\"bp\">|</span>        <span class=\"mi\">43130</span> <span class=\"bp\">|</span>       <span class=\"mi\">578868</span> <span class=\"bp\">|</span> <span class=\"n\">x4.03</span>\n<span class=\"n\">Mathlib.Order.CompleteBooleanAlgebra</span>                           <span class=\"bp\">|</span>        <span class=\"mi\">26912</span> <span class=\"bp\">|</span>       <span class=\"mi\">535737</span> <span class=\"bp\">|</span> <span class=\"n\">x3.89</span>\n<span class=\"n\">Mathlib.Order.CompleteLattice</span>                                  <span class=\"bp\">|</span>        <span class=\"mi\">34587</span> <span class=\"bp\">|</span>       <span class=\"mi\">508824</span> <span class=\"bp\">|</span> <span class=\"n\">x4.04</span>\n<span class=\"n\">Mathlib.Order.Hom.Set</span>                                          <span class=\"bp\">|</span>         <span class=\"mi\">3291</span> <span class=\"bp\">|</span>       <span class=\"mi\">474237</span> <span class=\"bp\">|</span> <span class=\"n\">x4.04</span>\n<span class=\"n\">Mathlib.Logic.Equiv.Set</span>                                        <span class=\"bp\">|</span>        <span class=\"mi\">14804</span> <span class=\"bp\">|</span>       <span class=\"mi\">470945</span> <span class=\"bp\">|</span> <span class=\"n\">x3.93</span>\n<span class=\"n\">Mathlib.Data.Set.Function</span>                                      <span class=\"bp\">|</span>        <span class=\"mi\">25877</span> <span class=\"bp\">|</span>       <span class=\"mi\">456141</span> <span class=\"bp\">|</span> <span class=\"n\">x4.02</span>\n<span class=\"n\">Mathlib.Data.Set.Prod</span>                                          <span class=\"bp\">|</span>        <span class=\"mi\">25370</span> <span class=\"bp\">|</span>       <span class=\"mi\">430263</span> <span class=\"bp\">|</span> <span class=\"n\">x4.20</span>\n<span class=\"n\">Mathlib.Data.Set.Image</span>                                         <span class=\"bp\">|</span>        <span class=\"mi\">20538</span> <span class=\"bp\">|</span>       <span class=\"mi\">404892</span> <span class=\"bp\">|</span> <span class=\"n\">x4.40</span>\n<span class=\"n\">Mathlib.Data.Set.Subsingleton</span>                                  <span class=\"bp\">|</span>         <span class=\"mi\">4476</span> <span class=\"bp\">|</span>       <span class=\"mi\">384354</span> <span class=\"bp\">|</span> <span class=\"n\">x4.50</span>\n<span class=\"n\">Mathlib.Data.Set.Basic</span>                                         <span class=\"bp\">|</span>        <span class=\"mi\">44491</span> <span class=\"bp\">|</span>       <span class=\"mi\">379877</span> <span class=\"bp\">|</span> <span class=\"n\">x4.54</span>\n<span class=\"n\">Mathlib.Order.SymmDiff</span>                                         <span class=\"bp\">|</span>        <span class=\"mi\">17197</span> <span class=\"bp\">|</span>       <span class=\"mi\">335386</span> <span class=\"bp\">|</span> <span class=\"n\">x4.61</span>\n<span class=\"n\">Mathlib.Order.BooleanAlgebra</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">24200</span> <span class=\"bp\">|</span>       <span class=\"mi\">318189</span> <span class=\"bp\">|</span> <span class=\"n\">x4.65</span>\n<span class=\"n\">Mathlib.Order.Heyting.Basic</span>                                    <span class=\"bp\">|</span>        <span class=\"mi\">29242</span> <span class=\"bp\">|</span>       <span class=\"mi\">293988</span> <span class=\"bp\">|</span> <span class=\"n\">x4.95</span>\n<span class=\"n\">Mathlib.Order.PropInstances</span>                                    <span class=\"bp\">|</span>         <span class=\"mi\">2431</span> <span class=\"bp\">|</span>       <span class=\"mi\">264746</span> <span class=\"bp\">|</span> <span class=\"n\">x5.38</span>\n<span class=\"n\">Mathlib.Order.Disjoint</span>                                         <span class=\"bp\">|</span>        <span class=\"mi\">10607</span> <span class=\"bp\">|</span>       <span class=\"mi\">262314</span> <span class=\"bp\">|</span> <span class=\"n\">x5.43</span>\n<span class=\"n\">Mathlib.Order.BoundedOrder</span>                                     <span class=\"bp\">|</span>         <span class=\"mi\">7818</span> <span class=\"bp\">|</span>       <span class=\"mi\">251707</span> <span class=\"bp\">|</span> <span class=\"n\">x4.45</span>\n<span class=\"n\">Mathlib.Order.Lattice</span>                                          <span class=\"bp\">|</span>        <span class=\"mi\">16412</span> <span class=\"bp\">|</span>       <span class=\"mi\">243889</span> <span class=\"bp\">|</span> <span class=\"n\">x4.51</span>\n<span class=\"n\">Mathlib.Order.Monotone.Basic</span>                                   <span class=\"bp\">|</span>        <span class=\"mi\">11254</span> <span class=\"bp\">|</span>       <span class=\"mi\">227476</span> <span class=\"bp\">|</span> <span class=\"n\">x4.67</span>\n<span class=\"n\">Mathlib.Order.RelClasses</span>                                       <span class=\"bp\">|</span>         <span class=\"mi\">7951</span> <span class=\"bp\">|</span>       <span class=\"mi\">216222</span> <span class=\"bp\">|</span> <span class=\"n\">x4.36</span>\n<span class=\"n\">Mathlib.Order.Basic</span>                                            <span class=\"bp\">|</span>        <span class=\"mi\">17262</span> <span class=\"bp\">|</span>       <span class=\"mi\">208270</span> <span class=\"bp\">|</span> <span class=\"n\">x4.30</span>\n<span class=\"n\">Mathlib.Tactic.Convert</span>                                         <span class=\"bp\">|</span>         <span class=\"mi\">3383</span> <span class=\"bp\">|</span>       <span class=\"mi\">191008</span> <span class=\"bp\">|</span> <span class=\"n\">x3.87</span>\n<span class=\"n\">Mathlib.Tactic.Congr</span><span class=\"bp\">!</span>                                          <span class=\"bp\">|</span>        <span class=\"mi\">15149</span> <span class=\"bp\">|</span>       <span class=\"mi\">187624</span> <span class=\"bp\">|</span> <span class=\"n\">x3.92</span>\n<span class=\"n\">Mathlib.Logic.Basic</span>                                            <span class=\"bp\">|</span>         <span class=\"mi\">9201</span> <span class=\"bp\">|</span>       <span class=\"mi\">172474</span> <span class=\"bp\">|</span> <span class=\"n\">x4.13</span>\n<span class=\"n\">Mathlib.Init.Function</span>                                          <span class=\"bp\">|</span>         <span class=\"mi\">2661</span> <span class=\"bp\">|</span>       <span class=\"mi\">163272</span> <span class=\"bp\">|</span> <span class=\"n\">x4.12</span>\n<span class=\"n\">Mathlib.Tactic.Basic</span>                                           <span class=\"bp\">|</span>         <span class=\"mi\">4043</span> <span class=\"bp\">|</span>       <span class=\"mi\">160611</span> <span class=\"bp\">|</span> <span class=\"n\">x4.14</span>\n<span class=\"n\">Std</span>                                                            <span class=\"bp\">|</span>          <span class=\"mi\">772</span> <span class=\"bp\">|</span>       <span class=\"mi\">156568</span> <span class=\"bp\">|</span> <span class=\"n\">x4.20</span>\n<span class=\"n\">Std.Data.UnionFind</span>                                             <span class=\"bp\">|</span>          <span class=\"mi\">645</span> <span class=\"bp\">|</span>       <span class=\"mi\">155795</span> <span class=\"bp\">|</span> <span class=\"n\">x1.29</span>\n<span class=\"n\">Std.Data.UnionFind.Lemmas</span>                                      <span class=\"bp\">|</span>         <span class=\"mi\">9870</span> <span class=\"bp\">|</span>       <span class=\"mi\">155150</span> <span class=\"bp\">|</span> <span class=\"n\">x1.29</span>\n<span class=\"n\">Std.Data.UnionFind.Basic</span>                                       <span class=\"bp\">|</span>        <span class=\"mi\">23303</span> <span class=\"bp\">|</span>       <span class=\"mi\">145280</span> <span class=\"bp\">|</span> <span class=\"n\">x1.31</span>\n<span class=\"n\">Std.Data.Array.Lemmas</span>                                          <span class=\"bp\">|</span>        <span class=\"mi\">34811</span> <span class=\"bp\">|</span>       <span class=\"mi\">121976</span> <span class=\"bp\">|</span> <span class=\"n\">x1.31</span>\n<span class=\"n\">Std.Data.List.Lemmas</span>                                           <span class=\"bp\">|</span>        <span class=\"mi\">55006</span> <span class=\"bp\">|</span>        <span class=\"mi\">87164</span> <span class=\"bp\">|</span> <span class=\"n\">x1.35</span>\n<span class=\"n\">Std.Data.List.Basic</span>                                            <span class=\"bp\">|</span>        <span class=\"mi\">32158</span> <span class=\"bp\">|</span>        <span class=\"mi\">32158</span> <span class=\"bp\">|</span> <span class=\"n\">x1.00</span>\n</code></pre></div>",
        "id": 435912669,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1714341913
    },
    {
        "content": "<p>Now with the <code>RingTheory.Int.Basic -&gt; Data.Nat.Factorization.Basic</code> import removed, the pole has gone down by another ~3%</p>",
        "id": 435912776,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1714341997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> would you like to merge the <a href=\"https://github.com/leanprover-community/mathlib4/pull/8361\">#8361</a> PR? It would be much easier to assess other PRs with this executable if it was in <code>master</code>. It's delegated but I don't think I can merge it because I am not technically the owner.</p>",
        "id": 435912921,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1714342138
    },
    {
        "content": "<p>Update:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">Analyzing</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"w\"> </span><span class=\"k\">at</span><span class=\"w\"> </span><span class=\"n\">fe5e871112c20e1471ba2a80c6c75eba41fe8417</span>\n<span class=\"n\">file</span><span class=\"w\">                                                           </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">instructions</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">cumulative</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">parallelism</span>\n<span class=\"c1\">-------------------------------------------------------------- | ------------ | ------------ | -----------</span>\n<span class=\"n\">Mathlib</span><span class=\"w\">                                                        </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">7998</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">5636164</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x21</span><span class=\"bp\">.</span><span class=\"m\">45</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">NumberTheory</span><span class=\"bp\">.</span><span class=\"n\">Cyclotomic</span><span class=\"bp\">.</span><span class=\"n\">Three</span><span class=\"w\">                          </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">33249</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">5628166</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x9</span><span class=\"bp\">.</span><span class=\"m\">10</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">NumberTheory</span><span class=\"bp\">.</span><span class=\"n\">Cyclotomic</span><span class=\"bp\">.</span><span class=\"n\">Rat</span><span class=\"w\">                            </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">116385</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">5594916</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x9</span><span class=\"bp\">.</span><span class=\"m\">08</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">NumberTheory</span><span class=\"bp\">.</span><span class=\"n\">Cyclotomic</span><span class=\"bp\">.</span><span class=\"n\">Discriminant</span><span class=\"w\">                   </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">42628</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">5478531</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x9</span><span class=\"bp\">.</span><span class=\"m\">24</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">NumberTheory</span><span class=\"bp\">.</span><span class=\"n\">NumberField</span><span class=\"bp\">.</span><span class=\"n\">Discriminant</span><span class=\"w\">                  </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">216400</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">5435902</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x9</span><span class=\"bp\">.</span><span class=\"m\">16</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">NumberTheory</span><span class=\"bp\">.</span><span class=\"n\">NumberField</span><span class=\"bp\">.</span><span class=\"n\">CanonicalEmbedding</span><span class=\"bp\">.</span><span class=\"n\">ConvexBody</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">188716</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">5219502</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x9</span><span class=\"bp\">.</span><span class=\"m\">48</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Measure</span><span class=\"bp\">.</span><span class=\"n\">Lebesgue</span><span class=\"bp\">.</span><span class=\"n\">VolumeOfBalls</span><span class=\"w\">           </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">63478</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">5030785</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">68</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">SpecialFunctions</span><span class=\"bp\">.</span><span class=\"n\">Gamma</span><span class=\"bp\">.</span><span class=\"n\">BohrMollerup</span><span class=\"w\">           </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">37620</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4967307</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">74</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">SpecialFunctions</span><span class=\"bp\">.</span><span class=\"n\">Gaussian</span><span class=\"bp\">.</span><span class=\"n\">GaussianIntegral</span><span class=\"w\">    </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">38273</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4929686</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">79</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">SpecialFunctions</span><span class=\"bp\">.</span><span class=\"n\">Gamma</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                  </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">39222</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4891413</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">83</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">MellinTransform</span><span class=\"w\">                               </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">40460</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4852190</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">89</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">SpecialFunctions</span><span class=\"bp\">.</span><span class=\"n\">ImproperIntegrals</span><span class=\"w\">            </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">15869</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4811730</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">93</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">SpecialFunctions</span><span class=\"bp\">.</span><span class=\"n\">JapaneseBracket</span><span class=\"w\">              </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">98533</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4795861</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">70</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Integral</span><span class=\"bp\">.</span><span class=\"n\">Layercake</span><span class=\"w\">                       </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">29849</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4697327</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">81</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">SpecialFunctions</span><span class=\"bp\">.</span><span class=\"n\">Integrals</span><span class=\"w\">                    </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">115401</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4667478</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">85</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">SpecialFunctions</span><span class=\"bp\">.</span><span class=\"n\">NonIntegrable</span><span class=\"w\">                </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">14974</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4552077</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">89</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Integral</span><span class=\"bp\">.</span><span class=\"n\">FundThmCalculus</span><span class=\"w\">                 </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">90501</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4537102</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">49</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Integral</span><span class=\"bp\">.</span><span class=\"n\">DominatedConvergence</span><span class=\"w\">            </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">28183</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4446601</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">29</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Integral</span><span class=\"bp\">.</span><span class=\"n\">IntervalIntegral</span><span class=\"w\">                </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">77246</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4418417</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">33</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Integral</span><span class=\"bp\">.</span><span class=\"n\">SetIntegral</span><span class=\"w\">                     </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">119067</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4341171</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">01</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Integral</span><span class=\"bp\">.</span><span class=\"n\">Bochner</span><span class=\"w\">                         </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">242278</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">4222103</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x6</span><span class=\"bp\">.</span><span class=\"m\">83</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Integral</span><span class=\"bp\">.</span><span class=\"n\">SetToL1</span><span class=\"w\">                         </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">309259</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">3979824</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">19</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">SimpleFuncDenseLp</span><span class=\"w\">               </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">103970</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">3670565</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">71</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">L1Space</span><span class=\"w\">                         </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">106081</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">3566594</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">90</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">LpOrder</span><span class=\"w\">                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">11050</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">3460512</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"bp\">.</span><span class=\"m\">11</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">LpSpace</span><span class=\"w\">                         </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">231233</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">3449462</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"bp\">.</span><span class=\"m\">14</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">LpSeminorm</span><span class=\"bp\">.</span><span class=\"n\">CompareExp</span><span class=\"w\">           </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">26568</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">3218229</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"bp\">.</span><span class=\"m\">55</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">LpSeminorm</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">58634</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">3191660</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"bp\">.</span><span class=\"m\">48</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">AEEqFun</span><span class=\"w\">                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">35299</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">3133026</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"bp\">.</span><span class=\"m\">15</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">MeasureTheory</span><span class=\"bp\">.</span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">StronglyMeasurable</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">        </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">71337</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">3097727</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"bp\">.</span><span class=\"m\">17</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">NormedSpace</span><span class=\"bp\">.</span><span class=\"n\">BoundedLinearMaps</span><span class=\"w\">                 </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">95827</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">3026389</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x6</span><span class=\"bp\">.</span><span class=\"m\">51</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">NormedSpace</span><span class=\"bp\">.</span><span class=\"n\">Multilinear</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                 </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">355228</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">2930562</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x6</span><span class=\"bp\">.</span><span class=\"m\">46</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">NormedSpace</span><span class=\"bp\">.</span><span class=\"n\">OperatorNorm</span><span class=\"bp\">.</span><span class=\"n\">NormedSpace</span><span class=\"w\">          </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">75087</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">2575334</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">09</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">NormedSpace</span><span class=\"bp\">.</span><span class=\"n\">OperatorNorm</span><span class=\"bp\">.</span><span class=\"n\">Bilinear</span><span class=\"w\">             </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">160601</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">2500246</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">26</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">NormedSpace</span><span class=\"bp\">.</span><span class=\"n\">OperatorNorm</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">106216</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">2339645</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">69</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">LocallyConvex</span><span class=\"bp\">.</span><span class=\"n\">WithSeminorms</span><span class=\"w\">                   </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">105751</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">2233429</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">89</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">Equicontinuity</span><span class=\"w\">                        </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">7248</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">2127677</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">35</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">UniformConvergence</span><span class=\"w\">                    </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">32781</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">2120428</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">38</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">LocallyConvex</span><span class=\"bp\">.</span><span class=\"n\">Bounded</span><span class=\"w\">                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">40104</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">2087647</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">46</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">Seminorm</span><span class=\"w\">                                      </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">172620</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">2047542</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">38</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">LocallyConvex</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                           </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">38838</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1874921</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">86</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">NormedSpace</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                             </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">29705</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1836083</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">58</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">Normed</span><span class=\"bp\">.</span><span class=\"n\">MulAction</span><span class=\"w\">                              </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">18352</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1806377</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">66</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">Normed</span><span class=\"bp\">.</span><span class=\"n\">Field</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                            </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">88589</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1788024</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"bp\">.</span><span class=\"m\">73</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">Normed</span><span class=\"bp\">.</span><span class=\"n\">Group</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                            </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">101645</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1699435</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x6</span><span class=\"bp\">.</span><span class=\"m\">83</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">MetricSpace</span><span class=\"bp\">.</span><span class=\"n\">IsometricSMul</span><span class=\"w\">                     </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">30951</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1597789</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x6</span><span class=\"bp\">.</span><span class=\"m\">51</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">MetricSpace</span><span class=\"bp\">.</span><span class=\"n\">Isometry</span><span class=\"w\">                          </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">13635</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1566837</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x5</span><span class=\"bp\">.</span><span class=\"m\">39</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">MetricSpace</span><span class=\"bp\">.</span><span class=\"n\">Antilipschitz</span><span class=\"w\">                     </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">8227</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1553201</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x5</span><span class=\"bp\">.</span><span class=\"m\">43</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">MetricSpace</span><span class=\"bp\">.</span><span class=\"n\">Bounded</span><span class=\"w\">                           </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">14045</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1544974</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x5</span><span class=\"bp\">.</span><span class=\"m\">43</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">MetricSpace</span><span class=\"bp\">.</span><span class=\"n\">ProperSpace</span><span class=\"w\">                       </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">5495</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1530928</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x5</span><span class=\"bp\">.</span><span class=\"m\">47</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Compact</span><span class=\"w\">                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">27904</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1525433</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">17</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">IntermediateValue</span><span class=\"w\">                       </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">51399</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1497529</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">12</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">DenselyOrdered</span><span class=\"w\">                          </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">86087</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1446129</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">22</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">IsLUB</span><span class=\"w\">                                   </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">15668</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1360042</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">42</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">LeftRightNhds</span><span class=\"w\">                           </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">32992</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1344373</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">46</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                   </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">36970</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1311380</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">53</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">OrderClosed</span><span class=\"w\">                             </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">30423</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1274410</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">16</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Separation</span><span class=\"w\">                                    </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">45321</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1243987</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">23</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Compactness</span><span class=\"bp\">.</span><span class=\"n\">SigmaCompact</span><span class=\"w\">                      </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">8107</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1198665</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">19</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Compactness</span><span class=\"bp\">.</span><span class=\"n\">LocallyCompact</span><span class=\"w\">                    </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">5462</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1190558</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">22</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Compactness</span><span class=\"bp\">.</span><span class=\"n\">Compact</span><span class=\"w\">                           </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">28692</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1185095</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">23</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Bases</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">31552</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1156403</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">29</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">ContinuousOn</span><span class=\"w\">                                  </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">28725</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1124850</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">39</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Constructions</span><span class=\"w\">                                 </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">37151</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1096125</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">48</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Maps</span><span class=\"w\">                                          </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">12106</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1058973</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">59</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">17094</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1046867</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">63</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Defs</span><span class=\"bp\">.</span><span class=\"n\">Induced</span><span class=\"w\">                                  </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">3502</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1029772</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">69</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">30405</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">      </span><span class=\"mi\">1026269</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">71</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Topology</span><span class=\"bp\">.</span><span class=\"n\">Defs</span><span class=\"bp\">.</span><span class=\"n\">Filter</span><span class=\"w\">                                   </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">8021</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">995863</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">81</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Filter</span><span class=\"bp\">.</span><span class=\"n\">Ultrafilter</span><span class=\"w\">                               </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">12329</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">987842</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">72</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Filter</span><span class=\"bp\">.</span><span class=\"n\">Cofinite</span><span class=\"w\">                                  </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">6144</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">975512</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">70</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Filter</span><span class=\"bp\">.</span><span class=\"n\">AtTopBot</span><span class=\"w\">                                  </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">64243</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">969367</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">71</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Filter</span><span class=\"bp\">.</span><span class=\"n\">Bases</span><span class=\"w\">                                     </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">21730</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">905123</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">58</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Filter</span><span class=\"bp\">.</span><span class=\"n\">Prod</span><span class=\"w\">                                      </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">16155</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">883393</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">29</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Filter</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                     </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">62918</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">867238</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">35</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Set</span><span class=\"bp\">.</span><span class=\"n\">Finite</span><span class=\"w\">                                        </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">35271</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">804320</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">46</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Finite</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                      </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">3253</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">769048</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">61</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Fintype</span><span class=\"bp\">.</span><span class=\"n\">Sigma</span><span class=\"w\">                                     </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">15609</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">765794</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">41</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Finset</span><span class=\"bp\">.</span><span class=\"n\">Sigma</span><span class=\"w\">                                      </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">8128</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">750184</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">38</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Finset</span><span class=\"bp\">.</span><span class=\"n\">Lattice</span><span class=\"w\">                                    </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">63068</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">742056</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">41</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Finset</span><span class=\"bp\">.</span><span class=\"n\">Prod</span><span class=\"w\">                                       </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">11430</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">678987</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">30</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Finset</span><span class=\"bp\">.</span><span class=\"n\">Card</span><span class=\"w\">                                       </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">17104</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">667556</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">36</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Finset</span><span class=\"bp\">.</span><span class=\"n\">Image</span><span class=\"w\">                                      </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">19607</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">650452</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">45</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Finset</span><span class=\"bp\">.</span><span class=\"n\">Union</span><span class=\"w\">                                      </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">8282</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">630845</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">52</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Finset</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                      </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">57940</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">622563</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">38</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Multiset</span><span class=\"bp\">.</span><span class=\"n\">FinsetOps</span><span class=\"w\">                                </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">7371</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">564622</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">62</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Multiset</span><span class=\"bp\">.</span><span class=\"n\">Dedup</span><span class=\"w\">                                    </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">3867</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">557251</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">67</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Multiset</span><span class=\"bp\">.</span><span class=\"n\">Nodup</span><span class=\"w\">                                    </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">9031</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">553384</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">69</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Multiset</span><span class=\"bp\">.</span><span class=\"n\">Range</span><span class=\"w\">                                    </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">2708</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">544352</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">67</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Multiset</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                    </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">61187</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">541643</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">69</span>\n</code></pre></div>",
        "id": 443763954,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718023899
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">List</span><span class=\"bp\">.</span><span class=\"n\">Perm</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">14304</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">480456</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">45</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">List</span><span class=\"bp\">.</span><span class=\"n\">Dedup</span><span class=\"w\">                                        </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">3417</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">466151</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">49</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">List</span><span class=\"bp\">.</span><span class=\"n\">Nodup</span><span class=\"w\">                                        </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">9244</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">462733</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">52</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Set</span><span class=\"bp\">.</span><span class=\"n\">Pairwise</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">10099</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">453488</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">42</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Set</span><span class=\"bp\">.</span><span class=\"n\">Function</span><span class=\"w\">                                      </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">26640</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">443389</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">02</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Set</span><span class=\"bp\">.</span><span class=\"n\">Prod</span><span class=\"w\">                                          </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">23810</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">416748</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">21</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Set</span><span class=\"bp\">.</span><span class=\"n\">Image</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">20318</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">392938</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">40</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Set</span><span class=\"bp\">.</span><span class=\"n\">Subsingleton</span><span class=\"w\">                                  </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">4596</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">372620</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">50</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">Set</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">44342</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">368023</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">55</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">SymmDiff</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">19102</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">323680</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">61</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">BooleanAlgebra</span><span class=\"w\">                                   </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">27774</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">304577</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">62</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Heyting</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                    </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">31978</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">276803</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"bp\">.</span><span class=\"m\">99</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">PropInstances</span><span class=\"w\">                                    </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">2494</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">244824</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x5</span><span class=\"bp\">.</span><span class=\"m\">51</span>\n<span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Disjoint</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">11213</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">242330</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x5</span><span class=\"bp\">.</span><span class=\"m\">55</span>\n<span class=\"n\">Aesop</span><span class=\"w\">                                                          </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">1083</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">231116</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"bp\">.</span><span class=\"m\">18</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Main</span><span class=\"w\">                                                     </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">3343</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">230032</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"bp\">.</span><span class=\"m\">18</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Search</span><span class=\"bp\">.</span><span class=\"n\">Main</span><span class=\"w\">                                              </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">44186</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">226689</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"bp\">.</span><span class=\"m\">07</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Search</span><span class=\"bp\">.</span><span class=\"n\">ExpandSafePrefix</span><span class=\"w\">                                  </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">4130</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">182503</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">91</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Search</span><span class=\"bp\">.</span><span class=\"n\">Expansion</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">17580</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">178372</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">92</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Search</span><span class=\"bp\">.</span><span class=\"n\">Expansion</span><span class=\"bp\">.</span><span class=\"n\">Norm</span><span class=\"w\">                                    </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">9867</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">160792</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"bp\">.</span><span class=\"m\">03</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Search</span><span class=\"bp\">.</span><span class=\"n\">RuleSelection</span><span class=\"w\">                                     </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">1891</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">150925</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">80</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Search</span><span class=\"bp\">.</span><span class=\"n\">SearchM</span><span class=\"w\">                                           </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">3085</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">149033</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">81</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Search</span><span class=\"bp\">.</span><span class=\"n\">Queue</span><span class=\"bp\">.</span><span class=\"n\">Class</span><span class=\"w\">                                       </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">1013</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">145947</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">70</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Tree</span><span class=\"w\">                                                     </span><span class=\"bp\">|</span><span class=\"w\">          </span><span class=\"mi\">984</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">144933</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">70</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Tree</span><span class=\"bp\">.</span><span class=\"n\">Check</span><span class=\"w\">                                               </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">8002</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">143949</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">54</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Tree</span><span class=\"bp\">.</span><span class=\"n\">State</span><span class=\"w\">                                               </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">3391</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">135947</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">53</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Tree</span><span class=\"bp\">.</span><span class=\"n\">Traversal</span><span class=\"w\">                                           </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">2174</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">132556</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">54</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Tree</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"w\">                                                </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">5461</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">130382</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">55</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Tree</span><span class=\"bp\">.</span><span class=\"n\">UnsafeQueue</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">1502</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">124920</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">58</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Rule</span><span class=\"w\">                                                     </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">1831</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">123418</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">58</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Index</span><span class=\"w\">                                                    </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">6487</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">121586</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">59</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Rule</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                               </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">1190</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">115098</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">62</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">RuleTac</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                            </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">1968</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">113908</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">62</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Index</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                              </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">1524</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">111939</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">39</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">RulePattern</span><span class=\"w\">                                              </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">6485</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">110415</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">40</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Tracing</span><span class=\"w\">                                                  </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">3663</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">103929</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">41</span>\n<span class=\"n\">Aesop</span><span class=\"bp\">.</span><span class=\"n\">Util</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                               </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">8512</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">       </span><span class=\"mi\">100266</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">42</span>\n<span class=\"n\">Batteries</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">String</span><span class=\"w\">                                          </span><span class=\"bp\">|</span><span class=\"w\">          </span><span class=\"mi\">683</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">91753</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">27</span>\n<span class=\"n\">Batteries</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">String</span><span class=\"bp\">.</span><span class=\"n\">Lemmas</span><span class=\"w\">                                   </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">22974</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">91070</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">25</span>\n<span class=\"n\">Batteries</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">List</span><span class=\"bp\">.</span><span class=\"n\">Lemmas</span><span class=\"w\">                                     </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">28384</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">68095</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">09</span>\n<span class=\"n\">Batteries</span><span class=\"bp\">.</span><span class=\"n\">Data</span><span class=\"bp\">.</span><span class=\"n\">List</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                      </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">24837</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">39711</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">02</span>\n<span class=\"n\">Batteries</span><span class=\"bp\">.</span><span class=\"n\">Tactic</span><span class=\"bp\">.</span><span class=\"n\">Alias</span><span class=\"w\">                                         </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">6052</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">        </span><span class=\"mi\">14874</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">04</span>\n<span class=\"n\">Batteries</span><span class=\"bp\">.</span><span class=\"n\">CodeAction</span><span class=\"bp\">.</span><span class=\"n\">Deprecated</span><span class=\"w\">                                </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">2602</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">8821</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">07</span>\n<span class=\"n\">Batteries</span><span class=\"bp\">.</span><span class=\"n\">CodeAction</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                     </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">4100</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">6218</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">00</span>\n<span class=\"n\">Batteries</span><span class=\"bp\">.</span><span class=\"n\">CodeAction</span><span class=\"bp\">.</span><span class=\"n\">Attr</span><span class=\"w\">                                      </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">2118</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">         </span><span class=\"mi\">2118</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">x1</span><span class=\"bp\">.</span><span class=\"m\">00</span>\n<span class=\"n\">Lean</span><span class=\"bp\">.</span><span class=\"n\">Server</span><span class=\"bp\">.</span><span class=\"n\">CodeActions</span><span class=\"w\">                                        </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Lean</span><span class=\"bp\">.</span><span class=\"n\">Server</span><span class=\"bp\">.</span><span class=\"n\">CodeActions</span><span class=\"bp\">.</span><span class=\"n\">Attr</span><span class=\"w\">                                   </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Lean</span><span class=\"bp\">.</span><span class=\"n\">Server</span><span class=\"bp\">.</span><span class=\"n\">CodeActions</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                  </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Lean</span><span class=\"bp\">.</span><span class=\"n\">Server</span><span class=\"bp\">.</span><span class=\"n\">FileWorker</span><span class=\"bp\">.</span><span class=\"n\">RequestHandling</span><span class=\"w\">                         </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Lean</span><span class=\"bp\">.</span><span class=\"n\">DeclarationRange</span><span class=\"w\">                                          </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Lean</span><span class=\"bp\">.</span><span class=\"n\">MonadEnv</span><span class=\"w\">                                                  </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Lean</span><span class=\"bp\">.</span><span class=\"n\">Environment</span><span class=\"w\">                                               </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Init</span><span class=\"bp\">.</span><span class=\"n\">Control</span><span class=\"bp\">.</span><span class=\"n\">StateRef</span><span class=\"w\">                                          </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Init</span><span class=\"bp\">.</span><span class=\"n\">System</span><span class=\"bp\">.</span><span class=\"n\">IO</span><span class=\"w\">                                                 </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Init</span><span class=\"bp\">.</span><span class=\"n\">Control</span><span class=\"bp\">.</span><span class=\"n\">Reader</span><span class=\"w\">                                            </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Init</span><span class=\"bp\">.</span><span class=\"n\">Control</span><span class=\"bp\">.</span><span class=\"n\">Basic</span><span class=\"w\">                                             </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Init</span><span class=\"bp\">.</span><span class=\"n\">Core</span><span class=\"w\">                                                      </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n<span class=\"n\">Init</span><span class=\"bp\">.</span><span class=\"n\">Prelude</span><span class=\"w\">                                                   </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\">            </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"n\">xNaN</span>\n</code></pre></div>",
        "id": 443763967,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718023904
    },
    {
        "content": "<p>There's no longer linear algebra or ring theory in the pole, and <code>NumberTheory.Cyclotomic.Three</code> has replaced <code>NumberTheory.Cyclotomic.PID</code></p>",
        "id": 443764234,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718023979
    },
    {
        "content": "<p>It would be nice if one of our topologists or analysts would take a look if anything seems implausible</p>",
        "id": 443764380,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718024027
    },
    {
        "content": "<p>I looked briefly at the finiteness stuff under Filter, but that doesn't seem like an obvious dependency to get rid of</p>",
        "id": 443764639,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718024100
    },
    {
        "content": "<p>Do we really need <code>Analysis.Normed.Group.Basic</code> sitting atop that much topology?</p>",
        "id": 443806707,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718035519
    },
    {
        "content": "<p>I think there's a potential for a new <code>Defs</code> file here</p>",
        "id": 443807069,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718035609
    },
    {
        "content": "<p>Yeah, file is almost 3k lines, should be split up somehow.</p>",
        "id": 443902841,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1718073552
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13713\">#13713</a> does a bit, though it doesn't help with the pole</p>",
        "id": 443918374,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718083888
    },
    {
        "content": "<p>Or does it - lemme bench</p>",
        "id": 443918611,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718084041
    },
    {
        "content": "<p>It does help some - see the PR for details</p>",
        "id": 443931085,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718090035
    },
    {
        "content": "<p>What happened with that first bench? <span aria-label=\"open mouth\" class=\"emoji emoji-1f62e\" role=\"img\" title=\"open mouth\">:open_mouth:</span></p>",
        "id": 443933373,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1718090828
    },
    {
        "content": "<p>There's now also a bunch of files that get +16 extra transitive imports. It's not a lot. But I wonder if we can reasonably split the file in a way that none of the files get more imports (modulo importing newly created files)...</p>",
        "id": 443933572,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1718090901
    },
    {
        "content": "<p>You mean</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"bp\">~</span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">Normed</span><span class=\"bp\">.</span><span class=\"n\">Group</span><span class=\"bp\">.</span><span class=\"n\">Lemmas</span><span class=\"w\">   </span><span class=\"n\">instructions</span><span class=\"w\">   </span><span class=\"mf\">939.9</span><span class=\"bp\">%</span>\n</code></pre></div>\n<p>? I added a lot of code to a file that only had two trivial results before</p>",
        "id": 443933595,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718090911
    },
    {
        "content": "<p>Aaah, fair enough (-;</p>",
        "id": 443933646,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1718090931
    },
    {
        "content": "<p>I didn't realise it was <em>that</em> small before.</p>",
        "id": 443933671,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1718090942
    },
    {
        "content": "<p>We could create another file between Basic and Lemmas, but then I'd like suggestions for a name :)</p>",
        "id": 443933759,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718090979
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13702\">#13702</a> is also up for review</p>",
        "id": 443934186,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718091116
    },
    {
        "content": "<p>Can we have <code>{Defs,Basic,Lemmas}</code>?</p>",
        "id": 443934548,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1718091233
    },
    {
        "content": "<p>Otoh, maybe these +16 imports aren't what we should be focussing on</p>",
        "id": 443934623,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1718091250
    },
    {
        "content": "<p>If you think it's useful, I can do that</p>",
        "id": 443951938,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718096690
    },
    {
        "content": "<p>I would like to have a look for myself first</p>",
        "id": 443958761,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718098826
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13738\">#13738</a> also up for review</p>",
        "id": 444097891,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718138774
    },
    {
        "content": "<p>If somebody wants to review a wholly implausible performance win: <a href=\"https://github.com/leanprover-community/mathlib4/pull/13756\">#13756</a></p>",
        "id": 444217086,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718193908
    },
    {
        "content": "<p>Very nice <img alt=\":merge:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/18527.png\" title=\"merge\"></p>",
        "id": 444237608,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1718199045
    },
    {
        "content": "<p>A review on <a href=\"https://github.com/leanprover-community/mathlib4/pull/13738\">#13738</a> would be appreciated</p>",
        "id": 444402791,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718264243
    },
    {
        "content": "<p>Sorry, short on time today</p>",
        "id": 444404185,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718264780
    },
    {
        "content": "<p>Having a look</p>",
        "id": 444404637,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1718265000
    },
    {
        "content": "<p>LGTM</p>",
        "id": 444405397,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1718265302
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/444405397\">said</a>:</p>\n<blockquote>\n<p>LGTM</p>\n</blockquote>\n<p>Did you mean to put that on github? :)</p>",
        "id": 444411746,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718267497
    },
    {
        "content": "<p>Ahahah, yes sorry, I just had a look :P</p>",
        "id": 444412304,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1718267676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> are you planning to look at <a href=\"https://github.com/leanprover-community/mathlib4/pull/13713\">#13713</a>?</p>",
        "id": 444890512,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718474253
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/443933572\">said</a>:</p>\n<blockquote>\n<p>There's now also a bunch of files that get +16 extra transitive imports. It's not a lot. But I wonder if we can reasonably split the file in a way that none of the files get more imports (modulo importing newly created files)...</p>\n</blockquote>\n<p>Update on that: We did mostly manage. Now only</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">Normed</span><span class=\"bp\">.</span><span class=\"n\">Group</span><span class=\"bp\">.</span><span class=\"n\">Hom</span>\n<span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">Normed</span><span class=\"bp\">.</span><span class=\"n\">Order</span><span class=\"bp\">.</span><span class=\"n\">Lattice</span>\n<span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">Normed</span><span class=\"bp\">.</span><span class=\"n\">Group</span><span class=\"bp\">.</span><span class=\"n\">AddTorsor</span>\n<span class=\"n\">Analysis</span><span class=\"bp\">.</span><span class=\"n\">NormedSpace</span><span class=\"bp\">.</span><span class=\"n\">LinearIsometry</span>\n</code></pre></div>\n<p>get 17 new imports</p>",
        "id": 445721476,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718840275
    },
    {
        "content": "<p>Could you say why they get more imports?</p>",
        "id": 445734034,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718846519
    },
    {
        "content": "<p>That's because we are moving some lemmas from <code>Analysis.Normed.Group.Basic</code> to <code>Analysis.Normed.Group.Lemmas</code> and those files need those lemmas, but also <code>Analysis.Normed.Group.Lemmas</code> has 17 more imports than <code>Analysis.Normed.Group.Basic</code></p>",
        "id": 445780490,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718869983
    },
    {
        "content": "<p>If you look at the PR, you will see that the balance of imports is a net positive</p>",
        "id": 445780614,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718870021
    },
    {
        "content": "<p>Can I have a review on <a href=\"https://github.com/leanprover-community/mathlib4/pull/13945\">#13945</a>?</p>",
        "id": 445931122,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718910163
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/The.20long.20pole.20in.20mathlib/near/445780614\">said</a>:</p>\n<blockquote>\n<p>If you look at the PR, you will see that the balance of imports is a net positive</p>\n</blockquote>\n<p>Updated results for the pole in <a href=\"https://github.com/leanprover-community/mathlib4/pull/13713\">#13713</a></p>",
        "id": 445970842,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718925819
    },
    {
        "content": "<p>A simpler change is up for review at <a href=\"https://github.com/leanprover-community/mathlib4/pull/14035\">#14035</a></p>",
        "id": 446326130,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1719090405
    },
    {
        "content": "<p>Anyone up for a review in <a href=\"https://github.com/leanprover-community/mathlib4/pull/13684\">#13684</a>?</p>",
        "id": 446704390,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1719259045
    }
]