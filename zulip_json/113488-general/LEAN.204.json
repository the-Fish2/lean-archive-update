[
    {
        "content": "<p>Hello, Is there a way to download LEAN4 Without using VS code?</p>",
        "id": 435337098,
        "sender_full_name": "MOHAMMAD",
        "timestamp": 1714033323
    },
    {
        "content": "<p>You can install the compiler using lean version manager called elan, see <a href=\"https://github.com/leanprover/elan\">here</a>. You can create a project and build a project using the lean 4 package manager called lake that is installed along lean4. </p>\n<p>But neither of them give you an interactive theorem proving view. So if you actually would like to prove anything in lean, it is recommended to use any editor that uses the language server procotol - such as vscode, emcas and others</p>",
        "id": 435340164,
        "sender_full_name": "Ira Fesefeldt",
        "timestamp": 1714034328
    },
    {
        "content": "<p>I think neovim is currently the only other supported editor besides those two</p>",
        "id": 435386859,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714050907
    },
    {
        "content": "<p>With emacs being only half supported (I'm the current maintainer and I don't have much time for it)</p>",
        "id": 435577518,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714134937
    },
    {
        "content": "<p>There's also the lean web playground (<a href=\"http://live.lean-lang.org\">live.lean-lang.org</a>) but that's basically VSCode with extra steps</p>",
        "id": 435590863,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1714139491
    },
    {
        "content": "<p>Is there a way to package leanweb into a self-contained executable that can be run locally</p>",
        "id": 435624058,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714150059
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/113488-general/topic/LEAN.204/near/435624058\">said</a>:</p>\n<blockquote>\n<p>Is there a way to package leanweb into a self-contained executable that can be run locally</p>\n</blockquote>\n<p>Yes that's called \"download vscode\" ;)</p>\n<p>But jokes aside, you can download <a href=\"https://github.com/leanprover-community/lean4web\">lean4web from github</a> install <code>npm</code> and run your local server using <code>npm start</code>. So any of of these steps could be bundled,<br>\nfor example using a docker container. There might also be other tools to bundle react/npm apps, but I dont know them.</p>\n<p>The question is why though? What's the benefit of having a local bundle running a (slightly broken) trimmed down \"monaco editor\" locally (which doesn't really support saving your progress) instead of using vscode? If there is a good use case, you can open an <a href=\"https://github.com/leanprover-community/lean4web\">feature request issue</a>.</p>",
        "id": 435849663,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1714294628
    },
    {
        "content": "<p>Sometimes I just like a playground I can open with one click without the internet (especially when Deutsche Bahn decides that wasting an hour of my time is cheaper than adding more rail lines). It might also come in handy for demos where people don't have to install lean, just download an AppImage or something.</p>",
        "id": 435851390,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714296086
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/113488-general/topic/LEAN.204/near/435851390\">said</a>:</p>\n<blockquote>\n<p>Sometimes I just like a playground I can open with one click without the internet</p>\n</blockquote>\n<p>Is that not vscode?</p>",
        "id": 435851463,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714296132
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/LEAN.204/near/435851463\">said</a>:</p>\n<blockquote>\n<p>Is that not vscode?</p>\n</blockquote>\n<p>Minus installation, setup time, and debugging errors</p>",
        "id": 435851514,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714296194
    },
    {
        "content": "<p>It isn't a complete setup. Just a GUI app serving the same role as utop or the ipython terminal.</p>",
        "id": 435851601,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714296265
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/113488-general/topic/LEAN.204/near/435851514\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/LEAN.204/near/435851463\">said</a>:</p>\n<blockquote>\n<p>Is that not vscode?</p>\n</blockquote>\n<p>Minus installation, setup time, and debugging errors</p>\n</blockquote>\n<p>Those steps will surely happen when installing leanweb too?</p>",
        "id": 435852969,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714297576
    },
    {
        "content": "<p>Presumably not if they ship with an image of some sort?</p>",
        "id": 435856146,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714299058
    },
    {
        "content": "<p>Why not ship vscode in an image of some sort, if you want an image?</p>",
        "id": 435873602,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714309722
    },
    {
        "content": "<p>I think for most users, installing such an image is more work than installing vscode</p>",
        "id": 435873611,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714309741
    },
    {
        "content": "<p>didn't we use to have some \"try-lean bundles\"? Are they still a thing and do they work this way?</p>",
        "id": 435874381,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1714310567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/LEAN.204/near/435873602\">said</a>:</p>\n<blockquote>\n<p>Why not ship vscode in an image of some sort, if you want an image?</p>\n</blockquote>\n<p>Because VSCode is a complicated beast. A playground should take you straight to the editor with an empty math project already setup. It is not meant to be used for projects, so it doesn't have to support all the complex features of vscode. The playground should not store user files unless explicitly asked to. The basic project being used should always be a fresh project. </p>\n<p>To a user it should not even show a file (much like the web editor). If the user wants, they can save files to a separate location</p>",
        "id": 435878731,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714314713
    },
    {
        "content": "<p>In addition it must handle updates in the background. Its job is to provide newbies the latest and greatest lean has (toolchain, mathlib, paperproof, etc) in a consistent manner and let  users fiddle around. It should not be offering features for complex project management. (EDIT : This is basically what lean web already does)</p>",
        "id": 435879198,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714315084
    },
    {
        "content": "<p>Webpage in a container seems strictly worse to me than a webpage, but <span class=\"user-mention\" data-user-id=\"466334\">@Shreyas Srinivas</span> if you wanted to build and maintain such an image we could find out how useful it was!</p>",
        "id": 435913111,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714342328
    },
    {
        "content": "<p>I'll try</p>",
        "id": 435913593,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714342839
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466334\">Shreyas Srinivas</span> <a href=\"#narrow/stream/113488-general/topic/LEAN.204/near/435878731\">said</a>:</p>\n<blockquote>\n<p>Because VSCode is a complicated beast. A playground should take you straight to the editor with an empty math project already setup.</p>\n</blockquote>\n<p>Is this different from having an empty math project on your machine that you just reuse?</p>",
        "id": 435913988,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714343271
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> As far as I understand, the idea is that new users download 1 file, run it, and get a preconfigured VSCode+mathlib+empty project.</p>",
        "id": 435921363,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1714350420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"466334\">@Shreyas Srinivas</span> if you build anything thelike based on lean4web, we can maybe have github CI in the lean4web repo automatically create and publish it. (only thing I wouldnt know how to do is testing in CI whether the image is working correctly)</p>",
        "id": 435976909,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1714376616
    },
    {
        "content": "<p>What Yury says. The idea is people don't think about setup or files and folder structure at all. Just download a fancy electron app and give it a spin. Once they like it, they can setup lean properly with vscode. And also it might be handy for trying out stuff from time to time</p>",
        "id": 436006046,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714385878
    },
    {
        "content": "<p>Vs Code can be stripped down/reconfigured significantly with a little bit of work until it acts effectively like a playground. I like to do something like this when learning a language so I just double-clip an icon and get a fresh environment to mess about in. </p>\n<p>Something I haven't tried but should be manageable is to compress everything you need into a single file and write a script that sets everything up without needing an internet connection. You don't get the newest version or anything. </p>\n<p>That's a bit easier on an end user than configuring Vs Code from scratch, though just a bit! You would still need to maintain — and they still need to acquire — the right file for their environment.</p>",
        "id": 436333070,
        "sender_full_name": "Mark Fischer",
        "timestamp": 1714502617
    },
    {
        "content": "<p>Aren’t we reinventing the trylean bundles here?</p>",
        "id": 436333597,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1714502811
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/LEAN.204/near/436333597\">said</a>:</p>\n<blockquote>\n<p>Aren’t we reinventing the trylean bundles here?</p>\n</blockquote>\n<p>There was a discussion about this after the port. I am not sure it ever reached fruition.</p>",
        "id": 436354466,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714511372
    },
    {
        "content": "<p>Yes, we are reinventing the bundles, but this is still something that needs to be done for Lean 4. It would be great if someone enthusiastic about bundles set one up, along with CI that will keep it tested and fresh.</p>",
        "id": 436360458,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714514288
    },
    {
        "content": "<p>I will give it a shot. Time is my main constraint, so it might take a few weeks</p>",
        "id": 436360599,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1714514361
    }
]