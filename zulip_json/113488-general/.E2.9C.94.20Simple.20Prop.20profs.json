[
    {
        "content": "<p>Hello, I'm using these two auxiliary theorems for a prof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">aux1</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">↔</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">↔</span> <span class=\"bp\">¬</span><span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Iff.intro</span>\n  <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">a_1</span>\n    <span class=\"n\">simp_all</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">true_iff</span><span class=\"o\">,</span> <span class=\"n\">not_false_eq_true</span><span class=\"o\">]</span>\n  <span class=\"bp\">·</span> <span class=\"n\">intro</span> <span class=\"n\">a_1</span>\n    <span class=\"n\">simp_all</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">iff_false</span><span class=\"o\">,</span> <span class=\"n\">not_not</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">aux2</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">↔</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp_all</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">eq_iff_iff</span><span class=\"o\">,</span> <span class=\"n\">not_false_eq_true</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Do you know some way to make them directly with exact for using them inline?</p>",
        "id": 410162325,
        "sender_full_name": "Iván Renison",
        "timestamp": 1703687954
    },
    {
        "content": "<p>The first one is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=not_iff#doc\">docs#not_iff</a></p>",
        "id": 410162954,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703688222
    },
    {
        "content": "<p>The second one is <code>eq_iff_iff.not.1</code></p>",
        "id": 410163403,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703688303
    },
    {
        "content": "<p>Thank you</p>",
        "id": 410163843,
        "sender_full_name": "Iván Renison",
        "timestamp": 1703688389
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"646655\">Iván Renison</span> has marked this topic as resolved.</p>",
        "id": 410163857,
        "sender_full_name": "Notification Bot",
        "timestamp": 1703688392
    },
    {
        "content": "<p><code>not_iff</code> puts the not on the other side, though. <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=not_iff_comm#doc\">docs#not_iff_comm</a> helps with that</p>",
        "id": 410164411,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1703688509
    },
    {
        "content": "<p>Whoops, I checked that the <code>¬</code> was on the correct side but clearly I should get new glasses.</p>",
        "id": 410164961,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703688812
    },
    {
        "content": "<p>(I'm surprised there doesn't seem to be a symmetric variant next to it)</p>",
        "id": 410170162,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1703691354
    }
]