[
    {
        "content": "<p>By faster, I measure the response time with my eye, and neovim seems to update the infoview faster than emacs and code. Here is a recording that demonstrates the phenomenon:<br>\n<a href=\"/user_uploads/3121/SVet86i_8sX0n2_SAAKP_13-/2024-04-08-21-35-28.mkv\">2024-04-08-21-35-28.mkv</a></p>",
        "id": 432046954,
        "sender_full_name": "Abdullah Uyu",
        "timestamp": 1712602607
    },
    {
        "content": "<p>In Emacs, most of the delay is just <code>lsp-mode</code> waiting in case there are more keystrokes, before sending a refresh request. This is <code>lsp-idle-delay</code> (default 0.5 (seconds)) and you can customize it.</p>",
        "id": 432052828,
        "sender_full_name": "Richard Copley",
        "timestamp": 1712604734
    },
    {
        "content": "<p>Is there an analogous delay in VS Code?</p>",
        "id": 432053404,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1712604961
    },
    {
        "content": "<p>Oh yes, now emacs and code seem equal for me.</p>",
        "id": 432053455,
        "sender_full_name": "Abdullah Uyu",
        "timestamp": 1712604964
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Why.20is.20neovim.20infoview.20faster.20than.20of.20emacs.20and.20code.3F/near/432053404\">said</a>:</p>\n<blockquote>\n<p>Is there an analogous delay in VS Code?</p>\n</blockquote>\n<p>(I can't answer that.)</p>",
        "id": 432059045,
        "sender_full_name": "Richard Copley",
        "timestamp": 1712607056
    },
    {
        "content": "<p>Ok, indeed, that seems a significant difference. Maybe I should look into using neovim for lean development :-)</p>",
        "id": 432069284,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1712611269
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Why.20is.20neovim.20infoview.20faster.20than.20of.20emacs.20and.20code.3F/near/432053404\">said</a>:</p>\n<blockquote>\n<p>Is there an analogous delay in VS Code?</p>\n</blockquote>\n<p>There's an elaboration delay setting that you can configure (its default is at 200ms, I believe the NeoVim plugin just sets it to 0ms by default).</p>",
        "id": 432073018,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1712612809
    },
    {
        "content": "<p>It shouldn't affect just moving the cursor, though</p>",
        "id": 432075928,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1712614376
    },
    {
        "content": "<p>I didn't know about this myself, but it turns out that the VS Code InfoView has an additional 'Infoview: Debounce Time' setting that is at 50ms by default to prevent the InfoView from re-rendering when quickly moving the text cursor a lot. If you want the InfoView to update more quickly when the text cursor is moved, you can reduce the debounce time further.</p>",
        "id": 440301598,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716463413
    },
    {
        "content": "<p>We set the debounce time to 0 by default.</p>",
        "id": 440304392,
        "sender_full_name": "Julian Berman",
        "timestamp": 1716464439
    },
    {
        "content": "<p>Really that was originally to avoid whatever race condition in the server causes neovim to hang.</p>",
        "id": 440304413,
        "sender_full_name": "Julian Berman",
        "timestamp": 1716464450
    },
    {
        "content": "<p>But it does certainly make things feel snappier too.</p>",
        "id": 440304424,
        "sender_full_name": "Julian Berman",
        "timestamp": 1716464459
    },
    {
        "content": "<p>Oh you said that already previously.</p>",
        "id": 440304546,
        "sender_full_name": "Julian Berman",
        "timestamp": 1716464504
    },
    {
        "content": "<p>It's also worth pointing out that the elaboration delay setting is dead code now. The post-incrementality language server uses the <code>server.reportDelayMs</code> command line option to reduce flickering and the edit delay setting is not used at all anymore.</p>",
        "id": 440305681,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716464978
    }
]