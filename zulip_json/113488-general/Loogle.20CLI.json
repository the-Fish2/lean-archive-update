[
    {
        "content": "<p>I'm trying to run loogle from the command line. I followed the instructions at the <a href=\"https://github.com/nomeata/loogle\">github repo</a> and managed (with some modifications, see <a href=\"https://github.com/nomeata/loogle/issues/10\">issue #10</a> there) to build it. Running <code>lake exe loogle --help</code> produces the expected output. But <code>lake exe loogle 'Real.sin'</code>just runs for a while, prints nothing and stops. Where does the output go? <span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span></p>",
        "id": 409833602,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703442550
    },
    {
        "content": "<p>You might be the first to try :-)</p>",
        "id": 409833807,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1703442782
    },
    {
        "content": "<p>Is this on Linux or OSX?</p>",
        "id": 409833817,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1703442802
    },
    {
        "content": "<p>Linux SuSe Tumbleweed.</p>",
        "id": 409833824,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703442814
    },
    {
        "content": "<p>Ah, it says so in the issue</p>",
        "id": 409833833,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1703442831
    },
    {
        "content": "<p>Maybe try to remove all the seccomp stuff from the Loogle main file (comment out the import and the one function call) to rule out issues related to that</p>",
        "id": 409833895,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1703442880
    },
    {
        "content": "<p>The function call is <code>Seccomp.enable</code> on line 166,  I assume?</p>",
        "id": 409833985,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703442974
    },
    {
        "content": "<p>Yes!</p>",
        "id": 409834015,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1703443031
    },
    {
        "content": "<p>OK. Commenting out the two lines and building results in me getting output on stdout. Thanks!</p>",
        "id": 409834016,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703443032
    },
    {
        "content": "<p>What is the purpose of the seccomp stuff?</p>",
        "id": 409834123,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703443152
    },
    {
        "content": "<p>(Seeing that it works well without...)</p>",
        "id": 409834130,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703443167
    },
    {
        "content": "<p>It kills he process when it tries to do something unexpected; I use this on the live site as a security measure. Locally with trusted input it should not be necessary; if more people will use it locally I should build it without by default</p>",
        "id": 409834285,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1703443369
    },
    {
        "content": "<p>What do you plan to do with it?</p>",
        "id": 409834296,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1703443392
    },
    {
        "content": "<p>I was trying to do some statistics on lemma names, for which it seemed to be useful to get the loogle output in a file.</p>",
        "id": 409834305,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703443429
    },
    {
        "content": "<p>See <a href=\"#narrow/stream/287929-mathlib4/topic/mem_xxx.28_iff.29/near/409834727\">here</a>.</p>",
        "id": 409834784,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703444071
    },
    {
        "content": "<p>Hope it's useful! Although for statistics on names it might be easier to import Mathlib and use <code>run_cmd</code> to get the list of all names and do stuff with it</p>",
        "id": 409835649,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1703444795
    },
    {
        "content": "<p>That smells of metaprogramming, which I have not yet done in Lean4, so getting the loogle CLI and using <code>grep</code> was the faster way for me right now.</p>",
        "id": 409835769,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703444933
    }
]