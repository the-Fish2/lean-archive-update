[
    {
        "content": "<p>From v4.6.0 simproc was introduced. <br>\n<a href=\"https://github.com/leanprover/lean4/releases/tag/v4.6.0\">https://github.com/leanprover/lean4/releases/tag/v4.6.0</a></p>\n<p>But what is 'newly' possible with the introduction of simproc? The examples given in the release notes seem to be sufficient for conventional simp.</p>",
        "id": 433597602,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1713298446
    },
    {
        "content": "<p>What is newly possible with simproc in libraries such as mathlib?</p>",
        "id": 433597703,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1713298490
    },
    {
        "content": "<p>One standard example of a <code>simproc</code> is that if the condition <code>c</code> in <code>if c then h else h'</code> simplifies to true then this can be replaced by just <code>h</code> before <code>simp</code> has a chance to simplify <code>h'</code> which is what it would normally do as it works bottom up.</p>",
        "id": 433598202,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1713298684
    },
    {
        "content": "<p>simp made faster?</p>",
        "id": 433598760,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1713298931
    },
    {
        "content": "<p><a href=\"https://lean-lang.org/blog/2024-2-29-lean-460/\">https://lean-lang.org/blog/2024-2-29-lean-460/</a> has more examples</p>",
        "id": 433606579,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1713301327
    }
]