[
    {
        "content": "<p>I attempted to make lean-upgrade-action work for lean 4 in <a href=\"https://github.com/leanprover-contrib/lean-upgrade-action/pull/10\">https://github.com/leanprover-contrib/lean-upgrade-action/pull/10</a> , but I don't know how to test it. Any suggestions?</p>\n<p>CC <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span></p>",
        "id": 436862789,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714734725
    },
    {
        "content": "<p>I think a rewrite without using python, so it can be used in github CI as an action, would be worthwhile.</p>",
        "id": 436974473,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714779457
    },
    {
        "content": "<p>See also some related work happening at <a href=\"https://github.com/leanprover/lean4/issues/3950\">https://github.com/leanprover/lean4/issues/3950</a>. I think for now <span class=\"user-mention\" data-user-id=\"699684\">@Austin Letson</span> is thinking that the upgrade action (which would have to be triggered via cron) is out of scope for the initial version.</p>",
        "id": 436974840,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714779709
    },
    {
        "content": "<p>Isn't this an action?</p>",
        "id": 436995122,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714802114
    },
    {
        "content": "<p>Oh, hmm, sorry, you're absolutely right. It seems pretty heavy weight for an action to rely on docker and python, in any case!</p>",
        "id": 436999178,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714806380
    },
    {
        "content": "<p>I have no opinion. My idea was \"something is better than nothing\" :)</p>",
        "id": 437000674,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714807957
    },
    {
        "content": "<p>Yes, the use of python for this action is rather heavy handed. How about a <a href=\"https://docs.github.com/en/actions/creating-actions/creating-a-composite-action\">composite action</a> for simplicity? This is what is being done for the <a href=\"https://github.com/austinletson/lean-standard-action/blob/main/action.yml\">testing action</a>. </p>\n<p>We have been testing <a href=\"https://github.com/mseri/BET/blob/main/.github/workflows/update.yml\">this workflow</a> which does something like the lean-upgrade-action. We could use this as the basis for the composite workflow so it is something easy for user to insert into their own project.</p>\n<p>In which case, what precisely do we want the action to do? Check for update and then... open PR? auto update? open issue if there something which requires human intervention?</p>",
        "id": 437004673,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1714812354
    },
    {
        "content": "<p>Auto update if possible, open an issue otherwise</p>",
        "id": 437006203,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714814016
    },
    {
        "content": "<p>This existed for lean 3 and worked well. I'd prefer having something similar instead of / while waiting for a complete redesign</p>",
        "id": 437006276,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714814084
    },
    {
        "content": "<p>OK, I'll come back with a solid python-free version before the end of the weekend.</p>",
        "id": 437007254,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1714815068
    },
    {
        "content": "<p>Ideally:</p>\n<ol>\n<li>There would be a choice between auto-update and open a PR. (For some repos it's just not acceptable to have a bot push to master.)</li>\n<li>When there is a problem, we check if there is already an open issue about problems updating, and don't create anymore noise if so.</li>\n</ol>",
        "id": 437090066,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714895889
    },
    {
        "content": "<p>That's fine, the action can have default behaviour but also can be configured with options to suit different use cases.</p>",
        "id": 437209595,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1714980954
    },
    {
        "content": "<p>Here is a complete draft version of the action: <a href=\"https://github.com/oliver-butterley/lean-update-action\">https://github.com/oliver-butterley/lean-update-action</a></p>\n<p>It has options for various different behaviour as requested above. There are a few niceties that I plan to add soon but all main functionality is present. I've tested it in various scenarios and seems to be fine but definitely an alpha version for the moment. </p>\n<p>I would like to fix precisely how the action should behave. Others who have used Lean much more than me need to say what user experience is desired from such an action. All feedback very welcome and then I can modify to be it just as wanted!</p>",
        "id": 437493633,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1715101090
    },
    {
        "content": "<p>Currently the possibility to commit or open PRs or issues is internal to the action. However, after creating this version, I thought it might be better to have a more minimal action that just does the core behaviour of trying to update lean and checking if it is fine. Then it can be used in workflows for any given repo together with other actions to do the required follow tasks. </p>\n<p>Like this seems rather cleaner to me and flexible for customization. Additionally I would have clear documentation which explains exactly the workflow <code>yml</code> to use for common use cases and so it was very easy for those with zero experience of github actions.</p>",
        "id": 437494614,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1715101459
    },
    {
        "content": "<p>As long as I can set it up with minimal effort and maintenance, I don't have an opinion on the design :)</p>",
        "id": 437496800,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715102240
    },
    {
        "content": "<p>My suggestion is to keep the functionality you have now, but with the option of creating a new PR left to a separate action, like <code>gr2m/create-or-update-pull-request-action@v1.x</code></p>\n<p>Here is an example of a repo I'm aware of that does a daily scheduled check against an upstream, changes some files accordingly, and makes a PR with the changes:<br>\n<a href=\"https://github.com/kuelumbus/rdkit-pypi/blob/09b99c2886c41d8da303140a925d12c5f41e7882/.github/workflows/check_rdkit_version.yml#L20-L48\">https://github.com/kuelumbus/rdkit-pypi/blob/09b99c2886c41d8da303140a925d12c5f41e7882/.github/workflows/check_rdkit_version.yml#L20-L48</a></p>",
        "id": 437497792,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1715102651
    },
    {
        "content": "<p>Ah, I see, your action is inlining a third-party action in a workflow step</p>",
        "id": 437497977,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1715102730
    },
    {
        "content": "<p>So, in that case, I have to say that <code>run: lake update</code> needs a warning -- that it should only be that for those that are dependent on Mathlib, not Mathlib forks/clones</p>",
        "id": 437498221,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1715102837
    },
    {
        "content": "<p>Additionally, if the action, on fail, makes an issue -- and it is on cron, you'd need it to be aware of already existing issues so that you don't get daily fail issues created</p>",
        "id": 437498499,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1715102960
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/113488-general/topic/lean-upgrade-action/near/437498499\">said</a>:</p>\n<blockquote>\n<p>Additionally, if the action, on fail, makes an issue -- and it is on cron, you'd need it to be aware of already existing issues so that you don't get daily fail issues created</p>\n</blockquote>\n<p>Yes, this can be done by having the issue with a particular name and not open another if such an issue is still open.</p>",
        "id": 437498719,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1715103062
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/113488-general/topic/lean-upgrade-action/near/437498221\">said</a>:</p>\n<blockquote>\n<p>So, in that case, I have to say that <code>run: lake update</code> needs a warning -- that it should only be that for those that are dependent on Mathlib, not Mathlib forks/clones</p>\n</blockquote>\n<p>Good point. Actually this could be tested inside the action before running the update.</p>",
        "id": 437498825,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1715103122
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"699684\">@Austin Letson</span>  Will the <a href=\"https://github.com/leanprover/lean-action\">lean action you are working on</a> have the functionality that it can be asked to check for available updates and then check if the updated version builds? </p>\n<p>In which case it might be better just writing documentation which explains how to use that action in a workflow for update tasks with auto committing / opening PRs / opening issues.</p>",
        "id": 437500209,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1715103693
    },
    {
        "content": "<p>The action I am working on currently doesn't currently have this functionality. It is designed to be run on push/ when opening a PR (not run periodically).</p>\n<p>I think it is possible to support both use cases (push/PR and periodic) with a single action or a single repository, but I haven't explored in depth.</p>\n<p>Either way, I agree we should align the documentation of the different actions available to lean users.</p>",
        "id": 437676867,
        "sender_full_name": "Austin Letson",
        "timestamp": 1715182874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"699684\">@Austin Letson</span>  Thanks for the clarification. Also, let me know if I can help with particular tasks for <code>lean-action</code>.  Sounds like it is good to complete that to a solid first stage before adding other features.</p>",
        "id": 437870369,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1715281315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"613177\">@Oliver Butterley</span> Thanks! A few things which would be helpful if they interest you:</p>\n<ul>\n<li>I am in the process of creating an <a href=\"https://github.com/leanprover/lean-action/issues/4\">alpha release</a> to get feedback from the lean community. If you know of existing lean projects which would be candidates for alpha testing in their CI, please let me know!</li>\n<li>Since you have some experience with GitHub actions, I would appreciate any feedback on the implementation of <code>lean-action</code>, mainly the <a href=\"https://github.com/leanprover/lean-action/blob/main/action.yml\">action.yml</a>, regarding improvements or missing best practices. Feel free to create issues in the repo or message on Zulip and I can create an issue. </li>\n<li>There are a few <a href=\"https://github.com/leanprover/lean-action/issues\">existing issues</a> already created which may be of interest to you. I wasn't planning to include these in the initial alpha release in order to get feedback more quickly, but I don't have a concrete plan.</li>\n</ul>",
        "id": 438115685,
        "sender_full_name": "Austin Letson",
        "timestamp": 1715440661
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"699684\">@Austin Letson</span>, your alpha release testing looks great! I think it's time to test this in production.</p>\n<p>We're initially restricted to projects that already have <code>lake test</code> set up (but this is something that I'm hoping will expand quickly in the near term), I think.</p>\n<p>Batteries may well be a candidate as soon as <a href=\"https://github.com/leanprover-community/batteries/pull/787\">batteries#787</a> is merged.</p>",
        "id": 438219307,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715556123
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/import-graph\">https://github.com/leanprover-community/import-graph</a> is now set up for <code>lake test</code>, so is another candidate for using <code>lean-action</code>.</p>",
        "id": 438221621,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715558598
    },
    {
        "content": "<p>Similarly <code>Aesop</code> is now using <code>lake test</code>, and could also try out <code>lean-action</code>.</p>",
        "id": 438222884,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715559888
    },
    {
        "content": "<p>Yay! <span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span>  one thing I will note here is that projects which don't use <code>lake test</code> can still use <code>lean-action</code> as long as they set <code>test: false</code> (see <a href=\"https://github.com/leanprover/lean-action?tab=readme-ov-file#dont-run-lake-test-or-use-mathlib-cache\">this example</a>)</p>",
        "id": 438353591,
        "sender_full_name": "Austin Letson",
        "timestamp": 1715604574
    },
    {
        "content": "<p>Created PRs for <a href=\"https://github.com/leanprover-community/import-graph/pull/9\">import-graph</a> and <a href=\"https://github.com/leanprover-community/aesop/pull/136\">Aesop</a>.</p>",
        "id": 438358902,
        "sender_full_name": "Austin Letson",
        "timestamp": 1715605926
    },
    {
        "content": "<p>I believe we  need to add a few more features to <code>lean-action</code> before it can fully support the current CI in <code>batteries</code>. <code>batteries</code> calls <code>lake build</code> with<code>-Kwerror</code>(<a href=\"https://github.com/leanprover-community/batteries/blob/main/.github/workflows/build.yml#L28\">link</a>) which is configured <a href=\"https://github.com/leanprover-community/batteries/blob/main/lakefile.lean#L8\">here</a> in <code>lakefile.lean</code>. </p>\n<p>Currently <code>lean-action</code> doesn't support passing options to <code>lake</code> through <code>-K</code>. I have created an issue for it <a href=\"https://github.com/leanprover/lean-action/issues/15\">here</a>.</p>",
        "id": 438361849,
        "sender_full_name": "Austin Letson",
        "timestamp": 1715606659
    },
    {
        "content": "<p>I merged the import-graph PR.</p>",
        "id": 438371115,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715609053
    },
    {
        "content": "<p>That will also be an issue for projects depending on docgen only in ci, until the setup for that changes (which I believe is planned, but I don't know the timeline)</p>",
        "id": 438371157,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715609064
    },
    {
        "content": "<p>If there's no sign of trouble from that in the next day or two (hopefully we can think of some stress tests?) we can proceed with aesop.</p>",
        "id": 438371183,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715609075
    },
    {
        "content": "<p>I think we're hoping for <code>lake install</code> in <code>v4.9.0-rc1</code> (June 1?), but there's a decent chance we don't get it right first time to actually remove the <code>meta if</code>s.</p>",
        "id": 438371331,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715609115
    },
    {
        "content": "<p>I've merged <a href=\"https://github.com/leanprover-community/aesop/pull/136\">https://github.com/leanprover-community/aesop/pull/136</a>, bringing lean-action to Aesop.</p>",
        "id": 438544364,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715681844
    }
]