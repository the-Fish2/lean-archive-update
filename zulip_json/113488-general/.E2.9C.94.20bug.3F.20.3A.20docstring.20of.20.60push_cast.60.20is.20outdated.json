[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"c\">/-</span>\n<span class=\"cm\">syntax \"push_cast\"... [Lean.Parser.Tactic.pushCast]</span>\n<span class=\"cm\">  `push_cast` rewrites the goal to move casts inward, toward the leaf nodes.</span>\n<span class=\"cm\">  This uses `norm_cast` lemmas in the forward direction.</span>\n<span class=\"cm\">  For example, `↑(a + b)` will be written to `↑a + ↑b`.</span>\n<span class=\"cm\">  It is equivalent to `simp only with push_cast`.</span>\n<span class=\"cm\">  It can also be used at hypotheses with `push_cast at h`</span>\n<span class=\"cm\">  and with extra simp lemmas with `push_cast [int.add_zero]`.</span>\n\n<span class=\"cm\">  ```lean</span>\n<span class=\"cm\">  example (a b : ℕ) (h1 : ((a + b : ℕ) : ℤ) = 10) (h2 : ((a + b + 0 : ℕ) : ℤ) = 10) :</span>\n<span class=\"cm\">    ((a + b : ℕ) : ℤ) = 10 :=</span>\n<span class=\"cm\">  begin</span>\n<span class=\"cm\">    push_cast,</span>\n<span class=\"cm\">    push_cast at h1,</span>\n<span class=\"cm\">    push_cast [int.add_zero] at h2,</span>\n<span class=\"cm\">  end</span>\n<span class=\"cm\">  ```</span>\n<span class=\"cm\">-/</span>\n<span class=\"k\">#help</span> <span class=\"n\">tactic</span> <span class=\"n\">push_cast</span>\n</code></pre></div>\n<p>The syntax of above lean code block seems to be lean3's one.</p>",
        "id": 433128854,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1713095831
    },
    {
        "content": "<p>By the way, is there any good way to keep the code examples in docstrings up to date?<br>\nI hear that some programming languages allow you to run the example code in the docstring. Should Lean do the same?</p>",
        "id": 433129484,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1713096315
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span> is working on that.</p>",
        "id": 433130085,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1713096919
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> Is this a bug?</p>",
        "id": 433150513,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1713115227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"626349\">@Asei Inoue</span> No, this is not a bug. It's simply a non-updated docstring. I've made some updates: <a href=\"https://github.com/leanprover/lean4/pull/3908\">lean4#3908</a></p>",
        "id": 433156808,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713121195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> Thanks!</p>",
        "id": 433212022,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1713163501
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> has marked this topic as resolved.</p>",
        "id": 433212043,
        "sender_full_name": "Notification Bot",
        "timestamp": 1713163507
    }
]