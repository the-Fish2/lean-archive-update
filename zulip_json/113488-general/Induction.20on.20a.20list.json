[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Subgroup.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.Notation</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Fin.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Sqrt</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.NonsingularInverse</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.GeneralLinearGroup</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.Reflection</span>\n\n\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Real.Sqrt</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.Notation</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matrix.Basic</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.LinearAlgebra.Matrix.GeneralLinearGroup</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.PseudoMetric</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.FreeGroup.Basic</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">0</span>\n\n\n<span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n<span class=\"kd\">def</span> <span class=\"n\">matrix_a</span>   <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span> <span class=\"bp\">!!</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">Real.sqrt</span> <span class=\"mi\">2</span><span class=\"bp\">;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">Real.sqrt</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">matrix_a'</span>  <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span> <span class=\"bp\">!!</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">Real.sqrt</span> <span class=\"mi\">2</span><span class=\"bp\">;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">Real.sqrt</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">matrix_b</span>   <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span> <span class=\"bp\">!!</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">Real.sqrt</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">;</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">Real.sqrt</span> <span class=\"mi\">2</span><span class=\"o\">),</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">matrix_b'</span>  <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span> <span class=\"bp\">!!</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">Real.sqrt</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">;</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">Real.sqrt</span> <span class=\"mi\">2</span><span class=\"o\">),</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">matrix_one</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"kd\">end</span> <span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">matrix_a_inverse</span> <span class=\"o\">:</span>  <span class=\"n\">matrix_a</span> <span class=\"bp\">*</span> <span class=\"n\">matrix_a'</span> <span class=\"bp\">=</span> <span class=\"n\">matrix_one</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">matrix_a</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">matrix_a'</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">matrix_one</span><span class=\"o\">]</span>\n  <span class=\"n\">norm_num</span>\n  <span class=\"n\">ext</span> <span class=\"n\">h1</span> <span class=\"n\">h2</span>\n  <span class=\"n\">fin_cases</span> <span class=\"n\">h1</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">Matrix.one_fin_three</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n\n  <span class=\"n\">simp</span>\n  <span class=\"n\">norm_num</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">mul_mul_mul_comm</span><span class=\"o\">]</span>\n  <span class=\"n\">norm_num</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">div_eq_mul_inv</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">Mathlib.Tactic.RingNF.add_neg</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sub_self</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">Matrix.one_fin_three</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n\n  <span class=\"n\">simp</span>\n  <span class=\"n\">ring</span>\n  <span class=\"n\">simp</span>\n  <span class=\"c1\">--rw [Real.sq_sqrt]</span>\n  <span class=\"n\">ring</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">Matrix.one_fin_three</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">matrix_a_det_neq_zero</span> <span class=\"o\">:</span> <span class=\"n\">Matrix.det</span> <span class=\"n\">matrix_a</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">matrix_a</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Matrix.det_fin_three</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">norm_num</span>\n  <span class=\"n\">ring</span>\n  <span class=\"n\">simp</span>\n  <span class=\"c1\">--rw [Real.sq_sqrt]</span>\n  <span class=\"n\">norm_num</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">matrix_a'_det_neq_zero</span> <span class=\"o\">:</span> <span class=\"n\">Matrix.det</span> <span class=\"n\">matrix_a'</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">matrix_a'</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Matrix.det_fin_three</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">norm_num</span>\n  <span class=\"n\">ring</span>\n  <span class=\"n\">simp</span>\n  <span class=\"c1\">--rw [Real.sq_sqrt]</span>\n  <span class=\"n\">norm_num</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">matrix_b_det_neq_zero</span> <span class=\"o\">:</span> <span class=\"n\">Matrix.det</span> <span class=\"n\">matrix_b</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">matrix_b</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Matrix.det_fin_three</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">norm_num</span>\n  <span class=\"n\">ring</span>\n  <span class=\"n\">simp</span>\n  <span class=\"c1\">--rw [Real.sq_sqrt]</span>\n  <span class=\"n\">norm_num</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">matrix_b'_det_neq_zero</span> <span class=\"o\">:</span> <span class=\"n\">Matrix.det</span> <span class=\"n\">matrix_b'</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">matrix_b'</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Matrix.det_fin_three</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">norm_num</span>\n  <span class=\"n\">ring</span>\n  <span class=\"n\">simp</span>\n  <span class=\"c1\">--rw [Real.sq_sqrt]</span>\n  <span class=\"n\">norm_num</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">matrix_one_det_neq_zero</span> <span class=\"o\">:</span> <span class=\"n\">Matrix.det</span> <span class=\"n\">matrix_one</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">matrix_one</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Matrix.det_fin_three</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Matrix.one_apply_ne</span><span class=\"o\">]</span>\n  <span class=\"n\">norm_num</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">ne_iff_lt_or_gt</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">exact</span> <span class=\"n\">Fin.ne_of_lt</span> <span class=\"o\">(</span><span class=\"n\">Nat.le.step</span> <span class=\"n\">Nat.le.refl</span><span class=\"o\">)</span>\n  <span class=\"n\">exact</span> <span class=\"n\">Fin.ne_of_gt</span> <span class=\"n\">Nat.le.refl</span>\n  <span class=\"n\">exact</span> <span class=\"n\">Fin.ne_of_lt</span> <span class=\"n\">Nat.le.refl</span>\n\n\n<span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n<span class=\"kd\">def</span> <span class=\"n\">gl_a</span>   <span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span> <span class=\"n\">Matrix.GeneralLinearGroup.mkOfDetNeZero</span> <span class=\"n\">matrix_a</span> <span class=\"n\">matrix_a_det_neq_zero</span>\n<span class=\"kd\">def</span> <span class=\"n\">gl_a'</span>  <span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span> <span class=\"n\">Matrix.GeneralLinearGroup.mkOfDetNeZero</span> <span class=\"n\">matrix_a'</span> <span class=\"n\">matrix_a'_det_neq_zero</span>\n<span class=\"kd\">def</span> <span class=\"n\">gl_b</span>   <span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span> <span class=\"n\">Matrix.GeneralLinearGroup.mkOfDetNeZero</span> <span class=\"n\">matrix_b</span> <span class=\"n\">matrix_b_det_neq_zero</span>\n<span class=\"kd\">def</span> <span class=\"n\">gl_b'</span>  <span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span> <span class=\"n\">Matrix.GeneralLinearGroup.mkOfDetNeZero</span> <span class=\"n\">matrix_b'</span> <span class=\"n\">matrix_b'_det_neq_zero</span>\n<span class=\"kd\">def</span> <span class=\"n\">gl_one</span> <span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span> <span class=\"n\">Matrix.GeneralLinearGroup.mkOfDetNeZero</span> <span class=\"n\">matrix_one</span> <span class=\"n\">matrix_one_det_neq_zero</span>\n<span class=\"kd\">end</span> <span class=\"kd\">noncomputable</span> <span class=\"kn\">section</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">erzeuger</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">gl_a</span><span class=\"o\">,</span> <span class=\"n\">gl_b</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"n\">Subgroup.closure</span> <span class=\"n\">erzeuger</span>\n\n\n\n\n\n<span class=\"n\">abbrev</span> <span class=\"n\">r_3</span> <span class=\"o\">:=</span> <span class=\"n\">Fin</span> <span class=\"mi\">3</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">r_2</span> <span class=\"o\">:=</span> <span class=\"n\">Fin</span> <span class=\"mi\">2</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">ℝ</span>\n<span class=\"kd\">def</span> <span class=\"n\">zero_one_zero</span> <span class=\"o\">:</span> <span class=\"n\">r_3</span> <span class=\"o\">:=</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">rotate</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">vec</span> <span class=\"o\">:</span> <span class=\"n\">r_3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">r_3</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Matrix</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">vecMul</span> <span class=\"n\">vec</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">L</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">r_3</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">Metric.ball</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">origin</span> <span class=\"o\">:</span> <span class=\"n\">r_3</span> <span class=\"o\">:=</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">L'</span> <span class=\"o\">:=</span> <span class=\"n\">L</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">origin</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">fixpunkt</span> <span class=\"o\">(</span><span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">r_3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">rotate</span> <span class=\"n\">p</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">D</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">L'</span> <span class=\"bp\">|</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">fixpunkt</span> <span class=\"n\">w</span> <span class=\"n\">p</span><span class=\"o\">}</span>\n\n\n<span class=\"c1\">-- Free group</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">erzeuger_t</span>\n  <span class=\"bp\">|</span> <span class=\"n\">gl_a</span> <span class=\"o\">:</span> <span class=\"n\">erzeuger_t</span>\n  <span class=\"bp\">|</span> <span class=\"n\">gl_b</span> <span class=\"o\">:</span> <span class=\"n\">erzeuger_t</span>\n  <span class=\"n\">deriving</span> <span class=\"n\">DecidableEq</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">G_list</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t</span> <span class=\"bp\">×</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"bp\">|</span> <span class=\"n\">w</span> <span class=\"bp\">=</span> <span class=\"n\">FreeGroup.reduce</span> <span class=\"n\">w</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">item_to_matrix</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">erzeuger_t</span> <span class=\"bp\">×</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">i</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t.gl_a</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gl_a</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t.gl_a</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gl_a'</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t.gl_b</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gl_b</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t.gl_b</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gl_b'</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">list_to_matrix</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t</span> <span class=\"bp\">×</span> <span class=\"n\">Bool</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">w</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">gl_one</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">head</span><span class=\"o\">::</span><span class=\"n\">rest</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">item_to_matrix</span> <span class=\"n\">head</span> <span class=\"bp\">*</span> <span class=\"n\">list_to_matrix</span> <span class=\"n\">rest</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">item_to_int</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">erzeuger_t</span> <span class=\"bp\">×</span> <span class=\"n\">Bool</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">i</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t.gl_a</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t.gl_a</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">2</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t.gl_b</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">3</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t.gl_b</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">4</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">map_G_to_Nat</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span>  <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t</span> <span class=\"bp\">×</span> <span class=\"n\">Bool</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">w</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"bp\">=&gt;</span> <span class=\"mi\">0</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">head</span><span class=\"o\">::</span><span class=\"n\">rest</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">item_to_int</span> <span class=\"n\">head</span> <span class=\"bp\">+</span> <span class=\"mi\">10</span> <span class=\"bp\">*</span> <span class=\"n\">map_G_to_Nat</span> <span class=\"n\">rest</span>\n\n\n<span class=\"kd\">lemma</span> <span class=\"n\">map_G_empty_eq_empty</span> <span class=\"o\">:</span> <span class=\"n\">map_G_to_Nat</span> <span class=\"o\">[]</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">empty_eq_map_empty</span> <span class=\"o\">(</span><span class=\"n\">a1</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t</span> <span class=\"bp\">×</span> <span class=\"n\">Bool</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">map_G_to_Nat</span> <span class=\"n\">a1</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">a1</span> <span class=\"bp\">=</span> <span class=\"o\">[]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h1</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">@</span><span class=\"n\">List.eq_nil_iff_forall_not_mem</span><span class=\"o\">]</span>\n  <span class=\"n\">simp</span>\n  <span class=\"n\">intro</span> <span class=\"n\">a</span>\n  <span class=\"gr\">sorry</span>\n  <span class=\"c1\">--cases a</span>\n\n\n<span class=\"kd\">lemma</span> <span class=\"n\">g_countable</span> <span class=\"o\">:</span> <span class=\"n\">Function.Injective</span> <span class=\"n\">map_G_to_Nat</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Function.Injective</span><span class=\"o\">]</span>\n  <span class=\"n\">intro</span> <span class=\"n\">a1</span> <span class=\"n\">a2</span>\n  <span class=\"n\">induction</span> <span class=\"n\">a1</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">map_G_empty_eq_empty</span><span class=\"o\">]</span>\n  <span class=\"gr\">sorry</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h1</span>\n  <span class=\"gr\">sorry</span>\n\n\n<span class=\"c1\">--import banach_tarski.general_word_form</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">coe_gl_one_eq_one</span> <span class=\"o\">:</span> <span class=\"bp\">↑</span><span class=\"n\">gl_one</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"n\">Units.val_eq_one.mp</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">coe_gl_a_eq_matrix_a</span> <span class=\"o\">:</span> <span class=\"bp\">↑</span><span class=\"n\">gl_a</span> <span class=\"bp\">=</span> <span class=\"n\">matrix_a</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rfl</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">coe_gl_b_eq_matrix_b</span> <span class=\"o\">:</span> <span class=\"bp\">↑</span><span class=\"n\">gl_b</span> <span class=\"bp\">=</span> <span class=\"n\">matrix_b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rfl</span>\n\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">a_b_c_vec</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">r_3</span> <span class=\"o\">:=</span>\n   <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sqrt</span> <span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">Real.sqrt</span> <span class=\"mi\">2</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">x_inv_in_g</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">GL</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">Real</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">G</span><span class=\"o\">):</span> <span class=\"n\">x</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">∈</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"n\">Subgroup.inv_mem</span> <span class=\"n\">G</span> <span class=\"n\">h</span>\n\n\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">lemma_3_1</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">erzeuger_t</span> <span class=\"bp\">×</span> <span class=\"n\">Bool</span><span class=\"o\">))</span>  <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">List.length</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">):</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">,</span> <span class=\"n\">rotate</span> <span class=\"o\">(</span><span class=\"n\">list_to_matrix</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"n\">zero_one_zero</span> <span class=\"bp\">=</span> <span class=\"n\">a_b_c_vec</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">induction</span> <span class=\"n\">p</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">nil</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"gr\">sorry</span>\n\n    <span class=\"bp\">|</span> <span class=\"n\">cons</span> <span class=\"n\">head</span> <span class=\"n\">tail</span> <span class=\"n\">ih</span>  <span class=\"bp\">=&gt;</span>\n      <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I want to proove this lemma with induction on the list p. The problem is that, in the induction step, the Statement h says, that the length of head::tail is n. But inductive hypothesis says that the tail has length n. How would i perform the induction so that h says that the length of head::tail is succ n? <br>\nSorry for the long example code, it should be working in livelean though.</p>",
        "id": 424114565,
        "sender_full_name": "Christian K",
        "timestamp": 1709243337
    },
    {
        "content": "<p><code>induction ... generalizing n</code></p>",
        "id": 424115993,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709243873
    },
    {
        "content": "<p>But the inductive hypothesis now says, that I need a proof that the length of tail is n for every n : Nat. Or am i interpreting this wrong?</p>",
        "id": 424116381,
        "sender_full_name": "Christian K",
        "timestamp": 1709244018
    },
    {
        "content": "<p>It says that for every n, <em>if</em> the length of tail is n then (something useful).</p>",
        "id": 424120034,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709245561
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>    <span class=\"bp\">|</span> <span class=\"n\">cons</span> <span class=\"n\">head</span> <span class=\"n\">tail</span> <span class=\"n\">ih</span>  <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">cases</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n      <span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"c1\">-- contradiction</span>\n      <span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"n\">d</span> <span class=\"bp\">=&gt;</span>\n          <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n          <span class=\"n\">specialize</span> <span class=\"bp\">@</span><span class=\"n\">ih</span> <span class=\"n\">d</span> <span class=\"n\">h</span>\n          <span class=\"c1\">-- etc etc</span>\n          <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 424120449,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709245729
    },
    {
        "content": "<p>Ok, this works, thank you very much</p>",
        "id": 424121011,
        "sender_full_name": "Christian K",
        "timestamp": 1709245947
    },
    {
        "content": "<p>Or you can <code>subst n</code> before calling <code>induction</code>.</p>",
        "id": 424298507,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1709315584
    }
]