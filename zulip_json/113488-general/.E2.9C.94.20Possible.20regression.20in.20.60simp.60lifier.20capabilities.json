[
    {
        "content": "<p>In lean 4.2.0 <code>simp</code> can show that <code>0 &lt; 1</code> but in 4.3.0+ it cannot. I am wondering if this is a regression; or if I am expected to be importing something new as of 4.3.0 to bring the correct <code>simp</code>lifier capabilities into scope.</p>\n<p>This can be shown by creating a new project <code>lake new simp_test</code> and then defining <code>Main.lean</code> as </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">le</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">):</span> <span class=\"n\">x</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">simp</span><span class=\"bp\">;</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">main</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">Unit</span> <span class=\"o\">:=</span> <span class=\"n\">IO.println</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"Hello!\"</span>\n</code></pre></div>\n<p>When <code>lean-toolchain</code> is set with <code>leanprover/lean4:4.2.0</code> then running <code>lake exe simp_test</code> outputs <code>Hello!</code>. Contrastingly if <code>lean-toolchain</code> is set with <code>leanprover/lean4:4.3.0</code>  then running <code>lake exe simp_test</code> outputs </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Main</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jeswr</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---4.3.0/bin/lean ./././Main.lean -R ././. -o ./.lake/build/lib/Main.olean -i ./.lake/build/lib/Main.ilean -c ./.lake/build/ir/Main.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./././</span><span class=\"n\">Main.lean</span><span class=\"o\">:</span><span class=\"mi\">6</span><span class=\"o\">:</span><span class=\"mi\">43</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">simp</span> <span class=\"n\">made</span> <span class=\"n\">no</span> <span class=\"n\">progress</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">jeswr</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---4.3.0/bin/lean` exited with code 1</span>\n</code></pre></div>",
        "id": 421015745,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1707739644
    },
    {
        "content": "<p>Is this fixed by <code>simp (config := {decide := true})</code>?</p>\n<p><code>simp</code> stopped using <code>decide</code> by default for performance reason, I think.</p>",
        "id": 421016117,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707739764
    },
    {
        "content": "<p>That works - thankyou!!</p>",
        "id": 421016278,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1707739813
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"680656\">Jesse Wright</span> has marked this topic as resolved.</p>",
        "id": 421016431,
        "sender_full_name": "Notification Bot",
        "timestamp": 1707739873
    },
    {
        "content": "<p>Note that in Lean 4.6, simprocs make it work once again:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- In Lean 4.6, this succeeds.</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">le</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">):</span> <span class=\"n\">x</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n  <span class=\"c1\">-- uncomment the next line to make it fail again:</span>\n  <span class=\"c1\">--set_option simprocs false in</span>\n  <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 421028436,
        "sender_full_name": "David Renshaw",
        "timestamp": 1707743879
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/blob/fbedb79b4694ef86162694b1b1b8c489ecbd71ac/RELEASES.md?plain=1#L17-L79\">https://github.com/leanprover/lean4/blob/fbedb79b4694ef86162694b1b1b8c489ecbd71ac/RELEASES.md?plain=1#L17-L79</a></p>",
        "id": 421028752,
        "sender_full_name": "David Renshaw",
        "timestamp": 1707743983
    }
]