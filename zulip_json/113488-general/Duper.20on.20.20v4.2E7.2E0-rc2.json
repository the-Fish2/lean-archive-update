[
    {
        "content": "<p>I was updating my Lean toolchain to v4.7.0-rc2 and dependencies (Mathlib, Duper etc.) for a Lean file using duper (<code>require «Duper» from git \"https://github.com/leanprover-community/duper.git\" @ \"main\"</code>), I got the following error at <code>import Duper</code> [1]:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`~/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.7.0-rc2/bin/lake setup-file /path/to/my/DuperTest.lean Init Duper --no-build` failed:</span>\n\n<span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">Duper'</span> <span class=\"bp\">▸</span> <span class=\"bp\">'</span><span class=\"n\">Duper.Tactic'</span> <span class=\"bp\">▸</span> <span class=\"bp\">'</span><span class=\"n\">Duper.Interface'</span> <span class=\"bp\">▸</span> <span class=\"bp\">'</span><span class=\"n\">Std.Lean.CoreM'</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/././</span><span class=\"n\">Std</span><span class=\"bp\">/</span><span class=\"n\">Lean</span><span class=\"bp\">/</span><span class=\"n\">CoreM.lean</span>\n</code></pre></div>\n<p>During debugging, I noticed that duper main branch is one month old [2], and it's not found (thus no CI against the latest toolchain) in <a href=\"https://reservoir.lean-lang.org/\">https://reservoir.lean-lang.org/</a> probably due to lack of a <code>lean4</code> tag [3].</p>\n<p>I removed <code>import Std.Lean.CoreM</code> in <code>Duper.Interface</code> and it took a while (using only 25% of CPU [4] which possibly indicates insufficient parallelization ) to reach more errors:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">Auto.Translation'</span> <span class=\"bp\">▸</span> <span class=\"bp\">'</span><span class=\"n\">Auto.Translation.Monomorphization'</span> <span class=\"bp\">▸</span> <span class=\"bp\">'</span><span class=\"n\">Auto.Embedding.Lift'</span> <span class=\"bp\">▸</span> <span class=\"bp\">'</span><span class=\"n\">Std.Data.Int.Basic'</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">Std.Data.BitVec.Basic'</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>then simple removal of <code>import Std.Data.Int.Basic</code> and then <code>import Std.Data.BitVec.Basic</code> no longer works, and I'm seeing </p>\n<p><a href=\"/user_uploads/3121/L-r2ReZt0W2C2fZR2rH7KR6h/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/L-r2ReZt0W2C2fZR2rH7KR6h/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/L-r2ReZt0W2C2fZR2rH7KR6h/image.png\"></a></div><p>which is a mixed experience of <code>unknown constant 'Std.BitVec.ofNat'</code> and</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">`</span><span class=\"n\">Std.BitVec</span><span class=\"bp\">`</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">deprecated</span>\n</code></pre></div>\n<p>but I fail to found where the former is moved to [5] or what is the latter deprecated by [6] unless maybe I do a proper search on Zulip. (Disclaimer: I haven't used Lean for around 2 months due to sickness and work)</p>\n<p>Sorry for reporting a series of issues in one go, I marked every one I consider an issue (of Duper or of v4.7.0-rc2) with a [number] for easier reference.</p>",
        "id": 426038726,
        "sender_full_name": "Utensil Song",
        "timestamp": 1710207767
    },
    {
        "content": "<p>BitVec has changed namespaces. It's now in <code>_root_</code>, not <code>Std</code>.</p>",
        "id": 426039363,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710208310
    },
    {
        "content": "<p>Thanks, I just learn that in release notes, but I wonder if the deprecation message could be more clear (for this or future deprecations) in [6], or is it technically possible to avoid  \"unknown constant\" of <code>Std.BitVec.ofNat</code> in [5] due to the deprecation of one-level-up <code>Std.BitVec</code>.</p>",
        "id": 426040544,
        "sender_full_name": "Utensil Song",
        "timestamp": 1710209081
    },
    {
        "content": "<p>Gently ping <span class=\"user-mention\" data-user-id=\"436568\">@Josh Clune</span> <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> </p>\n<p>BTW, do you know any projects actively using Duper? In my tests, using Duper means continuingly depending on Duper, as <code>duper?</code> generates calls to <code>duper</code>, so it's better to track it with reservoir[3] to keep it working for new Lean/Mathlib releases.</p>",
        "id": 426110921,
        "sender_full_name": "Utensil Song",
        "timestamp": 1710245404
    },
    {
        "content": "<p>Thanks for the ping. I'll work on getting Duper working with the latest lean-toolchain as soon as I can, and I'll ping you once I've pushed a version that is compatible with 4.7.0.-rc2.</p>",
        "id": 426138629,
        "sender_full_name": "Josh Clune",
        "timestamp": 1710253948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span> I've updated Duper's main branch to use Lean v4.7.0-rc2. I've also added a <code>lean4</code> tag and LICENSE file to the repository, so if my understanding is correct, Duper should automatically be added to <a href=\"https://reservoir.lean-lang.org/\">https://reservoir.lean-lang.org/</a> the next time Lean is updated. This version of Duper should be compatible with the v4.7.0-rc2 branch of Mathlib. Let me know if you run into any issues.</p>",
        "id": 426470365,
        "sender_full_name": "Josh Clune",
        "timestamp": 1710392446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"436568\">@Josh Clune</span> Many thanks, and my local test now passes after bumping and rebuilding Duper. <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n<p>I can also see reservoir <a href=\"https://github.com/leanprover/reservoir/actions/runs/8279281168/job/22653419377\">has picked up and built Duper successfully</a> but reservoir itself has failed to collect the results due to <code>Error: Unable to download artifact(s): Failed to GetSignedArtifactURL: Unable to make request: ECONNRESET</code>. <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> , have you noticed the red CI?</p>",
        "id": 426662042,
        "sender_full_name": "Utensil Song",
        "timestamp": 1710468929
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span> No, sorry, I had not. The good news is that the failure did not repeat today! Sadly, there are intermittent GitHub / hosting failures that lead to the daily update failing sometimes. Thus, expecting weekly updates is often safer.</p>",
        "id": 426843330,
        "sender_full_name": "Mac Malone",
        "timestamp": 1710549024
    },
    {
        "content": "<p><a href=\"https://reservoir.lean-lang.org/@leanprover-community/duper\">https://reservoir.lean-lang.org/@leanprover-community/duper</a> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 426851226,
        "sender_full_name": "Utensil Song",
        "timestamp": 1710555252
    }
]