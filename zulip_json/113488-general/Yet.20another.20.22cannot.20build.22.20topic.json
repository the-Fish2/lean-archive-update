[
    {
        "content": "<p>On a linux system, I run the following commands:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>rm<span class=\"w\"> </span>-rf<span class=\"w\"> </span>.elan\ncurl<span class=\"w\"> </span>https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh<span class=\"w\"> </span>-sSf<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>sh\n</code></pre></div>\n<p>I select <code>nightly</code> for the default toolchain and accept to modify <code>PATH</code>.  According to instructions, I then run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">source</span><span class=\"w\"> </span><span class=\"nv\">$HOME</span>/.elan/env\n</code></pre></div>\n<p>Then I run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>lake<span class=\"w\"> </span>new<span class=\"w\"> </span><span class=\"nb\">test</span>\n<span class=\"nb\">cd</span><span class=\"w\"> </span><span class=\"nb\">test</span>\nlake<span class=\"w\"> </span>build\n</code></pre></div>\n<p>All ok.  Now I modify:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Lake</span>\n<span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">Lake</span><span class=\"w\"> </span><span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"c1\">-- add package configuration options here</span>\n\n<span class=\"n\">lean_lib</span><span class=\"w\"> </span><span class=\"bp\">«</span><span class=\"n\">Test</span><span class=\"bp\">»</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"c1\">-- add library configuration options here</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_exe</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"n\">root</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"ss\">`Main</span>\n</code></pre></div>\n<p>to</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Lake</span>\n<span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">Lake</span><span class=\"w\"> </span><span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"c1\">-- add package configuration options here</span>\n\n<span class=\"n\">lean_lib</span><span class=\"w\"> </span><span class=\"bp\">«</span><span class=\"n\">Test</span><span class=\"bp\">»</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"c1\">-- add library configuration options here</span>\n<span class=\"n\">require</span><span class=\"w\"> </span><span class=\"n\">alloy</span><span class=\"w\"> </span><span class=\"k\">from</span><span class=\"w\"> </span><span class=\"n\">git</span>\n<span class=\"w\">  </span><span class=\"s2\">\"https://github.com/tydeu/lean4-alloy.git\"</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_exe</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"n\">root</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"ss\">`Main</span>\n</code></pre></div>\n<p>I run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>lake<span class=\"w\"> </span>update\nlake<span class=\"w\"> </span>build\n</code></pre></div>\n<p>Completes normally.  Now I modify <code>lakefile.lean</code> to</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Lake</span>\n<span class=\"kn\">open</span><span class=\"w\"> </span><span class=\"n\">Lake</span><span class=\"w\"> </span><span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"c1\">-- add package configuration options here</span>\n\n<span class=\"n\">lean_lib</span><span class=\"w\"> </span><span class=\"bp\">«</span><span class=\"n\">Test</span><span class=\"bp\">»</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"c1\">-- add library configuration options here</span>\n<span class=\"n\">require</span><span class=\"w\"> </span><span class=\"n\">alloy</span><span class=\"w\"> </span><span class=\"k\">from</span><span class=\"w\"> </span><span class=\"n\">git</span>\n<span class=\"w\">  </span><span class=\"s2\">\"https://github.com/tydeu/lean4-alloy.git\"</span>\n<span class=\"n\">require</span><span class=\"w\"> </span><span class=\"n\">mathlib</span><span class=\"w\"> </span><span class=\"k\">from</span><span class=\"w\"> </span><span class=\"n\">git</span>\n<span class=\"w\">  </span><span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_exe</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"n\">root</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"ss\">`Main</span>\n</code></pre></div>\n<p>I get the \"missing manifest\" message when I try to build, so I follow the instructions and type</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>lake<span class=\"w\"> </span>update<span class=\"w\"> </span>mathlib\n</code></pre></div>\n<p>At this point, I get the error</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>././lakefile.lean:4:7:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>token<span class=\"p\">;</span><span class=\"w\"> </span>expected<span class=\"w\"> </span>identifier\nerror:<span class=\"w\"> </span>././lakefile.lean:16:8:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>token<span class=\"p\">;</span><span class=\"w\"> </span>expected<span class=\"w\"> </span>identifier\nerror:<span class=\"w\"> </span>././lakefile.lean:<span class=\"w\"> </span>package<span class=\"w\"> </span>configuration<span class=\"w\"> </span>has<span class=\"w\"> </span>errors\ninfo:<span class=\"w\"> </span>mathlib:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/leanprover-community/mathlib4.git<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/mathlib'</span>\ninfo:<span class=\"w\"> </span>batteries:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/leanprover-community/batteries<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/batteries'</span>\ninfo:<span class=\"w\"> </span>Qq:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/leanprover-community/quote4<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/Qq'</span>\ninfo:<span class=\"w\"> </span>aesop:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/leanprover-community/aesop<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/aesop'</span>\ninfo:<span class=\"w\"> </span>proofwidgets:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/leanprover-community/ProofWidgets4<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/proofwidgets'</span>\nwarning:<span class=\"w\"> </span>././.lake/packages/proofwidgets/lakefile.lean:22:20:<span class=\"w\"> </span>warning:<span class=\"w\"> </span><span class=\"sb\">`</span>Lake.inputFile<span class=\"sb\">`</span><span class=\"w\"> </span>has<span class=\"w\"> </span>been<span class=\"w\"> </span>deprecated\nwarning:<span class=\"w\"> </span>././.lake/packages/proofwidgets/lakefile.lean:76:36:<span class=\"w\"> </span>warning:<span class=\"w\"> </span><span class=\"sb\">`</span>Lake.inputFile<span class=\"sb\">`</span><span class=\"w\"> </span>has<span class=\"w\"> </span>been<span class=\"w\"> </span>deprecated\ninfo:<span class=\"w\"> </span>Cli:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/leanprover/lean4-cli<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/Cli'</span>\ninfo:<span class=\"w\"> </span>importGraph:<span class=\"w\"> </span>cloning<span class=\"w\"> </span>https://github.com/leanprover-community/import-graph.git<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/importGraph'</span>\ninfo:<span class=\"w\"> </span>mathlib:<span class=\"w\"> </span>running<span class=\"w\"> </span>post-update<span class=\"w\"> </span>hooks\nerror:<span class=\"w\"> </span>mathlib:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>fetch<span class=\"w\"> </span>cache\n</code></pre></div>\n<p>and any further attempts to run <code>lake</code> with any command are rejected with </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>././lakefile.lean:4:7:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>token<span class=\"p\">;</span><span class=\"w\"> </span>expected<span class=\"w\"> </span>identifier\nerror:<span class=\"w\"> </span>././lakefile.lean:14:8:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>token<span class=\"p\">;</span><span class=\"w\"> </span>expected<span class=\"w\"> </span>identifier\nerror:<span class=\"w\"> </span>././lakefile.lean:<span class=\"w\"> </span>package<span class=\"w\"> </span>configuration<span class=\"w\"> </span>has<span class=\"w\"> </span>errors\n</code></pre></div>\n<p>(I did not modify <code>lakefile.lean</code> at all)</p>\n<p>I give up; help.</p>",
        "id": 446275796,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719065286
    },
    {
        "content": "<p>What does your <code>lean-toolchain</code> file contain?</p>",
        "id": 446275904,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719065399
    },
    {
        "content": "<p>It reads: <code>leanprover/lean4:v4.9.0-rc2</code></p>",
        "id": 446275974,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719065432
    },
    {
        "content": "<p>By the way, I did not touch the <code>lean-toolchain</code> file, it was created by <code>lake</code> and never modified.</p>",
        "id": 446276019,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719065478
    },
    {
        "content": "<p>What instructions did you find that tell you to run <code>lake update mathlib</code>?</p>",
        "id": 446276138,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1719065571
    },
    {
        "content": "<p>After adding mathlib requirement to <code>lakefile.lean</code>, I run <code>lake build</code>.  Then I get the message:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"s1\">'mathlib'</span><span class=\"w\"> </span>not<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>manifest<span class=\"p\">;</span><span class=\"w\"> </span>use<span class=\"w\"> </span><span class=\"sb\">`</span>lake<span class=\"w\"> </span>update<span class=\"w\"> </span>mathlib<span class=\"sb\">`</span><span class=\"w\"> </span>to<span class=\"w\"> </span>add<span class=\"w\"> </span>it\n</code></pre></div>",
        "id": 446276276,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719065681
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"701522\">Number Eighteen</span> <a href=\"#narrow/stream/113488-general/topic/Yet.20another.20.22cannot.20build.22.20topic/near/446276019\">said</a>:</p>\n<blockquote>\n<p>By the way, I did not touch the <code>lean-toolchain</code> file, it was created by <code>lake</code> and never modified.</p>\n</blockquote>\n<p>What it contains depends on what version of <code>lake</code> you have installed, which can sometimes depend on when you installed elan for the first time</p>",
        "id": 446276297,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719065692
    },
    {
        "content": "<p>(your content sounds fine)</p>",
        "id": 446276306,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719065697
    },
    {
        "content": "<p>Eric, I have not  \"installed\" any version of lake by hand.  I installed <code>elan</code> according to the steps above and chose <code>nightly</code> for the default toolchain.  Lake is a complete black box to me.</p>",
        "id": 446276366,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719065759
    },
    {
        "content": "<p>Can you also share the contents of your <code>lake-manifest.json</code> (which was created automatically by <code>lake</code>)?</p>",
        "id": 446276453,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719065826
    },
    {
        "content": "<p>And perhaps the output of <code>lake --version</code> for good measure (run from inside your project directory)</p>",
        "id": 446276466,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719065837
    },
    {
        "content": "<p>Lake version: <code> Lake version 5.0.0-7ed9b73 (Lean version 4.9.0-rc2)</code></p>\n<p>Contents of manifest:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"o\">{</span><span class=\"s2\">\"version\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"1.0.0\"</span><span class=\"o\">,</span>\n<span class=\"w\"> </span><span class=\"s2\">\"packagesDir\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\".lake/packages\"</span><span class=\"o\">,</span>\n<span class=\"w\"> </span><span class=\"s2\">\"packages\"</span><span class=\"o\">:</span>\n<span class=\"w\"> </span><span class=\"o\">[{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/tydeu/lean4-alloy.git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"type\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"subDir\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"rev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"d93e0591e2b2ee76f13b8394d9b4c870af7489b6\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"name\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"alloy\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"manifestFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lake-manifest.json\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inputRev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inherited\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">false</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"configFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lakefile.lean\"</span><span class=\"o\">},</span>\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/leanprover-community/batteries\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"type\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"subDir\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"rev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"47e4cc5c5800c07d9bf232173c9941fa5bf68589\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"name\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"batteries\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"manifestFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lake-manifest.json\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inputRev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"main\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inherited\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">true</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"configFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lakefile.lean\"</span><span class=\"o\">},</span>\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/leanprover-community/quote4\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"type\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"subDir\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"rev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"a7bfa63f5dddbcab2d4e0569c4cac74b2585e2c6\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"name\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Qq\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"manifestFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lake-manifest.json\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inputRev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"master\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inherited\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">true</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"configFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lakefile.lean\"</span><span class=\"o\">},</span>\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/leanprover-community/aesop\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"type\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"subDir\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"rev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"882561b77bd2aaa98bd8665a56821062bdb3034c\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"name\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"aesop\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"manifestFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lake-manifest.json\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inputRev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"master\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inherited\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">true</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"configFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lakefile.toml\"</span><span class=\"o\">},</span>\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/leanprover-community/ProofWidgets4\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"type\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"subDir\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"rev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"e6b6247c61280c77ade6bbf0bc3c66a44fe2e0c5\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"name\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"proofwidgets\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"manifestFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lake-manifest.json\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inputRev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"v0.0.36\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inherited\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">true</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"configFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lakefile.lean\"</span><span class=\"o\">},</span>\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/leanprover/lean4-cli\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"type\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"subDir\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"rev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"a11566029bd9ec4f68a65394e8c3ff1af74c1a29\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"name\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Cli\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"manifestFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lake-manifest.json\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inputRev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"main\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inherited\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">true</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"configFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lakefile.lean\"</span><span class=\"o\">},</span>\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/leanprover-community/import-graph.git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"type\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"subDir\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"rev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"1588be870b9c76fe62286e8f42f0b4dafa154c96\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"name\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"importGraph\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"manifestFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lake-manifest.json\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inputRev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"main\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inherited\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">true</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"configFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lakefile.toml\"</span><span class=\"o\">},</span>\n<span class=\"w\">  </span><span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"type\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"git\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"subDir\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"rev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"e19c07e6753d1d2844a1849a0077a6c9ad2d8676\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"name\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"mathlib\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"manifestFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lake-manifest.json\"</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inputRev\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"inherited\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">false</span><span class=\"o\">,</span>\n<span class=\"w\">   </span><span class=\"s2\">\"configFile\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lakefile.lean\"</span><span class=\"o\">}],</span>\n<span class=\"w\"> </span><span class=\"s2\">\"name\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"o\">,</span>\n<span class=\"w\"> </span><span class=\"s2\">\"lakeDir\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\".lake\"</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 446276579,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719065914
    },
    {
        "content": "<p>That all looks ok to me. Does <code>lake clean</code> work?</p>",
        "id": 446276766,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066062
    },
    {
        "content": "<p>No, again all <code>lake</code> commands, including <code>lake clean</code>,  fail with the same message:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>././lakefile.lean:4:7:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>token<span class=\"p\">;</span><span class=\"w\"> </span>expected<span class=\"w\"> </span>identifier\nerror:<span class=\"w\"> </span>././lakefile.lean:15:8:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>token<span class=\"p\">;</span><span class=\"w\"> </span>expected<span class=\"w\"> </span>identifier\nerror:<span class=\"w\"> </span>././lakefile.lean:<span class=\"w\"> </span>package<span class=\"w\"> </span>configuration<span class=\"w\"> </span>has<span class=\"w\"> </span>errors\n</code></pre></div>",
        "id": 446276881,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719066144
    },
    {
        "content": "<p>Try <code>rm -rf .lake</code> then <code>lake build</code> again</p>",
        "id": 446277163,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066360
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"701522\">Number Eighteen</span> <a href=\"#narrow/stream/113488-general/topic/Yet.20another.20.22cannot.20build.22.20topic/near/446276366\">said</a>:</p>\n<blockquote>\n<p>... and chose <code>nightly</code> for the default toolchain.  Lake is a complete black box to me.</p>\n</blockquote>\n<p>I would guess this is the cause of the problem; you did a partial build with nightly, but <code>lake update mathlib</code> ended up <em>downgrading</em> the contents of your <code>lean-toolchain</code> file (which is what you want), and left the <code>.lake</code> folder in a corrupt state</p>",
        "id": 446277261,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066425
    },
    {
        "content": "<p>I run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>rm<span class=\"w\"> </span>-rf<span class=\"w\"> </span>.lake\nlake<span class=\"w\"> </span>build\n</code></pre></div>\n<p>I get</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>././lakefile.lean:4:7:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>token<span class=\"p\">;</span><span class=\"w\"> </span>expected<span class=\"w\"> </span>identifier\nerror:<span class=\"w\"> </span>././lakefile.lean:15:8:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>token<span class=\"p\">;</span><span class=\"w\"> </span>expected<span class=\"w\"> </span>identifier\nerror:<span class=\"w\"> </span>././lakefile.lean:<span class=\"w\"> </span>package<span class=\"w\"> </span>configuration<span class=\"w\"> </span>has<span class=\"w\"> </span>errors\n</code></pre></div>",
        "id": 446277274,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719066433
    },
    {
        "content": "<p>I think the <code>lakefile.lean</code> format changed between versions...</p>",
        "id": 446277362,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066498
    },
    {
        "content": "<p>Though I'm not really sure what happened here</p>",
        "id": 446277420,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066537
    },
    {
        "content": "<p><code>package \"test\"</code> is not legal syntax, it should be <code>package test</code></p>",
        "id": 446277439,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066546
    },
    {
        "content": "<p>(same for <code>lean_exe test</code>)</p>",
        "id": 446277531,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066584
    },
    {
        "content": "<p>OK, after modifying to remove the double quotes, <code>lake build</code> runs.  Once it's done, I'll report back.  But why did <code>lake new</code> use the old syntax to create the lake file, even though the toolchain is <code>nightly</code>?</p>",
        "id": 446277847,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719066706
    },
    {
        "content": "<p>Can you run <code>lake new</code> in a new folder, and report the value of <code>lake --version</code> in that folder?</p>",
        "id": 446277960,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066736
    },
    {
        "content": "<p>(This time, without trying to add <code>mathlib</code> to the lakefile, which is what caused the version to switch)</p>",
        "id": 446277992,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066748
    },
    {
        "content": "<p>I think the opposite happened, it used new syntax and <code>lake update mathlib</code> reverted to an older version</p>",
        "id": 446278038,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1719066765
    },
    {
        "content": "<p>The toolchain in the new folder is now <code>nightly</code>, as instructed by <code>elan</code>.</p>",
        "id": 446278085,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719066798
    },
    {
        "content": "<p>Maybe the short answer here is \"choosing <code>nightly</code> was a mistake, pick <code>stable</code> instead\"</p>",
        "id": 446278177,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066851
    },
    {
        "content": "<p>Using mathlib would cause the version to change anyway, but the generated <code>lakefile.lean</code> would hopefully end up compatible that way</p>",
        "id": 446278196,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066876
    },
    {
        "content": "<p>If you want a project that depends on mathlib, you should use <code>lake new math yourproject</code></p>",
        "id": 446278212,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066885
    },
    {
        "content": "<p>So I cannot manually add <code>mathlib</code> as a dependency afterwards to a project?</p>",
        "id": 446278263,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719066923
    },
    {
        "content": "<p>You can, but it may not go smoothly, as happened here</p>",
        "id": 446278302,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066958
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>, the fact that nightly <code>lake new</code> generates lakefiles incompatible with older versions of lean seems rather unfortunate here.</p>",
        "id": 446278373,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719066987
    },
    {
        "content": "<p>But <code>math</code> does not create an <code>exe</code> target, only a lib target; I want to create executables and have mathlib as a dependency.</p>",
        "id": 446278386,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719067007
    },
    {
        "content": "<p>You can add the <code>exe</code> target yourself later, but I guess you had no reason to expect that to be easier than adding <code>require \"mathlib\" from ...</code> manually instead</p>",
        "id": 446278427,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719067048
    },
    {
        "content": "<p>Also I just tried doing the math command, and the generated lakefile has the double quotes.</p>",
        "id": 446278436,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719067055
    },
    {
        "content": "<p>Let's see what Mac has to say here</p>",
        "id": 446278464,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719067078
    },
    {
        "content": "<p>Incredible; I am getting the same error in the new math directory!!</p>",
        "id": 446278645,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719067205
    },
    {
        "content": "<p>I write:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>rm<span class=\"w\"> </span>-rf<span class=\"w\"> </span>foobar\nlake<span class=\"w\"> </span>new<span class=\"w\"> </span>foobar<span class=\"w\"> </span>math\n<span class=\"nb\">cd</span><span class=\"w\"> </span>foobar\nlake<span class=\"w\"> </span>build\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>././lakefile.lean:4:7:<span class=\"w\"> </span>error:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>token<span class=\"p\">;</span><span class=\"w\"> </span>expected<span class=\"w\"> </span>identifier\nerror:<span class=\"w\"> </span>././lakefile.lean:<span class=\"w\"> </span>package<span class=\"w\"> </span>configuration<span class=\"w\"> </span>has<span class=\"w\"> </span>errors\n</code></pre></div>",
        "id": 446278801,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719067325
    },
    {
        "content": "<p>Yes, this is because your global <code>lake</code> is the nightly / unstable version</p>",
        "id": 446278851,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719067376
    },
    {
        "content": "<p>Ha ha hahaaa.</p>",
        "id": 446278872,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719067402
    },
    {
        "content": "<p>This is still arguably a bug, but you did ask for the version most likely to contain bugs</p>",
        "id": 446278904,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719067426
    },
    {
        "content": "<p>But when I run <code>lake --version</code> in the folder, I get <code>Lake version 5.0.0-7ed9b73 (Lean version 4.9.0-rc2)</code></p>",
        "id": 446279013,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719067491
    },
    {
        "content": "<p>Whereas in a folder without <code>math</code>, I get the global nightly which reads <code>Lake version 5.0.0-src (Lean version 4.10.0-nightly-2024-06-22)</code></p>",
        "id": 446279159,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719067581
    },
    {
        "content": "<p>In any case, I will wipe <code>.elan</code> again and try everything again with stable.</p>",
        "id": 446279236,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719067645
    },
    {
        "content": "<p>What's happening is:</p>\n<ul>\n<li>you have nightly installed globally</li>\n<li><code>lake new math</code>:<ul>\n<li>Creates a new lakefile.lean in the nightly format, and a <code>lean-toolchain</code> containing <code>nightly</code></li>\n<li>Runs <code>lake update mathlib</code>, which downgrades <code>lean-toolchain</code> to the stable release</li>\n</ul>\n</li>\n<li><code>lake --version</code> reads this <code>lean-toolchain</code> file to determine its version</li>\n<li>you're now in trouble because the <code>lakefile.lean</code> is now in a format that can't be read by the stable release</li>\n</ul>",
        "id": 446279363,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719067731
    },
    {
        "content": "<p>Which is the reason why <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency\">https://github.com/leanprover-community/mathlib4/wiki/Using-mathlib4-as-a-dependency</a> has very specific instructions</p>",
        "id": 446279494,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1719067808
    },
    {
        "content": "<p>Should <code>lake new math</code> error if invoked without a <code>+</code> argument?</p>",
        "id": 446279532,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719067852
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> With those instructions, I end up in exactly the same state of the folder as the one that led me to the errors; in particular, the lean-toolchain you're instructing me to <code>curl</code> has <code>leanprover/lean4:v4.9.0-rc2</code> which was what was there anyway.</p>",
        "id": 446279777,
        "sender_full_name": "Number Eighteen",
        "timestamp": 1719068026
    },
    {
        "content": "<p>I did mean the instructions for a new project. Starting with an existing project that was created by nightly is not a good idea because the ecosystem never uses nightly</p>",
        "id": 446280018,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1719068235
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Yet.20another.20.22cannot.20build.22.20topic/near/446278373\">said</a>:</p>\n<blockquote>\n<p>cc <span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span>, the fact that nightly <code>lake new</code> generates lakefiles incompatible with older versions of lean seems rather unfortunate here.</p>\n</blockquote>\n<p>This is an inevitable consequence of new features. The unfortunate problem here is mathlib downgrading things. Hopefully the soon-to-be-addressed toolchain-aware <code>lake update</code> will fic this.</p>",
        "id": 446299641,
        "sender_full_name": "Mac Malone",
        "timestamp": 1719077364
    }
]