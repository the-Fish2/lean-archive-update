[
    {
        "content": "<p>Is it just me that sees <code>simp (config := {contextual := true}) […]</code> and thinks</p>\n<blockquote>\n<p><span aria-label=\"thought\" class=\"emoji emoji-1f4ad\" role=\"img\" title=\"thought\">:thought:</span>  surely this kind of config fiddling is not meant for everyday use, given the verbose and confusing syntax; maybe this exists only for use within other tactics or so”</p>\n</blockquote>\n<p>and would think quite different it was, say,</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">contextual</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">charP_iff</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">zero_dvd_iff</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">iff_def</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">H</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 440578366,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1716585199
    },
    {
        "content": "<p>I've wanted contextual to be a more accessible option for a long time. Why does <code>autoUnfold</code> get <code>!</code> but no other option gets a quick syntax?</p>",
        "id": 440578495,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1716585281
    },
    {
        "content": "<p><code>only</code> has quick syntax! As does <code>?</code>. In a way.</p>",
        "id": 440578599,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1716585341
    },
    {
        "content": "<p>3 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/How.20to.20learn.20.22idiomatic.22.20lean.3F\">#general &gt; How to learn \"idiomatic\" lean?</a> by <span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span>.</p>",
        "id": 440578675,
        "sender_full_name": "Notification Bot",
        "timestamp": 1716585373
    },
    {
        "content": "<p>Those ones don't affect the <code>Simp.config</code> though, they're more special.</p>",
        "id": 440578798,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1716585463
    },
    {
        "content": "<p>I found <a href=\"#narrow/stream/113489-new-members/topic/how.20to.20congr.20inside.20a.20condition.3F/near/270593240\">a proposal</a> of mine from a couple years ago. With <code>simp/c</code>, I was thinking about refinement syntax from Rebol. There, <code>f/x/y/z a b c</code> is sort of like doing <code>f (x := true) (y := true) (z := true) a b c</code>, where the default values for <code>x</code>, <code>y</code>, and <code>z</code> are <code>false</code>.</p>\n<p>(The later proposal about <code>simp+c</code> and <code>simp+c-b</code>, etc, is not one I'd like to see in Lean!)</p>",
        "id": 440579053,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1716585612
    },
    {
        "content": "<p>Would it be too weird having <code>simp +contextual [...]</code> and <code>simp -beta [...]</code> be short forms for <code>simp (config := {contextual := true}) [...]</code> and <code>simp (config := {beta := false}) [...]</code>? A thought here is that <code>+</code> and <code>-</code> prefixes could make it be more likely that the <code>(config := ...)</code> parser and elaborator could be adjusted to handle this all at once across all tactics that use it.</p>",
        "id": 440579980,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1716586166
    },
    {
        "content": "<p>I've been wanting to write a general purpose config argument parser which would allow writing <code>(contextual := true)</code> instead of <code>(config := {contextual := true})</code></p>",
        "id": 440582345,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716587705
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> <a href=\"#narrow/stream/113488-general/topic/simp.20contextual.20tactic.20syntax/near/440578366\">said</a>:</p>\n<blockquote>\n<p>Is it just me that sees <code>simp (config := {contextual := true}) […]</code> and thinks</p>\n<blockquote>\n<p><span aria-label=\"thought\" class=\"emoji emoji-1f4ad\" role=\"img\" title=\"thought\">:thought:</span>  surely this kind of config fiddling is not meant for everyday use, given the verbose and confusing syntax; maybe this exists only for use within other tactics or so”</p>\n</blockquote>\n<p>and would think quite different it was, say,</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">contextual</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">charP_iff</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">zero_dvd_iff</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">iff_def</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">H</span><span class=\"o\">]</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>I feel this way whenever I write <code>(config := {singlePass := true})</code>, too</p>",
        "id": 440589320,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1716592218
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/simp.20contextual.20tactic.20syntax/near/440582345\">said</a>:</p>\n<blockquote>\n<p>I've been wanting to write a general purpose config argument parser which would allow writing <code>(contextual := true)</code> instead of <code>(config := {contextual := true})</code></p>\n</blockquote>\n<p>This is better, but I still think it's too verbose. I think one character flags for these common things should be the norm.</p>",
        "id": 440594528,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1716597188
    },
    {
        "content": "<p>Agreed. I really like the <code>+contextual - beta</code> idea.</p>",
        "id": 440604882,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716609076
    },
    {
        "content": "<p>Atm it feels to me like I'm telling <code>simp</code> \"go in expensive mode\" <span aria-label=\"dollars\" class=\"emoji emoji-1f4b2\" role=\"img\" title=\"dollars\">:dollars:</span> <span aria-label=\"dollars\" class=\"emoji emoji-1f4b2\" role=\"img\" title=\"dollars\">:dollars:</span> <span aria-label=\"money\" class=\"emoji emoji-1f4b0\" role=\"img\" title=\"money\">:money:</span> </p>\n<p>Maybe it is true! And then we probably shouldn't change the syntax. But I actually think it isn't that expensive, and so I would be happy to have \"cheaper\" syntax <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 440604959,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716609160
    },
    {
        "content": "<p>I'm fine with there being an even more compact syntax for boolean options, but it may interfere with regular arguments of the tactic if it's a general purpose config arg parser</p>",
        "id": 440633444,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716640698
    },
    {
        "content": "<p>I think one character flags would be unkind to learners and readers.</p>",
        "id": 440638430,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716645571
    }
]