[
    {
        "content": "<p>Lean Focused Research Organization (FRO) - Monthly Community Meeting</p>\n<p>Time &amp; Date: <time datetime=\"2023-10-13T14:00:00Z\">2023-10-13T07:00:00-07:00</time> </p>\n<p>Video call link: <a href=\"https://meet.google.com/guj-dcde-cdq\">https://meet.google.com/guj-dcde-cdq</a><br>\nOr dial: ‪(DE) +49 40 8081616820‬ PIN: ‪222 556 634‬#<br>\nMore phone numbers: <a href=\"https://tel.meet/guj-dcde-cdq?pin=3354363659596\">https://tel.meet/guj-dcde-cdq?pin=3354363659596</a></p>\n<p>Agenda:</p>\n<p>I. Opening Remarks</p>\n<p>II. Our Mission and Vision for Lean</p>\n<ul>\n<li>Overview of the mission statement</li>\n<li>Long-term vision for the Lean project</li>\n</ul>\n<p>III. FRO Model and Structure </p>\n<ul>\n<li>Outline of the organization's structure</li>\n<li><a href=\"https://www.convergentresearch.org/\">https://www.convergentresearch.org/</a></li>\n<li>The Lean FRO team</li>\n</ul>\n<p>IV. Development Philosophy</p>\n<ul>\n<li>Code Ownership </li>\n<li>Expectations around contributions and code quality</li>\n</ul>\n<p>V. RFC (Request For Comments) and PR (Pull Request) Processes</p>\n<ul>\n<li>The lifecycle of an RFC and a PR</li>\n<li>How the community can contribute</li>\n<li>Key points of consideration during reviews</li>\n</ul>\n<p>VI. Next Steps and Short Term Deliverables</p>\n<ul>\n<li>Upcoming milestones</li>\n<li>Key deliverables and expected timelines</li>\n</ul>\n<p>VII. Q&amp;A</p>\n<ul>\n<li>Open floor for questions, concerns, or suggestions from community members</li>\n</ul>",
        "id": 392143730,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1695224161
    },
    {
        "content": "<p>Sounds interesting - will there be a summary of the discussed points after the meeting?</p>",
        "id": 392145165,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1695224611
    },
    {
        "content": "<p>Or a recording?</p>",
        "id": 392145521,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1695224723
    },
    {
        "content": "<p>Good point. We will record the meeting.</p>",
        "id": 392197767,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1695239483
    },
    {
        "content": "<p>We have updated the Google meet link above.</p>\n<p>Google Meet joining info<br>\nVideo call link: <a href=\"https://meet.google.com/guj-dcde-cdq\">https://meet.google.com/guj-dcde-cdq</a><br>\nOr dial: ‪(DE) +49 40 8081616820‬ PIN: ‪222 556 634‬#<br>\nMore phone numbers: <a href=\"https://tel.meet/guj-dcde-cdq?pin=3354363659596\">https://tel.meet/guj-dcde-cdq?pin=3354363659596</a></p>",
        "id": 392999989,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1695645329
    },
    {
        "content": "<p>Bump.</p>",
        "id": 396325179,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1697128279
    },
    {
        "content": "<p>just to note for people interested, the meeting will start in 2 minutes</p>",
        "id": 396511307,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1697205504
    },
    {
        "content": "<p>One thing I wanted to ask during the meeting but forgot: what happened to the plan of having compiled tactics? It originally was one of the promises of Lean 4 but, as far as I understand, it never became practicable and none of the heavy-lifting Mathlib tactic (ring, linarith, aesop...) is compiled.</p>",
        "id": 396527971,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697210988
    },
    {
        "content": "<p>I was teaching during the meeting, but I would very much appreciate a recording if it is available.</p>",
        "id": 396530106,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697211754
    },
    {
        "content": "<p>It was recorded, and I'm we'll get to know when the recording becomes available.</p>",
        "id": 396531073,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697212181
    },
    {
        "content": "<p>Note the Q&amp;A was not recorded</p>",
        "id": 396531212,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697212239
    },
    {
        "content": "<p>Sorry for the tardiness of my question in the chat. It might be better answered here anyway: what is envisioned for documentation for intermediate to advanced users to empower them to level up? (Number Blocks but with details about the unification algorithm in the place of arithmetic? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>  )</p>",
        "id": 396531358,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697212307
    },
    {
        "content": "<p>Currently the <a href=\"https://github.com/leanprover-community/lean4-metaprogramming-book\">Lean Metaprogramming Book</a> is the only general resource in that area. <span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span> <span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> Should the FRO inherit maintainership of that book and/or extend it?</p>",
        "id": 396531621,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697212423
    },
    {
        "content": "<p>That has been a wonderful reference!</p>",
        "id": 396531822,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697212493
    },
    {
        "content": "<p>An alternative solution (which might be easier to implement, and which was inspired by Leo's recent podcast appearance) would be a reading list of papers relevant to understanding Lean's implementation. By that, I don't mean a non-awesome \"awesome list\" of all important papers ever, just the ones that provide most bang for the buck. In his interview, Leo mentioned it was very helpful to be able to ask people at MSR and SRI for such suggestions early in the project.</p>",
        "id": 396532243,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1697212680
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396531621\">said</a>:</p>\n<blockquote>\n<p>Should the FRO inherit maintainership of that book and/or extend it?</p>\n</blockquote>\n<p>I'm not sure tbh. It depends on how David would like to do it, I think. That repo has a certain infra and it may not be the way he would want to maintain it.</p>\n<p>My initial motivation was to get something started to empower metaprogrammers during the Mathlib port. Now that the port is done, it's possible that the Lean FRO members choose a different way. Or even prefer to start from scratch, using that book as a reference (or not). Either way is fine by me (as an author)</p>",
        "id": 396534947,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1697213606
    },
    {
        "content": "<p>can it become an mdbook? I have lost track of how many pdf copies I have downloaded.</p>",
        "id": 396536032,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697214097
    },
    {
        "content": "<p>I've found that resource to be very valuable myself!</p>\n<p>I don't yet have a clear plan - something that accomplishes it's goals will be a part of the manuals and tutorials that I'll be preparing, but I don't yet know if the current text is the right basis (or if the authors want us to take it over - it's their work!). As more is determined, I'll announce it.</p>",
        "id": 396536043,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1697214101
    },
    {
        "content": "<p>I could see a different structure being needed once we have a detailed reference manual, for instance.</p>",
        "id": 396536168,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1697214145
    },
    {
        "content": "<p>Or not!</p>",
        "id": 396536181,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1697214150
    },
    {
        "content": "<p>RE mdbook - the current plan is not to build everything with mdbook, but rather to build a Lean DSL for documentation. mdbook might be a targeted output format, though</p>",
        "id": 396536290,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1697214196
    },
    {
        "content": "<p>Maybe a reference manual is a better place to start then. How should that be structured? Should we focus on docstrings and leave the mdbooks to the more high level stuff?</p>",
        "id": 396536558,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697214308
    },
    {
        "content": "<p>Regarding the doc DSL mentioned in the meeting, I think this is a cool idea but to me it's a lower priority than writing actual documentation text. I think we should try to organize a docs push powered by external contributors, the API surface area is huge and we need to ramp the work up to another scale.</p>",
        "id": 396537102,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697214512
    },
    {
        "content": "<p>(This is not to say that they shouldn't be worked on concurrently, they require very different skill sets after all.)</p>",
        "id": 396537220,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697214564
    },
    {
        "content": "<p>For API reference (docstrings), I think the \"army of volunteers\" is a good approach</p>",
        "id": 396538178,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1697214956
    },
    {
        "content": "<p>The plan is to port everything that's in an mdbook today to the new DSL, to reduce the fragmentation of the documentation ecosystem</p>",
        "id": 396538491,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1697215057
    },
    {
        "content": "<p>For the \"army of volunteers\" approach to work, we need to effectively communicate that those kind of PRs are welcomed and expedite PRs in that area (like <a href=\"https://github.com/leanprover/lean4/pull/2645\">lean4#2645</a>). People are currently very afraid to open PRs, and justifiably so given the history, so we have to work hard to combat the impression that opening a PR burns social capital and the probability of the PR getting in is low</p>",
        "id": 396540386,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697215689
    },
    {
        "content": "<p>Personally I would really love to see an integrated whole of what blueprint, mdBooks, doc-gen4, and LeanInk has offered. From informal goals, outlines to lemma API surface then to source and annotated goal states.</p>\n<p>It would be really excited to see its seemless integration with Reservoir, that just write lean code and doc following a guide, then package index, CI, document publish are all taken care of.</p>",
        "id": 396541402,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697215965
    },
    {
        "content": "<p>One thing that might help is policy on how much documentation to contribute at once; the danger is that a PR adding 10 docstrings has a problem in one of them and then never gets merged</p>",
        "id": 396542026,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697216133
    },
    {
        "content": "<p>8 people is not a lot if the goal is to build a language, but 8 maintainers can easily sustain an order of magnitude more work if they are shepherding work done by others. There is currently a large imbalance between the set of people able to meaningfully contribute and the set of people responsible for the work, which means that in the current situation the best way to speed up overall progress is for the people with the keys to less time making direct improvements and more time on reviewing work from the community. (And I say this as someone who has exactly this problem, working on things myself instead of reviewing for std4. But at least I have hopefully given people the right kind of impression to be motivated to submit work to std4.) This is basically exactly how mathlib4 got started, we were at 2 maintainers for a long time before we needed to grow the maintainer base. A comfortable ratio seems to be about 10-15 contributors per maintainer.</p>",
        "id": 396542927,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1697216446
    },
    {
        "content": "<p>At the same time, I think there is resource that other new languages don’t have. Mathlib contributors are large in number and very skilled. A sticking point is many come with a background somewhat orthogonal to software development. Making it easier for them to leverage their skill in mathlib to expertise with the core of Lean would unlock that resource.</p>",
        "id": 396543512,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697216701
    },
    {
        "content": "<p>I think that more mathematicians would write tactics if there was a document which did something like the following:</p>\n<p>1) showed how to write a tactic which just chains some other tactics together (e.g. in the complex number game I prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> is a ring and every axiom is proved with <code>intros; ext; simp; ring</code>)<br>\n2) showed how to write a tactic which is just aesop with a specific simp set (e.g. can one write <code>continuity</code> this way?)<br>\n3) showed how to write <code>assumption</code> (note: this is the first time we have any meta code involved)<br>\n4) showed how to write Jeremy's first order logic tactic which he explains in the final chapter of \"Programming in Lean\", a resource which was written for a very early version of Lean 3 (a bunch of the code in there didn't even run in Lean 3.4.1) and which I can no longer find on the internet!</p>\n<p>This would be an orthogonal approach to \"in order to write tactics you must first learn about this gigantic monad heirarchy\". I want to argue that the four examples above prove that this is not the case.</p>",
        "id": 396544887,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697217351
    },
    {
        "content": "<p>You want tutorials. I agree. I think there is a thread about this already.</p>",
        "id": 396545048,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1697217422
    },
    {
        "content": "<p>On the note of the gigantic monad hierarchy, it would be great if a version of <a href=\"https://github.com/leanprover-community/mathlib4/wiki/Monad-map\">https://github.com/leanprover-community/mathlib4/wiki/Monad-map</a> was in the documentation somewhere</p>",
        "id": 396545473,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697217609
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/3uI8JJBNxwSC6PcfPgqbteEf/programming_in_lean.pdf\">programming_in_lean.pdf</a></p>\n<p>Here's my local copy of Programming In Lean. A document about Lean, never finished, last updated in 2016. This document taught me what a monad was. The last chapter is a very lucid explanation by I think <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span>  on how to write a tableau prover for propositional logic.</p>",
        "id": 396545535,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1697217642
    },
    {
        "content": "<p>Thanks for the kind words. Yes, that was me. I learned how to metaprogram in Lean 3 by writing <code>finish</code>, and then I wrote that around the same time.</p>",
        "id": 396548413,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1697218957
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396542927\">said</a>:</p>\n<blockquote>\n<p>8 people is not a lot if the goal is to build a language, but 8 maintainers can easily sustain an order of magnitude more work if they are shepherding work done by others. There is currently a large imbalance between the set of people able to meaningfully contribute and the set of people responsible for the work, which means that in the current situation the best way to speed up overall progress is for the people with the keys to less time making direct improvements and more time on reviewing work from the community. (And I say this as someone who has exactly this problem, working on things myself instead of reviewing for std4. But at least I have hopefully given people the right kind of impression to be motivated to submit work to std4.) This is basically exactly how mathlib4 got started, we were at 2 maintainers for a long time before we needed to grow the maintainer base. A comfortable ratio seems to be about 10-15 contributors per maintainer.</p>\n</blockquote>\n<p>Just to provide a personal perspective (i.e. not representative for anyone else in the FRO): I'm slow at reviewing PRs and switching contexts greatly hurts my productivity. I would certainly not be able to sustain an order of magnitude of more work if all I did was shepherding work by others; my productivity may even decrease. People are <em>very</em> different in this regard.<br>\nMy personal experience from previous software projects is also that a lot of people contributing to the same code base and then bailing to leave the maintenance work to others is really bad from a productivity perspective in the long term. And reviewing the code in such detail that you can maintain it as well as the person that originally wrote it is a lot of extra work vs. the person that wrote the code also being fully responsible for it in the future.</p>\n<p>I also suspect that software is considerably more difficult to review than mathlib proofs where you can easily confirm that they state the correct definition or lemma and that the proof is correct. Style checking and such applies to both. Similarly, I consider maintaining a software library with well-defined APIs to be easier than maintaining a monolithic application.</p>\n<p>Just to be clear: I'm only arguing against the case for a general massive increase in productivity here, not PRs in general (which are valuable for other reasons, too).</p>",
        "id": 396548661,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1697219093
    },
    {
        "content": "<p>I think the army of volunteers proposal was primarily (only?) for documentation, but maybe I'm wrong.</p>",
        "id": 396551615,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1697220591
    },
    {
        "content": "<p>A recording of the presentation is now available at <a href=\"https://youtu.be/jaibFnoMDSw\">https://youtu.be/jaibFnoMDSw</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"jaibFnoMDSw\" href=\"https://youtu.be/jaibFnoMDSw\"><img src=\"https://uploads.zulipusercontent.net/ab64df7a7b5bfd99d79f42946bad6c5c7d515444/68747470733a2f2f692e7974696d672e636f6d2f76692f6a616962466e6f4d4453772f64656661756c742e6a7067\"></a></div>",
        "id": 396567945,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1697229427
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396544887\">said</a>:</p>\n<blockquote>\n<p>I think that more mathematicians would write tactics if there was a document which did something like the following:</p>\n<p>1) showed how to write a tactic which just chains some other tactics together (e.g. in the complex number game I prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> is a ring and every axiom is proved with <code>intros; ext; simp; ring</code>)<br>\n2) showed how to write a tactic which is just aesop with a specific simp set (e.g. can one write <code>continuity</code> this way?)<br>\n3) showed how to write <code>assumption</code> (note: this is the first time we have any meta code involved)<br>\n4) showed how to write Jeremy's first order logic tactic which he explains in the final chapter of \"Programming in Lean\", a resource which was written for a very early version of Lean 3 (a bunch of the code in there didn't even run in Lean 3.4.1) and which I can no longer find on the internet!</p>\n<p>This would be an orthogonal approach to \"in order to write tactics you must first learn about this gigantic monad heirarchy\". I want to argue that the four examples above prove that this is not the case.</p>\n</blockquote>\n<p>That would definitely help me. I would like to write a tactic that is basically iterating <code>cases'</code> as long as the created hypothesis are of type <code>exists</code> or <code>and</code> (that is, something like <code>rcases</code> but without having to give the nested structure). I haven't dared to try yet because it is not clear to me where to begin.</p>",
        "id": 396568440,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1697229727
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396527971\">said</a>:</p>\n<blockquote>\n<p>One thing I wanted to ask during the meeting but forgot: what happened to the plan of having compiled tactics? It originally was one of the promises of Lean 4 but, as far as I understand, it never became practicable and none of the heavy-lifting Mathlib tactic (ring, linarith, aesop...) is compiled.</p>\n</blockquote>\n<p>Good question. You might know that I put a great deal of effort into making such native compilation possible with zero setup. Today we mostly use this feature when creating executables, such as mathlib's <code>cache</code>. The last time I investigated this topic, the simple reason we didn't move forward was that we really didn't spend all that much time in the interpreter all in all (~10% afair). As precompiling a tactic is not free either, especially with the enormous dependency closure some important mathlib tactics have, optimization effort seemed better spent on other components first. It would be good to reevaluate this state after the recent significant optimizations have landed.</p>",
        "id": 396570672,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1697231001
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396567945\">said</a>:</p>\n<blockquote>\n<p>A recording of the presentation is now available at <a href=\"https://youtu.be/jaibFnoMDSw\">https://youtu.be/jaibFnoMDSw</a></p>\n</blockquote>\n<p>It's 29 seconds long...?</p>",
        "id": 396573219,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1697232453
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396544887\">said</a>:</p>\n<blockquote>\n<p>I think that more mathematicians would write tactics if there was a document which did something like the following:</p>\n<p>1) showed how to write a tactic which just chains some other tactics together (e.g. in the complex number game I prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> is a ring and every axiom is proved with <code>intros; ext; simp; ring</code>)<br>\n2) showed how to write a tactic which is just aesop with a specific simp set (e.g. can one write <code>continuity</code> this way?)<br>\n3) showed how to write <code>assumption</code> (note: this is the first time we have any meta code involved)<br>\n4) showed how to write Jeremy's first order logic tactic which he explains in the final chapter of \"Programming in Lean\", a resource which was written for a very early version of Lean 3 (a bunch of the code in there didn't even run in Lean 3.4.1) and which I can no longer find on the internet!</p>\n<p>This would be an orthogonal approach to \"in order to write tactics you must first learn about this gigantic monad heirarchy\". I want to argue that the four examples above prove that this is not the case.</p>\n</blockquote>\n<p>Do you mean some Lean 4 port of <a href=\"https://leanprover-community.github.io/lean3/extras/tactic_writing.html\">https://leanprover-community.github.io/lean3/extras/tactic_writing.html</a>?</p>",
        "id": 396573575,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1697232681
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252920\">Alex Kontorovich</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396573219\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396567945\">said</a>:</p>\n<blockquote>\n<p>A recording of the presentation is now available at <a href=\"https://youtu.be/jaibFnoMDSw\">https://youtu.be/jaibFnoMDSw</a></p>\n</blockquote>\n<p>It's 29 seconds long...?</p>\n</blockquote>\n<p>Huh, it was half an hour when I looked at it before</p>",
        "id": 396573670,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1697232735
    },
    {
        "content": "<p>I think tactics are essential but I was thinking more in terms of core itself. Sustainability becomes more feasible with a larger base who are knowledge about how the sausage is made.</p>",
        "id": 396573761,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1697232817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461731\">Miguel Marco</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396568440\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396544887\">said</a>:</p>\n<blockquote>\n<p>I think that more mathematicians would write tactics if there was a document which did something like the following:</p>\n<p>1) showed how to write a tactic which just chains some other tactics together (e.g. in the complex number game I prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> is a ring and every axiom is proved with <code>intros; ext; simp; ring</code>)<br>\n2) showed how to write a tactic which is just aesop with a specific simp set (e.g. can one write <code>continuity</code> this way?)<br>\n3) showed how to write <code>assumption</code> (note: this is the first time we have any meta code involved)<br>\n4) showed how to write Jeremy's first order logic tactic which he explains in the final chapter of \"Programming in Lean\", a resource which was written for a very early version of Lean 3 (a bunch of the code in there didn't even run in Lean 3.4.1) and which I can no longer find on the internet!</p>\n<p>This would be an orthogonal approach to \"in order to write tactics you must first learn about this gigantic monad heirarchy\". I want to argue that the four examples above prove that this is not the case.</p>\n</blockquote>\n<p>That would definitely help me. I would like to write a tactic that is basically iterating <code>cases'</code> as long as the created hypothesis are of type <code>exists</code> or <code>and</code> (that is, something like <code>rcases</code> but without having to give the nested structure). I haven't dared to try yet because it is not clear to me where to begin.</p>\n</blockquote>\n<p>This thing in particular would be trivial if we had a <code>match goal</code> equivalent to Coq, you wouldn't even have to dive into meta code in order to do it, it could be a simple macro.</p>",
        "id": 396579761,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1697237000
    },
    {
        "content": "<p>I think the best way to write such a macro is to use <code>Qq</code>, but then that means that the documentation no longer belongs in core...</p>",
        "id": 396580128,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1697237333
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396573670\">said</a>:</p>\n<blockquote>\n<p>Huh, it was half an hour when I looked at it before</p>\n</blockquote>\n<p>Perhaps something is going wrong with YouTube.</p>",
        "id": 396602660,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1697252213
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252920\">Alex Kontorovich</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396573219\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396567945\">said</a>:</p>\n<blockquote>\n<p>A recording of the presentation is now available at <a href=\"https://youtu.be/jaibFnoMDSw\">https://youtu.be/jaibFnoMDSw</a></p>\n</blockquote>\n<p>It's 29 seconds long...?</p>\n</blockquote>\n<p><span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> Thanks for telling me! Since I clearly don't understand YouTube's editor, I've restored the uncut original.</p>",
        "id": 396632178,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1697274473
    },
    {
        "content": "<p>I watched it and it's AWESOME news all the way through <span aria-label=\"clap\" class=\"emoji emoji-1f44f\" role=\"img\" title=\"clap\">:clap:</span></p>",
        "id": 396644601,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1697284252
    },
    {
        "content": "<p>Thanks for uploading. Great to see what is all happening.</p>\n<p>Could we also get the actual presentation linked? There are some links in the presentation that I wanna click on :)</p>",
        "id": 396730548,
        "sender_full_name": "josojo",
        "timestamp": 1697357805
    },
    {
        "content": "<p>Some of these exciting links are:</p>\n<ul>\n<li><a href=\"https://lean-fro.org/\">https://lean-fro.org/</a></li>\n<li><a href=\"https://lean-lang.org/\">https://lean-lang.org/</a></li>\n<li><a href=\"http://speed.lean-lang.org/\">http://speed.lean-lang.org/</a>  (note: not HTTPS)</li>\n<li><a href=\"https://loogle.lean-lang.org/\">https://loogle.lean-lang.org/</a></li>\n<li><a href=\"https://live.lean-lang.org/\">https://live.lean-lang.org/</a></li>\n<li><a href=\"https://reservoir.lean-lang.org/\">https://reservoir.lean-lang.org/</a></li>\n<li><a href=\"https://github.com/leanprover/lean4checker/\">lean4checker</a></li>\n<li><a href=\"https://github.com/digama0/lean4lean\">lean4lean</a></li>\n<li><a href=\"#narrow/stream/270676-lean4/topic/Lean.204.20extension.20update.20.22Commands.20.26.20Walkthrough.22\">Lean 4 extension update \"Commands &amp; Walkthrough\"</a></li>\n<li><a href=\"https://github.com/leanprover/lean4/pulls?q=is%3Apr+%22perf%3A+lake%3A%22\">Lake performance boost</a></li>\n<li><a href=\"https://github.com/leanprover/lean4/blob/master/src/lake/README.md#cloud-releases\">Lake cloud releases</a></li>\n<li>lake toolchain intelligence: <a href=\"https://github.com/leanprover/lake/pull/180\">leanprover/lake#180</a> related: <a href=\"https://github.com/leanprover-community/mathlib4/pull/7282\">#7282</a>  <a href=\"https://github.com/leanprover-community/mathlib4/pull/7652\">#7652</a></li>\n<li>Documentation tooling, haven't found the link to the demo, but <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/396536043\">discussions here</a></li>\n<li><a href=\"https://github.com/lean-dojo/LeanInfer\">LeanInfer</a></li>\n<li><a href=\"https://github.com/wellecks/llmstep\">llmstep</a></li>\n<li><a href=\"https://github.com/leanprover-community/repl\">repl</a></li>\n<li><a href=\"https://github.com/semorrison/lean-training-data\">lean-training-data</a></li>\n</ul>",
        "id": 396732487,
        "sender_full_name": "Utensil Song",
        "timestamp": 1697359525
    },
    {
        "content": "<p>Also <a href=\"https://github.com/leanprover-community/repl\">https://github.com/leanprover-community/repl</a>. I'd be very happy to have bug reports, criticisms, and requests for this one. The tactic mode is a bit half-baked at the moment, but I'm waiting to learn from users what is needed most here.</p>",
        "id": 396733784,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1697360531
    },
    {
        "content": "<p>The slides are at <a href=\"https://lean-lang.org/talks/community-meeting-oct-2023.pdf\">https://lean-lang.org/talks/community-meeting-oct-2023.pdf</a></p>",
        "id": 396747747,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1697371194
    },
    {
        "content": "<p>Lean Focused Research Organization (FRO) - Monthly Community Meeting - <strong>November edition</strong><br>\nTime-zone-aware time: <time datetime=\"2023-11-21T15:00:00Z\">2023-11-21T07:00:00-08:00</time><br>\n<strong>Meeting details and links:</strong><br>\nTuesday, November 21 · 7:00 – 8:00am<br>\nTime zone: America/Los_Angeles<br>\nGoogle Meet joining info<br>\nVideo call link: <a href=\"https://meet.google.com/guj-dcde-cdq\">https://meet.google.com/guj-dcde-cdq</a><br>\nOr dial: ‪(US) +1 617-675-4444‬ PIN: ‪335 436 365 9596‬#<br>\nMore phone numbers: <a href=\"https://tel.meet/guj-dcde-cdq?pin=3354363659596\">https://tel.meet/guj-dcde-cdq?pin=3354363659596</a></p>",
        "id": 399572816,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1698774336
    },
    {
        "content": "<p>Has anyone per chance already created a public calendar with these meetings that one can subscribe to?</p>",
        "id": 399603098,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1698786517
    },
    {
        "content": "<p>I have a webdav share with my org mode calendar if you want in on that <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 399610209,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1698789096
    },
    {
        "content": "<p>Hope to see you all next Tuesday.</p>",
        "id": 402713320,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1700232320
    },
    {
        "content": "<p>Another reminder for the Monthly  Community Meeting.<br>\nThe Lean FRO roadmap is now available here: <a href=\"https://lean-fro.org/about/roadmap/\">https://lean-fro.org/about/roadmap/</a><br>\nWe will cover it during the meeting tomorrow.</p>",
        "id": 403232135,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1700508370
    },
    {
        "content": "<p>You can also subscribe to a calendar of all community meetings as <a href=\"https://calendar.google.com/calendar/ical/c_a9065ad44bf780ab344c8d71818a21d3ba363a6df5ab777917373ffe0763f452%40group.calendar.google.com/public/basic.ics\">iCal</a></p>",
        "id": 403238906,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1700511356
    },
    {
        "content": "<p>(Go to <a href=\"http://calendar.google.com\">calendar.google.com</a>, click \"+\" in Other Calendars &gt; <code>From URL</code> in the left sidebar, paste that URL in, for anyone like me who wants to add that to your GCal)</p>",
        "id": 403239968,
        "sender_full_name": "Julian Berman",
        "timestamp": 1700511775
    },
    {
        "content": "<p>I couldn't make it today unfortunately, was this meeting recorded or is there any summary beyond the (very interesting!) roadmap?</p>",
        "id": 403480967,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1700610239
    },
    {
        "content": "<p>It was recorded, hopefully it will appear online soon</p>",
        "id": 403481055,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1700610281
    },
    {
        "content": "<p>I would also like to watch the recording!</p>",
        "id": 404632877,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1701177120
    },
    {
        "content": "<p>Uploading now!</p>",
        "id": 404633787,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1701177439
    },
    {
        "content": "<p><a href=\"https://youtu.be/4IDrPL4I_bU\">https://youtu.be/4IDrPL4I_bU</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"4IDrPL4I_bU\" href=\"https://youtu.be/4IDrPL4I_bU\"><img src=\"https://uploads.zulipusercontent.net/8f10e1e11d538ae62e39cdb1bf75b55d015db2ad/68747470733a2f2f692e7974696d672e636f6d2f76692f34494472504c34495f62552f64656661756c742e6a7067\"></a></div>",
        "id": 404819020,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1701249441
    },
    {
        "content": "<p>I love <span class=\"user-mention\" data-user-id=\"112857\">@Leonardo de Moura</span>'s remark that Zulip can be scaring for many people, I met several colleagues telling me so.</p>",
        "id": 404954998,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1701294270
    },
    {
        "content": "<p>This is very important to remember, and all the more important to try to account for your own bias on this concern, the more you personally use zulip! :-)</p>",
        "id": 404959399,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1701296210
    },
    {
        "content": "<p>It took the mathoverflow moderators far too long at first to appreciate just how scary and unfriendly mathoverflow appeared to many would-be users. Sadly by the time we realised, so much of the culture was already set (so that what we thought we had carefully and successfully cultured ended up being different from what we later wished for).</p>",
        "id": 404959645,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1701296346
    },
    {
        "content": "<p>I understand what you are saying very well, but we should not forget that MO was a great success! Thanks for building it.</p>",
        "id": 404959859,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1701296451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/404954998\">said</a>:</p>\n<blockquote>\n<p>Zulip can be scaring for many people</p>\n</blockquote>\n<p>I remember finding this myself long ago, and felt for quite a while that posting outside the <a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a> stream was a scary prospect.</p>",
        "id": 404961505,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1701297239
    },
    {
        "content": "<p>I would also like to add that I am one of the people who found MO great, but personally had always some reservations towards it.  I feel much more comfortable on this Zulip.  Of course, this is for entirely personal reasons: I find both projects awesome!</p>",
        "id": 404963450,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1701298215
    },
    {
        "content": "<p>Today's FRO community meeting will happen today at <time datetime=\"2024-01-12T15:00:00Z\">2024-01-12T10:00:00-05:00</time>  as part of the ongoing <a class=\"stream\" data-stream-id=\"419231\" href=\"/#narrow/stream/419231-Lean-Together-2024\">#Lean Together 2024</a> workshop. We'll be using the LT2024 Zoom meeting instead of the old Google link: <a href=\"https://brown.zoom.us/j/94792332977\">https://brown.zoom.us/j/94792332977</a></p>",
        "id": 412547985,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1705067382
    },
    {
        "content": "<p>The January community meeting recording is now available: <a href=\"https://youtu.be/iv_0-cbH5ow\">https://youtu.be/iv_0-cbH5ow</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"iv_0-cbH5ow\" href=\"https://youtu.be/iv_0-cbH5ow\"><img src=\"https://uploads.zulipusercontent.net/026d460b3c8c5fadae8af98ce2ae2b9fc0f79d0a/68747470733a2f2f692e7974696d672e636f6d2f76692f69765f302d636248356f772f64656661756c742e6a7067\"></a></div>",
        "id": 412657256,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1705112315
    },
    {
        "content": "<p>Is there an FRO meeting starting now?</p>",
        "id": 425535348,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1709910009
    },
    {
        "content": "<p>Yes</p>",
        "id": 425535383,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1709910017
    },
    {
        "content": "<p><a href=\"https://meet.google.com/guj-dcde-cdq\">https://meet.google.com/guj-dcde-cdq</a></p>",
        "id": 425535444,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1709910028
    },
    {
        "content": "<p>I think it would be useful to have either the outline or the slide available before or at the same time as the meeting start, it would help to solicit questions since there are so many independent threads going on it's difficult to remember everything</p>",
        "id": 425544175,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1709912880
    },
    {
        "content": "<p>I didn’t see it coming at all and completely missed it. It would be really nice to post reminder on the previous day.</p>",
        "id": 425558683,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1709917792
    },
    {
        "content": "<p>I’ll wait for the recording now.</p>",
        "id": 425558756,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1709917809
    },
    {
        "content": "<p>Oops, I’m in the same boat.</p>\n<p>Maybe a bot could post to zulip based on the <a href=\"https://lean-fro.org/events/\">events calendar</a>? Would this be easy to set up?</p>",
        "id": 425567587,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1709921169
    },
    {
        "content": "<p>Oh that would be nice!</p>",
        "id": 425567727,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1709921229
    },
    {
        "content": "<p>Patrick, you know that you can subscribe to the CalDav/google calendar, right? Do you stick to an old -fashioned pen-and-paper agenda while replacing pen-and-paper mathematics with Lean <span aria-label=\"smirk\" class=\"emoji emoji-1f60f\" role=\"img\" title=\"smirk\">:smirk:</span> ?</p>",
        "id": 425568759,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1709921687
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/425558756\">said</a>:</p>\n<blockquote>\n<p>I’ll wait for the recording now.</p>\n</blockquote>\n<p><a href=\"https://www.youtube.com/watch?v=vb1pPkG9e-8\">https://www.youtube.com/watch?v=vb1pPkG9e-8</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"vb1pPkG9e-8\" href=\"https://www.youtube.com/watch?v=vb1pPkG9e-8\"><img src=\"https://uploads.zulipusercontent.net/bb2c1e748da6581dff4915f8ea7c16678d257d5f/68747470733a2f2f692e7974696d672e636f6d2f76692f76623170506b4739652d382f64656661756c742e6a7067\"></a></div>",
        "id": 425576919,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1709925138
    },
    {
        "content": "<p>The next Mathlib community meeting was originally scheduled for <time datetime=\"2024-04-19T14:00:00Z\">2024-04-19T09:00:00-05:00</time>, but this is being postponed for a week until <time datetime=\"2024-04-26T14:00:00Z\">2024-04-26T09:00:00-05:00</time>. I hope to see you there. This message will be followed by a poll for topics of interest to discuss during the meeting. Feel free to contribute your own topic ideas.</p>",
        "id": 433547421,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1713280862
    },
    {
        "content": "<p>/poll Topics for Mathlib community meeting <time datetime=\"2024-04-26T14:00:00Z\">2024-04-26T09:00:00-05:00</time> <br>\nMathlib roadmap<br>\nPR review concerns and successes<br>\nAvenues of communication<br>\nCommunity blog</p>",
        "id": 433548112,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1713281105
    },
    {
        "content": "<p>Can the calendar event be updated? <a href=\"https://lean-fro.org/events/\">https://lean-fro.org/events/</a> (it's still showing as 19 April)</p>",
        "id": 433551679,
        "sender_full_name": "David Renshaw",
        "timestamp": 1713281740
    },
    {
        "content": "<p>Just a reminder that this is happening in two days. I'll post another reminder an hour before it starts.</p>",
        "id": 435235002,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1713977702
    },
    {
        "content": "<p>Reminder: starts in just over an hour.</p>",
        "id": 435579631,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714135713
    },
    {
        "content": "<p>Is there a link to the meeting?</p>",
        "id": 435592228,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1714139947
    },
    {
        "content": "<p><a href=\"https://meet.google.com/guj-dcde-cdq\">https://meet.google.com/guj-dcde-cdq</a><br>\nWaiting for some host to start the meeting.</p>",
        "id": 435592278,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1714139962
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 435592302,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1714139971
    },
    {
        "content": "<p>There should be a recording available at some point, but I tried to take a few notes very quickly. They may be incomplete or otherwise bad in places, as it was a bit hard to do while leading.</p>",
        "id": 435605023,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714144086
    },
    {
        "content": "<h1>Mathlib roadmap</h1>\n<ul>\n<li>Developing curated lists of topics</li>\n<li>\n<p>Figuring out what people want from Mathlib (e.g., what's missing, what things they need for their projects)<br>\n  This requires input from people who <em>don't</em> already contribute Mathlib.</p>\n</li>\n<li>\n<p>Getting non-expert Lean users to create Lean blueprints for things they want to see in Lean</p>\n</li>\n<li>Examples: Nevanlinna theorem</li>\n</ul>\n<h1>Std/Boost</h1>\n<ul>\n<li>tabled discussion until the next meeting</li>\n</ul>\n<h1>Avenues of communication</h1>\n<ul>\n<li>Mutual inductive types are hard to work with in Lean (maybe belongs in the roadmap section above)</li>\n<li>The community website needs lots of updating still</li>\n</ul>\n<h1>PR reviews concerns and successes</h1>\n<ul>\n<li>nothing mentioned</li>\n</ul>\n<h1>Community blog</h1>\n<ul>\n<li>no new updates recently</li>\n<li>people who are starting may use that to gauge activity and interest</li>\n<li>This Month in Mathlib</li>\n<li>Maybe use PRs with emoji reactions as ones that should go on the blog: ask authors to write a short blurb</li>\n<li>Have authors create short blurbs for PRs they feel should go on the blog. This could be on a wiki page or after the <code>---</code> on their PR.</li>\n</ul>\n<h1>Other questions or points of discussion</h1>\n<ul>\n<li>\n<p>the Ethereum foundation is looking to host a formalization competition for formalizing ZKVM ($10s of millions of dollars in bounties to encourage the wider community to prove correctness of these circuits).<br>\n  Justin Drake is the point of contact and is available on Telegram as <code>justindrake</code></p>\n</li>\n<li>\n<p>Label system for reservoir to tag packages with their focus? Planned for the future.</p>\n</li>\n<li>Should we move to more loosely coupled hierarchies? Talk to Johan who has started trying this out a bit. Preliminary results suggest it should be an improvement.</li>\n<li>Sometimes we should scope instances for very low-level classes that cause big issues with type class search (Subingleton, etc.)</li>\n<li>Some relevant Lean 4 issues: <a href=\"https://github.com/leanprover/lean4/pull/2905\">lean4#2905</a> and <a href=\"https://github.com/leanprover/lean4/pull/3996\">lean4#3996</a></li>\n</ul>",
        "id": 435605031,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714144089
    },
    {
        "content": "<p>One of my favourite English facts is that \"to table a discussion\" means both to put something on the agenda and to remove something from the agenda</p>",
        "id": 435605621,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714144284
    },
    {
        "content": "<p>This may be a British vs American thing...</p>",
        "id": 435605842,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714144348
    },
    {
        "content": "<p>Sorry I couldn’t be here, what is meant by \"more loosely coupled hierarchies\" ?</p>",
        "id": 435608960,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1714145386
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/435605621\">said</a>:</p>\n<blockquote>\n<p>One of my favourite English facts is that \"to table a discussion\" means both to put something on the agenda and to remove something from the agenda</p>\n</blockquote>\n<p>Relatedly, “to punt (on) something” has a simiar ambiguity, it seems: <a href=\"https://english.stackexchange.com/q/388162/44740\">https://english.stackexchange.com/q/388162/44740</a></p>",
        "id": 435609535,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1714145557
    },
    {
        "content": "<p>My personal favorite self-antonym (for which I've just learned that the fascinating words <strong>contronym</strong>, <strong>contranym</strong> or <strong>autantonym</strong> exist):</p>\n<p>cleave (<em>verb</em>): split or sever (something), especially along a natural line or grain.</p>\n<p>cleave (<em>verb</em>): stick fast to. adhere strongly to (a particular pursuit or belief).</p>",
        "id": 435621876,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714149357
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/435608960\">said</a>:</p>\n<blockquote>\n<p>Sorry I couldn’t be here, what is meant by \"more loosely coupled hierarchies\" ?</p>\n</blockquote>\n<p>In the context we used it today, it means separating the data structures from the prop bits, and only having mixin classes for the overlap. So maybe we would have an algebra data chain (Field → Ring → Monoid) and an ordered data chain (LinearOrder → PartialOrder → Preorder), but then <code>LinearOrderedField</code> would just take <code>Field</code> and <code>LinearOrder</code> as parameters, and the rest of the field are props. (at least that was my interepretation of the discussion)</p>",
        "id": 435622764,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714149607
    },
    {
        "content": "<p>I was teaching during the meeting but let me comment on the website and blog stuff. I agree it is very sad that things are not moving. This is why I called for help during the opening talk of LT2024. Updating the remaining Lean 3 pages on the website is pretty easy because we can do them one at a time and this is a one-shot job. Some people simply need to decide to prioritize this task. The blog is harder. I think the monthly post was very useful but it was a lot of work, done mostly by two people. We did have a python script listing rss stream posts with emojis. But this was only a very crude filter. And then one needed to come up with some categories and minimal narrative. I would love to see some team talking up this task, but don’t advertise it as something a script scrapping Zulip can do.</p>",
        "id": 435633440,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1714153882
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/435622764\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/435608960\">said</a>:</p>\n<blockquote>\n<p>Sorry I couldn’t be here, what is meant by \"more loosely coupled hierarchies\" ?</p>\n</blockquote>\n<p>In the context we used it today, it means separating the data structures from the prop bits, and only having mixin classes for the overlap. So maybe we would have an algebra data chain (Field → Ring → Monoid) and an ordered data chain (LinearOrder → PartialOrder → Preorder), but then <code>LinearOrderedField</code> would just take <code>Field</code> and <code>LinearOrder</code> as parameters, and the rest of the field are props. (at least that was my interepretation of the discussion)</p>\n</blockquote>\n<p>Ah yes, 100% yes, I’ve been wanting that refactor for a long time (I never pushed strongly for it because I have no idea about the performance implications)</p>",
        "id": 435634336,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1714154211
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> one thing that was in the meeting but not reflected in my notes above: we all understand the monthly updates were too much work for just the blog editors, and we were brainstorming ways that it could be accomplished with significantly less effort on your part (or whoever is on the team).</p>",
        "id": 435642952,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714158061
    },
    {
        "content": "<p>One thing that we could try for the month of May: when a maintainer merges a PR they feel like should be listed on the monthly blog update, they ask the author to contribute a line / sentence to a wiki page (with an <code>@</code> mention so that the author sees it). There can even be instructions like: give a one sentence summary. Then at the end of the month the editors just curate this page into an actual post. This distributes the work of choosing the PRs to the entire maintainer team, and it crowdsources the actual summaries.</p>",
        "id": 435642957,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714158064
    },
    {
        "content": "<p>This sounds very much worth trying.</p>",
        "id": 435643788,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1714158439
    },
    {
        "content": "<p>Doesn't this make generalizing over algebraic structures difficult? Especially since for now, category theory is its own branch of Mathlib and importing e.g. <code>Bundled</code> or <code>BundledHom</code> as your method of abstraction involves pulling in a whole bunch of extra imports</p>",
        "id": 435667104,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1714169992
    },
    {
        "content": "<p>Right now I'm trying to write a structure that will back a tactic (so it should have minimal dependencies), that needs to take \"any\" equivalence <code>eqv</code>, and am running into this exact problem -- the best I can do AFAICT is write <code>eqv : α → α → Prop</code>, and e.g. <code>RingEquiv</code> doesn't actually fit that signature, it has signature <code>(R : Type u) → (S : Type v) → [inst : Mul R] → [inst : Mul S] → [inst : Add R] → [inst : Add S] → Type (max u v)</code></p>",
        "id": 435667363,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1714170152
    },
    {
        "content": "<p>so anyone using my function is actually going to have to do their own bundling themselves</p>",
        "id": 435667383,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1714170170
    },
    {
        "content": "<p>What does that have to do with the proposal for separating the hierarchies?</p>",
        "id": 435677155,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714178110
    },
    {
        "content": "<p>I was addressing the line </p>\n<blockquote>\n<p>In the context we used it today, it means separating the data structures from the prop bits</p>\n</blockquote>\n<p>Replacing (more) bundled types with unbundled mixins means that the type signature will be increasingly variable and thus harder to quantify over.</p>\n<p>...Though I suppose my specific example doesn't get any <em>worse</em> if you split the existing hierarchies further?</p>",
        "id": 435679462,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1714180231
    },
    {
        "content": "<p>Two things:</p>\n<ol>\n<li>I wouldn't count on Mathlib's type class hierarchy settling down in general. </li>\n<li>I think this proposal, if anything, would contribute to stabilization, not detract from it.</li>\n</ol>",
        "id": 435679699,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1714180474
    },
    {
        "content": "<p>Also, it sounds like your approach would require the much larger change of going fully bundled instead of semi-bundled, e.g <code>(R : Ring)</code> instead of <code>(R : Type) [Ring R]</code>. This is essentially antithetic to what we've been doing so far (except in category theory) so I wouldn't count on Mathlib chnaging anytime soon in that aspect.</p>",
        "id": 435769314,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1714233786
    },
    {
        "content": "<p>Fair enough!</p>",
        "id": 435796910,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1714260034
    },
    {
        "content": "<p>Recording is now up at <a href=\"https://youtu.be/YkqbXjdZJuw\">https://youtu.be/YkqbXjdZJuw</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"YkqbXjdZJuw\" href=\"https://youtu.be/YkqbXjdZJuw\"><img src=\"https://uploads.zulipusercontent.net/3936696ff09b8fc73e71403d7969f174ed224681/68747470733a2f2f692e7974696d672e636f6d2f76692f596b7162586a645a4a75772f64656661756c742e6a7067\"></a></div>",
        "id": 436130757,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714421628
    },
    {
        "content": "<p>Apologies I wasn't able to make the meeting, I was far from the internet and sound asleep. :-)</p>\n<p>A few follow-up comments, after listening to it in the background:</p>\n<ul>\n<li>On the undergraduate curriculum, we still have almost nothing in differential equations / numerical analysis (although the number theorists are beginning to encroach here!).</li>\n<li>Separate projects (with a leader!) are clearly the way to make progress in specific directions, rather than Mathlib-internal roadmaps or github projects.<ul>\n<li>How can we make it easier for such projects to form? (Currently the model is too often \"be famous already, and announce you want to do something in Lean\"). </li>\n<li>Sometimes this can involve recruiting a blueprint author who is not necessarily already a Lean expert.</li>\n<li>Blueprints and dependency graphs are essential!</li>\n</ul>\n</li>\n<li>Review queue: we need new tooling. The github search interface is not enough. We need to be able to see quickly what is assigned to whom, which PRs have stalled (either with an assigned reviewer or without), etc. This is essentially journal submission management (both the software, and managing editors!), but I think in practice we need bespoke tooling.</li>\n<li>Blog posts<ul>\n<li>The FRO blog is more active now. Does it help to occasionally \"reblog\", to avoid long periods of silence?</li>\n<li>Can we pay someone? (Particularly for writing this \"month in mathlib\". It's a lot of work, and I don't believe it can be crowdsourced.) Hoskinson? Someone's grant? Apply for a grant?</li>\n<li>If we want to try crowd-sourcing, I would suggest just doing it directly in the repo. (PR descriptions or the wiki page are simply too much overhead, given that this isn't being done at all at present.) Just add a <code>this_month_in_mathlib.md</code> file in the repo, and ask people to add a bullet point. Then copy and paste to the blog. If it is embarrassingly unused, we delete the file again later. The downside of this is that it is harder to modify \"after the fact\", when someone notices that a certain PR was mention-worthy.</li>\n</ul>\n</li>\n</ul>",
        "id": 436169841,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714439182
    },
    {
        "content": "<p>Slides for today: <br>\n<a href=\"/user_uploads/3121/0BIRP_WW_q6rvGqQdYRPKOSm/Monthly-Community-Meeting-10-May-2024.pdf\">Monthly-Community-Meeting-10-May-2024.pdf</a></p>",
        "id": 437987017,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1715349604
    },
    {
        "content": "<p>Recording: <a href=\"https://youtu.be/sJipZYPKX6Q\">https://youtu.be/sJipZYPKX6Q</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"sJipZYPKX6Q\" href=\"https://youtu.be/sJipZYPKX6Q\"><img src=\"https://uploads.zulipusercontent.net/72bbfc2806e144e015265896ad2f49e59522e762/68747470733a2f2f692e7974696d672e636f6d2f76692f734a69705a59504b5836512f64656661756c742e6a7067\"></a></div>",
        "id": 438004768,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1715356331
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/113488-general/topic/Monthly.20Community.20Meeting/near/436169841\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Blog posts<ul>\n<li>[...] Can we pay someone? (Particularly for writing this \"month in mathlib\". It's a lot of work, and I don't believe it can be crowdsourced.) Hoskinson? Someone's grant? Apply for a grant?</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>I recently came across a call by the DFG (German research foundation) for research software infrastructures. Calls are open all year round; I wonder if applying for a grant there could work.<br>\nPresumably whoever applies needs to be in Germany, though...</p>",
        "id": 440462031,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716538554
    },
    {
        "content": "<p>Is it somewhere in here? <a href=\"https://www.dfg.de/de/foerderung/foerderinitiativen/nfdi\">https://www.dfg.de/de/foerderung/foerderinitiativen/nfdi</a></p>",
        "id": 440462936,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716538935
    },
    {
        "content": "<p>It's here: <a href=\"https://www.dfg.de/de/foerderung/foerdermoeglichkeiten/programme/infrastruktur/lis/lis-foerderangebote/forschungssoftwareinfrastrukturen\">https://www.dfg.de/de/foerderung/foerdermoeglichkeiten/programme/infrastruktur/lis/lis-foerderangebote/forschungssoftwareinfrastrukturen</a></p>",
        "id": 440463048,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716538980
    },
    {
        "content": "<p>English version: <a href=\"https://www.dfg.de/en/research-funding/funding-opportunities/programmes/infrastructure/lis/funding-opportunities/research-software-infrastructures\">https://www.dfg.de/en/research-funding/funding-opportunities/programmes/infrastructure/lis/funding-opportunities/research-software-infrastructures</a></p>",
        "id": 440463078,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716538993
    },
    {
        "content": "<p>Is there a meeting today?</p>",
        "id": 444706899,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1718373573
    },
    {
        "content": "<p>I am \"waiting for the host to join\"</p>",
        "id": 444707514,
        "sender_full_name": "David Renshaw",
        "timestamp": 1718373737
    },
    {
        "content": "<p>What link?</p>",
        "id": 444707550,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718373749
    },
    {
        "content": "<p><a href=\"https://meet.google.com/guj-dcde-cdq?authuser=0&amp;hs=122\">https://meet.google.com/guj-dcde-cdq?authuser=0&amp;hs=122</a></p>",
        "id": 444707655,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1718373778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> you add <a href=\"https://lean-fro.org/events/\">this</a> calendar to any app you use</p>",
        "id": 444708103,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1718373919
    },
    {
        "content": "<p>this is how I don't forget the meetings :D</p>",
        "id": 444708152,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1718373927
    },
    {
        "content": "<p>I let people in but as I think we're on schedule for a Mathlib-led community meeting, I don't have any agenda. I'm not sure anyone else does.</p>",
        "id": 444708168,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1718373933
    },
    {
        "content": "<p>I ended the call for lack of agenda and participants. <span class=\"user-mention\" data-user-id=\"243791\">@David Renshaw</span> gave a great, quick demo on an embedding of chess into Lean though!</p>",
        "id": 444709926,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1718374454
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span>, who built <a href=\"https://lean-across-the-board.readthedocs.io/en/latest/\">https://lean-across-the-board.readthedocs.io/en/latest/</a> a while ago)</p>",
        "id": 444713312,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718375522
    },
    {
        "content": "<p>And <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> who did a ton (most?) of the useful work on that!</p>",
        "id": 444725543,
        "sender_full_name": "Julian Berman",
        "timestamp": 1718379058
    },
    {
        "content": "<p>Sorry about this: this monthly community meeting was meant to be run by the Mathlib maintainers, and it seems we dropped the ball and collectively managed to forget about the meeting.</p>",
        "id": 444838113,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718436335
    },
    {
        "content": "<p>At the FRO, we've made the decision to discontinue our (up to now bimonthly) community meetings in favor of focusing on the release blog posts and the office hours, neither of which we had when we started the community meetings. We believe that the latter two are better suited for documenting new features and answering questions from the community, respectively. Questions specifically about a new release are in scope and welcome at the office hours as well.</p>\n<p>We are happy to keep providing the technical hosting for the maintainers-led meetings if desired.</p>",
        "id": 448112151,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1719751489
    }
]