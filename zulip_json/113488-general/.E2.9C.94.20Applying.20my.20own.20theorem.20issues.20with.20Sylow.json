[
    {
        "content": "<p>I am trying to apply the following theorems:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">Classical</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">pq_unique_sylow_p_subgroup</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Finite</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hh</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hG</span><span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"bp\">=</span> <span class=\"n\">p</span><span class=\"bp\">*</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">normal_of_unique</span> <span class=\"o\">[</span><span class=\"n\">Finite</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">Normal</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>This is my most successful attempt so far. I think the major issue is that P is regarded as a Subgroup of G rather than a Sylow p Subgroup. I have attempted to prove that P is both, but lean keeps complaining that I am not allowed to do that. Any advice on how I should proceed? Should I change the statements of my theorems?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">Classical</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">C_pq</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">lp</span> <span class=\"o\">:</span> <span class=\"n\">Finite</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">hpq</span><span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"bp\">&lt;</span><span class=\"n\">q</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hpqq</span><span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"bp\">=</span> <span class=\"n\">p</span><span class=\"bp\">*</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)):</span> <span class=\"n\">IsCyclic</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"c1\">-- Define the Sylow p-subgroup</span>\n  <span class=\"k\">have</span> <span class=\"n\">p0</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hpqq</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Nat.dvd_mul_right</span> <span class=\"n\">p</span> <span class=\"n\">q</span>\n  <span class=\"k\">have</span> <span class=\"n\">p1</span> <span class=\"o\">:=</span> <span class=\"n\">Sylow.exists_subgroup_card_pow_prime</span> <span class=\"n\">p</span> <span class=\"o\">((</span><span class=\"n\">pow_one</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">p0</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_one</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">p1</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">P</span><span class=\"o\">,</span> <span class=\"n\">hP</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">p1</span>\n<span class=\"c1\">-- Show P is cyclic and generated by an element g of order p</span>\n  <span class=\"k\">have</span> <span class=\"n\">p3</span> <span class=\"o\">:</span> <span class=\"n\">IsCyclic</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">isCyclic_of_prime_card</span> <span class=\"n\">hP</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">gP</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">IsCyclic.exists_generator</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">P</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">p4</span> <span class=\"o\">:</span> <span class=\"n\">orderOf</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">orderOf_eq_card_of_forall_mem_zpowers</span> <span class=\"n\">gP</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">p5</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">apply</span> <span class=\"n\">pq_unique_sylow_p_subgroup</span> <span class=\"n\">p</span> <span class=\"n\">q</span>\n    <span class=\"gr\">sorry</span>\n    <span class=\"n\">apply</span> <span class=\"n\">hpq</span>\n    <span class=\"n\">apply</span> <span class=\"n\">h</span>\n    <span class=\"n\">apply</span> <span class=\"n\">hpqq</span>\n\n  <span class=\"k\">have</span> <span class=\"n\">p6</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">Normal</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">apply</span> <span class=\"n\">normal_of_unique</span> <span class=\"n\">p</span> <span class=\"n\">P</span>\n</code></pre></div>",
        "id": 421955285,
        "sender_full_name": "Roshan Kohli",
        "timestamp": 1708126661
    },
    {
        "content": "<p>Nevermind, I have solved this by myself.</p>",
        "id": 421962786,
        "sender_full_name": "Roshan Kohli",
        "timestamp": 1708132400
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"671777\">Roshan Kohli</span> has marked this topic as resolved.</p>",
        "id": 421962789,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708132404
    }
]