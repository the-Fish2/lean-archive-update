[
    {
        "content": "<p>Hello. We're currently working on <a href=\"https://github.com/iehality/lean4-logic\">formalizing mathematical logics in Lean4</a> and its documentation.</p>\n<p>We have <a href=\"https://iehality.github.io/lean4-logic/book/references.html#related-works\">a list</a> of related works of formalization of all fields of logics (including modal logics and non-classical logic) with theorem prover (Lean 4, Lean 3, Isabelle, Coq, etc.) as far as we know.<br>\nIf you know anything not on this list, please let us know.</p>\n<p>Thanks.</p>",
        "id": 444837878,
        "sender_full_name": "SnO2WMaN",
        "timestamp": 1718436071
    },
    {
        "content": "<p>I was about to tell you to check out lean4-logic, but then I noticed the actual URL <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 444839044,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1718437305
    },
    {
        "content": "<p>edited. sorry confusing.</p>",
        "id": 444839215,
        "sender_full_name": "SnO2WMaN",
        "timestamp": 1718437475
    },
    {
        "content": "<p>You're missing <a href=\"https://github.com/leanprover-community/con-nf/\">Con(NF)</a></p>",
        "id": 444848083,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718445419
    },
    {
        "content": "<p>For Coq there was also <a href=\"https://arxiv.org/abs/1503.08744\">this</a> formalisation of propositional calculi by <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> , and I participated two years ago in <a href=\"https://inria.hal.science/hal-04317972/file/main.pdf\">this project</a>, that along the way formalised an intuitionistic version of the Calculus of Structures in Coq. There’s also some lean3/lean4/isabelle related work there, but the full formalisation (with some soundness results as well) is only for Coq. <a href=\"https://github.com/direct-manipulation/profint\">This is the GitHub repo</a></p>",
        "id": 444856461,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1718451965
    },
    {
        "content": "<p>Ah, I forgot to mention that more works to add on this PR. I checked many Coq implementation.</p>\n<p><a href=\"https://github.com/iehality/lean4-logic/pull/79\">https://github.com/iehality/lean4-logic/pull/79</a></p>",
        "id": 444856585,
        "sender_full_name": "SnO2WMaN",
        "timestamp": 1718452088
    },
    {
        "content": "<p>For Lean 3 and 4, have you included the stuff mentioned in <a class=\"stream-topic\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Completeness.20theorem.20for.20first-order.20logic\">#Is there code for X? &gt; Completeness theorem for first-order logic</a> and <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/G.C3.B6del.27s.20first.20incompleteness.20theorem\">#general &gt; Gödel's first incompleteness theorem</a> ?</p>",
        "id": 444857234,
        "sender_full_name": "Jason Rute",
        "timestamp": 1718452749
    },
    {
        "content": "<p>I’m not sure if you would consider formalization of type theory based logics to be in scope, but there are a lot of meta-theorems about the logics of the various provers.  For example, <a href=\"https://link.springer.com/chapter/10.1007/11814771_17\">https://link.springer.com/chapter/10.1007/11814771_17</a></p>",
        "id": 444857559,
        "sender_full_name": "Jason Rute",
        "timestamp": 1718453000
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"115715\">Jason Rute</span> <a href=\"#narrow/stream/113488-general/topic/List.20of.20Mathematical.20Logic.20Formalization/near/444857234\">said</a>:</p>\n<blockquote>\n<p>For Lean 3 and 4, have you included the stuff mentioned in <a class=\"stream-topic\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Completeness.20theorem.20for.20first-order.20logic\">#Is there code for X? &gt; Completeness theorem for first-order logic</a> and <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/G.C3.B6del.27s.20first.20incompleteness.20theorem\">#general &gt; Gödel's first incompleteness theorem</a> ?</p>\n</blockquote>\n<p>Of course included (because these result are exactly the result of lean4-logic, i.e. this list hosted on)</p>",
        "id": 444858527,
        "sender_full_name": "SnO2WMaN",
        "timestamp": 1718453913
    }
]