[
    {
        "content": "<p>High energy physicists (and others) have a tendency to use Einstein notation. </p>\n<p>An important part of Einstein notation is the ability to have subscript and superscript greek indices. I.e. for a matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>η</mi></mrow><annotation encoding=\"application/x-tex\">\\eta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span></span></span></span>, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>η</mi><mrow><mi>μ</mi><mi>ν</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\eta_{\\mu\\nu}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.06366em;\">μν</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> corresponds to the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>μ</mi><mo separator=\"true\">,</mo><mi>ν</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mu, \\nu)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">μ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.06366em;\">ν</span><span class=\"mclose\">)</span></span></span></span>-element of the matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>η</mi></mrow><annotation encoding=\"application/x-tex\">\\eta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span></span></span></span>. Furthermore,  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>η</mi><mrow><mi>μ</mi><mi>ν</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\eta^{\\mu\\nu}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8588em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.06366em;\">μν</span></span></span></span></span></span></span></span></span></span></span></span> corresponds to the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>μ</mi><mo separator=\"true\">,</mo><mi>ν</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mu, \\nu)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">μ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.06366em;\">ν</span><span class=\"mclose\">)</span></span></span></span>-element of the matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>η</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\eta^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>There is more to Einstein notation. But I was wondering if anyone had an idea of how to  implement these basic parts into Lean?</p>",
        "id": 443751027,
        "sender_full_name": "Joseph Tooby-Smith",
        "timestamp": 1718019731
    },
    {
        "content": "<p>In general getting arbitrary super and subscript symbols is non trivial. UTF-8 does not even specify all numerals to have super and subscript versions, let alone greek things. So whatever you are goin to do to get there will either be a horrible hack, or will have to make compromises on the recognizability of the notation from paper.</p>",
        "id": 443751472,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1718019902
    },
    {
        "content": "<p>Ok, thanks. In that case, the latter route seems like the only feasible one.</p>",
        "id": 443752321,
        "sender_full_name": "Joseph Tooby-Smith",
        "timestamp": 1718020213
    },
    {
        "content": "<p>This is the best I could come up with:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">notation</span><span class=\"w\"> </span><span class=\"s2\">\"η⁽\"</span><span class=\"w\"> </span><span class=\"n\">mu</span><span class=\"w\"> </span><span class=\"s2\">\"⁾⁽\"</span><span class=\"w\"> </span><span class=\"n\">nu</span><span class=\"w\"> </span><span class=\"s2\">\"⁾\"</span><span class=\"w\">   </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">η</span><span class=\"w\"> </span><span class=\"n\">mu</span><span class=\"w\"> </span><span class=\"n\">nu</span>\n\n<span class=\"kn\">notation</span><span class=\"w\"> </span><span class=\"s2\">\"η₍\"</span><span class=\"w\"> </span><span class=\"n\">mu</span><span class=\"w\"> </span><span class=\"s2\">\"₎₍\"</span><span class=\"w\"> </span><span class=\"n\">nu</span><span class=\"w\"> </span><span class=\"s2\">\"₎\"</span><span class=\"w\">   </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">η</span><span class=\"bp\">⁻¹</span><span class=\"w\"> </span><span class=\"n\">mu</span><span class=\"w\"> </span><span class=\"n\">nu</span>\n</code></pre></div>",
        "id": 443759101,
        "sender_full_name": "Joseph Tooby-Smith",
        "timestamp": 1718022414
    },
    {
        "content": "<p>Note that the horrible hack exists in mathlib already, as</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">macro</span><span class=\"w\"> </span><span class=\"s2\">\"η⁽\"</span><span class=\"w\"> </span><span class=\"n\">mu</span><span class=\"o\">:</span><span class=\"n\">superscript</span><span class=\"o\">(</span><span class=\"n\">term</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"s2\">\"⁾⁽\"</span><span class=\"w\"> </span><span class=\"n\">nu</span><span class=\"o\">:</span><span class=\"n\">superscript</span><span class=\"o\">(</span><span class=\"n\">term</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"s2\">\"⁾\"</span><span class=\"w\">  </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"w\">  </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">η</span><span class=\"w\"> </span><span class=\"n\">mu</span><span class=\"w\"> </span><span class=\"n\">nu</span>\n</code></pre></div>",
        "id": 443763729,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718023825
    },
    {
        "content": "<p>Related discussion <a href=\"#narrow/stream/287929-mathlib4/topic/superscript.20parser\">here</a>.</p>",
        "id": 443774005,
        "sender_full_name": "Utensil Song",
        "timestamp": 1718026805
    },
    {
        "content": "<p>Thanks for sharing this. Though, I don't think this lets me do exactly what I want, since e.g. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ν</mi></mrow><annotation encoding=\"application/x-tex\">\\nu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.06366em;\">ν</span></span></span></span> (as greek letters) don't appear in <code>Mapping.superscript</code>.  I think it will let me do e.g. $\\eta^{01}$ etc. for specific values of the indices.</p>",
        "id": 443786393,
        "sender_full_name": "Joseph Tooby-Smith",
        "timestamp": 1718030420
    },
    {
        "content": "<p>Mathematicians have been spoilt by LaTeX. Unicode, whilst better than all the ascii <code>&lt;=</code> stuff we see in earlier proof assistants, is still at the end of the day a very poor substitute. I would love to see some kind of magic button we can press which makes some part of the infoview or something look like LaTeX. Is this something which could one day be viable <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> ?</p>",
        "id": 443804929,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1718035086
    },
    {
        "content": "<p>Yes this is doable but requires engineering work.</p>",
        "id": 443856240,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1718050715
    },
    {
        "content": "<p><a href=\"https://github.com/kmill/LeanTeX\">https://github.com/kmill/LeanTeX</a> is part of the story, I imagine</p>",
        "id": 443858796,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718051588
    },
    {
        "content": "<p>At the core of the solution is a mechanism to declare how a notation or a plain definition is shown, parallel to delab. A little like Typst's <code>show</code>.</p>",
        "id": 443887940,
        "sender_full_name": "Utensil Song",
        "timestamp": 1718065099
    },
    {
        "content": "<p>A few points:<br>\n(1) Mostly you can get away with just using covariant form of tensors. e.g. Riemann tensor with all indices lowered. You could assume that the contracting of two covariant tensors involves contraction with the metric. That's one way to avoid mixed indices<br>\n(2) Some systems use notation such as A[3][4][-2][-4] with negative signs to indicate raised tensors. (Not that this is very nice)<br>\n(3) In my spare time I am working on a nice latex like interface for Lean which would display nice equations but run Lean underneath. If you have a wishlist of requests of what features you would like let me know.</p>",
        "id": 443900586,
        "sender_full_name": "Mr Proof",
        "timestamp": 1718072092
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"653351\">Joseph Tooby-Smith</span> <a href=\"#narrow/stream/113488-general/topic/Einstein.20notation/near/443759101\">said</a>:</p>\n<blockquote>\n<p>This is the best I could come up with:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">notation</span><span class=\"w\"> </span><span class=\"s2\">\"η⁽\"</span><span class=\"w\"> </span><span class=\"n\">mu</span><span class=\"w\"> </span><span class=\"s2\">\"⁾⁽\"</span><span class=\"w\"> </span><span class=\"n\">nu</span><span class=\"w\"> </span><span class=\"s2\">\"⁾\"</span><span class=\"w\">   </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">η</span><span class=\"w\"> </span><span class=\"n\">mu</span><span class=\"w\"> </span><span class=\"n\">nu</span>\n\n<span class=\"kn\">notation</span><span class=\"w\"> </span><span class=\"s2\">\"η₍\"</span><span class=\"w\"> </span><span class=\"n\">mu</span><span class=\"w\"> </span><span class=\"s2\">\"₎₍\"</span><span class=\"w\"> </span><span class=\"n\">nu</span><span class=\"w\"> </span><span class=\"s2\">\"₎\"</span><span class=\"w\">   </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">η</span><span class=\"bp\">⁻¹</span><span class=\"w\"> </span><span class=\"n\">mu</span><span class=\"w\"> </span><span class=\"n\">nu</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>In retrospect, this is actually a better direction if with a slight modification to use these parentheses to indicate sup/sub, so one can write <code>η⁽a b⁾₍c₎⁽d⁾</code> to mean <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>η</mi><mrow><mphantom><mi>o</mi><mi>o</mi></mphantom><mi>c</mi></mrow><mrow><mi>a</mi><mi>b</mi></mrow></msubsup><msup><mrow></mrow><mi>d</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\eta^{ab}_{\\phantom{oo}c}{}^{d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0961em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"color:transparent;\">oo</span><span class=\"mord mathnormal mtight\">c</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ab</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></span> where <code>a b c d</code> could be symbols or specific values. But the layout is just poor.</p>\n<p>One will need to write a small DSL syntax to cover this, or better,  <code>η^{a b}_{c}^{d}</code> which mimics LaTeX but I'm tempted to use brackets i.e. <code>η^[a b]_[c]^[d]</code>.</p>",
        "id": 443910115,
        "sender_full_name": "Utensil Song",
        "timestamp": 1718078679
    },
    {
        "content": "<p>I agree, I think the notation: <code>η^[a b]_[c]^[d]</code> is the best here.</p>",
        "id": 443968992,
        "sender_full_name": "Joseph Tooby-Smith",
        "timestamp": 1718102213
    }
]