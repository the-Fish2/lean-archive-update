[
    {
        "content": "<p>Hi everyone!</p>\n<p>When I try to build the documentation with <code>doc-gen4</code>, I get an error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">CMark</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">UnicodeBasic</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">leanInk</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">DYLD_LIBRARY_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">leanInk</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">Violetta</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.6.0-rc1/bin/lean ./.lake/packages/leanInk/././LeanInk/Analysis/InfoTreeTraversal.lean -R ./.lake/packages/leanInk/./. -o ./.lake/packages/leanInk/.lake/build/lib/LeanInk/Analysis/InfoTreeTraversal.olean -i ./.lake/packages/leanInk/.lake/build/lib/LeanInk/Analysis/InfoTreeTraversal.ilean -c ./.lake/packages/leanInk/.lake/build/ir/LeanInk/Analysis/InfoTreeTraversal.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">leanInk</span><span class=\"bp\">/././</span><span class=\"n\">LeanInk</span><span class=\"bp\">/</span><span class=\"n\">Analysis</span><span class=\"bp\">/</span><span class=\"n\">InfoTreeTraversal.lean</span><span class=\"o\">:</span><span class=\"mi\">317</span><span class=\"o\">:</span><span class=\"mi\">52</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">_resolveTacticList</span> <span class=\"n\">ctx</span>\n<span class=\"n\">argument</span>\n  <span class=\"n\">ctx</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">PartialContextInfo</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">optParam</span> <span class=\"o\">(</span><span class=\"n\">Option</span> <span class=\"n\">ContextInfo</span><span class=\"o\">)</span> <span class=\"n\">none</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n</code></pre></div>\n<p>The problem seems to originate in <code>.lake/packages/leanInk/LeanInk/Analysis/InfoTreeTraversal.lean</code> file.</p>\n<p><span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span>  Could you please take a look? I guess it might be related to a recent <a href=\"https://github.com/leanprover/LeanInk/commit/04d3f70de8e17de4cb53657ae86c46a48157c6c6\">commit</a>.</p>",
        "id": 423207966,
        "sender_full_name": "Violetta Sim",
        "timestamp": 1708812831
    },
    {
        "content": "<p>doc-gen4 is maintained by <span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> and uses <a href=\"https://github.com/hargoniX/LeanInk/tree/doc-gen\">a fork of LeanInk</a>.</p>",
        "id": 423214647,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1708819312
    },
    {
        "content": "<p>This is fixed in said fork and the fix is used by the current doc-gen version on master</p>",
        "id": 423214727,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1708819365
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/113488-general/topic/LeanInk.20fails.20CI.20after.20update/near/423214727\">said</a>:</p>\n<blockquote>\n<p>This is fixed in said fork and the fix is used by the current doc-gen version on master</p>\n</blockquote>\n<p>Oh. Okay. Then, could you please help me figure out what is it that I am doing wrong? I have </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"k\">if</span> <span class=\"n\">get_config</span><span class=\"bp\">?</span> <span class=\"n\">env</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"s2\">\"dev\"</span> <span class=\"k\">then</span> <span class=\"c1\">-- dev is so not everyone has to build it</span>\n<span class=\"n\">require</span> <span class=\"bp\">«</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">»</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/doc-gen4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n</code></pre></div>\n<p>in the lakefile, and I am running</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"bp\">-</span><span class=\"n\">R</span> <span class=\"bp\">-</span><span class=\"n\">Kenv</span><span class=\"bp\">=</span><span class=\"n\">dev</span> <span class=\"n\">update</span>\n<span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">build</span> <span class=\"bp\">-</span><span class=\"n\">Kwerror</span>\n<span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"bp\">-</span><span class=\"n\">R</span> <span class=\"bp\">-</span><span class=\"n\">Kenv</span><span class=\"bp\">=</span><span class=\"n\">dev</span> <span class=\"n\">build</span> <span class=\"n\">PhiCalculus</span><span class=\"o\">:</span><span class=\"n\">docs</span>\n</code></pre></div>\n<p>Does this guarantee that I use the correct version?</p>\n<p>The link to the pipeline: <a href=\"https://github.com/objectionary/proof/actions/runs/8029093680/job/21934994634#step:7:101\">https://github.com/objectionary/proof/actions/runs/8029093680/job/21934994634#step:7:101</a></p>",
        "id": 423219591,
        "sender_full_name": "Violetta Sim",
        "timestamp": 1708824447
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"681889\">Violetta Sim</span> <a href=\"#narrow/stream/113488-general/topic/LeanInk.20fails.20CI.20after.20update/near/423219591\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/113488-general/topic/LeanInk.20fails.20CI.20after.20update/near/423214727\">said</a>:</p>\n<blockquote>\n<p>This is fixed in said fork and the fix is used by the current doc-gen version on master</p>\n</blockquote>\n<p>Oh. Okay. Then, could you please help me figure out what is it that I am doing wrong? I have </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"k\">if</span> <span class=\"n\">get_config</span><span class=\"bp\">?</span> <span class=\"n\">env</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"s2\">\"dev\"</span> <span class=\"k\">then</span> <span class=\"c1\">-- dev is so not everyone has to build it</span>\n<span class=\"n\">require</span> <span class=\"bp\">«</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">»</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/doc-gen4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n</code></pre></div>\n<p>in the lakefile, and I am running</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"bp\">-</span><span class=\"n\">R</span> <span class=\"bp\">-</span><span class=\"n\">Kenv</span><span class=\"bp\">=</span><span class=\"n\">dev</span> <span class=\"n\">update</span>\n<span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">build</span> <span class=\"bp\">-</span><span class=\"n\">Kwerror</span>\n<span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"bp\">-</span><span class=\"n\">R</span> <span class=\"bp\">-</span><span class=\"n\">Kenv</span><span class=\"bp\">=</span><span class=\"n\">dev</span> <span class=\"n\">build</span> <span class=\"n\">PhiCalculus</span><span class=\"o\">:</span><span class=\"n\">docs</span>\n</code></pre></div>\n<p>Does this guarantee that I use the correct version?</p>\n<p>The link to the pipeline: <a href=\"https://github.com/objectionary/proof/actions/runs/8029093680/job/21934994634#step:7:101\">https://github.com/objectionary/proof/actions/runs/8029093680/job/21934994634#step:7:101</a></p>\n</blockquote>\n<p>I would say check your lake lock file and compare the doc-gwn commit to the master one to make sure. But in principle that looks correct yes.</p>",
        "id": 423250652,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1708855852
    },
    {
        "content": "<p>Oh and you also have to make sure that you are using a lean version that is compatible with the latest doc-gen of course, you'll find the version that doc-gen uses in its lean-toolchain file</p>",
        "id": 423250922,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1708856135
    },
    {
        "content": "<p>I think what's going on here is that you updated the lean-toolchain version to v4.6.0rc1, but the doc-gen4 in your <a href=\"https://github.com/objectionary/proof/blob/19363f759988b15604fc34b3c133cbb8d6ecd5ca/lake-manifest.json#L52\">lake-manifest.json</a> is still on an old revision. Does running <code>lake update doc-gen4</code> fix it?</p>",
        "id": 423252281,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1708857429
    },
    {
        "content": "<p>Ah, huh, it looks like doc-gen4 is up-to-date, but LeanInk is not?</p>",
        "id": 423252512,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1708857647
    },
    {
        "content": "<p>No I think both are up to date. The error above indicates that the code has produced a partial context but the Lean API wants the old version still (if i remember your change correctly?). Looking at the lean-toolchain version: <a href=\"https://github.com/objectionary/proof/blob/master/lean-toolchain\">https://github.com/objectionary/proof/blob/master/lean-toolchain</a> I'm guessing that their Lean compiler is out of date  and they should move to 4.6.0rc1 to address this?</p>",
        "id": 423252639,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1708857756
    },
    {
        "content": "<p>That's a different branch from the one that the CI above is running on</p>",
        "id": 423252677,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1708857794
    },
    {
        "content": "<p>Aha indeed LeanInk appears out of date...that's a bit surprising</p>",
        "id": 423252874,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1708857940
    },
    {
        "content": "<p><a href=\"https://github.com/objectionary/proof/commit/19363f759988b15604fc34b3c133cbb8d6ecd5ca#diff-d2bbbefe896fa3db86583f19e6fb402ed9ba755d564f4de97f398b0596f4c2b8R52\">Here</a>, the doc-gen4 revision was updated but somehow not the inherited LeanInk revision. I wonder how that happened?</p>",
        "id": 423252944,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1708857976
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/std4/blob/main/lake-manifest.json\">https://github.com/leanprover/std4/blob/main/lake-manifest.json</a> could it be because their doc-gen is required  after std4 and std4 already pins the LeanInk dependency? (ugh we should really get a versioning system)</p>",
        "id": 423253011,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1708858044
    },
    {
        "content": "<p>That is indeed the case.</p>\n<div class=\"codehilite\" data-code-language=\"Darcs Patch\"><pre><span></span><code>diff --git a/lakefile.lean b/lakefile.lean\nindex 6b3eef8..0cb0843 100644\n<span class=\"gd\">--- a/lakefile.lean</span>\n<span class=\"gi\">+++ b/lakefile.lean</span>\n@@ -3,11 +3,11 @@ open Lake DSL\n\n package «phi-calculus»\n\n<span class=\"gd\">-require std from git \"https://github.com/leanprover/std4\" @ \"main\"</span>\n<span class=\"gd\">-</span>\n meta if get_config? env = some \"dev\" then -- dev is so not everyone has to build it\n require «doc-gen4» from git \"https://github.com/leanprover/doc-gen4\" @ \"main\"\n\n<span class=\"gi\">+require std from git \"https://github.com/leanprover/std4\" @ \"main\"</span>\n<span class=\"gi\">+</span>\n @[default_target]\n lean_lib PhiCalculus\n</code></pre></div>\n<p><span class=\"user-mention\" data-user-id=\"681889\">@Violetta Sim</span> this + lake update makes the compilation of doc-gen go through. The reason is as follows: std4 also depends on a version of doc-gen (and thus also its dependencies). However the version in its lockfile is not yet updated (mostly because nobody actually builds std4 docs themselves, people either build it as part of their dependency chain's dependencies or watch mathlib4_docs). So what happens is: lake picks up old commit hashes for dependencies of doc-gen when first processing std4. Then when it gets to the actual doc-gen update it updates doc-gen itself but not the dependencies that it has seen std4 already seems to want at a fixed version. So instead putting the doc-gen dependency before the std4 one will make it pick up dependencies in the correct order. I guess we should really implement a versioning system for this stuff to not happen.</p>",
        "id": 423253642,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1708858490
    },
    {
        "content": "<blockquote>\n<p>However the version in its lockfile is not yet updated</p>\n</blockquote>\n<p>This by the way is why I was against adding it to the lockfile in the first place, it is not a locked dependency</p>",
        "id": 423307617,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708910722
    },
    {
        "content": "<p>or indeed a dependency at all...</p>",
        "id": 423307629,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708910739
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span> <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span>  Huge thanks, this works, and thank you for the explanation!</p>",
        "id": 423309414,
        "sender_full_name": "Violetta Sim",
        "timestamp": 1708912446
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"681889\">Violetta Sim</span> has marked this topic as resolved.</p>",
        "id": 423309420,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708912455
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/.E2.9C.94.20LeanInk.20fails.20CI.20after.20update/near/423307617\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>However the version in its lockfile is not yet updated</p>\n</blockquote>\n<p>This by the way is why I was against adding it to the lockfile in the first place, it is not a locked dependency</p>\n</blockquote>\n<p>agreed yes</p>",
        "id": 423349309,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1708937825
    }
]