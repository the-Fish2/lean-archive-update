[
    {
        "content": "<p>Has there been already work done for formalizing Calculus of Communicating Systems in Lean?<br>\nParticularly I would be interested in formalising the following:<br>\n-Definition of Labelled transitions systems (LTS) and  successor states<br>\n-Reachability in LTS<br>\n-Nondeterminsm (internal and external)<br>\n-Syntax,Semantics and inference rules in CCS<br>\n-Equivalence Relations(Strong and weak bisimulation,observation congruence,trace equivalence...)</p>\n<p>Mainly focusing on the last point</p>",
        "id": 443262295,
        "sender_full_name": "Bashar Hamade",
        "timestamp": 1717755403
    },
    {
        "content": "<p>I would like to formalise <a href=\"https://www.cs.umd.edu/~gasarch/BLOGPAPERS/multiparty-vdw.pdf\">Chandra-Furst-Lipton</a> (I am interested in additive combinatorics), but I don't I will need much CCS machinery at all.</p>",
        "id": 443264028,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717756047
    },
    {
        "content": "<p>I have a repo for CCS (which I abandoned along the way) here: <a href=\"https://github.com/marcusrossel/lean-ccs\">https://github.com/marcusrossel/lean-ccs</a> It should at least cover the syntax and semantics of CCS. However, I tried and failed to define a reduction from a CCS expression to an equivalent LTS.</p>",
        "id": 443311893,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1717771095
    }
]