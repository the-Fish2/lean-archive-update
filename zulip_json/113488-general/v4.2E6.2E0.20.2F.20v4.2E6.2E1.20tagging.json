[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <a href=\"#narrow/stream/113486-announce/topic/v4.2E6.2E0/near/423950903\">said</a>:</p>\n<blockquote>\n<p>there is a <code>v4.6.0</code> tag in each repository if you would like to pin to a commit using this toolchain.<br>\n</p>\n</blockquote>\n<p>Is it possible for each of the maintainers of each of the dependent repositories to similarly add a <code>v4.6.1</code> commit/tag to distinguish a snapshot of their project that depends on what is now the latest (known) stable version of lean (i.e. <code>v4.6.1</code>) from the one that is dependent on a release candidate  (<code>v4.7.0-rc1</code>) ... is this perhaps unnecessary?</p>",
        "id": 424846632,
        "sender_full_name": "Somo S.",
        "timestamp": 1709637400
    },
    {
        "content": "<p>Technically no such snapshots exist for Std/Aesop/Mathlib, as the downstream repositories were never on <code>v4.6.1</code>. However, since in this case <code>v4.6.1</code> is functionally identical to <code>v4.6.0</code>, I can just duplicate the <code>v4.6.0</code> tags as <code>v4.6.1</code> tags. No guarantees this will happen in future, however!</p>",
        "id": 424856959,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1709641393
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113486-announce/topic/v4.2E6.2E0/near/424856959\">said</a>:</p>\n<blockquote>\n<p>I can just duplicate the <code>v4.6.0</code> tags as <code>v4.6.1</code> tags.</p>\n</blockquote>\n<p>this sounds pretty confusing, since the <code>v4.6.1</code> tag of mathlib will point to a version using a <code>lean-toolchain</code> of <code>4.6.0</code></p>",
        "id": 424863068,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1709643456
    },
    {
        "content": "<p>3 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113486\" href=\"/#narrow/stream/113486-announce/topic/v4.2E6.2E0\">#announce &gt; v4.6.0</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span>.</p>",
        "id": 424868998,
        "sender_full_name": "Notification Bot",
        "timestamp": 1709645327
    },
    {
        "content": "<p>Indeed. </p>\n<p>Okay, in that case someone should make a branch of Mathlib from the <code>v4.6.0</code> tag, change the toolchain, and push that tag. I think anyone with write access can do this.</p>",
        "id": 424869131,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1709645368
    },
    {
        "content": "<p>I've push v4.6.1 tags for Std/Aesop/Mathlib</p>",
        "id": 424969636,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1709677947
    },
    {
        "content": "<p>If someone could verify they work that would be great.</p>",
        "id": 424969662,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1709677960
    },
    {
        "content": "<p>I tried this and it seems that the cache has not been built. I updated <code>lean-toolchain</code> to <code>leanprover/lean4:v4.6.1</code> and my lakefile has a single direct dependency: <code>require mathlib from git \"https://github.com/leanprover-community/mathlib4.git\"@\"v4.6.1</code></p>\n<p>I tried also deleting <code>.lake/package</code>, <code>lake-manifest.json</code> and running <code>lake update</code>. The cache was still not found.</p>",
        "id": 425029962,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1709713755
    },
    {
        "content": "<p>I tried to bump the Lean toolchain to <code>v4.6.1</code> without changing the Mathlib4 tag and noticed that running <code>lake update</code> seemed to be overwriting the <code>lean-toolchain</code> file back to <code>v4.6.0</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">wpr@laptop myproject % </span>cat<span class=\"w\"> </span>lean-toolchain\n<span class=\"go\">leanprover/lean4:v4.6.1</span>\n<span class=\"gp\">wpr@laptop myproject % </span>elan<span class=\"w\"> </span>show\n<span class=\"go\">installed toolchains</span>\n<span class=\"go\">--------------------</span>\n\n<span class=\"go\">leanprover/lean4:v4.6.0</span>\n<span class=\"go\">leanprover/lean4:v4.6.1 (default)</span>\n\n<span class=\"go\">active toolchain</span>\n<span class=\"go\">----------------</span>\n\n<span class=\"go\">leanprover/lean4:v4.6.1 (overridden by '/Users/wpr/Code/lean/tate/lean-toolchain')</span>\n<span class=\"go\">Lean (version 4.6.1, aarch64-apple-darwin, commit dac66e47e32f, Release)</span>\n\n<span class=\"gp\">wpr@laptop myproject % </span>lake<span class=\"w\"> </span>update\n<span class=\"go\">warning: Qq: ignoring missing dependency manifest './.lake/packages/Qq/lake-manifest.json'</span>\n<span class=\"go\">warning: Cli: ignoring missing dependency manifest './.lake/packages/Cli/lake-manifest.json'</span>\n<span class=\"go\">mathlib: running post-update hooks</span>\n<span class=\"go\">No files to download</span>\n<span class=\"go\">Decompressing 4333 file(s)</span>\n<span class=\"go\">unpacked in 143 ms</span>\n<span class=\"gp\">wpr@laptop myproject % </span>cat<span class=\"w\"> </span>lean-toolchain\n<span class=\"go\">leanprover/lean4:v4.6.0</span>\n<span class=\"gp\">wpr@laptop myproject % </span>elan<span class=\"w\"> </span>show\n<span class=\"go\">installed toolchains</span>\n<span class=\"go\">--------------------</span>\n\n<span class=\"go\">leanprover/lean4:v4.6.0</span>\n<span class=\"go\">leanprover/lean4:v4.6.1 (default)</span>\n\n<span class=\"go\">active toolchain</span>\n<span class=\"go\">----------------</span>\n\n<span class=\"go\">leanprover/lean4:v4.6.0 (overridden by '/Users/wpr/Code/lean/tate/lean-toolchain')</span>\n<span class=\"go\">Lean (version 4.6.0, aarch64-apple-darwin, commit a5bc9013ab13, Release)</span>\n</code></pre></div>",
        "id": 425169902,
        "sender_full_name": "Peiran Wu",
        "timestamp": 1709755933
    },
    {
        "content": "<p>Yeah, running <code>lake update</code> will copy mathlib's lean version</p>",
        "id": 425172110,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1709756842
    },
    {
        "content": "<p>i.e. in your <code>lakefile.lean</code> you need to make sure the \"require\" line for Mathlib is obtaining a branch/tag/commit that is on the toolchain you intended to use. In this case I think </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"v4.6.1.\"</span>\n</code></pre></div>",
        "id": 425201064,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1709769891
    },
    {
        "content": "<p>Just to confirm, I did use the tagging as above and the cache does not work.</p>",
        "id": 425208934,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1709774589
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span> perhaps you could create a minimal repo showing this problem?</p>",
        "id": 425217452,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1709780312
    },
    {
        "content": "<p>I will try. Have to be away but will do this in 2 hours.</p>",
        "id": 425217484,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1709780348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> A nearly empty repo showing this is at <a href=\"https://github.com/siddhartha-gadgil/Leantegration.git\">https://github.com/siddhartha-gadgil/Leantegration.git</a></p>",
        "id": 425217984,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1709780648
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span>, ah, I suspect that merely pushing a tag does not create oleans. I've pushed a branch made from the <code>v4.6.1</code> tag. Let's see if things work better after <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8183028836/job/22375278960\">https://github.com/leanprover-community/mathlib4/actions/runs/8183028836/job/22375278960</a></p>",
        "id": 425227078,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1709786718
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266304\">@Siddhartha Gadgil</span> , that seems to have fixed things, can you confirm?</p>",
        "id": 425233824,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1709791714
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/v4.2E6.2E0.20.2F.20v4.2E6.2E1.20tagging/near/425233824\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"266304\">Siddhartha Gadgil</span> , that seems to have fixed things, can you confirm?</p>\n</blockquote>\n<p>Yes, the caching is fine. Thanks.</p>",
        "id": 425235060,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1709792507
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/v4.2E6.2E0.20.2F.20v4.2E6.2E1.20tagging/near/425201064\">said</a>:</p>\n<blockquote>\n<p>i.e. in your <code>lakefile.lean</code> you need to make sure the \"require\" line for Mathlib is obtaining a branch/tag/commit that is on the toolchain you intended to use. In this case I think </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"v4.6.1.\"</span>\n</code></pre></div>\n</blockquote>\n<p>I guess the <code>.</code> at the end of the tag is a typo</p>",
        "id": 425236378,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1709793355
    },
    {
        "content": "<p>It looks like the same issue, cache not being built, has surfaced if I use \"v4.8.0-rc1\" in the lean-toolchain as well as the corresponding Mathlib cache.</p>",
        "id": 436880861,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1714742028
    },
    {
        "content": "<p>That's being discussed at <a href=\"#narrow/stream/287929-mathlib4/topic/cache.20not.20working.20after.20bump.20to.20.20v4.2E8.2E0-rc1v.3F\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/cache.20not.20working.20after.20bump.20to.20.20v4.2E8.2E0-rc1v.3F</a></p>",
        "id": 436882622,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1714742564
    }
]