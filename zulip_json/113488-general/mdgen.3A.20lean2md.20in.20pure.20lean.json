[
    {
        "content": "<p>I find lean2md a very useful tool and I like it a lot. However, lean2md is written in Python, so I needed to install Python to use it, and I wanted to rewrite it purely in Lean.</p>\n<p>Also, some parts of lean2md are not flexible since it is already used in the metaprogramming book. I wanted to add some features for my own use.</p>\n<p>So I re-implemented lean2md in lean.</p>\n<p><a href=\"https://github.com/Seasawher/mdgen\">https://github.com/Seasawher/mdgen</a></p>",
        "id": 411506598,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1704546310
    },
    {
        "content": "<p>That's nice but you should have asked about existing plans. <span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span> is working on a much more powerful tool that will soon make lean2md completely obsolete.</p>",
        "id": 411513897,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1704553902
    },
    {
        "content": "<p>But it's available <em>now</em> rather than soon. And its simplicity has its own appeal (roughly 100 lines of code).</p>\n<p><span class=\"user-mention\" data-user-id=\"626349\">@Asei Inoue</span> if you want, you can adapt the metaprogramming book to use it instead of lean2md so Python would no longer be needed to generate the md files</p>",
        "id": 411514233,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1704554177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> That's nice. By \"much more powerful\", what new features are you referring to?</p>",
        "id": 411514926,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1704554741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> I am interested in replacing lean2md in metaprogramming. mdgen converts not only files in directories, but also child directories, so the commands should be more concise.</p>",
        "id": 411515611,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1704555204
    },
    {
        "content": "<p>But <code>mdgen</code> also support doc comment. This feature is same as suggested in <a href=\"https://github.com/arthurpaulino/lean2md/pull/4\">https://github.com/arthurpaulino/lean2md/pull/4</a> , which  breaks the metaprogramming book.<br>\nTherefore, we may need to change the lean file in the metaprogramming book. I think It is better not to touch the lean file itself.</p>",
        "id": 411515841,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1704555365
    },
    {
        "content": "<p>Right, that's the annoying part of what I meant by \"adapting the metaprogramming book\". If the Lean files can be adjusted to produce the same output using <code>mdgen</code> as it's meant to be used, that would be preferable</p>",
        "id": 411516005,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1704555532
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626349\">Asei Inoue</span> <a href=\"#narrow/stream/113488-general/topic/mdgen.3A.20lean2md.20in.20pure.20lean/near/411514926\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> That's nice. By \"much more powerful\", what new features are you referring to?</p>\n</blockquote>\n<p>A whole world of new features. This is a totally different scale project. You will learn a lot more during David's talk next week.</p>",
        "id": 411524976,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1704563716
    },
    {
        "content": "<p>It's not exactly a secret - I'm working on representing documents as a DSL in Lean. The concrete syntax is mostly Markdown, but the document itself is a normal Lean value. This is to provide the tools needed to assemble lots of different document workflows, from blog posts to software documentation to blueprints to research papers, with lots of opportunities for code reuse but without shoe-horning them into a single limited model. I plan to develop tools for software manuals, online didactic books, and software documentation at the very least, and I want to support others in building their own instantiations for other purposes.</p>\n<p>That said - I want people to use this project if and when it meets their needs, and I hope it doesn't stifle other innovation or keep people from having fun and doing their own thing. And while I'm making good progress, it's not yet ready to take over for all our various books.</p>\n<p>But yes - more in the talk next week!</p>",
        "id": 411541815,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1704578703
    },
    {
        "content": "<p>The main inspirations are Scribble and Sphinx</p>",
        "id": 411541913,
        "sender_full_name": "David Thrane Christiansen",
        "timestamp": 1704578833
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"354934\">@David Thrane Christiansen</span> I'm looking forward to it!</p>\n<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> It seems that the lean version of the metaprogramming book is too old to install mdgen.</p>",
        "id": 411572131,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1704606288
    },
    {
        "content": "<p>Makes sense. In that case, it probably requires a toolchain bump. If the metaprogramming API hasn't changed too much, it shouldn't be too much of a problem</p>",
        "id": 411597745,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1704631104
    },
    {
        "content": "<p>deleted</p>",
        "id": 411660564,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1704682718
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span>  I submitted a pull request. <a href=\"https://github.com/leanprover-community/lean4-metaprogramming-book/pull/123\">https://github.com/leanprover-community/lean4-metaprogramming-book/pull/123</a></p>",
        "id": 411696553,
        "sender_full_name": "Asei Inoue",
        "timestamp": 1704705097
    },
    {
        "content": "<p>I've asked <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> to follow up and he accepted, which is nice because he has more context on the CI flow. I'm going to be away from my computer for the next 24~48h.</p>\n<p>Thank you both!</p>",
        "id": 411759657,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1704727326
    }
]