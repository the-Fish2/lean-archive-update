[
    {
        "content": "<p>Hi, I'm trying to present some Lean code in a LaTeX document, but I keep getting  the errors <code>Argument of � has an extra }</code> and <code>Paragraph ended before � was complete</code> at seemingly random points in the code (I can't see anything different about the points it occurs at, and sometimes if I shuffle other parts of the text they disappear or reappear somewhere else, e.g. if I delete the first block of Lean code below, the error in the second block goes away). The smallest example I could reproduce the errors in is below.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"n\">documentclass</span><span class=\"o\">{</span><span class=\"n\">article</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">[</span><span class=\"n\">colorlinks</span><span class=\"bp\">=</span><span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">allcolors</span><span class=\"bp\">=</span><span class=\"n\">blue</span><span class=\"o\">]{</span><span class=\"n\">hyperref</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">[</span><span class=\"n\">T1</span><span class=\"o\">]{</span><span class=\"n\">fontenc</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">[</span><span class=\"n\">utf8</span><span class=\"o\">]{</span><span class=\"n\">inputenc</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">listings</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">amssymb</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">color</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">definecolor</span><span class=\"o\">{</span><span class=\"n\">keywordcolor</span><span class=\"o\">}{</span><span class=\"n\">rgb</span><span class=\"o\">}{</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">7</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">}</span>   <span class=\"bp\">%</span> <span class=\"n\">red</span>\n<span class=\"bp\">\\</span><span class=\"n\">definecolor</span><span class=\"o\">{</span><span class=\"n\">tacticcolor</span><span class=\"o\">}{</span><span class=\"n\">rgb</span><span class=\"o\">}{</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">6</span><span class=\"o\">}</span>    <span class=\"bp\">%</span> <span class=\"n\">blue</span>\n<span class=\"bp\">\\</span><span class=\"n\">definecolor</span><span class=\"o\">{</span><span class=\"n\">commentcolor</span><span class=\"o\">}{</span><span class=\"n\">rgb</span><span class=\"o\">}{</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"o\">}</span>   <span class=\"bp\">%</span> <span class=\"n\">grey</span>\n<span class=\"bp\">\\</span><span class=\"n\">definecolor</span><span class=\"o\">{</span><span class=\"n\">symbolcolor</span><span class=\"o\">}{</span><span class=\"n\">rgb</span><span class=\"o\">}{</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">6</span><span class=\"o\">}</span>    <span class=\"bp\">%</span> <span class=\"n\">blue</span>\n<span class=\"bp\">\\</span><span class=\"n\">definecolor</span><span class=\"o\">{</span><span class=\"n\">sortcolor</span><span class=\"o\">}{</span><span class=\"n\">rgb</span><span class=\"o\">}{</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">}</span>      <span class=\"bp\">%</span> <span class=\"n\">green</span>\n<span class=\"bp\">\\</span><span class=\"n\">definecolor</span><span class=\"o\">{</span><span class=\"n\">attributecolor</span><span class=\"o\">}{</span><span class=\"n\">rgb</span><span class=\"o\">}{</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">7</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"bp\">%</span> <span class=\"n\">red</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">def</span><span class=\"bp\">\\</span><span class=\"n\">lstlanguagefiles</span><span class=\"o\">{</span><span class=\"n\">lstlean.tex</span><span class=\"o\">}</span>\n<span class=\"bp\">%</span> <span class=\"n\">set</span> <span class=\"n\">default</span> <span class=\"n\">language</span>\n<span class=\"bp\">\\</span><span class=\"n\">lstset</span><span class=\"o\">{</span><span class=\"n\">language</span><span class=\"bp\">=</span><span class=\"n\">lean</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"n\">usepackage</span><span class=\"o\">{</span><span class=\"n\">newunicodechar</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"n\">newunicodechar</span><span class=\"o\">{</span><span class=\"bp\">ₜ</span><span class=\"o\">}{</span><span class=\"bp\">\\</span><span class=\"n\">ensuremath</span><span class=\"o\">{</span><span class=\"n\">_t</span><span class=\"o\">}}</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">document</span><span class=\"o\">}</span>\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">lstlisting</span><span class=\"o\">}</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">funext</span> <span class=\"o\">{</span><span class=\"n\">f₁</span> <span class=\"n\">f₂</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">β</span> <span class=\"n\">x</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f₁</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">f₂</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f₁</span> <span class=\"bp\">=</span> <span class=\"n\">f₂</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">show</span> <span class=\"n\">extfunApp</span> <span class=\"o\">(</span><span class=\"n\">Quotient.mk</span> <span class=\"n\">f₁</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">extfunApp</span> <span class=\"o\">(</span><span class=\"n\">Quotient.mk</span> <span class=\"n\">f₂</span><span class=\"o\">)</span>\n  <span class=\"n\">apply</span> <span class=\"n\">congrArg</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Quotient.sound</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">lstlisting</span><span class=\"o\">}</span>\n\n<span class=\"o\">(</span><span class=\"n\">some</span> <span class=\"n\">text</span><span class=\"o\">)</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">begin</span><span class=\"o\">{</span><span class=\"n\">lstlisting</span><span class=\"o\">}</span>\n<span class=\"sd\">/-- Every commutative (semi)ring is a coalgebra over itself, with `Δ r = 1 ⊗ₜ r`. -/</span>\n<span class=\"kd\">instance</span> <span class=\"n\">toCoalgebra</span> <span class=\"o\">:</span> <span class=\"n\">Coalgebra</span> <span class=\"n\">R</span> <span class=\"n\">R</span> <span class=\"n\">where</span>\n  <span class=\"n\">comul</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">TensorProduct.mk</span> <span class=\"n\">R</span> <span class=\"n\">R</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"mi\">1</span>\n  <span class=\"n\">counit</span> <span class=\"o\">:=</span> <span class=\"bp\">.</span><span class=\"n\">id</span>\n  <span class=\"n\">coassoc</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">rTensor_counit_comp_comul</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">lTensor_counit_comp_comul</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">counit_apply</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">counit</span> <span class=\"n\">r</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">CommSemiring</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Finsupp</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span>\n\n<span class=\"sd\">/-- The `R`-module whose elements are functions `ι → R` which are zero on all but finitely many</span>\n<span class=\"sd\">elements of `ι` has a coalgebra structure. The coproduct `Δ` is given by `Δ(fᵢ) = fᵢ ⊗ fᵢ` and the</span>\n<span class=\"sd\">counit `ε` by `ε(fᵢ) =  1`, where `fᵢ` is the function sending `i` to `1` and all other elements of</span>\n<span class=\"sd\">`ι` to zero. -/</span>\n<span class=\"kd\">noncomputable</span>\n<span class=\"kd\">instance</span> <span class=\"n\">instCoalgebra</span> <span class=\"o\">:</span> <span class=\"n\">Coalgebra</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">ι</span> <span class=\"bp\">→₀</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"n\">where</span>\n  <span class=\"n\">comul</span> <span class=\"o\">:=</span> <span class=\"n\">Finsupp.total</span> <span class=\"n\">ι</span> <span class=\"o\">((</span><span class=\"n\">ι</span> <span class=\"bp\">→₀</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">⊗</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">ι</span> <span class=\"bp\">→₀</span> <span class=\"n\">R</span><span class=\"o\">))</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">i</span> <span class=\"bp\">↦</span> <span class=\"bp\">.</span><span class=\"n\">single</span> <span class=\"n\">i</span> <span class=\"mi\">1</span> <span class=\"bp\">⊗ₜ</span> <span class=\"bp\">.</span><span class=\"n\">single</span> <span class=\"n\">i</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"n\">counit</span> <span class=\"o\">:=</span> <span class=\"n\">Finsupp.total</span> <span class=\"n\">ι</span> <span class=\"n\">R</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n  <span class=\"n\">coassoc</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">simp</span>\n  <span class=\"n\">rTensor_counit_comp_comul</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">simp</span>\n  <span class=\"n\">lTensor_counit_comp_comul</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">simp</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">comul_single</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">comul</span> <span class=\"o\">(</span><span class=\"n\">Finsupp.single</span> <span class=\"n\">i</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">Finsupp.single</span> <span class=\"n\">i</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">⊗ₜ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">Finsupp.single</span> <span class=\"n\">i</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">comul</span> <span class=\"n\">instCoalgebra</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">total_single</span><span class=\"o\">,</span> <span class=\"n\">TensorProduct.smul_tmul'</span><span class=\"o\">,</span> <span class=\"n\">smul_single_one</span> <span class=\"n\">i</span> <span class=\"n\">r</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">counit_single</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">counit</span> <span class=\"o\">(</span><span class=\"n\">Finsupp.single</span> <span class=\"n\">i</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">counit</span> <span class=\"n\">instCoalgebra</span><span class=\"bp\">;</span> <span class=\"n\">simp</span>\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">lstlisting</span><span class=\"o\">}</span>\n\n<span class=\"bp\">\\</span><span class=\"kd\">end</span><span class=\"o\">{</span><span class=\"n\">document</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>(I obviously also have the <code>lstlean.tex</code> file, from <a href=\"https://raw.githubusercontent.com/leanprover/lean4/master/doc/latex/lstlean.tex\">https://raw.githubusercontent.com/leanprover/lean4/master/doc/latex/lstlean.tex</a>). I seems like the hyperref package is clashing with <code>lstlean.tex</code>, because when I comment it out the errors go away, but I can't do this in the bigger document I'm working on because I need this package. I couldn't find this issue mentioned anywhere online, it seems like the errors I'm getting are pretty generic. Does anyone know a way to work around this, or why it might be happening?</p>\n<p>Apologies if this is not the right place to ask, I thought about asking on stackexchange but I figured it would be more likely that someone here had written Lean code in LaTeX whilst using the hyperref package.</p>",
        "id": 418316543,
        "sender_full_name": "Ali Ramsey",
        "timestamp": 1706288869
    },
    {
        "content": "<p>This problem was discussed recently at <a href=\"#narrow/stream/113488-general/topic/weird.20LaTeX.20bug.3A.20fullpage.20.2B.20hyperref.20.2B.20listings.20on.20NixOS/near/417641482\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/weird.20LaTeX.20bug.3A.20fullpage.20.2B.20hyperref.20.2B.20listings.20on.20NixOS/near/417641482</a></p>",
        "id": 418316793,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1706288980
    },
    {
        "content": "<p>But without a very good conclusion. We ended up wrapping our Lean snippets into minipages.</p>",
        "id": 418316901,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1706289012
    },
    {
        "content": "<p>Ah ok, thank you</p>",
        "id": 418317792,
        "sender_full_name": "Ali Ramsey",
        "timestamp": 1706289353
    }
]