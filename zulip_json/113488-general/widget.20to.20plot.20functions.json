[
    {
        "content": "<p>Do we have a widget to plot functions, for example <code>Rat -&gt; Rat</code>?</p>",
        "id": 423571299,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709028089
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/ProofWidgets4/blob/dfb5ad609578dd92d06707a88923b7f44cf9f064/ProofWidgets/Demos/Plot.lean#L10\">This function</a> in <code>ProofWidgets</code> generates plots for functions of type <code>Float -&gt; Float</code>.</p>",
        "id": 423613028,
        "sender_full_name": "Anand Rao Tadipatri",
        "timestamp": 1709042796
    },
    {
        "content": "<p>Do we have function from <code>Rat</code> to and from <code>Float</code>?</p>",
        "id": 423617753,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1709044014
    },
    {
        "content": "<p>I couldn't find a function to go from <code>Rat</code> to <code>Float</code>, but it's possible to <a href=\"https://live.lean-lang.org/#code=import%20Mathlib.Data.Rat.Basic%0A%0Adef%20Int.toFloat%20(n%20%3A%20Int)%20%3A%20Float%20%3A%3D%20%0A%20%20match%20n%20with%0A%20%20%20%20%7C%20.ofNat%20m%20%3D%3E%20m.toFloat%0A%20%20%20%20%7C%20.negSucc%20m%20%3D%3E%20-%20m.succ.toFloat%0A%0Adef%20Rat.toFloat%20(q%20%3A%20%E2%84%9A)%20%3A%20Float%20%3A%3D%20%0A%20%20q.num.toFloat%20%2F%20q.den.toFloat%0A%0A%23eval%20Rat.toFloat%20(Rat.mk'%202%203)\">build one using <code>Nat.toFloat</code></a>. For the other direction, <code>f.toRatParts</code> seems to give <code>(v, exp)</code> such that <code>f = v * 2^-exp</code>, but this may be too inefficient to use in practice.</p>",
        "id": 423639124,
        "sender_full_name": "Anand Rao Tadipatri",
        "timestamp": 1709049054
    }
]