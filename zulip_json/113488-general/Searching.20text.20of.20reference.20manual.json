[
    {
        "content": "<p>What's the simplest and quickest way to find a given text string in the reference manual (including doc string text, not just names of theorems)?</p>\n<p>I assumed the \"Google site search\" button would do this, but apparently it doesn't: e.g. searching for \"hahn banach\" fails to find the theorem <code>exists_extension_norm_eq</code>, even though that name does appear prominently in the docstring of that theorem.</p>\n<p>(This seems to be a regression from mathlib3 – in the mathlib3 manual, the default search box searched docstring content too – and it is a little annoying, since the mathlib name of a theorem is often quite different from the familiar real-world name, as in this example.)</p>\n<p>Also, a separate issue also related to reference-manual search: there are lots of auto-generated instance names which are horrible pile-ups like <code>AlgebraicGeometry.Scheme.GlueData.instIsOpenImmersionULocallyRingedSpaceInstCategoryLocallyRingedSpaceToGlueDataToLocallyRingedSpaceGlueDataGluedHasColimitOfHasColimitsOfShapeWalkingMultispanLDiagramRFstFromSndFromInstSmallCategoryWalkingMultispanHasColimitsOfShapeOfHasColimitsOfSizeInstHasColimitsLocallyRingedSpaceInstCategoryLocallyRingedSpaceMultispanι</code>; and these tend to appear as spurious matches in search results for unrelated things, since the search doesn't require matching characters to be consecutive, so there's a high probability of any random short text string appearing as a match for one of these monsters. Is there a way of excluding these automatic instance names from the search results (and perhaps from the ref-manual text as well)?</p>",
        "id": 412093685,
        "sender_full_name": "David Loeffler",
        "timestamp": 1704877243
    },
    {
        "content": "<p>The instance names issue is <a href=\"https://github.com/leanprover/lean4/pull/2343\">lean4#2343</a> . To search the docs for strings in lean 3 there was a \"Google\" button -- is that not still there? There's also <a href=\"http://moogle.ai\">moogle.ai</a> .</p>",
        "id": 412095129,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1704877773
    },
    {
        "content": "<p>I would run <code>git grep -i \"hahn.*banach\"</code></p>",
        "id": 412095186,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1704877800
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Searching.20text.20of.20reference.20manual/near/412095129\">said</a>:</p>\n<blockquote>\n<p>The instance names issue is <a href=\"https://github.com/leanprover-community/mathlib4/pull/2343\">#2343</a> . To search the docs for strings in lean 3 there was a \"Google\" button -- is that not still there? There's also <a href=\"http://moogle.ai\">moogle.ai</a> .</p>\n</blockquote>\n<p>There's a \"Google site search\" button but it appears to be broken – whatever you search for, it returns an error like \"Your search - hahn banach site:<a href=\"https://leanprover-community.github.io/mathlib4_docs\">https://leanprover-community.github.io/mathlib4_docs</a> - did not match any documents\".</p>\n<p>Moogle works better, but it still doesn't seem to find <code>exists_extension_norm_le</code>; and it's slightly annoying to have to switch to a different page to search the ref manual when you already have the ref manual open.</p>",
        "id": 412096092,
        "sender_full_name": "David Loeffler",
        "timestamp": 1704878131
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/H5V8X0Xwirb4_uHY8tY0rGWe/image.png\">image.png</a><br>\nit definitely finds stuff but not all stuff, no idea what google is doing here.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/H5V8X0Xwirb4_uHY8tY0rGWe/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/H5V8X0Xwirb4_uHY8tY0rGWe/image.png\"></a></div><p>Searching the doc-string on the normal search functionality is something that we used to have but due to the sheer size of mathlib it slows down the responsiveness of the search and load time of the page noticably. People asked for a real-time ish search feeling faster load times so that's what I optimized for.</p>",
        "id": 412098211,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704878881
    }
]