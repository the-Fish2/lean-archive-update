[
    {
        "content": "<p>I'm reading the source of <code>mk_iff</code>, and I'm going to ask many questions about it here. First question: am I right that <code>Mathlib.Tactic.MkIff.select</code> <a href=\"https://github.com/leanprover-community/mathlib4/blob/3286beabe5f3da3a4d214f0f63b554fec8c40750//Mathlib/Tactic/MkIffOfInductiveProp.lean#L35\">here</a> applies <code>left</code> only once (as it probably should if the goal is <code>a ∨ b ∨ c ∨ ...</code>)?</p>",
        "id": 410593636,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703988776
    },
    {
        "content": "<p>that looks like a bug, from the docs</p>",
        "id": 410593953,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703989075
    },
    {
        "content": "<p>My guess is that the docs are bogus and the code is correct.</p>",
        "id": 410594010,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703989101
    },
    {
        "content": "<p>yes, if it's an iterated or then we would expect only one <code>left</code></p>",
        "id": 410594037,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703989134
    },
    {
        "content": "<p>Currently mk_iff generates the name IsLocalization_iff for the Prop-valued class IsLocalization, but it should be isLocalization_iff according to naming convention, and I have to specify the name manually. Should I file a bug?</p>",
        "id": 410611906,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1704007046
    },
    {
        "content": "<p>I already opened an issue about this</p>",
        "id": 410614372,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704009565
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/9129\">#9129</a></p>",
        "id": 410614469,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704009627
    },
    {
        "content": "<p>I'll try to fix it today.</p>",
        "id": 410645407,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704040349
    },
    {
        "content": "<p>(let it be my simple exercise on meta programming)</p>",
        "id": 410645416,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704040366
    }
]