[
    {
        "content": "<p>I have finished almost everything in my proof that groups of order pq (given p doesn't divide q-1) are cyclic. The only thing left to prove is that when I have my generators for the Sylow p-subgroup and Sylow q-subgroup, these generators commute. Usually in maths I would show these Sylow subgroups are unique hence they are normal. So by definition of a normal subgroup the elements must commute. I am having a difficult time trying to show this. I haven't found anything particularly useful in the Sylow.lean file. I have also tried to use the assumption that my Sylow subgroups are normal to see if I could prove that the elements commute, but also this has led to nothing. I think the way normal groups are defined in Mathlib could be the issue but I am unsure. If you can think of another way to prove commutativity then please let me know.  Any advice or guidance would be appreciated. I will show my code up to the point where I need commutativity. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.ZMod.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Index</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Finset.Card</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.OrderOfElement</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Choose.Dvd</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Choose.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.Group.Defs</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Subgroup.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.SpecificGroups.Cyclic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Prime</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Sylow</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.Coset</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.GroupTheory.GroupAction.Defs</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">Classical</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"c1\">-- A group of order pq for primes p and q and such that p doesn't divide q-1, is the cyclic group of pq elements</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">C_pq</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">hpq</span><span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"bp\">&lt;</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hpqq</span><span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"bp\">=</span> <span class=\"n\">p</span><span class=\"bp\">*</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)):</span> <span class=\"n\">IsCyclic</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"c1\">-- Define the Sylow p-subgroup</span>\n  <span class=\"k\">have</span> <span class=\"n\">p0</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hpqq</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Nat.dvd_mul_right</span> <span class=\"n\">p</span> <span class=\"n\">q</span>\n  <span class=\"k\">have</span> <span class=\"n\">p1</span> <span class=\"o\">:=</span> <span class=\"n\">Sylow.exists_subgroup_card_pow_prime</span> <span class=\"n\">p</span> <span class=\"o\">((</span><span class=\"n\">pow_one</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">p0</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_one</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">p1</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">P</span><span class=\"o\">,</span> <span class=\"n\">hP</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">p1</span>\n  <span class=\"k\">have</span> <span class=\"n\">p2</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">P</span> <span class=\"bp\">=</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">hP</span>\n<span class=\"c1\">-- Show P is cyclic and generated by an element g of order p</span>\n  <span class=\"k\">have</span> <span class=\"n\">p3</span> <span class=\"o\">:</span> <span class=\"n\">IsCyclic</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">isCyclic_of_prime_card</span> <span class=\"n\">hP</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">gP</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">IsCyclic.exists_generator</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">P</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">p4</span> <span class=\"o\">:</span> <span class=\"n\">orderOf</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">orderOf_eq_card_of_forall_mem_zpowers</span> <span class=\"n\">gP</span>\n\n<span class=\"c1\">-- Define the Sylow q-subgroup</span>\n  <span class=\"k\">have</span> <span class=\"n\">q0</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">∣</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hpqq</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Nat.dvd_mul_left</span> <span class=\"n\">q</span> <span class=\"n\">p</span>\n  <span class=\"k\">have</span> <span class=\"n\">q1</span> <span class=\"o\">:=</span> <span class=\"n\">Sylow.exists_subgroup_card_pow_prime</span> <span class=\"n\">q</span> <span class=\"o\">((</span><span class=\"n\">pow_one</span> <span class=\"n\">q</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">q0</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_one</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">q1</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">Q</span><span class=\"o\">,</span> <span class=\"n\">hQ</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">q1</span>\n  <span class=\"k\">have</span> <span class=\"n\">q2</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">Q</span> <span class=\"bp\">=</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">hQ</span>\n<span class=\"c1\">-- Show Q is cyclic and generated by an element k of order q</span>\n  <span class=\"k\">have</span> <span class=\"n\">q3</span> <span class=\"o\">:</span> <span class=\"n\">IsCyclic</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">isCyclic_of_prime_card</span> <span class=\"n\">hQ</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">kQ</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">IsCyclic.exists_generator</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">Q</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">q4</span> <span class=\"o\">:</span> <span class=\"n\">orderOf</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">orderOf_eq_card_of_forall_mem_zpowers</span> <span class=\"n\">kQ</span>\n\n<span class=\"c1\">-- Show p and q are coprime</span>\n  <span class=\"k\">have</span> <span class=\"n\">pq_coprime</span> <span class=\"o\">:</span> <span class=\"n\">Nat.gcd</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n   <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">Nat.coprime_primes</span> <span class=\"bp\">?</span><span class=\"n\">pp</span> <span class=\"bp\">?</span><span class=\"n\">pq</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n   <span class=\"n\">apply</span> <span class=\"n\">hp.1</span>\n   <span class=\"n\">apply</span> <span class=\"n\">hq.1</span>\n   <span class=\"n\">exact</span> <span class=\"n\">Nat.ne_of_lt</span> <span class=\"n\">hpq</span>\n\n<span class=\"c1\">-- Show g and k commute</span>\n  <span class=\"k\">have</span> <span class=\"n\">g_k_commute</span> <span class=\"o\">:</span> <span class=\"n\">Commute</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 421723610,
        "sender_full_name": "Roshan Kohli",
        "timestamp": 1708024594
    },
    {
        "content": "<p>It would be a nice idea to split your proof in several short sublemmas, because it would be easier to check and to modify it. That being said, there is this result <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Sylow.directProductOfNormal#doc\">docs#Sylow.directProductOfNormal</a> telling that as soon as you prove that the Sylows are normal, you are basically done because the group will be a direct product of cyclic groups.</p>",
        "id": 422400599,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1708429753
    },
    {
        "content": "<blockquote>\n<p>I have also tried to use the assumption that my Sylow subgroups are normal to see if I could prove that the elements commute, but also this has led to nothing.</p>\n</blockquote>\n<p>would <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Subgroup.commute_of_normal_of_disjoint#doc\">docs#Subgroup.commute_of_normal_of_disjoint</a> help?</p>",
        "id": 422466308,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1708449878
    },
    {
        "content": "<p>I feel that OP's questions have been solved <a href=\"#narrow/stream/113488-general/topic/Multiplying.20Elements.20in.20a.20Normal.20Subgroup\">in this thread</a> and on Discord ...</p>",
        "id": 422490791,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1708458686
    }
]