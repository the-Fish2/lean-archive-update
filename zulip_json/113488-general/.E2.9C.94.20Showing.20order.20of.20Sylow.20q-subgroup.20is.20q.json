[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">Classical</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">pq_normal_sylow_q_subgroup</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Finite</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)]</span>\n<span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">Sylow</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"bp\">&lt;</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hG</span><span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"bp\">=</span> <span class=\"n\">p</span><span class=\"bp\">*</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"c1\">-- Number of Sylow q-subgroups is congruent to 1 MOD q</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≡</span> <span class=\"n\">Fintype.card</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">MOD</span> <span class=\"n\">q</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Nat.ModEq.symm</span> <span class=\"o\">(</span><span class=\"n\">card_sylow_modEq_one</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.modEq_iff_dvd'</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h1</span>\n\n<span class=\"c1\">-- Number of Sylow q-subgroups divide the index |G:Q|</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">∣</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">index</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">card_sylow_dvd_index</span> <span class=\"n\">Q</span>\n\n<span class=\"c1\">-- The Sylow q-subgroup has order q</span>\n  <span class=\"k\">have</span> <span class=\"n\">q0</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">∣</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hG</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Nat.dvd_mul_left</span> <span class=\"n\">q</span> <span class=\"n\">p</span>\n  <span class=\"k\">have</span> <span class=\"n\">q1</span> <span class=\"o\">:=</span> <span class=\"n\">Sylow.exists_subgroup_card_pow_prime</span> <span class=\"n\">q</span> <span class=\"o\">((</span><span class=\"n\">pow_one</span> <span class=\"n\">q</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">q0</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_one</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">q1</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">Q</span><span class=\"o\">,</span> <span class=\"n\">hQ</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">q1</span>\n\n<span class=\"c1\">-- Index |G:Q| is equal to p</span>\n  <span class=\"k\">have</span> <span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">index</span> <span class=\"bp\">*</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">Subgroup.index_mul_card</span> <span class=\"n\">Q</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hG</span><span class=\"o\">,</span> <span class=\"n\">hQ</span><span class=\"o\">,</span> <span class=\"n\">mul_left_inj'</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h3</span>\n</code></pre></div>\n<p>Hi, the above code is part of my proof but I have ran into an issue. I want to rewrite my h2 statement using h3 but after I obtain the Sylow q-subgroup Q my h2 statement changes from \"Fintype.card (Sylow q G) ∣ Subgroup.index ↑Q\" to \"Fintype.card (Sylow q G) ∣ Subgroup.index ↑Q✝\" where it regards Q to be a Sylow q-subgroup. This means I cannot use \"rw [←h3] at h2\" since lean regards these to be different. I have tried to show that they are equal with no success. I also tried naming my obtained Sylow q-subgroup to something else but that has caused issues too. Could I get some advice on how to fix this? Thank you</p>",
        "id": 421917826,
        "sender_full_name": "Roshan Kohli",
        "timestamp": 1708108783
    },
    {
        "content": "<p>Are you confusing yourself by having two <code>Q</code>s?</p>",
        "id": 421918368,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708109013
    },
    {
        "content": "<p>I have tried not obtaining the second Q and instead show that my original Q has order q which is all I need to carry on with the proof. But for some reason I have had issues with showing this even though in the statement of the theorem Q is type Sylow q G.</p>",
        "id": 421919676,
        "sender_full_name": "Roshan Kohli",
        "timestamp": 1708109530
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">Classical</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">pq_Q_order_eq_q</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Finite</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)]</span>\n<span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">Sylow</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"bp\">&lt;</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hG</span><span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"bp\">=</span> <span class=\"n\">p</span><span class=\"bp\">*</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">q0</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">∣</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hG</span><span class=\"o\">]</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Nat.dvd_mul_left</span> <span class=\"n\">q</span> <span class=\"n\">p</span>\n  <span class=\"k\">have</span> <span class=\"n\">q1</span> <span class=\"o\">:=</span> <span class=\"n\">Sylow.exists_subgroup_card_pow_prime</span> <span class=\"n\">q</span> <span class=\"o\">((</span><span class=\"n\">pow_one</span> <span class=\"n\">q</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">q0</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_one</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">q1</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I have refined what I am struggling with, sorry for not being as clear before. I have fixed the issue I was having before, but it all depends on being able to get the order of Q to be q without using obtain as that caused me issues before. I will continue to try fix this, any suggestions would be helpful.</p>",
        "id": 421920028,
        "sender_full_name": "Roshan Kohli",
        "timestamp": 1708109698
    },
    {
        "content": "<p>Does this help?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">scoped</span> <span class=\"n\">Classical</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">pq_normal_sylow_q_subgroup</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Finite</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">p</span> <span class=\"n\">G</span><span class=\"o\">)]</span>\n<span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">Sylow</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"bp\">&lt;</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hG</span><span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">G</span> <span class=\"bp\">=</span> <span class=\"n\">p</span><span class=\"bp\">*</span><span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n<span class=\"c1\">-- Number of Sylow q-subgroups is congruent to 1 MOD q</span>\n  <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≡</span> <span class=\"n\">Fintype.card</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">MOD</span> <span class=\"n\">q</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">Nat.ModEq.symm</span> <span class=\"o\">(</span><span class=\"n\">card_sylow_modEq_one</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.modEq_iff_dvd'</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h1</span>\n\n<span class=\"c1\">-- Number of Sylow q-subgroups divide the index |G:Q|</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"o\">(</span><span class=\"n\">Sylow</span> <span class=\"n\">q</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">∣</span> <span class=\"o\">(</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">Subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">index</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">exact</span> <span class=\"n\">card_sylow_dvd_index</span> <span class=\"n\">Q</span>\n\n<span class=\"c1\">-- The Sylow q-subgroup has order q</span>\n  <span class=\"k\">have</span> <span class=\"n\">q0</span> <span class=\"o\">:</span> <span class=\"n\">Fintype.card</span> <span class=\"n\">Q</span> <span class=\"bp\">=</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"k\">have</span> <span class=\"n\">pp</span> <span class=\"o\">:</span> <span class=\"n\">p.Prime</span> <span class=\"o\">:=</span> <span class=\"n\">Fact.out</span>\n    <span class=\"k\">have</span> <span class=\"n\">qp</span> <span class=\"o\">:</span> <span class=\"n\">q.Prime</span> <span class=\"o\">:=</span> <span class=\"n\">Fact.out</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Sylow.card_eq_multiplicity</span><span class=\"o\">]</span>\n    <span class=\"n\">convert</span> <span class=\"n\">pow_one</span> <span class=\"n\">_</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hG</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.factorization_mul_apply_of_coprime</span> <span class=\"o\">((</span><span class=\"n\">Nat.coprime_primes</span> <span class=\"n\">pp</span> <span class=\"n\">qp</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">h.ne</span><span class=\"o\">)]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.factorization_eq_zero_of_lt</span> <span class=\"n\">h</span><span class=\"o\">]</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">qp.factorization_self</span><span class=\"o\">]</span>\n\n  <span class=\"gr\">sorry</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>(this was more painful than I expected)</p>",
        "id": 421928417,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708113108
    },
    {
        "content": "<p>Yes thank you so much I was having so many issues with it as well. Thanks for your help!</p>",
        "id": 421930269,
        "sender_full_name": "Roshan Kohli",
        "timestamp": 1708113810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"671777\">Roshan Kohli</span> has marked this topic as resolved.</p>",
        "id": 421930274,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708113812
    }
]