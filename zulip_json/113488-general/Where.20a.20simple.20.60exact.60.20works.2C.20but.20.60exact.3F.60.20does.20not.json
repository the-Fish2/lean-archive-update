[
    {
        "content": "<p>Here is a case where <code>exact</code> works, but <code>exact?</code> does not: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">List.replicate</span> <span class=\"n\">r</span> <span class=\"n\">b</span><span class=\"o\">):</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"n\">List.eq_of_mem_replicate</span> <span class=\"n\">ha</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">List.replicate</span> <span class=\"n\">r</span> <span class=\"n\">b</span><span class=\"o\">):</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span><span class=\"bp\">?</span>\n  <span class=\"c\">/-</span><span class=\"cm\">`exact?` could not close the goal. Try `apply?` to see partial suggestions.</span>\n<span class=\"cm\">  -/</span>\n</code></pre></div>\n<p>Is there a simple explanation for this?</p>",
        "id": 434600356,
        "sender_full_name": "Jeremy Kahn",
        "timestamp": 1713715829
    },
    {
        "content": "<p>I think for efficiency reasons (i.e. too many possible matches that would dominate the cache) <code>exact?</code> skips all theorems whose conclusion is just <code>a = b</code>. This seems to come up periodically and the conclusion is often \"someone should evaluate the impact of not doing this as it might not be relevant anymore\" but as far as I know nobody did so (yet!)</p>",
        "id": 434600614,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1713715968
    },
    {
        "content": "<p>See in particular <a href=\"https://github.com/leanprover/lean4/blob/master/src/Lean/Meta/Tactic/LibrarySearch.lean#L100\">https://github.com/leanprover/lean4/blob/master/src/Lean/Meta/Tactic/LibrarySearch.lean#L100</a>. It may be possible to drop <code>* = *</code> there, leaving just <code>*</code></p>",
        "id": 434624348,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1713738930
    },
    {
        "content": "<p>Learn something new every day! I actually found this example by accident, when trying to generate a minimal demonstration of <code>exact?</code> timing out for no reason. This was happening in another, much larger file, but <em>that</em> problem was fixed by restarting the file.</p>",
        "id": 434630792,
        "sender_full_name": "Jeremy Kahn",
        "timestamp": 1713746122
    }
]