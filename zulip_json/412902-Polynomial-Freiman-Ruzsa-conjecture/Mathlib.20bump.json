[
    {
        "content": "<p>I reduced the changes to the <code>lake-manifest.json</code> in <a href=\"https://github.com/teorth/pfr/pull/129/files\">https://github.com/teorth/pfr/pull/129/files</a> (no functional change from my original PR, just making sure json blocks aren't unnecessarily reordered).</p>\n<p>It compiles fine with <code>lake build</code>. Is there anything else to be concerned about? (If so, how about we check it in CI? :-)</p>",
        "id": 405971426,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1701750593
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump/near/405971426\">said</a>:</p>\n<blockquote>\n<p>I reduced the changes to the <code>lake-manifest.json</code> in <a href=\"https://github.com/teorth/pfr/pull/129/files\">https://github.com/teorth/pfr/pull/129/files</a> (no functional change from my original PR, just making sure json blocks aren't unnecessarily reordered).</p>\n<p>It compiles fine with <code>lake build</code>. Is there anything else to be concerned about? (If so, how about we check it in CI? :-)</p>\n</blockquote>\n<p>Hmm, as with previous bumps it caused my local version of Lean to recompile all of Mathlib, but that's fine.  (I understand that I could presumably save the hour or two of building by doing <code>lake cache get</code> or something, but I'm not touching Lean any time soon, so I'm happy to just let it run. Still, I'm glad we waited until the project got over the finish line before approving the Mathlib rollover.)</p>",
        "id": 406173575,
        "sender_full_name": "Terence Tao",
        "timestamp": 1701817189
    },
    {
        "content": "<p>Now that we're reaching the \"upstreaming\" part of the project, please everyone expect mathlib bumps to become quite frequent!</p>",
        "id": 406832893,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702067280
    },
    {
        "content": "<p>I would like to remind you that whenever you pull a bump PR to your local copy, you should run <code>lake exe cache get</code> right after. Importantly, <strong>do not click <code>Rebuild imports</code> or <code>Refresh file dependencies</code> or <code>Restart file</code></strong> until you've run <code>lake exe cache get</code>.</p>",
        "id": 406833100,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702067395
    },
    {
        "content": "<p>So \"before you upgrade, close VS Code, and don't open it again until after <code>lake exe cache get</code>\". I usually type <code>lake build</code> as well before opening VS Code.</p>",
        "id": 406846412,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702073556
    },
    {
        "content": "<p>I don't think closing vscode is necessary any more</p>",
        "id": 406847342,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702074021
    },
    {
        "content": "<p>You just have to <em>not</em> click the popup that says \"restart file\" until you are actually ready to run Lean against your cache</p>",
        "id": 406847376,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702074042
    },
    {
        "content": "<p>crtl+shift+x is probably my most frequently used shortcut nowadays</p>",
        "id": 406847589,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1702074164
    },
    {
        "content": "<p>For me closing and opening VS Code is cheap. I do it every time I fiddle on command line. Looking forward to a world where I never have to touch command line...</p>",
        "id": 406906098,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1702109198
    },
    {
        "content": "<p>Developer: reload window is closing vscode but faster :)</p>",
        "id": 406929852,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1702124818
    },
    {
        "content": "<p>Not clicking \"restart file\" is (in this case) \"Developer: reload window\" but faster :)</p>",
        "id": 406956425,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702141914
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, what are the major things you're still doing on the command line?</p>\n<ul>\n<li>Restart file (via ctrl-shift-x) deals with out of date imports</li>\n<li>Under the \\forall menu, selecting \"Project Actions\" then \"Fetch Mathlib Build Cache\" achieves the same as <code>lake exe cache get</code></li>\n<li>\"Developer: reload window\" resolves many \"how did I get into this weird state\" problems.</li>\n</ul>\n<p>If you're keen on a future of not needing the command line, I'd recommend you try using these as much as possible, and report back where the pain points are, or conditions when you still need the command line.</p>",
        "id": 406958931,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1702144266
    },
    {
        "content": "<p>(this is saying the command-line-free future might already be here... in my demo talk on tuesday I installed Lean during the talk, and didn't touch a command line.)</p>",
        "id": 406958958,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1702144303
    },
    {
        "content": "<p>Heads up that I just bumped mathlib an hour ago.</p>",
        "id": 407107541,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702242123
    },
    {
        "content": "<p>And bumped again just now.</p>",
        "id": 407672983,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702457144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump/near/407672983\">said</a>:</p>\n<blockquote>\n<p>And bumped again just now.</p>\n</blockquote>\n<p>Just a headsup: as part of the entropy refactoring I've had to add lemmas to PFR/Mathlib/MeasureTheory/Integral/Bochner.lean , PFR/Mathlib/MeasureTheory/Integral/Lebesgue.lean ,  <br>\nPFR/Mathlib/MeasureTheory/Measure/Dirac.lean , PFR/Mathlib/MeasureTheory/Measure/NullMeasurable.lean , and PFR/Mathlib/Probability/Kernel/Disintegration.lean (mostly along the lines of replacing finiteness hypotheses with countability hypotheses).</p>",
        "id": 407692488,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702462858
    },
    {
        "content": "<p>Oof, I just discovered that updating Mathlib at the main branch causes other branches to want to update too.  Now Lean is rebuilding Mathlib in the entropy refactoring branch, I hope this doesn't break too many more things</p>",
        "id": 407765933,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702485154
    },
    {
        "content": "<p>If you switch branch between different mathlib versions, you need to run <code>lake exe cache get</code> again</p>",
        "id": 407766139,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702485202
    },
    {
        "content": "<p>(it should use an offline cache if you were previously working on that version, but you still have to tell it to copy the files from the cache)</p>",
        "id": 407766315,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702485236
    },
    {
        "content": "<p>Is there a way to merge changes in the main branch with changes in a refactoring branch without pushing those changes back into the main branch?</p>",
        "id": 407766354,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702485242
    },
    {
        "content": "<p>From the refactor branch, you can <code>git merge the_main_branch</code></p>",
        "id": 407766515,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702485269
    },
    {
        "content": "<p>(which may be either <code>main</code> or <code>master</code> for your project, I don't know which)</p>",
        "id": 407766604,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702485289
    },
    {
        "content": "<p>The refactor branch is currently building Mathlib files (554/1698 so far).  Would it be safe to cancel this, close VSCode, run <code>lake exe cache get</code> and <code>git merge master</code>, and reopen VSCode?</p>",
        "id": 407766873,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702485342
    },
    {
        "content": "<p>Yes, absolutely.</p>",
        "id": 407767097,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702485387
    },
    {
        "content": "<p>Except you should <code>git merge master</code> <em>then</em> run <code>lake exe cache get</code>.</p>",
        "id": 407767239,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702485419
    },
    {
        "content": "<p>Also: if I have checked out the refactor branch in VScode and then close VScode and open up a separate command line, will git still know that I am in that branch?</p>",
        "id": 407767244,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702485420
    },
    {
        "content": "<p>The knowledge about which branch you are in is stored in the filesystem (in the <code>.git</code> folder)</p>",
        "id": 407767439,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1702485466
    },
    {
        "content": "<p>ok. Trying it now <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 407767520,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702485482
    },
    {
        "content": "<p>Oh crap there are merge conflicts</p>",
        "id": 407767710,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702485516
    },
    {
        "content": "<p>Sorry <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 407768771,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702485766
    },
    {
        "content": "<p><code>git push</code> will still sync your most recent commits (pre merge) with GitHub in case you haven't done so already</p>",
        "id": 407769112,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1702485843
    },
    {
        "content": "<p>Seems like the newest commit is quite recent, though</p>",
        "id": 407769235,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1702485881
    },
    {
        "content": "<p>Ugh Measure.lean is going to be a mess for a while now</p>",
        "id": 407770506,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702486288
    },
    {
        "content": "<p>You can also <code>git merge --abort</code> if you'd rather undo it all and deal with it later</p>",
        "id": 407770808,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1702486374
    },
    {
        "content": "<p>(you'll lose any merging work you might have done, though)</p>",
        "id": 407770905,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1702486407
    },
    {
        "content": "<p>Actually it only created three errors in the file, hopefully I can fix them all manually.</p>",
        "id": 407771777,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702486682
    },
    {
        "content": "<p>I was expecting an ocean of red</p>",
        "id": 407771853,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702486695
    },
    {
        "content": "<p>Have to attend to other things right now, but hopefully this was only a speed bump.</p>",
        "id": 407771990,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702486744
    },
    {
        "content": "<p>OK Measure.lean is repaired.  Refactoring is back on track!</p>",
        "id": 407805671,
        "sender_full_name": "Terence Tao",
        "timestamp": 1702499815
    },
    {
        "content": "<p>Bumped again!</p>",
        "id": 408557256,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1702887294
    },
    {
        "content": "<p>A pretty big bump today, with 10 files gone.</p>",
        "id": 409743495,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703360053
    },
    {
        "content": "<p>I started a bump, but got stuck on the huge statements in <code>WeakPFR</code>. My progress is on branch <code>bump</code>, if people want to have a look.</p>",
        "id": 410642194,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704037238
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump/near/410642194\">said</a>:</p>\n<blockquote>\n<p>I started a bump, but got stuck on the huge statements in <code>WeakPFR</code>. My progress is on branch <code>bump</code>, if people want to have a look.</p>\n</blockquote>\n<p>Yeah, the proofs I just put in there are a bit of a mess, I was not prepared for just how complicated it would be in particular to formalize the single line \"Without loss of generality we can assume that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>  are not both inside (possibly distinct) cosets of the same subgroup of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">Z</mi><mi>d</mi></msup></mrow><annotation encoding=\"application/x-tex\">{\\mathbb Z}^d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span>, or we just replace <br>\n with that subgroup.\" in the blueprint, which expanded to well over 200 lines of code.  Let me know if there is anything specific you could use help on.</p>\n<p>It did occur to me that bundling together a lot of the hypotheses into a single structure would be cleaner, visually at least; in particular having something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">UniformVar</span> <span class=\"o\">{</span><span class=\"n\">G</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">G</span><span class=\"o\">]</span>  <span class=\"o\">(</span><span class=\"n\">A</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">finite</span><span class=\"o\">:</span> <span class=\"n\">Set.Finite</span> <span class=\"n\">A</span>\n  <span class=\"n\">nonempty</span><span class=\"o\">:</span> <span class=\"n\">Nonempty</span> <span class=\"n\">A</span>\n  <span class=\"bp\">Ω</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n  <span class=\"n\">h</span><span class=\"bp\">Ω</span><span class=\"o\">:</span> <span class=\"n\">MeasureSpace</span> <span class=\"bp\">Ω</span>\n  <span class=\"n\">hμ</span><span class=\"o\">:</span> <span class=\"n\">IsProbabilityMeasure</span> <span class=\"o\">(</span><span class=\"n\">ℙ</span><span class=\"o\">:</span><span class=\"n\">Measure</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span>\n  <span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span>\n  <span class=\"n\">uniform</span><span class=\"o\">:</span> <span class=\"n\">IsUniform</span> <span class=\"n\">A</span> <span class=\"n\">X</span> <span class=\"n\">ℙ</span>\n  <span class=\"n\">measurable</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">X</span>\n  <span class=\"n\">range</span><span class=\"o\">:</span> <span class=\"n\">FiniteRange</span> <span class=\"n\">X</span>\n</code></pre></div>\n<p>would shorten the very long statements in weakPFR (and could also retroactively be used in PFR), though given the principle of \"if it ain't broke, don't fix it\", perhaps this is only worth doing if the alternative is causing actual pain (e.g., in making the bump harder).</p>",
        "id": 410646018,
        "sender_full_name": "Terence Tao",
        "timestamp": 1704041130
    },
    {
        "content": "<p>Actually on further investigation it appears that trying to bundle classes inside a structure messes up instance inference, and so could cause more problems than it solves.</p>",
        "id": 410648116,
        "sender_full_name": "Terence Tao",
        "timestamp": 1704043379
    },
    {
        "content": "<p>It kinda is broke right now <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> Certainly if we want to PR PFR to mathlib, we'll have to clean this up one way or another.</p>",
        "id": 410648132,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704043400
    },
    {
        "content": "<p>well one could always jettison weakPFR from any mathlib PR to resolve this specific issue (I doubt it would see all that many usecases in Mathlib, whereas the core PFR theorem might conceivably have an application).</p>",
        "id": 410648243,
        "sender_full_name": "Terence Tao",
        "timestamp": 1704043544
    },
    {
        "content": "<p>Another possible refactor is to introduce a variant Ruzsa distance <code>dᵤ[A # B]</code>, defined to equal <code>d[UA # UB]</code> where <code>UA</code>, <code>UB</code> are uniform random variables on <code>A</code>, <code>B</code> (chosen arbitrarily, because the choice does not matter), and set up some basic API for this distance (for instance, it is preserved by injective homomorphisms and by shifting by constants).  Then one doesn't have to explicitly carry the uniform random variables and their supporting structures throughout the argument (and particularly throughout the inductive part of weakPFR).  It could also simplify PFR itself a little bit (though it's much less of an issue there because one is not performing induction), and also removes a minor universe issue (I had to suddenly care about which universe everything belonged to in order to perform induction).  I could try developing this approach if you think it is worthwhile, though of course I don't want to interfere with your bump.</p>",
        "id": 410649667,
        "sender_full_name": "Terence Tao",
        "timestamp": 1704045193
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"657719\">Terence Tao</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump/near/410646018\">said</a>:</p>\n<blockquote>\n<p>It did occur to me that bundling together a lot of the hypotheses into a single structure would be cleaner, visually at least; in particular having something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">UniformVar</span> <span class=\"o\">{</span><span class=\"n\">G</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">G</span><span class=\"o\">]</span>  <span class=\"o\">(</span><span class=\"n\">A</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">finite</span><span class=\"o\">:</span> <span class=\"n\">Set.Finite</span> <span class=\"n\">A</span>\n  <span class=\"n\">nonempty</span><span class=\"o\">:</span> <span class=\"n\">Nonempty</span> <span class=\"n\">A</span>\n  <span class=\"bp\">Ω</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n  <span class=\"n\">h</span><span class=\"bp\">Ω</span><span class=\"o\">:</span> <span class=\"n\">MeasureSpace</span> <span class=\"bp\">Ω</span>\n  <span class=\"n\">hμ</span><span class=\"o\">:</span> <span class=\"n\">IsProbabilityMeasure</span> <span class=\"o\">(</span><span class=\"n\">ℙ</span><span class=\"o\">:</span><span class=\"n\">Measure</span> <span class=\"bp\">Ω</span><span class=\"o\">)</span>\n  <span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"bp\">Ω</span> <span class=\"bp\">→</span> <span class=\"n\">G</span>\n  <span class=\"n\">uniform</span><span class=\"o\">:</span> <span class=\"n\">IsUniform</span> <span class=\"n\">A</span> <span class=\"n\">X</span> <span class=\"n\">ℙ</span>\n  <span class=\"n\">measurable</span><span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">X</span>\n  <span class=\"n\">range</span><span class=\"o\">:</span> <span class=\"n\">FiniteRange</span> <span class=\"n\">X</span>\n</code></pre></div>\n<p>would shorten the very long statements in weakPFR (and could also retroactively be used in PFR), though given the principle of \"if it ain't broke, don't fix it\", perhaps this is only worth doing if the alternative is causing actual pain (e.g., in making the bump harder).</p>\n</blockquote>\n<p>A general thought I have about the code in the PFR project, which I think applies here, is that often the code is written about random variables but should be about measures. Very often we care only about the law of the variables, and because we talk about random variables we need Ω and a <code>Measurable X</code> assumption which we have to carry along. All the entropy and Ruzsa distance definitions are more naturally written about measures; at several steps of the blueprint there are remarks stating that random variables need not be defined on the same space and as far as I can tell it's because only their laws matter... In some places we even explicitly change the domain of the random variables even though that domain should not matter.</p>\n<p>I was thinking about trying to refactor the code to use less random variables and see how simpler it can get, but that's a lot of refactoring and I am only midly curious.</p>\n<p>For similar reasons, I think that a definition of a Ruzsa distance between sets equal to the distance between uniform measures is a good idea: if the choice of measure don't matter, let's not introduce the measure and work as much as possible with the sets only.</p>",
        "id": 410651783,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1704047443
    },
    {
        "content": "<p>Good point.  In particular we should define the uniform probability measure <code>Measure.uniform A</code> of a finite non-empty subset <code>A</code> of an ambient (<code>MeasurableSingletonClass</code>) space <code>G</code>, and use the measure-theoretic version of Ruzsa distance to define <code>dᵤ[A # B]</code>.  I had in mind a much more complicated definition involving <code>exists_isUniform_measureSpace</code> (and the axiom of choice) that would have been considerably worse to work with. (EDIT: once one had <code>Measure.uniform</code>, one could refactor the <code>IsUniform</code> API accordingly.)</p>\n<p>The one nice thing about working with random variables instead of measures is that algebraic facts about (deterministic) variables in the range space carry over quite painlessly to the random variables.  For instance, if <code>G</code> is an elementary abelian 2-group, we have <code>x+y=x-y</code> for all <code>x y: G</code>, and hence we pretty much automatically have <code>X+Y=X-Y</code> for all <code>X Y: Ω → G</code> as well.  Admittedly it's not <em>that</em> much harder to show that <code>μXY.map (fun x ↦ x.1 + x.2) = μXY.map (fun x ↦ x.1 - x.2)</code> (where <code>μXY</code> is the joint distribution of <code>X</code> and <code>Y</code>, which for instance might be <code>μX.prod μY</code> if <code>X</code>, <code>Y</code> are independent) but it's visually and conceptually harder to follow arguments structured in that fashion.</p>\n<p>I think I will create a separate file to try to set up uniform measures and Ruzsa distance between sets, but not touch the main project files such as weakPFR.lean for now, just to see how it would work.</p>",
        "id": 410653124,
        "sender_full_name": "Terence Tao",
        "timestamp": 1704049017
    },
    {
        "content": "<p>Ah, I remember now what the main advantage of the random variable formalism is: one can introduce new random variables that are independent of previous variables, but all facts already proven about the previous random variables carry over because the hypotheses (such as independence) are probabilistic hypotheses that don't require a specific sample space.  If one worked only with distributions, then every time one wanted to introduce a new random variable, one would have to replace the previous joint distribution with a product of that measure with the new distribution, and make sure that all previously established facts about the prior distribution lift to the new one.  For instance, if one already had some inequalities concerning independent random variables <code>X</code> and <code>Y</code>, and some inequalities concerning independent random variables <code>Y</code> and <code>Z</code>, and now wanted to combine these inequalities to form a more complex inequality relating jointly independent variables <code>X</code>, <code>Y</code>, and <code>Z</code>, then a number of lifting arguments would have to be made before the inequalities could be combined if one was working in a purely distribution-based formalism.  In our current framework we rely in the various <code>independent_copies</code> lemmas to do all this lifting at the very beginning of the argument instead of in the middle.  Potentially a refactor would still be cleaner though.</p>",
        "id": 410654387,
        "sender_full_name": "Terence Tao",
        "timestamp": 1704050323
    },
    {
        "content": "<p>OK, I now have an API for uniform probability measures, and a set-based Ruzsa distance at <a href=\"https://github.com/teorth/pfr/blob/master/PFR/ForMathlib/Entropy/RuzsaSetDist.lean\">https://github.com/teorth/pfr/blob/master/PFR/ForMathlib/Entropy/RuzsaSetDist.lean</a> .  (Because the existing Ruzsa distance API is more developed for random variables than for measures, the proofs here largely go through the random variable formalism, but in principle it could all be refactored eventually.)  I can start converting the relevant portions of weakPFR (and PFR) to this API, but I don't want to interfere with <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> 's bump.  Yael, how would you like to proceed here?</p>",
        "id": 410692650,
        "sender_full_name": "Terence Tao",
        "timestamp": 1704087187
    },
    {
        "content": "<p>p.s. for some reason the blueprint did not build in the most recent commits, despite no change to the source files. <a href=\"https://github.com/teorth/pfr/actions/runs/7375198307/job/20066472325\">https://github.com/teorth/pfr/actions/runs/7375198307/job/20066472325</a></p>",
        "id": 410694327,
        "sender_full_name": "Terence Tao",
        "timestamp": 1704088749
    },
    {
        "content": "<p>I spent an awful lot of time on <code>WeakPFR</code> but not very productively. Most of my bump is before <code>WeakPFR</code>, so I suggest you streamline whatever you can, and once this is in a better state I redo my bump by cherry-picking changes from the <code>bump</code> branch.</p>",
        "id": 410706928,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704100809
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"657719\">Terence Tao</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump/near/410694327\">said</a>:</p>\n<blockquote>\n<p>p.s. for some reason the blueprint did not build in the most recent commits, despite no change to the source files. <a href=\"https://github.com/teorth/pfr/actions/runs/7375198307/job/20066472325\">https://github.com/teorth/pfr/actions/runs/7375198307/job/20066472325</a></p>\n</blockquote>\n<p>I have the same new error for the CLT blueprint: <a href=\"https://github.com/RemyDegenne/CLT/actions/runs/7376451454/job/20069248540\">https://github.com/RemyDegenne/CLT/actions/runs/7376451454/job/20069248540</a><br>\nI don't know how to fix it yet.</p>",
        "id": 410710626,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1704103843
    },
    {
        "content": "<p>OK, Weak PFR is now refactored using distance between sets.  I guess for sake of consistency I'll do PFR next.</p>",
        "id": 410741209,
        "sender_full_name": "Terence Tao",
        "timestamp": 1704130856
    },
    {
        "content": "<p>Oh, wait, PFR actually uses the random variable formalism much more deeply than weak PFR.  It ain't broke, so I think I'll just leave it as is.</p>",
        "id": 410741398,
        "sender_full_name": "Terence Tao",
        "timestamp": 1704131002
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/The.20cache.20doesn't.20work\">The cache for mathlib is currently broken</a>, so I will restrain from bumping until it is fixed.</p>",
        "id": 410812955,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704185252
    },
    {
        "content": "<p>you can probably bump to v2024</p>",
        "id": 410813213,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704185393
    },
    {
        "content": "<p>Yes but I wanted to bump to <a href=\"https://github.com/leanprover-community/mathlib4/commit/0d6117a47dd8f9fe074025146a29b195bf0230f1\">https://github.com/leanprover-community/mathlib4/commit/0d6117a47dd8f9fe074025146a29b195bf0230f1</a> <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 410813338,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704185454
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> is now done with BSG! However his proof uses <a href=\"https://github.com/YaelDillies/LeanAPAP\">APAP</a>, my discrete Fourier analysis library.</p>",
        "id": 412823705,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705246018
    },
    {
        "content": "<p>This means we need to make PFR depend on APAP. Since APAP uses a more recent mathlib than PFR, we must complete <a href=\"https://github.com/teorth/pfr/pull/171\">pfr#171</a> before I can add APAP as a dependency and complete all the tasks currently the blueprint.</p>",
        "id": 412823847,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705246120
    },
    {
        "content": "<p>I must focus on my studies for the coming two months. I am therefore asking you whether you would have time to take over <a href=\"https://github.com/teorth/pfr/pull/171\">pfr#171</a>. It shouldn't be terribly hard.</p>",
        "id": 412823994,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705246245
    },
    {
        "content": "<p>I did start updating it, but there was some breakage with Nonempty/Set.Nonempty I couldn't fix in WeakPFR.lean</p>",
        "id": 412825297,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1705247316
    },
    {
        "content": "<p>Sorry, do you mean you started bumping mathlib <em>again</em> (as in not on branch <code>bump</code> from <a href=\"https://github.com/teorth/pfr/pull/171\">pfr#171</a>)?</p>",
        "id": 412825460,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705247465
    },
    {
        "content": "<p>No, on top of <a href=\"https://teorth.github.io/pfr/docs/find/?pattern=171#doc\">pfr#171</a></p>",
        "id": 412825471,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1705247482
    },
    {
        "content": "<p>Don't worry too much about bumping to the latest mathlib. I will be able to do that quickly once <a href=\"https://github.com/teorth/pfr/pull/171\">pfr#171</a> is in.</p>",
        "id": 412825573,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705247550
    },
    {
        "content": "<p>PRd the version with Nonempty issues as <a href=\"https://github.com/teorth/pfr/pull/183\">https://github.com/teorth/pfr/pull/183</a></p>",
        "id": 412825634,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1705247617
    },
    {
        "content": "<p>(The linkifier currently doesn't work. I've been fixing my links manually)</p>",
        "id": 412825711,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705247672
    },
    {
        "content": "<p>The errors in ApproxHomPFR.lean are new and I think I can fix them. The Nonempty ones in WeakPFR.lean look trickier.</p>",
        "id": 412827401,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1705249234
    },
    {
        "content": "<p>In WeakPFR, it's a matter of replacing <code>hs : Nonempty s</code> by <code>hs : s.Nonempty</code> and add <code>have := hs.to_subtype</code> wherever needed.</p>",
        "id": 412828166,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705249976
    },
    {
        "content": "<p>I probably made more of a mess than needed, but it builds now</p>",
        "id": 412846625,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1705266390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> , is <a href=\"https://github.com/teorth/pfr/pull/171\">https://github.com/teorth/pfr/pull/171</a> good to go, or should we bump it to another version of mathlib to make sure it becomes compatible with APAP?</p>",
        "id": 413106916,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705395325
    },
    {
        "content": "<p>Send it as soon as it passes CI!</p>",
        "id": 413107040,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705395365
    },
    {
        "content": "<p>It does already pass CI, doesn't it?</p>",
        "id": 413108259,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705395783
    },
    {
        "content": "<p>Ah I didn't notice! Merged</p>",
        "id": 413130188,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705402987
    },
    {
        "content": "<p>I am now waiting for <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> to put the BSG code in LeanAPAP. Then I will add LeanAPAP as a dependency to PFR and the graph will be fully green!</p>",
        "id": 413130753,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1705403159
    },
    {
        "content": "<p>Is anyone else getting build errors post-bump, starting with PFR.Mathlib.Probability.Kernel.MeasureCompProd.lean (where it complains that <code>prod_apply</code> is not a function?, and also giving several errors such as \"'ProbabilityTheory.kernel.prod_const' has already been declared\").  Possibly I have the wrong cache or something, since the CI seems to be working fine.</p>",
        "id": 415950667,
        "sender_full_name": "Terence Tao",
        "timestamp": 1705465488
    },
    {
        "content": "<p><code>kernel.prod_const</code> was added to Mathlib yesterday, along most of the content of the file MeasureCompProd. If the Mathlib version you have is younger than that, those errors are expected and most of MeasureCompProd should simply be deleted.<br>\nI can help clean up. Does the problem happen on master?</p>",
        "id": 415963283,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1705474213
    },
    {
        "content": "<p>I am bumping mathlib now. PR coming soon.</p>",
        "id": 415968137,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1705477028
    },
    {
        "content": "<p><a href=\"https://github.com/teorth/pfr/pull/184\">https://github.com/teorth/pfr/pull/184</a></p>",
        "id": 415970222,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1705478093
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"350992\">@Rémy Degenne</span> Can you use <code>scripts/update_mathlib.sh</code> to update the lake manifest? This ensures doc-gen dependencies are added to the manifest properly (otherwise master CI will break once the PR is merged).</p>",
        "id": 415979153,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1705481684
    },
    {
        "content": "<p>Or just run <code>lake -R -Kenv=dev update</code>, that should be enough too</p>",
        "id": 415979227,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1705481716
    },
    {
        "content": "<p>I used the lake command you wrote and pushed to the PR branch. Is it good now?</p>",
        "id": 415981193,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1705482381
    },
    {
        "content": "<p>I think so. Thank you!</p>",
        "id": 415982786,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1705482894
    },
    {
        "content": "<p>Somehow I still haven't mastered the workflow of updating the cache and Lean is currently rebuilding Mathlib from scratch, but hopefully everything is fixed now, will let you know in an hour or two once mathlib builds.  (For some reason, once I start accidentally initiate the mathlib build process, VSCode is determined to see it to the end, no matter how many times I restart, fetch the cache, etc., afterwards.)</p>",
        "id": 416068704,
        "sender_full_name": "Terence Tao",
        "timestamp": 1705508556
    },
    {
        "content": "<p>Normally, quitting VSCode and then doing</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">clean</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span><span class=\"bp\">!</span>\n</code></pre></div>\n<p>should get you a working mathlib. Deleting the <code>.lake</code> directory may also help.</p>",
        "id": 416069444,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705508698
    },
    {
        "content": "<p>But of course, it's computer science, so utterly unpredictable :-)</p>",
        "id": 416069533,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705508714
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sébastien Gouëzel</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump/near/416069444\">said</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">clean</span>\n</code></pre></div>\n<p>error: permission denied (error code: 13)<br>\n  file: .\\.lake\\build\\lib</p>",
        "id": 416069975,
        "sender_full_name": "Terence Tao",
        "timestamp": 1705508801
    },
    {
        "content": "<p>Wow, pretty unusual. I would just wipe out <code>.lake</code> completely.</p>",
        "id": 416070133,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705508833
    },
    {
        "content": "<p>Oh wait, one has to do this in the mathlib directory rather than the root directory?</p>",
        "id": 416070350,
        "sender_full_name": "Terence Tao",
        "timestamp": 1705508879
    },
    {
        "content": "<p>In the root directory.</p>",
        "id": 416070466,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705508894
    },
    {
        "content": "<p><code>lake clean</code> works in the mathlib directory.</p>",
        "id": 416070595,
        "sender_full_name": "Terence Tao",
        "timestamp": 1705508920
    },
    {
        "content": "<p>You should never try to touch the mathlib directory: since you're not working on mathlib, it's just a version that has been downloaded for you by lake, and it's just lake's business.</p>",
        "id": 416071015,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705509003
    },
    {
        "content": "<p>I just tried it on my computer: I have checked out latest PFR master, and then</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">PS</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">sgouezel_A</span><span class=\"bp\">\\</span><span class=\"n\">Desktop</span><span class=\"bp\">\\</span><span class=\"n\">pfr</span><span class=\"bp\">&gt;</span> <span class=\"n\">lake</span> <span class=\"n\">clean</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"n\">b075cdd0e6ad8b5a3295e7484b2ae59e9b2ec2a7'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">std</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">std'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"mi\">1</span><span class=\"n\">d85fd7db28700b28043d6370dd1ebc426de4d5d'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Qq</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"mi\">1</span><span class=\"n\">c88406514a636d241903e2e288d21dc6d861e01'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">aesop</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"mi\">2</span><span class=\"n\">ae78a474ddf0a39bc2afb9f9f284d2e64f48a70'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">proofwidgets</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">proofwidgets'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"mi\">8</span><span class=\"n\">dd18350791c85c0fc9adbd6254c94a81d260d35'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">importGraph</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"kn\">import</span><span class=\"bp\">-</span><span class=\"n\">graph.git</span> <span class=\"n\">to</span> <span class=\"bp\">'.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">importGraph'</span>\n<span class=\"n\">PS</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">sgouezel_A</span><span class=\"bp\">\\</span><span class=\"n\">Desktop</span><span class=\"bp\">\\</span><span class=\"n\">pfr</span><span class=\"bp\">&gt;</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Downloading</span> <span class=\"n\">proofwidgets</span> <span class=\"n\">cloud</span> <span class=\"n\">release</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Unpacking</span> <span class=\"n\">proofwidgets</span> <span class=\"n\">cloud</span> <span class=\"n\">release</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">cache.exe</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">4133</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">4133</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">4133</span><span class=\"bp\">/</span><span class=\"mi\">4133</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">4133</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"mi\">7080</span> <span class=\"n\">ms</span>\n<span class=\"n\">PS</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">sgouezel_A</span><span class=\"bp\">\\</span><span class=\"n\">Desktop</span><span class=\"bp\">\\</span><span class=\"n\">pfr</span><span class=\"bp\">&gt;</span> <span class=\"n\">lake</span> <span class=\"n\">build</span>\n<span class=\"o\">[</span><span class=\"mi\">426</span><span class=\"bp\">/</span><span class=\"mi\">847</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.ForMathlib.Pair</span>\n<span class=\"o\">[</span><span class=\"mi\">844</span><span class=\"bp\">/</span><span class=\"mi\">847</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.Mathlib.GroupTheory.Subgroup.Pointwise</span>\n<span class=\"o\">[</span><span class=\"mi\">1140</span><span class=\"bp\">/</span><span class=\"mi\">1236</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.Tactic.Finiteness.Attr</span>\n<span class=\"o\">[</span><span class=\"mi\">1219</span><span class=\"bp\">/</span><span class=\"mi\">1276</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.Mathlib.Algebra.GroupWithZero.Units.Lemmas</span>\n<span class=\"o\">[</span><span class=\"mi\">1250</span><span class=\"bp\">/</span><span class=\"mi\">1276</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.Mathlib.MeasureTheory.Measure.NullMeasurable</span>\n<span class=\"o\">[</span><span class=\"mi\">1349</span><span class=\"bp\">/</span><span class=\"mi\">1657</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.Mathlib.Data.Fintype.Card</span>\n<span class=\"o\">[</span><span class=\"mi\">1422</span><span class=\"bp\">/</span><span class=\"mi\">1704</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.Mathlib.MeasureTheory.Integral.Lebesgue</span>\n<span class=\"o\">[</span><span class=\"mi\">1466</span><span class=\"bp\">/</span><span class=\"mi\">1864</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.Mathlib.Data.Set.Image</span>\n<span class=\"o\">[</span><span class=\"mi\">1467</span><span class=\"bp\">/</span><span class=\"mi\">1864</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.Mathlib.Data.Fin.Basic</span>\n<span class=\"o\">[</span><span class=\"mi\">1468</span><span class=\"bp\">/</span><span class=\"mi\">1864</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.Mathlib.Data.Fintype.Lattice</span>\n<span class=\"o\">[</span><span class=\"mi\">1469</span><span class=\"bp\">/</span><span class=\"mi\">1864</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.Mathlib.Data.Finset.Sigma</span>\n<span class=\"bp\">...</span>\n</code></pre></div>\n<p>only builds PFR files.</p>",
        "id": 416071527,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705509106
    },
    {
        "content": "<p>the \"permission denied\" error sometimes happen to me when VSCode is open and I try to use lake. It happened earlier today when I was trying to bump mathlib. It goes away when I close VSCode.</p>",
        "id": 416073168,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1705509453
    },
    {
        "content": "<p>Yes, all these commands should be used when VSCode is closed and no compilation is going on.</p>",
        "id": 416073784,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1705509572
    },
    {
        "content": "<p>OK, that works, thanks.  Saving these instructions the next time I need to rebuild from scratch.</p>",
        "id": 416082802,
        "sender_full_name": "Terence Tao",
        "timestamp": 1705512229
    },
    {
        "content": "<p>The bump to 4.6.0-rc1 has caused <code>rpow_simp</code> to break. I just spent an hour wading through the changelogs but I didn't figure out how to fix it <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>, do you have advice here?</p>",
        "id": 420736894,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707515079
    },
    {
        "content": "<p>See <code>PFR/Tactic/RpowSimp</code> in <a href=\"https://github.com/teorth/pfr/commit/5e621b7cb6ad405f52d334cd87591eb076b982ec\">https://github.com/teorth/pfr/commit/5e621b7cb6ad405f52d334cd87591eb076b982ec</a></p>",
        "id": 420736994,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707515135
    },
    {
        "content": "<p>broke how?</p>",
        "id": 420740046,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707516502
    },
    {
        "content": "<p>the build itself broke for a silly reason (missing include)</p>",
        "id": 420740123,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707516547
    },
    {
        "content": "<p>The simp internals changed with the introduction of simprocs (at least that's what I gathered)</p>",
        "id": 420740310,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707516630
    },
    {
        "content": "<p>okay, again broke how?</p>",
        "id": 420740450,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707516711
    },
    {
        "content": "<p>what line is failing with what error</p>",
        "id": 420740464,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707516721
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">rewrite</span> <span class=\"o\">(</span><span class=\"n\">parent</span> <span class=\"o\">:</span> <span class=\"n\">Expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"n\">Simp.Result</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">nctx</span> <span class=\"n\">rctx</span> <span class=\"n\">s</span> <span class=\"bp\">↦</span>\n  <span class=\"k\">let</span> <span class=\"n\">pre</span> <span class=\"n\">e</span> <span class=\"o\">:=</span>\n    <span class=\"n\">try</span>\n      <span class=\"n\">guard</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">root</span> <span class=\"bp\">||</span> <span class=\"n\">parent</span> <span class=\"bp\">!=</span> <span class=\"n\">e</span> <span class=\"c1\">-- recursion guard</span>\n      <span class=\"k\">let</span> <span class=\"n\">e</span> <span class=\"bp\">←</span> <span class=\"n\">withReducible</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">whnf</span> <span class=\"n\">e</span>\n      <span class=\"n\">guard</span> <span class=\"n\">e.isApp</span> <span class=\"c1\">-- all interesting ring expressions are applications</span>\n      <span class=\"n\">guard</span> <span class=\"bp\">&lt;|</span> <span class=\"bp\">←</span> <span class=\"n\">isDefEq</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">inferType</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"n\">q</span><span class=\"o\">(</span><span class=\"n\">ℝ</span><span class=\"o\">)</span>\n      <span class=\"k\">let</span> <span class=\"o\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">pa</span><span class=\"o\">⟩</span> <span class=\"bp\">←</span> <span class=\"n\">eval</span> <span class=\"n\">e</span> <span class=\"n\">rctx</span> <span class=\"n\">s</span>\n      <span class=\"k\">let</span> <span class=\"n\">r</span> <span class=\"bp\">←</span> <span class=\"n\">nctx.simp</span> <span class=\"o\">{</span> <span class=\"n\">expr</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">proof</span><span class=\"bp\">?</span> <span class=\"o\">:=</span> <span class=\"n\">pa</span> <span class=\"o\">}</span>\n      <span class=\"k\">if</span> <span class=\"bp\">←</span> <span class=\"n\">withReducible</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">isDefEq</span> <span class=\"n\">r.expr</span> <span class=\"n\">e</span> <span class=\"k\">then</span> <span class=\"n\">return</span> <span class=\"bp\">.</span><span class=\"n\">done</span> <span class=\"o\">{</span> <span class=\"n\">expr</span> <span class=\"o\">:=</span> <span class=\"n\">r.expr</span> <span class=\"o\">}</span>\n      <span class=\"n\">pure</span> <span class=\"o\">(</span><span class=\"bp\">.</span><span class=\"n\">done</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n    <span class=\"n\">catch</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">pure</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">Simp.Step.visit</span> <span class=\"o\">{</span> <span class=\"n\">expr</span> <span class=\"o\">:=</span> <span class=\"n\">e</span> <span class=\"o\">}</span>\n  <span class=\"k\">let</span> <span class=\"n\">post</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">Simp.postDefault</span> <span class=\"bp\">·</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"bp\">↦</span> <span class=\"n\">none</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">·.</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">&lt;$&gt;</span> <span class=\"n\">Simp.main</span> <span class=\"n\">parent</span> <span class=\"n\">nctx.ctx</span> <span class=\"o\">(</span><span class=\"n\">methods</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">pre</span><span class=\"o\">,</span> <span class=\"n\">post</span> <span class=\"o\">})</span>\n</code></pre></div>\n<p>is failing with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">RPowSimp.lean</span><span class=\"o\">:</span><span class=\"mi\">197</span><span class=\"o\">:</span><span class=\"mi\">14</span>\n<span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">nctx.simp</span> <span class=\"o\">{</span> <span class=\"n\">expr</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">proof</span><span class=\"bp\">?</span> <span class=\"o\">:=</span> <span class=\"n\">some</span> <span class=\"n\">pa</span><span class=\"o\">,</span> <span class=\"n\">dischargeDepth</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">cache</span> <span class=\"o\">:=</span> <span class=\"n\">true</span> <span class=\"o\">}</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">SimpM</span> <span class=\"n\">Simp.Result</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">MetaM</span> <span class=\"bp\">?</span><span class=\"n\">m.34878</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">RPowSimp.lean</span><span class=\"o\">:</span><span class=\"mi\">198</span><span class=\"o\">:</span><span class=\"mi\">36</span>\n<span class=\"n\">invalid</span> <span class=\"n\">field</span> <span class=\"kd\">notation</span><span class=\"o\">,</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">form</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"bp\">...</span><span class=\"o\">)</span> <span class=\"n\">where</span> <span class=\"n\">C</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"kd\">constant</span>\n  <span class=\"n\">r</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.34867</span>\n<span class=\"n\">RPowSimp.lean</span><span class=\"o\">:</span><span class=\"mi\">198</span><span class=\"o\">:</span><span class=\"mi\">57</span>\n<span class=\"n\">invalid</span> <span class=\"n\">dotted</span> <span class=\"n\">identifier</span> <span class=\"kd\">notation</span><span class=\"o\">,</span> <span class=\"n\">expected</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">form</span> <span class=\"o\">(</span><span class=\"bp\">...</span> <span class=\"bp\">→</span> <span class=\"n\">C</span> <span class=\"bp\">...</span><span class=\"o\">)</span> <span class=\"n\">where</span> <span class=\"n\">C</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"kd\">constant</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.35661</span>\n<span class=\"n\">RPowSimp.lean</span><span class=\"o\">:</span><span class=\"mi\">199</span><span class=\"o\">:</span><span class=\"mi\">12</span>\n<span class=\"n\">invalid</span> <span class=\"n\">dotted</span> <span class=\"n\">identifier</span> <span class=\"kd\">notation</span><span class=\"o\">,</span> <span class=\"n\">expected</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">form</span> <span class=\"o\">(</span><span class=\"bp\">...</span> <span class=\"bp\">→</span> <span class=\"n\">C</span> <span class=\"bp\">...</span><span class=\"o\">)</span> <span class=\"n\">where</span> <span class=\"n\">C</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"kd\">constant</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.35773</span>\n<span class=\"n\">RPowSimp.lean</span><span class=\"o\">:</span><span class=\"mi\">202</span><span class=\"o\">:</span><span class=\"mi\">34</span>\n<span class=\"n\">application</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n  <span class=\"n\">Simp.postDefault</span> <span class=\"n\">x</span><span class=\"bp\">✝</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">none</span>\n<span class=\"n\">argument</span>\n  <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">↦</span> <span class=\"n\">none</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">?</span><span class=\"n\">m.30870</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Option</span> <span class=\"o\">(</span><span class=\"bp\">?</span><span class=\"n\">m.30874</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"bp\">?</span><span class=\"n\">u.30869</span> <span class=\"o\">(</span><span class=\"bp\">?</span><span class=\"n\">u.30872</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">Expr</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">RPowSimp.lean</span><span class=\"o\">:</span><span class=\"mi\">203</span><span class=\"o\">:</span><span class=\"mi\">50</span>\n<span class=\"n\">overloaded</span><span class=\"o\">,</span> <span class=\"n\">errors</span>\n  <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"kd\">instance</span>\n    <span class=\"n\">Singleton</span> <span class=\"o\">(</span><span class=\"n\">Simp.SimprocsArray</span> <span class=\"bp\">→</span> <span class=\"n\">SimpM</span> <span class=\"n\">Simp.Step</span><span class=\"o\">)</span> <span class=\"n\">Simp.Methods</span>\n\n  <span class=\"mi\">203</span><span class=\"o\">:</span><span class=\"mi\">57</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span>\n    <span class=\"n\">post</span>\n  <span class=\"n\">has</span> <span class=\"n\">type</span>\n    <span class=\"n\">Simp.SimprocsArray</span> <span class=\"bp\">→</span> <span class=\"n\">SimpM</span> <span class=\"n\">Simp.Step</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n  <span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n    <span class=\"n\">Simp.Simproc</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n</code></pre></div>",
        "id": 420742104,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707517585
    },
    {
        "content": "<p>RpowSimp is a copy paste job of RingNF. The corresponding code in RingNF has changed like so:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"w\"> </span>  fun nctx rctx s ↦ do\n<span class=\"gd\">-    let pre e :=</span>\n<span class=\"gi\">+    let pre : Simp.Simproc := fun e =&gt;</span>\n<span class=\"w\"> </span>      try\n<span class=\"w\"> </span>        guard &lt;| root || parent != e -- recursion guard\n<span class=\"w\"> </span>        let e ← withReducible &lt;| whnf e\n<span class=\"w\"> </span>        guard e.isApp -- all interesting ring expressions are applications\n<span class=\"w\"> </span>        let ⟨u, α, e⟩ ← inferTypeQ' e\n<span class=\"w\"> </span>        let sα ← synthInstanceQ (q(CommSemiring $α) : Q(Type u))\n<span class=\"w\"> </span>        let c ← mkCache sα\n<span class=\"w\"> </span>        let ⟨a, _, pa⟩ ← match ← isAtomOrDerivable sα c e rctx s with\n<span class=\"w\"> </span>        | none =&gt; eval sα c e rctx s -- `none` indicates that `eval` will find something algebraic.\n<span class=\"w\"> </span>        | some none =&gt; failure -- No point rewriting atoms\n<span class=\"w\"> </span>        | some (some r) =&gt; pure r -- Nothing algebraic for `eval` to use, but `norm_num` simplifies.\n<span class=\"w\"> </span>        let r ← nctx.simp { expr := a, proof? := pa }\n<span class=\"w\"> </span>        if ← withReducible &lt;| isDefEq r.expr e then return .done { expr := r.expr }\n<span class=\"w\"> </span>        pure (.done r)\n<span class=\"gd\">-      catch _ =&gt; pure &lt;| .visit { expr := e }</span>\n<span class=\"gd\">-    let post := (Simp.postDefault · fun _ ↦ none)</span>\n<span class=\"gi\">+      catch _ =&gt; pure &lt;| .continue</span>\n<span class=\"gi\">+    let post := Simp.postDefault #[]</span>\n<span class=\"w\"> </span>    (·.1) &lt;$&gt; Simp.main parent nctx.ctx (methods := { pre, post })\n</code></pre></div>",
        "id": 420743777,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707518419
    },
    {
        "content": "<p>We really need to get <code>rpow_simp</code> to Mathlib. Users of PFR should not have to handle this.</p>",
        "id": 420746215,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1707519721
    },
    {
        "content": "<p>So I've almost fixed the build (<span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> 's diff above worked) on my branch:</p>\n<p><a href=\"https://github.com/teorth/pfr/pull/185\">https://github.com/teorth/pfr/pull/185</a></p>\n<p>I'm getting a weird unrelated error in the fixed ApproxHomPFR.lean . I get spammed with \"don't know how to synthesize placeholder\" on every line (there are no placeholders), but if I put a <code>sorry</code> at the end of the proof, it says \"no goals to be solved\", indicating that the proof is done (and I can step through and get the goal states fine)</p>",
        "id": 420773680,
        "sender_full_name": "llllvvuu",
        "timestamp": 1707544015
    },
    {
        "content": "<p>CI is saying ./.lake/packages/LeanAPAP/././LeanAPAP/Mathlib/Tactic/Positivity.lean:18:6: warning: declaration uses 'sorry', so I'd look there first!</p>",
        "id": 420773769,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1707544085
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 420774222,
        "sender_full_name": "llllvvuu",
        "timestamp": 1707544554
    },
    {
        "content": "<p>ah never mind, it was my mistake: it turns out the error message was correct and I'd made a typo which I didn't realize because the error message showed up on every line. Fixed now</p>",
        "id": 420774573,
        "sender_full_name": "llllvvuu",
        "timestamp": 1707544886
    },
    {
        "content": "<p>Also thank you <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> for the last green bubble!</p>\n<p><a href=\"/user_uploads/3121/DCJqJq69fswg3-KUgjpDRAoZ/Screenshot-2024-02-09-at-11.25.30PM.png\">Screenshot-2024-02-09-at-11.25.30PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/DCJqJq69fswg3-KUgjpDRAoZ/Screenshot-2024-02-09-at-11.25.30PM.png\" title=\"Screenshot-2024-02-09-at-11.25.30PM.png\"><img src=\"/user_uploads/3121/DCJqJq69fswg3-KUgjpDRAoZ/Screenshot-2024-02-09-at-11.25.30PM.png\"></a></div>",
        "id": 420779243,
        "sender_full_name": "llllvvuu",
        "timestamp": 1707550491
    },
    {
        "content": "<p>Nice! I wasn't sure whether it would be sorry-free since I've sorried many stupid things in LeanAPAP (things that are easier to fix in mathlib than to work around, like <code>NNRat.cast</code>)</p>",
        "id": 420782169,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707553797
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump/near/420773769\">said</a>:</p>\n<blockquote>\n<p>CI is saying ./.lake/packages/LeanAPAP/././LeanAPAP/Mathlib/Tactic/Positivity.lean:18:6: warning: declaration uses 'sorry', so I'd look there first!</p>\n</blockquote>\n<p>This is a remnant of the switch to Lean 4. There are still a few positivity extensions that haven't been fixed.</p>",
        "id": 420782330,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707553946
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"607118\">llllvvuu</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump/near/420779243\">said</a>:</p>\n<blockquote>\n<p>Also thank you <span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> for the last green bubble!</p>\n<p><a href=\"/user_uploads/3121/DCJqJq69fswg3-KUgjpDRAoZ/Screenshot-2024-02-09-at-11.25.30PM.png\">Screenshot-2024-02-09-at-11.25.30PM.png</a></p>\n</blockquote>\n<p>Thanks for getting things over the finish line!  Very happy to see this project reach a satisfactory conclusion.  (I guess there could still be some Mathlib migration to do, though...)</p>",
        "id": 420811470,
        "sender_full_name": "Terence Tao",
        "timestamp": 1707581094
    },
    {
        "content": "<p>... yes. <a href=\"https://teorth.github.io/pfr/\">https://teorth.github.io/pfr/</a> still lists a lot of files that would be easy to PR to mathlib. However, the meat of the project is still stuck on entropy, which itself is stuck on Rémy being very busy right now.</p>",
        "id": 420816617,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707585044
    },
    {
        "content": "<p>I am personally only mildly busy with Part III at the moment, so it's very possible I'll PR some of the aforementioned files. That will wait a bit though, because I've just started the fierce battle against the import hierarchy to define <code>NNRat.cast</code> (see <a href=\"https://github.com/leanprover-community/mathlib4/pull/10392\">#10392</a>), which I need for LeanAPAP.</p>",
        "id": 420816882,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1707585249
    },
    {
        "content": "<p>There is an issue for the transfer of most probability results to Mathlib: many things use a disintegration property of Markov kernels, which in the project has been proved only for countable spaces (<a href=\"https://teorth.github.io/pfr/docs/find/?pattern=ProbabilityTheory.kernel.condKernel#doc\">pfr#ProbabilityTheory.kernel.condKernel</a>).<br>\nIn Mathlib I think we should add that property in the more general case that either the domain is countable or the first space of the codomain is standard Borel. That's why I paused transferring to Mathlib: I want to do that properly first. I have around 1500 lines of code towards that result, which is 95% done. However as Yaël wrote I have little time to finish it right now.</p>",
        "id": 420818093,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1707586230
    },
    {
        "content": "<p>The result is <a href=\"https://github.com/leanprover-community/mathlib4/pull/10603\">#10603</a> . This is an enormous PR (+4,558 −1,631): I am cutting it into more reviewable pieces.</p>",
        "id": 423239574,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1708845258
    },
    {
        "content": "<p>Excited!!</p>",
        "id": 423254498,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1708859116
    },
    {
        "content": "<p>Btw I didn't mention it here, but I bumped Mathlib again this week. There was quite a lot of breakage due to syntax changes. But the next bump should be easy</p>",
        "id": 423254620,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1708859220
    },
    {
        "content": "<p><code>condKernel</code> is now in Mathlib! Thanks <span class=\"user-mention\" data-user-id=\"110050\">@Sébastien Gouëzel</span> for the reviews!<br>\nSometime in the next two weeks I'll bump Mathlib and modify the PFR code to use the new <code>condKernel</code>. Then I'll resume the transfer of PFR results to Mathlib.</p>",
        "id": 433523807,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1713274441
    },
    {
        "content": "<p>I bumped Mathlib and opened a PR: <a href=\"https://github.com/teorth/pfr/pull/188\">https://github.com/teorth/pfr/pull/188</a><br>\nThat was not fun. Many things broke, mainly due to a change in <code>simp</code>. And since we never enforced code quality requirements like replacing non-terminal simp by <code>simp only</code>, a few proofs were tricky to fix.</p>\n<p>There are 3 <code>sorry</code> left and any help is welcome.</p>",
        "id": 433967166,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1713424051
    },
    {
        "content": "<p>I'm looking at the <code>sorry</code>s.</p>",
        "id": 433996534,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1713429613
    },
    {
        "content": "<p>Sorrys fixed at <a href=\"https://github.com/RemyDegenne/pfr/pull/1\">https://github.com/RemyDegenne/pfr/pull/1</a> (I don't have writing rights either on PFR or your fork, so I have PRed to your fork and you will need to merge it before this shows up in the PR on the main repo, if I understand correctly).</p>",
        "id": 433999590,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1713430615
    },
    {
        "content": "<p>Thanks! I merged the changes and the bump PR is ready.</p>",
        "id": 434002853,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1713431767
    },
    {
        "content": "<p>Thanks! Merged</p>",
        "id": 434011454,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1713434581
    },
    {
        "content": "<p>You beat me to it by a few hours because, as you must have noticed, I just bumped LeanAPAP and was about to bump PFR as well</p>",
        "id": 434011559,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1713434618
    },
    {
        "content": "<p>I noticed nothing :)<br>\nWell I saw that LeanAPAP was updated at some point because a file did not exist anymore, but I had no idea of the date at which that happened.</p>",
        "id": 434018527,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1713437168
    },
    {
        "content": "<p>Ah the file disappearing was a few days ago</p>",
        "id": 434018625,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1713437213
    },
    {
        "content": "<p>Our recent Mathlib PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/12918\">#12918</a>, which adds the lemma <code>IdentDistrib.inv</code>, has been merged (thanks <span class=\"user-mention\" data-user-id=\"243312\">@Jason KY.</span> and <span class=\"user-mention\" data-user-id=\"350992\">@Rémy Degenne</span> ). </p>\n<p>Would it be advisable to bump Mathlib so that we can remove this lemma from the <code>PFR/MoreRuzsaDist.lean</code> file in our <a href=\"https://github.com/teorth/pfr/pull/192\">draft</a>?</p>",
        "id": 438811163,
        "sender_full_name": "Pietro Monticone",
        "timestamp": 1715782086
    },
    {
        "content": "<p>It's definitely possible, but note that we first need to bump APAP</p>",
        "id": 438813511,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715782642
    },
    {
        "content": "<p>Bumped, but note that there is no <code>IdentDistrib.inv</code> in PFR. Did you confuse with <code>iIndepFun.inv</code>?</p>",
        "id": 438832664,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715787489
    },
    {
        "content": "<p>Oh I see, it's in your draft PR</p>",
        "id": 438832750,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715787519
    },
    {
        "content": "<p>Also I will note that <code>./scripts/mk_all.sh</code> wasn't run since <code>PFR.MultiTauFunctional</code> was added, meaning that the build succeeded even though the file was completely broken.</p>",
        "id": 438833780,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715787811
    },
    {
        "content": "<p>I commented out chunks of it to get the build succeeded and since it seems to so far be mostly a copy-paste of the binary tau functional</p>",
        "id": 438833966,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715787859
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump/near/438833966\">said</a>:</p>\n<blockquote>\n<p>I commented out chunks of it to get the build succeeded and since it seems to so far be mostly a copy-paste of the binary tau functional</p>\n</blockquote>\n<p>Thanks.  I will try to fix up that file later - we're a long way from getting to that part of the formalization currently - but for now definitely just comment out anything problematic.  (I had wondered why there weren't any errors reported regarding that file, I had thought I had just been extremely lucky getting the syntax right the first time around.)</p>",
        "id": 438855493,
        "sender_full_name": "Terence Tao",
        "timestamp": 1715794892
    },
    {
        "content": "<p>There seems to be some minor <code>simp</code> issue in PFR.Mathlib.Probability.Independence.Basic that came up during the bump.  <a href=\"https://github.com/teorth/pfr/actions/runs/9105173824/job/25030314036\">https://github.com/teorth/pfr/actions/runs/9105173824/job/25030314036</a></p>",
        "id": 438916738,
        "sender_full_name": "Terence Tao",
        "timestamp": 1715826314
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"657719\">@Terence Tao</span> I think there is a <code>simp? [lem1, lem2] says ...</code> line which needs to be updated.<br>\nThis <code>says</code> tactic combinator is an attempt at caching a fast version of a slower tactic. Locally only the fast <code>simp only</code> runs, but in CI we check that the output of the slow tactic matches the fast version. We keep the slow <code>simp?</code> in the code to communicate intent and (hopefully) increase readability.</p>",
        "id": 438964539,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715847224
    },
    {
        "content": "<p>The drawback of <code>simp? says ...</code> is that it is very brittle: they frequently break after mathlib updates because simp uses a slightly different set of lemmas and the <code>...</code> part changes.</p>",
        "id": 438967481,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1715848329
    },
    {
        "content": "<p>Yes, I will remove all the <code>says</code> in PFR later today, unless Terry beats me to it</p>",
        "id": 438971141,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715849712
    },
    {
        "content": "<p>Yep, I think <code>says</code> is an interesting experiment, but not a resounding success.</p>",
        "id": 438984039,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715854163
    },
    {
        "content": "<p>It would be good if we could come up with a better version of the <code>says</code> idea.</p>",
        "id": 438984114,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715854189
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/teorth/pfr/pull/197\">PFR#197</a> to remove the single <code>says</code> we've found in the whole repo.</p>",
        "id": 439089003,
        "sender_full_name": "Pietro Monticone",
        "timestamp": 1715888361
    },
    {
        "content": "<p>I'm no longer able to rebuild Mathlib.  The build reports issues in some seemingly random files:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">1929</span><span class=\"bp\">/</span><span class=\"mi\">1929</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">PFR.ForMathlib.Entropy.RuzsaDist</span>\n<span class=\"n\">Some</span> <span class=\"n\">build</span> <span class=\"n\">steps</span> <span class=\"n\">logged</span> <span class=\"n\">failures</span><span class=\"o\">:</span>\n<span class=\"bp\">-</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Group.Opposite</span>\n<span class=\"bp\">-</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Order.BooleanAlgebra</span>\n<span class=\"bp\">-</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Order.Monoid.Canonical.Defs</span>\n<span class=\"bp\">-</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Ring.Commute</span>\n<span class=\"bp\">-</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Data.Int.Units</span>\n<span class=\"bp\">-</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Regular.Basic</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">build</span> <span class=\"n\">failed</span>\n</code></pre></div>\n<p>For instance,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"mi\">435</span><span class=\"bp\">/</span><span class=\"mi\">1929</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.Algebra.Group.Opposite</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span> <span class=\"bp\">.&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">batteries</span><span class=\"bp\">\\.</span><span class=\"n\">lake</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq</span><span class=\"bp\">\\.</span><span class=\"n\">lake</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop</span><span class=\"bp\">\\.</span><span class=\"n\">lake</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">proofwidgets</span><span class=\"bp\">\\.</span><span class=\"n\">lake</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Cli</span><span class=\"bp\">\\.</span><span class=\"n\">lake</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">importGraph</span><span class=\"bp\">\\.</span><span class=\"n\">lake</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\.</span><span class=\"n\">lake</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">LeanAPAP</span><span class=\"bp\">\\.</span><span class=\"n\">lake</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">;.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span> <span class=\"n\">PATH</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">teort</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.8.0-rc1\\bin\\lean.exe -Dpp.unicode.fun=true -DautoImplicit=false -DrelaxedAutoImplicit=false .\\.\\.lake/packages\\mathlib\\.\\.\\Mathlib\\Algebra\\Group\\Opposite.lean -R .\\.\\.lake/packages\\mathlib\\.\\. -o .\\.\\.lake/packages\\mathlib\\.lake\\build\\lib\\Mathlib\\Algebra\\Group\\Opposite.olean -i .\\.\\.lake/packages\\mathlib\\.lake\\build\\lib\\Mathlib\\Algebra\\Group\\Opposite.ilean -c .\\.\\.lake/packages\\mathlib\\.lake\\build\\ir\\Mathlib\\Algebra\\Group\\Opposite.c --json</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">write</span> <span class=\"bp\">'.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib</span><span class=\"bp\">\\.</span><span class=\"n\">lake</span><span class=\"bp\">\\</span><span class=\"n\">build</span><span class=\"bp\">\\</span><span class=\"n\">lib</span><span class=\"bp\">\\</span><span class=\"n\">Mathlib</span><span class=\"bp\">\\</span><span class=\"n\">Algebra</span><span class=\"bp\">\\</span><span class=\"n\">Group</span><span class=\"bp\">\\</span><span class=\"n\">Opposite.olean'</span><span class=\"o\">:</span> <span class=\"mi\">13</span> <span class=\"n\">Permission</span> <span class=\"n\">denied</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">Lean</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">code</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>Trying to fetch the Mathlib build cache creates similar errors, though now reported in different files:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Some</span> <span class=\"n\">build</span> <span class=\"n\">steps</span> <span class=\"n\">logged</span> <span class=\"n\">failures</span><span class=\"o\">:</span>\n<span class=\"bp\">-</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"bp\">-</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"bp\">-</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"bp\">-</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">build</span> <span class=\"n\">failed</span>\n<span class=\"bp\">=&gt;</span> <span class=\"n\">Operation</span> <span class=\"n\">failed.</span> <span class=\"n\">Exit</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"bp\">.</span>\n</code></pre></div>\n<p>I have no idea what is going on here...</p>",
        "id": 439142076,
        "sender_full_name": "Terence Tao",
        "timestamp": 1715917844
    },
    {
        "content": "<p>What if you nuke <code>.lake</code> and try <code>lake exe cache get</code> again?</p>",
        "id": 439151234,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715922722
    },
    {
        "content": "<p>Same error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">LeanAPAP</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">YaelDillies</span><span class=\"bp\">/</span><span class=\"n\">LeanAPAP.git</span> <span class=\"n\">to</span> <span class=\"bp\">'.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">LeanAPAP'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib4.git</span> <span class=\"n\">to</span> <span class=\"bp\">'.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">mathlib'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">batteries</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">batteries</span> <span class=\"n\">to</span> <span class=\"bp\">'.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">batteries'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Qq</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">quote4</span> <span class=\"n\">to</span> <span class=\"bp\">'.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Qq'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">aesop</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"bp\">'.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">aesop'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">proofwidgets</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets4</span> <span class=\"n\">to</span> <span class=\"bp\">'.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">proofwidgets'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Cli</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli</span> <span class=\"n\">to</span> <span class=\"bp\">'.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">Cli'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">importGraph</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"kn\">import</span><span class=\"bp\">-</span><span class=\"n\">graph.git</span> <span class=\"n\">to</span> <span class=\"bp\">'.\\.\\.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">\\</span><span class=\"n\">importGraph'</span>\n<span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">10</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span> <span class=\"bp\">.&gt;</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">teort</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.8.0-rc1\\bin\\leanc.exe -c -o .\\.\\.lake/packages\\mathlib\\.lake\\build\\ir\\Cache\\Main.c.o.noexport .\\.\\.lake/packages\\mathlib\\.lake\\build\\ir\\Cache\\Main.c -O3 -DNDEBUG</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">'</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">teort</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.8.0-rc1\\bin\\leanc.exe' exited with code 1</span>\n<span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"bp\">/</span><span class=\"mi\">10</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span> <span class=\"bp\">.&gt;</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">teort</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.8.0-rc1\\bin\\leanc.exe -c -o .\\.\\.lake/packages\\mathlib\\.lake\\build\\ir\\Cache\\IO.c.o.noexport .\\.\\.lake/packages\\mathlib\\.lake\\build\\ir\\Cache\\IO.c -O3 -DNDEBUG</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">'</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">teort</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.8.0-rc1\\bin\\leanc.exe' exited with code 1</span>\n<span class=\"o\">[</span><span class=\"mi\">8</span><span class=\"bp\">/</span><span class=\"mi\">10</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span> <span class=\"bp\">.&gt;</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">teort</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.8.0-rc1\\bin\\leanc.exe -c -o .\\.\\.lake/packages\\mathlib\\.lake\\build\\ir\\Cache\\Hashing.c.o.noexport .\\.\\.lake/packages\\mathlib\\.lake\\build\\ir\\Cache\\Hashing.c -O3 -DNDEBUG</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">'</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">teort</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.8.0-rc1\\bin\\leanc.exe' exited with code 1</span>\n<span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"bp\">/</span><span class=\"mi\">10</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">trace</span><span class=\"o\">:</span> <span class=\"bp\">.&gt;</span> <span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">teort</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.8.0-rc1\\bin\\leanc.exe -c -o .\\.\\.lake/packages\\mathlib\\.lake\\build\\ir\\Cache\\Requests.c.o.noexport .\\.\\.lake/packages\\mathlib\\.lake\\build\\ir\\Cache\\Requests.c -O3 -DNDEBUG</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span> <span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"n\">code</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">'</span><span class=\"n\">c</span><span class=\"o\">:</span><span class=\"bp\">\\</span><span class=\"n\">Users</span><span class=\"bp\">\\</span><span class=\"n\">teort</span><span class=\"bp\">\\.</span><span class=\"n\">elan</span><span class=\"bp\">\\</span><span class=\"n\">toolchains</span><span class=\"bp\">\\</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.8.0-rc1\\bin\\leanc.exe' exited with code 1</span>\n<span class=\"n\">Some</span> <span class=\"n\">build</span> <span class=\"n\">steps</span> <span class=\"n\">logged</span> <span class=\"n\">failures</span><span class=\"o\">:</span>\n<span class=\"bp\">-</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"bp\">-</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"bp\">-</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"bp\">-</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">build</span> <span class=\"n\">failed</span>\n</code></pre></div>",
        "id": 439265385,
        "sender_full_name": "Terence Tao",
        "timestamp": 1715967272
    },
    {
        "content": "<p>I can't reproduce. I suspect your local state is messed up. Can you do at least one of the following?</p>\n<ol>\n<li><code>elan toolchain uninstall leanprover/lean4:v4.8.0-rc1</code>, <code>elan toolchain install leanprover/lean4:v4.8.0-rc1</code>, <code>lake exe cache get!</code>. Keep on going even if the first command fails.</li>\n<li>Go to <a href=\"https://www.gitpod.io/#https://github.com/teorth/pfr\">https://www.gitpod.io/#https://github.com/teorth/pfr</a> and try again in the gitpod container.</li>\n</ol>",
        "id": 439271056,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715969541
    },
    {
        "content": "<p>We have just: </p>\n<ol>\n<li>deleted the local repository </li>\n<li>cloned the repo again</li>\n<li><code>lake exe cache get!</code></li>\n<li><code>lake build</code></li>\n</ol>\n<p>and we didn't encounter any error / build failure.</p>",
        "id": 439271849,
        "sender_full_name": "Pietro Monticone",
        "timestamp": 1715969900
    },
    {
        "content": "<p>That doesn't do anything about the toolchain, which I suspect is what's going wrong for Terry. <span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> accidentally misrolled <code>4.8.0-rc1</code>, so now everyone is having slight issues with that specific toolchain. Hopefully we'll all be on rc2 in a matter of days.</p>",
        "id": 439272101,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715970008
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/412902-Polynomial-Freiman-Ruzsa-conjecture/topic/Mathlib.20bump/near/439271056\">said</a>:</p>\n<blockquote>\n<ol>\n<li><code>elan toolchain uninstall leanprover/lean4:v4.8.0-rc1</code>, <code>elan toolchain install leanprover/lean4:v4.8.0-rc1</code>, <code>lake exe cache get!</code>. Keep on going even if the first command fails.</li>\n</ol>\n</blockquote>\n<p>This worked, thanks!</p>",
        "id": 439278439,
        "sender_full_name": "Terence Tao",
        "timestamp": 1715972963
    },
    {
        "content": "<p>Our recent Mathlib PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/13125\">#13125</a>, which adds the lemma <code>indepFun_of_identDistrib_pair</code> (solving <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/.60IndepFun.60.20of.20.60IdentDistrib.60.20pairs\">this topic</a>), has been merged.</p>\n<p>Once we bump Mathlib we will have to remove this lemma from the <code>PFR/MoreRuzsaDist.lean</code> file (see related <a href=\"https://github.com/teorth/pfr/blob/67b3beaa44bc3d8d60fb18c26059936366a3cefd/PFR/MoreRuzsaDist.lean#L90-L103\">code</a>).</p>",
        "id": 440906035,
        "sender_full_name": "Pietro Monticone",
        "timestamp": 1716836738
    },
    {
        "content": "<p>FYI I will do that bump (for both APAP and PFR) when Mathlib goes to 4.9.0-rc1... which should be in a week roughly?</p>",
        "id": 441017974,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1716895509
    },
    {
        "content": "<p>I bumped APAP early to get rid of dissociation (<a href=\"https://github.com/leanprover-community/mathlib4/pull/10555\">#10555</a>). However we can't bump PFR just yet because <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> generalised <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.ae#doc\">docs#MeasureTheory.ae</a> in a way that breaks its use with a <code>FiniteMeasure</code>.</p>",
        "id": 441657572,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717147010
    },
    {
        "content": "<p>Discussion about the <code>ae</code> issue: <a href=\"#narrow/stream/287929-mathlib4/topic/ae.20of.20a.20finite.20measure\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/ae.20of.20a.20finite.20measure</a></p>",
        "id": 441659899,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717147747
    },
    {
        "content": "<p>One cheap solution if we really want to get the bump through is to create a new notation <code>f =ᵐᶠ[μ] g</code> defined as <code>f =ᵐ[(μ : Measure Ω)] g</code>. But that's a hack and I would rather solve the root issue.</p>",
        "id": 441660265,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717147860
    }
]