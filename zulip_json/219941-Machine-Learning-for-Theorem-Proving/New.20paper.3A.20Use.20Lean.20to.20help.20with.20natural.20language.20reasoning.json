[
    {
        "content": "<p>This is not particularly related to mathematical theorem proving but still quite relevant to ML and Lean so I will just share it here (feel free to move it to other streams if needed). In our new <a href=\"https://arxiv.org/pdf/2403.13312.pdf!\">work</a>, we have shown that Lean can help with natural language reasoning!</p>\n<p>This works by formalizing natural language logical problems into Lean code (examples <a href=\"https://github.com/Some-random/theorem-proving-reasoning/tree/main/examples_with_detailed_annotation\">here</a>) and then proving/disproving the resulting theorm (with LeanDoJo) to get an answer. The help of Lean comes in two ways:<br>\n1  Within Lean's framework, there can be no invalid statement, so there can be no hallucination during the reasoning process<br>\n2  By fine-tuning on ReProver that is pre-trained with mathlib3, we're effectively leveraging the reasoning nuggets learned through training on theorem-proving data to help with natural language reasoning. This is another piece of evidence showing teaching LLMs to do math can help with logic and reasoning in general.</p>\n<p>Many thanks to people in this forum who graciously offered me help (through replies and emails), especially <span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span>, <span class=\"user-mention\" data-user-id=\"258175\">@Albert Jiang</span> and <span class=\"user-mention\" data-user-id=\"249373\">@Stanislas Polu</span> !</p>",
        "id": 431725185,
        "sender_full_name": "Dongwei Jiang",
        "timestamp": 1712458453
    }
]