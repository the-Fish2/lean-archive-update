[
    {
        "content": "<p>My main takeaway from the first talk (all errors in interpretation of course my fault :)</p>\n<p>Chlipala: metavariable creation and unification, as in Lean/Coq, is too expensive for verification across the full hardware/software stack.</p>",
        "id": 435034319,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1713893336
    },
    {
        "content": "<p>Hm, I'm disappointed that I missed this talk, are the slides or recording available anywhere?</p>",
        "id": 435034811,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713893488
    },
    {
        "content": "<p>I believe these will be made available publicly but <span class=\"user-mention\" data-user-id=\"635243\">@Talia Ringer</span> (who is moderating currently) will know better</p>",
        "id": 435035235,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1713893637
    },
    {
        "content": "<p>I assume the recording will also be made public.</p>",
        "id": 435038009,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1713894528
    },
    {
        "content": "<p>I believe <a href=\"https://www.nationalacademies.org/event/42507_04-2024_artificial-intelligence-to-assist-mathematical-reasoning-webinar-on-the-development-of-proof-assistants\">this</a> is the link to the event. Seems like you can rewind the webcast to see the talk?</p>",
        "id": 435039728,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1713895051
    },
    {
        "content": "<p>Oh great. </p>\n<p>Btw, below is a screen capture of the slide I was referring to <br>\n<a href=\"/user_uploads/3121/dlscztU1YXYWgr2ZcmrVNeTW/Screenshot-2024-04-23-at-11.09.01AM.png\">Bad asymptotics for metavariable creation</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/dlscztU1YXYWgr2ZcmrVNeTW/Screenshot-2024-04-23-at-11.09.01AM.png\" title=\"Bad asymptotics for metavariable creation\"><img src=\"/user_uploads/3121/dlscztU1YXYWgr2ZcmrVNeTW/Screenshot-2024-04-23-at-11.09.01AM.png\"></a></div><p>This is something I was totally unaware of. I am not sure where the figure is from.</p>",
        "id": 435042069,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1713895910
    },
    {
        "content": "<p>I don't understand how the claim could be true, adding a new metavariable in lean is effectively constant time (more precisely, it's the cost of inserting into a <code>PersistentHashMap</code>)</p>",
        "id": 435051686,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713899546
    },
    {
        "content": "<p>so surely there is some other aspect of this that is rolled into the cost</p>",
        "id": 435051732,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713899569
    },
    {
        "content": "<p>I could understand if it was talking about adding new things to the LocalContext, this is known to be asymptotically bad (see Jason Gross's thesis). But metavariables are quite cheap to create, and less cheap to assign (because of the occurs check)</p>",
        "id": 435051893,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713899643
    },
    {
        "content": "<p>I think the data is only from Coq. I interpreted it to include the assignment also but that may have been reading too much into it</p>",
        "id": 435052006,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1713899696
    },
    {
        "content": "<p>yes, Coq and Lean are significantly different under the hood so it's difficult to make blanket statements of this form</p>",
        "id": 435053022,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713900120
    },
    {
        "content": "<p>that's not to say that Lean is actually doing better on this point, only that the places that are unnecessarily slow are somewhat different between them</p>",
        "id": 435053127,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713900151
    },
    {
        "content": "<p>e.g. <code>Qed</code> is really slow in coq but this is basically never an issue in lean, because lean doesn't implement variables and sections in the same way</p>",
        "id": 435053169,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713900172
    },
    {
        "content": "<p>Hold music is fresh.</p>",
        "id": 435235801,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1713978028
    }
]