[
    {
        "content": "<p>Hey All, I created an OpenAI GPT Assistant for Lean, it's pre-prompted to work with you on an established task and to get to a proof in Lean 4. </p>\n<p><a href=\"http://url\">https://chat.openai.com/g/g-5XeM9SEZb-leangpt</a> <span aria-label=\"robot\" class=\"emoji emoji-1f916\" role=\"img\" title=\"robot\">:robot:</span></p>\n<p>Let's work on improving the the assistant together, by adding more files and adjusting the pre-prompt. Please share feedback and suggestions to improve it?</p>\n<p>Here is the pre-prompt here in full:</p>\n<blockquote>\n<p>You are a coding assistant that helps me create proofs in Lean 4 theorem prover. We establish a goal and then work towards constructing the relevant proof. Develop a strategy for approaching the proof. This might involve breaking down the problem, using existing theorems, or constructing new lemmas. Suggest different approaches or methodologies if the current path seems unfruitful. Provide guidance on constructing a proof in Lean. Offer step-by-step assistance and check each step for logical consistency and correctness. If a proof seems elusive, suggest potential counterexamples or reasons why the proof might not be possible. Encourage an iterative approach. Lean proofs often require adjustments and refinements. Be open to revisiting earlier steps, redefining conditions, or exploring alternative paths. Help in interpreting Lean error messages and resolving syntax or logical errors in the code. Offer debugging tips and strategies to overcome common hurdles in Lean. Clearly document each step of the process for future reference and understanding. Provide explanations or analogies to clarify complex concepts or steps in the proof. Keep the interactions focused on the goal of getting closer to completing the proof. Avoid going off on tangents that are not directly related to solving the problem at hand. Each time you provide the Lean 4 code I will run it and respond with the output. It is up to you to interpret the output I paste from my computer and suggest what to do. You are very intelligent and smart, please think step by step.</p>\n</blockquote>\n<p>Here are the reference files (PDF's of the relevant websites):</p>\n<ul>\n<li>Lean Manual</li>\n<li>Mathematics in Lean</li>\n<li>Theorem Proving in Lean 4</li>\n</ul>",
        "id": 409081070,
        "sender_full_name": "James Wiles",
        "timestamp": 1703044248
    },
    {
        "content": "<p>The idea is to establish the approach to solving the proof and then working with output messages to iteratively get to the solution step by step. I literally just copy-paste output to make progress, just remember reset the chat occasionally when the chat gets too long (to avoid early context compression).<br>\n<a href=\"/user_uploads/3121/DBaRYpDjcXGIAlN0IPaLsTJl/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/DBaRYpDjcXGIAlN0IPaLsTJl/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/DBaRYpDjcXGIAlN0IPaLsTJl/image.png\"></a></div>",
        "id": 409082777,
        "sender_full_name": "James Wiles",
        "timestamp": 1703044888
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"113486\" href=\"/#narrow/stream/113486-announce/topic/LeanGPT\">#announce &gt; LeanGPT</a> by <span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span>.</p>",
        "id": 409083539,
        "sender_full_name": "Notification Bot",
        "timestamp": 1703045153
    },
    {
        "content": "<p>There's nothing going on here except a custom prompt and telling it about some reference material, is that right?</p>",
        "id": 409083638,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703045191
    },
    {
        "content": "<p>I'm pretty skeptical of any approaches without Lean in the loop (i.e. the model can talk to Lean without the user's intermediation).</p>",
        "id": 409083800,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703045267
    },
    {
        "content": "<p>Also, if you're experimenting with prompting GPT for Lean, my experience was that you want to write quite detailed instructions about the difference between Lean 3 and Lean 4. Most of the current Lean 4 code didn't exist when data was collected for GPT4, so it really struggles with the syntactic differences.</p>",
        "id": 409084004,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703045354
    },
    {
        "content": "<p>You might like to try out / revive sagredo. :-)</p>",
        "id": 409084079,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1703045390
    },
    {
        "content": "<p>I bet Llemma has better Lean data from Proof-Pile-2, but it isn’t instruction/chat finetuned so it makes a bad chatbot.  Morph also has a Lean chatbot that has been announced here.</p>",
        "id": 409085626,
        "sender_full_name": "Jason Rute",
        "timestamp": 1703046118
    },
    {
        "content": "<p>Here is the motivation:<br>\nIf you are going to use ChatGPT to help you with writing proofs, then it might be good idea to share our knowledge, experience and reference material with a OpenAI's new Assistants features so that we can iteratively create the most helpful pre-prompt LLM possible. The idea is to use, improve, and share good prompt-engineering practice in an standard Assistant.</p>",
        "id": 409089523,
        "sender_full_name": "James Wiles",
        "timestamp": 1703048446
    },
    {
        "content": "<p>Also just learnt about what lean-dojo (<a href=\"https://github.com/lean-dojo/LeanCopilot\">https://github.com/lean-dojo/LeanCopilot</a>) are doing with LeanCopilot and LeanDojoChatGPT plugin (<a href=\"https://github.com/lean-dojo/LeanDojoChatGPT\">https://github.com/lean-dojo/LeanDojoChatGPT</a>) and Lean and this makes perfect sense to as a function plugin for this Assistant. Current challenge is only that the function needs to run on localhost. If someone wants to sponsor it, we can host the Lean LLM  in the cloud and use it as a ChatGPT plugin and VS Code extension without needing to run it locally.</p>",
        "id": 409089560,
        "sender_full_name": "James Wiles",
        "timestamp": 1703048455
    },
    {
        "content": "<p>Perhaps there is a business model to charge a couple dollars a month for the hosting fees, are get one of the hosting providers to sponsor Lean LLM??</p>",
        "id": 409089706,
        "sender_full_name": "James Wiles",
        "timestamp": 1703048516
    },
    {
        "content": "<p>Here is my updated pre-prompt attempting to solve version 3 syntax output:</p>\n<blockquote>\n<p>You are a coding assistant specialized in Lean 4 theorem prover. Everything provided must strictly adhere to Lean 4 syntax and conventions, and any reference or usage of Lean version 3 is to be strictly avoided. Our objective is to establish a goal and construct the necessary proof using Lean 4's capabilities. The strategy should involve problem decomposition, leveraging existing Lean 4 theorems, and formulating new lemmas appropriate for Lean 4. Offer various methodologies and adapt the approach when needed, ensuring all guidance and code is compliant with Lean 4. As we proceed step-by-step, continuously verify logical consistency and correctness in the context of Lean 4, and provide potential counterexamples or limitations within the Lean 4 framework. Encourage iteration and refinement acknowledging Lean 4's proof structure, and remain open to revisiting and revising based on Lean 4's features. Help interpret error messages from Lean 4, resolve syntax or logical errors, and offer debugging tips specific to Lean 4. Document each step clearly for future reference in Lean 4, and provide clarifications suited to the concepts in Lean 4. Maintain focus on the Lean 4 proof-construction goal, avoiding tangents unrelated to the Lean 4 environment. As I execute Lean 4 code, I will provide outputs for you to analyze and suggest subsequent actions in Lean 4. Your intelligence and systematic thinking should reflect excellence in Lean 4 proof development. Remember, the code must be exclusively for Lean version 4, with no elements from version 3.</p>\n</blockquote>",
        "id": 409308830,
        "sender_full_name": "James Wiles",
        "timestamp": 1703133651
    },
    {
        "content": "<p>Here is a trial run, where I asked for a proof and simply responded with infoview output. LeanGPT iteratively got to the result. <a href=\"https://chat.openai.com/share/432c5f7e-4fd2-4417-98cb-6c433328129c\">https://chat.openai.com/share/432c5f7e-4fd2-4417-98cb-6c433328129c</a></p>\n<p><a href=\"/user_uploads/3121/LU_SH4fCQYcdT7TnmByQ41t_/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/LU_SH4fCQYcdT7TnmByQ41t_/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/LU_SH4fCQYcdT7TnmByQ41t_/image.png\"></a></div>",
        "id": 409313043,
        "sender_full_name": "James Wiles",
        "timestamp": 1703136346
    },
    {
        "content": "<p>As an experiment I upload about 2 million tokens worth of Lean Corpus in this Assistant API and it got to the answer in one shot:<br>\n<a href=\"/user_uploads/3121/7BFqtGNuW8Gqspwp1kumIO8a/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/7BFqtGNuW8Gqspwp1kumIO8a/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/7BFqtGNuW8Gqspwp1kumIO8a/image.png\"></a></div>",
        "id": 409314439,
        "sender_full_name": "James Wiles",
        "timestamp": 1703137334
    },
    {
        "content": "<p>I am going upload the remaining corpus about 20 million tokens in total. Will be interesting to see if the improves ChatGPT output as dramatically.</p>",
        "id": 409314505,
        "sender_full_name": "James Wiles",
        "timestamp": 1703137396
    },
    {
        "content": "<p>Do you have a list of these corpus? Just curious to see what aspects of the Lean world is covered.</p>\n<p>P.S. What do you mean by renaming corpus? Is it like the <code>#align</code> line in Mathlib4?</p>",
        "id": 409386285,
        "sender_full_name": "Utensil Song",
        "timestamp": 1703164525
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296911\">Utensil Song</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/LeanGPT/near/409386285\">said</a>:</p>\n<blockquote>\n<p>Do you have a list of these corpus? Just curious to see what aspects of the Lean world is covered.</p>\n<p>P.S. What do you mean by renaming corpus? Is it like the <code>#align</code> line in Mathlib4?</p>\n</blockquote>\n<p>sorry, *remaining (not renaming). It's just the datasets from Lean-Dojo</p>",
        "id": 409411556,
        "sender_full_name": "James Wiles",
        "timestamp": 1703172442
    },
    {
        "content": "<p><a href=\"https://zenodo.org/records/10114185\">https://zenodo.org/records/10114185</a></p>",
        "id": 409412167,
        "sender_full_name": "James Wiles",
        "timestamp": 1703172643
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"675030\">@James Wiles</span> <br>\nI would like to share our work which uses GPT-4 as LLM agent for doing proofs in Lean and Coq. It provides interactions with the Lean ITP and a stateful search for completing the proof.<br>\nOur paper: <a href=\"https://arxiv.org/abs/2310.04353\">https://arxiv.org/abs/2310.04353</a><br>\nOur code: <a href=\"https://github.com/trishullab/copra\">https://github.com/trishullab/copra</a></p>",
        "id": 409841844,
        "sender_full_name": "Amitayush Thakur",
        "timestamp": 1703451606
    },
    {
        "content": "<p>Oh cool! Thanks for sharing.</p>",
        "id": 410192313,
        "sender_full_name": "James Wiles",
        "timestamp": 1703704627
    },
    {
        "content": "<p>Here is the opensource version of the ChatGPT prompt for AI Assistant and files: <a href=\"https://github.com/Zaffer/lean-gpt\">https://github.com/Zaffer/lean-gpt</a></p>",
        "id": 410192354,
        "sender_full_name": "James Wiles",
        "timestamp": 1703704667
    },
    {
        "content": "<p>Has anyone here seen this research by OpenAI about using Lean: <a href=\"https://openai.com/research/formal-math\">https://openai.com/research/formal-math</a></p>",
        "id": 410333519,
        "sender_full_name": "James Wiles",
        "timestamp": 1703791787
    },
    {
        "content": "<p>There is a lot written on here about that work and it’s extensions.  Many papers call the method in that paper “expert iteration”, and it is based on the PACT paper.  Also that is the first paper to use the miniF2F dataset (besides the original miniF2F paper).</p>",
        "id": 410333713,
        "sender_full_name": "Jason Rute",
        "timestamp": 1703791921
    },
    {
        "content": "<p>This looks like an old paper which was shared here about a year ago</p>",
        "id": 410333759,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703791930
    },
    {
        "content": "<p>oh lol it is from a year ago after all...</p>",
        "id": 410333823,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1703791973
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/LeanGPT/near/410333759\">said</a>:</p>\n<blockquote>\n<p>This looks like an old paper which was shared here about a year ago</p>\n</blockquote>\n<p>I tried searching for the link in Zulip search, and did not find it.</p>",
        "id": 410333829,
        "sender_full_name": "James Wiles",
        "timestamp": 1703791977
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"675030\">James Wiles</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/LeanGPT/near/410333829\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/LeanGPT/near/410333759\">said</a>:</p>\n<blockquote>\n<p>This looks like an old paper which was shared here about a year ago</p>\n</blockquote>\n<p>I tried searching for the link in Zulip search, and did not find it.</p>\n</blockquote>\n<p>Search for the title: <a class=\"stream-topic\" data-stream-id=\"219941\" href=\"/#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Solving.20.28Some.29.20Formal.20Olympiad.20Problems\">#Machine Learning for Theorem Proving &gt; Solving (Some) Formal Olympiad Problems</a></p>",
        "id": 410334038,
        "sender_full_name": "Jason Rute",
        "timestamp": 1703792121
    },
    {
        "content": "<p>Just updated LeanGPT with a v2 prompt. It is substantially more advanced now and implements some real prompt-engineering.</p>",
        "id": 422166321,
        "sender_full_name": "James Wiles",
        "timestamp": 1708322151
    },
    {
        "content": "<p>Does anyone know where I can download the documentation full source files for mathlib4? Or even just a PDF of the that whole documentation site? <a href=\"https://leanprover-community.github.io/mathlib-overview.html\">https://leanprover-community.github.io/mathlib-overview.html</a></p>",
        "id": 422166406,
        "sender_full_name": "James Wiles",
        "timestamp": 1708322189
    },
    {
        "content": "<p>There are artifact tarballs in the builds at <a href=\"https://github.com/leanprover-community/mathlib4_docs/actions\">https://github.com/leanprover-community/mathlib4_docs/actions</a></p>",
        "id": 422319095,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708384097
    }
]