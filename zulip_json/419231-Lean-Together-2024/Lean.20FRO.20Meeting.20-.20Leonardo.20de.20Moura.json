[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span> In the example which shows a matrix of decreasing / equal relations, there was an all-<code>=</code>example. In this specific case, it is impossible to prove decreasing, so it might make sense to skip the normal guessing process and just show a more targeted error directly on this call</p>",
        "id": 412565278,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705072994
    },
    {
        "content": "<p>Right, that was suggested before, and I agree that there are  plenty of special cases where the message could be made nicer. I guess someone just has to do it. I’ll open an issue and maybe I’ll do it when I have appetite for some low hanging fruit, or someone else wants to get to know the code.</p>\n<p><a href=\"https://github.com/leanprover/lean4/issues/3172\">https://github.com/leanprover/lean4/issues/3172</a></p>",
        "id": 412565918,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1705073191
    },
    {
        "content": "<p>Is there an issue for <code>rw [x]</code> and <code>simp [x]</code> where <code>x</code> is a let variable?</p>",
        "id": 412569863,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705074358
    },
    {
        "content": "<p>Here is the issue re:noncomputable section <a href=\"https://github.com/leanprover/lean4/pull/2619\">lean4#2619</a>. </p>\n<p>What I heard from the discussion was the proposal to change the semantics of <code>noncomputable section</code> to that of <code>suppress_compilation</code>.</p>",
        "id": 412574817,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1705075916
    }
]