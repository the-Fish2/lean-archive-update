[
    {
        "content": "<p><strong>EDIT</strong>: I now have this working; and the library is published to <a href=\"https://github.com/jeswr/RDF.lean\">https://github.com/jeswr/RDF.lean</a></p>\n<p>I'm trying to use the <a href=\"https://github.com/digama0/lean-sys\">lean-sys crate</a> for FFI but hitting some blockers in doing so. Advice on how to proceed would be greatly appreciated.</p>\n<ul>\n<li>Forking the RustFFI repository and trying to use the crate results in <a href=\"https://github.com/jeswr/lean_sys_test\">https://github.com/jeswr/lean_sys_test</a> (error is in readme)</li>\n<li>And doing so with dynamic linking results in <a href=\"https://github.com/jeswr/RustFFI.lean\">https://github.com/jeswr/RustFFI.lean</a> (error is in readme)</li>\n</ul>\n<p>Note that my use case requires dynamic linking (see <a href=\"#narrow/stream/270676-lean4/topic/FFI.20with.20rust.20package.20that.20uses.20pthreads/near/418837780\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/FFI.20with.20rust.20package.20that.20uses.20pthreads/near/418837780</a>) so I'm primarily interested in getting the second repo working - the first repo is my attempt at creating a smaller reproduction of the issue, but I'm not sure how useful that is in this case considering it is an entirely different error that is popping up.</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> (and thankyou for making the crate!)</p>",
        "id": 419258398,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1706797832
    },
    {
        "content": "<p>As an update - I wanted to see how <code>lean-sys</code> behaved without the rest of the lean configuration noise, so tried to use it in a test in a fresh cargo package and ran into the error seen in <a href=\"https://github.com/jeswr/lean-sys-rust-test\">https://github.com/jeswr/lean-sys-rust-test</a></p>",
        "id": 419496124,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1706892671
    },
    {
        "content": "<p>ah, you haven't initialized the lean runtime there</p>",
        "id": 419496337,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706892735
    },
    {
        "content": "<p>Ahh ty - will add that</p>",
        "id": 419496762,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1706892887
    },
    {
        "content": "<p><a href=\"https://github.com/jeswr/lean-sys-rust-test\">https://github.com/jeswr/lean-sys-rust-test</a> is now working - thankyou!</p>\n<p>For the life of me I can't get this working in any setup with lean though. I am trying to get a static setup working simply adding <a href=\"https://github.com/lurk-lab/RustFFI.lean/commit/a0f4ec597492aeb013c120839763a240003dfa1f\">this commit</a> on top of <a href=\"https://github.com/lurk-lab/RustFFI.lean/pull/4\">this</a> working FFI with rust. Doing so still results in the error shown <a href=\"https://github.com/jeswr/RustFFI.lean/tree/lean-sys-failure?tab=readme-ov-file#rustffilean\">here</a>. I am stuck trying to resolve this because I don't know how to modify the flags in the <code>leanc</code> build step from the <code>lakefile.lean</code>. Any pointers to documentation describing how to do this would be greatly appreciated!</p>",
        "id": 420905950,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1707671257
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I've managed to narrow down the issue in the dynamic linking case <a href=\"https://github.com/jeswr/lean-sys-rust-test/tree/chore/cdylib-test\">here</a>.</p>\n<p><strong>EDIT</strong> It appears that one needs to disable the <code>static</code> feature of <code>lean-sys</code>; this can be done by disabling default features as follows</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[dependencies]</span>\n<span class=\"n\">lean-sys</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s2\">\"0.0.5\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">default-features</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p><del>In this case the problem is that one cannot set <a href=\"https://github.com/jeswr/lean-sys-rust-test/blob/e32c99c9969690552d384bc87a4501022eda8419/Cargo.toml#L7\">crate-type = [\"cdylib\"]</a> in a Cargo.toml where <code>lean-sys</code> is a dependency because <code>lean-sys</code> is not compiled with the <code>-fPIC</code> flag and thus doesn't appear to support dynamic linking use-cases. I'm not sure if there is a way of having the <code>lean-sys</code> package support both static and dynamic linking (I'm taking a look to see if I can figure out how to fix this now - but not particularly confident in my abilities given I'm learning rust and hence it's build system on the fly).</del></p>",
        "id": 420917418,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1707681417
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"680656\">@Jesse Wright</span> Wait so what's the status here? Is lean-sys working both statically and dynamically now?</p>",
        "id": 420936589,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707698777
    },
    {
        "content": "<p>Working dynamically - and I've created a PR adding some docs to explain what confused me (<a href=\"https://github.com/digama0/lean-sys/pull/11\">https://github.com/digama0/lean-sys/pull/11</a>). This is all I need for my use case (I am now successfully using a rust parser from Lean in <a href=\"https://github.com/jeswr/RustFFI.lean/pull/1\">https://github.com/jeswr/RustFFI.lean/pull/1</a>  <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>)</p>\n<p>I haven't been able to resolve the static error case given by <a href=\"https://github.com/lurk-lab/RustFFI.lean/commit/a0f4ec597492aeb013c120839763a240003dfa1f\">https://github.com/lurk-lab/RustFFI.lean/commit/a0f4ec597492aeb013c120839763a240003dfa1f</a></p>",
        "id": 420937472,
        "sender_full_name": "Jesse Wright",
        "timestamp": 1707699617
    },
    {
        "content": "<p>As far as I can tell, using <code>lean-sys</code> to dynamically link in <code>libleanshared</code> in a binary crate does not work because the binary build will not inherit the <a href=\"https://github.com/digama0/lean-sys/blob/b09c21af1990c0042c41f30f8feedb669efa2cf9/build.rs#L59\"><code>-Wl,-rpath</code> flag</a> (see <a href=\"https://github.com/rust-lang/cargo/issues/9554\">here</a>). (Or, rather, it does work but the RPATH is never set and you have to use <code>LD_LIBRARY_PATH</code>.)</p>",
        "id": 442395292,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1717456480
    }
]