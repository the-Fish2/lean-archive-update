[
    {
        "content": "<p>I’m curious: What does <a href=\"https://github.com/digama0/leangz\">https://github.com/digama0/leangz</a> do (over just gz)?</p>",
        "id": 411946396,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1704810849
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 411946883,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1704811011
    },
    {
        "content": "<p>Sebastian's \"one more thing\" moment at the end of the talk... :-)</p>",
        "id": 411947231,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1704811114
    },
    {
        "content": "<p>If going from lean3 to lean4 was a 50% performance improvement, and a full build now takes ~100mins, does it mean that with lean14, we will be down to 6s for the build?</p>",
        "id": 411947739,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1704811271
    },
    {
        "content": "<p>When I first raised the question of Lean 5, the look I got from the devs made me realise that we shouldn't be holding our breath :-)</p>",
        "id": 411948224,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1704811406
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"470149\">Joachim Breitner</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Sebastian's.20talk/near/411946396\">said</a>:</p>\n<blockquote>\n<p>I’m curious: What does <a href=\"https://github.com/digama0/leangz\">https://github.com/digama0/leangz</a> do (over just gz)?</p>\n</blockquote>\n<p><a href=\"#narrow/stream/270676-lean4/topic/leangz.3A.20olean.20file.20compressor/near/368896955\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/leangz.3A.20olean.20file.20compressor/near/368896955</a> is the original thread, not sure if the state of the art has improved since that</p>",
        "id": 411948294,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1704811433
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span> We can achieve about a 6x reduction in size using a lossless re-encoding of the file to remove all the lean_object overhead (e.g. every lean object starts with a 4 byte RC which is always 0 in olean files), as well as removing the hashes for <code>Expr</code> and <code>Name</code>, which make it much more compression-friendly. Then we layer zstd compression on top (the same compression used for compressing lean 3 files), with a custom dictionary optimized for the kind of text that shows up in oleans, which raises the compression factor to about 20x</p>",
        "id": 411948310,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704811437
    },
    {
        "content": "<p>It has not significantly changed since the original thread, although it has had to evolve with changes to the olean format (it supports all olean format variations since it was released)</p>",
        "id": 411948713,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704811542
    },
    {
        "content": "<p>Off-topic: When AWFY started, it contained a big \"NO\" on the front page because SpiderMonkey wasn't as fast as V8. The Internet Archive saved it, but their version looks really funny because they didn't save the actual performance graphs: <a href=\"https://web.archive.org/web/20100413010632/http://arewefastyet.com/\">https://web.archive.org/web/20100413010632/http://arewefastyet.com/</a></p>",
        "id": 411949353,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704811725
    },
    {
        "content": "<p>Hah, thanks for that interesting historical note!</p>",
        "id": 411949471,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1704811755
    },
    {
        "content": "<p>Question, in the Lean 4.3.0-rc2 (I think?) there was an 8% timing enhancement, but I seemed to see one of the curves notably increasing. Which one was it?</p>",
        "id": 411949919,
        "sender_full_name": "Pedro Sánchez Terraf",
        "timestamp": 1704811896
    },
    {
        "content": "<p>Great observation. I'd have to check again but I believe there was some time moved from interpretation to another metric, which is expected to some degree</p>",
        "id": 411950287,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1704811993
    },
    {
        "content": "<p>I apologize in advance if this is a stupid question but could someone please tell me how to download the files for the LeanFlame tool? I got the error message </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">bash</span><span class=\"o\">:</span> <span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">flame</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n</code></pre></div>",
        "id": 411961517,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704815151
    },
    {
        "content": "<p>./build/bin/flame is now .lake/build/bin/flame</p>",
        "id": 411966472,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704816708
    },
    {
        "content": "<p>If the toolchain for flame was recently updated, that is</p>",
        "id": 411966592,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704816741
    },
    {
        "content": "<p>It wasn't, though, sorry for the noise. Did you get an error running <code>lake build</code> inside the Flame repo checkout?</p>",
        "id": 411966837,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704816827
    },
    {
        "content": "<p>So, I first need to checkout using the command</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">hargoniX</span><span class=\"bp\">/</span><span class=\"n\">Flame.git</span>\n</code></pre></div>\n<p>Is this correct?</p>",
        "id": 412012068,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704834345
    },
    {
        "content": "<p>I didn't get any error after running </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">build</span>\n</code></pre></div>\n<p>inside the Flame repository. Then, I typed the command</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">cat</span> <span class=\"n\">trace.txt</span> <span class=\"bp\">|</span> <span class=\"bp\">./</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">flame</span> <span class=\"bp\">&gt;</span> <span class=\"n\">out.txt</span>\n</code></pre></div>\n<p>and got this message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">cat</span><span class=\"o\">:</span> <span class=\"n\">trace.txt</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span>\n</code></pre></div>",
        "id": 412013635,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704835059
    },
    {
        "content": "<p>I guess you're supposed to be supplying that file as the user?</p>",
        "id": 412014028,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1704835229
    },
    {
        "content": "<p>As the README of the repository says, you need to record some output of your infoview with the proper lean options set and put it in that file.</p>",
        "id": 412014061,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704835254
    },
    {
        "content": "<p>The terminal is panicking:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">PANIC</span> <span class=\"n\">at</span> <span class=\"n\">Flame.Position.down</span><span class=\"bp\">!</span> <span class=\"n\">Flame.Analyze</span><span class=\"o\">:</span><span class=\"mi\">37</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"n\">go</span> <span class=\"n\">further</span> <span class=\"n\">downn</span>\n</code></pre></div>",
        "id": 412016110,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704836180
    },
    {
        "content": "<p>I just copied and pasted from the Lean infoview but there was perhaps a proper way to format the .txt file.</p>",
        "id": 412016195,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704836250
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"556717\">Emilie Uthaiwat</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Are.20We.20Fast.20Yet.20-.20Sebastian.20Ullrich/near/412016195\">said</a>:</p>\n<blockquote>\n<p>I just copied and pasted from the Lean infoview but there was perhaps a proper way to format the .txt file.</p>\n</blockquote>\n<p>whats in your file?</p>",
        "id": 412016419,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704836350
    },
    {
        "content": "<p>The file is a bit long so I'm just copying and pasting a part of it. It looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">Elab.command</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">560049</span><span class=\"n\">s</span><span class=\"o\">]</span> <span class=\"kd\">theorem</span> <span class=\"n\">Prod.associated_iff</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Monoid</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">×</span> <span class=\"n\">N</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span> <span class=\"bp\">▼</span>\n  <span class=\"o\">[]</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">559672</span><span class=\"n\">s</span><span class=\"o\">]</span> <span class=\"kd\">theorem</span> <span class=\"n\">associated_iff</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Monoid</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">×</span> <span class=\"n\">N</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span> <span class=\"bp\">▼</span>\n    <span class=\"o\">[</span><span class=\"n\">step</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">029766</span><span class=\"n\">s</span><span class=\"o\">]</span> <span class=\"n\">expected</span> <span class=\"n\">type</span><span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"bp\">?</span><span class=\"n\">u.2842</span><span class=\"o\">,</span> <span class=\"n\">term</span>\n        <span class=\"kt\">Type</span><span class=\"bp\">*</span>\n    <span class=\"o\">[</span><span class=\"n\">step</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">026438</span><span class=\"n\">s</span><span class=\"o\">]</span> <span class=\"n\">expected</span> <span class=\"n\">type</span><span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">,</span> <span class=\"n\">term</span>\n        <span class=\"n\">Associated</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">↔</span> <span class=\"n\">Associated</span> <span class=\"n\">x.1</span> <span class=\"n\">z.1</span> <span class=\"bp\">∧</span> <span class=\"n\">Associated</span> <span class=\"n\">x.2</span> <span class=\"n\">z.2</span> <span class=\"bp\">▼</span>\n      <span class=\"o\">[]</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">026402</span><span class=\"n\">s</span><span class=\"o\">]</span> <span class=\"n\">expected</span> <span class=\"n\">type</span><span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">,</span> <span class=\"n\">term</span>\n</code></pre></div>",
        "id": 412016616,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704836438
    },
    {
        "content": "<p>Is this with the <code>set_option pp.oneline true</code> option set?</p>",
        "id": 412016867,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704836553
    },
    {
        "content": "<p>Yes, I enabled it in my code.</p>",
        "id": 412017235,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704836680
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"556717\">Emilie Uthaiwat</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Are.20We.20Fast.20Yet.20-.20Sebastian.20Ullrich/near/412016195\">said</a>:</p>\n<blockquote>\n<p>I just copied and pasted from the Lean infoview but there was perhaps a proper way to format the .txt file.</p>\n</blockquote>\n<p>Can you try capturing the output from the command line? Using a command like <code>lake env lean -D trace.profiler=true -D pp.oneline=true yourfile.lean  &gt; trace.txt</code></p>",
        "id": 412017527,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704836809
    },
    {
        "content": "<p>This ensures the output does not get truncated, which could lead to errors like the panic you mentioned</p>",
        "id": 412017588,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704836845
    },
    {
        "content": "<p>You can run it from VS Code's terminal if you prefer</p>",
        "id": 412017652,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704836872
    },
    {
        "content": "<p>I get: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"bp\">-</span><span class=\"n\">D</span> <span class=\"kd\">parameter</span><span class=\"o\">,</span> <span class=\"n\">unknown</span> <span class=\"n\">configuration</span> <span class=\"n\">option</span> <span class=\"bp\">'</span><span class=\"n\">trace.profiler'</span>\n</code></pre></div>",
        "id": 412017840,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704836947
    },
    {
        "content": "<p>What's the version that's in your lean-toolchain file in the root of your repository?</p>",
        "id": 412017902,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704836975
    },
    {
        "content": "<p>If you do have the two <code>set_option</code> commands in your file, you can omit the <code>-D</code> parameters (that is, <code>lake env lean yourfile.lean &gt; trace.txt</code> is enough)</p>",
        "id": 412017922,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704836986
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Are.20We.20Fast.20Yet.20-.20Sebastian.20Ullrich/near/412017902\">said</a>:</p>\n<blockquote>\n<p>What's the version that's in your lean-toolchain file in the root of your repository?</p>\n</blockquote>\n<p>It's </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">02</span><span class=\"bp\">-</span><span class=\"mi\">12</span>\n</code></pre></div>",
        "id": 412018514,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704837248
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Are.20We.20Fast.20Yet.20-.20Sebastian.20Ullrich/near/412017922\">said</a>:</p>\n<blockquote>\n<p>If you do have the two <code>set_option</code> commands in your file, you can omit the <code>-D</code> parameters (that is, <code>lake env lean yourfile.lean &gt; trace.txt</code> is enough)</p>\n</blockquote>\n<p>This didn't give me any error message!</p>",
        "id": 412018557,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704837274
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"556717\">Emilie Uthaiwat</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Are.20We.20Fast.20Yet.20-.20Sebastian.20Ullrich/near/412018514\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Are.20We.20Fast.20Yet.20-.20Sebastian.20Ullrich/near/412017902\">said</a>:</p>\n<blockquote>\n<p>What's the version that's in your lean-toolchain file in the root of your repository?</p>\n</blockquote>\n<p>It's </p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">02</span><span class=\"bp\">-</span><span class=\"mi\">12</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>are you sure that is <em>your</em> repository and not mine.</p>",
        "id": 412019010,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704837482
    },
    {
        "content": "<p>If you didn't get an error message, you should have a <code>trace.txt</code> file in your project folder. You can then run <code>cat trace.txt | ../relative/path/here/build/bin/flame &gt; out.txt</code> to have flame process the trace</p>",
        "id": 412019624,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704837749
    },
    {
        "content": "<p>For example, if your project folder and the flame checkout have the same parent folder, that means <code>cat trace.txt | ../Flame/build/bin/flame &gt; out.txt</code> from your project folder</p>",
        "id": 412019759,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704837835
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Are.20We.20Fast.20Yet.20-.20Sebastian.20Ullrich/near/412019010\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"556717\">Emilie Uthaiwat</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Are.20We.20Fast.20Yet.20-.20Sebastian.20Ullrich/near/412018514\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"395550\">Henrik Böving</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Are.20We.20Fast.20Yet.20-.20Sebastian.20Ullrich/near/412017902\">said</a>:</p>\n<blockquote>\n<p>What's the version that's in your lean-toolchain file in the root of your repository?</p>\n</blockquote>\n<p>It's </p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">nightly</span><span class=\"bp\">-</span><span class=\"mi\">2023</span><span class=\"bp\">-</span><span class=\"mi\">02</span><span class=\"bp\">-</span><span class=\"mi\">12</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>are you sure that is <em>your</em> repository and not mine.</p>\n</blockquote>\n<p>Indeed... In my repository, it's </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">v4.0.0</span>\n</code></pre></div>\n<p>I'm sorry.</p>",
        "id": 412019922,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704837907
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/419231-Lean-Together-2024/topic/Are.20We.20Fast.20Yet.20-.20Sebastian.20Ullrich/near/412019624\">said</a>:</p>\n<blockquote>\n<p>If you didn't get an error message, you should have a <code>trace.txt</code> file in your project folder. You can then run <code>cat trace.txt | ../relative/path/here/build/bin/flame &gt; out.txt</code> to have flame process the trace</p>\n</blockquote>\n<p>The .txt file looks odd. It starts with </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Absorbing.lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">package</span> <span class=\"bp\">'</span><span class=\"n\">Mathlib'</span>\n<span class=\"n\">Absorbing.lean</span><span class=\"o\">:</span><span class=\"mi\">12</span><span class=\"o\">:</span><span class=\"mi\">18</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">invalid</span> <span class=\"n\">binder</span> <span class=\"n\">annotation</span><span class=\"o\">,</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"kd\">class</span> <span class=\"kd\">instance</span>\n  <span class=\"bp\">?</span><span class=\"n\">m.18</span>\n</code></pre></div>",
        "id": 412020046,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704837966
    },
    {
        "content": "<p>The original command (the one starting with <code>lake env</code>), has to be run inside the project folder (i.e. you might have to use <code>cd</code> to change the current folder), because otherwise your project configuration (Lakefile, etc) will not be picked up.</p>",
        "id": 412021120,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704838520
    },
    {
        "content": "<p>It worked and looks great on speedscope! <br>\n<a href=\"/user_uploads/3121/TN68vYhhzMMAdtiJoWHe_7kF/Capture.PNG\">Capture.PNG</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/TN68vYhhzMMAdtiJoWHe_7kF/Capture.PNG\" title=\"Capture.PNG\"><img src=\"/user_uploads/3121/TN68vYhhzMMAdtiJoWHe_7kF/Capture.PNG\"></a></div>",
        "id": 412023542,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704839731
    },
    {
        "content": "<p>Thank you for your help and patience!</p>",
        "id": 412023657,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1704839776
    },
    {
        "content": "<p>It would be really cool if someone could write a blogpost/documentation on how to produce such pictures!</p>",
        "id": 412078702,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1704870291
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> should I write about that on my own blog or do we have some spot in our docs where this would fit already?</p>",
        "id": 412086350,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704874156
    },
    {
        "content": "<p>We may have some spot for that soon but let's first talk through the improvements I have in mind</p>",
        "id": 412094222,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1704877440
    },
    {
        "content": "<p>There's always the community blog. I for one would love to hear about what if anything is represented by the (a) length (b) depth and (c) colour of the rectangles -- I made one of these flame graphs once and it was only after making it that I realised I had absolutely no idea what I was looking at.</p>",
        "id": 412097699,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1704878707
    },
    {
        "content": "<p>Just for quick reference:<br>\na) How much time was spend in the thing that the block represents (this includes the time of all the stuff above the line so time that is \"actually spent by this specific thing\" is the free space above lines.<br>\nb) That's just the hierarchy of function calls or subprocesses.<br>\nc) the colour is in fact random to make distinguishing things easier</p>",
        "id": 412099174,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704879180
    },
    {
        "content": "<p>This flame graph stuff is by no means original work btw, it's by Brendan Gregg: <a href=\"https://brendangregg.com/flamegraphs.html\">https://brendangregg.com/flamegraphs.html</a> who is one of <em>the</em> guys when it comes to performance engineering.</p>",
        "id": 412099545,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1704879281
    },
    {
        "content": "<p>Said it another way, if you \"project the flame graph down\" on the real line, you get, for each function call/tactic execution, a time interval corresponding to the time between when it started executing and when it finished. If a function <code>f </code>calls a function <code>g</code>, the interval for <code>g</code> is nested inside the interval for <code>f</code> in this projection, because <code>f</code> is certainly not done executing if <code>g</code> hasn't finished. That's what the second dimension is for: In this case, <code>g</code> will appear one line below <code>f</code>. So if you pick a particular vertical line <code>x = t</code>, the bottommost intersection with this line is the function/tactic <code>g</code> that's actually running at time <code>t</code>, the thing immediately above it is waiting for <code>g</code> to finish executing, and so on.</p>\n<p>(Nitpick: Technically I am describing flame charts, but they're the same as flame graphs for our purposes)</p>",
        "id": 412105876,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1704881328
    },
    {
        "content": "<p>I just want to comment that I am a big fan of the concept of a tactic proof not restarting from the beginning when I change something. I have been working on sone rather long (~200 second) proofs where having this functionality would be very convenient.</p>",
        "id": 412484017,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1705040472
    },
    {
        "content": "<p>I have a hacky implementation of a one-tactic-at-a-time syntax here: <a href=\"#narrow/stream/113488-general/topic/proof.20mode.3A.20split.20out.20tactics.20into.20separate.20commands/near/384324747\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/proof.20mode.3A.20split.20out.20tactics.20into.20separate.20commands/near/384324747</a></p>",
        "id": 412484806,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705040955
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/enMr6z4lZycYYzGP6YgsUWkR/Capture.PNG\">Capture.PNG</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/enMr6z4lZycYYzGP6YgsUWkR/Capture.PNG\" title=\"Capture.PNG\"><img src=\"/user_uploads/3121/enMr6z4lZycYYzGP6YgsUWkR/Capture.PNG\"></a></div><p>It seems to me that there are missing calls in my flame graph. For example, around 30,000, there are 3 stacks but the infoview indicates at least 3 calls starting with </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">expected</span> <span class=\"n\">type</span><span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">,</span> <span class=\"n\">term</span>\n</code></pre></div>\n<p>Are the calls \"filtered\" in some way?</p>",
        "id": 412529724,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1705060313
    },
    {
        "content": "<p>Could you post that part of the infoview?</p>",
        "id": 412533902,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1705061973
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/o7Gy3ulWLr-n56YOEGvUqp3k/Capture.PNG\">Capture.PNG</a><br>\nThe calls of the form \"expected type\" start on the 5th line.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/o7Gy3ulWLr-n56YOEGvUqp3k/Capture.PNG\" title=\"Capture.PNG\"><img src=\"/user_uploads/3121/o7Gy3ulWLr-n56YOEGvUqp3k/Capture.PNG\"></a></div>",
        "id": 412546005,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1705066613
    },
    {
        "content": "<p>That's very close to <code>trace.profiler.threshold</code> so it's likely that running your file on the cmdline simply produced different output</p>",
        "id": 412546384,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1705066791
    },
    {
        "content": "<p>Alright, thank you!</p>",
        "id": 412583744,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1705078604
    },
    {
        "content": "<p>You can do <code>set_option trace.profiler.threshold 5</code> and regenerate the trace, though (I think the default is <code>10</code>?)</p>",
        "id": 412585296,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1705079090
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/1lxsqFDB0js8Hgx5Hj5JH5s9/Capture.PNG\">Capture.PNG</a><br>\nIt gives me this flame graph.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/1lxsqFDB0js8Hgx5Hj5JH5s9/Capture.PNG\" title=\"Capture.PNG\"><img src=\"/user_uploads/3121/1lxsqFDB0js8Hgx5Hj5JH5s9/Capture.PNG\"></a></div>",
        "id": 412592841,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1705081959
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/7H8Em0UH0iIaWHcZbva3GGGh/Capture_infoview.PNG\">Capture_infoview.PNG</a><br>\nIt depicts more information, even though it doesn't exactly match the infoview (as can be seen from the 6th line).</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/7H8Em0UH0iIaWHcZbva3GGGh/Capture_infoview.PNG\" title=\"Capture_infoview.PNG\"><img src=\"/user_uploads/3121/7H8Em0UH0iIaWHcZbva3GGGh/Capture_infoview.PNG\"></a></div>",
        "id": 412593897,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1705082304
    },
    {
        "content": "<p>There's no stack corresponding to </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">apply</span> <span class=\"bp\">@</span><span class=\"n\">NonAssocRing.toNonUnitalNonAssocRing</span> <span class=\"n\">to</span> <span class=\"n\">NonUnitalNonAssocRing</span> <span class=\"n\">M</span>\n</code></pre></div>\n<p>between 80,000 and 100,000.</p>",
        "id": 412594200,
        "sender_full_name": "Emilie Uthaiwat",
        "timestamp": 1705082414
    }
]