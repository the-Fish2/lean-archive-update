[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/8464\">#8464</a> moves multiset-relating lemmas by Ruben</p>",
        "id": 402748708,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1700243904
    },
    {
        "content": "<p>And <a href=\"https://github.com/leanprover-community/mathlib4/pull/8486\">#8486</a> for UFDs</p>",
        "id": 402790115,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1700260335
    },
    {
        "content": "<p>I will have a look at this tomorrow if it still open.</p>",
        "id": 402805222,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1700268044
    },
    {
        "content": "<p>BTW <span class=\"user-mention\" data-user-id=\"389019\">@Chris Birkbeck</span> we have a red X on github about \"build documentation\". Is this the blueprint?</p>",
        "id": 402805336,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1700268096
    },
    {
        "content": "<p>Hmm yeah it is. The blueprint still seems to be working, but I will have a look and see if I can figure out what the problem is.</p>",
        "id": 402851552,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1700297267
    },
    {
        "content": "<p>I might have removed the proof of 5.1 in that PR. This might be the problem?</p>",
        "id": 402851669,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1700297360
    },
    {
        "content": "<p>I don't see why that would be a problem, but who knows.</p>",
        "id": 402851769,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1700297413
    },
    {
        "content": "<p>Does the blueprint verify that the lean statements you link to actually exist?</p>",
        "id": 402859206,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1700302472
    },
    {
        "content": "<p>Good question. I used to not do that, but maybe now with the doc-gen thing it does.</p>",
        "id": 402859368,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1700302577
    },
    {
        "content": "<p>I can't quite figure out what the problem is. I tried undoing the change to the blueprint, but it didn't work. Maybe <span class=\"user-mention\" data-user-id=\"296911\">@Utensil Song</span> can spot what the problem is? It seems to be breaking while building the documentation see <a href=\"https://github.com/leanprover-community/flt-regular/actions/runs/6906604501/job/18792007763\">here</a></p>",
        "id": 403139804,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1700476287
    },
    {
        "content": "<p>You need to bump the doc-gen4 dependency (just running <code>lake update</code> and committing the manifest changes should be enough)</p>",
        "id": 403140796,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700476594
    },
    {
        "content": "<p>This was fixed in <a href=\"https://github.com/leanprover/doc-gen4/pull/164\">leanprover/doc-gen4#164</a> (yes, there are \"fix: \" commits there too)</p>",
        "id": 403140837,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700476611
    },
    {
        "content": "<p>Ok great, I'll try that, thank you!</p>",
        "id": 403141527,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1700476833
    },
    {
        "content": "<p>hmm ok now it failed further along. During the copy documentation step, saying <code>mv: cannot stat 'build/doc': No such file or directory</code>.</p>",
        "id": 403148195,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1700479112
    },
    {
        "content": "<p>I guess <code>build/doc</code> is now <code>.lake/build/doc</code></p>",
        "id": 403148567,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700479246
    },
    {
        "content": "<p>(in <code>push.yml</code>)</p>",
        "id": 403148639,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1700479275
    },
    {
        "content": "<p>oh ok, let me try that now :)</p>",
        "id": 403148865,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1700479352
    },
    {
        "content": "<p>It worked, thanks!</p>",
        "id": 403156317,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1700482126
    },
    {
        "content": "<p>oh great! thank you!</p>",
        "id": 403156399,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1700482154
    },
    {
        "content": "<p>If you need any help with your blueprint, I'm here as well.</p>",
        "id": 403157263,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1700482502
    },
    {
        "content": "<p>List of currently open Mathlib PRs:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8625\">#8625</a> (delegated)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8639\">#8639</a> (needs fix)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8641\">#8641</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8645\">#8645</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8651\">#8651</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8653\">#8653</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8654\">#8654</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/8657\">#8657</a></p>",
        "id": 404479507,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1701114658
    },
    {
        "content": "<p>I've left a couple of comments.</p>",
        "id": 404485629,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1701117366
    },
    {
        "content": "<p>I'll push a bump in a few minutes</p>",
        "id": 404592369,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1701166606
    },
    {
        "content": "<p>There are several PRs moving results into mathlib. It would be great if someone could review them so that we may bump the mathlib version and do some clean up before lean together.<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/9412\">#9412</a>: Rank-nullity for commutative integral domains (does not contain the potentially controversial bits)<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/9397\">#9397</a>: Criterion for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mi>n</mi></msup><mo>−</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">X^n - a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> to be irreducible for odd <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>.<br>\n<del>#9368: Cyclic extensions are of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo stretchy=\"false\">[</mo><mroot><mi>a</mi><mi>n</mi></mroot><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">K[\\sqrt[n]{a}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0503em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mopen\">[</span><span class=\"mord sqrt\"><span class=\"root\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5516em;\"><span style=\"top:-2.8363em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size6 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8003em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-2.7603em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2397em;\"><span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>.</del><br>\n<del>#9293: Defines the class <code>IsUnramifiedAtInfinitePlaces</code>.</del><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/9265\">#9265</a>: Define <code>intNorm</code> and <code>intTrace</code>.<br>\nAnd also <a href=\"https://github.com/leanprover-community/mathlib4/pull/9444\">#9444</a> which adds four more instances but slows down the whole mathlib by ~10%.</p>",
        "id": 411501042,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1704541143
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> do you trust the output of bench in <a href=\"https://github.com/leanprover-community/mathlib4/pull/9444\">#9444</a> ?</p>",
        "id": 411501198,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1704541304
    },
    {
        "content": "<p>I think there's something wonky with <code>tactic execution</code>, I saw a similar jump in one of my PRs</p>",
        "id": 411503223,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1704542942
    },
    {
        "content": "<p>I believe the other two bench outputs</p>",
        "id": 411503245,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1704542958
    },
    {
        "content": "<p>I will surely have time next week if those are still open</p>",
        "id": 411529109,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1704567414
    },
    {
        "content": "<p>I should also have some time next week to have a look</p>",
        "id": 411542967,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1704579885
    }
]