[
    {
        "content": "<p>I've noticed that Probability/Distributions/Uniform (the continuous one!) does not yet exist. According to <a href=\"https://leanprover-community.github.io/undergrad_todo.html\">https://leanprover-community.github.io/undergrad_todo.html</a> this is still missing and part of the undergrad curriculum, so I'd like to add this with contents similar to Probability/Distributions/Gamma (although a bit shorter because the proofs are easier), but I wanted to check that nobody was working on this yet? Note that Probability/ProbabilityMassFunction/Uniform deals with the discrete uniform distribution.</p>",
        "id": 411383663,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704467049
    },
    {
        "content": "<p>also, the linked overview thinks that exponential distribution and Gaussian distributions are missing, shall I update this at some point after the continuous uniform distribution is in there as well?</p>",
        "id": 411384410,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704467341
    },
    {
        "content": "<p>There was <a href=\"https://github.com/leanprover-community/mathlib4/pull/8330\">#8330</a>, though I don't know why it is closed</p>",
        "id": 411512532,
        "sender_full_name": "Thomas Zhu",
        "timestamp": 1704552666
    },
    {
        "content": "<p>I see that the thread points to a file that contains the density for the uniform distribution, I’ll see what’s in there!</p>",
        "id": 411512731,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704552869
    },
    {
        "content": "<p>Also just my opinion, but I would prefer to have a uniform distribution defined over any subset of finite measure in any measure space (like <code>(μ s)⁻¹ • μ.restrict s</code>), not just intervals in the reals. This would also make sense for discrete spaces or union of intervals, etc. There is something like it in <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.pdf.IsUniform#doc\">docs#MeasureTheory.pdf.IsUniform</a>, but it should definitely live in its own file and not in Probability/Density</p>",
        "id": 411513084,
        "sender_full_name": "Thomas Zhu",
        "timestamp": 1704553222
    },
    {
        "content": "<p>I agree, that should probably be the starting point, from which the rest (and the standard definition over the reals) can be derived. I’ll put some thought in this soon!</p>",
        "id": 411513628,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704553665
    },
    {
        "content": "<p>We have some stuff in <a href=\"http://github.com/teorth/pfr\">github.com/teorth/pfr</a></p>",
        "id": 411516191,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704555689
    },
    {
        "content": "<p>I’ll wait until everything from PFR has been added then! I’ll focus on refactoring the exponential distribution for a while, and adding some other basic distributions!</p>",
        "id": 411516545,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1704556011
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Uniform.20distribution/near/411516191\">said</a>:</p>\n<blockquote>\n<p>We have some stuff in <a href=\"http://github.com/teorth/pfr\">github.com/teorth/pfr</a></p>\n</blockquote>\n<p>The definition of IsUniform in the PFR repo is only useful for distributions that are uniform over a finite set no?</p>",
        "id": 418362017,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1706309459
    },
    {
        "content": "<p>What's a uniform distribution over an infinite set?</p>",
        "id": 418366719,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1706312715
    },
    {
        "content": "<p>Uniform over [0,1] ?</p>",
        "id": 418375506,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1706319220
    },
    {
        "content": "<p>I was trying to use the definition from the PFR repo to define a random variable in the reals uniform over [0,1] and couldn't understand how the uniformity condition (equal measure on individual elements of [0,1]) would make much sense</p>",
        "id": 418375686,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1706319373
    },
    {
        "content": "<p>Maybe I'm missing something obvious...</p>",
        "id": 418376264,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1706319885
    },
    {
        "content": "<p>Yeah, the PFR <code>IsUniform</code> is intended for discrete use only.  I guess the general definition of <code>IsUniform</code> would be that the measure is equal to <code>c • μ.restrict s</code> for some <code>ENNReal c</code>, and then some auxiliary lemmas could be written to show that this is equivalent to the PFR definition in the case where <code>s</code> is finite.</p>",
        "id": 418376645,
        "sender_full_name": "Terence Tao",
        "timestamp": 1706320265
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.pdf.IsUniform#doc\">docs#MeasureTheory.pdf.IsUniform</a> is defined nearly in that way</p>",
        "id": 418378222,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1706321880
    },
    {
        "content": "<p>We’ll probably want something similar to Probability/Distributions/Gamma for UNIF(a,b), the continuous uniform distribution, which can probably largely be obtained by appealing to the definition in the linked docs (I’m on mobile, so can’t type backticks). </p>\n<p>I think that we may want to move everything on the uniform distribution to that file, using sections for the discrete and continuous versions, and the special versions on the naturals and real line respectively. </p>\n<p>if this is a shared sentiment, feel free to do this, otherwise I’m happy to set this up!</p>",
        "id": 418396795,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706340435
    },
    {
        "content": "<p>I’ll probably be able to take a shot at it in about a week, so let me know what you want!</p>",
        "id": 418396810,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706340459
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256383\">Enrico Borba</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Uniform.20distribution/near/418375506\">said</a>:</p>\n<blockquote>\n<p>Uniform over [0,1] ?</p>\n</blockquote>\n<p><span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span> All sets are discrete to me</p>",
        "id": 418418291,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1706362653
    },
    {
        "content": "<p>I'll start a branch on this, not sure how much I can contribute in the following days but I'll see!</p>",
        "id": 418707666,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706557427
    },
    {
        "content": "<p>As the continuous and discrete uniform probability distributions are in some sense just two sides of the same coin, I propose that I start by creating a new file <code>Probability/Distributions/Uniform</code> which extracts the relevant material from <code>Probability/Density</code> and <code>ProbabilityMassFunction/Uniform</code> and puts it in one more unified format. Is this a shared sentiment? In that case, I'll make a PR and do this. I'll then make a new PR after that one merges to add whatever is missing, to keep the PRs distinct and relatively small.</p>",
        "id": 418716391,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706560689
    },
    {
        "content": "<p>Looks reasonable at first sight</p>",
        "id": 418722208,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1706563091
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 418725842,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706564458
    },
    {
        "content": "<p>Great, I'll think about it a bit more and try to get some work in on this tomorrow. I think that definitions such as <code>uniformOfFinset</code> (a PMF) would perhaps be nice to derive from <code>IsUniform</code>, rather than being stated directly.</p>",
        "id": 418726341,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706564650
    },
    {
        "content": "<p>I've been working with the <code>IsUniform</code> predicate definition recently so I'm definitely interested in taking a look at this PR. Can you post it here when it's ready?</p>",
        "id": 418729114,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1706565897
    },
    {
        "content": "<p>Yes, I haven’t done anything yet (tried something, then realized I want more generality, so I’ll start over). So, if you’re interested in doing this, that is fine with me as well! Otherwise I’ll work on it slowly over the coming days!</p>",
        "id": 418730200,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706566419
    },
    {
        "content": "<p>I'll post here if I decide to take a stab at it!</p>",
        "id": 418732730,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1706567610
    },
    {
        "content": "<p>Okay!</p>",
        "id": 418733059,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706567758
    },
    {
        "content": "<p>I’ll do the same so that it doesn’t cross!</p>",
        "id": 418733126,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706567773
    },
    {
        "content": "<p>I think that I know how to unite the two, I’ll make a start and make a PR. Basically I think we need a new definition that strips away the random variable X from IsUniform (to directly interpret things as probability measures), which should then make it easier to derive the PMF results directly from this same definition. Note also that the files in Probability/Distributions start working from a PDF, so they never needed a random variable to be specified in the first place, which I think is useful as it is more minimalistic. In a similar vein, I think starting from one measure (mu) may be a bit more intuitive here.</p>",
        "id": 419005132,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706695602
    },
    {
        "content": "<p>This is now <a href=\"https://github.com/leanprover-community/mathlib4/pull/10141\">#10141</a>. I've basically made a new definition <code>IsUniformVolume</code> which does not require a random variable and probability space to be specified. I then moved everything related to <code>IsUniform</code> from <code>Probability/Density</code> to <code>Probability/Distributions/Uniform</code> and generalised the proofs in terms of <code>IsUniformVolume</code>. After showing that we can always find a probability space $\\Omega$ and a random variable X to move from <code>IsUniformVolume</code> to <code>IsUniform</code> it should be relatively easy to move <code>Probability/ProbabilityMassFunction/Uniform</code> over to this file and refactor it accordingly, such that the PMFs there arise from specifying a uniform distribution, rather than defining a PMF directly. (If people think that is a good idea, of course!)</p>",
        "id": 419023268,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706701996
    },
    {
        "content": "<p>I think there is no need for random variables at all in the definition. I wrote the current definition of MeasureTheory.pdf.IsUniform as a refactor from Jason Ying's original code, which was a very long time ago and probably only for a specific purpose, but I think there is no need at all to single out \"pdfs of uniformly distributed variables\". So you shouldn't feel compelled to follow / preserve everything from either of the two files. A good definition should just be what uniform distributions are (maybe c smul mu.restrict s, mu being a reference measure), then possibly proving this is equivalent to RN derivative being constant ae on s (hence the pdf; or conversely use RN derivative to define the measure), then rvs being uniform is just their pushforward distribution being uniform.</p>",
        "id": 419023594,
        "sender_full_name": "Thomas Zhu",
        "timestamp": 1706702120
    },
    {
        "content": "<p>Thank you, a fresh approach based on a reference measure was the philosophy that I was going for in defining <code>IsUniformVolume</code>. Perhaps I should name that one <code>IsUniform</code> instead and rename the old <code>IsUniform</code> to <code>IsUniformRandomVariable</code>? You are right that I should probably define the PDF directly in terms of the measure and a reference measure rather than via the random variable way, let me work that out. PMF should then arise immediately as a special case.</p>",
        "id": 419024371,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706702414
    },
    {
        "content": "<p>I think that for the other distributions in <code>Probability/Distributions/.</code> it is more natural to start from a PDF/PMF and work up from there, but for the uniform distribution I think the correct level of generality is to start from something like <code>IsUniformVolume</code> and work from there.</p>",
        "id": 419024669,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706702524
    },
    {
        "content": "<p>Ah I saw <a href=\"https://github.com/leanprover-community/mathlib4/pull/10141\">#10141</a> just as I was sending the previous message. I totally agree</p>",
        "id": 419024728,
        "sender_full_name": "Thomas Zhu",
        "timestamp": 1706702547
    },
    {
        "content": "<p>Great! I'll work on this a bit more during my commute later today! What is your thought on renaming?</p>",
        "id": 419024913,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706702623
    },
    {
        "content": "<p>I think I would expect the name IsUniform to refer to a distribution and not a random variable</p>",
        "id": 419025152,
        "sender_full_name": "Thomas Zhu",
        "timestamp": 1706702721
    },
    {
        "content": "<p>although, since the definition of uniform IsUniform m is basically m = ..., perhaps we can just define a uniformDistribution : Measure E := ..., rather than making it a Prop?</p>",
        "id": 419026002,
        "sender_full_name": "Thomas Zhu",
        "timestamp": 1706703013
    },
    {
        "content": "<p>Something like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">UniformVolume</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">volume_tac</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Measure</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"n\">s</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">•</span> <span class=\"n\">μ.restrict</span> <span class=\"n\">s</span>\n</code></pre></div>\n<p>and then work directly from there? I agree that <code>IsUniformVolume</code> is perhaps a bit unnecessary. I'll add a prop <code>IsUniformVolume</code> then to check if a given measure is such a UniformVolume.</p>",
        "id": 419027901,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706703737
    },
    {
        "content": "<p>Yes (although it should be camelCase <code>uniformVolume</code>). Then I don't think <code>IsUniformVolume m</code> would be necessary because it would just be <code>m = uniformVolume</code>, and instead of showing <code>IsUniformVolume m -&gt; properties of m</code> you can just show <code>properties of uniformVolume</code></p>",
        "id": 419028808,
        "sender_full_name": "Thomas Zhu",
        "timestamp": 1706704138
    },
    {
        "content": "<p>I've modified the PR. The way <code>pdf</code> and <code>HasPDF</code> and friends have been defined, I need to consider a random variable <code>X</code> at some point, so I'll probably show how to create an <code>IsUniform</code> instance when we have a <code>uniformVolume</code>, which then allows one to pass around between the two.</p>",
        "id": 419032022,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706705308
    },
    {
        "content": "<p>I've added that now.</p>",
        "id": 419042054,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706708675
    },
    {
        "content": "<p>I've added a few small things, I'm not entirely sure how to proceed at this point, any feedback/suggestions are welcome! Otherwise I'll take another stab at it later, I have to focus on my research now!</p>",
        "id": 419047209,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706710083
    },
    {
        "content": "<p>I've added a few things and made some modifications based on suggestions that were kindly provided. I could use another pair of eyes on <a href=\"https://github.com/leanprover-community/mathlib4/pull/10141\">#10141</a>, especially for two things: </p>\n<ul>\n<li>The last few lemmas require @..., which I don't like and feels like it should not be necessary. Probably I'm doing some implicit/explicit arguments wrong, which is causing this.</li>\n<li>See the last comment in the file, I need to move from <code>uniformPDF</code> to the function used for the <code>PMF</code> there, but I can't seem to get that to work<br>\nI probably won't have time to work on this the coming days, so feel free to take a shot at it!</li>\n</ul>",
        "id": 419090581,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706722399
    },
    {
        "content": "<p>Any other comments/style suggestions are more than welcome as well!</p>",
        "id": 419091238,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1706722598
    },
    {
        "content": "<p>I was recommended to split this up into two PRs, in which the first one just moves the relevant existing definitions and results to a new file, this was <a href=\"https://github.com/leanprover-community/mathlib4/pull/10451\">#10451</a>, <del>ready for review</del> which is merged!</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/10456\">#10456</a> refactors <code>IsUniform</code> in terms of the new <code>uniformMeasure</code>, which allows us to prove the main properties without requiring a choice of random variable and probability space and is awaiting review!</p>",
        "id": 420990288,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1707731835
    },
    {
        "content": "<p>I've decided to put the refactoring of the related <code>PMF...</code> results as a To Do in the file, as this lowers the amount of reviewing necessary for the current PR, and I'm not entirely sure how to proceed on refactoring PMF.</p>",
        "id": 421028720,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1707743974
    }
]