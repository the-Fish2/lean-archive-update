[
    {
        "content": "<p>It looks like we have (at least) two ways to describe (almost) the same notion:</p>\n<ul>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.chainHeight#doc\">docs#Set.chainHeight</a> defined in terms of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=List.chain%27#doc\">docs#List.chain'</a>;</li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=krullDim#doc\">docs#krullDim</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=height#doc\">docs#height</a>, defined in terms of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=RelSeries#doc\">docs#RelSeries</a></li>\n</ul>\n<p>The only difference I see is that the latter definition returns an element of <code>WithBot (WithTop Nat)</code>, so that it's <code>bot</code>, not <code>0</code> for an empty type. However, for a nonempty type it's always at least <code>1</code>, so I don't see why do we need <code>WithBot</code> here.</p>\n<p>Let me tag the authors <span class=\"user-mention\" data-user-id=\"439483\">@Andrew Yang</span>  and <span class=\"user-mention\" data-user-id=\"252627\">@Jujian Zhang</span>. I failed to tag Fangming Li.</p>",
        "id": 418074546,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706187705
    },
    {
        "content": "<p>Note: I don't use this part of the library, so it's possible that I miss some other subtle difference in definitions. However, I'm confident that we should unify approaches to these 2 definitions.</p>",
        "id": 418074726,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706187760
    },
    {
        "content": "<p>The dimension of a trivial ring should be negative infinity. For example, the dimension of product of two variety should be the sum of their dimensions. In this case if one of the variety is trivial, their product is also trivial. Then the dimension of a trivial variety needs to be negative infinity.</p>",
        "id": 418075110,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1706187890
    },
    {
        "content": "<p>It’s kind of like the degree of the zero polynomial should be negative infinity.</p>",
        "id": 418075168,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1706187912
    },
    {
        "content": "<p>Another example is that a field has krull dimension zero, which intuitively should be larger than krull dimension of a trivial ring.</p>",
        "id": 418076597,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1706188414
    },
    {
        "content": "<p>It's like the dimension of the empty manifold being negative infinity, the dimension of R^n or the n-sphere S_n (as a manifold) is n, and the dimension of an infinite-dimensional Banach space (as a Banach manifold) is +infinity.</p>",
        "id": 418077656,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706188761
    },
    {
        "content": "<p>When you talk about dimensions of fields etc, which type with a <code>Preorder</code> do you associate to them?</p>",
        "id": 418090121,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706192677
    },
    {
        "content": "<p>For fields (and rings in general), the <code>RelSeries</code> will be a series of prime ideals ordered by inclusion.</p>",
        "id": 418090391,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1706192760
    },
    {
        "content": "<p>Also, am I right that the only way for <code>krullDim α</code> to be <code>-∞</code> is for <code>α</code> to be empty? If yes, then it should be stated in the docstring.</p>",
        "id": 418090544,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706192795
    },
    {
        "content": "<p>BTW, am I right that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=height#doc\">docs#height</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.chainHeight#doc\">docs#Set.chainHeight</a> are off by 1?</p>",
        "id": 418090854,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706192882
    },
    {
        "content": "<p>In finite cases, I think so.</p>",
        "id": 418091107,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1706192948
    },
    {
        "content": "<p>One possible way to unify is perhaps to define a pred function from <code>WithTop \\Nat</code> to <code>WithBot (WithTop \\Nat)</code> by sending 0 to negative infinity, and define krull dimension to be pred of chain height?</p>",
        "id": 418091713,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1706193113
    },
    {
        "content": "<p>BTW, why not use something like this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">myHeight</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ENat</span> <span class=\"o\">:=</span> <span class=\"bp\">⨆</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ht</span> <span class=\"o\">:</span> <span class=\"n\">IsChain</span> <span class=\"o\">(</span><span class=\"bp\">⋅</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">⋅</span><span class=\"o\">)</span> <span class=\"n\">t</span><span class=\"o\">),</span> <span class=\"n\">Set.encard</span> <span class=\"n\">t</span>\n</code></pre></div>",
        "id": 418092105,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706193214
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252627\">Jujian Zhang</span> <a href=\"#narrow/stream/287929-mathlib4/topic/RelSeries.20vs.20List.2Echain.20vs.20Order.2Eheight/near/418091713\">said</a>:</p>\n<blockquote>\n<p>One possible way to unify is perhaps to define a pred function from <code>WithTop \\Nat</code> to <code>WithBot (WithTop \\Nat)</code> by sending 0 to negative infinity, and define krull dimension to be pred of chain height?</p>\n</blockquote>\n<p>It's just <code>Order.pred (a : WithBot ENat)</code></p>",
        "id": 418092317,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706193262
    }
]