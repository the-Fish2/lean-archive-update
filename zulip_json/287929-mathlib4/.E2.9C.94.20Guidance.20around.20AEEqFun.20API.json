[
    {
        "content": "<p>I'm having some trouble working with AEEq functions. Since everything is defined in terms of quotients I cannot find how to do certain things. For instance, I cannot find a lemma for this</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">μ</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Measure</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"bp\">→ₘ</span><span class=\"o\">[</span><span class=\"n\">μ</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"bp\">∀ᵐ</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">∂</span><span class=\"n\">μ</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>or for the equivalent versions for <code>&lt;</code> and such. Is there some general \"induction principle\" or method to go between the two? And is it better to avoid <code>AEEqFun</code> entirely and have all hypothesis in terms of filters?</p>",
        "id": 440677743,
        "sender_full_name": "Lucas Viana Reis",
        "timestamp": 1716688429
    },
    {
        "content": "<p>this direction is easy, you can just <code>rw [h]</code> and then the goal is true because it is true everywhere (which implies a.e.)</p>",
        "id": 440678065,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716688809
    },
    {
        "content": "<p>ah! interesting. But my original motivation for asking was for the <code>&lt;</code> relation</p>",
        "id": 440678142,
        "sender_full_name": "Lucas Viana Reis",
        "timestamp": 1716688907
    },
    {
        "content": "<p>also this appears to be one direction of <code>ext_iff</code></p>",
        "id": 440678218,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716688989
    },
    {
        "content": "<p>for <code>&lt;</code> it's probably true by definition</p>",
        "id": 440678226,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716689002
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Guidance.20around.20AEEqFun.20API/near/440678218\">said</a>:</p>\n<blockquote>\n<p>also this appears to be one direction of <code>ext_iff</code></p>\n</blockquote>\n<p>I think this is what I was looking for, thanks!</p>",
        "id": 440678328,
        "sender_full_name": "Lucas Viana Reis",
        "timestamp": 1716689142
    },
    {
        "content": "<p>Actually, no. For instance, how to show this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">μ</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Measure</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"bp\">→ₘ</span><span class=\"o\">[</span><span class=\"n\">μ</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"bp\">&lt;</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"bp\">∀ᵐ</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">∂</span><span class=\"n\">μ</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">&lt;</span><span class=\"w\"> </span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"n\">exact?</span><span class=\"w\"> </span><span class=\"c1\">-- fails</span>\n</code></pre></div>",
        "id": 440678419,
        "sender_full_name": "Lucas Viana Reis",
        "timestamp": 1716689235
    },
    {
        "content": "<p>My impression is that now the question is specific to the definition of <code>&lt;</code> for <code>AEEqFun</code>, so it doesn't have much to do with quotients anyway?</p>",
        "id": 440678675,
        "sender_full_name": "Lucas Viana Reis",
        "timestamp": 1716689493
    },
    {
        "content": "<p>please include imports</p>",
        "id": 440678922,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716689824
    },
    {
        "content": "<p>This is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.AEEqFun.coeFn_le#doc\">docs#MeasureTheory.AEEqFun.coeFn_le</a> but there is no analogous statement for <code>lt</code>, presumably because <code>&lt;ᵐ[μ]</code> doesn't exist</p>",
        "id": 440679238,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716690261
    },
    {
        "content": "<p>oh, it's also not true</p>",
        "id": 440679349,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716690464
    },
    {
        "content": "<p><code>f &lt; g</code> means that <code>f ≤ g ∧ ¬g ≤ f</code>, which is to say, <code>f</code> is a.e. less or equal to <code>g</code> and <code>f</code> is strictly less than <code>g</code> on a set of positive measure</p>",
        "id": 440679409,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716690526
    },
    {
        "content": "<p>you can use <code>LiftRel (·&lt;·) f g</code> to say that <code>f</code> is a.e. less than <code>g</code></p>",
        "id": 440679695,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716690861
    },
    {
        "content": "<p>this makes sense, thanks! I think could not have guessed this myself from the definition with germs</p>",
        "id": 440681473,
        "sender_full_name": "Lucas Viana Reis",
        "timestamp": 1716693191
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"571941\">Lucas Viana Reis</span> has marked this topic as resolved.</p>",
        "id": 440681479,
        "sender_full_name": "Notification Bot",
        "timestamp": 1716693199
    }
]