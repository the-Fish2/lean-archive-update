[
    {
        "content": "<p>Hi everyone!<br>\nDuring the Lean workshop which took place last January in Roma Tor Vergata,  me and some colleagues (<span class=\"user-mention\" data-user-id=\"319141\">@Amos Turchet</span>  and <span class=\"user-mention\" data-user-id=\"704147\">@Laura Capuano</span> ), encouraged by <span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span>  and <span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> , started a project aiming to prove <a href=\"https://en.wikipedia.org/wiki/Siegel's_lemma\">Siegel's lemma</a>. The first sorry-free proof goes back to the end of last February. During the LFTCM 2024 event I showed some parts of the proof to Riccardo, Filippo and <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>  and got some very useful tips that improved the proof quite a lot. Thanks guys! I think it is now time to  try to add this to Mathlib. For that I need GitHub permission, my GitHub username is <code>fbarroero</code>.<br>\nActually, the original long-term plan was to prove some Diophantine Approximation result (e.g. Thue's Theorem or maybe even <a href=\"https://en.wikipedia.org/wiki/Roth%27s_theorem\">Roth's Theorem</a>). This is a much more ambitious project which we might start working on during the summer.</p>",
        "id": 441756985,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717174610
    },
    {
        "content": "<p>invite sent</p>",
        "id": 441763275,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1717176207
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Siegel's.20Lemma/near/441763275\">said</a>:</p>\n<blockquote>\n<p>invite sent</p>\n</blockquote>\n<p>Thanks!</p>",
        "id": 441763558,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717176285
    },
    {
        "content": "<p>It would be great to have Roth's Theorem!</p>",
        "id": 441779912,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1717181451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Siegel's.20Lemma/near/441779912\">said</a>:</p>\n<blockquote>\n<p>It would be great to have Roth's Theorem!</p>\n</blockquote>\n<p>It would surely be great! We will see how far we get...</p>",
        "id": 442070972,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717345588
    },
    {
        "content": "<p>Funnily enough, <a href=\"https://github.com/leanprover-community/mathlib4/commit/1283302a67a266b496ac71a609603853ade84cd6\">mathlib acquired Roth's theorem yesterday</a> (the other Roth's theorem)</p>",
        "id": 442073036,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717346633
    },
    {
        "content": "<p>Cool!</p>",
        "id": 442073259,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717346728
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"626233\">Fabrizio Barroero</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Siegel's.20Lemma/near/441756985\">said</a>:</p>\n<blockquote>\n<p>Hi everyone!<br>\nDuring the Lean workshop which took place last January in Roma Tor Vergata,  me and some colleagues (<span class=\"user-mention silent\" data-user-id=\"319141\">Amos Turchet</span>  and <span class=\"user-mention silent\" data-user-id=\"704147\">Laura Capuano</span> ), encouraged by <span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span>  and <span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> , started a project aiming to prove <a href=\"https://en.wikipedia.org/wiki/Siegel's_lemma\">Siegel's lemma</a>. The first sorry-free proof goes back to the end of last February. During the LFTCM 2024 event I showed some parts of the proof to Riccardo, Filippo and <span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span>  and got some very useful tips that improved the proof quite a lot. Thanks guys! I think it is now time to  try to add this to Mathlib. For that I need GitHub permission, my GitHub username is <code>fbarroero</code>.<br>\nActually, the original long-term plan was to prove some Diophantine Approximation result (e.g. Thue's Theorem or maybe even <a href=\"https://en.wikipedia.org/wiki/Roth%27s_theorem\">Roth's Theorem</a>). This is a much more ambitious project which we might start working on during the summer.</p>\n</blockquote>\n<p>Congratulations! Do not hesitate to tell us the PR numbers as soon as you open them.</p>",
        "id": 442107447,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1717363765
    },
    {
        "content": "<p>Thanks! At the moment I have a problem. I am sure you guys can help me figure it out. I have created a file <code>SiegelsLemma.lean</code> in the  <code>NumberTheory</code> folder with the first part of the proof. I need a lemma called <code>mulVec_def</code> which unfolds the definition of <code>mulVec</code> and I added it to the file  <code>Mathlib.Data.Matrix.Basic</code>. I imported this in my <code>SiegelsLemma.lean</code> and run <code>lake build Mathlib.Data.Matrix.Basic</code>. Still, when I call the lemma I get <code>unknown identifier 'mulVec_def'</code>.</p>",
        "id": 442108841,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717364621
    },
    {
        "content": "<p>This error happens when you do <code>lake build Mathlib.NumberTheory.SiegelsLemma</code>?</p>",
        "id": 442110473,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1717365574
    },
    {
        "content": "<p>Is it a namespace issue? What happens if you hit ctrl-space after <code>mulVec_def</code>?</p>",
        "id": 442110700,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717365680
    },
    {
        "content": "<p>Are you sure that <code>mulVec</code> is not inside a namespace that you need to open?</p>",
        "id": 442110709,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1717365683
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"560559\">Richard Osborn</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Siegel's.20Lemma/near/442110473\">said</a>:</p>\n<blockquote>\n<p>This error happens when you do <code>lake build Mathlib.NumberTheory.SiegelsLemma</code>?</p>\n</blockquote>\n<p>No, when the file is open, lean gives me that error</p>",
        "id": 442110736,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717365700
    },
    {
        "content": "<p>I think the question is - if you try the lake command, does it also happen?</p>",
        "id": 442110810,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717365726
    },
    {
        "content": "<p>But yes, check the namespace first</p>",
        "id": 442110818,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717365733
    },
    {
        "content": "<p>It's inside a namespace Matrix, which is opened. In any case I get the same error with <code>Matrix.mulVec_def</code>.</p>\n<p>If I run <code>lake build Mathlib.NumberTheory.SiegelsLemma</code>I get:<br>\n⚠ [1683/1683] Built Mathlib.NumberTheory.SiegelsLemma<br>\nwarning: ././././Mathlib/NumberTheory/SiegelsLemma.lean:103:22: unused variable <code>i_1</code><br>\nnote: this linter can be disabled with <code>set_option linter.unusedVariables false</code><br>\nBuild completed successfully.</p>",
        "id": 442111013,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717365859
    },
    {
        "content": "<p>It would be easier to help you if you can <code>push</code> this to a PR (that you can mark <code>help wanted</code> and/or <code>WIP</code>). Since at any rate you are planning to PR these things, it is perhaps the right moment to open it <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 442111089,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1717365917
    },
    {
        "content": "<p>Done! It's <a href=\"https://github.com/leanprover-community/mathlib4/pull/13470\">#13470</a></p>",
        "id": 442111865,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717366499
    },
    {
        "content": "<p>OK, I'm having a look.</p>",
        "id": 442111988,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1717366587
    },
    {
        "content": "<p>Thanks Filippo!</p>",
        "id": 442112071,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717366680
    },
    {
        "content": "<p>No problem! I have started the review, will finish tomorrow <span aria-label=\"night\" class=\"emoji emoji-1f303\" role=\"img\" title=\"night\">:night:</span></p>",
        "id": 442115092,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1717368920
    },
    {
        "content": "<p>btw, I believe the reason vscode gave you that error <code>unknown identifier 'mulVec_def'</code> is because it doesn't always see that an import has changed, and the file needs to be rebuilt. Clicking <code>Restart File</code> at the bottom of the infoview will fix this (or you can just build the file via the command line)</p>",
        "id": 442115781,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1717369311
    },
    {
        "content": "<p>Yes, <span class=\"user-mention\" data-user-id=\"560559\">@Richard Osborn</span> is right and if you restart the file everything works nicely. I have also started the review to you PR, please feel free to ask questions whenever some of my comments were unclear.</p>",
        "id": 442175211,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1717400805
    },
    {
        "content": "<p>Thanks but I restarted the file... it's still not working...</p>",
        "id": 442184332,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717403295
    },
    {
        "content": "<p>Thanks for the help, Filippo. It's very useful</p>",
        "id": 442184405,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717403317
    },
    {
        "content": "<p>Let's advance little by little:</p>\n<ol>\n<li>Is <code>Mathlib.Data.Matrix.Basic</code> compiling?</li>\n<li>Can you close everything (including VSCode), do a <code>lake exe cache get</code> and then <code>lake build</code>?</li>\n</ol>",
        "id": 442187776,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1717404265
    },
    {
        "content": "<p>You can try <code>lake exe cache get!</code> to be sure to download everything</p>",
        "id": 442198650,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1717407131
    },
    {
        "content": "<p>(note the <code>!</code>)</p>",
        "id": 442198674,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1717407137
    },
    {
        "content": "<p>Thanks for the help. Unfortunately it still does not work. I have tried on 3 computers and get the same result</p>",
        "id": 442274956,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717426106
    },
    {
        "content": "<p>So the code builds in our continuous integration but not on any of the three computers you tried? That sounds very surprising</p>",
        "id": 442279752,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717427112
    },
    {
        "content": "<p>I must be doing something wrong... Also, since today, every time Mathlib is updated, even if I run <code>lake exe cache get</code>, it builds the imports and it takes forever. I apologise but I am really a Github beginner.</p>",
        "id": 442281400,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717427441
    },
    {
        "content": "<p>Have you tried <code>lake exe cache get!</code>?</p>",
        "id": 442281659,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1717427494
    },
    {
        "content": "<p>I did</p>",
        "id": 442281716,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717427505
    },
    {
        "content": "<p>Ok, when you say \"every time Mathlib is updated\", what commands/actions are you doing to update mathlib?</p>",
        "id": 442282732,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1717427715
    },
    {
        "content": "<p>I just press Commit in the source control panel of VS code</p>",
        "id": 442283223,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717427817
    },
    {
        "content": "<p>So until you push your changes to github and let CI build your code, the cache won't make your local builds any faster. If you modify a file in mathlib, all of the files that import it will have to be rebuilt (or if you are building a single file, all the files \"between\" the modified file and the file you are building will be rebuilt).</p>",
        "id": 442285573,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1717428287
    },
    {
        "content": "<p>I think I understand. Thanks!</p>",
        "id": 442286353,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717428449
    },
    {
        "content": "<p>I just created the second PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/13487\">#13487</a></p>",
        "id": 442387881,
        "sender_full_name": "Fabrizio Barroero",
        "timestamp": 1717454101
    }
]