[
    {
        "content": "<p>The following used to work, but stopped working some time in the last 5 days:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ℂ</span> <span class=\"bp\">×</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"n\">ℂ</span><span class=\"o\">]</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">‖</span><span class=\"n\">r</span> <span class=\"bp\">•</span> <span class=\"n\">s</span><span class=\"bp\">‖</span> <span class=\"bp\">=</span> <span class=\"bp\">‖</span><span class=\"n\">r</span><span class=\"bp\">‖</span> <span class=\"bp\">*</span> <span class=\"bp\">‖</span><span class=\"n\">s</span><span class=\"bp\">‖</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">norm_smul</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>The change seems to have come from <a href=\"https://github.com/leanprover-community/mathlib4/pull/11331\">#11331</a>. <span class=\"user-mention\" data-user-id=\"306577\">@Matthew Ballard</span> any thoughts how to get this working again?</p>",
        "id": 430411421,
        "sender_full_name": "David Loeffler",
        "timestamp": 1711824412
    },
    {
        "content": "<p>What if you do <code>rw [norm_smul _ _]</code>, filling in one of the underscores if necessary?</p>",
        "id": 430414539,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1711827170
    },
    {
        "content": "<p><code>rw [norm_smul _ _]</code> does not work (and it also does not work if one of the blanks is filled in but not the other). Filling in both blanks, i.e. <code>rw [norm_smul r s]</code>, does work; it also works to specify the types but not the values, i.e. <code>rw [norm_smul (α := ℂ) (β := (ℂ × ℂ) →L[ℂ] ℂ)]</code>. </p>\n<p>I also found that <code>example (r : ℂ) (s : (ℂ × ℂ) →L[ℂ] ℂ) : ‖r • s‖ = ‖r‖ * ‖s‖ := norm_smul _ _</code> gives an error message:</p>\n<div class=\"codehilite\" data-code-language=\"type\"><pre><span></span><code>  norm_smul r s\nhas type\n  ‖@HSMul.hSMul ℂ (ℂ × ℂ →L[ℂ] ℂ) (ℂ × ℂ →L[ℂ] ℂ) (@instHSMul ℂ (ℂ × ℂ →L[ℂ] ℂ) SMulZeroClass.toSMul) r s‖ =\n    ‖r‖ * ‖s‖ : Prop\nbut is expected to have type\n  ‖@HSMul.hSMul ℂ (ℂ × ℂ →L[ℂ] ℂ) (ℂ × ℂ →L[ℂ] ℂ) (@instHSMul ℂ (ℂ × ℂ →L[ℂ] ℂ) ContinuousLinearMap.instSMul) r s‖ =\n    ‖r‖ * ‖s‖ : Prop\n</code></pre></div>\n<p>(I have no idea what this means or even whether it's relevant, but I'm providing it in case others can get something out of it.)</p>",
        "id": 430416920,
        "sender_full_name": "David Loeffler",
        "timestamp": 1711829224
    },
    {
        "content": "<p><code>rw [norm_smul (_ : ℂ) (_ : (ℂ × ℂ) →L[ℂ] ℂ)]</code> is the least precise that I can still get to work</p>",
        "id": 430418595,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1711831164
    },
    {
        "content": "<p>I was going to suggest filling in both arguments but I see that’s already been found.</p>",
        "id": 430428730,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1711842352
    }
]