[
    {
        "content": "<p>Given a <code>[LinearOrderedField α]</code>, there is no instance of <code>PartialOrder (CauSeq α abs)</code> that mathlib is currently able to synthesize. Is this (1) a natural thing that should be in mathlib but just no one has written it yet; (2) in mathlib but I'm doing something wrong that's stopping it from getting synthesized; (3) actually mathematically incorrect somehow?</p>\n<p>Because I certainly _think_ of cauchy sequences as forming a partial order, indeed I think of the reals that way, but maybe that somehow involves an aspect unique to ℚ that doesn't hold in general.</p>\n<p>(I actually wanted CauSeq to be a Lattice, so that I could use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=neg_inf#doc\">docs#neg_inf</a> , but there wasn't even PartialOrder.)</p>",
        "id": 429244402,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711312229
    },
    {
        "content": "<p>Oh, I see the issue now. PartialOrder requires \"∀ a b : α, a ≤ b → b ≤ a → a = b\", but with CauSeq you can only conclude ≈. Equality is actually elementwise equality.</p>",
        "id": 429244699,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711312440
    },
    {
        "content": "<p><code>Real</code> is the quotient of CauSeq by it's natural equivalence, specifically on the rationals. Because you actually get = instead of ≈, it is (usually) much cleaner to work with. Is there no generic \"quotient of CauSeq\" that works for any LinearOrderedField? In other words, why is Real defined as the quotient over rationals, instead of some \"CauSeqEquiv\" (with most of the nice properties) over the rationals?</p>",
        "id": 429247077,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711313813
    },
    {
        "content": "<p>Do you know that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CauSeq#doc\">docs#CauSeq</a> is a pretty hands on construction of the reals and that more general theory is available when looking at <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CauchyFilter#doc\">docs#CauchyFilter</a> ?</p>",
        "id": 429247470,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711314033
    },
    {
        "content": "<p>I did not! Thanks for the pointer. Also, that looks like it's far off in pointset topology land where I dare not venture, but I will take a look anyway :)</p>",
        "id": 429247596,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711314106
    },
    {
        "content": "<p>keep in mind that there are lemmas like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Metric.cauchySeq_iff#doc\">docs#Metric.cauchySeq_iff</a> that allow you to translate between different characterizations, some of which may be more familiar</p>",
        "id": 429249926,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1711315707
    },
    {
        "content": "<p>(and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=isCauSeq_iff_cauchySeq#doc\">docs#isCauSeq_iff_cauchySeq</a> proves that the two constructions are equivalent in a normed field)</p>",
        "id": 429251215,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1711316432
    }
]