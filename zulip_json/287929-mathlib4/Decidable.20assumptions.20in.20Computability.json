[
    {
        "content": "<p>My new <code>Decidable</code> linter matched on some <code>theorem</code>s/<code>def</code>s in <code>Computability</code> (note: it has false positive matches; I know about it and I don't want to fix it now; I'll fix it before making the PR non-draft).<br>\nDoes <code>Mathlib</code> convention \"don't assume <code>Decidable</code> unless you need it to state the theorem\" apply to <code>Computability</code>? I guess, some people (<span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> ?) may want choice-free proofs in that part of the library.</p>",
        "id": 422949847,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708663596
    },
    {
        "content": "<p>can you name some specific violators?</p>",
        "id": 422949873,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708663631
    },
    {
        "content": "<p>probably they should be nolinted but I'd like to review them first</p>",
        "id": 422949945,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708663691
    },
    {
        "content": "<p>E.g.,</p>\n<ul>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Computability.Encoding.card_le_aleph0#doc\">docs#Computability.Encoding.card_le_aleph0</a> assumes <code>Encodable</code> instead of <code>Countable</code></li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ComputablePred.computable_iff_re_compl_re#doc\">docs#ComputablePred.computable_iff_re_compl_re</a> assumes <code>DecidablePred</code></li>\n</ul>",
        "id": 422949956,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708663707
    },
    {
        "content": "<p>You can open <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8010176407/job/21880540054?pr=10235\">https://github.com/leanprover-community/mathlib4/actions/runs/8010176407/job/21880540054?pr=10235</a> and search for \"Mathlib/Computability\"</p>",
        "id": 422949971,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708663729
    },
    {
        "content": "<p>Note that the linter matches on all structures that assume <code>Decidable</code>/<code>Fintype</code>/<code>Inhabited</code> for now.</p>",
        "id": 422949996,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708663760
    },
    {
        "content": "<p>I think the first one should be exempted because it's about an encodable hypothesis</p>",
        "id": 422950012,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708663779
    },
    {
        "content": "<p>I think that the first can be proved with <code>[Countable]</code> assumption without choice.</p>",
        "id": 422950099,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708663840
    },
    {
        "content": "<p>sure, but then it will be more work to use</p>",
        "id": 422950108,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708663851
    },
    {
        "content": "<p>I think the consequent is literally the definition of Countable</p>",
        "id": 422950129,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708663866
    },
    {
        "content": "<p>Why? We have <code>[Encodable α] : Countable α</code> instance.</p>",
        "id": 422950138,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708663875
    },
    {
        "content": "<p>This is not about <code>Encodable</code> it's about <code>Encoding</code></p>",
        "id": 422950149,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708663888
    },
    {
        "content": "<p>It has <code>[Encodable e.Γ]</code> assumption.</p>",
        "id": 422950167,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708663908
    },
    {
        "content": "<p>That can be replaced by <code>[Countable e.Γ]</code></p>",
        "id": 422950218,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708663927
    },
    {
        "content": "<p>I see, that seems reasonable</p>",
        "id": 422950289,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708664002
    },
    {
        "content": "<p>assuming it doesn't add imports</p>",
        "id": 422950298,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708664019
    },
    {
        "content": "<p>Do you plan to add an <code>@[allowedAxioms]</code> attribute, so that we can track theorems you want to stay choice-free?</p>",
        "id": 422950373,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708664054
    },
    {
        "content": "<p>Some time after we fix the issues that broke everything in lean 4</p>",
        "id": 422950391,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708664074
    },
    {
        "content": "<p>because right now it's pointless, everything depends on all the axioms for stupid reasons</p>",
        "id": 422950420,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708664104
    },
    {
        "content": "<p>\"everything\" means \"everything\" or \"choice-free proofs\"?</p>",
        "id": 422950422,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708664105
    },
    {
        "content": "<p>all the theorems that used to be choice-free are no longer so in lean 4</p>",
        "id": 422950458,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708664138
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ComputablePred.computable_iff_re_compl_re#doc\">docs#ComputablePred.computable_iff_re_compl_re</a> should definitely be nolinted, there is even a nolint in the source commented out</p>",
        "id": 422950560,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708664234
    },
    {
        "content": "<p>OK, I'll look for those nolints</p>",
        "id": 422950577,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708664253
    },
    {
        "content": "<p>Let me prepare a PR and ask for your review.</p>",
        "id": 422950665,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708664327
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/10869\">#10869</a>, assigned to you</p>",
        "id": 422951530,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708665037
    },
    {
        "content": "<p>Pushed +1 theorem</p>",
        "id": 422951837,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708665267
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Decidable.20assumptions.20in.20Computability/near/422950420\">said</a>:</p>\n<blockquote>\n<p>because right now it's pointless, everything depends on all the axioms for stupid reasons</p>\n</blockquote>\n<p>I think the existence of the attribute will be a much stronger argument for the feature existing in the first place</p>",
        "id": 423116099,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708735369
    }
]