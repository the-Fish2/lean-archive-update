[
    {
        "content": "<p>I was formalizing some result on countability and I ended up proving that, for two prime numbers <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>ν</mi><mi>p</mi></msub><mo stretchy=\"false\">(</mo><msup><mi>p</mi><mi>n</mi></msup><msup><mi>q</mi><mi>m</mi></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mi>n</mi><mspace linebreak=\"newline\"></mspace><msub><mi>ν</mi><mi>q</mi></msub><mo stretchy=\"false\">(</mo><msup><mi>p</mi><mi>n</mi></msup><msup><mi>q</mi><mi>m</mi></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">\\nu_p(p^n q^m) = n \\\\\n\\nu_q(p^n q^m) = m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.06366em;\">ν</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0637em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.06366em;\">ν</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0637em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span></span></p>\n<p>The proof uses an intermediate lemma stating that</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>ν</mi><mi>p</mi></msub><mo stretchy=\"false\">(</mo><msup><mi>q</mi><mi>m</mi></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\nu_p(q^m) = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.06366em;\">ν</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0637em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">intermediate</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h_neq</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">≠</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">coprime_pow</span> <span class=\"o\">:=</span> <span class=\"n\">Nat.Coprime.pow</span> <span class=\"mi\">1</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"n\">Nat.coprime_pow_primes</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"n\">hq.elim</span> <span class=\"n\">hp.elim</span> <span class=\"n\">h_neq</span><span class=\"o\">)</span>\n  <span class=\"n\">rewrite</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">q</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">p</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">coprime_pow</span>\n  <span class=\"n\">exact</span> <span class=\"n\">padicValNat.eq_zero_of_not_dvd</span> <span class=\"o\">((</span><span class=\"n\">Nat.Prime.coprime_iff_not_dvd</span> <span class=\"n\">hq.elim</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">coprime_pow</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">prod_pow_primes_left</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h_neq</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.mul</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">^</span> <span class=\"n\">m</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span> <span class=\"n\">padicValNat.prime_pow</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">intermediate</span> <span class=\"n\">_</span> <span class=\"n\">h_neq</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">prod_pow_primes_right</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h_neq</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">≠</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.mul</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">^</span> <span class=\"n\">m</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span> <span class=\"n\">padicValNat.prime_pow</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">intermediate</span> <span class=\"n\">_</span> <span class=\"n\">h_neq</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Is this result exists already in Mathlib (maybe in a different formulation) and, if not, would it be an interesting one to add?</p>",
        "id": 426119296,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1710248345
    },
    {
        "content": "<p>You can probably combine <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=padicValNat_primes#doc\">docs#padicValNat_primes</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=padicValNat.pow#doc\">docs#padicValNat.pow</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=padicValNat.mul#doc\">docs#padicValNat.mul</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=padicValNat.prime_pow#doc\">docs#padicValNat.prime_pow</a> to get what you want.</p>",
        "id": 426125768,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1710250331
    },
    {
        "content": "<p>When working with the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>-adic valuation you might also want to inspect <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsDedekindDomain.HeightOneSpectrum.valuation#doc\">docs#IsDedekindDomain.HeightOneSpectrum.valuation</a>, that benefits of the full valuation API in Mathlib.</p>",
        "id": 426131058,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1710251943
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/287929-mathlib4/topic/p-adic.20valuation.20of.20product.20of.20powered.20prime.20numbers/near/426125768\">said</a>:</p>\n<blockquote>\n<p>You can probably combine <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=padicValNat_primes#doc\">docs#padicValNat_primes</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=padicValNat.pow#doc\">docs#padicValNat.pow</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=padicValNat.mul#doc\">docs#padicValNat.mul</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=padicValNat.prime_pow#doc\">docs#padicValNat.prime_pow</a> to get what you want.</p>\n</blockquote>\n<p>Thanks, I achieved getting rid of the intermediate lemma and Coprime stuff. The resulting proofs look like that</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">prod_pow_primes_left</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">neq</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.mul</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">padic_p_pn_eq_n</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.pow</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">Nat.Prime.ne_zero</span> <span class=\"n\">hp.elim</span><span class=\"o\">),</span> <span class=\"n\">padicValNat_self</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">padic_p_qm_eq_0</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">^</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.pow</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">Nat.Prime.ne_zero</span> <span class=\"n\">hq.elim</span><span class=\"o\">),</span> <span class=\"n\">padicValNat_primes</span> <span class=\"n\">neq</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padic_p_pn_eq_n</span><span class=\"o\">,</span> <span class=\"n\">padic_p_qm_eq_0</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">prod_pow_primes_right</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">neq</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">≠</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.mul</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">padic_q_qm_eq_m</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.pow</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">Nat.Prime.ne_zero</span> <span class=\"n\">hq.elim</span><span class=\"o\">),</span> <span class=\"n\">padicValNat_self</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">padic_q_pn_eq_0</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.pow</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">Nat.Prime.ne_zero</span> <span class=\"n\">hp.elim</span><span class=\"o\">),</span> <span class=\"n\">padicValNat_primes</span> <span class=\"n\">neq</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padic_q_qm_eq_m</span><span class=\"o\">,</span> <span class=\"n\">padic_q_pn_eq_0</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>I guess that these results can be used to prove similar things on products of \"powered\" primes of arbitrary size by induction.</p>",
        "id": 426170646,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1710262086
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/287929-mathlib4/topic/p-adic.20valuation.20of.20product.20of.20powered.20prime.20numbers/near/426131058\">said</a>:</p>\n<blockquote>\n<p>When working with the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>-adic valuation you might also want to inspect <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsDedekindDomain.HeightOneSpectrum.valuation#doc\">docs#IsDedekindDomain.HeightOneSpectrum.valuation</a>, that benefits of the full valuation API in Mathlib.</p>\n</blockquote>\n<p>Indeed, I think it can be useful. However, it's getting too abstract for me...</p>",
        "id": 426170885,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1710262153
    },
    {
        "content": "<p>You did not use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=padicValNat.prime_pow#doc\">docs#padicValNat.prime_pow</a>, which gives you one of the <code>have</code>s for free.</p>",
        "id": 426189410,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1710268275
    },
    {
        "content": "<p>Oh! Indeed, I was too focus on <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=padicValNat.pow#doc\">docs#padicValNat.pow</a>. Thank you for noticing.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">prod_pow_primes_left</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">neq</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.mul</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">padic_p_qm_eq_0</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">^</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.pow</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">Nat.Prime.ne_zero</span> <span class=\"n\">hq.elim</span><span class=\"o\">),</span> <span class=\"n\">padicValNat_primes</span> <span class=\"n\">neq</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.prime_pow</span><span class=\"o\">,</span> <span class=\"n\">padic_p_qm_eq_0</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">prod_pow_primes_right</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">p.Prime</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hq</span> <span class=\"o\">:</span> <span class=\"n\">Fact</span> <span class=\"n\">q.Prime</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">neq</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">≠</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.mul</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">(</span><span class=\"n\">NeZero.ne'</span> <span class=\"o\">(</span><span class=\"n\">q</span><span class=\"bp\">^</span><span class=\"n\">m</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">]</span>\n  <span class=\"k\">have</span> <span class=\"n\">padic_q_pn_eq_0</span> <span class=\"o\">:</span> <span class=\"n\">padicValNat</span> <span class=\"n\">q</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.pow</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">Nat.Prime.ne_zero</span> <span class=\"n\">hp.elim</span><span class=\"o\">),</span> <span class=\"n\">padicValNat_primes</span> <span class=\"n\">neq</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">padicValNat.prime_pow</span><span class=\"o\">,</span> <span class=\"n\">padic_q_pn_eq_0</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 426192825,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1710269565
    }
]