[
    {
        "content": "<p>Is Mathlib4 built into Lean 4, or no? If not, how do I get it?</p>\n<p>Do I have to manually import everything I use? That seems kind of tedious. Is there a way I can just import all of Mathlib 4 and start messing around with it?</p>\n<p>P.S. I tried importing a command and it didn't work. What do I do?</p>",
        "id": 434484441,
        "sender_full_name": "Ryan Buchanan",
        "timestamp": 1713603773
    },
    {
        "content": "<p>mathlib is not bundled with Lean. You can create a project with a dependency on mathlib by following the instructions at <a href=\"https://leanprover-community.github.io/install/project.html#creating-a-lean-project\">https://leanprover-community.github.io/install/project.html#creating-a-lean-project</a>. Once you have that set up, you can import all of mathlib at once by using <code>import Mathlib</code>.</p>",
        "id": 434486249,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1713605645
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260921\">Markus Himmel</span> <a href=\"#narrow/stream/287929-mathlib4/topic/N00b.20question/near/434486249\">said</a>:</p>\n<blockquote>\n<p>mathlib is not bundled with Lean. You can create a project with a dependency on mathlib by following the instructions at <a href=\"https://leanprover-community.github.io/install/project.html#creating-a-lean-project\">https://leanprover-community.github.io/install/project.html#creating-a-lean-project</a>. Once you have that set up, you can import all of mathlib at once by using <code>import Mathlib</code>.</p>\n</blockquote>\n<p>Thanks! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 434486796,
        "sender_full_name": "Ryan Buchanan",
        "timestamp": 1713606243
    },
    {
        "content": "<p><code>lake +leanprover/lean4:nightly-2023-02-04 new my_project math</code> should probably be updated.</p>",
        "id": 434487941,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1713607513
    },
    {
        "content": "<blockquote>\n<p>Do not worry about the date in the previous command, it ensures you will use a sufficiently recent version of <code>lake</code> but has no impact on the version of <code>lean</code> your project will use.</p>\n</blockquote>\n<p>As I understand it this is a workaround for <code>lake</code> outside a directory defaulting to whatever the user has configured (usually <code>stable</code> which is potentially a very old stable), so asking for any specific version of <code>lake</code> helps ensure reproducibility</p>",
        "id": 434499514,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713618276
    },
    {
        "content": "<p>So we don't actually need to bump the date most of the time; the main reason to do so is if <code>lake new</code> changes behavior (but I'm sure it has since last year)</p>",
        "id": 434499614,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713618364
    },
    {
        "content": "<p>Isn't <code>lake</code> smart enough to figure out a good version if a new user hasn't configured any specific version on their own?</p>",
        "id": 434524474,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1713638055
    },
    {
        "content": "<p>The issue is that someone who set up <code>lake</code> a year ago  quite possibly <em>has</em> configured a specific version on their own, they just don't know this, and it's a really old and bad version from when the ecosystem was far less stable.</p>",
        "id": 434524547,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713638159
    },
    {
        "content": "<p>When I read that line while setting up lean, the random nightly tag looked weird and outdated, so I ended up dropping it, and it worked fine. I would expect <code>stable</code> to point to a reasonably recent and working version, which could be updated without changing every documentation.</p>",
        "id": 434526263,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1713639779
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"654733\">@Markus Schmaus</span> do you expect <code>lake new</code> to work without an internet connection?</p>",
        "id": 434530939,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713644338
    },
    {
        "content": "<p>if yes, then you have to consider the possibility that the user has <code>stable</code> installed but it's very old</p>",
        "id": 434530958,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1713644361
    },
    {
        "content": "<p>If I have an internet connection I would expect <code>lake</code> to figure out the correct version for me.</p>\n<p>I'm not so sure what I would expect without internet connection. Probably that <code>lake</code> uses the best version it can find locally, but displays a warning. How does specifying an old nightly help in that case?</p>",
        "id": 434535186,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1713648593
    },
    {
        "content": "<p>I think it would be reasonable that (by default) lake checks for updates and updates the toolchains <code>stable</code> or <code>nightly</code> if they are used (and if the internet connection works). Is that even possible?</p>\n<p>I believe currently it's reasonable to always call</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elan</span> <span class=\"n\">toolchain</span> <span class=\"n\">update</span> <span class=\"n\">stable</span>\n<span class=\"n\">lake</span> <span class=\"n\">new</span> <span class=\"bp\">...</span>\n</code></pre></div>\n<p>(or aomething very similar). Would that work for the mathlib docs, too?</p>",
        "id": 434571916,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1713689032
    },
    {
        "content": "<p>But what if you have a version of <code>lake</code> that doesn't do that yet?</p>",
        "id": 434572263,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713689374
    },
    {
        "content": "<p>But that's <code>elan</code> not <code>lake</code>, and <code>elan</code> is able to update itself since almost forever, isn't it?</p>\n<p>(I havent actually looked into that, so I might be wrong)</p>",
        "id": 434573881,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1713690904
    }
]