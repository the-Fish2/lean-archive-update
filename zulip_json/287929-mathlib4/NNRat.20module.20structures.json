[
    {
        "content": "<p>It looks like in the 11 weeks between <a href=\"https://github.com/leanprover-community/mathlib4/pull/9951\">#9951</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/11203\">#11203</a> we had instModuleNNRatOfRat in Mathlib.Algebra.Module.Basic, so for example we could synthesize <code>Module ℚ≥0 ℝ</code>.  Is there an obstruction to restoring it?</p>",
        "id": 445956631,
        "sender_full_name": "Scott Carnahan",
        "timestamp": 1718918891
    },
    {
        "content": "<p>Does</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"bp\">#</span><span class=\"n\">synth</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"w\"> </span><span class=\"n\">ℚ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">ℝ</span>\n</code></pre></div>\n<p>not work?</p>",
        "id": 445958153,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718919717
    },
    {
        "content": "<p>It does not</p>",
        "id": 445960546,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718920905
    },
    {
        "content": "<p>Nor does</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">variable</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">F</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Field</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">CharZero</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span>\n\n<span class=\"bp\">#</span><span class=\"n\">synth</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"w\"> </span><span class=\"n\">ℚ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">F</span>\n</code></pre></div>",
        "id": 445960654,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718920947
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=NNRat.instDistribSMul#doc\">docs#NNRat.instDistribSMul</a> exists</p>",
        "id": 445960755,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718921000
    },
    {
        "content": "<p>I think this was probably dropped by accident</p>",
        "id": 445960808,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718921035
    },
    {
        "content": "<p>The previous</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"sd\">/-- A `Module` over `ℚ` restricts to a `Module` over `ℚ≥0`. -/</span>\n<span class=\"kn\">instance</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Module</span><span class=\"w\"> </span><span class=\"n\">ℚ</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"w\"> </span><span class=\"n\">NNRat</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"o\">:=</span>\n<span class=\"w\">  </span><span class=\"n\">Module</span><span class=\"bp\">.</span><span class=\"n\">compHom</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"w\"> </span><span class=\"n\">NNRat</span><span class=\"bp\">.</span><span class=\"n\">coeHom</span>\n</code></pre></div>\n<p>was deleted deliberately, but it seems we forgot to replace it with a new one</p>",
        "id": 445960990,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718921115
    },
    {
        "content": "<p>Ah okay, it must be part of the stuff that I have in APAP but didn't PR yet</p>",
        "id": 445993562,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718939827
    },
    {
        "content": "<p>Is the intent to replace it with <a href=\"https://github.com/YaelDillies/LeanAPAP/blob/master/LeanAPAP/Mathlib/Algebra/Algebra/Basic.lean#L11-L14\">https://github.com/YaelDillies/LeanAPAP/blob/master/LeanAPAP/Mathlib/Algebra/Algebra/Basic.lean#L11-L14</a>?</p>\n<p>This came up when I was testing Scott's suggestion for <a href=\"https://github.com/leanprover-community/mathlib4/pull/13585\">https://github.com/leanprover-community/mathlib4/pull/13585</a>.</p>",
        "id": 446002206,
        "sender_full_name": "Herman Chau",
        "timestamp": 1718944431
    },
    {
        "content": "<p>Yes exactly</p>",
        "id": 446009410,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718948732
    },
    {
        "content": "<p>I can PR it Soon<span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span> if you need it</p>",
        "id": 446009518,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718948828
    },
    {
        "content": "<p>That would be great! I don't need it urgently but would like to merge the PR <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 446012099,
        "sender_full_name": "Herman Chau",
        "timestamp": 1718950218
    }
]