[
    {
        "content": "<p>I have a problem where the notation <code>≌</code> has two possible interpretations, either equivalence of categories or equivalence in terms of some (other) bicategory structure. Is there a way I can give preference to the latter? Maybe at the top of the file? The notation for equivalence in terms bicategories is defined using <code>scoped infixr</code>, could this be helpful?</p>\n<p>Here is my specific situation:<br>\nI have defined the bicategory <code>FiberCat S</code> of fibered categories over a base <code>S</code>. This lets me use the notation <code>≌</code> to denote equivalence in the sense of the bicategory structure. An object <code>C : FiberCat S</code> consists of a category <code>C.carrier : Type _</code> and a functor <code>C.carrier ⥤ S</code>. Now, I have also equipped the type <code>FiberCat S</code> with a <code>CoeToSort</code> instance sending <code>C : FiberCat S</code> to <code>C.carrier : Type _</code>.  Because of this (I think) <code>≌</code> can also denote an equivalence of underlying categories <code>C.carrier</code>. I would like to give preference for <code>≌</code> to denote equivalence in the sense of the bicategory structure, is this possible? Or will I have to remove the <code>CoeToSort</code> instance?</p>",
        "id": 432780125,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1712866368
    },
    {
        "content": "<p>Does using <code>(priority := high)</code> work?</p>",
        "id": 432783940,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712868031
    },
    {
        "content": "<p>(or is it <code>prio := </code>?)</p>",
        "id": 432783956,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712868040
    },
    {
        "content": "<p>I would get rid of that coercion</p>",
        "id": 432784081,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712868112
    },
    {
        "content": "<p>I feel like it’s likely to cause other similar issues elsewhere.</p>",
        "id": 432784175,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712868140
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Notation.20clash.20for.20.60.E2.89.8C.60/near/432783940\">said</a>:</p>\n<blockquote>\n<p>Does using <code>(priority := high)</code> work?</p>\n</blockquote>\n<p>You mean next to the <code>bicategory</code> instance?</p>",
        "id": 432784951,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1712868518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132603\">Calle Sönne</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Notation.20clash.20for.20.60.E2.89.8C.60/near/432784951\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Notation.20clash.20for.20.60.E2.89.8C.60/near/432783940\">said</a>:</p>\n<blockquote>\n<p>Does using <code>(priority := high)</code> work?</p>\n</blockquote>\n<p>You mean next to the <code>bicategory</code> instance?</p>\n</blockquote>\n<p>Okay I figured out where to put it in the <code>scoped infixr</code> expression, and it works :)</p>",
        "id": 432786247,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1712869099
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 432786318,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1712869134
    },
    {
        "content": "<p>Yes, I meant on the notation</p>",
        "id": 432786514,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712869210
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Notation.20clash.20for.20.60.E2.89.8C.60/near/432784175\">said</a>:</p>\n<blockquote>\n<p>I feel like it’s likely to cause other similar issues elsewhere.</p>\n</blockquote>\n<p>After the next issue I run into, I will delete it ;)</p>",
        "id": 432786570,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1712869232
    },
    {
        "content": "<p>If <code>X Y : C</code>, what does <code>X \\hom Y</code> mean?</p>",
        "id": 432786648,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712869267
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Notation.20clash.20for.20.60.E2.89.8C.60/near/432786648\">said</a>:</p>\n<blockquote>\n<p>If <code>X Y : C</code>, what does <code>X \\hom Y</code> mean?</p>\n</blockquote>\n<p>hom within the category <code>C</code></p>",
        "id": 432786864,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1712869349
    },
    {
        "content": "<p>Isn't <code>C</code> also a bicategory?</p>",
        "id": 432786899,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712869363
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Notation.20clash.20for.20.60.E2.89.8C.60/near/432786899\">said</a>:</p>\n<blockquote>\n<p>Isn't <code>C</code> also a bicategory?</p>\n</blockquote>\n<p>Oh I meant that <code>FiberedCat S</code> is a bicategory. So the bicategory of fibered categories.</p>",
        "id": 432786948,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1712869389
    },
    {
        "content": "<p>Oh so I'm confused why using <code>\\backcong</code> causes issues...</p>",
        "id": 432786989,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712869407
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Notation.20clash.20for.20.60.E2.89.8C.60/near/432786989\">said</a>:</p>\n<blockquote>\n<p>Oh so I'm confused why using <code>\\backcong</code> causes issues...</p>\n</blockquote>\n<p>I think its because if I have <code>C D : FiberedCat S</code>, then <code>C \\backcong D</code> could either mean <code>C.carrier \\backcong D.carrier</code> or <code>C \\backcong D</code>, meaning an equivalence in the bicategory structure on <code>FiberedCat S</code>. (Or maybe you are not confused about this part)</p>",
        "id": 432787206,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1712869494
    },
    {
        "content": "<p>Aha I see now.</p>",
        "id": 432787531,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712869631
    },
    {
        "content": "<p>I still think that the coercion is problematic because there's more notation that's shared between the category theory library and stuff internal to a bicategory (I think whiskering is another example). If writing <code>C.carrier</code> is too much I would suggest renaming it <code>C.cat</code> or something like that.</p>",
        "id": 432787841,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712869754
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Notation.20clash.20for.20.60.E2.89.8C.60/near/432787841\">said</a>:</p>\n<blockquote>\n<p>I still think that the coercion is problematic because there's more notation that's shared between the category theory library and stuff internal to a bicategory (I think whiskering is another example). If writing <code>C.carrier</code> is too much I would suggest renaming it <code>C.cat</code> or something like that.</p>\n</blockquote>\n<p>Yeah I think you are right, I was more just curious about the next time it would break. And <code>C.cat</code> is a good suggestion, way less painful than <code>C.carrier</code>!</p>",
        "id": 432788221,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1712869923
    }
]