[
    {
        "content": "<p>Is there code for the filter generated by cocountable sets, e.g. similar to Order/Filter/Cofinite? I could add some more results to Topology/Compactness/Lindelof (see <a href=\"https://github.com/leanprover-community/mathlib4/pull/9107\">#9107</a>, I have some follow-up PR's ready) if this was implemented; so I'm happy to add it if necessary!</p>",
        "id": 409699987,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1703322089
    },
    {
        "content": "<p>Try in stream <a class=\"stream\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F\">#Is there code for X?</a> !</p>",
        "id": 409700402,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703322352
    },
    {
        "content": "<p>But also the answer is no</p>",
        "id": 409700456,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703322371
    },
    {
        "content": "<p>Sorry, wrong channel. Do you think it is okay if I write a small section on this similar to Order/Filter/Cofinite?</p>",
        "id": 409701172,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1703322989
    },
    {
        "content": "<p>Maybe! Is it meaningful mathematically?</p>",
        "id": 409701235,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703323076
    },
    {
        "content": "<p>It would be a good tool to conclude e.g. that countable discrete spaces are Lindelöf spaces, in a similar way to how cofinite filters are used to show that finite discrete spaces are compact</p>",
        "id": 409701388,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1703323185
    },
    {
        "content": "<p>Then sure go for it!</p>",
        "id": 409701496,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1703323261
    },
    {
        "content": "<p>Another application of the cocountable filter: prove <code>NeBot (nhds x ⊓ cocountable)</code> (e.g., if <code>x</code> is a non-isolated point in a complete metric space), a.k.a. <code>∀ s ∈ nhds x, Uncountable s</code>.</p>",
        "id": 409723577,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703343679
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Cocountable.20filter/near/409723577\">said</a>:</p>\n<blockquote>\n<p>Another application of the cocountable filter: prove <code>NeBot (nhds x ⊓ cocountable)</code> (e.g., if <code>x</code> is a non-isolated point in a complete metric space), a.k.a. <code>∀ s ∈ nhds x, Uncountable s</code>.</p>\n</blockquote>\n<p>That’s a good one to add, do you know if it is already in mathlib somewhere? Otherwise I’m happy to try and add it at some point! I’ll probably make a PR for Filter.Cocountable after Christmas, or I could try to squeeze in a smaller one today; I have formalized some 10-20 results I guess…</p>",
        "id": 409724839,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1703344542
    },
    {
        "content": "<p>You can open a PR with existing lemmas, then we'll either merge it and add more later, or add lemmas to it before merging. Anyway, it will be visible already.</p>",
        "id": 409742368,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1703359011
    },
    {
        "content": "<p>I’ll wait with the cocountable one until the Uncountable one has merged, because some fundamental components would have to be refactored. I’ll try and squeeze in the PR for Uncountable somewhere the coming days!</p>",
        "id": 409745929,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1703362359
    },
    {
        "content": "<p>I’d have to replace my usage of \\not Countable by Uncountable everywhere, better to not have an intermediate version floating around</p>",
        "id": 409745969,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1703362422
    }
]