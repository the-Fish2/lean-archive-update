[
    {
        "content": "<p>Can someone explain the role of the step <code>Verify lake exe shake works</code> in CI? Currently, this step works fine, and gives suggestions that we should shake things, but this is not a hard error. Should we turn it into an error and require the shaking step to have no output? Otherwise, I'm not sure I can see the point.</p>",
        "id": 419792814,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1707124331
    },
    {
        "content": "<p>Where do you see that? I get a \"check for unused imports\" step that does fail on unused imports</p>",
        "id": 419793806,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707124662
    },
    {
        "content": "<p>It's in the build step, see for instance <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7781744141/job/21216749769\">https://github.com/leanprover-community/mathlib4/actions/runs/7781744141/job/21216749769</a></p>",
        "id": 419794886,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1707125001
    },
    {
        "content": "<p>You'll need to merge to pick up <a href=\"https://github.com/leanprover-community/mathlib4/pull/9751\">#9751</a></p>",
        "id": 419795253,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707125136
    },
    {
        "content": "<p>PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/8887\">#8887</a> has a false <code>lake exe shake</code> error saying <code>Mathlib.Data.List.OfFn</code> should be removed from file GodelBetaFunction.lean, but removing it causes an error. See image attached. Can I suppress this error?<br>\n<a href=\"/user_uploads/3121/ahkmRamwuapjaGkUlLwqYOmv/Missing-import-bug.png\">Missing-import-bug.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ahkmRamwuapjaGkUlLwqYOmv/Missing-import-bug.png\" title=\"Missing-import-bug.png\"><img src=\"/user_uploads/3121/ahkmRamwuapjaGkUlLwqYOmv/Missing-import-bug.png\"></a></div>",
        "id": 423234826,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1708839668
    },
    {
        "content": "<p>Yes you can, and your first screenshot says how</p>",
        "id": 423241147,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708846900
    },
    {
        "content": "<p>But I wonder why it didn't catch the dependency</p>",
        "id": 423241204,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708846930
    },
    {
        "content": "<p>First try if the proof goes through if you remove that lemma from the <code>simpa</code> call</p>",
        "id": 423241255,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1708846999
    },
    {
        "content": "<p>Good advice--the lemma was not even used.</p>",
        "id": 423299961,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1708903230
    },
    {
        "content": "<p>This thread might be interested in this bug: <a href=\"https://github.com/leanprover-community/mathlib4/pull/11554\">#11554</a>. It seems similar to what Hunter reported.</p>",
        "id": 428031180,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1710976728
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"282271\">@Bolton Bailey</span> Shake has known false positive situations, this is expected. In this case you should follow the instructions it provides on the warning and use <code>lake exe shake --update</code> to update the <code>noshake.json</code> file</p>",
        "id": 428044824,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710986161
    },
    {
        "content": "<p>In this case the issue is most likely that <code>simp</code> is using a dsimp lemma, these leave no trace in the proof term</p>",
        "id": 428045004,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710986339
    },
    {
        "content": "<p>One way we could address this kind of issue is to move dsimp rfl lemmas into <code>*.Defs</code> files. This seems more consistent anyway given that we often mark definitions as <code>@[simp]</code></p>",
        "id": 428045160,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1710986450
    }
]