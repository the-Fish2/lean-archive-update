[
    {
        "content": "<p>Why in <code>val_cast_of_lt</code> is <code>[NeZero n]</code> needed?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">val_cast_of_lt</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NeZero</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Nat.mod_eq_of_lt</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>I can see that if I remove it, there is an error on <code>(a : Fin n)</code>, however isn't <code>NeZero n</code> implied by <code>a &lt; n</code>? Is there no way to craft this instance in the signature of this theorem?</p>",
        "id": 426425004,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1710363311
    },
    {
        "content": "<p>Whoops, meant to post this in <a class=\"stream\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4\">#mathlib4</a></p>",
        "id": 426430850,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1710365876
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kn\">open</span> <span class=\"n\">Nat</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">val_cast_of_lt</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">NeZero</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"o\">⟨(</span><span class=\"n\">pos_of_gt</span> <span class=\"n\">h</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Fin</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Nat.mod_eq_of_lt</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>Not sure that's better</p>",
        "id": 426431017,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1710365944
    },
    {
        "content": "<p>I see. It's not visually better, but it's nice to not have it require the instance when using <code>val_cast_of_lt</code>.</p>",
        "id": 426432303,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1710366579
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/val_cast_of_lt\">#lean4 &gt; val_cast_of_lt</a> by <span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span>.</p>",
        "id": 426765882,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710516072
    }
]