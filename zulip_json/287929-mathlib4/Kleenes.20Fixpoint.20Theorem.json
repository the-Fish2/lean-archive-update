[
    {
        "content": "<p>I am interested in formalizing fixpoint theorems and have previous so formalized cousot-cousots fixed point theorem in Mathlib. But I struggle a bit to grasp what the state of the closely related kleenes fixed point theorem is in Mathlib4.</p>\n<p>Kleenes Fixed Point theorem says: Given a cpo and a continuos function f, the least fixed point of f is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>sup</mi><mo>⁡</mo><mo stretchy=\"false\">{</mo><msup><mi>f</mi><mi>n</mi></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">⊥</mi><mo stretchy=\"false\">)</mo><mo>∣</mo><mi>n</mi><mo>∈</mo><mi>N</mi><mi>a</mi><mi>t</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\sup \\{ f^n(\\bot) \\mid n \\in Nat \\} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">sup</span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">⊥</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">}</span></span></span></span></p>\n<p>It seems that this fixed point theorem was implemented for the <code>Part</code> domain in <code>Mathlib.Control.LawfulFix</code>, but no general theorem has been provided yet. Is that correct? Is it then worth it to do this myself?</p>",
        "id": 438294121,
        "sender_full_name": "Ira Fesefeldt",
        "timestamp": 1715585881
    },
    {
        "content": "<p>That sounds right, yes</p>",
        "id": 438294388,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715585965
    },
    {
        "content": "<p>Assuming I would formalize the general kleene fixpoint theorem, how would I proceed to refactor <code>Mathlib.Control.LawfulFix</code> and <code>Mathlib.Control.Fix</code>? I guess, the proofs for many theorems can be changed. But can I also remove definitions and replace them with their generic counterpart in the theorems without worrying to much? Or should I not worry about refactoring at this point?</p>",
        "id": 438354641,
        "sender_full_name": "Ira Fesefeldt",
        "timestamp": 1715604828
    },
    {
        "content": "<p>Everything under <code>Control</code> is unused. Go wild</p>",
        "id": 438360321,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715606288
    },
    {
        "content": "<p>If this version is useful for you<br>\n<a href=\"https://github.com/madvorak/fecssk/blob/d7fe3aaa462c7a5cb30a0e35ec6f2973dff0d57b/Fecssk/Class03.lean#L131\">https://github.com/madvorak/fecssk/blob/d7fe3aaa462c7a5cb30a0e35ec6f2973dff0d57b/Fecssk/Class03.lean#L131</a><br>\nI can send you a proof (it was a homework so it is not in the public repo).</p>",
        "id": 438397280,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1715616135
    }
]