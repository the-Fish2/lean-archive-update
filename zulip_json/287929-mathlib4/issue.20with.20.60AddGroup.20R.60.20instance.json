[
    {
        "content": "<p>There are two ways how to synthesize <code>AddGroup G</code> that are not defeq under reducible transparency. It is causing me issues when using simplifier. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">NormedAddGroup.toAddGroup</span> <span class=\"o\">:</span> <span class=\"n\">AddGroup</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n  <span class=\"bp\">=</span>\n  <span class=\"o\">(</span><span class=\"n\">AddCommGroup.toAddGroup</span> <span class=\"o\">:</span> <span class=\"n\">AddGroup</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">with_reducible</span> <span class=\"n\">rfl</span>\n</code></pre></div>\n<p>The proof works with plain <code>rfl</code> but not with <code>with_reducible rfl</code>, is this expected behavior or not?</p>",
        "id": 439033455,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1715869709
    },
    {
        "content": "<p>Uh oh</p>",
        "id": 439034466,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715869997
    },
    {
        "content": "<p>What is the blocker?</p>",
        "id": 439034564,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715870035
    },
    {
        "content": "<p>I didn't investigate yet</p>",
        "id": 439034659,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1715870050
    },
    {
        "content": "<p>This is intentional <code>by with_reducible_and_instances rfl</code> works</p>",
        "id": 439036675,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715870584
    },
    {
        "content": "<p>Ohh I'm stupid <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span> hmm then I do not understand why the <code>(‚Üê withReducibleAndInstances &lt;| isDefEq x val)</code> check in simplifier fails on this. I have to investigate more.</p>",
        "id": 439037276,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1715870734
    },
    {
        "content": "<p>FWIW, I think it's easy to forget that instance projections are not reducible</p>",
        "id": 439037578,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715870809
    }
]