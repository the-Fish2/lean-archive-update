[
    {
        "content": "<p>Hi all,  this is my first attempt at contributing to mathlib4: <a href=\"https://github.com/leanprover-community/mathlib4/pull/12748/commits/ca5eee3439c47051a6603ae1393d7c2034af21c9\">https://github.com/leanprover-community/mathlib4/pull/12748/commits/ca5eee3439c47051a6603ae1393d7c2034af21c9</a></p>\n<p>I am struggling to resolve some of the <code>sorry</code>s. Specifically,</p>\n<ul>\n<li>How to convert <code>HasSum f 1</code> into <code>∑ k ∈ K, f k = 1</code>.</li>\n<li>Issues with using <code>simp</code> and <code>ring</code> with <code>↑</code> coercions (between <code>Nat</code> and <code>Finset.range (n + 1)</code>, between <code>ℝ≥0</code>, <code>ℝ≥0∞</code>, and <code>ℝ</code>, etc.).</li>\n<li>General feeling that I am doing things the \"hard way\" and am missing some slicker ways to write this proof.</li>\n</ul>\n<p>I've left comments in the file to point out where I am having trouble, but would appreciate general advice about how to streamline this proof. I think my lack of familiarity with certain lean concepts is making this much harder than it should be. Thanks in advance!</p>\n<p>To <span class=\"user-mention\" data-user-id=\"673728\">@Josha Dekker</span>: Github suggested you as a reviewer, let me know if I should assign someone else.</p>",
        "id": 437561264,
        "sender_full_name": "blfang",
        "timestamp": 1715133724
    },
    {
        "content": "<p>I’m happy to take a look at some point, but I’m a bit busy right now, so can’t guarantee it will be particularly quick. Once you get the PR to pass CI, it should automatically be on the queue, which means reviewers that can merge the PR will at some point give some feedback! You can phrase individual questions that you have as a question (e.g. in the new members stream), if you reduce them to <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>. For example, your questions about finsets or coercions can also go there!</p>",
        "id": 437577909,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1715145221
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 437578299,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1715145548
    },
    {
        "content": "<p>I've taken another brief look. I think that it would be good to split up the proof a bit more: the crucial aspect that you want to show is about <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=expSeries#doc\">docs#expSeries</a> (a certain sum over expSeries terms is again an expSeries term with different parameters), so it would be reasonable to prove this result first (see the proof above your result in the Poisson file to see where I used this expSeries before). Then, the actual result would simply involve unfolding poissonPMF, where summability of a poissonPMF has already been established in another result in that file.</p>",
        "id": 437594621,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1715153540
    },
    {
        "content": "<p>(I don’t have time to review the Lean proof in detail the coming week, but I would give this recommendation anyway, so I thought it’d be efficient to give it now!)</p>",
        "id": 437595545,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1715153942
    },
    {
        "content": "<p>I looked at it, but it was really painful. I hope Josha's suggestion will help, but the coercions really do get in the way</p>",
        "id": 437610866,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715159945
    },
    {
        "content": "<p>I'm afraid I also can't comment on whether using Finset.range is the best choice of index for the sum, as I don't know that aspect of Mathlib sufficiently well.</p>",
        "id": 437611752,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1715160311
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Convolution.20of.20Poisson.20PMFs/near/437610866\">said</a>:</p>\n<blockquote>\n<p>I looked at it, but it was really painful. I hope Josha's suggestion will help, but the coercions really do get in the way</p>\n</blockquote>\n<p>Yes, so I hope breaking it up in very small bits hopefully limits the number of coercions one needs to deal with at the same time.</p>",
        "id": 437611808,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1715160336
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"708362\">@blfang</span> , I think it would make your life easier if you work with the Binomial theorem directly (<code>add_pow</code>, <a href=\"https://github.com/leanprover-community/mathlib4/blob/8666bd82efec40b8b3a5abca02dc9b24bbdf2652/Mathlib/Data/Nat/Choose/Sum.lean#L83\">https://github.com/leanprover-community/mathlib4/blob/8666bd82efec40b8b3a5abca02dc9b24bbdf2652/Mathlib/Data/Nat/Choose/Sum.lean#L83</a>), rather than the PMF for the binomial distribution (both to reduce imports and to simplify assumptions).</p>",
        "id": 437668904,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1715180377
    },
    {
        "content": "<p>Thank you both! Will look into your suggestions and try to rewrite this in a cleaner way.</p>",
        "id": 437682533,
        "sender_full_name": "blfang",
        "timestamp": 1715184544
    }
]