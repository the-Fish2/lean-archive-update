[
    {
        "content": "<p>Hi, why do we have a file with lots of <code>attribute [gcongr]</code> instead of using <code>@[gcongr]</code> near these lemmas?</p>",
        "id": 410737676,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704127387
    },
    {
        "content": "<p>To keep the import hierarchy cleaner perhaps? If some of the lemmas are low level and we dont want to import <code>Mathlib/Tactic/GCongr.lean</code> and dependencies in those files</p>",
        "id": 410737804,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1704127487
    },
    {
        "content": "<p>Do you mean <code>import Mathlib.Tactic.GCongr.Core</code>?</p>",
        "id": 410737901,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704127553
    },
    {
        "content": "<p>It exports almost nothing.</p>",
        "id": 410737970,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704127596
    },
    {
        "content": "<p>Note that <code>Mathlib.Order.Lattice</code> imports <code>Mathlib.Tactic.GCongr.Core</code>.</p>",
        "id": 410738293,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704127893
    },
    {
        "content": "<p>So, it's available in <code>Mathlib.Algebra.Order.Monoid.Lemmas</code>.</p>",
        "id": 410738412,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704127985
    },
    {
        "content": "<p>I'm going to submit a PR that moves <code>@[gcongr]</code> attributes to relevant files.</p>",
        "id": 410738440,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704128011
    },
    {
        "content": "<p>So that one can use <code>gcongr</code> without exporting linear ordered fields.</p>",
        "id": 410740361,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704129941
    },
    {
        "content": "<p>The reason I think I remember <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> mentioning is that it's to make sure the core design of what lemmas should be <code>gcongr</code> lemmas are all in one place.</p>",
        "id": 410741779,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1704131412
    },
    {
        "content": "<p>This doesn't seem to be in either the PR description or the module docstring though.</p>",
        "id": 410741803,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1704131452
    },
    {
        "content": "<p>The last discussion of this was here:<br>\n<a href=\"#narrow/stream/287929-mathlib4/topic/.60gcongr.60.20and.20.60positivity.60.20in.20.60Tactic.2ECommon.60\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/.60gcongr.60.20and.20.60positivity.60.20in.20.60Tactic.2ECommon.60</a></p>",
        "id": 410743742,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704133378
    },
    {
        "content": "<p>Kyle's summary is correct, the issue I had worried about was people wrongly tagging lemmas as <code>gcongr</code>; it seemed to me that if all the base tagging was done in a single file then people adding new lemas would be able to quickly grok the pattern of what gets tagged.</p>",
        "id": 410743825,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704133479
    },
    {
        "content": "<p>But it certainly does mess up the import hierarchy!</p>",
        "id": 410743832,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704133489
    },
    {
        "content": "<p>I don't mind if we decide today is the day to redistribute all those lemmas.  <code>gcongr</code> is now used widely enough that the whole library serves as a fairly detailed test set.</p>",
        "id": 410743866,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704133544
    },
    {
        "content": "<p>Also, if a file imports <code>GCongr.Core</code> but doesn't import <code>GCongr</code>, then it looks like <code>@[gcongr]</code> is availbale but <code>gcongr</code> doesn't work.</p>",
        "id": 410743956,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704133623
    },
    {
        "content": "<p>It would be nice, at some point, to have tooling to query the <code>gcongr</code> tagging -- maybe a user command you can run to see the list of lemmas with a certain key, maybe a linter.  (Some ideas were discussed on the other thread.). For now we could just open an issue.</p>",
        "id": 410743964,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704133626
    },
    {
        "content": "<p>What should we do about <code>Nat</code> lemmas? They have chances to go to <code>Std4</code> some day.</p>",
        "id": 410744295,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704134029
    },
    {
        "content": "<p>Actually, I hope that <code>gcongr</code> will move to Std4 some day, too.</p>",
        "id": 410747808,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704137546
    },
    {
        "content": "<p>What stops us from moving it there now? Possible instability? Dependencies? Something else?</p>",
        "id": 410747841,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704137589
    },
    {
        "content": "<p>Doesn't that imply moving <code>positivity</code> too?</p>",
        "id": 410747842,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704137590
    },
    {
        "content": "<p>Moving <code>positivity</code> looks very complicated <span aria-label=\"frowning\" class=\"emoji emoji-1f626\" role=\"img\" title=\"frowning\">:frowning:</span></p>",
        "id": 410747855,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704137611
    },
    {
        "content": "<p>We could still have a basic <code>gcongr</code> in <code>Std4</code>, it will just not be ase useful if <code>positivity</code> isn't moved.  But it would already e.g. be full-featured for <code>Nat</code> there.</p>",
        "id": 410747909,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704137645
    },
    {
        "content": "<p>Note that we don't have the algebra/order hierarchy in <code>Std4</code>, so the plan should be to move tactics and add extensions for <code>Nat</code>/<code>Int</code>.</p>",
        "id": 410747912,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704137651
    },
    {
        "content": "<p>Can it be made so that/is it already the case that <code>positivity</code> is a configurable discharger for <code>gcongr</code>?</p>",
        "id": 410747931,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704137691
    },
    {
        "content": "<p>But <code>gcongr</code> is written very generally (e.g. it works for modular arithmetic in an exactly analogous way to inequalities), so putting it in Std would let people configure it downstream for their own use cases.</p>",
        "id": 410747948,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704137721
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib.2FTactic.2FGCongr/near/410747931\">said</a>:</p>\n<blockquote>\n<p>Can it be made so that/is it already the case that <code>positivity</code> is a configurable discharger for <code>gcongr</code>?</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Tactic/GCongr.lean#L19\">https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Tactic/GCongr.lean#L19</a></p>",
        "id": 410747974,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704137761
    },
    {
        "content": "<p>Not sure how I should read this line. If I understand correctly, that makes <code>positivity</code> be the <em>only</em> possible <code>gcongr</code> discharger?</p>",
        "id": 410748073,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704137874
    },
    {
        "content": "<p><code>gcongr</code> core imports only this from mathlib:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Init.Order.Defs</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Backtrack</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Core</span>\n</code></pre></div>\n<p>and <code>Backtrack</code> is already PR'd to Std: <a href=\"https://github.com/leanprover/std4/pull/447\">std4#447</a>, and I think <code>Init.Order.Defs</code> is only used for a discharger so in principle that part could be separated out.</p>",
        "id": 410748128,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704137905
    },
    {
        "content": "<p>Can we keep the file around fully commented just as some documentation?</p>",
        "id": 410750135,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1704139148
    },
    {
        "content": "<p>As in, just say that these are done properly elsewhere but here's documentation on what makes a good/bad gcongr lemma</p>",
        "id": 410750154,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1704139170
    },
    {
        "content": "<p>I suggest that we move <code>GCongr.Core</code> to <code>GCongr</code></p>",
        "id": 410750164,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704139180
    },
    {
        "content": "<p>And move docs there.</p>",
        "id": 410750167,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704139186
    },
    {
        "content": "<p>I'm not sure I understand, what do you mean by \"move docs there\"?</p>",
        "id": 410758587,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704144000
    },
    {
        "content": "<p>I mean \"merge module docstrings of <code>GCongr</code> and <code>GCongr.Core</code> into the module docstring of the new file, expand it if needed\".</p>",
        "id": 410758719,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704144052
    },
    {
        "content": "<p>Oh -- I disagree -- the current docs of <code>GCongr.Core</code> will be suitable for the part which might eventually move to <code>Std</code>, so I think merging the docs in <code>GCongr</code> with that will lead to more work later.</p>",
        "id": 410758895,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704144130
    },
    {
        "content": "<p>OK</p>",
        "id": 410758923,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704144149
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib.2FTactic.2FGCongr/near/410747841\">said</a>:</p>\n<blockquote>\n<p>What stops us from moving it there now? Possible instability? Dependencies? Something else?</p>\n</blockquote>\n<p>Like many other tactics, <code>positivity</code> depends on Qq which is not available in Std (though all it would take to make it available is a line in the lakefile)</p>",
        "id": 410779795,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1704159835
    },
    {
        "content": "<p>I was talking about <code>gcongr</code>.</p>",
        "id": 410779864,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704159860
    },
    {
        "content": "<p>Does it depend on <code>Qq</code>?</p>",
        "id": 410779875,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704159867
    },
    {
        "content": "<p>Seemingly not</p>",
        "id": 410779997,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1704159958
    },
    {
        "content": "<p>I've got a great reason to merge <a href=\"https://github.com/leanprover-community/mathlib4/pull/9393\">#9393</a>. I was expecting <a href=\"https://github.com/leanprover-community/mathlib4/pull/9348/commits/8a2670d0af8f43df65d85cdbe026cd81afdb1e15\">https://github.com/leanprover-community/mathlib4/pull/9348/commits/8a2670d0af8f43df65d85cdbe026cd81afdb1e15</a> (or similar) to work in my PR <a href=\"https://github.com/leanprover-community/mathlib4/pull/9348\">#9348</a>:<br>\n<code>max_eq_left (sub_nonneg.mpr &lt;| by gcongr &lt;;&gt; positivity)]</code><br>\nBut it did not and I started<br>\n<a href=\"#narrow/stream/287929-mathlib4/topic/gcongr.20failure/near/410687628\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/gcongr.20failure/near/410687628</a><br>\nYury asked me to add <code>attribute [gcongr] div_le_div_of_le_of_nonneg</code>, which does work, but then I saw <a href=\"https://github.com/leanprover-community/mathlib4/pull/9393\">#9393</a> and found out that it <em>alone</em> makes the above line work in <a href=\"https://github.com/leanprover-community/mathlib4/pull/9348\">#9348</a> <em>without</em> tagging <code>div_le_div_of_le_of_nonneg</code>, which after all is a duplicate of <code>div_le_div_of_le</code></p>",
        "id": 410781540,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1704160880
    },
    {
        "content": "<p>How can I generate a <code>docs#</code> link to the following page?<br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Tactic/GCongr/Core.html\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Tactic/GCongr/Core.html</a></p>",
        "id": 410817265,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1704187445
    },
    {
        "content": "<p><a href=\"https://tqft.net/mathlib4files/Tactic/GCongr/Core\">file#Tactic/GCongr/Core</a> for the source</p>",
        "id": 410817995,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704187817
    },
    {
        "content": "<p>I have left two comments on <a href=\"https://github.com/leanprover-community/mathlib4/pull/9393\">#9393</a></p>",
        "id": 411352725,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1704454100
    },
    {
        "content": "<p>In particular the leftover <code>Nat</code> lemmas in <code>Tactic.GCongr</code> can be untagged without breaking anything else, so only the declaration of <code>positivity</code> remains</p>",
        "id": 411352958,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1704454232
    },
    {
        "content": "<p>As to where to set up <code>positivity</code> as the discharger, that is for another PR</p>",
        "id": 411354808,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1704455096
    },
    {
        "content": "<p>Had a think about it. <code>gcongr</code> is not currently used for <code>Nat</code> division anywhere in the library, but the tagged lemmas are used in plenty of places. So we should find places where we can use <code>gcongr</code> for <code>Nat</code> division and replace</p>",
        "id": 411467794,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1704509191
    },
    {
        "content": "<p>(i.e. the remaining lemmas in <code>Tactic.GCongr</code> are to be handled the same way as the ones already moved out)</p>",
        "id": 411467837,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1704509235
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> Could you please have a look?</p>",
        "id": 411655950,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704679792
    },
    {
        "content": "<p>I'll try to get to it tonight!</p>",
        "id": 411656640,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1704680259
    },
    {
        "content": "<p>I just left a few questions. <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> I'm sure you're busy, but just a friendly reminder to have a look when you get the chance.</p>",
        "id": 416950383,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1705722493
    },
    {
        "content": "<p>Will any maintainer review and merge this please?</p>",
        "id": 420175856,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1707277565
    },
    {
        "content": "<p>Looking at github comments I believe all questions have been resolved</p>",
        "id": 420175909,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1707277609
    }
]