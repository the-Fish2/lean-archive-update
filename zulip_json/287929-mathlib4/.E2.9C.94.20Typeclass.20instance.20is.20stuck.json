[
    {
        "content": "<p>I'm attempting to prove my splitting lemma, and I'm breaking it down into multiple intermediate steps, and trying to prove that the main result follows from the intermediate steps.</p>\n<p>Here's a MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.Polish</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.Polish</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.CantorScheme</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Bases</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">defs</span>\n\n<span class=\"c1\">-- Set variables:</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">tα</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">mα</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">pα</span> <span class=\"o\">:</span> <span class=\"n\">PolishSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">bα</span> <span class=\"o\">:</span> <span class=\"n\">BorelSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">tβ</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">mβ</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">pβ</span> <span class=\"o\">:</span> <span class=\"n\">PolishSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">bβ</span> <span class=\"o\">:</span> <span class=\"n\">BorelSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span>  <span class=\"o\">(</span><span class=\"n\">fcont</span> <span class=\"o\">:</span> <span class=\"n\">Continuous</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)}</span> <span class=\"o\">(</span><span class=\"n\">Fdisj</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">C₁</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">C₂</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">C₁</span> <span class=\"bp\">∩</span> <span class=\"n\">C₂</span> <span class=\"bp\">=</span> <span class=\"bp\">∅</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">Fclosed</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">C</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Filter</span> <span class=\"n\">Classical</span>\n\n<span class=\"c1\">-- Important definitions:</span>\n<span class=\"kd\">def</span> <span class=\"n\">BorelPartialSection</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">MeasurableSet</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">A.InjOn</span> <span class=\"n\">f</span>\n<span class=\"kd\">def</span> <span class=\"n\">IDual₀</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">BorelPartialSection</span> <span class=\"n\">f</span> <span class=\"n\">A</span><span class=\"bp\">ᶜ</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">IDual</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">countableGenerate</span> <span class=\"o\">(</span><span class=\"n\">IDual₀</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">I</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">A</span><span class=\"bp\">ᶜ</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">IDual</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sets</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">FBorelCover</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">⋃</span> <span class=\"n\">C</span> <span class=\"bp\">∈</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"bp\">=</span> <span class=\"n\">Set.univ</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">C</span> <span class=\"bp\">∈</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">MeasurableSet</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">BorelCover</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">⋃</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">Set.univ</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">MeasurableSet</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">IsNull</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">β</span><span class=\"o\">,</span> <span class=\"n\">FBorelCover</span> <span class=\"n\">B</span> <span class=\"n\">G</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">C</span> <span class=\"bp\">∈</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">C</span> <span class=\"bp\">∩</span> <span class=\"n\">f</span> <span class=\"bp\">⁻¹'</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">I</span> <span class=\"n\">f</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">defs</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Classical</span> <span class=\"n\">Set</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">MetricSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MetricSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">//</span> <span class=\"bp\">¬</span><span class=\"n\">IsNull</span> <span class=\"n\">f</span> <span class=\"n\">F</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s1</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s2</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">s1</span> <span class=\"bp\">≠</span> <span class=\"n\">s2</span> <span class=\"bp\">→</span> <span class=\"n\">Disjoint</span> <span class=\"n\">s1</span> <span class=\"n\">s2</span><span class=\"o\">)}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">splitting_layer</span> <span class=\"o\">{</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">f</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Hs</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">f</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hH</span> <span class=\"o\">:</span> <span class=\"n\">Hs.val</span> <span class=\"bp\">⊆</span> <span class=\"n\">H.val</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ENNReal</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">εpos</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">Hs.val</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">t1</span> <span class=\"n\">t2</span><span class=\"o\">,</span>\n  <span class=\"o\">(</span><span class=\"n\">t1</span> <span class=\"bp\">∈</span> <span class=\"n\">G.val</span> <span class=\"bp\">∧</span> <span class=\"n\">t1</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">EMetric.diam</span> <span class=\"n\">t1</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n  <span class=\"o\">(</span><span class=\"n\">t2</span> <span class=\"bp\">∈</span> <span class=\"n\">G.val</span> <span class=\"bp\">∧</span> <span class=\"n\">t2</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">EMetric.diam</span> <span class=\"n\">t2</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">))</span> <span class=\"bp\">∧</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">H.val</span><span class=\"o\">,</span> <span class=\"n\">s</span> <span class=\"bp\">∉</span> <span class=\"n\">Hs.val</span> <span class=\"bp\">→</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">G.val</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n  <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">splitting</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ENNReal</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">εpos</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">):</span> <span class=\"bp\">∃</span> <span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">H.1</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">t1</span> <span class=\"n\">t2</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">t1</span> <span class=\"bp\">∈</span> <span class=\"n\">G.1</span> <span class=\"bp\">∧</span> <span class=\"n\">t1</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">t2</span> <span class=\"bp\">∈</span> <span class=\"n\">G.1</span> <span class=\"bp\">∧</span> <span class=\"n\">t2</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">t1</span> <span class=\"bp\">≠</span> <span class=\"n\">t2</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">G.1</span><span class=\"o\">,</span> <span class=\"n\">EMetric.diam</span> <span class=\"n\">s</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">EMetric.diam</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">''</span> <span class=\"o\">(</span><span class=\"bp\">⋃</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">G.1</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">))</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span>\n    <span class=\"n\">choose</span> <span class=\"n\">G</span> <span class=\"n\">hG</span> <span class=\"n\">using</span> <span class=\"n\">splitting_layer</span> <span class=\"o\">(</span><span class=\"n\">Subset.refl</span> <span class=\"n\">H.1</span><span class=\"o\">)</span> <span class=\"n\">εpos</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>However, this is giving the error </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">MWE.lean</span><span class=\"o\">:</span><span class=\"mi\">50</span><span class=\"o\">:</span><span class=\"mi\">22</span>\n<span class=\"n\">typeclass</span> <span class=\"kd\">instance</span> <span class=\"n\">problem</span> <span class=\"n\">is</span> <span class=\"n\">stuck</span><span class=\"o\">,</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">often</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">metavariables</span>\n  <span class=\"n\">MeasurableSpace</span> <span class=\"bp\">?</span><span class=\"n\">m.6974</span>\n</code></pre></div>\n<p>I'm not sure why it doesn't know what type it would need to be a <code>MeasureableSpace</code>, as the type <code>P f</code> should contain all of that information. Any idea what I'm missing?</p>",
        "id": 427509391,
        "sender_full_name": "Connor Gordon",
        "timestamp": 1710775024
    },
    {
        "content": "<p>Update: It was mad at me for using <code>Set.Subset.refl</code> instead of <code>Finset.Subset.refl</code>...</p>",
        "id": 427558955,
        "sender_full_name": "Connor Gordon",
        "timestamp": 1710789637
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"530359\">Connor Gordon</span> has marked this topic as resolved.</p>",
        "id": 427558977,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710789646
    }
]