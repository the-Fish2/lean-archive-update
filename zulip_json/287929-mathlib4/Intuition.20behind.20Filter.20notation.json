[
    {
        "content": "<p>Can someone explain the decision behind:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">∀ᶠ</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">f.Eventually</span> <span class=\"n\">p</span>\n<span class=\"bp\">∃ᶠ</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">f.Frequently</span> <span class=\"n\">p</span>\n</code></pre></div>\n<p>Some specific points of confusion on my part:</p>\n<ul>\n<li>neither quantifier (<code>∀</code> nor <code>∃</code>) appears in the definition of either of the filter-specific symbols</li>\n<li>\"eventually\" to me sounds like there _exists_ some large enough <code>x</code> such that <code>p</code> holds, therefore implying an existential quantifier (but <code>∀ᶠ</code> is used here)</li>\n<li>\"frequently\" to me sounds like there are points arbitrarily close to wherever this filter is going, which while not sounding like a \"forall\" it also doesn't sound quite like an \"exists\".</li>\n</ul>",
        "id": 437862441,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1715277805
    },
    {
        "content": "<blockquote>\n<p>\"eventually\" to me sounds like there _exists_ some large enough <code>x</code> such that <code>p</code> holds, therefore implying an existential quantifier (but <code>∀ᶠ</code> is used here)</p>\n</blockquote>\n<p>It's not that there exists some large enough <code>x</code> such that p holds, it's that there exists a large enough <code>x</code> such that <code>p</code> <em>always</em> holds thereafter. So it's an exists-forall statement, but the sentiment is of a forall statement where you ignore the early exceptions</p>",
        "id": 437863149,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715278115
    },
    {
        "content": "<blockquote>\n<p>\"frequently\" to me sounds like there are points arbitrarily close to wherever this filter is going, which while not sounding like a \"forall\" it also doesn't sound quite like an \"exists\".</p>\n</blockquote>\n<p>Frequently has the idea of a recurrence, there is a value where p holds and then another one after that and so on; no matter how far along you go there is always another point later where p holds. Besides being the formal dual of <code>Eventually</code> which justifies the use of exists, you can also read it as \"an exists statement which is robust under ignoring early exceptions\". Formally this is a forall-exists statement</p>",
        "id": 437863440,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715278275
    },
    {
        "content": "<p>I wonder if we should put something like that explanation in the docstring</p>",
        "id": 437866906,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715279726
    },
    {
        "content": "<p>Maybe it's a bit easier to translate into ordinary language when picking a specific filter (say <code>f = atTop</code>). Then, <code>∀ᶠ x in atTop, p x</code> means \"for all <code>x</code> large enough, <code>p x</code> holds\", and <code>∃ᶠ x in atTop, p x</code> means \"there exists an arbitrarily large <code>x</code> such that <code>p x</code> holds\".</p>",
        "id": 437868248,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1715280339
    },
    {
        "content": "<p>There is a much more direct explanation. Filters are meant to be generalizes sets, and those notation directly extend the set versions. See <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.eventually_principal#doc\">docs#Filter.eventually_principal</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.frequently_principal#doc\">docs#Filter.frequently_principal</a>.</p>",
        "id": 437870510,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715281358
    },
    {
        "content": "<p>So for instance <code>(atTop : Filter Nat)</code> is meant to be “the set of very large natural numbers” and <code>∀ᶠ n in atTop, p n</code>simply reads “for every n in the set of very large natural numbers, p n”, aka “for every sufficiently large n, p n”.</p>",
        "id": 437870821,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715281506
    },
    {
        "content": "<p>All the messy stuff with nested quantifiers is implementation details. The intuition is definitely the one suggested by the notation.</p>",
        "id": 437870914,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715281557
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Intuition.20behind.20Filter.20notation/near/437870510\">said</a>:</p>\n<blockquote>\n<p>There is a much more direct explanation. Filters are meant to be generalizes sets, and those notation directly extend the set versions. See <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.eventually_principal#doc\">docs#Filter.eventually_principal</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.frequently_principal#doc\">docs#Filter.frequently_principal</a>.</p>\n</blockquote>\n<p>I saw this notion in MIL, and I'm still trying to wrap my head around it. It's very nice that the filter-specific quantifier notation matches up with the principle set. Hopefully that will help my understanding.</p>",
        "id": 437876049,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1715283943
    },
    {
        "content": "<p>One way you can uniquely identify a subset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> of a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is by listing all the sets in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">P</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal P(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> that contain <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>. A filter is just an abstraction of this notion. When people say a filter is a \"generalized set\", they are referring to this correspondence. In fact, the principal filters are precisely the filters that correspond to an actual subset of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>. All other filters aren't actually \"describing\" a subset of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, but something that acts very similarly. Another potential exercise is understanding how ultrafilters can be seen as corresponding to single element subsets.</p>",
        "id": 437882469,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1715286788
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"560559\">Richard Osborn</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Intuition.20behind.20Filter.20notation/near/437882469\">said</a>:</p>\n<blockquote>\n<p>One way you can uniquely identify a subset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> of a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is by listing all the sets in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">P</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal P(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> that contain <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>. A filter is just an abstraction of this notion. When people say a filter is a \"generalized set\", they are referring to this correspondence. In fact, the principal filters are precisely the filters that correspond to an actual subset of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>. All other filters aren't actually \"describing\" a subset of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, but something that acts very similarly. Another potential exercise is understanding how ultrafilters can be seen as corresponding to single element subsets.</p>\n</blockquote>\n<p>This is just the principal filter right?</p>",
        "id": 437882562,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1715286839
    },
    {
        "content": "<p>Whoops I see that you indeed refer to them by name in the third sentence.</p>",
        "id": 437882646,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1715286871
    },
    {
        "content": "<p>It really is worth stressing the \"Filter is a generalisation of a set\" side of things. When a student first sees a filter they focus on the set of subsets, not realising that what they should be focussing on is the \"moral intersection\" of all of these sets, for example with the neighbourhood filter on a topological space the moral intersection of all the neighbourhoods of x is \"x and all the numbers infinitely close to it\"</p>",
        "id": 438076823,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715400116
    },
    {
        "content": "<p>All this Cauchy sequence stuff was an attempt to make Newton's ideas rigorous; but that doesn't make the original pictorial ideas worthless. Similarly,  encouraging an informal understanding of filter as \"subset with magic\" gives great geometric intuition.</p>",
        "id": 438076990,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715400234
    },
    {
        "content": "<blockquote>\n<p>they should be focusing on the \"moral intersection\" of all of these sets</p>\n</blockquote>\n<p>Now I think I understand better. I wasn't sure which set to imagine for an arbitrary filter, this gives me some intuition, and it matches exactly with the principal filter as well.</p>",
        "id": 438078614,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1715402127
    },
    {
        "content": "<p>The filter is implemented as the collection of all regular sets which contain our magic set</p>",
        "id": 438082376,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715406626
    },
    {
        "content": "<p>Personally I still don't understand what people mean by that \"generalised set\" business and yet I believe I have good geometrical intuition about filters</p>",
        "id": 438083231,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715407615
    },
    {
        "content": "<p>Maybe the \"generalised set\" idea only applies to filter bases?</p>",
        "id": 438083266,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715407678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Intuition.20behind.20Filter.20notation/near/438083231\">said</a>:</p>\n<blockquote>\n<p>Personally I still understand what people mean by that \"generalised set\" business and yet I believe I have good geometrical intuition about filters</p>\n</blockquote>\n<p>Is there a \"don't\" missing there?</p>",
        "id": 438083786,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1715408375
    },
    {
        "content": "<p>Whoops, edited</p>",
        "id": 438088063,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715413282
    },
    {
        "content": "<p>It kind of reminds me of nonstandard analysis, things like \"function f is continuous iff for all points <code>y</code> infinitely close to <code>x</code>, <code>f y</code> is infinitely close to <code>f x</code>\"</p>",
        "id": 438088261,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715413508
    },
    {
        "content": "<p>nonstandard analysis is a different way of setting these things up such that being infinitely close to a point is an actual predicate so that you can read that as a real forall statement</p>",
        "id": 438088336,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715413582
    },
    {
        "content": "<p>So I'm pretty sure this \"generalized sets\" thing actually has formal content in terms of the transfer principle</p>",
        "id": 438088440,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715413699
    },
    {
        "content": "<p>Model theory provides a way to talk about this “generalized elements” (infinitesimals, ultrafilters) or “generalized sets” (filters) in a way that makes them look as a true element or a true set.  The name for them is <em>type</em>, an unfortunate collision of words. Of course, interpretations of these objects in the initial universe makes them often empty (there is no real number <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>n</mi><mo>⋅</mo><mi>ε</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 &lt; n\\cdot \\varepsilon &lt; 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">ε</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> for all integers <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n \\geq 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>) but one can consider “non standard” (“saturated”…) models where these types are <em>realized</em>.</p>\n<p>Constructions are possible by way of ultraproducts, and also by way of “spectra”. The set of 1-types in the language of rings (with parameters a given ring) corresponds to the prime spectrum of the base ring. The Stone-Cech compactification is another example of such a construction.</p>\n<p>The compactness theorem says that provable statements of first order logic are those  which are true in any model, but there are pairs of models (elementary equivalent extensions) which satisfy the same statements, and that is the content of the “transfer principles”.</p>",
        "id": 438104232,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1715428466
    },
    {
        "content": "<p>15 years ago, I <em>loved</em> non-standard analysis and all these compactness arguments. However, the reason they lost their appeal for me is that they only preserve first order sentences.</p>\n<p>Of course, you can make this behave pretty well by starting with a certain superstructure, but at some point you just want higher order things, and it's at that point that it gets very messy (e.g., distinguishing between internal and external sets, saturation principles, over/underflow, etc.).</p>\n<p>So, while they are great for simplifying all kinds of very simple kinds of analysis arguments. It feels like the locus of complexity for more sophisticated arguments just gets shifted about, rather than actually simplified. In contrast, I don't feel the same way about filters. I honestly think they are uniformly (pun intended!) simpler.</p>",
        "id": 438109589,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1715433996
    },
    {
        "content": "<p>As mathlib's limit library indicates, filters mostly enter the game via the <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.Eventually#doc\">docs#Filter.Eventually</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Filter.Frequently#doc\">docs#Filter.Frequently</a> quantifiers which shorten and clarify the formulas, without the need of enlarging the model to have new sets. Similarly, infinite/infinitesimals numbers in analysis appear via their corresponding filters, unless one wishes to play the game in full and, for example, study stability of ordinary differential equations using infinitesimals or even defining Riemann integrals using infinitesimals.</p>",
        "id": 438113160,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1715437825
    },
    {
        "content": "<p>They also enter the game via direct image and inverse image. In order to express limits you don’t need eventually or frequently. You can say “the direct image under f of the set of points close to x is contained in the set of point close to y” completely as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mo>∗</mo></msub><msub><mi mathvariant=\"script\">N</mi><mi>x</mi></msub><mo>≤</mo><msub><mi mathvariant=\"script\">N</mi><mi>y</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_*\\mathcal{N}_x \\le \\mathcal{N}_y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.14736em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1474em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.14736em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1474em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>. But indeed it is very much worth insisting of the fact that none of this involves non-standards models of anything or any fancy logic.</p>",
        "id": 438114385,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715439195
    },
    {
        "content": "<p>Indeed. I just had an undergraduate student who did a project developing the basic theory of filters and connecting the usual limit definitions to the filter counterparts. I carved a shortest path for this: and that really only involved principal filters, map, inf, and bases. There's no mention of eventually / frequently.</p>",
        "id": 438223781,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1715560851
    },
    {
        "content": "<p>I added <code>Eventually</code> and <code>Frequently</code> to the library in 2020 <a href=\"https://github.com/leanprover-community/mathlib/pull/1845\">!3#1845</a>. Mathlib had a lot of stuff by then.<br>\nAs a side effect, we have 3 ways to say that <code>s</code> belongs to a filter: <code>s ∈ f</code>, <code>f ≤ principal s</code>, and <code>Filter.Eventually f fun x =&gt; x ∈ s</code>. None of them is the <code>simp</code>-normal form, and different parts of the library prefer different spelling.</p>",
        "id": 438235458,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1715570310
    },
    {
        "content": "<p>Just to add that the \"generalized set\" intuition for filters can be made rigorous with some order theory (Exercise 9.6 in <a href=\"https://www.cambridge.org/core/books/introduction-to-lattices-and-order/946458CB6638AF86D85BA00F5787F4F4\">Davey &amp; Priestley 2002</a>): Any partially ordered set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>P</mi><mo separator=\"true\">,</mo><mo>≤</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(P, \\leq)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">)</span></span></span></span> admits a \"free completion under directed infima\", <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>P</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(P)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span></span></span></span>, which can be realized as the lattice of order-filters of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span>. The fact that this is the free completion under directed infima precisely tells you that an element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>P</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(P)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span></span></span></span> should be thought of as a \"generic way of calculating an infimum in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span>\". Filters on a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> are a special case: they are exactly order-filters of the poset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">P</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{P}(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span>, and they thus represent \"generic ways of calculating an intersection of subsets of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>\".</p>",
        "id": 438362302,
        "sender_full_name": "Sam van G",
        "timestamp": 1715606766
    },
    {
        "content": "<p>I've read that book. I should have known better <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 438388396,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715613509
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"411579\">Sam van G</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Intuition.20behind.20Filter.20notation/near/438362302\">said</a>:</p>\n<blockquote>\n<p>Just to add that the \"generalized set\" intuition for filters can be made rigorous with some order theory (Exercise 9.6 in <a href=\"https://www.cambridge.org/core/books/introduction-to-lattices-and-order/946458CB6638AF86D85BA00F5787F4F4\">Davey &amp; Priestley 2002</a>): Any partially ordered set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>P</mi><mo separator=\"true\">,</mo><mo>≤</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(P, \\leq)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">)</span></span></span></span> admits a \"free completion under directed infima\", <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>P</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(P)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span></span></span></span>, which can be realized as the lattice of order-filters of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span>. The fact that this is the free completion under directed infima precisely tells you that an element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>P</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(P)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span></span></span></span> should be thought of as a \"generic way of calculating an infimum in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span>\". Filters on a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> are a special case: they are exactly order-filters of the poset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">P</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{P}(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span>, and they thus represent \"generic ways of calculating an intersection of subsets of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>\".</p>\n</blockquote>\n<p>Ah, I've been looking for such a result, nice to have a definitive source about it.</p>",
        "id": 438444422,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1715633035
    }
]