[
    {
        "content": "<p>Do we need <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddCommGroup.PositiveCone#doc\">docs#AddCommGroup.PositiveCone</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddCommGroup.TotalPositiveCone#doc\">docs#AddCommGroup.TotalPositiveCone</a> etc?</p>",
        "id": 422945984,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708660383
    },
    {
        "content": "<p>Added by <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> as a typeclass in 2017, converted to a structure by <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> in 2021</p>",
        "id": 422946285,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708660647
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/10868\">#10868</a></p>",
        "id": 422946973,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708661151
    },
    {
        "content": "<p>I did? I'm pretty sure this was originally just a smart constructor, and someone wanted it to be a structure to make the constructor easier to use</p>",
        "id": 422947345,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708661425
    },
    {
        "content": "<p>I feel like the promotion to a structure has given this more legitimacy than it deserves</p>",
        "id": 422947394,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708661483
    },
    {
        "content": "<p>it was only ever meant as a way to construct a partially or totally ordered group using a unary \"is positive\" predicate</p>",
        "id": 422947487,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708661529
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/commit/a1c3e2defc89c1bc792cb34caf9947dd77aabd3f\">https://github.com/leanprover-community/mathlib/commit/a1c3e2defc89c1bc792cb34caf9947dd77aabd3f</a></p>",
        "id": 422949515,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708663312
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/10868\">#10868</a> keeps failing on \"get cache\". Any ideas why?</p>",
        "id": 422953822,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708666996
    },
    {
        "content": "<p>could be an import cycle?</p>",
        "id": 422953854,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708667034
    },
    {
        "content": "<p>indeed <code>Mathlib.Algebra.Order.Ring.Cone</code> imports itself</p>",
        "id": 422953932,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708667077
    },
    {
        "content": "<p><span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 422953943,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708667089
    }
]