[
    {
        "content": "<p>Dear all,</p>\n<p>I am looking for help contributing a piece of code to Mathlib: A formalization of the classic statement that holomorphic functions have primitives:</p>\n<ul>\n<li><a href=\"https://git.cplx.vm.uni-freiburg.de/kebekus/nevanlinna/src/branch/main/Nevanlinna/holomorphic.primitive.lean\">https://git.cplx.vm.uni-freiburg.de/kebekus/nevanlinna/src/branch/main/Nevanlinna/holomorphic.primitive.lean</a></li>\n</ul>\n<p>The relevant statement is 'theorem primitive_fderiv' at the bottom of the file. The statement, which is currently formulated for entire functions should clearly be generalized to functions that are holomorphic on metric balls.</p>\n<p>As anyone can see, I am a beginner. I have never contributed anything to Mathlib, and I have no idea about mathematical standards, coding standards, or submission procedures. I also have a few questions about the API design. I would appreciate it if someone more experienced could have a look and push me in the right direction.</p>\n<p>First questions:</p>\n<ul>\n<li>\n<p>Code quality: The code compiles and proves the result, but surely needs improvement. With some effort, I can compactify the code from ~600 to ~500 lines (but I still need to add documentation). I wonder about the trade-off between readability and brevity.</p>\n</li>\n<li>\n<p>API design: I wonder how many of the intermediate statements should be private, and how many should be public.</p>\n</li>\n<li>\n<p>I use partial derivatives throughout the proof. Is it a good idea to isolate partial derivatives for future use? More generally, one could think about Lie derivatives and general differential operators -- but this is a substantial project by itself.</p>\n</li>\n</ul>\n<p>Best wishes,</p>\n<p>Stefan.</p>",
        "id": 445520584,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1718780724
    },
    {
        "content": "<p>One suggestion I'd give already is that we require structuring proofs in a way that there is only one goal active at any point, by using cdots</p>",
        "id": 445529024,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718783842
    },
    {
        "content": "<p>Hi Stefan, it is very nice to see you here!</p>",
        "id": 445529093,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718783875
    },
    {
        "content": "<p>I'd like to mention that we already have a PR giving existence of primitives, in <a href=\"https://github.com/leanprover-community/mathlib4/pull/9598\">#9598</a>. How does it relate to your approach?</p>",
        "id": 445531262,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1718784457
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/First.20contribution.3A.20Primitives.20of.20holomorphic.20functions/near/445529024\">schrieb</a>:</p>\n<blockquote>\n<p>One suggestion I'd give already is that we require structuring proofs in a way that there is only one goal active at any point, by using cdots</p>\n</blockquote>\n<p>Understood, thanks.</p>",
        "id": 445592062,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1718804047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/287929-mathlib4/topic/First.20contribution.3A.20Primitives.20of.20holomorphic.20functions/near/445529093\">schrieb</a>:</p>\n<blockquote>\n<p>Hi Stefan, it is very nice to see you here!</p>\n</blockquote>\n<p>Thanks! Hoping to meet you here more often...</p>",
        "id": 445592141,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1718804071
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sébastien Gouëzel</span> <a href=\"#narrow/stream/287929-mathlib4/topic/First.20contribution.3A.20Primitives.20of.20holomorphic.20functions/near/445531262\">schrieb</a>:</p>\n<blockquote>\n<p>I'd like to mention that we already have a PR giving existence of primitives, in <a href=\"https://github.com/leanprover-community/mathlib4/pull/9598\">#9598</a>. How does it relate to your approach?</p>\n</blockquote>\n<p>It seems that <a href=\"https://github.com/AlexKontorovich\">AlexKontorovich</a> does exactly what I am doing, so my contribution-to-be is obsolete. Thanks for pointing that out!</p>\n<p>I wonder how I can proceed now.</p>\n<ul>\n<li>It seems that Alex's PR has been lying untouched since March. Is this normal or is it a sign that something has gone wrong?</li>\n<li>I am trying to write down the basic inequalities of Nevanlinna theory, and my next goal is to discuss elementary properties of harmonic functions [mean value property, relation to holomorphic functions, etc]. How should I continue to avoid writing more code that might then turn out to be obsolete?</li>\n</ul>\n<p>Best,</p>\n<p>Stefan.</p>",
        "id": 445593681,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1718804493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> Do you have time to look at the PR by Alex?</p>",
        "id": 445594242,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1718804650
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sébastien Gouëzel</span> <a href=\"#narrow/stream/287929-mathlib4/topic/First.20contribution.3A.20Primitives.20of.20holomorphic.20functions/near/445531262\">schrieb</a>:</p>\n<blockquote>\n<p>I'd like to mention that we already have a PR giving existence of primitives, in <a href=\"https://github.com/leanprover-community/mathlib4/pull/9598\">#9598</a>. How does it relate to your approach?</p>\n</blockquote>\n<p>As a follow-up question, I wonder about mathlib standards when introducing new notions. For my project, I need to introduce the Laplace operator. On the complex plane, where Nevanlinna theory takes place, this is easy to write down. For general finite-dimensional vector spaces with scalar product, I fear this is not easy at all to write down … and I would like to avoid that for now...</p>\n<p>Any help or advice is greatly appreciated.</p>\n<p>Best, Stefan.</p>",
        "id": 445594444,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1718804719
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/First.20contribution.3A.20Primitives.20of.20holomorphic.20functions/near/445594242\">schrieb</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> Do you have time to look at the PR by Alex?</p>\n</blockquote>\n<p>I skimmed over the proof briefly. Do you have a minute for a video-chat?</p>",
        "id": 445594534,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1718804743
    },
    {
        "content": "<p>To prove the existence of primitives on a star-like domain it is easier to integrate along a ray than to use two sides of a rectangle, since you can avoid separating real and imaginary parts. I have a proof using this here: <a href=\"https://github.com/vbeffara/Curvint/blob/main/Curvint/Primitive.lean\">https://github.com/vbeffara/Curvint/blob/main/Curvint/Primitive.lean</a></p>",
        "id": 445639755,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1718811082
    },
    {
        "content": "<p>To do it on a ball, another approach would be to write the function as the sum of its Taylor series and define a primitive term by term (although, managing domains of convergence and such could be a bit cumbersome).</p>",
        "id": 445640375,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1718811225
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"242586\">@Vincent Beffara</span> Thank you for your helpful comment. I was already wondering if someone was doing curve integrals. Is any of this already available in mathlib?</p>\n<p>Also, I understand that you are proving the Riemann mapping theorem? I am, of course, very interested. Is this already done and available?</p>",
        "id": 446090178,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1718978644
    },
    {
        "content": "<p>None of this is in mathlib yet ... I have a proof of the Riemann mapping theorem for connected domains in which any non-vanishing holomorphic function has a holomorphic square root, or equivalently on any domain where holomorphic functions have primitives, here <a href=\"https://github.com/vbeffara/RMT4\">https://github.com/vbeffara/RMT4</a> </p>\n<p>Of course the condition is the same as simply connected but that fact is missing. I didn't want to develop C1 contours too much because I believe C0 contour will work better eventually - but then to work with C0 contours you need something like path and homotopy lifting, which is something a few people (myself included) started but AFAIK is nowhere done in a satisfactory way.</p>",
        "id": 446243475,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1719043454
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"242586\">@Vincent Beffara</span>, we really want Riemann Mapping Theorem in Mathlib! Can I somehow provoke you into PRing small parts at a time? (At least I'll buy you a beer when you get RMT into Mathlib.) I don't see anything wrong with replacing the simply connectedness assumption in RMT by the assumption of existence of primitives while Mathlib does not have the existence of primitives in the desired form. It should be trivial to reconcile once the existence of primitives is resolved.</p>",
        "id": 446313737,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1719084408
    },
    {
        "content": "<p>The <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/winding.20number/near/392735751\">primitives question</a> is annoying, of course. I really hope it gets sorted out soon! (I was secretly hoping that the <a class=\"stream\" data-stream-id=\"423402\" href=\"/#narrow/stream/423402-PrimeNumberTheorem.2B\">#PrimeNumberTheorem+</a> project would be a sufficient impetus...)</p>",
        "id": 446313769,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1719084425
    },
    {
        "content": "<p>Also, I'm excited to hear that <span class=\"user-mention\" data-user-id=\"679664\">@Stefan Kebekus</span> is interested in contributing to complex analysis!</p>",
        "id": 446313884,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1719084493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"242586\">@Vincent Beffara</span> Thanks for your quick and helpful answer!</p>",
        "id": 446410670,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1719142724
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"373986\">Kalle Kytölä</span> <a href=\"#narrow/stream/287929-mathlib4/topic/First.20contribution.3A.20Primitives.20of.20holomorphic.20functions/near/446313884\">schrieb</a>:</p>\n<blockquote>\n<p>Also, I'm excited to hear that <span class=\"user-mention silent\" data-user-id=\"679664\">Stefan Kebekus</span> is interested in contributing to complex analysis!</p>\n</blockquote>\n<p>Thank you for the welcome! Let's see if I can be of any use…</p>",
        "id": 446410715,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1719142753
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"242586\">@Vincent Beffara</span> <span class=\"user-mention\" data-user-id=\"373986\">@Kalle Kytölä</span> <span class=\"user-mention\" data-user-id=\"110050\">@Sébastien Gouëzel</span>  Thanks for all your help. As a next step, I would like to formalize harmonic functions:</p>\n<ul>\n<li>Defining them on finite-dimensional inner-product spaces via the Laplacian</li>\n<li>Showing that (real parts of) (anti)holomorphic functions are harmonic</li>\n<li>Showing that harmonic functions on metric balls are real parts of holomorphic ones</li>\n<li>Characterize harmonic functions on $\\mathbb C$ or $\\mathbb R^2$ by their mean value properties</li>\n<li>Establish Jensen's inequality (&lt;- which is what I am really heading for)</li>\n</ul>\n<p>Are you aware of anyone doing this (…or having done that already)? Is there a group that I should join? Or someone I should be talking to?</p>\n<p>As always: Thanks &amp; Best wishes, </p>\n<p>Stefan.</p>",
        "id": 446411243,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1719143092
    },
    {
        "content": "<p>Regarding harmonicity theory in Mathlib, I wonder about two things:</p>\n<p>Should one immediately aim to characterize weakly harmonic functions by a mean value property and to show that any weakly harmonic function is actually harmonic? Maybe the proof that mean value property implies harmonicity is necessarily quite close to working with distributions / distributional derivatives? I don't know what is the status of distributions and distributional derivatives in Mathlib, but I believe <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span> would know. </p>\n<p>Does it make sense to develop a theory of subharmonic functions? One would then obtain harmonicity as: both <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>±</mo><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">\\pm u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">±</span><span class=\"mord mathnormal\">u</span></span></span></span> are subharmonic (i.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> is both sub- and superharmonic). This seems quite standard and unless I am mistaken, it might be essentially the same amount of work as harmonicity, but more general.</p>\n<p>To be clear, the above are not meant as suggestions to divert from your project, which is extremely welcome! I am just wondering out loud in the hopes that thinking about these issues helps choose the best way to get analysis in Mathlib efficiently and in good generality.</p>",
        "id": 446462937,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1719170251
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"373986\">Kalle Kytölä</span> <a href=\"#narrow/stream/287929-mathlib4/topic/First.20contribution.3A.20Primitives.20of.20holomorphic.20functions/near/446462937\">schrieb</a>:</p>\n<blockquote>\n<p>Regarding harmonicity theory in Mathlib, I wonder about two things:</p>\n<p>Should one immediately aim to characterize weakly harmonic functions by a mean value property and to show that any weakly harmonic function is actually harmonic? Maybe the proof that mean value property implies harmonicity is necessarily quite close to working with distributions / distributional derivatives? I don't know what is the status of distributions and distributional derivatives in Mathlib, but I believe <span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> would know. </p>\n<p>Does it make sense to develop a theory of subharmonic functions? One would then obtain harmonicity as: both <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>±</mo><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">\\pm u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">±</span><span class=\"mord mathnormal\">u</span></span></span></span> are subharmonic (i.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> is both sub- and superharmonic). This seems quite standard and unless I am mistaken, it might be essentially the same amount of work as harmonicity, but more general.</p>\n<p>To be clear, the above are not meant as suggestions to divert from your project, which is extremely welcome! I am just wondering out loud in the hopes that thinking about these issues helps choose the best way to get analysis in Mathlib efficiently and in good generality.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"373986\">@Kalle Kytölä</span> Message received. I understand what you are suggesting, and I can see why attraction to have this material in mathlib4. At the same time, I fear that these topica are out of scope for me -- I do not use these notions in my daily work or teaching, so I would probably not be a good person to implement that.</p>\n<p>If someone else (e.g. you) is interested in implementing (weakly) (pluri)(sub)harmonic functions, I am of course quite open to joining forces!</p>\n<p>Best,</p>\n<p>Stefan.</p>",
        "id": 446669710,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1719248846
    },
    {
        "content": "<p>I have a feeling that my message failed to convey what I genuinely meant, although I really tried to be explicit that I only wanted to share considerations and point out that for example Anatole's work on distributions may be relevant/helpful. (And the reason I wanted to share such thoughts is because I like the idea of having harmonicity in Mathlib.)</p>\n<p>I think harmonicity theory would be very welcome! I don't know of anyone else who would be doing it at the moment, which makes any contribution there even more valuable.</p>\n<p>I merely wanted to point out that planning about the right generality is worth some moments before the project. Generality is first of all valuable in the library (Sébastien's <a href=\"https://arxiv.org/pdf/2207.12742\">change of variables in integration</a> is what in my dream world Mathlib's analysis would look like, but most realistic contributions cannot and will not look anything like that). Additionally, generality can even make things easier or at the very least least not harder. (For example my thought with vague recollections was that the only thing that differs in subharmonicity theory is that it is convenient to allow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">+\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span></span></span></span> as a value, but otherwise many arguments are merely modified by changing some equalities to inequalities. And my naive recollection is that for mean value property implies harmonicity one needs to mollify and I don't know how far that is from distributional arguments then. And in both cases something could be gained from connecting to the right parts of the existing library. Anyway, if I'm for example not right that subharmonicity is a small tweak, then it could be a relatively quick refactor afterwards. I may also just be wrong! I really only wanted to encourage considering these.)</p>\n<p>Once more, I think harmonicity results would be extremely welcome. I hope you go on with the project! There are way too few analysis contributors in my opinion.</p>",
        "id": 446977114,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1719343947
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"373986\">@Kalle Kytölä</span> I have read and (hopefully!) understood your message. Thanks for taking the time to clarify your point. As a newcomer to the mathlib4 community, I value your explanation (and the highly welcoming spirit in this group). I intend to proceed with this project […and have submitted a few (trivial) PRs already].</p>\n<p>Getting all this material into Mathlib4 seems a formidable task. I should begin defining the Laplacian coordinate-freely on finite-dimensional inner product spaces. Doing this cleanly requires some fundamental work, which will take me some time…</p>",
        "id": 447424470,
        "sender_full_name": "Stefan Kebekus",
        "timestamp": 1719479191
    }
]