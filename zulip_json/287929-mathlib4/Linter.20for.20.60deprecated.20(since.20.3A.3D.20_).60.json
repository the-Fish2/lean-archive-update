[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/13678\">#13678</a>, I started to write a linter (not tested yet) that should fail on <code>@[deprecated]</code> without <code>since := </code>. I have 3 questions:</p>\n<ul>\n<li>do you think that we should enforce this (by a linter like this one)?</li>\n<li>what's a better way to deal with \"discard the case an <code>Option</code> is <code>none</code>\"? I do <code>match</code> but I would prefer to write a line that discard the <code>none</code> case, then continue with the <code>some</code> case.</li>\n<li>how do I enforce the <code>YYYY-MM-DD</code> format?</li>\n</ul>",
        "id": 443631301,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717962278
    },
    {
        "content": "<p>Re: second bullet, are you looking for something like <code>let some info := (…) | return none</code>?</p>",
        "id": 443632037,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1717962750
    },
    {
        "content": "<p>For the date format, you could try to parse such a date (e.g. with parsec) and throw an error on failure</p>",
        "id": 443637639,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717965452
    },
    {
        "content": "<p>Where do I read about parsec?</p>",
        "id": 443640494,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717966513
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Lean.Parsec#doc\">docs#Lean.Parsec</a></p>",
        "id": 443641056,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717966787
    },
    {
        "content": "<p>I’m not sure how much documentation we have. But most of the docs about the Haskell implementation should translate</p>",
        "id": 443641281,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717966856
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 443641879,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717967215
    },
    {
        "content": "<p>I had written a (partial) check for something that looks like a date <a href=\"https://github.com/leanprover-community/mathlib4/pull/10864/files#diff-395baf1c802c0b1073d7b23969ba194da74c215a3e0d2e4ca36c810a15ff294dR49-R70\">here</a>, in case it is useful.</p>",
        "id": 443642195,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1717967453
    },
    {
        "content": "<p>I don't think I have access to <code>TSyntax</code> at this stage.</p>",
        "id": 443642308,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717967538
    },
    {
        "content": "<p>Maybe <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=String.toNat%3F#doc\">docs#String.toNat?</a> can be useful?</p>",
        "id": 443644279,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1717968823
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13723\">#13723</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/13839\">#13839</a> add <code>since :=</code> dates to all <code>@[deprecated]</code>, then <a href=\"https://github.com/leanprover-community/mathlib4/pull/13678\">#13678</a> adds a linter.</p>",
        "id": 444869125,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1718462462
    }
]