[
    {
        "content": "<p>Currently Mathlib has <code>Name.getString</code>, which is poorly named. It in fact takes the last component of the name, and makes a best effort to represent this as a string:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Get the last field of a name as a string.</span>\n<span class=\"sd\">Doesn't raise an error when the last component is a numeric field. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">getString</span> <span class=\"o\">:</span> <span class=\"n\">Name</span> <span class=\"bp\">â†’</span> <span class=\"n\">String</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">str</span> <span class=\"n\">_</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">s</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">num</span> <span class=\"n\">_</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">toString</span> <span class=\"n\">n</span>\n  <span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"n\">anonymous</span> <span class=\"bp\">=&gt;</span> <span class=\"s2\">\"\"</span>\n</code></pre></div>\n<p>It is only used in the implementation of <code>@[simps]</code> and <code>@[to_additive]</code>. I'd like to rename it.</p>",
        "id": 438475390,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715646775
    },
    {
        "content": "<p><code>Name.lastComponentAsString</code>? <a href=\"https://github.com/leanprover-community/mathlib4/pull/12891\">#12891</a></p>",
        "id": 438475408,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715646785
    },
    {
        "content": "<p>or just <code>Name.lastAsString</code>?</p>",
        "id": 438475419,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715646796
    }
]