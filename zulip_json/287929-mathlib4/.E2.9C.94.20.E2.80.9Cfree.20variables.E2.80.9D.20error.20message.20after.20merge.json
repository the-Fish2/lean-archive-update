[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/6057\">#6057</a> (<a href=\"https://github.com/leanprover-community/mathlib4/tree/SMulSemiHom\">branch#SMulSemiHom</a>), things broke down after I tried to merge master.<br>\nThis is in the middle of an unsuccessful merge, hence it's hard to give the detailed example, but in the code</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">MulSemiringActionSemiHomClass</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">outParam</span> <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">)}</span> <span class=\"o\">[</span><span class=\"n\">Monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Monoid</span> <span class=\"n\">N</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">φ</span> <span class=\"o\">:</span> <span class=\"n\">outParam</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">N</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">outParam</span> <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">_</span><span class=\"o\">))</span> <span class=\"o\">[</span><span class=\"n\">Semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Semiring</span> <span class=\"n\">S</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">DistribMulAction</span> <span class=\"n\">M</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DistribMulAction</span> <span class=\"n\">N</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"kd\">extends</span>\n    <span class=\"n\">DistribMulActionSemiHomClass</span> <span class=\"n\">F</span> <span class=\"n\">φ</span> <span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">RingHomClass</span> <span class=\"n\">F</span> <span class=\"n\">R</span> <span class=\"n\">S</span>\n<span class=\"bp\">#</span><span class=\"n\">align</span> <span class=\"n\">mul_semiring_action_hom_class</span> <span class=\"n\">MulSemiringActionSemiHomClass</span>\n</code></pre></div>\n<p>that adjusts <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MulSemiringActionHomClass#doc\">docs#MulSemiringActionHomClass</a>, Lean gives me red twiddles under <code>RingHomClass F R S</code> and the error message <code>(kernel) declaration has free variables 'MulSemiringActionSemiHomClass.toRingHomClass'</code>.</p>\n<p>Does someone have any hint at what happens?</p>",
        "id": 420405954,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707379981
    },
    {
        "content": "<p>Do you need to add a <code>FunLike</code> hypothesis?</p>",
        "id": 420406270,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707380109
    },
    {
        "content": "<p>I have the impression it is related to that, indeed.<br>\nApparently (can you confirm?), in a recent version of mathlib, all these algebraic classes have a <code>FunLike</code> hypotheses embedded, and I have to adjust with that.</p>",
        "id": 420407141,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707380495
    },
    {
        "content": "<p>Yes, see <a href=\"https://github.com/leanprover-community/mathlib4/pull/8386\">#8386</a></p>",
        "id": 420408074,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1707380900
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> has marked this topic as resolved.</p>",
        "id": 420409171,
        "sender_full_name": "Notification Bot",
        "timestamp": 1707381346
    }
]