[
    {
        "content": "<p>Apparently <code>rw_assoc</code> isn't ported to Lean 4 yet, but I guess would need <code>simp_assoc</code> for lemmas like this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">CategoryTheory</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Category</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">ab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">⟶</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bc</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">⟶</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ad</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">⟶</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">de</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">⟶</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ce</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">⟶</span> <span class=\"n\">e</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">comm1</span> <span class=\"o\">:</span> <span class=\"n\">ab</span> <span class=\"bp\">≫</span> <span class=\"n\">bc</span> <span class=\"bp\">≫</span> <span class=\"n\">ce</span> <span class=\"bp\">=</span> <span class=\"n\">ad</span> <span class=\"bp\">≫</span> <span class=\"n\">de</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">cf</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">⟶</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">eg</span> <span class=\"o\">:</span> <span class=\"n\">e</span> <span class=\"bp\">⟶</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fg</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">⟶</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">comm2</span> <span class=\"o\">:</span> <span class=\"n\">ce</span> <span class=\"bp\">≫</span> <span class=\"n\">eg</span> <span class=\"bp\">=</span> <span class=\"n\">cf</span> <span class=\"bp\">≫</span> <span class=\"n\">fg</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">fh</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">⟶</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hj</span> <span class=\"o\">:</span> <span class=\"n\">h</span> <span class=\"bp\">⟶</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">gi</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"bp\">⟶</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ij</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">⟶</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">comm3</span> <span class=\"o\">:</span> <span class=\"n\">fg</span> <span class=\"bp\">≫</span> <span class=\"n\">gi</span> <span class=\"bp\">≫</span> <span class=\"n\">ij</span> <span class=\"bp\">=</span> <span class=\"n\">fh</span> <span class=\"bp\">≫</span> <span class=\"n\">hj</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">ab</span> <span class=\"bp\">≫</span> <span class=\"n\">bc</span> <span class=\"bp\">≫</span> <span class=\"n\">cf</span> <span class=\"bp\">≫</span> <span class=\"n\">fh</span> <span class=\"bp\">≫</span> <span class=\"n\">hj</span> <span class=\"bp\">=</span> <span class=\"n\">ad</span> <span class=\"bp\">≫</span> <span class=\"n\">de</span> <span class=\"bp\">≫</span> <span class=\"n\">eg</span> <span class=\"bp\">≫</span> <span class=\"n\">gi</span> <span class=\"bp\">≫</span> <span class=\"n\">ij</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- assoc_rw not ported yet</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">Category.assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">comm1</span><span class=\"o\">]</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Category.assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">congr</span> <span class=\"mi\">2</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">Category.assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">comm2</span><span class=\"o\">]</span>\n  <span class=\"n\">repeat</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Category.assoc</span><span class=\"o\">]</span>\n  <span class=\"n\">congr</span> <span class=\"mi\">1</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">comm3</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>and furthermore in my actual use case I wasn't even using category theory, everything was an R-linear map. Do we have tactics which might solve goals like this?</p>",
        "id": 419335377,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706822458
    },
    {
        "content": "<p>I know you said you weren't using category theory, but for category theory there's a conv mode <code>slice</code> tactic for reassociating</p>",
        "id": 419337062,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1706823185
    },
    {
        "content": "<p>It could be more ergonomic, but it's usable:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">ab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">⟶</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bc</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">⟶</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ad</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">⟶</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">de</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">⟶</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ce</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">⟶</span> <span class=\"n\">e</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">comm1</span> <span class=\"o\">:</span> <span class=\"n\">ab</span> <span class=\"bp\">≫</span> <span class=\"n\">bc</span> <span class=\"bp\">≫</span> <span class=\"n\">ce</span> <span class=\"bp\">=</span> <span class=\"n\">ad</span> <span class=\"bp\">≫</span> <span class=\"n\">de</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">cf</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">⟶</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">eg</span> <span class=\"o\">:</span> <span class=\"n\">e</span> <span class=\"bp\">⟶</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fg</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">⟶</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">comm2</span> <span class=\"o\">:</span> <span class=\"n\">ce</span> <span class=\"bp\">≫</span> <span class=\"n\">eg</span> <span class=\"bp\">=</span> <span class=\"n\">cf</span> <span class=\"bp\">≫</span> <span class=\"n\">fg</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">fh</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">⟶</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hj</span> <span class=\"o\">:</span> <span class=\"n\">h</span> <span class=\"bp\">⟶</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">gi</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"bp\">⟶</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ij</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">⟶</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">comm3</span> <span class=\"o\">:</span> <span class=\"n\">fg</span> <span class=\"bp\">≫</span> <span class=\"n\">gi</span> <span class=\"bp\">≫</span> <span class=\"n\">ij</span> <span class=\"bp\">=</span> <span class=\"n\">fh</span> <span class=\"bp\">≫</span> <span class=\"n\">hj</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">ab</span> <span class=\"bp\">≫</span> <span class=\"n\">bc</span> <span class=\"bp\">≫</span> <span class=\"n\">cf</span> <span class=\"bp\">≫</span> <span class=\"n\">fh</span> <span class=\"bp\">≫</span> <span class=\"n\">hj</span> <span class=\"bp\">=</span> <span class=\"n\">ad</span> <span class=\"bp\">≫</span> <span class=\"n\">de</span> <span class=\"bp\">≫</span> <span class=\"n\">eg</span> <span class=\"bp\">≫</span> <span class=\"n\">gi</span> <span class=\"bp\">≫</span> <span class=\"n\">ij</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">slice_rhs</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">comm1</span><span class=\"o\">]</span>\n  <span class=\"n\">slice_rhs</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">comm2</span><span class=\"o\">]</span>\n  <span class=\"n\">slice_rhs</span> <span class=\"mi\">4</span> <span class=\"mi\">7</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">comm3</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 419337554,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1706823389
    }
]