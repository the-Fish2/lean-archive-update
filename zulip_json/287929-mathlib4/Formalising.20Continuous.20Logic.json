[
    {
        "content": "<p>Has anyone given any thought to formalizing continuous logic? Maybe <span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> ? I'm trying to do the many-sorted case (so I can talk about dissections of unbounded spaces) but I'm rather unsure as to what to put directly in the language and what to leave to the interpretation. The single-sorted case is more reasonable but I feel less useful.</p>",
        "id": 424842293,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1709635944
    },
    {
        "content": "<p>I have indeed thought about this, and I've talked about it to some extent with James Hanson (who I don't think is on this server, but I believe is on the Isabelle Zulip). However, I don't think either of us has written any relevant code.</p>",
        "id": 424908238,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1709655934
    },
    {
        "content": "<p>Ok, well as soon as I have something halfway decent I'll write something here and we'll see.</p>",
        "id": 424908518,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1709656001
    },
    {
        "content": "<p>James's thesis contains an introduction to continuous logic - I think it includes many of the details relevant for formalization that the standard monograph introducing the subject didn't need to. <a href=\"https://people.math.wisc.edu/logic/theses/hanson.pdf\">https://people.math.wisc.edu/logic/theses/hanson.pdf</a></p>",
        "id": 424908710,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1709656051
    },
    {
        "content": "<p>If your only reason for working with the many-sorted case is to work with unbounded spaces, you might actually have an easier time instead using domains of quantification.</p>",
        "id": 424909087,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1709656146
    },
    {
        "content": "<p>Yes, the idea was to do the first order theory of Hilbert Spaces / C* algebras / ect by having one sort of each ball of radius n. What do you mean in practice by \"using domains of quantification\"?</p>",
        "id": 424911580,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1709656791
    },
    {
        "content": "<p>I might just stick to the single-sort case though</p>",
        "id": 424911702,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1709656808
    },
    {
        "content": "<p>I'm trying to find the best source for this - but the basic idea is to have a single sort which is an unbounded metric space, but every quantifier you use (actually an inf or a sup) is taken only over a particular ball.</p>",
        "id": 424912636,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1709657027
    },
    {
        "content": "<p>This is essentially the same as the many-sorted version, where each ball is a different sort, and every quantifier of course has to specify a sort it's quantifying over.</p>",
        "id": 424912853,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1709657084
    },
    {
        "content": "<p>I've also had thoughts about the many-sorted version of discrete logic that may be useful, but again, I haven't given it any real effort at a computer.</p>",
        "id": 424913249,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1709657182
    },
    {
        "content": "<p>This domains-of-quantification approach was taken waaay back in C. Ward Henson and José Iovino's \"Ultraproducts in analysis\". You may also want to take a look at this source that does an unbounded version of the logic, but it doesn't seem like the easiest approach to formalize: <a href=\"https://arxiv.org/pdf/0903.4957.pdf\">https://arxiv.org/pdf/0903.4957.pdf</a></p>",
        "id": 424914183,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1709657436
    },
    {
        "content": "<p>Ok. I'll switch to the single-sort case and see how far I can go with that, it will be a good jumping off point for anything else anyway. I did see that paper by Yaakov but it's still a variation on the many-sorted case. Thanks for the link to Hanson's thesis by the way, it looks useful even ignoring the formalization aspects</p>",
        "id": 424914626,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1709657578
    },
    {
        "content": "<p>This might betray my ignorance, but if I allow for unbounded metric spaces as structures, won't I loose the compactness theorem? The proof I know constructs the structure that satisfies the whole set of sentences as an ultraproduct, and I'm not sure (fairly confident) that the result is not necessarily a metric space at all if I allow  unbounded structures</p>",
        "id": 426101867,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1710241951
    },
    {
        "content": "<p>Right - unbounded structures don’t have the compactness theorem, unless you restrict the quantifiers or equivalently model them as a limit of separate sorts.</p>",
        "id": 426142486,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1710254919
    },
    {
        "content": "<p>These notes use the idea of an “ultraproductive theory”, which is one where structures are uniformly bounded in the ways that allow for ultraproducts and compactness, rather than putting al that directly in the definition of a metric structure. <a href=\"https://james-hanson.github.io/publications/ConLogDisLog.pdf\">https://james-hanson.github.io/publications/ConLogDisLog.pdf</a></p>",
        "id": 426142991,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1710255033
    },
    {
        "content": "<p>I'm an idiot, when I wrote that I didn't think that the same process that works for the separate sorts case (splitting up the set of sentences in a way that each subset belongs to some bounded sort, and then do the ultraproducts for each of those) works essentially the same for the bounded quantifier case. I forgot for a moment that sentences have no free variables, and I was scratching my head as to how to handle quantifier free formulas (with free variables) which wouldn't be bounded, but there aren't any! I should get checked. Thanks for the extra set of notes. Also, by now I've become convinced you are right and bounded quantifiers really are the best approach.</p>",
        "id": 426298008,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1710323925
    }
]