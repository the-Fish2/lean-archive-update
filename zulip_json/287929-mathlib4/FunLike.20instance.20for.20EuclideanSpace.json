[
    {
        "content": "<p>Should we give <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=EuclideanSpace#doc\">docs#EuclideanSpace</a> and/or <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=WithLp#doc\">docs#WithLp</a> a <code>FunLike</code> instance? Would it even be effective? As it is, it's pretty annoying to work with matrices and these types (especially around <code>Matrix.mulVec</code>) because it's hard not to break the defeq barrier of <code>EuclideanSpace 𝕜 n</code> and <code>n → 𝕜</code>.</p>",
        "id": 430181646,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1711671136
    },
    {
        "content": "<p>You can try but I believe unfolding <code>EuclideanSpace</code>/<code>WithLp</code> takes priority over looking for a <code>FunLike</code> instance, so your solution would be ineffective.</p>",
        "id": 430214260,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711696975
    },
    {
        "content": "<p>That's what I feared.</p>",
        "id": 430214306,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1711697014
    }
]