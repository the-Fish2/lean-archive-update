[
    {
        "content": "<p>This is really splitting hairs, but I think the definition of <code>Set.neg</code> in <code>Pointwise</code> is slightly wrong.  It is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- The pointwise inversion of set `s⁻¹` is defined as `{x | x⁻¹ ∈ s}` in locale `Pointwise`. It is</span>\n<span class=\"sd\">equal to `{x⁻¹ | x ∈ s}`, see `Set.image_inv`. -/</span>\n<span class=\"kd\">@[</span><span class=\"n\">to_additive</span>\n      <span class=\"s2\">\"The pointwise negation of set `-s` is defined as `{x | -x ∈ s}` in locale `Pointwise`.</span>\n<span class=\"s2\">      It is equal to `{-x | x ∈ s}`, see `Set.image_neg`.\"</span><span class=\"kd\">]</span>\n<span class=\"kn\">protected</span> <span class=\"kd\">def</span> <span class=\"n\">inv</span> <span class=\"o\">[</span><span class=\"n\">Inv</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Inv</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"n\">preimage</span> <span class=\"n\">Inv.inv</span><span class=\"o\">⟩</span>\n</code></pre></div>\n<p>but the documentation is wrong unless <code>InvolutiveNeg</code>: the documentation says image, but the definition is preimage.  This doesn't matter to me in practice, but I hit it when I tried to define some downstream lemmas in full generality.  I think the image definition is better, as it matches other definitions like <code>Set.add</code>.</p>\n<p><strong>Edit:</strong> Ah, the documentation does also say preimage, so arguably it's correct, though I still think the definition should be image.</p>",
        "id": 411701506,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1704706904
    },
    {
        "content": "<p>(This isn't blocking me, since as with everyone else I have <code>InvolutiveNeg</code> in practice.)</p>",
        "id": 411701970,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1704707062
    },
    {
        "content": "<p>I guess preimage has better defeqs. I don't know how much that matters...</p>",
        "id": 411702162,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1704707133
    },
    {
        "content": "<p>The <code>Neg / InvolutiveNeg</code> advantage is minute, so if we want to exploit meaningful defeq wins those would win.  Though mathematically the book definition is the one that works with <code>Neg</code> only.</p>",
        "id": 411702356,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1704707201
    },
    {
        "content": "<p>There is an old thread about this at <a href=\"#narrow/stream/113488-general/topic/What.20should.20set.2Ehas_inv.20do.3F/near/271643067\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/What.20should.20set.2Ehas_inv.20do.3F/near/271643067</a></p>",
        "id": 411703026,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1704707417
    },
    {
        "content": "<p>I originally argued for it to be <code>preimage</code>, but I since wrote an entire API based off the assumption it is <code>image</code>: <a href=\"https://tqft.net/mathlib4files/Data/Set/NAry\">file#Data/Set/NAry</a></p>",
        "id": 411705519,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704708238
    },
    {
        "content": "<p>It usually is! :)</p>",
        "id": 411705608,
        "sender_full_name": "Geoffrey Irving",
        "timestamp": 1704708257
    }
]