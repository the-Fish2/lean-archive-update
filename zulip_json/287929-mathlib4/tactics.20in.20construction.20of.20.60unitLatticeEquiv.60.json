[
    {
        "content": "<p>In <code>Mathlib/NumberTheory/NumberField/Units/DirichletTheorem.lean</code>, <code>unitLatticeEquiv</code> is data constructed using tactics.</p>\n<p>(I'm currently running into problems in this definition when testing fixes to typeclass caching bugs, from <a href=\"https://github.com/leanprover/lean4/pull/4119\">lean#4119</a>. I don't think that the \"data constructed from tactics\" is the real problem, but it is certainly making it scarier to identify the real problem.)</p>\n<p>Could I ask someone, perhaps <span class=\"user-mention\" data-user-id=\"488648\">@Xavier Roblot</span> (or perhaps <span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> or <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> who reviewed could suggest someone), to try to reconstruct this data \"properly\"?</p>",
        "id": 437929609,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715321263
    },
    {
        "content": "<p>Sure. Iâ€™ll take a look later today.</p>",
        "id": 437931586,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1715322840
    },
    {
        "content": "<p>I made <a href=\"https://github.com/leanprover-community/mathlib4/pull/12795\">#12795</a> but I am not sure how I can check if that helps fixing the problem.</p>",
        "id": 437936695,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1715325737
    },
    {
        "content": "<p>Can we avoid the rewrite entirely? Presumably there is a definition that turns an equality into a linear equiv, that we can compose with instead?</p>\n<p>(I think this change is going to prove orthogonal to my difficulties anyway, as I've extracted a failing typeclass search that explains the problem --- so don't take my complaining too seriously! :-)</p>",
        "id": 437943423,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715329093
    },
    {
        "content": "<p>I am available to help if there is something else to do</p>",
        "id": 437945341,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1715329932
    },
    {
        "content": "<p>I got rid of the rewrite thanks to your suggestion but I have to leave now. So Riccardo, you can take over if you want if more changes are needed. Thanks</p>",
        "id": 437945530,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1715330042
    },
    {
        "content": "<p>The definition is now in term mode. <span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> is this good enough for you?</p>",
        "id": 437945767,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1715330160
    },
    {
        "content": "<p>Beautiful, thanks!</p>",
        "id": 437947300,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715330824
    }
]