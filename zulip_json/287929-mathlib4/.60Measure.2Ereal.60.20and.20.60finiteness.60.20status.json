[
    {
        "content": "<p>This is a status question about <code>Measure.real</code> and <code>finiteness</code> of the <a href=\"https://teorth.github.io/pfr/\">PFR project</a>. I assume the answer is basically that no one has had the time to PR these to Mathlib, but I just want to make sure I'm not missing any relevant considerations.</p>\n<p>Specifically, in the PFR project, <span class=\"user-mention\" data-user-id=\"110050\">@Sébastien Gouëzel</span> introduced <code>Measure.real</code> (<a href=\"https://teorth.github.io/pfr/docs/PFR/ForMathlib/MeasureReal.html\">https://teorth.github.io/pfr/docs/PFR/ForMathlib/MeasureReal.html</a>). As far as I can tell, it worked really well in the project. I would also love to have it in Mathlib. (For example I believe I could clean up <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=FiniteMeasure#doc\">docs#FiniteMeasure</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ProbabilityMeasure#doc\">docs#ProbabilityMeasure</a> and all the related weak convergence theory quite a bit with <code>Measure.real</code>.)</p>\n<p><code>Measure.real</code> is in PFR's \"ForMathlib\" folder, so I think the intention was clear to eventually upstream this to Mathlib. It looks to me that it is as such mostly independent of anything else in Mathlib, although maybe the intention is to later refactor some other parts of Mathlib using this (aspects of probability measures at least). The only dependence seems to be the <code>finiteness</code> tactic by <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> (<a href=\"https://teorth.github.io/pfr/docs/PFR/Tactic/Finiteness.html\">https://teorth.github.io/pfr/docs/PFR/Tactic/Finiteness.html</a>), which was also a part of PFR. I obviously would also love to have that tactic in any form in Mathlib!</p>\n<p>Is there any other reason except the prerequisite <code>finiteness</code> tactic not to start PRing <code>Measure.real</code> to Mathlib? And is there any reason not to PR <code>finiteness</code> in its current form? (There are TODOs about future improvements mentioned in the <code>finiteness</code> file, but as far as I can tell, having any version of this tactic would be a lot better than having none.)</p>\n<p>(I could help slowly PR <code>Measure.real</code> if needed, but I'm far less confident about tactic PRs.)</p>",
        "id": 430408671,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1711821706
    },
    {
        "content": "<p>PRing <code>finiteness</code> is on my holiday todo list. <code>Measure.real</code> I have no plans</p>",
        "id": 430409622,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711822599
    },
    {
        "content": "<p>Note that you can just not have <code>finiteness</code> as an auto-param in the <code>Measure.real</code> API lemmas if you want to PR the latter before the former hits mathlib</p>",
        "id": 430409750,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1711822757
    },
    {
        "content": "<p>I wanted to PR <code>Measure.real</code>, but I was indeed stuck by <code>finiteness</code>. Once this is in, I'll definitely PR it!</p>",
        "id": 430414428,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1711827078
    }
]