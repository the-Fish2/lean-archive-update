[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/10765\">#10765</a> trips over a timeout in <code>Combinatorics.Additive.Energy</code>, where <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.mulEnergy_eq_card_filter#doc\">docs#Finset.mulEnergy_eq_card_filter</a> goes from <code>192815</code> heartbeats to <code>200322</code>. Looks like the problem is the lemmas <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.filter_true_of_mem#doc\">docs#Finset.filter_true_of_mem</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.filter_false_of_mem#doc\">docs#Finset.filter_false_of_mem</a> which take 1.5s each to (fail to) discharge on each application, and they're applied at least twelve times (twice by each <code>aesop</code> and <code>simp</code> call).</p>",
        "id": 438541641,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1715680820
    },
    {
        "content": "<p>I think it's a good idea to disable these simp lemmas either locally in that declaration or globally, what do you think?</p>",
        "id": 438541763,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1715680866
    },
    {
        "content": "<p>For comparison, with <code>attribute [-simp] Finset.filter_true_of_mem Finset.filter_false_of_mem</code> the heartbeat count goes to <code>9060</code> (before <a href=\"https://github.com/leanprover-community/mathlib4/pull/10765\">#10765</a>) or <code>10021</code> (after <a href=\"https://github.com/leanprover-community/mathlib4/pull/10765\">#10765</a>).</p>",
        "id": 438541981,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1715680933
    },
    {
        "content": "<p>Oh thank you for investigating! This proof gave me a lot of trouble. With your change, can you make the proofs of the subgoal just a plain <code>aesop</code> without timing out?</p>",
        "id": 438544647,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715681964
    },
    {
        "content": "<p>Yes, the last line can become <code>by aesop</code> without timing out. It is quite a bit slower though, from near-instant to a few seconds on my machine.</p>",
        "id": 438556736,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1715686607
    },
    {
        "content": "<p>Then I'm glad my effort was not wasted. Do you want to open a PR to remove the simp tags?</p>",
        "id": 438585463,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715695888
    },
    {
        "content": "<p>(I did already! :D <a href=\"https://github.com/leanprover-community/mathlib4/pull/12907\">#12907</a>)</p>",
        "id": 438603716,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1715701397
    },
    {
        "content": "<p>-400B instructions!?</p>",
        "id": 438610018,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715703383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306577\">@Matthew Ballard</span> do you want to look into the non-linted simp more? Or shall we borsify this already?</p>",
        "id": 438626782,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715709633
    },
    {
        "content": "<p>No. Let’s make the suggested change and go.</p>",
        "id": 438627226,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715709802
    },
    {
        "content": "<p>done</p>",
        "id": 438627414,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715709856
    },
    {
        "content": "<p>Despite <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.filter_empty#doc\">docs#Finset.filter_empty</a> being solvable <code>by simp</code>, it needs to be fed as an argument downstream to a <code>simp</code>...</p>",
        "id": 438637304,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715713889
    },
    {
        "content": "<p>Rebuilding locally with that now to see if there is only one such instance</p>",
        "id": 438637459,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715713948
    },
    {
        "content": "<p>It was more economical to de-simp <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Finset.filter_eq_self#doc\">docs#Finset.filter_eq_self</a></p>",
        "id": 438649665,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1715718243
    }
]