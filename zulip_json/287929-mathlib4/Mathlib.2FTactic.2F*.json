[
    {
        "content": "<blockquote>\n<p>move: new <code>Mathlib.Linter</code> dir <a href=\"https://github.com/leanprover-community/mathlib4/pull/11807\">#11807</a></p>\n</blockquote>\n<p>creates a new \"top\"-level dir <code>Mathlib/Linter</code>, with the purpose of creating a new home for linters that isn't <code>Mathlib/Tactic</code>.<br>\nWe also have a bunch of commands that are currently housed in <code>Mathlib/Tactic</code>, and in general most meta code ends up there.</p>\n<p>Should we have multiple meta-code-holding directories in <code>Mathlib/</code> or would it be preferable to have <code>Mathlib/Meta/{Command,Linter,Tactic}</code> all inside a directory <code>Mathlib/Meta/</code>?</p>",
        "id": 438088546,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715413833
    },
    {
        "content": "<p>I guess <code>Mathlib/Meta/</code> is better if we'd like it all safely quarantined away from the maths. I'm not sure that I like <code>Meta</code> anymore: it's meant to say \"this is meta-programming stuff\", but there is some danger of confusion with the TacticM/MetaM/CoreM/IO monad layers.</p>",
        "id": 438089797,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715415180
    },
    {
        "content": "<p>TBH I don't really like that choice of naming in core and think we should use <code>Meta</code> in non core projects for this</p>",
        "id": 438090008,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715415392
    },
    {
        "content": "<p>Yeah, I think it is reasonable to assume that \"no one\" has that naming scheme at front of mind, and \"meta\" short for just meta-programming is clear.</p>",
        "id": 438090049,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715415441
    },
    {
        "content": "<p>Okay but what about things like <a href=\"https://github.com/leanprover-community/mathlib4/pull/11853\">#11853</a> which are <strong>non-meta</strong>programming?</p>",
        "id": 438091151,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715416325
    },
    {
        "content": "<p>that's not in the mathlib library itself (it's a script) so it's not related</p>",
        "id": 438091407,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715416562
    },
    {
        "content": "<p>Do you believe that all programming that will ever done in mathlib will be metaprogramming?</p>",
        "id": 438091517,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715416675
    },
    {
        "content": "<p>Not really</p>",
        "id": 438092176,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715417344
    },
    {
        "content": "<p>although most programming which is not metaprogramming isn't fit for mathlib</p>",
        "id": 438092194,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715417366
    },
    {
        "content": "<p>e.g. hashmap correctness</p>",
        "id": 438092205,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715417380
    },
    {
        "content": "<p>but <code>Mathlib/Meta</code> is about metaprogramming</p>",
        "id": 438092260,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715417405
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib.2FTactic.2F*/near/438088546\">said</a>:</p>\n<blockquote>\n<p>Should we have multiple meta-code-holding directories in <code>Mathlib/</code> or would it be preferable to have <code>Mathlib/Meta/{Command,Linter,Tactic}</code> all inside a directory <code>Mathlib/Meta/</code>?</p>\n</blockquote>\n<p>I don't think it is a useful distinction (for users) to separate commands, tactics, and term elaborators, or macro vs elab. They are all lean metaprograms</p>",
        "id": 438092423,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715417550
    },
    {
        "content": "<p>Historically we have used <code>Mathlib/Tactic</code> for this broad category though; changing it to <code>Meta</code> would be a lot of churn</p>",
        "id": 438092476,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715417609
    },
    {
        "content": "<p>So, how about simply introducing <code>Mathlib/Tactic/Linter</code> and leave everything else as is?</p>",
        "id": 438092600,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1715417722
    },
    {
        "content": "<p>I also think that calling it <code>Tactic</code> or <code>Meta</code> is not especially different and would leave it as <code>Tactic</code>.</p>",
        "id": 438092809,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1715417810
    },
    {
        "content": "<p><code>Batteries</code> has three folders for metaprogramming: <code>Batteries/Tactic</code> contains metaprograms, and <code>Batteries/Util</code> contains metametaprograms - things which are useful for writing tactics. <code>Batteries/Linter</code> contains linters</p>",
        "id": 438093051,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715417989
    },
    {
        "content": "<p><code>Batteries/Tactic/Lint</code> also contains linters, but more specifically the ones you use with the <code>#lint</code> command</p>",
        "id": 438093172,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715418064
    },
    {
        "content": "<p>How about a potentially less controversial proposal: create a <em>file</em> <code>Linter.lean</code> where the linters get imported.  This file could then be imported by <code>Tactic.Basic</code> or some other early file, it could be ignored by shake and would be the starting point of all linters.</p>",
        "id": 438472740,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1715645099
    },
    {
        "content": "<p>Each linter would still have its home in <code>Mathlib.Tactic</code> (which is not such a bad place for them after all).</p>",
        "id": 438472816,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1715645152
    },
    {
        "content": "<p>Sounds good to me.</p>",
        "id": 438503805,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715664602
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12899\">#12899</a></p>",
        "id": 438527426,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1715675801
    },
    {
        "content": "<p>I think a separate linter folder is a good idea, whether it's <code>Mathlib/Linter</code> or <code>Mathlib/Tactic/Linter</code></p>",
        "id": 438531645,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715677260
    },
    {
        "content": "<p>I've thought about this thread in light of rewriting the existing style lints (in Python) in Lean. These are linters by definition (they just complain about code which is \"bad\" in some way). They add at least one more category of lints --- which makes me think using a <code>Tactic/Linters</code> directory would be useful. As I see it, after the rewrite, there are at least four kinds of lints:</p>\n<ul>\n<li>\n<p>text-based linters, which just operate on the source code of the lean file<br>\n(Checking line length or number of lines are obvious examples. Checking for the formatting of a copyright header could be another one; Lean's parsing features are certainly overkill for this.)</p>\n</li>\n<li>\n<p>style linters which operate on syntax only: the <code>setOption</code> linter in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12928\">#12928</a> is one example</p>\n</li>\n<li>syntax-based linters, which are not style linters</li>\n<li>linters using the fully elaborated environment</li>\n</ul>\n<p>Putting these all in one directory for linters will allow grouping them nicely, e.g. as <code>Linters/Style.lean</code>, <code>Linters/TextBased.lean</code> and further files for the remaining ones (whose specifics I do not strongly care about).<br>\nThe alternative, putting them all in <code>Tactic</code>, means related linters are far apart, e.g. <code>Tactic/Linters.lean</code>, <code>Tactic/StyleLinters.lean</code>, <code>Tactic/TextbasedLinters.lean</code>. That does not feel like an improvement to me.</p>\n<p>I hardly mind if there is a <code>Tactic/Linter</code> subdirectory, a top-level directory like <code>Lint</code> or <code>Meta</code> or whatever other colour for the bike-shed. I do care to have linters grouped together.</p>",
        "id": 439828044,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716300876
    },
    {
        "content": "<p>Put differently, perhaps it's useful to separate the two questions in the room. I'll be bold and make a poll to gauge the temperature - other process suggestions very welcome.</p>",
        "id": 439828192,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716300925
    },
    {
        "content": "<p>/poll Should there be a separate directory for mathlib linters?<br>\nYes, of course<br>\nNo, because...<br>\nI don't really mind</p>",
        "id": 439828353,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716300969
    },
    {
        "content": "<p><strong>Question 2.</strong> How should that directory be called and where should it live? I see many suggestions in the room here, but it's less clear to me if there's consensus on one.</p>",
        "id": 439828571,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716301060
    },
    {
        "content": "<p>In case there's a consensus on the first poll, can we e.g. go ahead with <a href=\"https://github.com/leanprover-community/mathlib4/pull/12899\">#12899</a> and postpone The Great Bikeshed for later? That PR sounds like an incremental improvement to me.</p>",
        "id": 439828741,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716301110
    },
    {
        "content": "<p>I am glad that a conclusion was reached!  I renamed the file to <code>Mathlib.Tactic.Linter</code> (note the missing <code>s</code>!) and I am waiting on CI to merge!</p>",
        "id": 440024144,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716359508
    },
    {
        "content": "<p>I'm glad <a href=\"https://github.com/leanprover-community/mathlib4/pull/12899\">#12899</a> was merged --- I just noticed that the PR I <em>actually</em> need for <a href=\"https://github.com/leanprover-community/mathlib4/pull/12928\">#12928</a> is <a href=\"https://github.com/leanprover-community/mathlib4/pull/11807\">#11807</a>. (<em>That</em> one actually creates a separate directory.) Modulo a merge conflict, <a href=\"https://github.com/leanprover-community/mathlib4/pull/11807\">#11807</a> looks good to me.</p>",
        "id": 440077887,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716379968
    }
]