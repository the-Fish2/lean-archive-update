[
    {
        "content": "<p>I've been working with <code>FiniteAdeleRing</code> recently, and much of the basic theory was written by Maria Ines, who lives in a country where the language has accents. The word \"adèle\" is consistently written with the accent in mathlib, although the corresponding declarations have no accent. For me this is slightly troublesome because I cannot by default search (or write!) mathlib docs for this word, as my keyboard has no è key.</p>\n<p>On Friday me and some other people were adding comments and docstrings to some alg geom files and I added a theorem docstring <code>/-- The localization of a formally etale map is formally etale. -/</code>. The PR is <a href=\"https://github.com/leanprover-community/mathlib4/pull/14239\">#14239</a> and Kim made the suggestion that I should be writing étale instead. In fact during the session when I was writing the docstrings I raised the issue of not being able to type accents, and Calle (whose first language contains accents) told me about a hack involving Alt Gr, which seems to be enabled  by default on Ubuntu; I've written this message using Alt-Gr ; e and Alt-Gr # e to get the accents and my personal problems are now solved with this trick. But should we be sacrificing grammatical accuracy to make doc search easier for people who don't know the hack? And if not, should the declaration be <code>FiniteAdèleRing</code>? Oh, apparently not, because this is not a valid token! OK so the remaining question is whether we should have accents in docstrings and comments. I'm pretty sure I've seen both etale and étale in the English mathematical literature so I'm not sure what to do here.</p>",
        "id": 448103417,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719744640
    },
    {
        "content": "<p>As a rule, I would prefer to keep accents, umlauts etc. in names (of people and of notions like \"étale\") in the docs.<br>\n(<span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> you should be able to define a \"compose\" key so that, e.g., &lt;compose&gt;\"o gives you ö and &lt;ompose&gt;´ e gives you é, &lt;compose&gt;,c gives you ç etc.)</p>",
        "id": 448103770,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1719744928
    },
    {
        "content": "<p>Indeed Alt-Gr is already my compose key, I just thought it was a random button on my keyboard and I had no idea what it did, I'm not sure I'd ever presed it until Friday!</p>",
        "id": 448103898,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719745038
    },
    {
        "content": "<p>&lt;compose&gt; is great for typing all kinds of special characters including math symbols, for example &lt;compose&gt;*a should give you α and it works everywhere not just in vscode. I've been using wincompose to get the same functionality on windows.</p>",
        "id": 448104208,
        "sender_full_name": "Markus Schmaus",
        "timestamp": 1719745305
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>: on Ubuntu you can type absolutely any character using Ctrl-Shift-U + the codepoint, as I explained in the reply to your recent comment</p>",
        "id": 448104261,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1719745331
    },
    {
        "content": "<p>I know -- this was the hack I knew beforehand, but doesn't this involve me having to remember a bunch of 4-digit numbers? So it is not actually useful in practice.</p>",
        "id": 448104303,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719745382
    },
    {
        "content": "<p>I use this all the time to get proper – (U+2013), … (U+2026) and all the rest</p>",
        "id": 448104312,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1719745388
    },
    {
        "content": "<p>Unfortunately I am too old to learn and remember something like this.</p>",
        "id": 448104370,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719745412
    },
    {
        "content": "<p>However I am capable of pressing Alt-Gr and then trying a random key to the right of L and then pressing e to see what kind of accent I just made on the e :-)</p>",
        "id": 448104437,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719745462
    },
    {
        "content": "<p>I believe I learned this trick when I was studying French in university and had to type the accented characters on a US-Dvorak keyboard</p>",
        "id": 448104448,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1719745470
    },
    {
        "content": "<p>Yes, in my experience the trick with learning and retaining any information is to either learn it when you're young (FLT), or to learn it when you're old and do it every day (Lean).</p>",
        "id": 448104492,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719745515
    },
    {
        "content": "<p>I am on a Qwerty keyboard, and if I do <code>setxkbmap -option compose:rwin</code> (Linux/Unix), the right \"Windows\" key becomes a \"compose\" key, and then pressing compose + \"'\" + \"e\" produces \"é\".</p>",
        "id": 448104734,
        "sender_full_name": "Joël Riou",
        "timestamp": 1719745694
    },
    {
        "content": "<p>Indeed the shortcuts for some emoji on Discord are named after their Unicode codepoints: <span aria-label=\"japanese vacancy button\" class=\"emoji emoji-1f233\" role=\"img\" title=\"japanese vacancy button\">:japanese_vacancy_button:</span> is :u7a7a:</p>",
        "id": 448104776,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1719745720
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Ad.C3.A8le.20and.20.C3.A9tale/near/448103770\">said</a>:</p>\n<blockquote>\n<p>As a rule, I would prefer to keep accents, umlauts etc. in names (of people and of notions like \"étale\") in the docs.<br>\n(<span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> you should be able to define a \"compose\" key so that, e.g., &lt;compose&gt;\"o gives you ö and &lt;ompose&gt;´ e gives you é, &lt;compose&gt;,c gives you ç etc.)</p>\n</blockquote>\n<p>I think that for any word that in the English literature usually has its accents dropped, we should go ahead and permit that in the docs! I think it's pretty rare in English to see \"adèle\"? But more common than not to see \"étale\"?</p>",
        "id": 448106733,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1719747122
    },
    {
        "content": "<p>It might be author-dependent.</p>",
        "id": 448106927,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719747258
    },
    {
        "content": "<p>Can we simply use the <code>## Tags</code> section in the docs for the unaccented versions?</p>",
        "id": 448110273,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1719749787
    },
    {
        "content": "<p>... or is the goal to find individual declarations within a file?</p>",
        "id": 448110312,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1719749825
    },
    {
        "content": "<p>In my case it was simply searching for \"finite adele\" to find the relevant file and getting 0 results.</p>",
        "id": 448111254,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719750635
    },
    {
        "content": "<p>Given that my understanding is that we don't really know what we're using tags for, this could be a great use of tags!</p>",
        "id": 448111288,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719750675
    },
    {
        "content": "<p>I remember getting hit by this issue frequently when I want to find the Bezout lemma, because the mathlib name is the un-mnemonic <code>gcd_eq_gcd_ab</code>, and the docs on the theorem only say Bézout's lemma, so grep would turn up empty for \"bezout\". (This has since been somewhat improved because there is now a file named <code>Bezout.lean</code>, and the tags on <code>Mathlib.Data.Int.GCD</code> include the unaccented version as Yaël suggests.)</p>",
        "id": 448132083,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719763264
    },
    {
        "content": "<p>It's too bad there is no vscode find in files setting for \"match up to accents\"</p>",
        "id": 448132286,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719763393
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Ad.C3.A8le.20and.20.C3.A9tale/near/448103417\">said</a>:</p>\n<blockquote>\n<p>For me this is slightly troublesome because I cannot by default search (or write!) mathlib docs for this word, as my keyboard has no è key.</p>\n</blockquote>\n<p>Doesn't lean have a robust unicode text input system already? The editor tells me you can input this using <code>\\`e</code> (although amusingly this breaks the markdown formatting so it's not immediately obvious that's what it is trying to say)</p>",
        "id": 448132606,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719763562
    },
    {
        "content": "<p><code>\\\"o</code> doesn't work for me; in fact when I type <code>\\\"</code> in VS Code a pair of <code>\"</code> will appear, and maybe that breaks things (is it due to some other extension I installed?).<br>\nI think we should make online docs search able to match up to accents (and subscripts as well), e.g. it's hard to search lemmas about Polynomial.eval₂ and Ideal.Quotient.mkₐ etc. presently.</p>",
        "id": 448136348,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1719764943
    },
    {
        "content": "<p>Whether or not this works when writing a file, does it work in the search box?</p>",
        "id": 448139921,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1719766034
    },
    {
        "content": "<p>I don't think we should compensate for people who don't want to learn how to use a keyboard.     The question would be different for names using a completely different writing system that is hard to recognize. But accents are really easy for people who already know the Latin alphabet.</p>",
        "id": 448186262,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1719788731
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Ad.C3.A8le.20and.20.C3.A9tale/near/448186262\">said</a>:</p>\n<blockquote>\n<p>accents are really easy for people who already know the Latin alphabet.</p>\n</blockquote>\n<p>I don’t think so? “Hard to recognize” is relative. If you’re a native English speaker in the U.S., you probably only occasionally encounter “é” and almost never “è”. Especially in the U.S., “é” is pretty much only ever used to accent “e”s at or near the end of words (<em>maybe</em> the middle?); “étale” and “Bézout” make no sense in English orthography and are very unexpected appearances of an accent in that context. Also, I’ve actually <em>only</em> seen “adele” in mathematical usage spelled without an accent!</p>\n<p>I would guess that “learning how to use a keyboard” does not include learning how to add diacritics for most native English speakers in the U.S. (not sure what things are like e.g. in the U.K. or in Canada), and definitely doesn’t tell you where they go, as different languages use them differently.</p>\n<p>(I say “would guess” because although I am a native English speaker from the U.S., I wouldn’t expect other people to share my interest in learning keyboard shortcuts just for the fun of it… <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span>)</p>",
        "id": 448187524,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1719789941
    },
    {
        "content": "<p>(I should clarify I’m not necessarily advocating for changing anything, but I am arguing against that <em>reason</em> for not changing anything. :) )</p>",
        "id": 448187985,
        "sender_full_name": "Thomas Murrills",
        "timestamp": 1719790336
    },
    {
        "content": "<blockquote>\n<p>I don't think we should compensate for people who don't want to learn how to use a keyboard.</p>\n</blockquote>\n<p>I think Mathlib (or just <em>things</em> in 2024 in general) should try to be as user-friendly as possible as long as it doesn't require too much extra effort. Here adding a few more tags takes 5 seconds for the author and makes it easier for the users, so I think we should actively do it (not just not not do it)</p>",
        "id": 448190388,
        "sender_full_name": "Gareth Ma",
        "timestamp": 1719792579
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Ad.C3.A8le.20and.20.C3.A9tale/near/448186262\">said</a>:</p>\n<blockquote>\n<p>I don't think we should compensate for people who don't want to learn how to use a keyboard.     The question would be different for names using a completely different writing system that is hard to recognize. But accents are really easy for people who already know the Latin alphabet.</p>\n</blockquote>\n<p>I also think that this is a bit much. As part of an anglophone education, I was never taught how to use a keyboard to add accents to latin characters, even though I studied languages that use them for years. One could reasonably argue that the world shouldn't be this way, but I don't think putting up extra barriers for mathlib users is the way to set things right, even if the barriers are small.</p>",
        "id": 448192670,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1719794647
    },
    {
        "content": "<p>Did your anglophone education include using a proof assistant?</p>",
        "id": 448192992,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1719794996
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"579936\">Gareth Ma</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Ad.C3.A8le.20and.20.C3.A9tale/near/448190388\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>I don't think we should compensate for people who don't want to learn how to use a keyboard.</p>\n</blockquote>\n<p>I think Mathlib (or just <em>things</em> in 2024 in general) should try to be as user-friendly as possible as long as it doesn't require too much extra effort. Here adding a few more tags takes 5 seconds for the author and makes it easier for the users, so I think we should actively do it (not just not not do it)</p>\n</blockquote>\n<p>Oh sure, we can add tags, and this is good.</p>",
        "id": 448193163,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1719795111
    },
    {
        "content": "<p>I am only advocating against systematically misspelling things simply because they do not come from the dominant language, especially names of persons such as Bézout.</p>",
        "id": 448193451,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1719795181
    },
    {
        "content": "<p>I agree the names should appear spelt correctly in theorem names, docs, etc. But it should be painless to search for them and autocomplete to them without having to type accents. Like millions of others, I would have to either remind myself with google or copy-paste from messages above this to add an acute/grave accent to an e.</p>",
        "id": 448194523,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1719795450
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"548935\">Thomas Murrills</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Ad.C3.A8le.20and.20.C3.A9tale/near/448187524\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Ad.C3.A8le.20and.20.C3.A9tale/near/448186262\">said</a>:</p>\n<blockquote>\n<p>accents are really easy for people who already know the Latin alphabet.</p>\n</blockquote>\n<p>I don’t think so? “Hard to recognize” is relative. If you’re a native English speaker in the U.S., you probably only occasionally encounter “é” and almost never “è”. </p>\n</blockquote>\n<p>It is still comparatively easy to recognize, even if you don’t see them often. I was comparing things to the time it takes to distinguish, say 未 and 末 if you don’t know the Chinese language so that surroundings characters don’t help.</p>",
        "id": 448194617,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1719795474
    },
    {
        "content": "<p>sure but <em>recognition</em> is not the operative skill when entering a search query, <em>recall</em> is</p>",
        "id": 448202660,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1719799653
    },
    {
        "content": "<p>Just throwing in the fact that there is some search support for ignoring diacritics. As an example, in vim you could use <code>[[=e=]]</code> which will match any of e, è, é, etc. (I'm not sure what the emacs or VSCode equivalent would be)</p>\n<p>Not perfect because you still have to know where there might be a diacritic, but maybe you could hack together something more automatic.</p>",
        "id": 448206240,
        "sender_full_name": "Chris Henson",
        "timestamp": 1719801309
    },
    {
        "content": "<p>How hard will it be in practice to make search work in spite of this category of spelling mistakes? In terms of equality this is simply \"flattening\" accents, so the question is what is exposed in the search API.</p>",
        "id": 448226049,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1719811776
    }
]