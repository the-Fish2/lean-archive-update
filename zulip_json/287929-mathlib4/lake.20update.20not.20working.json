[
    {
        "content": "<p>In light of the recent change from Std to Batteries, I decided to try to update mathlib for my project just to make sure that I could do so without problems. I got the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"mi\">294</span><span class=\"n\">ff6a495e19ae5a32188033d6e487ca42aded5'</span>\n<span class=\"n\">Qq</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"mi\">53156671405</span><span class=\"n\">fbbd5402ed17a79bd129b961bd8d6'</span>\n<span class=\"n\">aesop</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"mi\">2225</span><span class=\"n\">b0e4a3528da20499e2304b521e0c4c2a4563'</span>\n<span class=\"n\">proofwidgets</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"n\">e6b6247c61280c77ade6bbf0bc3c66a44fe2e0c5'</span>\n<span class=\"n\">Cli</span><span class=\"o\">:</span> <span class=\"n\">updating</span> <span class=\"n\">repository</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli'</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"bp\">'</span><span class=\"n\">a11566029bd9ec4f68a65394e8c3ff1af74c1a29'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"bp\">/</span><span class=\"n\">lakefile.toml</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">identifier</span><span class=\"bp\">;</span> <span class=\"n\">expected</span> <span class=\"n\">command</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"bp\">/</span><span class=\"n\">lakefile.toml</span><span class=\"o\">:</span> <span class=\"n\">package</span> <span class=\"n\">configuration</span> <span class=\"n\">has</span> <span class=\"n\">errors</span>\n</code></pre></div>\n<p>My project only depends directly on <code>Mathlib</code>. Does this have anything to do with the migration, or is there another issue?</p>",
        "id": 437553585,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715127909
    },
    {
        "content": "<p>It looks more like it is due to <code>aesop</code> switching from <code>lakefile.lean</code> to a <code>lakefile.toml</code>.</p>",
        "id": 437553752,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128056
    },
    {
        "content": "<p>I don't immediately see the problem. Could I look at the repository myself?</p>",
        "id": 437553776,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128077
    },
    {
        "content": "<p>Sure it's here <a href=\"https://github.com/BoltonBailey/formal-snarks-project\">https://github.com/BoltonBailey/formal-snarks-project</a></p>",
        "id": 437553839,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715128108
    },
    {
        "content": "<p>Oh, <span class=\"user-mention\" data-user-id=\"282271\">@Bolton Bailey</span>, you are on <code>leanprover/lean4:v4.4.0-rc1</code>!</p>",
        "id": 437553968,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128204
    },
    {
        "content": "<p>Please update your lean-toolchain to <code>v4.8.0-rc1</code>.</p>",
        "id": 437553979,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128215
    },
    {
        "content": "<p>Running <code>lake update</code> will update Mathlib to the latest master, which relies on <code>v4.8.0-rc1</code>.</p>",
        "id": 437554018,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128246
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>, we <em>really</em> need something that makes it more obvious to the user what is going on here.</p>\n<p>If nothing else, if the toolchain in an upstream repository after the update is more recent than the local toolchain, print a warning? Is there an issue covering this problem already?</p>",
        "id": 437554128,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128334
    },
    {
        "content": "<p>Ok I did the toolchain update and I am now getting<br>\n$ lake update<br>\ninfo: stderr:<br>\nfatal: Needed a single revision<br>\nerror: external command 'git' exited with code 128</p>",
        "id": 437554150,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715128352
    },
    {
        "content": "<p>Hmm, can't reproduce locally. Do you want to try that again either with a fresh checkout, or after <code>rm -rf .lake</code>?</p>",
        "id": 437554206,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128412
    },
    {
        "content": "<p>Also, your project is really not set up right. :-) <code>lake build</code> does nothing!</p>",
        "id": 437554251,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128443
    },
    {
        "content": "<p>Ok</p>",
        "id": 437554332,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715128508
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span>, I feel like this is sufficiently frequent (users set up their lake project with the main Project.lean having no imports, nor do they use globs), that we should detect for it and issue a warning in lake.</p>",
        "id": 437554337,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128511
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"282271\">@Bolton Bailey</span>, what do you usually do to build files in this project?</p>",
        "id": 437554354,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128525
    },
    {
        "content": "<p>It is usually the case that VSCode shows me whatever errors exist in my code</p>",
        "id": 437554453,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715128585
    },
    {
        "content": "<p>But don't you have to open all the files to verify that?</p>",
        "id": 437554477,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128602
    },
    {
        "content": "<p>(No problem if that's what you're doing --- just trying to understand how we can make life easier. :-)</p>",
        "id": 437554507,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128626
    },
    {
        "content": "<p>Many of the files in this project do not build</p>",
        "id": 437554526,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715128651
    },
    {
        "content": "<p>This has been the case ever since I tried to port this thing from mathlib3</p>",
        "id": 437554551,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715128673
    },
    {
        "content": "<p>Even if they did build, it could possibly take hours for them to do so, that was my experience from the lean3 version.</p>",
        "id": 437554620,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715128706
    },
    {
        "content": "<p>Okay! Sorry about that. :-)</p>",
        "id": 437554638,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128723
    },
    {
        "content": "<p>Did <code>lake update</code> after <code>rm -rf .lake</code> or a fresh checkout work for you?</p>",
        "id": 437554665,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715128746
    },
    {
        "content": "<p>So it has not been a priority to get the project to build in its entirety. Instead I just build files one at a time by opening them, or running <code>lake build</code> with a specific name</p>",
        "id": 437554774,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715128811
    },
    {
        "content": "<p>On a happier note, yes, your advice seems to have worked!</p>",
        "id": 437554801,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715128831
    },
    {
        "content": "<p>(Now need to make compatible from a few months of Mathlib changes) Thanks a lot for your help!</p>",
        "id": 437554864,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715128898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> If you could make issues for these problems (with your feature suggestions), that would be great! <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 437555001,
        "sender_full_name": "Mac Malone",
        "timestamp": 1715128988
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/4103\">lean#4103</a> is a write-up of the problem here. <span class=\"user-mention\" data-user-id=\"282271\">@Bolton Bailey</span>, perhaps you could check that it reflects what happened?</p>",
        "id": 437555363,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715129270
    },
    {
        "content": "<p>Deja Vu: I am remebering now that all this has happened before here: <a href=\"#narrow/stream/270676-lean4/topic/Get.20mathlib.20cache.20after.20updating.20mathlib.20dependency/near/392109769\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Get.20mathlib.20cache.20after.20updating.20mathlib.20dependency/near/392109769</a></p>",
        "id": 437555421,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715129291
    },
    {
        "content": "<p>(Including someone having to tell me to change the toolchain)</p>",
        "id": 437555443,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715129309
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"282271\">@Bolton Bailey</span>, you might find it easier to work if you explicitly comment out the as-yet-unported code, so that errors reflect breakages rather than just not-done-stuff.</p>",
        "id": 437555455,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715129318
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282271\">Bolton Bailey</span> <a href=\"#narrow/stream/287929-mathlib4/topic/lake.20update.20not.20working/near/437555421\">said</a>:</p>\n<blockquote>\n<p>Deja Vu</p>\n</blockquote>\n<p>Additional evidence we need to improve the tooling! :-)</p>",
        "id": 437555514,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715129375
    },
    {
        "content": "<p>Yes, that issue looks like a good report of what happened, thanks for moving the ball forward on it</p>",
        "id": 437555526,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715129398
    },
    {
        "content": "<p>I've also created <a href=\"https://github.com/leanprover/lean4/pull/4105\">lean#4105</a> to track the problem of users not knowing that they either need to import things in <code>Foo.lean</code>, or use globs to tell <code>lake build</code> to build everything.</p>",
        "id": 437564986,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715136018
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean4/pull/4105\">lean4#4105</a>?</p>",
        "id": 437565106,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715136108
    },
    {
        "content": "<p>Wait, is it the case that if I import some files and not others in the <code>MyProject.lean</code> file of a Lean4 project, I can get the CI tools on GitHub to display if just the selected files built correctly?</p>",
        "id": 437568966,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715138383
    },
    {
        "content": "<p>Yes.</p>",
        "id": 437568976,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715138397
    },
    {
        "content": "<p>That seems like useful information, thanks.</p>",
        "id": 437569066,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715138447
    },
    {
        "content": "<p>Currently you have to write/copy-paste your own github action around <code>lake build</code>, but <span class=\"user-mention\" data-user-id=\"699684\">@Austin Letson</span> has been working on <a href=\"https://github.com/leanprover/lean-action\">https://github.com/leanprover/lean-action</a> which should make it very easy.</p>",
        "id": 437569083,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715138456
    },
    {
        "content": "<p>In fact, I think it is ready for use, and high on my list to test out. :-)</p>",
        "id": 437569104,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715138466
    },
    {
        "content": "<p>I was not a big fan of the \"comment everything out\" suggestion since it seemed like a lot of mental overhead to uncomment and recomment everything I work on whenever I touch it. Including a subset of my files in the CI check seems much more appealing.</p>",
        "id": 437569295,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715138614
    },
    {
        "content": "<p>What's the expected behaviour of lake update concerning lean-toolchain? </p>\n<p>In February it swapped v4.6.0-rc1 to v4.6.0 and then in March it swapped v4.6.0 for v4.7.0-rc2. However it never swapped v4.7.0-rc2 to any of the newer versions. </p>\n<p>Was the functionality modified? If so, is there a recommended way that we should update lean-toolchain to the latest apart from doing it manually?</p>",
        "id": 437869375,
        "sender_full_name": "Oliver Butterley",
        "timestamp": 1715280897
    },
    {
        "content": "<p><code>lake update</code> never touches the lean-toolchain, however the mathlib post-update hook does, so if your project depends on mathlib then it will automatically be upgraded to the latest lean along with mathlib. Unfortunately this mechanism only works when lake doesn't have a breaking change, since in that case the old lake won't be able to read mathlib's lakefile which contains the definition of the post-update hook. So if you try to bump to the next stable you will frequently get stuck and have to copy the toolchain manually</p>",
        "id": 437869819,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715281085
    }
]