[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/9838\">#9838</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">1699</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">4146</span><span class=\"bp\">/</span><span class=\"mi\">4146</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">40</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">some</span> <span class=\"n\">files</span> <span class=\"n\">were</span> <span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">cache.</span>\n<span class=\"n\">This</span> <span class=\"n\">usually</span> <span class=\"n\">means</span> <span class=\"n\">that</span> <span class=\"n\">your</span> <span class=\"kn\">local</span> <span class=\"n\">checkout</span> <span class=\"n\">of</span> <span class=\"n\">mathlib4</span> <span class=\"n\">has</span> <span class=\"n\">diverged</span> <span class=\"k\">from</span> <span class=\"n\">upstream.</span>\n<span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">push</span> <span class=\"n\">your</span> <span class=\"n\">commits</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">branch</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">mathlib4</span> <span class=\"n\">repository</span><span class=\"o\">,</span> <span class=\"n\">CI</span> <span class=\"n\">will</span> <span class=\"n\">build</span> <span class=\"n\">the</span> <span class=\"n\">oleans</span> <span class=\"n\">and</span> <span class=\"n\">they</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">available</span> <span class=\"n\">later.</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/.</span><span class=\"n\">cache</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"mi\">02274134</span><span class=\"n\">bfaa6d3d.ltar</span><span class=\"o\">:</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">fill</span> <span class=\"n\">whole</span> <span class=\"n\">buffer</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">1699</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">uncaught</span> <span class=\"n\">exception</span><span class=\"o\">:</span> <span class=\"n\">leantar</span> <span class=\"n\">failed</span> <span class=\"k\">with</span> <span class=\"n\">error</span> <span class=\"n\">code</span> <span class=\"mi\">1</span>\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">Process</span> <span class=\"n\">completed</span> <span class=\"k\">with</span> <span class=\"n\">exit</span> <span class=\"n\">code</span> <span class=\"mi\">1</span><span class=\"bp\">.</span>\n</code></pre></div>",
        "id": 416772509,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705669165
    },
    {
        "content": "<p>the file <code>02274134bfaa6d3d.ltar</code> is corrupted, you should delete it</p>",
        "id": 416773122,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705669352
    },
    {
        "content": "<p>this should not happen with recent versions of cache though</p>",
        "id": 416773200,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705669378
    },
    {
        "content": "<p>Where is <code>02274134bfaa6d3d.ltar</code> please? My cache seems to be pretty new.</p>",
        "id": 416773561,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705669467
    },
    {
        "content": "<p>the path is listed in the message</p>",
        "id": 416773669,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705669505
    },
    {
        "content": "<p>I see this error happens in CI... do you get the same error locally?</p>",
        "id": 416773788,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705669544
    },
    {
        "content": "<p>I won't be able to get to this today, a quick workaround is to invalidate the whole cache by adding some whitespace in <code>lake-manifest.json</code></p>",
        "id": 416774142,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705669636
    },
    {
        "content": "<p>I've had <code>lake exe cache get!</code> fix that for me in the past, it happened because I had done a <code>lake exe cache get</code> before the CI was over</p>",
        "id": 416831828,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1705685567
    },
    {
        "content": "<p>Also happened on CI for <a href=\"https://github.com/leanprover-community/mathlib4/pull/9856\">#9856</a> and <a href=\"https://github.com/leanprover-community/mathlib4/pull/9809\">#9809</a>. The former is from recent master (1h old, at most).</p>",
        "id": 416877693,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1705702516
    },
    {
        "content": "<p>Retrying fixing it on the former PR.</p>",
        "id": 416877930,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1705702608
    },
    {
        "content": "<p>Mario's trick solved it for me.</p>",
        "id": 416967066,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1705736192
    },
    {
        "content": "<p>Is the white space trick still the best option here?</p>",
        "id": 417707763,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1706122534
    },
    {
        "content": "<p>+1. I encountered this issue in CI a few times yesterday and today. e.g. <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7660457408\">https://github.com/leanprover-community/mathlib4/actions/runs/7660457408</a></p>\n<p>(CI failing in stage \"get cache\" with error \"/home/lean/.cache/mathlib/xxx.ltar: failed to fill whole buffer\")</p>",
        "id": 418170580,
        "sender_full_name": "Jack Valmadre",
        "timestamp": 1706219610
    },
    {
        "content": "<p>You could try merging master but if that doesn't fix it then you'll have to summon the maintainers.</p>",
        "id": 418184398,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706227269
    }
]