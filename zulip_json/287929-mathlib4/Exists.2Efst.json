[
    {
        "content": "<p>Hi. In <a href=\"https://github.com/leanprover-community/mathlib4/blob/master/Mathlib/Logic/Basic.lean\">Mathlib.Logic.Basic</a>, it confuses me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">Exists</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Exists</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"n\">b</span>\n<span class=\"w\">  </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">⟨</span><span class=\"n\">h</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"bp\">_⟩</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">h</span>\n<span class=\"bp\">#</span><span class=\"n\">align</span><span class=\"w\"> </span><span class=\"n\">Exists</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"w\"> </span><span class=\"n\">Exists</span><span class=\"bp\">.</span><span class=\"n\">fst</span>\n\n<span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">Exists</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"bp\">→</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">∀</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Exists</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">fst</span>\n<span class=\"w\">  </span><span class=\"bp\">|</span><span class=\"w\"> </span><span class=\"bp\">⟨_</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"bp\">⟩</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">h</span>\n<span class=\"bp\">#</span><span class=\"n\">align</span><span class=\"w\"> </span><span class=\"n\">Exists</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"w\"> </span><span class=\"n\">Exists</span><span class=\"bp\">.</span><span class=\"n\">snd</span>\n</code></pre></div>\n<p>Why <code>Exists.fst</code> and <code>Exists.snd</code> use <code>{b : Prop}</code> instead <code>{b : Type*}</code> or just <code>{β}</code></p>",
        "id": 444952348,
        "sender_full_name": "Hans Lin",
        "timestamp": 1718523838
    },
    {
        "content": "<p><a href=\"#narrow/stream/287929-mathlib4/topic/Exists.2Efst/near/444952348\">A message</a> was moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/Jordan.20Algebras\">#mathlib4 &gt; Jordan Algebras</a> by <span class=\"user-mention silent\" data-user-id=\"726531\">Hans Lin</span>.</p>",
        "id": 444952424,
        "sender_full_name": "Notification Bot",
        "timestamp": 1718523887
    },
    {
        "content": "<p><code>b : Type*</code> would give an error here</p>",
        "id": 444952968,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1718524331
    },
    {
        "content": "<p>Think about what would happen if <code>Exists.fst {b : Sort*} {p : b → Prop} : Exists p → b</code> and you proved <code>∃ n : Nat, n = n</code> using both <code>Exists.mk 0 rfl</code> and <code>Exists.mk 37 rfl</code></p>",
        "id": 444956771,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718527815
    }
]