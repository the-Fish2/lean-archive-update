[
    {
        "content": "<p>Is there a statement of the form \"Rationals are a dense order inside of the reals\"? I couldn't find a statement of this fact despite some loogling; below is the 'main work' lemma but I'm sure there must be a nicer version of this fact already there.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- For all positive reals, there's a rational between it and zero. -/</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">exists_rat_between</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span><span class=\"o\">(</span><span class=\"n\">q</span><span class=\"o\">:</span><span class=\"n\">ℚ</span><span class=\"o\">),</span> <span class=\"n\">q</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">use</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">Int.ceil</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">x</span><span class=\"o\">))</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">one_div_pos.mpr</span> <span class=\"n\">hx</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">Int.ceil</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Int.le_ceil</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">x</span><span class=\"o\">)</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">Int.ceil</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">one_div_le_one_div_of_le</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span>\n  <span class=\"n\">constructor</span>\n  <span class=\"bp\">·</span> <span class=\"n\">field_simp</span> <span class=\"n\">at</span> <span class=\"n\">h₃</span>\n    <span class=\"n\">push_cast</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h₃</span>\n  <span class=\"bp\">·</span> <span class=\"n\">positivity</span>\n</code></pre></div>",
        "id": 429133610,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711242515
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Rat.denseRange_cast#doc\">docs#Rat.denseRange_cast</a> I think</p>",
        "id": 429134210,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1711243170
    },
    {
        "content": "<p>yeah, <code>Rat.denseRange_cast</code> is what I've used in the past:    <a href=\"https://github.com/dwrensha/compfiles/blob/4f703ccd2de17cabe866a89ac9e11fba74b731a5/Compfiles/Romania1998P12.lean#L37-L39\">https://github.com/dwrensha/compfiles/blob/4f703ccd2de17cabe866a89ac9e11fba74b731a5/Compfiles/Romania1998P12.lean#L37-L39</a></p>",
        "id": 429134275,
        "sender_full_name": "David Renshaw",
        "timestamp": 1711243212
    },
    {
        "content": "<p>btw, <code>exists_rat_between</code> is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=exists_rat_btwn#doc\">docs#exists_rat_btwn</a> (which is what <code>Rat.denseRange_cast</code> uses)</p>",
        "id": 429138187,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1711245890
    },
    {
        "content": "<p>Ahhh there we go haha. Thanks. :)</p>",
        "id": 429138897,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1711246436
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"448405\">Alex Meiburg</span> has marked this topic as resolved.</p>",
        "id": 429167507,
        "sender_full_name": "Notification Bot",
        "timestamp": 1711266163
    },
    {
        "content": "<p><code>exists_rat_btwn</code> simplified my code too! <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span>  <a href=\"https://github.com/dwrensha/compfiles/commit/1bb445a9cc76ff80a14ac6bfc50106d27f5add1b\">https://github.com/dwrensha/compfiles/commit/1bb445a9cc76ff80a14ac6bfc50106d27f5add1b</a></p>",
        "id": 429196331,
        "sender_full_name": "David Renshaw",
        "timestamp": 1711283591
    }
]