[
    {
        "content": "<p>The new shake tool appears to be causing problems in <a href=\"https://github.com/leanprover-community/mathlib4/pull/9403\">#9403</a>:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7524334618/job/20478989708#step:17:4161\">https://github.com/leanprover-community/mathlib4/actions/runs/7524334618/job/20478989708#step:17:4161</a></p>",
        "id": 412886545,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1705294896
    },
    {
        "content": "<p>Is there a reason you think <code>shake</code> is involved? I don't see any mention of it in the errors.</p>",
        "id": 412892352,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1705299156
    },
    {
        "content": "<p>tentative fix at <a href=\"https://github.com/leanprover-community/mathlib4/pull/9752\">#9752</a></p>",
        "id": 412892421,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705299212
    },
    {
        "content": "<p>or at least, if there are still errors that PR should help make them less impenetrable</p>",
        "id": 412892442,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705299235
    },
    {
        "content": "<p>Okay, <img alt=\":merge:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/18527.png\" title=\"merge\">'d, lets see what happens!</p>",
        "id": 412892593,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1705299322
    },
    {
        "content": "<p>aha:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">curl</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">56</span><span class=\"o\">)</span> <span class=\"n\">OpenSSL</span> <span class=\"n\">SSL_read</span><span class=\"o\">:</span> <span class=\"n\">Connection</span> <span class=\"n\">reset</span> <span class=\"kd\">by</span> <span class=\"n\">peer</span><span class=\"o\">,</span> <span class=\"n\">errno</span> <span class=\"mi\">104</span>\n</code></pre></div>",
        "id": 412894229,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705300538
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> ready!</p>",
        "id": 412905259,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1705306651
    },
    {
        "content": "<p>Judging from the <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7525362062/job/20482352946\">transient failures</a>, <code>lake exe cache put Archive.lean</code> packs and uploads almost the whole of mathlib. Which makes sense, but does this mean mathlib oleans get uploaded thrice (Mathlib, archive, counterexamples)?</p>",
        "id": 412919618,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1705312033
    },
    {
        "content": "<p>Note that there is currently a bug in the printing code, it's supposed to show the files that are actually uploaded but the pruning is being done server-side so not all of those are actually uploaded for real</p>",
        "id": 412920831,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705312481
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> has a PR which should help with that: <a href=\"https://github.com/leanprover-community/mathlib4/pull/9687\">#9687</a></p>",
        "id": 412920898,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705312507
    },
    {
        "content": "<p>(this is a problem for the new cloudflare cache, because it doesn't know how to not overwrite, so we end up with a lot more redundant traffic if we don't handle the pruning client-side)</p>",
        "id": 412921328,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1705312647
    }
]