[
    {
        "content": "<p>Comparing these two proofs</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lean</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Algebra.GroupPower.Order</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Positivity</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"n\">ε</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"bp\">/</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span>\n  <span class=\"n\">field_simp</span>\n  <span class=\"n\">ring</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">-- would be nice for this to be `field_simp; ring` too</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"n\">ε</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"bp\">/</span> <span class=\"bp\">-</span><span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span>\n  <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"n\">c</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">LT.lt.ne</span> <span class=\"n\">hc</span><span class=\"o\">]</span>\n  <span class=\"n\">ring</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>the problem seems to be that <code>positivity</code> proves <code>0 &lt; c → c ≠ 0</code> in the first case but it doesn't prove <code>c &lt; 0 → c ≠ 0</code>  in the second</p>",
        "id": 426772087,
        "sender_full_name": "Li Xuanji",
        "timestamp": 1710517836
    }
]