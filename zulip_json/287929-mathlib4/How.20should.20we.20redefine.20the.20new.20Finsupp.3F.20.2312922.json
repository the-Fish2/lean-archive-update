[
    {
        "content": "<p>How should we redefine the new <code>Finsupp</code> whose structure is aligned to <code>DFinsupp</code>?:</p>\n<ol>\n<li>Abbreviation</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">abbrev</span> <span class=\"n\">Finsupp</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">Π₀</span> <span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">M</span>\n</code></pre></div>\n<ol start=\"2\">\n<li>Trivial structure of <code>DFinsupp</code></li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Finsupp</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"n\">where</span> <span class=\"n\">ofDFinsupp</span> <span class=\"o\">::</span>\n  <span class=\"n\">toDFinsupp</span> <span class=\"o\">:</span> <span class=\"bp\">Π₀</span> <span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">M</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>Structure copied from <code>DFinsupp</code></li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">Finsupp</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Zero</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"n\">where</span> <span class=\"n\">mk'</span> <span class=\"o\">::</span>\n  <span class=\"n\">toFun</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">M</span>\n  <span class=\"n\">support'</span> <span class=\"o\">:</span> <span class=\"n\">Trunc</span> <span class=\"o\">{</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Multiset</span> <span class=\"n\">α</span> <span class=\"bp\">//</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">∨</span> <span class=\"n\">toFun</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 439183111,
        "sender_full_name": "Pol'tta / Miyahara Kō",
        "timestamp": 1715937198
    },
    {
        "content": "<p>/poll How should we redefine the new <code>Finsupp</code> whose structure is aligned to <code>DFinsupp</code>?<br>\nAbbreviation<br>\nTrivial structure of <code>DFinsupp</code><br>\nStructure copied from <code>DFinsupp</code></p>",
        "id": 439183242,
        "sender_full_name": "Pol'tta / Miyahara Kō",
        "timestamp": 1715937248
    },
    {
        "content": "<p>I'm not convinced that we can reasonably make this change in the order you're implying</p>",
        "id": 439183446,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715937348
    },
    {
        "content": "<p>Which is to say; while I'm supportive of your goal here, I think it would be good to write down a more detailed plan of how you plan to get there before bikeshedding too much</p>",
        "id": 439183728,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715937447
    },
    {
        "content": "<p>My previous proposal in this direction was to carve out a smaller first step of \"rewrite Basis to use DFinsupp\", but I also didn't write down how that fits into a larger refactor</p>",
        "id": 439183854,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715937489
    },
    {
        "content": "<p>I've been going using structure copied from <code>DFinsupp</code>, but I'm having trouble with a lot of code duplication and thought I'd solicit opinions on what structure to use.<br>\nBy the way, this was the plan I had in mind:</p>\n<ol>\n<li>Change the definition of <code>Finsupp</code>.</li>\n<li>Finish the rest of the work.</li>\n</ol>",
        "id": 439187015,
        "sender_full_name": "Pol'tta / Miyahara Kō",
        "timestamp": 1715938668
    },
    {
        "content": "<p>Now I will think about it in more detail...</p>",
        "id": 439187154,
        "sender_full_name": "Pol'tta / Miyahara Kō",
        "timestamp": 1715938703
    },
    {
        "content": "<p>I abort this task because it's a hard work and I have no times to do currenlty.<br>\nMaybe I restart this task later so I restore this branch.</p>",
        "id": 440428387,
        "sender_full_name": "Pol'tta / Miyahara Kō",
        "timestamp": 1716518394
    }
]