[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">0</span>\n<span class=\"kn\">open</span> <span class=\"n\">Classical</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">impliesOr</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"bp\">↔</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"n\">imp_or</span> <span class=\"c1\">-- I'm glad this is already in mathlib</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">impliesAnd</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">∧</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"bp\">↔</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"n\">forall_and</span> <span class=\"c1\">-- I'm glad this is already in mathlib</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">trueImpliesOnlyTrue</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">forall_prop_of_true</span> <span class=\"n\">a</span>\n\n<span class=\"c1\">-- This should be in Mathlib, it is just as important as impliesOr and impliesAnd</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">impliesImplies</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"bp\">↔</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">_root_.em</span> <span class=\"n\">p</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h₀</span> <span class=\"k\">with</span> <span class=\"n\">ha</span> <span class=\"bp\">|</span> <span class=\"n\">hb</span>\n  <span class=\"bp\">·</span> <span class=\"n\">constructor</span>\n    <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"n\">a_1</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span> <span class=\"n\">ha</span> <span class=\"o\">(</span><span class=\"n\">a_1</span> <span class=\"n\">ha</span><span class=\"o\">)</span>\n    <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"n\">h₁</span> <span class=\"o\">:=</span> <span class=\"n\">trueImpliesOnlyTrue</span> <span class=\"n\">p</span> <span class=\"n\">q</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:=</span> <span class=\"n\">trueImpliesOnlyTrue</span> <span class=\"n\">p</span> <span class=\"n\">r</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">trueImpliesOnlyTrue</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₁b</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">q</span> <span class=\"bp\">↔</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">h₁</span> <span class=\"n\">ha</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₂b</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span> <span class=\"bp\">↔</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">h₂</span> <span class=\"n\">ha</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₃b</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">h₃</span> <span class=\"n\">ha</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h₁b</span><span class=\"o\">,</span> <span class=\"n\">h₂b</span><span class=\"o\">,</span> <span class=\"n\">h₃b</span><span class=\"o\">]</span>\n      <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"n\">a_1</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span> <span class=\"n\">a_1</span>\n  <span class=\"bp\">·</span> <span class=\"n\">constructor</span>\n    <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"n\">a_1</span> <span class=\"n\">a_2</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span> <span class=\"n\">a_2</span> <span class=\"o\">(</span><span class=\"n\">a_1</span> <span class=\"n\">a_2</span><span class=\"o\">)</span>\n    <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"n\">a</span> <span class=\"n\">_</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">elim</span>\n\n<span class=\"c1\">-- This should be in Mathlib, it is just as important as impliesOr and impliesAnd</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">impliesIff</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">↔</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"bp\">↔</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">_root_.em</span> <span class=\"n\">p</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h₀</span> <span class=\"k\">with</span> <span class=\"n\">ha</span> <span class=\"bp\">|</span> <span class=\"n\">hb</span>\n  <span class=\"bp\">·</span> <span class=\"n\">constructor</span>\n    <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">forall_congr'</span> <span class=\"n\">a</span>\n    <span class=\"bp\">·</span> <span class=\"k\">have</span> <span class=\"n\">h₁</span> <span class=\"o\">:=</span> <span class=\"n\">trueImpliesOnlyTrue</span> <span class=\"n\">p</span> <span class=\"n\">q</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:=</span> <span class=\"n\">trueImpliesOnlyTrue</span> <span class=\"n\">p</span> <span class=\"n\">r</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:=</span> <span class=\"n\">trueImpliesOnlyTrue</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">↔</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₁b</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">q</span> <span class=\"bp\">↔</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">h₁</span> <span class=\"n\">ha</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₂b</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span> <span class=\"bp\">↔</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">h₂</span> <span class=\"n\">ha</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₃b</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">↔</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">q</span> <span class=\"bp\">↔</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">h₃</span> <span class=\"n\">ha</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h₁b</span><span class=\"o\">,</span> <span class=\"n\">h₂b</span><span class=\"o\">,</span> <span class=\"n\">h₃b</span><span class=\"o\">]</span>\n      <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span>\n  <span class=\"bp\">·</span> <span class=\"n\">constructor</span>\n    <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">forall_congr'</span> <span class=\"n\">a</span>\n    <span class=\"bp\">·</span> <span class=\"n\">exact</span> <span class=\"k\">fun</span> <span class=\"n\">_</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">elim</span>\n</code></pre></div>\n<p>What files should be updated in Mathlib4 and what should these theorems be renamed?</p>",
        "id": 429844399,
        "sender_full_name": "Mark Andrew Gerads",
        "timestamp": 1711541261
    },
    {
        "content": "<p>You know that <code>tauto</code> solves all of these goals?</p>",
        "id": 429844796,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1711541379
    },
    {
        "content": "<p>No. Nice.</p>",
        "id": 429844847,
        "sender_full_name": "Mark Andrew Gerads",
        "timestamp": 1711541398
    },
    {
        "content": "<p><code>aesop</code> also works on all but the first.</p>",
        "id": 429844939,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1711541422
    },
    {
        "content": "<p>Thanks for golfing my code!</p>",
        "id": 429845073,
        "sender_full_name": "Mark Andrew Gerads",
        "timestamp": 1711541471
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"385848\">Mark Andrew Gerads</span> has marked this topic as resolved.</p>",
        "id": 429845828,
        "sender_full_name": "Notification Bot",
        "timestamp": 1711541743
    }
]