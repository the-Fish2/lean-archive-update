[
    {
        "content": "<p>Recently, <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> marked <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=WithBot.recBotCoe#doc\">docs#WithBot.recBotCoe</a> as <code>@[cases_eliminator]</code>,  so <code>cases</code> and <code>cases'</code> use it instead of  the one coming from <code>Option</code>.  <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> , how hard would it be to make <code>rcases</code> use it too?</p>",
        "id": 442103846,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717361770
    },
    {
        "content": "<p><code>rcases</code> uses a meta tactic for cases (<code>Lean.MVarId.cases</code>) rather than the the system <code>induction</code>/<code>cases</code> uses. This latter system is not packaged up in any nice way yet. I had looked into getting the meta tactic to use <code>cases_eliminator</code>, but (1) it seemed like a big project and (2) it would interfere with a lot of code that assumes that <code>.cases</code> does the \"proper\" cases using the actual eliminator.</p>",
        "id": 442104110,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717361921
    },
    {
        "content": "<p>Right now, there is a hack in place for specifically <code>Nat</code> so that <code>rcases</code> puts things in terms of <code>0</code> and <code>n + 1</code>.</p>",
        "id": 442104163,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717361952
    },
    {
        "content": "<p>I think the argument goes that rcases should behave like <code>match</code>, for which custom eliminators aren't relevant?</p>",
        "id": 442104177,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717361960
    },
    {
        "content": "<p>So, if we want to use custom eliminators, then we have to use <code>cases</code>, not <code>rcases</code>, at least in the near future?</p>",
        "id": 442104236,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717362000
    },
    {
        "content": "<p>Yeah, there was FRO support for \"beautiful Nat induction\", and we managed to get <code>@[cases_eliminator]</code> only because that was the easiest and cleanest way to implement it for <code>Nat</code>.</p>",
        "id": 442104385,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1717362044
    },
    {
        "content": "<p>For which type do you want to do this Yury?</p>",
        "id": 442104682,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717362218
    },
    {
        "content": "<p><code>WithTop</code>, <code>WithBot</code></p>",
        "id": 442104709,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717362238
    },
    {
        "content": "<p>I'm just cleaning up remaining uses of <code>none_eq_bot</code>/<code>none_eq_top</code>/<code>some_eq_coe</code></p>",
        "id": 442105058,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717362425
    },
    {
        "content": "<p>Are the rcases calls replaceable with <code>cases'</code>?</p>",
        "id": 442105585,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717362698
    },
    {
        "content": "<p>So far, yes.</p>",
        "id": 442105670,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717362728
    }
]