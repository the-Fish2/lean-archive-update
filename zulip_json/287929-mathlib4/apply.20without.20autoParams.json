[
    {
        "content": "<p>Is there a config option for the <code>apply</code> tactic that makes it so a new goal is created for each <code>autoParam</code> argument instead of their corresponding tactic being run?</p>",
        "id": 422321388,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1708385897
    },
    {
        "content": "<p>That's the default (and only) option already. The <code>apply</code> tactic implementation has a todo in the source code for handling auto params and default arguments at some point.</p>",
        "id": 422321708,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1708386206
    },
    {
        "content": "<p>hm, it seems like I get this behavior if I use apply with just the function name, eg <code>apply Functor.mk</code>, but not if I try to partially apply the function, e.g. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">тед</span><span class=\"n\">q</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">тед</span> <span class=\"n\">D</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Functor.mk</span> <span class=\"n\">F</span>\n</code></pre></div>\n<p>errors out</p>",
        "id": 422321900,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1708386363
    },
    {
        "content": "<p>If you partially apply the function, that causes the tactic to run. That's due to the function application getting elaborated.</p>",
        "id": 422322398,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1708386816
    },
    {
        "content": "<p>Yeah, that makes sense</p>",
        "id": 422322405,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1708386824
    },
    {
        "content": "<p>Maybe you can do <code>apply @Functor.mk ... F</code> with the right number of underscores in place of <code>...</code></p>",
        "id": 422322467,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1708386865
    },
    {
        "content": "<p>I think that would work, but at that point I think I'd just use refine with ?_'s for the remaining arguments</p>",
        "id": 422322507,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1708386918
    }
]