[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib4/pull/10777\">#10777</a>, I define <code>TopologicalSpace (ContinuousMultilinearMap K E F)</code> and <code>UniformSpace (ContinuousMultilinearMap K E F)</code> based on <code>[TopologicalSpace F] [TopologicalAddGroup F]</code>. <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span> suggests that I repeat the design of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ContinuousLinearMap.topologicalSpace#doc\">docs#ContinuousLinearMap.topologicalSpace</a> instead: <code>TopologicalSpace</code> instance assumes <code>[TopologicalSpace F] [TopologicalAddGroup F]</code> while <code>UniformSpace</code> instance assumes <code>[UniformSpace F] [UniformAddGroup F]</code>. I slightly prefer my approach (e.g., we don't have to worry about <code>uniformity</code> on <code>F</code> when looking for diamonds) but can change it if more people prefer Anatole's design. What do you think?</p>",
        "id": 431814313,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1712522394
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span>'s approach sounds reasonable to me simply from the perspective of inheriting structures from the same structure on the pieces; after all, we follow this pattern pretty much everywhere else</p>",
        "id": 431821589,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712528709
    },
    {
        "content": "<p>Just to be clear, the <code>TopologicalSpace</code> instances are the same under both designs, and only the <code>UniformSpace</code>s differ?</p>",
        "id": 431821675,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1712528792
    },
    {
        "content": "<p>Yes</p>",
        "id": 431821724,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1712528833
    },
    {
        "content": "<p>And the <code>UniformSpace</code> structures only differ by defeq, not by propeq.</p>",
        "id": 431824677,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1712531768
    }
]