[
    {
        "content": "<p>How would you improve the following definition of relative rank of matroids?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Matroid.IndepAxioms</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">IndepMatroid.relativeRank</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">IndepMatroid</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hA</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">⊆</span> <span class=\"n\">M.E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hB</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">⊆</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">ℕ</span><span class=\"bp\">∞</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">⨆</span> <span class=\"o\">(</span><span class=\"n\">J</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">_J</span> <span class=\"bp\">//</span> <span class=\"n\">_J</span> <span class=\"bp\">∈</span> <span class=\"n\">maximals</span> <span class=\"n\">Set.Subset</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"bp\">|</span> <span class=\"n\">M.Indep</span> <span class=\"n\">X</span> <span class=\"bp\">∧</span> <span class=\"n\">X</span> <span class=\"bp\">⊆</span> <span class=\"n\">B</span><span class=\"o\">}}),</span>\n    <span class=\"bp\">⨆</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">_I</span> <span class=\"bp\">//</span> <span class=\"n\">M.Indep</span> <span class=\"n\">_I</span> <span class=\"bp\">∧</span> <span class=\"n\">_I</span> <span class=\"bp\">⊆</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">J.val</span> <span class=\"bp\">⊆</span> <span class=\"n\">_I</span><span class=\"o\">}),</span>\n      <span class=\"n\">Set.encard</span> <span class=\"o\">(</span><span class=\"n\">I.val</span> <span class=\"bp\">\\</span> <span class=\"n\">J.val</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>We <span class=\"user-mention\" data-user-id=\"709805\">@Ivan S.</span>  find this definition very hard to work with.</p>\n<p>If you want to read the definition written in LaTeX, see it on top of page 2 here:<br>\n<a href=\"https://github.com/madvorak/matroids/blob/master/theory/theory.pdf\">https://github.com/madvorak/matroids/blob/master/theory/theory.pdf</a></p>",
        "id": 435256519,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1713986047
    },
    {
        "content": "<p>You can avoid working with subtypes by working with nested suprema. You can also omit <code>hA</code> and <code>hB</code> since they're not used (the principle being \"it's up to theorems to make sure definitions are used in their intended domains\"), unless there are some <code>simp</code> lemmas where it's essential to have these facts available in the expression.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">IndepMatroid.relativeRank</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">IndepMatroid</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"c1\">-- (hA : A ⊆ M.E) (hB : B ⊆ A) :</span>\n    <span class=\"n\">ℕ</span><span class=\"bp\">∞</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">⨆</span> <span class=\"n\">J</span> <span class=\"bp\">∈</span> <span class=\"n\">maximals</span> <span class=\"n\">Set.Subset</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"bp\">|</span> <span class=\"n\">M.Indep</span> <span class=\"n\">X</span> <span class=\"bp\">∧</span> <span class=\"n\">X</span> <span class=\"bp\">⊆</span> <span class=\"n\">B</span><span class=\"o\">},</span>\n    <span class=\"bp\">⨆</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"bp\">⨆</span> <span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">M.Indep</span> <span class=\"n\">I</span> <span class=\"bp\">∧</span> <span class=\"n\">I</span> <span class=\"bp\">⊆</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">J</span> <span class=\"bp\">⊆</span> <span class=\"n\">I</span><span class=\"o\">,</span>\n      <span class=\"n\">Set.encard</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"bp\">\\</span> <span class=\"n\">J</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 435259449,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1713987223
    },
    {
        "content": "<p>(a general reminder for other readers:nested suprema are only safe in general on complete lattices; which in this case <code>ENat</code> is!)</p>",
        "id": 435275418,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713994050
    },
    {
        "content": "<p>Relative rank is free once you have rank and minors. I've done it all here : <br>\n<a href=\"https://github.com/apnelson1/Matroid/blob/main/Matroid/Minor/RelRank.lean\">https://github.com/apnelson1/Matroid/blob/main/Matroid/Minor/RelRank.lean</a></p>\n<p>There is quite a large amount of stuff in that repo - it is being written with mathlib in mind, and I think the vast majority is PR-ready - the speed of the review process is part of the reason it's not already there. </p>\n<p>I'm very happy to see others working on matroids! but could I politely suggest that you look at some topics not already in my repo? There is still plenty to do. (I realize you may not have been aware of it earlier).</p>",
        "id": 435285818,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1713999829
    },
    {
        "content": "<p>This has motivated me to make start on my next matroid PR!</p>",
        "id": 435286113,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1713999998
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"329425\">Peter Nelson</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Define.20relative.20rank.20of.20matroids/near/435285818\">said</a>:</p>\n<blockquote>\n<p>Relative rank is free once you have rank and minors. I've done it all here : <br>\n<a href=\"https://github.com/apnelson1/Matroid/blob/main/Matroid/Minor/RelRank.lean\">https://github.com/apnelson1/Matroid/blob/main/Matroid/Minor/RelRank.lean</a></p>\n<p>There is quite a large amount of stuff in that repo - it is being written with mathlib in mind, and I think the vast majority is PR-ready - the speed of the review process is part of the reason it's not already there. </p>\n<p>I'm very happy to see others working on matroids! but could I politely suggest that you look at some topics not already in my repo? There is still plenty to do. (I realize you may not have been aware of it earlier).</p>\n</blockquote>\n<p>Thanks for letting us know! We certainly don't want to duplicate the work you already did or compete against you. Do you have a roadmap of things about matroids you want to formalize? Please feel free to comment on our work in progress here:<br>\n<a href=\"https://github.com/madvorak/matroids\">https://github.com/madvorak/matroids</a><br>\nWe will be happy to receive comments even before we PR parts of our work to Mathlib.</p>\n<p><span class=\"user-mention\" data-user-id=\"709805\">@Ivan S.</span></p>",
        "id": 435326139,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1714029173
    }
]