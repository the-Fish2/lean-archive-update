[
    {
        "content": "<p>OK so we \"have smooth morphisms of rings\" because <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Algebra.Smooth#doc\">docs#Algebra.Smooth</a>.  But right now when I try to use it I realise I have to write this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.Smooth.Basic</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">CommRing</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">IsSmooth</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">â†’+*</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">@</span><span class=\"n\">Algebra.Smooth</span> <span class=\"n\">R</span> <span class=\"n\">_</span> <span class=\"n\">A</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">RingHom.toAlgebra</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Is this (<code>IsSmooth</code>) a definition we want in mathlib? I don't think that assuming all maps which we want to talk about the smoothness of come from an <code>Algebra</code> class is a sustainable idea? We need to prove various facts about smooth morphisms of rings in order to beef up the definition to smooth morphisms of schemes, and I'm not sure that the <code>Algebra</code> approach is going to scale.</p>",
        "id": 439181802,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715936690
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"566592\">@FMLJohn</span> (who is thinking about his right now) and also <span class=\"user-mention\" data-user-id=\"439483\">@Andrew Yang</span> , <span class=\"user-mention\" data-user-id=\"252627\">@Jujian Zhang</span> and <span class=\"user-mention\" data-user-id=\"648495\">@Christian Merten</span></p>",
        "id": 439182030,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715936765
    },
    {
        "content": "<p>Yes, I think that <code>def</code> is good. Although maybe <code>RingHom.IsSmooth</code> as name.</p>",
        "id": 439182794,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715937056
    },
    {
        "content": "<p>Is there a notion of smooth morphisms of non-commutative rings? If so, the approach of going via algebras doesn't work.</p>",
        "id": 439183278,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1715937265
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Smooth.20morphism.20of.20rings/near/439182794\">said</a>:</p>\n<blockquote>\n<p>Yes, I think that <code>def</code> is good. Although maybe <code>RingHom.IsSmooth</code> as name.</p>\n</blockquote>\n<p>Although I generally like the <code>Is</code> convention, the general pattern seems to keep the <code>Algebra.Property</code> consistent with <code>RingHom.Property</code> (e.g. <code>Algebra.Flat</code> and <code>RingHom.Flat</code>, <code>Algebra.FiniteType</code> and <code>RingHom.FiniteType</code>). So I suggest <code>RingHom.Smooth</code>.</p>",
        "id": 439185025,
        "sender_full_name": "Christian Merten",
        "timestamp": 1715937929
    },
    {
        "content": "<p>I agree consistency is good. I think I would be in favor of converging to <code>Algebra.P</code> and <code>RingHom.IsP</code>. If others agree, we should do a large rename in the near future (-;</p>",
        "id": 439187918,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715939004
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Smooth.20morphism.20of.20rings/near/439183278\">said</a>:</p>\n<blockquote>\n<p>Is there a notion of smooth morphisms of non-commutative rings? If so, the approach of going via algebras doesn't work.</p>\n</blockquote>\n<p>I have never heard of that notion. But I'm not really an expert on non-commutative algebra.</p>",
        "id": 439187982,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715939031
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Smooth.20morphism.20of.20rings/near/439187918\">said</a>:</p>\n<blockquote>\n<p>I agree consistency is good. I think I would be in favor of converging to <code>Algebra.P</code> and <code>RingHom.IsP</code>. If others agree, we should do a large rename in the near future (-;</p>\n</blockquote>\n<p>Why not <code>Algebra.IsP</code> and <code>RingHom.IsP</code>?</p>",
        "id": 439192246,
        "sender_full_name": "Christian Merten",
        "timestamp": 1715940468
    },
    {
        "content": "<p>Good point, I don't know what I was thinking <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 439222301,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715952230
    }
]