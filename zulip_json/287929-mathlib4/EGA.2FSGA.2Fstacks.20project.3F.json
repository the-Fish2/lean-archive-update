[
    {
        "content": "<p>I wonder if there are attempts to import the whole EGA/SGA/stacks project into lean?</p>",
        "id": 415966803,
        "sender_full_name": "Cong Wen",
        "timestamp": 1705476331
    },
    {
        "content": "<p>This material is being added slowly but surely, but not in a coherent way such as \"today we do EGA1 section 4\", or \"today we do these stacks tags\", so don't expect some kind of 1-1 correspondence between what's in mathlib and what's in these resources.</p>",
        "id": 415973281,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705479398
    },
    {
        "content": "<p>Ah great! I just finished the \"glimpse of Lean tutorial\" and later found it actually much more daunting than I imagined to formalize some topic systematically and coherently after reading some codes of in mathlib4</p>",
        "id": 415978557,
        "sender_full_name": "Cong Wen",
        "timestamp": 1705481474
    },
    {
        "content": "<p>Yes formalisation is much harder than you think. But it's possible. Two PhD students at Imperial formalised the definition of a stack in December as part of a computing project on our PhD program.</p>",
        "id": 415983096,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705482986
    },
    {
        "content": "<p>The stacks project or EGA more or less assume more basic algebra than what mathlib knows. One should first incorporate Bourbaki's Algebra and Commutative algebra in full, which requires a lot of their General topology.</p>",
        "id": 415983316,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1705483058
    },
    {
        "content": "<p>I think the stacks project covers most of the comm.alg that it needs, right?</p>",
        "id": 415985217,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1705483676
    },
    {
        "content": "<p>Yes I think so, but EGA0 assumes more.</p>",
        "id": 415989226,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705485150
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/EGA.2FSGA.2Fstacks.20project.3F/near/415983096\">said</a>:</p>\n<blockquote>\n<p>Yes formalisation is much harder than you think. But it's possible. Two PhD students at Imperial formalised the definition of a stack in December as part of a computing project on our PhD program.</p>\n</blockquote>\n<p>Yes I am feeling like being the very beginner learning how to use epsilon-delta in analysis. Another difficulty is that currently I can hardly reconstruct the math by reading a snippet of lean codes. Looks very different even after faithful translation.</p>",
        "id": 415996731,
        "sender_full_name": "Cong Wen",
        "timestamp": 1705487492
    },
    {
        "content": "<p>Yes, the algebraic geometry part of mathlib has readability issues. I hope to spend a bunch of time thinking about how to solve that starting in April. (Bunch of deadlines in Feb/Mar)</p>",
        "id": 415996959,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1705487560
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/EGA.2FSGA.2Fstacks.20project.3F/near/415985217\">said</a>:</p>\n<blockquote>\n<p>I think the stacks project covers most of the comm.alg that it needs, right?</p>\n</blockquote>\n<p>No, I don't think so. Very “basic” stuff is not really done. Sometimes stated explicitly, sometimes not.</p>",
        "id": 416083815,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1705512586
    },
    {
        "content": "<p>But I hope that this \"basic\" stuff is mostly done in mathlib already. But maybe I'm too optimistic.</p>",
        "id": 416093825,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1705516068
    },
    {
        "content": "<p>How \"basic\" is the \"basic\" stuff?</p>",
        "id": 416093996,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1705516125
    },
    {
        "content": "<p>I guess there's this: <a href=\"https://stacks.math.columbia.edu/tag/00AR\">https://stacks.math.columbia.edu/tag/00AR</a></p>",
        "id": 416094080,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1705516167
    },
    {
        "content": "<p>cf. number 73 :)</p>",
        "id": 416094119,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1705516185
    },
    {
        "content": "<p>A quick skim of the list suggests to me that 73 is the only missing item.</p>",
        "id": 416094297,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1705516238
    },
    {
        "content": "<p>Looks like it. And it would be quite a challenge to formalize 73 anyway</p>",
        "id": 416094485,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1705516322
    },
    {
        "content": "<p>Actually, do we have 21 and 22?</p>",
        "id": 416104391,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1705519970
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=is_transcendence_basis#doc\">docs#is_transcendence_basis</a> but not transcendence degree.</p>",
        "id": 416214074,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1705520107
    },
    {
        "content": "<p>do we have the exchange property for relative algebraic closure?</p>",
        "id": 416214261,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1705520178
    },
    {
        "content": "<p>I think what Antoine refers to is that, even for things that we do have in Mathlib, some use cases turn out to be almost impossible. An example from this summer was some use case for extending the scalars of a tensor product from the <em>right</em>, and it turned out to be a nightmare, which is not yet solved I think. And of course, if you want to consider non-unital and non-commutative rings, you are in troubles…</p>",
        "id": 416215431,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1705520694
    },
    {
        "content": "<p>Might be fun to take a comm. alg. textbook (maybe atiyah and macdonald) and map each proposition to a mathlib theorem</p>",
        "id": 416216244,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1705521076
    },
    {
        "content": "<p>I'm surprised I can't find anyone who's done it yet</p>",
        "id": 416217819,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1705521663
    },
    {
        "content": "<p>Jujian has just done some stuff about 0-dimensional rings in A-M but he might not have PR'ed it yet.</p>",
        "id": 416218237,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705521838
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"439483\">Andrew Yang</span> <a href=\"#narrow/stream/287929-mathlib4/topic/EGA.2FSGA.2Fstacks.20project.3F/near/416216244\">said</a>:</p>\n<blockquote>\n<p>Might be fun to take a comm. alg. textbook (maybe atiyah and macdonald) and map each proposition to a mathlib theorem</p>\n</blockquote>\n<p>Yes, but I recommend using Bourbaki which go farther and which will have to be implemented in a way or another.<br>\nAlso: those guys have been quite careful about how to build a paper math library, and I don't know of similar efforts.</p>",
        "id": 416771365,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1705668779
    },
    {
        "content": "<p>Should the precise reference of the corresponding proposition in, say Bourbaki, be part of the mathlib docstring? If yes, in which format?</p>",
        "id": 418151769,
        "sender_full_name": "Christian Merten",
        "timestamp": 1706211582
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210574\">Patrick Massot</span> you formalised reams of Bourbaki -- do you have an opinion?</p>",
        "id": 418152311,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706211796
    },
    {
        "content": "<p>We don't have a well-specified format. In particular those refs are not collected by our  tooling. But I still think they are very useful.</p>",
        "id": 418155579,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1706212953
    },
    {
        "content": "<p>And we should have more of them.</p>",
        "id": 418155615,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1706212963
    },
    {
        "content": "<p>Is it a goal to add support for references to the tooling? What are you thinking of in particular? I could imagine an expandable <code>References</code> (similar to <code>Equations</code>) in the docs, that is parsed from some refs syntax in the doc string with a link to the corresponding entry in <code>docs/references.bib</code>.</p>",
        "id": 418156612,
        "sender_full_name": "Christian Merten",
        "timestamp": 1706213333
    },
    {
        "content": "<p>Ideally yes.</p>",
        "id": 418167163,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1706217868
    }
]