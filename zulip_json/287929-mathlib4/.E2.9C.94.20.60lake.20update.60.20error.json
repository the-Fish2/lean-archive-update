[
    {
        "content": "<p>I am using Mathlib in a project and want to update using <code>lake update</code>. However, I got the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span><span class=\"mi\">6</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">'</span><span class=\"n\">leanOptions'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Lake.PackageConfig'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lakefile.lean</span><span class=\"o\">:</span> <span class=\"n\">package</span> <span class=\"n\">configuration</span> <span class=\"n\">has</span> <span class=\"n\">errors</span>\n</code></pre></div>\n<p>I haven't touched <code>mathlib/lakefile.lean</code> myself. What could be the problem and what's the fix?</p>\n<p>Here is the file.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"n\">mathlib</span> <span class=\"n\">where</span>\n  <span class=\"n\">leanOptions</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span>\n    <span class=\"o\">⟨</span><span class=\"bp\">`</span><span class=\"n\">pp.unicode.fun</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">⟩,</span> <span class=\"c1\">-- pretty-prints `fun a ↦ b`</span>\n    <span class=\"o\">⟨</span><span class=\"bp\">`</span><span class=\"n\">pp.proofs.withType</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">⟩,</span>\n    <span class=\"o\">⟨</span><span class=\"bp\">`</span><span class=\"n\">autoImplicit</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">⟩,</span>\n    <span class=\"o\">⟨</span><span class=\"bp\">`</span><span class=\"n\">relaxedAutoImplicit</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">⟩</span>\n  <span class=\"o\">]</span>\n  <span class=\"c1\">-- These are additional settings which do not affect the lake hash,</span>\n  <span class=\"c1\">-- so they can be enabled in CI and disabled locally or vice versa.</span>\n  <span class=\"c1\">-- Warning: Do not put any options here that actually change the olean files,</span>\n  <span class=\"c1\">-- or inconsistent behavior may result</span>\n  <span class=\"n\">weakLeanArgs</span> <span class=\"o\">:=</span>\n    <span class=\"k\">if</span> <span class=\"n\">get_config</span><span class=\"bp\">?</span> <span class=\"n\">CI</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">isSome</span> <span class=\"k\">then</span>\n      <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-DwarningAsError=true\"</span><span class=\"o\">]</span>\n    <span class=\"k\">else</span>\n      <span class=\"bp\">#</span><span class=\"o\">[]</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">!</span>\n<span class=\"cm\">## Mathlib dependencies on upstream projects.</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"kd\">meta</span> <span class=\"k\">if</span> <span class=\"n\">get_config</span><span class=\"bp\">?</span> <span class=\"n\">doc</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"s2\">\"on\"</span> <span class=\"k\">then</span> <span class=\"c1\">-- do not download and build doc-gen4 by default</span>\n<span class=\"n\">require</span> <span class=\"bp\">«</span><span class=\"n\">doc</span><span class=\"bp\">-</span><span class=\"n\">gen4</span><span class=\"bp\">»</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/doc-gen4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n\n<span class=\"n\">require</span> <span class=\"n\">std</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/std4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n<span class=\"n\">require</span> <span class=\"n\">Qq</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover-community/quote4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"master\"</span>\n<span class=\"n\">require</span> <span class=\"n\">aesop</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover-community/aesop\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"master\"</span>\n<span class=\"n\">require</span> <span class=\"n\">proofwidgets</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover-community/ProofWidgets4\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"v0.0.25\"</span>\n<span class=\"n\">require</span> <span class=\"n\">Cli</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover/lean4-cli\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n<span class=\"n\">require</span> <span class=\"n\">importGraph</span> <span class=\"k\">from</span> <span class=\"n\">git</span> <span class=\"s2\">\"https://github.com/leanprover-community/import-graph.git\"</span> <span class=\"bp\">@</span> <span class=\"s2\">\"main\"</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">!</span>\n<span class=\"cm\">## Mathlib libraries</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_lib</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"n\">Cache</span>\n<span class=\"n\">lean_lib</span> <span class=\"n\">MathlibExtras</span>\n<span class=\"n\">lean_lib</span> <span class=\"n\">Archive</span>\n<span class=\"n\">lean_lib</span> <span class=\"n\">Counterexamples</span>\n<span class=\"sd\">/-- Additional documentation in the form of modules that only contain module docstrings. -/</span>\n<span class=\"n\">lean_lib</span> <span class=\"n\">docs</span> <span class=\"n\">where</span>\n  <span class=\"n\">roots</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"n\">docs</span><span class=\"o\">]</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">!</span>\n<span class=\"cm\">## Executables provided by Mathlib</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"sd\">/-- `lake exe cache get` retrieves precompiled `.olean` files from a central server. -/</span>\n<span class=\"n\">lean_exe</span> <span class=\"n\">cache</span> <span class=\"n\">where</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Cache.Main</span>\n\n<span class=\"sd\">/-- `lake exe checkYaml` verifies that all declarations referred to in `docs/*.yaml` files exist. -/</span>\n<span class=\"n\">lean_exe</span> <span class=\"n\">checkYaml</span> <span class=\"n\">where</span>\n  <span class=\"n\">srcDir</span> <span class=\"o\">:=</span> <span class=\"s2\">\"scripts\"</span>\n  <span class=\"n\">supportInterpreter</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n\n<span class=\"sd\">/-- `lake exe shake` checks files for unnecessary imports. -/</span>\n<span class=\"n\">lean_exe</span> <span class=\"n\">shake</span> <span class=\"n\">where</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Shake.Main</span>\n  <span class=\"n\">supportInterpreter</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">!</span>\n<span class=\"cm\">## Other configuration</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"sd\">/--</span>\n<span class=\"sd\">When a package depending on Mathlib updates its dependencies,</span>\n<span class=\"sd\">update its toolchain to match Mathlib's and fetch the new cache.</span>\n<span class=\"sd\">-/</span>\n<span class=\"n\">post_update</span> <span class=\"n\">pkg</span> <span class=\"k\">do</span>\n  <span class=\"k\">let</span> <span class=\"n\">rootPkg</span> <span class=\"bp\">←</span> <span class=\"n\">getRootPackage</span>\n  <span class=\"k\">if</span> <span class=\"n\">rootPkg.name</span> <span class=\"bp\">=</span> <span class=\"n\">pkg.name</span> <span class=\"k\">then</span>\n    <span class=\"n\">return</span> <span class=\"c1\">-- do not run in Mathlib itself</span>\n  <span class=\"c\">/-</span>\n<span class=\"cm\">  Once Lake updates the toolchains,</span>\n<span class=\"cm\">  this toolchain copy will be unnecessary.</span>\n<span class=\"cm\">  https://github.com/leanprover/lean4/issues/2752</span>\n<span class=\"cm\">  -/</span>\n  <span class=\"k\">let</span> <span class=\"n\">wsToolchainFile</span> <span class=\"o\">:=</span> <span class=\"n\">rootPkg.dir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"lean-toolchain\"</span>\n  <span class=\"k\">let</span> <span class=\"n\">mathlibToolchain</span> <span class=\"o\">:=</span> <span class=\"bp\">←</span> <span class=\"n\">IO.FS.readFile</span> <span class=\"bp\">&lt;|</span> <span class=\"n\">pkg.dir</span> <span class=\"bp\">/</span> <span class=\"s2\">\"lean-toolchain\"</span>\n  <span class=\"n\">IO.FS.writeFile</span> <span class=\"n\">wsToolchainFile</span> <span class=\"n\">mathlibToolchain</span>\n  <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"bp\">←</span> <span class=\"n\">IO.getEnv</span> <span class=\"s2\">\"MATHLIB_NO_CACHE_ON_UPDATE\"</span><span class=\"o\">)</span> <span class=\"bp\">!=</span> <span class=\"n\">some</span> <span class=\"s2\">\"1\"</span> <span class=\"k\">then</span>\n    <span class=\"c\">/-</span>\n<span class=\"cm\">    Instead of building and running cache via the Lake API,</span>\n<span class=\"cm\">    spawn a new `lake` since the toolchain may have changed.</span>\n<span class=\"cm\">    -/</span>\n    <span class=\"k\">let</span> <span class=\"n\">exitCode</span> <span class=\"bp\">←</span> <span class=\"n\">IO.Process.spawn</span> <span class=\"o\">{</span>\n      <span class=\"n\">cmd</span> <span class=\"o\">:=</span> <span class=\"s2\">\"elan\"</span>\n      <span class=\"n\">args</span> <span class=\"o\">:=</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"run\"</span><span class=\"o\">,</span> <span class=\"s2\">\"--install\"</span><span class=\"o\">,</span> <span class=\"n\">mathlibToolchain.trim</span><span class=\"o\">,</span> <span class=\"s2\">\"lake\"</span><span class=\"o\">,</span> <span class=\"s2\">\"exe\"</span><span class=\"o\">,</span> <span class=\"s2\">\"cache\"</span><span class=\"o\">,</span> <span class=\"s2\">\"get\"</span><span class=\"o\">]</span>\n    <span class=\"o\">}</span> <span class=\"bp\">&gt;&gt;=</span> <span class=\"o\">(</span><span class=\"bp\">·.</span><span class=\"n\">wait</span><span class=\"o\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">exitCode</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"k\">then</span>\n      <span class=\"n\">logError</span> <span class=\"n\">s</span><span class=\"bp\">!</span><span class=\"s2\">\"{pkg.name}: failed to fetch cache\"</span>\n</code></pre></div>",
        "id": 417562447,
        "sender_full_name": "Yunong Shi",
        "timestamp": 1706061892
    },
    {
        "content": "<p><a href=\"#narrow/stream/270676-lean4/topic/Invalid.20lake.20configuration/near/405630149\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Invalid.20lake.20configuration/near/405630149</a></p>",
        "id": 417563022,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706062279
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"671093\">Yunong Shi</span> has marked this topic as resolved.</p>",
        "id": 417564471,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706063417
    }
]