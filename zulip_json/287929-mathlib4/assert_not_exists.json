[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, would you have a chance to update mathport for the new commands/tactics recently:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\"> ./././Mathport/Syntax/Translate/Command.lean:719:14: unsupported user command assert_not_exists -/</span>\n</code></pre></div>",
        "id": 315691526,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670967623
    },
    {
        "content": "<p>Could we make <code>assert_not_exists</code> say what path a forbidden is transitively imported through? Climbing up the imports copy-pasting the <code>assert_not_exists</code> is not really fun.</p>",
        "id": 423181469,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1708789140
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/assert_not_exists/near/423181469\">said</a>:</p>\n<blockquote>\n<p>Could we make <code>assert_not_exists</code> say what path a forbidden is transitively imported through? Climbing up the imports copy-pasting the <code>assert_not_exists</code> is not really fun.</p>\n</blockquote>\n<p>That sounds a good idea. If anyone would like to implement this it is relatively easy metaprogramming, and there is code to cargo cult in the import-graph library and in the implementation of #find_home.</p>",
        "id": 423205103,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708810339
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/10940\">#10940</a></p>",
        "id": 423210062,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1708814765
    },
    {
        "content": "<p>Thanks, it's very useful!</p>",
        "id": 425067062,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1709725446
    }
]