[
    {
        "content": "<p>MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic.Recall</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Foo</span>\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"n\">recall</span> <span class=\"n\">Foo.foo</span> <span class=\"o\">:</span> <span class=\"n\">String</span> <span class=\"o\">:=</span> <span class=\"s2\">\"\"</span>\n</code></pre></div>",
        "id": 430877189,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712093391
    },
    {
        "content": "<p>this is doubly weird:</p>\n<ul>\n<li>You can't use <code>recall foo</code>, you have to write <code>recall Foo.foo</code> even though you are already in the namespace</li>\n<li>The definition does not seem to be checked against the original in any way</li>\n</ul>",
        "id": 430877375,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712093447
    },
    {
        "content": "<p>Also <code>recall</code> doesn't take a doc string. I would like to use it to gloss the declaration, it doesn't have to be stored or validated against the original</p>",
        "id": 430877904,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712093663
    },
    {
        "content": "<p>There was also this previous thread about it: <a href=\"#narrow/stream/113488-general/topic/.60recall.60.20strangeness\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/.60recall.60.20strangeness</a></p>",
        "id": 430881739,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1712095208
    },
    {
        "content": "<p>oh look at that, past me already filed a bugfix PR</p>",
        "id": 430884985,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712096627
    },
    {
        "content": "<p>seems to be failing though</p>",
        "id": 430885057,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1712096645
    }
]