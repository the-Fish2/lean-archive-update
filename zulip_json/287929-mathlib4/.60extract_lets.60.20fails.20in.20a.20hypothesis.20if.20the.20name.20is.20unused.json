[
    {
        "content": "<p>See the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"k\">let</span> <span class=\"n\">ok</span> <span class=\"o\">:=</span> <span class=\"n\">True</span><span class=\"bp\">;</span> <span class=\"k\">let</span> <span class=\"n\">not_ok</span> <span class=\"o\">:=</span> <span class=\"n\">True</span><span class=\"bp\">;</span> <span class=\"n\">ok</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">let</span> <span class=\"n\">also_ok</span> <span class=\"o\">:=</span> <span class=\"n\">True</span><span class=\"bp\">;</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">extract_lets</span> <span class=\"n\">ok</span> <span class=\"n\">at</span> <span class=\"n\">h</span>\n  <span class=\"n\">extract_lets</span> <span class=\"n\">also_ok</span>\n  <span class=\"n\">try</span> <span class=\"o\">{</span> <span class=\"n\">extract_lets</span> <span class=\"n\">not_ok</span> <span class=\"n\">at</span> <span class=\"n\">h</span> <span class=\"o\">}</span>\n  <span class=\"n\">trace_state</span>\n  <span class=\"c\">/-</span>\n<span class=\"cm\">  ok: Prop := True</span>\n<span class=\"cm\">  h: let not_ok := True;</span>\n<span class=\"cm\">  ok</span>\n<span class=\"cm\">  also_ok: Prop := True</span>\n<span class=\"cm\">  ⊢ True</span>\n<span class=\"cm\">  -/</span>\n  <span class=\"n\">trivial</span>\n</code></pre></div>\n<p>This may not be a big issue, yet I am surprised.</p>",
        "id": 439675718,
        "sender_full_name": "Naruyoko",
        "timestamp": 1716237521
    },
    {
        "content": "<p>What's failing? I only see a linter warning on <code>also_ok</code>. <em>Edit:</em> I wasn't understanding your test. You're saying the <code>try</code> part should have worked.</p>",
        "id": 439677855,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1716238369
    },
    {
        "content": "<p>If you want to disable the linter warning, you can do <code>extract_lets _also_ok</code> or <code>extract_lets _</code>.</p>",
        "id": 439677892,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1716238383
    },
    {
        "content": "<p>Thanks, fixed in <a href=\"https://github.com/leanprover-community/mathlib4/pull/13068\">mathlib4#13068</a></p>",
        "id": 439681025,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1716239554
    }
]