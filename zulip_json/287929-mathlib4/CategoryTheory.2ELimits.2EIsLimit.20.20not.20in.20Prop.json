[
    {
        "content": "<p>I accidentally found out (I don't usually use this part of the library) that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Limits.IsLimit#doc\">docs#CategoryTheory.Limits.IsLimit</a> (and all the typeclasses defined in terms of this one) is not a <code>Prop</code>. It would be nice if someone who is more familiar with category theory in Mathlib will expand the docstring to explain that this has <code>Is</code> prefix but is not a <code>Prop</code>, so the users should be careful. Also, it would be nice to add similar comments to typeclasses like <code>PreservesLimitsOfShape</code>.</p>",
        "id": 420930090,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707693354
    },
    {
        "content": "<p>Pinging <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>, the author of this file.</p>",
        "id": 420930489,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707693728
    },
    {
        "content": "<p>IsLimit should definitely not be a prop. OTOH one could argue that PreservesLimitsOfShape and friends <strong>should</strong> be a prop</p>",
        "id": 420932268,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1707695380
    },
    {
        "content": "<p>IMO, This is one case where the prefix “Is” does make sense, even though the structure contains data</p>",
        "id": 420932368,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1707695465
    },
    {
        "content": "<p>I don't claim that it should be a <code>Prop</code>. I claim that the fact that it's not a <code>Prop</code> should be explained in the docstring.</p>",
        "id": 420932819,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707695820
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsROrC#doc\">docs#IsROrC</a></p>",
        "id": 420933977,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707696621
    },
    {
        "content": "<p>You're familiar with that part of the library :P</p>",
        "id": 420934025,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707696680
    },
    {
        "content": "<p>Thanks, I'll expand this docstring soon!</p>",
        "id": 420934058,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707696710
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/10444\">#10444</a> ?</p>",
        "id": 420934724,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707697240
    },
    {
        "content": "<p>Wait a minute, I'll add more.</p>",
        "id": 420934786,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707697303
    },
    {
        "content": "<p>Done.</p>",
        "id": 420935958,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707698207
    }
]