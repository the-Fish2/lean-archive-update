[
    {
        "content": "<p>We have separate definitions <code>AddCommGroupCat</code> and <code>ModuleCat ℤ</code> in mathlib, and an equivalence of categories between them. I certainly think of these two categories as the same thing. Is there a good reason other than the fact that <code>AddCommGroupCat</code> came before (?) <code>ModuleCat</code> to keep these definitions their API separate, i.e. not just define <code>AddCommGroupCat</code> as <code>ModuleCat ℤ</code>?</p>\n<p>I'm certainly not proposing a refactor of the definition of <code>AddCommGroupCat</code>, I'm not familiar enough with that part of the library to know if it's a good idea, but I'm thinking about how to define the condensed algebraic categories. Right now we have <code>CondensedAb</code> defined as sheaves valued in <code>AddCommGroupCat</code>, and <code>CondensedMod R</code> defined as sheaves valued in <code>ModuleCat R</code> for any ring <code>R</code>. I wonder if it wouldn't be best to just redefine <code>CondensedAb</code> as an abbreviation for <code>CondensedMod ℤ</code>. Then one could prove theorems about <code>CondensedMod R</code> for as general a ring <code>R</code> as possible, and then directly deduce them for <code>CondensedAb</code> by specialising the ring, instead of passing through an equivalence of categories which can be a bit annoying. Are there any obvious drawbacks to this design decision?</p>",
        "id": 434986349,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1713879191
    },
    {
        "content": "<p>I would expect that <code>AddCommGroupCat</code> gives easier access to all of the material on abelian groups in mathlib and is easier to relate to <code>AddGroupCat</code> than <code>ModuleCat ℤ</code>. So whether you prefer <code>AddCommGroupCat</code> or <code>ModuleCat ℤ</code> for a certain application probably comes down to whether you're thinking of abelian groups as a special case of groups or a special case of modules. Both points of view are useful, I think, so I think it makes sense to have both <code>AddCommGroupCat</code> based on mathlib's abelian groups and <code>ModuleCat ℤ</code> based on mathlib's modules. Of course, if the \"special case of groups\" aspect is never relevant for condensed ablian groups, then it could still be a good idea to define <code>CondensedAb</code> to mean <code>CondensedMod ℤ</code>.</p>",
        "id": 434988776,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1713879879
    },
    {
        "content": "<p>Even definitionally, abelian groups in mathlib are very very close to Z-modules. So can we just have the API for the current <code>AddCommGroupCat</code> but change its definition to be an abbrev for <code>ModuleCat Z</code>?<br>\nI'm thinking particularly of ways to construct homs, which should look for <code>-&gt;*</code> instead of Z-linear maps.</p>",
        "id": 435041408,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1713895652
    },
    {
        "content": "<p>I'll look into that and see what happens. In any case I'm convinced that redefining <code>CondensedAb</code> to mean <code>CondensedMod Z</code> is a good idea</p>",
        "id": 435053322,
        "sender_full_name": "Dagur Asgeirsson",
        "timestamp": 1713900236
    }
]