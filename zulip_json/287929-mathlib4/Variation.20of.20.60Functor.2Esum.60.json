[
    {
        "content": "<p><code>Functor.sum</code> defines a functor of type <code>Sum A C â¥¤ Sum B D</code>. I need a variation which has the type <code>Sum A B â¥¤ C</code> but I could not find it in <code>CategoryTheory/Sums</code>. </p>\n<p>Actually, if we define </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">sumâ‚‚</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">â¥¤</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">â¥¤</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Sum</span> <span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"bp\">â¥¤</span> <span class=\"n\">C</span> <span class=\"n\">where</span>\n</code></pre></div>\n<p>then  we have that <code>sum F G = sumâ‚‚ (F â‹™ Sum.inl_) (G â‹™ Sum.inr_)</code>. </p>\n<p>So it seems to me that <code>sumâ‚‚</code> is a bit more fundamental than <code>sum</code> the way it is defined. </p>\n<p>Is it a good idea to add <code>sumâ‚‚</code> to mathlib?</p>",
        "id": 432772540,
        "sender_full_name": "Sina H ð“ƒµ",
        "timestamp": 1712863422
    },
    {
        "content": "<p>Are we really missing the (2-)universal property of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Sum#doc\">docs#Sum</a> ?</p>",
        "id": 432773198,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1712863672
    },
    {
        "content": "<p>I was not pursuing that path, since i thought I might get into problem with the universes (aka size issue). Are you suggesting defining <code>sumâ‚‚</code> as a gap map out of the sum in the large 2-category of (small) categories?<br>\nI'll try this.</p>",
        "id": 432773475,
        "sender_full_name": "Sina H ð“ƒµ",
        "timestamp": 1712863774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> <br>\nI think the situation is dual to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Functor.prod%27#doc\">docs#CategoryTheory.Functor.prod'</a>, might be a good idea to define <code>Functor.sum'</code>?</p>",
        "id": 432778005,
        "sender_full_name": "Sina H ð“ƒµ",
        "timestamp": 1712865550
    }
]