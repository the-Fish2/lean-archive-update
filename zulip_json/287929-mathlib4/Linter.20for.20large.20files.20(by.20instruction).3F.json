[
    {
        "content": "<p>Piggybacking on another thread. Given that we have massively shrunk the leading file by instruction size, it might make sense to cap the number of instructions a single file requires. </p>\n<p>We don’t want to be in a situation where a single file dominates the build process like in the past.</p>",
        "id": 416336294,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1705525715
    },
    {
        "content": "<p>Can we lint for that?</p>",
        "id": 416455169,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1705529919
    },
    {
        "content": "<p>I fear that things like adding new <code>simp</code> lemmas might cause other modules to trip the linter down the line, forcing refactors to be done in PRs that would otherwise only add new things</p>",
        "id": 416464495,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1705535076
    },
    {
        "content": "<p>I don't know if this fits into the linter framework, but maybe <code>max (num instructions for individual file)</code> could be added as a metric to speedcenter, so it is easier to see if this changes</p>",
        "id": 416465901,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1705535823
    },
    {
        "content": "<p>Alternatively, a bot posting on zulip periodically.</p>",
        "id": 416479734,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1705543276
    },
    {
        "content": "<p>Also, small changes that are +1T in instructions should be flagged.</p>",
        "id": 416799211,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1705677455
    },
    {
        "content": "<p>In <code>mathlib3</code> times, a PR causing a timeout and waiting for a fix of this timeout was not that uncommon.</p>",
        "id": 416856939,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705694217
    },
    {
        "content": "<p>To illustrate how surprising it can be <a href=\"https://github.com/leanprover-community/mathlib4/pull/9721\">#9721</a> has <a href=\"http://speed.lean-fro.org/mathlib4/run-detail/98b0b2ed-10d7-4458-af19-955d7d649dfb\">this</a> for its bench results.</p>",
        "id": 417515824,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1706038800
    },
    {
        "content": "<p>Do we know which part of <a href=\"https://github.com/leanprover-community/mathlib4/pull/9721\">#9721</a> causes this?</p>",
        "id": 417517756,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706039637
    },
    {
        "content": "<p>I think it’s the import. <code>CoeFun</code> searches get more expensive. It’s fixed in <a href=\"https://github.com/leanprover-community/mathlib4/pull/8386\">#8386</a> but I wouldn’t have caught it</p>",
        "id": 417518616,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1706039957
    }
]