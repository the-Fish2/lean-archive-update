[
    {
        "content": "<p>In the definition of the monoidal category instance on the opposite category we have to explicitly write out <code>Quiver.Hom.unop_inj &lt;| by simp</code> to prove the laws instead of the proofs being generated by <code>aesop_cat</code>. The obstruction to <code>aesop_cat</code> being able to prove these is that <code>CategoryTheory.op_comp</code> rewrites in the wrong direction (for this). We can get around this by making <code>Quiver.Hom.unop_inj</code> a local <code>@[ext]</code> lemma, but for a similar problem in the other direction (\"unop\"ing an op-ed structure and deriving the laws for it) this solution doesn't work, since <code>Quiver.Hom.op_inj</code> is always valid to apply. Is there any clever trick with <code>aesop</code> we could here? It seems like <code>CategoryTheory.op_comp</code> is directed correctly, but otoh it seems like in a lot of cases we're going to want to automatically generate proofs which use it to rewrite the other way</p>",
        "id": 423059054,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1708708234
    },
    {
        "content": "<p>I don't really know the first thing about tactics but I'll comment that your situation reminds me a bit of the problem we had with trying to do casts using <code>simp</code>, when sometimes we wanted to pull the coercions out and other times push them in as far as possible, so there was no good choice for simp lemma direction. This was ultimately fixed by not using <code>simp</code> and writing entirely new tactics <code>norm_cast</code> and <code>push_cast</code>.</p>",
        "id": 423061560,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708709075
    },
    {
        "content": "<p>Hm, that does seem like a similar problem!</p>",
        "id": 423063880,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1708709887
    },
    {
        "content": "<p>All metaprogramming contributions are greatly appreciated :)</p>",
        "id": 423064441,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1708710119
    }
]