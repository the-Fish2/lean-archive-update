[
    {
        "content": "<p>The functions <code>ContinuousMultilinearMap.norm_mkPiAlgebraFin</code> and <code>ContinuousMultilinearMap.norm_mkPiAlgebraFin_le_of_pos</code> contain some unused type class arguments, but these are not detected by the unused variable linter, because they technically are used in the definition. In the first case, the definition starts like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">norm_mkPiAlgebraFin</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">NormOneClass</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"bp\">‚Äñ</span><span class=\"n\">ContinuousMultilinearMap</span><span class=\"bp\">.</span><span class=\"n\">mkPiAlgebraFin</span><span class=\"w\"> </span><span class=\"n\">ùïú</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"bp\">‚Äñ</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"n\">n</span>\n</code></pre></div>\n<p>here, the tactic <code>cases n</code> causes all <code>n</code> in the local context to be replaced by <code>Nat.zero</code>. It does this for all variables introduced with a <code>variable</code> command that contain <code>n</code>, and thus forces these variables to be used in the current declaration, even though some of these variables are not necessary at all.</p>\n<p>This particular case can easily be fixed, but I wonder if there is a better way to detect this kind of mistake?</p>",
        "id": 443401985,
        "sender_full_name": "Jovan Gerbscheid",
        "timestamp": 1717806099
    },
    {
        "content": "<p>See <a href=\"https://github.com/leanprover/lean4/pull/2452\">lean4#2452</a></p>",
        "id": 443404134,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717807112
    },
    {
        "content": "<p>It looks like the only way we can deal with it until hte bug is fixed is to minimize <code>variable</code>s for each section instead of having a long <code>variable</code> declaration at the top of the file with all variables that will be needed below.</p>",
        "id": 443422105,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717820484
    },
    {
        "content": "<p>Here's a fix for this particular case: <a href=\"https://github.com/leanprover-community/mathlib4/pull/13628\">#13628</a></p>",
        "id": 443428144,
        "sender_full_name": "Jovan Gerbscheid",
        "timestamp": 1717825326
    },
    {
        "content": "<p>Delegated</p>",
        "id": 443428949,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1717826068
    }
]