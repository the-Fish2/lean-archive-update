[
    {
        "content": "<p>Why do we have both <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.repeat#doc\">docs#Nat.repeat</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.iterate#doc\">docs#Nat.iterate</a> ?</p>",
        "id": 373695396,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1688906992
    },
    {
        "content": "<p>It looks like <a href=\"https://github.com/leanprover-community/mathlib4/blob/2d62a6952c0541ea769ba9d32471c15ebaf67f8c/Mathlib/Init/Data/Nat/Lemmas.lean\"><code>Mathlib/Init/Data/Nat/Lemmas.lean</code></a> is an ad-hoc port, which is probably why it has left this mess behind</p>",
        "id": 373696133,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1688907187
    },
    {
        "content": "<p>No, we already had both in lean 3 core</p>",
        "id": 373696258,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1688907224
    },
    {
        "content": "<p>Oh, but <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.repeat\">docs3#nat.repeat</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.repeat#doc\">docs#Nat.repeat</a> don't match</p>",
        "id": 373696563,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1688907327
    },
    {
        "content": "<p>The new repeat was probably added with no concern for what existed in mathlib 3. Maybe it's worth filling an issue about</p>",
        "id": 373697193,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1688907501
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Nat.2Erepeat.20vs.20Nat.2Eiterate/near/373696133\">said</a>:</p>\n<blockquote>\n<p>It looks like <a href=\"https://github.com/leanprover-community/mathlib4/blob/2d62a6952c0541ea769ba9d32471c15ebaf67f8c/Mathlib/Init/Data/Nat/Lemmas.lean\"><code>Mathlib/Init/Data/Nat/Lemmas.lean</code></a> is an ad-hoc port</p>\n</blockquote>\n<p>I've started a re-port at <a href=\"https://github.com/leanprover-community/mathlib4/pull/5782\">#5782</a></p>",
        "id": 373710556,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1688911329
    },
    {
        "content": "<p>This now gives a panic‽</p>",
        "id": 373744085,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1688921500
    },
    {
        "content": "<p>Ran into this again today. Should we delete <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Nat.iterate#doc\">docs#Nat.iterate</a>, or should we file a bug against core to restore the old meaning of <code>repeat</code>?</p>",
        "id": 410835410,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1704196761
    },
    {
        "content": "<p>I have a slight preference for <code>Nat.repeat</code> since it means <code>repeat f n.succ a</code> is defeq to <code>f _</code>.</p>",
        "id": 410837431,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704197833
    },
    {
        "content": "<p>The other definition is tail recursive though, which is important</p>",
        "id": 410837647,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704197958
    },
    {
        "content": "<p>we can fix that using a csimp lemma though</p>",
        "id": 410837681,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1704197986
    },
    {
        "content": "<p>does Lean have TCO?</p>",
        "id": 410837874,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1704198076
    },
    {
        "content": "<p>There is a <code>@[csimp]</code> for <code>Nat.repeat</code> in the core.</p>",
        "id": 410875143,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704214731
    },
    {
        "content": "<p>And <code>repeatTR</code> is defined the same way as <code>Nat.iterate</code>.</p>",
        "id": 410875615,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704214898
    },
    {
        "content": "<p>I like the name <code>iterate</code> but I'm OK with migrating to <code>repeat</code>.</p>",
        "id": 410875808,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704214947
    },
    {
        "content": "<p>I think <code>iterate</code> is a better name mathematically.</p>",
        "id": 410877253,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704215421
    },
    {
        "content": "<p>OTOH, we can redefine <code>Nat.iterate</code> to be as <code>Nat.repeat</code>.</p>",
        "id": 410877374,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704215502
    },
    {
        "content": "<p>And move some lemmas about it (in the <code>Nat.repeat</code> spelling) to <code>Std4</code>.</p>",
        "id": 410877494,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1704215551
    }
]