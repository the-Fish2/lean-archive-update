[
    {
        "content": "<p>I have a project with mathlib4 as a dependency. When I run <code>lake exe cache get</code> I see:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">4442</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">4424</span><span class=\"bp\">/</span><span class=\"mi\">4442</span> <span class=\"bp\">=</span> <span class=\"mi\">99</span><span class=\"bp\">%</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Why would nothing be downloading here? Are the files not being written to disk or something? My <code>.lake</code> directory has all permission bits set.</p>",
        "id": 435441555,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714068214
    },
    {
        "content": "<p>this usually means that the root hash is different, perhaps because you are on a new version of lean or have local modifications to the lakefile</p>",
        "id": 435442339,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714068534
    },
    {
        "content": "<p>it's not that the files are not being written to disk, all of the lookups for files are getting 404 from the server</p>",
        "id": 435442440,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714068586
    },
    {
        "content": "<p>my <code>lean-toolchain</code> and the <code>.lake/packages/mathlib/lean-toolchain</code> are both <code>leanprover/lean4:v4.7.0</code>.  When I do <code>lean --version</code> it outputs:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">unknown</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 435442909,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714068776
    },
    {
        "content": "<p>what commit are you on?</p>",
        "id": 435442976,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714068807
    },
    {
        "content": "<p>of mathlib or lean?</p>",
        "id": 435443003,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714068818
    },
    {
        "content": "<p>mathlib</p>",
        "id": 435443015,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714068822
    },
    {
        "content": "<p>you are in a project depending on mathlib I guess?</p>",
        "id": 435443031,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714068835
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"o\">{</span><span class=\"s2\">\"url\"</span><span class=\"o\">:</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span><span class=\"o\">,</span>\n   <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"git\"</span><span class=\"o\">,</span>\n   <span class=\"s2\">\"subDir\"</span><span class=\"o\">:</span> <span class=\"n\">null</span><span class=\"o\">,</span>\n   <span class=\"s2\">\"rev\"</span><span class=\"o\">:</span> <span class=\"s2\">\"61ad21e8d0386579b09dc2ecc8f34dc46877d02a\"</span><span class=\"o\">,</span>\n   <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"mathlib\"</span><span class=\"o\">,</span>\n   <span class=\"s2\">\"manifestFile\"</span><span class=\"o\">:</span> <span class=\"s2\">\"lake-manifest.json\"</span><span class=\"o\">,</span>\n   <span class=\"s2\">\"inputRev\"</span><span class=\"o\">:</span> <span class=\"n\">null</span><span class=\"o\">,</span>\n   <span class=\"s2\">\"inherited\"</span><span class=\"o\">:</span> <span class=\"n\">false</span><span class=\"o\">,</span>\n   <span class=\"s2\">\"configFile\"</span><span class=\"o\">:</span> <span class=\"s2\">\"lakefile.lean\"</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 435443041,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714068839
    },
    {
        "content": "<p>try deleting <code>.lake</code> and re-run <code>lake exe cache get</code></p>",
        "id": 435443103,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714068855
    },
    {
        "content": "<p>It's still running but</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">4442</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">438</span><span class=\"bp\">/</span><span class=\"mi\">4442</span> <span class=\"bp\">=</span> <span class=\"mi\">9</span><span class=\"bp\">%</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 435443264,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714068945
    },
    {
        "content": "<p>I'm on a nix install of <code>lean</code>, I understand that's technically unsupported but I don't know why that would affect anything here as I have both <code>lean</code> and <code>lake</code>. I do not have <code>elan</code> though.</p>",
        "id": 435443412,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714068998
    },
    {
        "content": "<p>oh, that might be relevant</p>",
        "id": 435443442,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714069015
    },
    {
        "content": "<p>here's the full output in case it matters:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">std</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">std4</span> <span class=\"n\">to</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Qq</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">quote4</span> <span class=\"n\">to</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">aesop</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">aesop</span> <span class=\"n\">to</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">proofwidgets</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">ProofWidgets4</span> <span class=\"n\">to</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">Cli</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">cli</span> <span class=\"n\">to</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli'</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"n\">importGraph</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"kn\">import</span><span class=\"bp\">-</span><span class=\"n\">graph.git</span> <span class=\"n\">to</span> <span class=\"bp\">'./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">importGraph'</span>\n<span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">playground</span><span class=\"o\">:</span> <span class=\"n\">package</span> <span class=\"n\">configuration</span> <span class=\"n\">option</span> <span class=\"bp\">`</span><span class=\"n\">moreServerArgs</span><span class=\"bp\">`</span> <span class=\"n\">is</span> <span class=\"n\">deprecated</span> <span class=\"k\">in</span> <span class=\"n\">favor</span> <span class=\"n\">of</span> <span class=\"bp\">`</span><span class=\"n\">moreServerOptions</span><span class=\"bp\">`</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Downloading</span> <span class=\"n\">proofwidgets</span> <span class=\"n\">cloud</span> <span class=\"n\">release</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Unpacking</span> <span class=\"n\">proofwidgets</span> <span class=\"n\">cloud</span> <span class=\"n\">release</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.IO</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Hashing</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Requests</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Compiling</span> <span class=\"n\">Cache.Main</span>\n<span class=\"n\">info</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"o\">]</span> <span class=\"n\">Linking</span> <span class=\"n\">cache</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">4442</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">2337</span><span class=\"bp\">/</span><span class=\"mi\">4442</span> <span class=\"bp\">=</span> <span class=\"mi\">52</span><span class=\"bp\">%</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 435443515,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714069046
    },
    {
        "content": "<p>I know that <code>lake update</code> on mathlib runs some post-update hooks that rely on <code>elan</code>, but I don't see any similar error on <code>lake exe cache get</code>. But perhaps that is the issue.</p>",
        "id": 435443715,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714069120
    },
    {
        "content": "<p>what is your lakefile?</p>",
        "id": 435443836,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714069176
    },
    {
        "content": "<p>it looks like you have an old lakefile</p>",
        "id": 435443854,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714069183
    },
    {
        "content": "<p>I just did</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"bp\">+</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"o\">:</span><span class=\"n\">v4.7.0</span> <span class=\"n\">new</span> <span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">test</span> <span class=\"n\">math</span>\n<span class=\"n\">cd</span> <span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">test</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n</code></pre></div>\n<p>and it was able to download the files (from the same version of mathlib as the one you quoted)</p>",
        "id": 435444174,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714069305
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435443854\">said</a>:</p>\n<blockquote>\n<p>it looks like you have an old lakefile</p>\n</blockquote>\n<p>Oh shoot I'm on an older commit of my repo. Pretty sure this behavior is the same though regardless.</p>",
        "id": 435444538,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714069464
    },
    {
        "content": "<p>Yeah that warning no longer occurs, but same issue. Here's the lakefile:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Lake</span>\n<span class=\"kn\">open</span> <span class=\"n\">Lake</span> <span class=\"n\">DSL</span>\n\n<span class=\"n\">package</span> <span class=\"bp\">«</span><span class=\"n\">logic</span><span class=\"bp\">»</span>\n\n<span class=\"n\">lean_lib</span> <span class=\"bp\">«</span><span class=\"n\">Logic</span><span class=\"bp\">»</span>\n<span class=\"n\">lean_lib</span> <span class=\"bp\">«</span><span class=\"n\">MathlibExt</span><span class=\"bp\">»</span>\n\n<span class=\"kd\">@[</span><span class=\"n\">default_target</span><span class=\"kd\">]</span>\n<span class=\"n\">lean_exe</span> <span class=\"bp\">«</span><span class=\"n\">logic</span><span class=\"bp\">»</span> <span class=\"n\">where</span>\n  <span class=\"n\">root</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">Main</span>\n\n<span class=\"n\">require</span> <span class=\"n\">mathlib</span> <span class=\"k\">from</span> <span class=\"n\">git</span>\n  <span class=\"s2\">\"https://github.com/leanprover-community/mathlib4.git\"</span>\n</code></pre></div>",
        "id": 435444618,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714069503
    },
    {
        "content": "<p>Yeah it's the same issue with 0 things downloaded. This must be some nix issue then.</p>",
        "id": 435444781,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714069572
    },
    {
        "content": "<p>Dang that's a shame. I guess I'll just let Mathlib build</p>",
        "id": 435444975,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714069660
    },
    {
        "content": "<p>Even with elan installed, this still fails. I edited the local <code>mathlib/Cache/Requests.lean</code> file to show any 404 errors and indeed all of the urls are 404-ing:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">The</span> <span class=\"n\">requested</span> <span class=\"n\">URL</span> <span class=\"n\">returned</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"mi\">404</span>\n<span class=\"bp\">...</span>\n<span class=\"n\">The</span> <span class=\"n\">requested</span> <span class=\"n\">URL</span> <span class=\"n\">returned</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"mi\">404</span>\n</code></pre></div>\n<p>Looking at the <code>.cache/mathlib/curl.cfg</code> file:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">url</span> <span class=\"bp\">=</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">lakecache.blob.core.windows.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span><span class=\"bp\">/</span><span class=\"n\">f</span><span class=\"bp\">/</span><span class=\"mi\">17</span><span class=\"n\">d4878a5ec562e2.ltar</span>\n<span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"s2\">\"/home/enricozb/.cache/mathlib/17d4878a5ec562e2.ltar.part\"</span>\n<span class=\"n\">url</span> <span class=\"bp\">=</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">lakecache.blob.core.windows.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span><span class=\"bp\">/</span><span class=\"n\">f</span><span class=\"bp\">/</span><span class=\"mi\">99903</span><span class=\"n\">edba2a1e8a9.ltar</span>\n<span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"s2\">\"/home/enricozb/.cache/mathlib/99903edba2a1e8a9.ltar.part\"</span>\n<span class=\"n\">url</span> <span class=\"bp\">=</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">lakecache.blob.core.windows.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span><span class=\"bp\">/</span><span class=\"n\">f</span><span class=\"bp\">/</span><span class=\"n\">df581a5d33333ac3.ltar</span>\n<span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"s2\">\"/home/enricozb/.cache/mathlib/df581a5d33333ac3.ltar.part\"</span>\n<span class=\"bp\">...</span>\n</code></pre></div>\n<p>It's not obvious to me why these hashes aren't correct. Is there any way to further debug why the root hashes might be different?</p>",
        "id": 435713072,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714198762
    },
    {
        "content": "<p>Now it worked? I have ~4200 <code>.ltar</code> files in <code>.cache/mathlib</code>, got the <code>Decompressing 4229 files</code> message, ran <code>lake build</code> which finished instantly, but my root package file that contains only <code>import Mathlib</code> still is rebuilding mathlib when I visit it in VS Code.</p>",
        "id": 435714378,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714199092
    },
    {
        "content": "<p>I guess I can see why the nix install is unsupported if this is generally how it goes</p>",
        "id": 435714470,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714199115
    },
    {
        "content": "<p>It looks like <code>leantar</code> is downloaded along with the cache? I have <code>leantar-0.1.11</code> among other versions. Unfortunately in nixos binaries are not portable like this.</p>",
        "id": 435716836,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714199724
    },
    {
        "content": "<p>Indeed, just asking <code>leantar</code> for the version panics.<br>\n<a href=\"/user_uploads/3121/oN7yOJNvxhEFk7C59rBlnJuK/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/oN7yOJNvxhEFk7C59rBlnJuK/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/oN7yOJNvxhEFk7C59rBlnJuK/image.png\"></a></div>",
        "id": 435717452,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714199880
    },
    {
        "content": "<p>If lake build finished instantly, then the cache worked. If it doesn't work in the editor, then you must have a different setup there. Are you sure you're not still using the wrong Lean there?</p>",
        "id": 435718455,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714200127
    },
    {
        "content": "<p>I don't think so, but I'm not sure how to check that.</p>",
        "id": 435722133,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714201058
    },
    {
        "content": "<p>Good question, you could check the path of the <code>lean</code> executable running in the background using ps or similar</p>",
        "id": 435723505,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714201401
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"n\">b7xlr4jsfi94vysh5xq3wm56c7dfahw</span><span class=\"bp\">-</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">stage1</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean</span> <span class=\"c1\">--version</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">unknown</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>same one</p>",
        "id": 435723862,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714201514
    },
    {
        "content": "<p>I'm not sure where these decompressed olean files are supposed to be stored, because the <code>.lake/</code> only has <code>.lake/lakefile.olean</code>.</p>",
        "id": 435724073,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714201595
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256383\">Enrico Borba</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435723862\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"bp\">/</span><span class=\"n\">nix</span><span class=\"bp\">/</span><span class=\"n\">store</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"n\">b7xlr4jsfi94vysh5xq3wm56c7dfahw</span><span class=\"bp\">-</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">stage1</span><span class=\"bp\">/</span><span class=\"n\">bin</span><span class=\"bp\">/</span><span class=\"n\">lean</span> <span class=\"c1\">--version</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">7</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">unknown</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>same one</p>\n</blockquote>\n<p>Yes, so the wrong one, no? This is not an elan toolchain.</p>",
        "id": 435724179,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714201693
    },
    {
        "content": "<p>Sorry, by using the nix install you've effectively entered \"expert mode\" and apparently you're still in it so debugging this remotely is almost impossible.</p>",
        "id": 435724272,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714201814
    },
    {
        "content": "<p>Ah I see what you mean, i was checking that it was the same version, not the same one that elan is running.</p>",
        "id": 435728234,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714204129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435724272\">said</a>:</p>\n<blockquote>\n<p>Sorry, by using the nix install you've effectively entered \"expert mode\" and apparently you're still in it so debugging this remotely is almost impossible.</p>\n</blockquote>\n<p>Yeah no worries, I figured. Wanted to confirm that this was a setup issue and not something else. Thanks</p>",
        "id": 435728250,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714204147
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256383\">Enrico Borba</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435724073\">said</a>:</p>\n<blockquote>\n<p>I'm not sure where these decompressed olean files are supposed to be stored, because the <code>.lake/</code> only has <code>.lake/lakefile.olean</code>.</p>\n</blockquote>\n<p>Fwiw they should be somewhere in there inside Mathlib/</p>",
        "id": 435728644,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714204475
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435728644\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"256383\">Enrico Borba</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435724073\">said</a>:</p>\n<blockquote>\n<p>I'm not sure where these decompressed olean files are supposed to be stored, because the <code>.lake/</code> only has <code>.lake/lakefile.olean</code>.</p>\n</blockquote>\n<p>Fwiw they should be somewhere in there inside Mathlib/</p>\n</blockquote>\n<p>Under <code>.lake/</code>?</p>",
        "id": 435728972,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714204766
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256383\">Enrico Borba</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435717452\">said</a>:</p>\n<blockquote>\n<p>Indeed, just asking <code>leantar</code> for the version panics.<br>\n<a href=\"/user_uploads/3121/oN7yOJNvxhEFk7C59rBlnJuK/image.png\">image.png</a></p>\n</blockquote>\n<p>That's not the version flag, that's the verbose flag. (Sorry for the confusion!) Using a <code>panic!</code> for the help message is also probably not a good idea. Try <code>leantar --version</code> instead.</p>",
        "id": 435781623,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714243775
    },
    {
        "content": "<p>The fact that it said that much is indication that it is working though. I don't know what would happen if you use a nixos non-portable binary, but presumably not a panic message from the rust code.</p>",
        "id": 435781731,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714243894
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256383\">@Enrico Borba</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435728972\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435728644\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"256383\">Enrico Borba</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435724073\">said</a>:</p>\n<blockquote>\n<p>I'm not sure where these decompressed olean files are supposed to be stored, because the <code>.lake/</code> only has <code>.lake/lakefile.olean</code>.</p>\n</blockquote>\n<p>Fwiw they should be somewhere in there inside Mathlib/</p>\n</blockquote>\n<p>Under <code>.lake/</code>?</p>\n</blockquote>\n<p>For example you should find a decompressed olean file at <code>.lake/packages/mathlib/.lake/build/lib/Mathlib.olean</code></p>",
        "id": 435781906,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714244046
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435781731\">said</a>:</p>\n<blockquote>\n<p>The fact that it said that much is indication that it is working though. I don't know what would happen if you use a nixos non-portable binary, but presumably not a panic message from the rust code.</p>\n</blockquote>\n<p>Typically a segfault happens, or a dynamic library the binary expects to be present isn't.</p>",
        "id": 435781916,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714244063
    },
    {
        "content": "<p>neither of those should be an issue for rust code</p>",
        "id": 435781925,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714244082
    },
    {
        "content": "<p>Indeed asking for <code>./leantar-0.1.11 --version</code> produces <code>leantar 0.1.11</code>.</p>",
        "id": 435781927,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714244085
    },
    {
        "content": "<p>yeah I saw the binary was statically linked</p>",
        "id": 435781953,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714244103
    },
    {
        "content": "<p>It's unclear where the oleans are getting decompressed to, because nothing under <code>.lake/</code> changes after <code>lake exe cache get</code>. I'll try to debug the lean code tomorrow.</p>",
        "id": 435782031,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714244170
    },
    {
        "content": "<p>does it say <code>Decompressing N files</code>?</p>",
        "id": 435782065,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714244222
    },
    {
        "content": "<p>Yes it does.</p>",
        "id": 435783329,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714245481
    },
    {
        "content": "<p>Here's a copy-paste of a session where I wiped <code>.lake/</code>, and did a <code>lake update</code>. It contains my lakefile as well, and versions for <code>lean</code> and <code>elan</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ ls .lake/\n\".lake/\": No such file or directory (os error 2)\n\n$ lean --version\nLean (version 4.7.0, x86_64-unknown-linux-gnu, Release)\n\n$ elan --version\nelan 3.1.1\n\n$ cat lakefile.lean\n───────┬────────────────────────────────────────────────────────────────────────────────────────\n       │ File: lakefile.lean\n───────┼────────────────────────────────────────────────────────────────────────────────────────\n   1   │ import Lake\n   2   │ open Lake DSL\n   3   │\n   4   │ package «logic»\n   5   │\n   6   │ lean_lib «Logic»\n   7   │ lean_lib «MathlibExt»\n   8   │\n   9   │ @[default_target]\n  10   │ lean_exe «logic» where\n  11   │   root := `Main\n  12 _ │\n  13   │ require mathlib from git\n  14 ~ │   \"https://github.com/leanprover-community/mathlib4.git\"\n───────┴────────────────────────────────────────────────────────────────────────────────────────\n\n$ lake update\nmathlib: cloning https://github.com/leanprover-community/mathlib4.git to './.lake/packages/mathlib'\nstd: cloning https://github.com/leanprover/std4 to './.lake/packages/std'\nQq: cloning https://github.com/leanprover-community/quote4 to './.lake/packages/Qq'\naesop: cloning https://github.com/leanprover-community/aesop to './.lake/packages/aesop'\nproofwidgets: cloning https://github.com/leanprover-community/ProofWidgets4 to './.lake/packages/proofwidgets'\nCli: cloning https://github.com/leanprover/lean4-cli to './.lake/packages/Cli'\nimportGraph: cloning https://github.com/leanprover-community/import-graph.git to './.lake/packages/importGraph'\nwarning: Qq: ignoring missing dependency manifest './.lake/packages/Qq/lake-manifest.json'\nwarning: Cli: ignoring missing dependency manifest './.lake/packages/Cli/lake-manifest.json'\nmathlib: running post-update hooks\ninfo: [0/9] Downloading proofwidgets cloud release\ninfo: [0/9] Unpacking proofwidgets cloud release\ninfo: [1/9] Building Cache.IO\ninfo: [2/9] Compiling Cache.IO\ninfo: [2/9] Building Cache.Hashing\ninfo: [3/9] Compiling Cache.Hashing\ninfo: [3/9] Building Cache.Requests\ninfo: [4/9] Compiling Cache.Requests\ninfo: [4/9] Building Cache.Main\ninfo: [6/9] Compiling Cache.Main\ninfo: [9/9] Linking cache\nAttempting to download 3568 file(s)\nDownloaded: 3568 file(s) [attempted 3568/3568 = 100%] (100% success)\nDecompressing 4448 file(s)\nunpacked in 5916 ms\n\n$ fd . --extension olean .lake/ --hidden\n.lake/lakefile.olean\n.lake/packages/Cli/.lake/lakefile.olean\n</code></pre></div>",
        "id": 435783385,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714245509
    },
    {
        "content": "<p>The files are downloaded to <code>~/.cache/mathlib</code>but no idea where they are decompressed to</p>",
        "id": 435783395,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714245520
    },
    {
        "content": "<p>what is in the folders leading to <code>.lake/packages/mathlib/.lake/build/lib/Mathlib.olean</code>?</p>",
        "id": 435783988,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714246107
    },
    {
        "content": "<p>Oh wait, it looks like they are all in the <code>.lake/packages/mathlib/.lake/</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">...</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">FreeModule</span><span class=\"bp\">/</span><span class=\"n\">Finite</span><span class=\"bp\">/</span><span class=\"n\">Matrix.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">FreeModule</span><span class=\"bp\">/</span><span class=\"n\">Finite</span><span class=\"bp\">/</span><span class=\"n\">Basic.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">FreeModule</span><span class=\"bp\">/</span><span class=\"n\">Basic.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">FreeModule</span><span class=\"bp\">/</span><span class=\"n\">Determinant.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">GeneralLinearGroup.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">FinsuppVectorSpace.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">CrossProduct.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">LDL.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">Determinant.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">Polynomial.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">PosDef.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">Symmetric.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">Reindex.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">FiniteDimensional.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">InvariantBasisNumber.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">Hermitian.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">Block.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">NonsingularInverse.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">SesquilinearForm.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">ToLinearEquiv.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">ToLin.olean</span>\n<span class=\"bp\">.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"bp\">/</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">LinearAlgebra</span><span class=\"bp\">/</span><span class=\"n\">Matrix</span><span class=\"bp\">/</span><span class=\"n\">ProjectiveSpecialLinearGroup.olean</span>\n<span class=\"bp\">...</span>\n</code></pre></div>\n<p>I'm assuming these are supposed to be placed at the top-level <code>.lake/</code>?</p>",
        "id": 435811064,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714273141
    },
    {
        "content": "<p>no, they are exactly where they are supposed to be</p>",
        "id": 435818434,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714278780
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435783988\">said</a>:</p>\n<blockquote>\n<p>what is in the folders leading to <code>.lake/packages/mathlib/.lake/build/lib/Mathlib.olean</code>?</p>\n</blockquote>\n<p>not sure how to best answer this question</p>",
        "id": 435821644,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714279865
    },
    {
        "content": "<p>Here's me <code>ls</code>-ing into each intermediate directory</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ ls .lake/\npackages  lakefile.olean  lakefile.olean.lock  lakefile.olean.trace\n\n$ ls .lake/packages/\nCli  Qq  aesop  checkdecls  importGraph  mathlib  proofwidgets  std\n\n$ ls .lake/packages/mathlib/\nArchive  Counterexamples  MathlibExtras  docs     test    Archive.lean        Counterexamples.lean  LICENSE       MathlibExtras.lean  bors.toml  lake-manifest.json  lean-toolchain\nCache    Mathlib          Shake          scripts  widget  CODE_OF_CONDUCT.md  GNUmakefile           Mathlib.lean  README.md           docs.lean  lakefile.lean\n\n$ ls .lake/packages/mathlib/.lake/\nbuild  packages  lakefile.olean  lakefile.olean.lock  lakefile.olean.trace\n\n$ ls .lake/packages/mathlib/.lake/build/\nbin  ir  lib\n\n$ ls .lake/packages/mathlib/.lake/build/lib/\nCache    MathlibExtras  Mathlib.ilean.hash  Mathlib.olean.hash  MathlibExtras.ilean       MathlibExtras.olean       MathlibExtras.trace\nMathlib  Mathlib.ilean  Mathlib.olean       Mathlib.trace       MathlibExtras.ilean.hash  MathlibExtras.olean.hash\n\n$ ls .lake/packages/mathlib/.lake/build/lib/Mathlib\nAlgebra            CategoryTheory  Control     FieldTheory        Init           Mathport       Order                 SetTheory  Util               Tactic.olean.hash\nAlgebraicGeometry  Combinatorics   Data        Geometry           Lean           MeasureTheory  Probability           Tactic     Tactic.ilean       Tactic.trace\nAlgebraicTopology  Computability   Deprecated  GroupTheory        LinearAlgebra  ModelTheory    RepresentationTheory  Testing    Tactic.ilean.hash\nAnalysis           Condensed       Dynamics    InformationTheory  Logic          NumberTheory   RingTheory            Topology   Tactic.olean\n</code></pre></div>",
        "id": 435822443,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714280071
    },
    {
        "content": "<p>this looks exactly like a successful run</p>",
        "id": 435823298,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714280288
    },
    {
        "content": "<p>all the expected files are there</p>",
        "id": 435823353,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714280302
    },
    {
        "content": "<p>does <code>lake build</code> do something or take a long time?</p>",
        "id": 435823445,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714280329
    },
    {
        "content": "<p>Does <code>lake build</code> not build lib-only projects? My <code>lakefile.lean</code> doesn't have a <code>lean_exe</code> directive(?), but I've added one, and added a <code>Main.lean</code> that just imports my lib, and now indeed <code>lake build</code> starts from scratch, just like VS Code does:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ lake update\nwarning: Qq: ignoring missing dependency manifest './.lake/packages/Qq/lake-manifest.json'\nwarning: Cli: ignoring missing dependency manifest './.lake/packages/Cli/lake-manifest.json'\nmathlib: running post-update hooks\nNo files to download\nDecompressing 4448 file(s)\nunpacked in 42 ms\n\n$ lake build\n[1/39] Building Mathlib.Init.Data.Nat.Notation\n[1/41] Building Std.Lean.Meta.Basic\n[1/42] Building Std.Lean.Position\n[1/42] Building Mathlib.Mathport.Rename\n[1/42] Building Std.CodeAction.Attr\n[1/44] Building Std.Data.Nat.Basic\n[1/69] Building Mathlib.Data.Array.Defs\n[1/69] Building Std.Data.List.Basic\n[2/8897] Building Mathlib.Lean.Expr.Traverse\n[3/8897] Building Mathlib.Util.MemoFix\n[4/8897] Building Mathlib.Lean.EnvExtension\n[5/8897] Building Std.Tactic.OpenPrivate\n[6/8897] Building Std.Lean.NameMapAttribute\n[7/8897] Building Std.Tactic.Lint.Basic\n[8/8897] Building Std.Util.LibraryNote\n[12/8897] Compiling Mathlib.Util.MemoFix\n...\n</code></pre></div>",
        "id": 435824149,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714280485
    },
    {
        "content": "<p>kill lake build if it's still running, and run <code>cat .lake/packages/mathlib/.lake/build/lib/Mathlib/Init/Data/Nat/Notation.olean.hash</code>, then <code>lake exe cache get</code> and run <code>cat</code> on that file again, then <code>lake build</code> until it builds the first few files and <code>cat</code> again. Is it oscillating between two hashes?</p>",
        "id": 435825798,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714280911
    },
    {
        "content": "<p><code>lake exe cache get</code> and <code>lake update</code> i think are computing different hashes:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ pkill lake\n\n$ cat .lake/packages/mathlib/.lake/build/lib/Mathlib/Init/Data/Nat/Notation.olean.hash\n13972537872681192232\n\n$ lake exe cache get\ninfo: [1/9] Building Cache.IO\ninfo: [2/9] Compiling Cache.IO\ninfo: [2/9] Building Cache.Hashing\ninfo: [3/9] Compiling Cache.Hashing\ninfo: [3/9] Building Cache.Requests\ninfo: [5/9] Compiling Cache.Requests\ninfo: [5/9] Building Cache.Main\ninfo: [6/9] Compiling Cache.Main\ninfo: [9/9] Linking cache\nAttempting to download 4448 file(s)\nDownloaded: 0 file(s) [attempted 248/4448 = 5%]^C\n\n$ lake update\nwarning: Qq: ignoring missing dependency manifest './.lake/packages/Qq/lake-manifest.json'\nwarning: Cli: ignoring missing dependency manifest './.lake/packages/Cli/lake-manifest.json'\nmathlib: running post-update hooks\ninfo: [1/9] Building Cache.IO\ninfo: [2/9] Compiling Cache.IO\ninfo: [2/9] Building Cache.Hashing\ninfo: [3/9] Compiling Cache.Hashing\ninfo: [3/9] Building Cache.Requests\ninfo: [4/9] Compiling Cache.Requests\ninfo: [4/9] Building Cache.Main\ninfo: [6/9] Compiling Cache.Main\ninfo: [9/9] Linking cache\nNo files to download\nDecompressing 4448 file(s)\nunpacked in 1207 ms\n\n$ cat .lake/packages/mathlib/.lake/build/lib/Mathlib/Init/Data/Nat/Notation.olean.hash\n13534327379153193591\n</code></pre></div>",
        "id": 435826428,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714281085
    },
    {
        "content": "<p>Notice that <code>lake exe cache get</code> 404's when downloading files, but <code>lake update</code> seems to match the hashes with the files in my local cache.</p>",
        "id": 435826537,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714281116
    },
    {
        "content": "<p>don't use <code>lake update</code>, that can change the versions of things</p>",
        "id": 435826738,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714281164
    },
    {
        "content": "<p>at least not for this test</p>",
        "id": 435826767,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714281173
    },
    {
        "content": "<p>It's a bit weird that <code>lake exe cache get</code> has different behaviors in the two demonstrated runs there (once directly and once via <code>lake update</code>)</p>",
        "id": 435827019,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714281242
    },
    {
        "content": "<p>can you replicate that behavior running</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">MATHLIB_NO_CACHE_ON_UPDATE</span><span class=\"bp\">=</span><span class=\"mi\">1</span> <span class=\"n\">lake</span> <span class=\"n\">update</span>\n<span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n</code></pre></div>\n<p>?</p>",
        "id": 435827285,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714281306
    },
    {
        "content": "<p>which should do the same thing as <code>lake exe cache get; lake update</code> as in your example</p>",
        "id": 435827368,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714281327
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ lake update\nwarning: Qq: ignoring missing dependency manifest './.lake/packages/Qq/lake-manifest.json'\nwarning: Cli: ignoring missing dependency manifest './.lake/packages/Cli/lake-manifest.json'\nmathlib: running post-update hooks\ninfo: [1/9] Building Cache.IO\ninfo: [2/9] Compiling Cache.IO\ninfo: [2/9] Building Cache.Hashing\ninfo: [3/9] Compiling Cache.Hashing\ninfo: [3/9] Building Cache.Requests\ninfo: [4/9] Compiling Cache.Requests\ninfo: [4/9] Building Cache.Main\ninfo: [6/9] Compiling Cache.Main\ninfo: [9/9] Linking cache\nNo files to download\nDecompressing 4448 file(s)\nunpacked in 329 ms\n\n$ lake exe cache get\ninfo: [1/9] Building Cache.IO\ninfo: [2/9] Compiling Cache.IO\ninfo: [2/9] Building Cache.Hashing\ninfo: [3/9] Compiling Cache.Hashing\ninfo: [3/9] Building Cache.Requests\ninfo: [5/9] Compiling Cache.Requests\ninfo: [5/9] Building Cache.Main\ninfo: [6/9] Compiling Cache.Main\ninfo: [9/9] Linking cache\nAttempting to download 4448 file(s)\nDownloaded: 0 file(s) [attempted 248/4448 = 5%]^C\n\n$ MATHLIB_NO_CACHE_ON_UPDATE=1 lake update\nwarning: Qq: ignoring missing dependency manifest './.lake/packages/Qq/lake-manifest.json'\nwarning: Cli: ignoring missing dependency manifest './.lake/packages/Cli/lake-manifest.json'\nmathlib: running post-update hooks\n\n$ lake exe cache get\nAttempting to download 4448 file(s)\nDownloaded: 0 file(s) [attempted 246/4448 = 5%]^C\n\n$ lake update\nwarning: Qq: ignoring missing dependency manifest './.lake/packages/Qq/lake-manifest.json'\nwarning: Cli: ignoring missing dependency manifest './.lake/packages/Cli/lake-manifest.json'\nmathlib: running post-update hooks\ninfo: [1/9] Building Cache.IO\ninfo: [2/9] Compiling Cache.IO\ninfo: [2/9] Building Cache.Hashing\ninfo: [3/9] Compiling Cache.Hashing\ninfo: [3/9] Building Cache.Requests\ninfo: [4/9] Compiling Cache.Requests\ninfo: [4/9] Building Cache.Main\ninfo: [6/9] Compiling Cache.Main\ninfo: [9/9] Linking cache\nNo files to download\nDecompressing 4448 file(s)\nunpacked in 38 ms\n</code></pre></div>",
        "id": 435827901,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714281467
    },
    {
        "content": "<p>looks like <code>lake update</code> sees no new mathlib and the local cache is OK,  but <code>lake exe cache get</code> wants to redownload the oleans. and that last <code>lake update</code> is to confirm that upstream mathlib didn't change.</p>\n<p>that's my interpretation for what its worth</p>",
        "id": 435828181,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714281533
    },
    {
        "content": "<p>My interpretation is that <code>lake exe cache get</code> is doing something different when run directly vs when run as part of <code>lake update</code>. I assume if you run <code>lake update</code> twice in a row you get the \"No files to download\" message twice?</p>",
        "id": 435832313,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714282610
    },
    {
        "content": "<p>One possible reason for this is that mathlib's post-update hook doesn't just run <code>lake exe cache get</code>, it runs <code>lake +&lt;mathlib's lean-toolchain&gt; exe cache get</code></p>",
        "id": 435832658,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714282694
    },
    {
        "content": "<p>I don't suppose the <code>lean-toolchain</code> in your project differs from <code>.lake/packages/mathlib/lean-toolchain</code>?</p>",
        "id": 435832804,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714282732
    },
    {
        "content": "<p>also what does <code>elan which lake</code> say</p>",
        "id": 435833214,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714282835
    },
    {
        "content": "<p><code>elan</code>'s lake is different than the <code>lake</code> i have installed (through nix)</p>",
        "id": 435834584,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714283190
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ which lake\n/nix/store/2b7xlr4jsfi94vysh5xq3wm56c7dfahw-lean-stage1/bin/lake\n\n$ elan which lake\n/home/enricozb/.elan/toolchains/leanprover--lean4---v4.7.0/bin/lake\n</code></pre></div>",
        "id": 435834696,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714283218
    },
    {
        "content": "<p>aha okay so nix is indeed implicated</p>",
        "id": 435834787,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714283241
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435832658\">said</a>:</p>\n<blockquote>\n<p>One possible reason for this is that mathlib's post-update hook doesn't just run <code>lake exe cache get</code>, it runs <code>lake +&lt;mathlib's lean-toolchain&gt; exe cache get</code></p>\n</blockquote>\n<p>these are the same</p>",
        "id": 435834819,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714283250
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435834787\">said</a>:</p>\n<blockquote>\n<p>aha okay so nix is indeed implicated</p>\n</blockquote>\n<p>As usual :/</p>",
        "id": 435834903,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714283272
    },
    {
        "content": "<p>I wonder why they would compute different hashes, but perhaps that's a waste of time to try to answer</p>",
        "id": 435835032,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714283308
    },
    {
        "content": "<p>one other test: add <code>println! s!\"githash = {Lean.githash}, version = {Lean.versionString}\"</code> to the beginning of <code>main</code> in <code>Cache/Main.lean</code></p>",
        "id": 435835036,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714283309
    },
    {
        "content": "<p>and then run <code>lake update</code> and <code>lake exe cache get</code> to see if you get different results in the two cases</p>",
        "id": 435835167,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714283367
    },
    {
        "content": "<p>indeed they are different:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ lake update\nwarning: mathlib: repository './.lake/packages/mathlib' has local changes\nwarning: Qq: ignoring missing dependency manifest './.lake/packages/Qq/lake-manifest.json'\nwarning: Cli: ignoring missing dependency manifest './.lake/packages/Cli/lake-manifest.json'\nmathlib: running post-update hooks\nwarning: mathlib: repository './.lake/packages/mathlib' has local changes\ninfo: [7/9] Building Cache.Main\ninfo: [8/9] Compiling Cache.Main\ninfo: [9/9] Linking cache\ngithash = 6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a, version = 4.7.0\nNo files to download\nDecompressing 4448 file(s)^C\n\n$ lake exe cache get\nwarning: mathlib: repository './.lake/packages/mathlib' has local changes\ninfo: [1/9] Building Cache.IO\ninfo: [2/9] Compiling Cache.IO\ninfo: [2/9] Building Cache.Hashing\ninfo: [3/9] Compiling Cache.Hashing\ninfo: [3/9] Building Cache.Requests\ninfo: [5/9] Compiling Cache.Requests\ninfo: [5/9] Building Cache.Main\ninfo: [6/9] Compiling Cache.Main\ninfo: [9/9] Linking cache\ngithash = , version = 4.7.0\nAttempting to download 4448 file(s)\n</code></pre></div>",
        "id": 435835237,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714283417
    },
    {
        "content": "<p>bingo</p>",
        "id": 435835252,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714283434
    },
    {
        "content": "<p>the githash is part of the root hash so if that is wrong then all the cache lookups will be wrong</p>",
        "id": 435835268,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714283457
    },
    {
        "content": "<p>and hence you get 404s for everything</p>",
        "id": 435835280,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714283474
    },
    {
        "content": "<p>so at this point the question becomes: why is nix producing a lean build without a githash set?</p>",
        "id": 435835303,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714283517
    },
    {
        "content": "<blockquote>\n<p>the githash is part of the root hash so if that is wrong then all the cache lookups will be wrong</p>\n</blockquote>\n<p>fantastic (in the sense that we have a root cause)</p>",
        "id": 435835506,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714283713
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435835303\">said</a>:</p>\n<blockquote>\n<p>so at this point the question becomes: why is nix producing a lean build without a githash set?</p>\n</blockquote>\n<p>I'll take a look at the nix expressions in the lean4 repo</p>",
        "id": 435835529,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714283735
    },
    {
        "content": "<p>My current hypothesis is that the facilities that nix uses to fetch from github (or any git server) does not include the <code>.git</code> directory. It looks like the githash is included by CMake with some <a href=\"https://github.com/leanprover/lean4/blob/99e8270d2d34bbb00d998053dfde9834b0e0d233/src/githash.h.in#L2\"><code>@GIT_SHA1@</code></a> directive, though I'm not super confident here.</p>",
        "id": 435836642,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714284719
    },
    {
        "content": "<p>Maybe passing <code>forceFetchGit = true</code> to <code>fetchFromGitHub</code> works. If it doesn't, you can always manually replace the SHA as in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/science/logic/lean/default.nix#L36\">https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/science/logic/lean/default.nix#L36</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/science/logic/lean4/default.nix#L23\">https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/science/logic/lean4/default.nix#L23</a></p>",
        "id": 435873408,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1714309535
    },
    {
        "content": "<p>Sorry, I meant <code>leaveDotGit = true</code>. Be aware that this changes the fixed-output derivation hash, of course.</p>",
        "id": 435873830,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1714310001
    },
    {
        "content": "<p>I'm actually consuming <code>lean</code> as a flake from the <code>lean4</code> repo:</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"ss\">description</span> <span class=\"o\">=</span> <span class=\"s2\">\"logic\"</span><span class=\"p\">;</span>\n  inputs<span class=\"o\">.</span>nixpkgs<span class=\"o\">.</span><span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:NixOS/nixpkgs/nixpkgs-unstable\"</span><span class=\"p\">;</span>\n  inputs<span class=\"o\">.</span>flake-utils<span class=\"o\">.</span><span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:numtide/flake-utils\"</span><span class=\"p\">;</span>\n\n  inputs<span class=\"o\">.</span>lean4<span class=\"o\">.</span><span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:leanprover/lean4/v4.7.0\"</span><span class=\"p\">;</span>\n\n  <span class=\"ss\">outputs</span> <span class=\"o\">=</span> <span class=\"p\">{</span> self<span class=\"p\">,</span> nixpkgs<span class=\"p\">,</span> flake-utils<span class=\"p\">,</span> lean4 <span class=\"p\">}:</span>\n    flake-utils<span class=\"o\">.</span>lib<span class=\"o\">.</span>eachDefaultSystem <span class=\"p\">(</span>system<span class=\"p\">:</span>\n      <span class=\"k\">let</span>\n        <span class=\"ss\">pkgs</span> <span class=\"o\">=</span> nixpkgs<span class=\"o\">.</span>legacyPackages<span class=\"o\">.</span><span class=\"si\">${</span>system<span class=\"si\">}</span><span class=\"p\">;</span>\n        <span class=\"ss\">lean4-pkgs</span> <span class=\"o\">=</span> lean4<span class=\"o\">.</span>packages<span class=\"o\">.</span><span class=\"si\">${</span>system<span class=\"si\">}</span><span class=\"p\">;</span>\n      <span class=\"k\">in</span> <span class=\"p\">{</span>\n        devShells<span class=\"o\">.</span><span class=\"ss\">default</span> <span class=\"o\">=</span> pkgs<span class=\"o\">.</span>mkShell <span class=\"p\">{</span>\n          <span class=\"ss\">packages</span> <span class=\"o\">=</span> <span class=\"p\">[</span> lean4-pkgs<span class=\"o\">.</span>lean-all lean4-pkgs<span class=\"o\">.</span>vscode pkgs<span class=\"o\">.</span>elan <span class=\"p\">];</span>\n        <span class=\"p\">};</span>\n      <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 435893235,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714325279
    },
    {
        "content": "<p>Someone already had a similar insight 3 years ago: <br>\n<a href=\"/user_uploads/3121/bz5UvFzpSX8eu0WVgEKwvPru/image.png\">image.png</a><br>\nfrom: <a href=\"https://github.com/NixOS/nixpkgs/blame/master/pkgs/applications/science/logic/lean/default.nix#L10\">https://github.com/NixOS/nixpkgs/blame/master/pkgs/applications/science/logic/lean/default.nix#L10</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/bz5UvFzpSX8eu0WVgEKwvPru/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/bz5UvFzpSX8eu0WVgEKwvPru/image.png\"></a></div>",
        "id": 435893591,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714325629
    },
    {
        "content": "<p>Ah looks like you can access the git sha1 with <code>self.rev</code> inside a flake.</p>",
        "id": 435893810,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714325841
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/287929-mathlib4/topic/.60lake.20exe.20cache.20get.60.20downloads.200.20files/near/435873408\">said</a>:</p>\n<blockquote>\n<p>Maybe passing <code>forceFetchGit = true</code> to <code>fetchFromGitHub</code> works. If it doesn't, you can always manually replace the SHA as in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/science/logic/lean/default.nix#L36\">https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/science/logic/lean/default.nix#L36</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/science/logic/lean4/default.nix#L23\">https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/science/logic/lean4/default.nix#L23</a></p>\n</blockquote>\n<p>Great tip on that SHA replacement</p>",
        "id": 435893839,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714325877
    },
    {
        "content": "<p>Oh but changing the <code>flake.nix</code> file would of course require a commit on the <code>lean4</code> repo... hmm</p>",
        "id": 435893921,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714325951
    },
    {
        "content": "<p>Wasn't sure if I should just open a PR, since the lean contribution guidelines recommend against doing so without opening an issue first. Here's the issue: <a href=\"https://github.com/leanprover/lean4/issues/4015\">https://github.com/leanprover/lean4/issues/4015</a>, my patch fixes this: <a href=\"https://github.com/enricozb/lean4/commit/a5cfd5765100731a4d6d3ea8bbb3ee40d8f1ef4f\">https://github.com/enricozb/lean4/commit/a5cfd5765100731a4d6d3ea8bbb3ee40d8f1ef4f</a></p>",
        "id": 435909209,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1714338483
    }
]