[
    {
        "content": "<p>We define <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.Functor.essImage#doc\">docs#CategoryTheory.Functor.essImage</a> as a set, then use it as a predicate (e.g., by using dot notation). Should we resolve it one way or another? Note: I never used this part of the library, so I have no opinion on which way is better.</p>",
        "id": 423287377,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708890723
    },
    {
        "content": "<p>I found this while trying to turn <code>Set</code> into a one-field structure (not yet sure if this is a good change, let's not discuss it here anyway).</p>",
        "id": 423287432,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1708890777
    },
    {
        "content": "<p>I think we want it to be a set</p>",
        "id": 423289074,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1708892429
    },
    {
        "content": "<p>We want to be able to say things of the form \"This object is an element of the essential image\" using <code>Membership</code> notation, for instance.</p>",
        "id": 423289103,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1708892461
    },
    {
        "content": "<p>I guess the real question is whether we want <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=CategoryTheory.FullSubcategory#doc\">docs#CategoryTheory.FullSubcategory</a> to take a set or a predicate</p>",
        "id": 423289139,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1708892508
    },
    {
        "content": "<p>I would lean predicate. That’s how I think of things in real life</p>",
        "id": 423289303,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1708892658
    },
    {
        "content": "<p>you mean for the full subcat?</p>",
        "id": 423289358,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1708892733
    },
    {
        "content": "<p>I'm the other way -- I think of it as being associated to a (sub)set of objects.</p>",
        "id": 423289375,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1708892753
    },
    {
        "content": "<p>Yeah, I would go predicate everywhere but don’t have strong opinion</p>",
        "id": 423289578,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1708892907
    },
    {
        "content": "<p>In a near future, when I start PRing notions of triangulated subcategories, I will have to manipulate some \"sets\" of objects in a category. For example, I will introduce a typeclass <code>Set.RespectsIso {C : Type*} {Category C] (S : Set C) : Prop</code>. Then, I would prefer if we do not change sets into predicates.</p>",
        "id": 423290963,
        "sender_full_name": "Joël Riou",
        "timestamp": 1708894430
    }
]