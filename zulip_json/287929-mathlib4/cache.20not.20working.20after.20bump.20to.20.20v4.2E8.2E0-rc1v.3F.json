[
    {
        "content": "<p>after <a href=\"https://github.com/leanprover-community/mathlib4/pull/12548\">#12548</a>, db651742f2c631e5b8525e9aabcf3d61ed094a4a, the cache is not working for me anymore. <br>\nI'm getting </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>&gt;<span class=\"w\"> </span>lake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get\ninfo:<span class=\"w\"> </span>std:<span class=\"w\"> </span>updating<span class=\"w\"> </span>repository<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/std'</span><span class=\"w\"> </span>to<span class=\"w\"> </span>revision<span class=\"w\"> </span><span class=\"s1\">'3025cb124492b423070f20cf0a70636f757d117f'</span>\ninfo:<span class=\"w\"> </span>aesop:<span class=\"w\"> </span>updating<span class=\"w\"> </span>repository<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/aesop'</span><span class=\"w\"> </span>to<span class=\"w\"> </span>revision<span class=\"w\"> </span><span class=\"s1\">'0a21a48c286c4a4703c0be6ad2045f601f31b1d0'</span>\ninfo:<span class=\"w\"> </span>proofwidgets:<span class=\"w\"> </span>updating<span class=\"w\"> </span>repository<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/proofwidgets'</span><span class=\"w\"> </span>to<span class=\"w\"> </span>revision<span class=\"w\"> </span><span class=\"s1\">'fe1eff53bd0838c657aa6126fe4dd75ad9939d9a'</span>\ninfo:<span class=\"w\"> </span>Cli:<span class=\"w\"> </span>updating<span class=\"w\"> </span>repository<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/Cli'</span><span class=\"w\"> </span>to<span class=\"w\"> </span>revision<span class=\"w\"> </span><span class=\"s1\">'a11566029bd9ec4f68a65394e8c3ff1af74c1a29'</span>\ninfo:<span class=\"w\"> </span>importGraph:<span class=\"w\"> </span>updating<span class=\"w\"> </span>repository<span class=\"w\"> </span><span class=\"s1\">'././.lake/packages/importGraph'</span><span class=\"w\"> </span>to<span class=\"w\"> </span>revision<span class=\"w\"> </span><span class=\"s1\">'188eb34fcf1125e89d651ad462d02598219718ca'</span>\nAttempting<span class=\"w\"> </span>to<span class=\"w\"> </span>download<span class=\"w\"> </span><span class=\"m\">4450</span><span class=\"w\"> </span>file<span class=\"o\">(</span>s<span class=\"o\">)</span>\nDownloaded:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>file<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span>attempted<span class=\"w\"> </span><span class=\"m\">4450</span>/4450<span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">0</span>%<span class=\"w\"> </span>success<span class=\"o\">)</span>\nWarning:<span class=\"w\"> </span>some<span class=\"w\"> </span>files<span class=\"w\"> </span>were<span class=\"w\"> </span>not<span class=\"w\"> </span>found<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>cache.\nThis<span class=\"w\"> </span>usually<span class=\"w\"> </span>means<span class=\"w\"> </span>that<span class=\"w\"> </span>your<span class=\"w\"> </span><span class=\"nb\">local</span><span class=\"w\"> </span>checkout<span class=\"w\"> </span>of<span class=\"w\"> </span>mathlib4<span class=\"w\"> </span>has<span class=\"w\"> </span>diverged<span class=\"w\"> </span>from<span class=\"w\"> </span>upstream.\nIf<span class=\"w\"> </span>you<span class=\"w\"> </span>push<span class=\"w\"> </span>your<span class=\"w\"> </span>commits<span class=\"w\"> </span>to<span class=\"w\"> </span>a<span class=\"w\"> </span>branch<span class=\"w\"> </span>of<span class=\"w\"> </span>the<span class=\"w\"> </span>mathlib4<span class=\"w\"> </span>repository,<span class=\"w\"> </span>CI<span class=\"w\"> </span>will<span class=\"w\"> </span>build<span class=\"w\"> </span>the<span class=\"w\"> </span>oleans<span class=\"w\"> </span>and<span class=\"w\"> </span>they<span class=\"w\"> </span>will<span class=\"w\"> </span>be<span class=\"w\"> </span>available<span class=\"w\"> </span>later.\nNo<span class=\"w\"> </span>cache<span class=\"w\"> </span>files<span class=\"w\"> </span>to<span class=\"w\"> </span>decompress\n&gt;<span class=\"w\"> </span>lake<span class=\"w\"> </span>--version\nLake<span class=\"w\"> </span>version<span class=\"w\"> </span><span class=\"m\">5</span>.0.0-dcccfb7<span class=\"w\"> </span><span class=\"o\">(</span>Lean<span class=\"w\"> </span>version<span class=\"w\"> </span><span class=\"m\">4</span>.8.0-rc1<span class=\"o\">)</span>\n</code></pre></div>\n<p>This is with a  fresh clone of the mathlib4 repo.<br>\nOn the commit before that getting the cache works fine. Is there something wrong on my end?</p>",
        "id": 436830348,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1714720636
    },
    {
        "content": "<p>Works for me on e6f552f77a91b06b52d1c4b08f61c77f54f09f37</p>",
        "id": 436830579,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714720734
    },
    {
        "content": "<p>Thanks for checking. Weird, for me it doesn't work on that commit either.</p>",
        "id": 436830868,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1714720856
    },
    {
        "content": "<p>Try <code>lake exe cache clean!</code></p>",
        "id": 436831020,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714720924
    },
    {
        "content": "<p>That didn't fix it</p>",
        "id": 436831184,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1714721008
    },
    {
        "content": "<p>I tried it also on a different machine (albeit with a similar debian system) and also can't get the cache.</p>",
        "id": 436831421,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1714721103
    },
    {
        "content": "<p>Working for me on macos at both of the commits mentioned.</p>\n<p>Anyone with a debian system they could try this on?</p>",
        "id": 436832010,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714721377
    },
    {
        "content": "<p>(I'm on Ubuntu)</p>",
        "id": 436832298,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714721505
    },
    {
        "content": "<p>The cache doesn't work for  me on Gitpod (ubuntu)</p>",
        "id": 436836661,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714723509
    },
    {
        "content": "<p>(in an entirely fresh image started from <a href=\"https://github.com/leanprover-community/mathlib4/pull/12617\">#12617</a>)</p>",
        "id": 436836855,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714723592
    },
    {
        "content": "<p>It does not work for me either on NixOS, the curl.cfg starts with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">url</span> <span class=\"bp\">=</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">lakecache.blob.core.windows.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span><span class=\"bp\">/</span><span class=\"n\">f</span><span class=\"bp\">/</span><span class=\"n\">b503c218379d3bcc.ltar</span>\n</code></pre></div>",
        "id": 436837481,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714723889
    },
    {
        "content": "<p>Isn't nix broken due to <a href=\"https://github.com/leanprover/lean4/pull/4015\">lean4#4015</a>?</p>",
        "id": 436838144,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714724191
    },
    {
        "content": "<p>I'm using elan</p>",
        "id": 436838271,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714724272
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span> <span class=\"bp\"></span> <span class=\"bp\"></span> <span class=\"n\">master</span> <span class=\"bp\"></span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span> <span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Array</span><span class=\"bp\">/</span><span class=\"n\">Defs.lean</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">1</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">some</span> <span class=\"n\">files</span> <span class=\"n\">were</span> <span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">cache.</span>\n<span class=\"n\">This</span> <span class=\"n\">usually</span> <span class=\"n\">means</span> <span class=\"n\">that</span> <span class=\"n\">your</span> <span class=\"kn\">local</span> <span class=\"n\">checkout</span> <span class=\"n\">of</span> <span class=\"n\">mathlib4</span> <span class=\"n\">has</span> <span class=\"n\">diverged</span> <span class=\"k\">from</span> <span class=\"n\">upstream.</span>\n<span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">push</span> <span class=\"n\">your</span> <span class=\"n\">commits</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">branch</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">mathlib4</span> <span class=\"n\">repository</span><span class=\"o\">,</span> <span class=\"n\">CI</span> <span class=\"n\">will</span> <span class=\"n\">build</span> <span class=\"n\">the</span> <span class=\"n\">oleans</span> <span class=\"n\">and</span> <span class=\"n\">they</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">available</span> <span class=\"n\">later.</span>\n<span class=\"n\">No</span> <span class=\"n\">cache</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">decompress</span>\n <span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span> <span class=\"bp\"></span> <span class=\"bp\"></span> <span class=\"n\">master</span> <span class=\"bp\"></span> <span class=\"n\">lean</span> <span class=\"c1\">--version</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span><span class=\"o\">,</span> <span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">unknown</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"n\">dcccfb73cb24</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n <span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span> <span class=\"bp\"></span> <span class=\"bp\"></span> <span class=\"n\">master</span> <span class=\"bp\"></span> <span class=\"n\">lean</span> <span class=\"c1\">--githash</span>\n<span class=\"n\">dcccfb73cb247e9478220375ab7de03f7c67e505</span>\n <span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib4</span> <span class=\"bp\"></span> <span class=\"bp\"></span> <span class=\"n\">master</span> <span class=\"bp\"></span> <span class=\"n\">md5sum</span> <span class=\"n\">lakefile.lean</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span> <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">manifest.json</span> <span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Array</span><span class=\"bp\">/</span><span class=\"n\">Defs.lean</span>\n<span class=\"n\">f8a55904cebc403cd531d9dca6409cc3</span>  <span class=\"n\">lakefile.lean</span>\n<span class=\"mi\">16</span><span class=\"n\">a3113417af1e9269d1e457c33b08f1</span>  <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span>\n<span class=\"n\">d4ed6a00733f9b3463d561b0dcf068dc</span>  <span class=\"n\">lake</span><span class=\"bp\">-</span><span class=\"n\">manifest.json</span>\n<span class=\"mi\">42</span><span class=\"n\">f17e3585d3f6171b6562fd65f2b501</span>  <span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Array</span><span class=\"bp\">/</span><span class=\"n\">Defs.lean</span>\n</code></pre></div>",
        "id": 436838509,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714724397
    },
    {
        "content": "<p>This may be an independent issue but it looks like the Lake output changes broke the \"check the cache\" step <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8934086194/job/24540460290\">https://github.com/leanprover-community/mathlib4/actions/runs/8934086194/job/24540460290</a> /cc <span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> <span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span></p>",
        "id": 436839428,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714724851
    },
    {
        "content": "<p>yes, I was expecting that step to break, although it shouldn't have actually broken the cache</p>",
        "id": 436839594,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714724930
    },
    {
        "content": "<p>Why does that step not use <code>--no-build</code>?</p>",
        "id": 436839684,
        "sender_full_name": "Mac Malone",
        "timestamp": 1714724971
    },
    {
        "content": "<p>pretty sure it didn't exist at the time</p>",
        "id": 436839863,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714725028
    },
    {
        "content": "<p>Here is a small debug change to <code>cache</code> that should help pin-pointing the divergence between machines: <a href=\"https://github.com/leanprover-community/mathlib4/commit/2c0ce17b86ab26008ebb1db3f8b783fcc06844f5\">https://github.com/leanprover-community/mathlib4/commit/2c0ce17b86ab26008ebb1db3f8b783fcc06844f5</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span> <span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Array</span><span class=\"bp\">/</span><span class=\"n\">Defs.lean</span>\n<span class=\"o\">[</span><span class=\"mi\">5586305563779175217</span><span class=\"o\">,</span> <span class=\"mi\">1544972802846357171</span><span class=\"o\">,</span> <span class=\"mi\">13046909329292126002</span><span class=\"o\">,</span> <span class=\"mi\">3441304350335271181</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"mi\">13125509958613804700</span><span class=\"o\">,</span> <span class=\"mi\">12918580028159898586</span><span class=\"o\">,</span> <span class=\"mi\">8250920309656508580</span><span class=\"o\">]</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">1</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Warning</span><span class=\"o\">:</span> <span class=\"n\">some</span> <span class=\"n\">files</span> <span class=\"n\">were</span> <span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">cache.</span>\n<span class=\"n\">This</span> <span class=\"n\">usually</span> <span class=\"n\">means</span> <span class=\"n\">that</span> <span class=\"n\">your</span> <span class=\"kn\">local</span> <span class=\"n\">checkout</span> <span class=\"n\">of</span> <span class=\"n\">mathlib4</span> <span class=\"n\">has</span> <span class=\"n\">diverged</span> <span class=\"k\">from</span> <span class=\"n\">upstream.</span>\n<span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">push</span> <span class=\"n\">your</span> <span class=\"n\">commits</span> <span class=\"n\">to</span> <span class=\"n\">a</span> <span class=\"n\">branch</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">mathlib4</span> <span class=\"n\">repository</span><span class=\"o\">,</span> <span class=\"n\">CI</span> <span class=\"n\">will</span> <span class=\"n\">build</span> <span class=\"n\">the</span> <span class=\"n\">oleans</span> <span class=\"n\">and</span> <span class=\"n\">they</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">available</span> <span class=\"n\">later.</span>\n<span class=\"n\">No</span> <span class=\"n\">cache</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">decompress</span>\n</code></pre></div>",
        "id": 436840466,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714725310
    },
    {
        "content": "<p>Could someone with a working cache try running that on branch <code>cache-debug</code>? <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span> <span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span></p>",
        "id": 436841043,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714725609
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span> <span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Array</span><span class=\"bp\">/</span><span class=\"n\">Defs.lean</span>\n<span class=\"o\">[</span><span class=\"mi\">12616063415761296130</span><span class=\"o\">,</span> <span class=\"mi\">1544972802846357171</span><span class=\"o\">,</span> <span class=\"mi\">13046909329292126002</span><span class=\"o\">,</span> <span class=\"mi\">3441304350335271181</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"mi\">2128698828512116273</span><span class=\"o\">,</span> <span class=\"mi\">12918580028159898586</span><span class=\"o\">,</span> <span class=\"mi\">8250920309656508580</span><span class=\"o\">]</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">1</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">1</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"mi\">7</span> <span class=\"n\">ms</span>\n</code></pre></div>",
        "id": 436841565,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714725852
    },
    {
        "content": "<p>here it is again with <code>dbgTraceVal Lean.githash</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span> <span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Data</span><span class=\"bp\">/</span><span class=\"n\">Array</span><span class=\"bp\">/</span><span class=\"n\">Defs.lean</span>\n<span class=\"n\">b470eb522bfd68ca96938c23f6a1bce79da8a99f</span>\n<span class=\"o\">[</span><span class=\"mi\">12616063415761296130</span><span class=\"o\">,</span> <span class=\"mi\">1544972802846357171</span><span class=\"o\">,</span> <span class=\"mi\">13046909329292126002</span><span class=\"o\">,</span> <span class=\"mi\">3441304350335271181</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"mi\">2128698828512116273</span><span class=\"o\">,</span> <span class=\"mi\">12918580028159898586</span><span class=\"o\">,</span> <span class=\"mi\">8250920309656508580</span><span class=\"o\">]</span>\n<span class=\"n\">No</span> <span class=\"n\">files</span> <span class=\"n\">to</span> <span class=\"n\">download</span>\n<span class=\"n\">Decompressing</span> <span class=\"mi\">1</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">unpacked</span> <span class=\"k\">in</span> <span class=\"mi\">2</span> <span class=\"n\">ms</span>\n</code></pre></div>",
        "id": 436841995,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726017
    },
    {
        "content": "<p>Well that is not the githash I have :) . <code>lean --version</code>? OS?</p>",
        "id": 436842238,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714726114
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lean</span> <span class=\"c1\">--version</span>\n<span class=\"n\">Lean</span> <span class=\"o\">(</span><span class=\"n\">version</span> <span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">8</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"n\">rc1</span><span class=\"o\">,</span> <span class=\"n\">x86_64</span><span class=\"bp\">-</span><span class=\"n\">unknown</span><span class=\"bp\">-</span><span class=\"n\">linux</span><span class=\"bp\">-</span><span class=\"n\">gnu</span><span class=\"o\">,</span> <span class=\"n\">commit</span> <span class=\"n\">b470eb522bfd</span><span class=\"o\">,</span> <span class=\"n\">Release</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 436842486,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726234
    },
    {
        "content": "<p>this is the commit immediately prior to the one tagged as v4.8.0-rc1 in the repo</p>",
        "id": 436842516,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726255
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> ?</p>",
        "id": 436842532,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726260
    },
    {
        "content": "<p>I don't see anything suspicious in the <a href=\"https://github.com/leanprover/lean4/actions/runs/8933470598/job/24538905734\">release action</a> which produced the 4.8.0-rc1 release, I don't understand why it would package this version</p>",
        "id": 436842715,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726344
    },
    {
        "content": "<p>Was 4.8.0-rc1 released more than once?</p>",
        "id": 436842796,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726381
    },
    {
        "content": "<p>Oh, dear.</p>",
        "id": 436842798,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726382
    },
    {
        "content": "<p>Yes, I did a force push to the tag earlier today when I realised I had not set the release flag.</p>",
        "id": 436842898,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726437
    },
    {
        "content": "<p>:-(</p>",
        "id": 436842908,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726441
    },
    {
        "content": "<p>I'm not sure there is any way to kick elan to re-download things it has already downloaded</p>",
        "id": 436843046,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726499
    },
    {
        "content": "<p>I hope we don't need an rc2 just for this.</p>",
        "id": 436843047,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726499
    },
    {
        "content": "<p>...so we might need an rc2 just for this</p>",
        "id": 436843077,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726509
    },
    {
        "content": "<p>I mean you can delete the toolchain locally.</p>",
        "id": 436843126,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726540
    },
    {
        "content": "<p>because the fact that my cache is succeeding and Sebastian's isn't means that the cache files are also using the bad version</p>",
        "id": 436843139,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726543
    },
    {
        "content": "<p>so anyone who downloads rc1 right now will get a failing cache</p>",
        "id": 436843189,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726567
    },
    {
        "content": "<p>Well, for caches built with the earlier rc1.</p>",
        "id": 436843271,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726596
    },
    {
        "content": "<p>This was really dumb.</p>",
        "id": 436843294,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726610
    },
    {
        "content": "<p>I am cooking right now. I better not burn dinner as well as the release...</p>",
        "id": 436843336,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726630
    },
    {
        "content": "<p>You will have to go into each of the hoskinson machines and manually clear the elan toolchain cache or else they will keep using the old version</p>",
        "id": 436843348,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726636
    },
    {
        "content": "<p>and then PSA everyone to also clear their toolchain cache</p>",
        "id": 436843414,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726665
    },
    {
        "content": "<p>rc2 seems easier</p>",
        "id": 436843433,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726673
    },
    {
        "content": "<p>That would be doable, I have a script to run Hoskinson in parallel.</p>",
        "id": 436843488,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726691
    },
    {
        "content": "<p>But yeah.</p>",
        "id": 436843513,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726694
    },
    {
        "content": "<p>:-(</p>",
        "id": 436843517,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714726696
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/cache.20not.20working.20after.20bump.20to.20.20v4.2E8.2E0-rc1v.3F/near/436842898\">said</a>:</p>\n<blockquote>\n<p>Yes, I did a force push to the tag earlier today when I realised I had not set the release flag.</p>\n</blockquote>\n<p>Checking this should probably be a CI step in the release action. Force pushing would have been fine as long as the release wasn't actually uploaded and used</p>",
        "id": 436844160,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714726969
    },
    {
        "content": "<p>A new RC means touching half a dozen repos. If the Hoskinson machines are not an issue, then for humans we can simply commit a check for the bad release in <code>cache</code>. Even the Hoskinson fix could be commited to the CI script.</p>",
        "id": 436845501,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714727598
    },
    {
        "content": "<p>Ok, sounds reasonable. Something like, if <code>Lean.versionString == \"4.8.0-rc1\" &amp;&amp; Lean.githash == \"b470eb522bfd68ca96938c23f6a1bce79da8a99f\"</code> then call IO.process a few times to get elan to delete the bad release and download a new one, then restart yourself</p>",
        "id": 436847146,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714728271
    },
    {
        "content": "<p>I'm not going to write that fix though rn</p>",
        "id": 436847227,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714728312
    },
    {
        "content": "<p>Okay, back from dinner, and I've cleared v4.8.0-rc1 off Hoskinson.</p>",
        "id": 436853535,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714730850
    },
    {
        "content": "<p>Okay, and <a href=\"https://github.com/leanprover-community/mathlib4/pull/12623\">#12623</a> is a patch to <code>cache</code> that detects the bad version, suggests <code>elan toolchain uninstall leanprover/lean4:v4.8.0-rc1</code>, and then exits.</p>",
        "id": 436854271,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714731185
    },
    {
        "content": "<p>I was on the old copy of rc1, so I've tested the PR, and it behaved as expected before and after.</p>",
        "id": 436854299,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714731205
    },
    {
        "content": "<p>If someone can merge, I am going to be glad that it is now the weekend here. :-)</p>",
        "id": 436854345,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714731226
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/cache.20not.20working.20after.20bump.20to.20.20v4.2E8.2E0-rc1v.3F/near/436853535\">said</a>:</p>\n<blockquote>\n<p>Okay, back from dinner, and I've cleared v4.8.0-rc1 off Hoskinson.</p>\n</blockquote>\n<p>So <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8937415616/job/24549630170\">this</a> is expected?</p>",
        "id": 436854891,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714731413
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/11104\">#11104</a> will need to put back on the queue once the toolchains are sorted</p>",
        "id": 436854963,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714731444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/cache.20not.20working.20after.20bump.20to.20.20v4.2E8.2E0-rc1v.3F/near/436854891\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/cache.20not.20working.20after.20bump.20to.20.20v4.2E8.2E0-rc1v.3F/near/436853535\">said</a>:</p>\n<blockquote>\n<p>Okay, back from dinner, and I've cleared v4.8.0-rc1 off Hoskinson.</p>\n</blockquote>\n<p>So <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/8937415616/job/24549630170\">this</a> is expected?</p>\n</blockquote>\n<p>Hopefully only expected if I managed to delete the toolchain mid build. I've restarted that job now.</p>",
        "id": 436855372,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714731588
    },
    {
        "content": "<p>Ugh, but it seems to have instantly failed again the same way. :-(</p>",
        "id": 436855517,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714731648
    },
    {
        "content": "<p>I am more agressively cleaning up elan.</p>",
        "id": 436855615,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714731709
    },
    {
        "content": "<p>Okay, the job is going through now.</p>",
        "id": 436855785,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714731769
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 436855791,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714731771
    },
    {
        "content": "<p>This is all part of the learning process. The system is so gigantic now and it's not surprising that the community is still learning about what we can and can't get away with. Thanks so much Kim for all your work getting mathlib onto 4.8, this has been a massive effort. I think the community is generally hoping and expecting that these jobs are going to get easier over time.</p>",
        "id": 436856492,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714732081
    },
    {
        "content": "<p>This one was pure user error. If I'd actually followed the nice checklist that I prepared during the last release, this wouldn't have happened.</p>",
        "id": 436856627,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714732127
    },
    {
        "content": "<p>Right -- we're learning what's important! rc2 is hardly the end of the world!</p>",
        "id": 436856831,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714732214
    },
    {
        "content": "<p>So how do I get cache to work again?</p>",
        "id": 436859491,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714733358
    },
    {
        "content": "<p>I'm not managing to get cache for <a href=\"https://github.com/leanprover-community/mathlib4/pull/9000\">#9000</a></p>",
        "id": 436859510,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714733372
    },
    {
        "content": "<p>I restarted CI for your PR, it's using the correct Lean version now. Hopefully the cache should be available when it's finished</p>",
        "id": 436860647,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1714733857
    },
    {
        "content": "<p>Ah! The runners had the wrong version? I assumed I too had the wrong version locally</p>",
        "id": 436860766,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1714733904
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/cache.20not.20working.20after.20bump.20to.20.20v4.2E8.2E0-rc1v.3F/near/436856627\">said</a>:</p>\n<blockquote>\n<p>This one was pure user error. If I'd actually followed the nice checklist that I prepared during the last release, this wouldn't have happened.</p>\n</blockquote>\n<p>Something I've read once (I forgot where) is that it helps to turn the text checklist into a script that just prints the next step and waits for confirmation that it's done. The reason that's nice is that anyone can then replace <code>print</code> statements in the script by automation piecemeal whenever they have free time.</p>",
        "id": 436861164,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1714734068
    },
    {
        "content": "<p><del>Some caches have gone missing after Kim's intervention. <a href=\"https://github.com/leanprover-community/mathlib4/pull/12634\">#12634</a> should help with this, it resets the cache so that there won't be a ton of missing files that were generated for the wrong version. (Expedited merging would be appreciated.) Once it lands, everyone with cache issues should rebase their PR or update their project to a version including this commit.</del></p>",
        "id": 436929184,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714757762
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 436929523,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714757883
    },
    {
        "content": "<p>Actually I take it back, I misdiagnosed the issue and <a href=\"https://github.com/leanprover-community/mathlib4/pull/12634\">#12634</a> is not needed. The effect of Kim's change is actually that of a reset cache, so the instructions to fix it are to just push another commit or manually rerun CI on any bad branch. (Here a branch is \"bad\" if it is on 4.8.0-rc1 and has had no commits since Kim's manual intervention a few hours ago.)</p>",
        "id": 436931447,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714758650
    },
    {
        "content": "<p>However users <em>will</em> want to update to a branch including <a href=\"https://github.com/leanprover-community/mathlib4/pull/12623\">#12623</a>, which will tell you if you locally have the bad version installed and prompt you to reinstall it. If you have the bad version then you will <em>only</em> be able to use bad branches, meaning that going forward you will have a lot of cache misses. If you don't want to wait for the prompt, the fix is:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>lean<span class=\"w\"> </span>--version\n<span class=\"go\">Lean (version 4.8.0-rc1, x86_64-unknown-linux-gnu, commit b470eb522bfd, Release)</span>\n<span class=\"gp\">$ </span><span class=\"c1\"># if the above says b470eb522bfd you are on the bad version</span>\n<span class=\"gp\">$ </span>elan<span class=\"w\"> </span>toolchain<span class=\"w\"> </span>uninstall<span class=\"w\"> </span>leanprover/lean4:v4.8.0-rc1\n<span class=\"gp\">$ </span>lake<span class=\"w\"> </span>exe<span class=\"w\"> </span>cache<span class=\"w\"> </span>get\n<span class=\"go\">info: downloading component 'lean'</span>\n<span class=\"go\">179.6 MiB / 179.6 MiB (100 %)  12.8 MiB/s ETA:   0 s</span>\n<span class=\"go\">info: installing component 'lean'</span>\n<span class=\"go\">Attempting to download 4452 file(s)</span>\n<span class=\"go\">Downloaded: 0 file(s) [attempted 249/4452 = 5%]^C</span>\n<span class=\"gp\">$ </span><span class=\"c1\"># if it says 0 file(s) here then the branch you are on is bad and you should follow the previous message</span>\n<span class=\"gp\">$ </span>lean<span class=\"w\"> </span>--version\n<span class=\"go\">Lean (version 4.8.0-rc1, x86_64-unknown-linux-gnu, commit dcccfb73cb24, Release)</span>\n<span class=\"gp\">$ </span><span class=\"c1\"># dcccfb73cb24 is the fixed version of 4.8.0-rc1</span>\n</code></pre></div>",
        "id": 436932667,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714759092
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315577\">Mac Malone</span> <a href=\"#narrow/stream/287929-mathlib4/topic/cache.20not.20working.20after.20bump.20to.20.20v4.2E8.2E0-rc1v.3F/near/436839684\">said</a>:</p>\n<blockquote>\n<p>Why does that step not use <code>--no-build</code>?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"315577\">@Mac Malone</span> I've adjusted Mathlib CI to use <code>--no-build</code> in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12688\">#12688</a>, but the reviewer did ask:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> said:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> I had to go to the source to figure out what <code>--no-build</code> does, or even that it exists. Did you find this documented somewhere? Or are the options for <code>lake</code> subcommands intentioned not documented in their respective <code>lake subcmd --help</code>?</p>\n</blockquote>",
        "id": 437205483,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1714979058
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/cache.20not.20working.20after.20bump.20to.20.20v4.2E8.2E0-rc1v.3F/near/437205483\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> said:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> I had to go to the source to figure out what <code>--no-build</code> does, or even that it exists. Did you find this documented somewhere? Or are the options for <code>lake</code> subcommands intentioned not documented in their respective <code>lake subcmd --help</code>?<br>\n</p>\n</blockquote>\n</blockquote>\n<p>Oh! <code>--no-build</code> was originally implemented as internal option for the Lake server, so like <code>setup-file</code> it was not in the help. However, it does appear to be generally useful, so it should be documented. I will need to fix that.</p>",
        "id": 437280566,
        "sender_full_name": "Mac Malone",
        "timestamp": 1715007564
    }
]