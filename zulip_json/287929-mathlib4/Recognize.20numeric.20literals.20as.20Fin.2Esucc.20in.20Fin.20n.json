[
    {
        "content": "<p>Hi there! I come across this pattern of lemmas needed in my proof. </p>\n<p><code>lemma one (n : ℕ) : (1 : Fin (Nat.succ (Nat.succ n))) = Fin.succ 0 := rfl</code> <br>\n<code>lemma two (n : ℕ) : (2 : Fin (Nat.succ (Nat.succ (Nat.succ n)))) = Fin.succ 1 := rfl</code> <br>\n<code>...</code></p>\n<p>I am wondering if there is some way to quantifier over the numeric literals  1, 2, etc and to have one lemma to deal them all.</p>",
        "id": 438156711,
        "sender_full_name": "Jin Wei",
        "timestamp": 1715489275
    },
    {
        "content": "<p>You could probably write a simproc.</p>",
        "id": 438222407,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715559367
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Recognize.20numeric.20literals.20as.20Fin.2Esucc.20in.20Fin.20n/near/438222407\">said</a>:</p>\n<blockquote>\n<p>You could probably write a simproc.</p>\n</blockquote>\n<p>Thank you! I am not familiar with <code>simproc</code> but I will look it up.</p>",
        "id": 438227358,
        "sender_full_name": "Jin Wei",
        "timestamp": 1715564603
    }
]