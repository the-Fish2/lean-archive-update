[
    {
        "content": "<p>This is pretty surprising behavior:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">Tactic</span>\n\n<span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"bp\">_*_</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"bp\">_*_</span><span class=\"w\"> </span><span class=\"c1\">-- works</span>\n<span class=\"w\">  </span><span class=\"n\">norm_num</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span>\n\n<span class=\"kn\">example</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"bp\">_*_</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"bp\">_*_</span><span class=\"w\"> </span><span class=\"c1\">-- fails</span>\n<span class=\"w\">  </span><span class=\"n\">norm_num</span>\n</code></pre></div>\n<p>Can we change <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=TopCat.Presheaf.pushforwardObj#doc\">docs#TopCat.Presheaf.pushforwardObj</a> to use less intrusive notation?</p>",
        "id": 448385421,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719852672
    },
    {
        "content": "<p>It ought to be scoped at least!</p>",
        "id": 448386040,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1719852853
    },
    {
        "content": "<p>Also, was there a better way for me to track this down than pruning imports until it worked?</p>",
        "id": 448386122,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719852883
    },
    {
        "content": "<p>Can I get Lean to tell me what it thinks the tokens are?</p>",
        "id": 448386186,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1719852899
    }
]