[
    {
        "content": "<p>Debugging what the recently added <code>nolints.yml</code> workflow, I'm stuck at a puzzle I cannot solve. After applying some fixes, the failed workflow step consists of two lines, each calling some script or programme.</p>\n<p>Each of these lines works fine in isolation, but combined, they seem to hang indefinitely. My best guess is this has to do with some quoting/escaping shenanigans, but I have no idea why or how --- please help.</p>\n<p>Here's the full workflow step I would like to run. </p>\n<div class=\"codehilite\" data-code-language=\"YAML\"><pre><span></span><code><span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">lint mathlib and update style exceptions files</span>\n<span class=\"w\">        </span><span class=\"nt\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">lint</span>\n<span class=\"w\">        </span><span class=\"nt\">uses</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">liskin/gh-problem-matcher-wrap@v3</span>\n<span class=\"w\">        </span><span class=\"nt\">with</span><span class=\"p\">:</span>\n<span class=\"w\">          </span><span class=\"nt\">linters</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">gcc</span>\n<span class=\"w\">          </span><span class=\"nt\">run</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">|</span>\n<span class=\"w\">            </span><span class=\"no\">bash -o pipefail -c \"env LEAN_ABORT_ON_PANIC=1 lake exe runLinter --update Mathlib\"</span>\n<span class=\"w\">            </span><span class=\"no\">bash -o pipefail -c \"./scripts/update-style-exceptions.sh\"</span>\n</code></pre></div>\n<ul>\n<li>Running <a href=\"https://github.com/leanprover-community/mathlib4/pull/13346/commits/4910479246a92e950c6e5ffcbd4e8b45f89cac13\">just the second line</a> works. (The \"build\" job on this commit succeeded; I'm hacking this to test the workflow.)</li>\n<li>\n<p>Replacing the second line by just <code> ./scripts/update-style-exceptions.sh</code> also <a href=\"https://github.com/leanprover-community/mathlib4/pull/13346/commits/147e31eadd4db5a0c38c26ed6fc565aff5e375d0\">worked</a> when I tested it.</p>\n</li>\n<li>\n<p>Running <a href=\"https://github.com/leanprover-community/mathlib4/pull/13346/commits/e8f1e687db6503af63d93854278786c884fa5c2b\">just the first line</a> also <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9324197929/job/25668955924?pr=13346\">worked</a>.</p>\n</li>\n<li>\n<p>Combined them, however, errors: in <a href=\"https://github.com/leanprover-community/mathlib4/pull/13346/commits/ab908feb729cd37816c7f89c523153e9cbb33d1a\">ab908feb729cd37816c7f89c523153e9cbb33d1a</a>, I tried</p>\n</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">./</span><span class=\"n\">scripts</span><span class=\"bp\">/</span><span class=\"n\">update</span><span class=\"bp\">-</span><span class=\"n\">style</span><span class=\"bp\">-</span><span class=\"n\">exceptions</span><span class=\"bp\">.</span><span class=\"n\">sh</span>\n<span class=\"n\">bash</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">pipefail</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"s2\">\"env LEAN_ABORT_ON_PANIC=1 lake exe runLinter --update Mathlib\"</span>\n</code></pre></div>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9323625398/job/25667216028\">to an error</a> that the former script wasn't found. Which seems rather puzzling since a previous job found this script just fine. What am I missing?</p>\n<ul>\n<li>Running the above (with lines transposed) seemingly <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9323653421/job/25667307967\">hung forever</a>. (The raw logs do not contain the linting step, for whatever reason I don't know. I saw the first step complete, and the second one hang.)</li>\n<li>Just for paranoia, I'm <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9324305429/job/25669302842\">running</a>  <a href=\"https://github.com/leanprover-community/mathlib4/pull/13346/commits/9a58f9df81c28209513e011bdf14c10c0ce19002\">essentially the same commit</a> again, to make sure it really hangs where I think it does. Update: cancelled the job after 27min. It shouldn't take that long.</li>\n</ul>",
        "id": 441807428,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717190020
    },
    {
        "content": "<p>... don't use YAML?</p>",
        "id": 441807591,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717190078
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 441807600,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717190081
    },
    {
        "content": "<p>Question to the more core devs than me (not sure whether it's a FRO project, but I think it is): Has the TOML parser landed?</p>",
        "id": 441807685,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717190116
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Help.20wanted.3A.20quoting.2Fescaping.2F.2E.2E.2E.20in.20yaml.20.28for.20.60nolints.2Eyml/near/441807591\">said</a>:</p>\n<blockquote>\n<p>... don't use YAML?</p>\n</blockquote>\n<p>Sure, that's a real option. However, this seems like it should have an easy solution.</p>",
        "id": 441807706,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717190126
    },
    {
        "content": "<p>I'd happily burn all workflow yaml and use toml or whatever well-behaved format instead. In the mean-time, I'd also gladly take a fix for whatever detail I'm overlooking :-)</p>",
        "id": 441807843,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717190179
    },
    {
        "content": "<p>I don't know what might be going on, but can you create a <code>.sh</code> file that runs just those two commands?</p>",
        "id": 441807955,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717190229
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9324512519/job/25669877366\">That seems to work</a>, still running, though...</p>",
        "id": 441809316,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717190776
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Help.20wanted.3A.20quoting.2Fescaping.2F.2E.2E.2E.20in.20yaml.20.28for.20.60nolints.2Eyml/near/441807591\">said</a>:</p>\n<blockquote>\n<p>... don't use YAML?</p>\n</blockquote>\n<p>This is a good answer for \"I'm writing lean code that consumes yaml data\", but not \"I'm writing a github action\"</p>",
        "id": 441810002,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717191041
    },
    {
        "content": "<p>I don't think <a href=\"https://github.com/liskin/gh-problem-matcher-wrap\">https://github.com/liskin/gh-problem-matcher-wrap</a> support multiple commands</p>",
        "id": 441810317,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717191142
    },
    {
        "content": "<p>It ultimately just calls <a href=\"https://github.com/actions/toolkit/blob/main/packages/exec/src/exec.ts#L17\">https://github.com/actions/toolkit/blob/main/packages/exec/src/exec.ts#L17</a></p>",
        "id": 441810949,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717191356
    },
    {
        "content": "<p>So the solution is to remove that line? Wow.</p>",
        "id": 441810971,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717191361
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13346/commits/3faafa0745d5c3799b56df8a8bd3ba0514f4630b\">Trying this now</a></p>",
        "id": 441811090,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717191387
    },
    {
        "content": "<p>The problem matcher is there to add github annotations</p>",
        "id": 441811341,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717191474
    },
    {
        "content": "<p>You could wrap the whole thing in a call to bash</p>",
        "id": 441811431,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717191497
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"w\">          </span><span class=\"n\">run</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">|</span>\n<span class=\"w\">            </span><span class=\"n\">bash</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">pipefail</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"s2\">\"env LEAN_ABORT_ON_PANIC=1 lake exe runLinter --update Mathlib; ./scripts/update-style-exceptions.sh\"</span>\n</code></pre></div>",
        "id": 441811475,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717191512
    },
    {
        "content": "<p>So the whole workflow step would look like this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"w\">      </span><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">lint</span><span class=\"w\"> </span><span class=\"n\">mathlib</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">style</span><span class=\"w\"> </span><span class=\"n\">exceptions</span><span class=\"w\"> </span><span class=\"n\">files</span>\n<span class=\"w\">        </span><span class=\"n\">run</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">|</span>\n<span class=\"w\">          </span><span class=\"n\">bash</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">pipefail</span><span class=\"w\"> </span><span class=\"bp\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"s2\">\"env LEAN_ABORT_ON_PANIC=1 lake exe runLinter --update Mathlib; ./scripts/update-style-exceptions.sh\"</span>\n</code></pre></div>",
        "id": 441811921,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717191660
    },
    {
        "content": "<p>Update: the attempt using a script <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9324643691/job/25670245002?pr=13346\">my latest attempt</a> is running now: update, successful <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 441812183,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717191758
    },
    {
        "content": "<p>And <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9324693801/job/25670406767\">here's the in-progress run</a> of Eric's bash solution.</p>",
        "id": 441812836,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717191999
    },
    {
        "content": "<p>No, you should keep the problem-matcher bit if you use my solution</p>",
        "id": 441813148,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717192121
    },
    {
        "content": "<p>Without the problem matcher you won't get annotations on PRs identifying lint issues</p>",
        "id": 441813198,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717192140
    },
    {
        "content": "<p>I know. I'm editing the build workflow just for testing purposes - at the end of day, I care about <a href=\"https://github.com/leanprover-community/mathlib4/pull/13343\">#13343</a>, which is a weekly cron-job (and does not run on CI).</p>",
        "id": 441813640,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717192297
    },
    {
        "content": "<p>I'll update the PR description once the code is final: at the moment, just look at the diff.</p>",
        "id": 441813774,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717192339
    },
    {
        "content": "<p>Any objections or concerns about this?</p>",
        "id": 441813804,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717192351
    },
    {
        "content": "<p>even simpler? according to <a href=\"https://github.com/github/docs/blob/main/content/actions/using-workflows/workflow-syntax-for-github-actions.md#exit-codes-and-error-action-preference\">github docs, pipefail is set when shell is set</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">foo</span>\n<span class=\"w\">  </span><span class=\"n\">shell</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bash</span>\n<span class=\"w\">  </span><span class=\"n\">run</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">|</span>\n<span class=\"w\">     </span><span class=\"n\">env</span><span class=\"w\"> </span><span class=\"n\">LEAN_ABORT_ON_PANIC</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">runLinter</span><span class=\"w\"> </span><span class=\"c1\">--update Mathlib</span>\n<span class=\"w\">    </span><span class=\"bp\">./</span><span class=\"n\">scripts</span><span class=\"bp\">/</span><span class=\"n\">update</span><span class=\"bp\">-</span><span class=\"n\">style</span><span class=\"bp\">-</span><span class=\"n\">exceptions</span><span class=\"bp\">.</span><span class=\"n\">sh</span>\n</code></pre></div>",
        "id": 441821932,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1717196036
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"634338\">Michael Rothgang</span> has marked this topic as resolved.</p>",
        "id": 441884413,
        "sender_full_name": "Notification Bot",
        "timestamp": 1717236149
    }
]