[
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AlgebraCat#doc\">docs#AlgebraCat</a> looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"sd\">/-- The category of R-algebras and their morphisms. -/</span>\n<span class=\"kn\">structure</span><span class=\"w\"> </span><span class=\"n\">AlgebraCat</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"n\">carrier</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">v</span>\n<span class=\"w\">  </span><span class=\"o\">[</span><span class=\"n\">isRing</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Ring</span><span class=\"w\"> </span><span class=\"n\">carrier</span><span class=\"o\">]</span>\n<span class=\"w\">  </span><span class=\"o\">[</span><span class=\"n\">isAlgebra</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Algebra</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">carrier</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Looks like <span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> wrote this in Lean 3 in 2020 (back then it looked like <code>[is_ring : ring carrier]</code> etc). My instinct is that <code>is</code> should be reserved for Props (I know that not everyone agrees) and that this field should be called <code>toRing</code> or <code>ring</code>. However it's a typeclass so this is barely relevant. The reason I noticed it was that I was reviewing <a href=\"https://github.com/leanprover-community/mathlib4/pull/11973\">#11973</a> which copies the style with</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">structure</span><span class=\"w\"> </span><span class=\"n\">BialgebraCat</span><span class=\"w\"> </span><span class=\"kn\">extends</span><span class=\"w\"> </span><span class=\"n\">Bundled</span><span class=\"w\"> </span><span class=\"n\">Ring</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"o\">[</span><span class=\"n\">isBialgebra</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Bialgebra</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">α</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>and I was going to suggest a change but now I realise that this naming convention is following an established pattern. Are we OK with these names?</p>",
        "id": 443330331,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717778254
    },
    {
        "content": "<p>Also shouldn't <code>carrier</code> be <code>Carrier</code>?</p>",
        "id": 443330518,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717778339
    },
    {
        "content": "<p>It's perhaps worth adding that after the initial boilerplate in this file, <code>isRing</code> shows up preciselty once in mathlib (in the same file as the definition of AlgebraCat).</p>",
        "id": 443330602,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717778388
    },
    {
        "content": "<p>I think such fields should be named <code>instRing</code> and <code>instAlgebra</code>. Names like <code>toRing</code> don't really make sense in this case IMO.</p>",
        "id": 443334772,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717779957
    },
    {
        "content": "<p>I think <code>Carrier</code> vs. <code>carrier</code> is more ambiguous... Imagine defining a monoid object in an arbitrary category <code>C</code>. Should you use <code>Carrier : C</code> in that case?</p>",
        "id": 443334929,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717780007
    }
]