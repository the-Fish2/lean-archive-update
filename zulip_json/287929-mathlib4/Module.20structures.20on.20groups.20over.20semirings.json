[
    {
        "content": "<p>I recently became aware that in some parts of the library we have lemmas like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Submodule.comap_map_eq#doc\">docs#Submodule.comap_map_eq</a> which cater for a setup such as:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">AddCommGroup</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Is this something we want to support?</p>\n<p>I vote no unless someone has a good example. For one thing a term of type <code>Submodule R M</code> under these hypotheses does not carry <code>AddCommGroup</code>.</p>",
        "id": 422196948,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1708336218
    },
    {
        "content": "<p>I think this setup is what is used for positive cones?</p>",
        "id": 422204148,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708338608
    },
    {
        "content": "<p>Yes, the point is to restrict to nonnegative scalars, in which case you get a subsemiring of the original ring.</p>",
        "id": 422211538,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1708341316
    },
    {
        "content": "<p>Thanks, I get it now!</p>",
        "id": 422211642,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1708341362
    },
    {
        "content": "<p>There are still probably plenty of cases where this generality is nonsense though</p>",
        "id": 422212715,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1708341781
    },
    {
        "content": "<p>Regardless of the generality being usually nonsense in most of those cases, it's nice to have lemmas that are as general as possible in that sort of direction. Syntactic generality usually frees you up a lot. The one thing that is worth taking care about is that we avoid them when there's a \"seesaw\" effect, i.e. Ring+ACM vs Semiring+ACG</p>",
        "id": 422213763,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1708342179
    }
]