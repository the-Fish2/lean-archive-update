[
    {
        "content": "<p>a NNG user just <a href=\"#narrow/stream/113489-new-members/topic/rw.20tactic.20in.20NNG4.20behaving.20unexpectedly/near/409469383\">reported this</a> and it's reproducible in mathlib:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">nth_rewrite</span> <span class=\"mi\">2</span> <span class=\"o\">[</span><span class=\"n\">zero_add</span><span class=\"o\">]</span>\n<span class=\"c\">/-</span>\n<span class=\"cm\">tactic 'rewrite' failed, did not find instance of the pattern in the target expression</span>\n<span class=\"cm\">  0 + b</span>\n<span class=\"cm\">b c : ℕ</span>\n<span class=\"cm\">⊢ 0 + b = 0 + c</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>\n<p>Is that expected behaviour? My guess is that Lean is deciding that it's going to be rewriting the second occurrence of <code>0 + b</code> rather than the second occurrence of <code>0 + ?</code>.</p>",
        "id": 409476457,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1703198669
    },
    {
        "content": "<p>This is <a href=\"https://github.com/leanprover/lean4/pull/2539\">lean4#2539</a>, which I'm trying to get merged. :-)</p>",
        "id": 409476758,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703198856
    },
    {
        "content": "<p>I added a link to <span class=\"user-mention\" data-user-id=\"674793\">@Nikolai Morin</span> 's post on the issue.</p>",
        "id": 409477890,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1703199372
    },
    {
        "content": "<p>Another <a href=\"#narrow/stream/113488-general/topic/How.20to.20use.20nth_rewrite.20in.20NNG4.3F/near/397991051\">thread</a>.</p>",
        "id": 409548998,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703236642
    },
    {
        "content": "<p>And <a href=\"#narrow/stream/287929-mathlib4/topic/nth_rw.20broken.3F/near/398897850\">here</a>.</p>",
        "id": 409549370,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1703236811
    },
    {
        "content": "<p>Please make sure they are all linked at <a href=\"https://github.com/leanprover/lean4/pull/2539\">lean4#2539</a>. :-)</p>",
        "id": 409566483,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1703244288
    },
    {
        "content": "<p>Happily this has now been merged, as so will become available in Mathlib at the end of January.</p>",
        "id": 411118033,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1704337820
    }
]