[
    {
        "content": "<p>Let <code>M</code> be a monoid and let <code>V</code> be an <code>M</code>-module (that is, the class <code>Module (MonoidAlgebra k M) V</code> is instantiated).</p>\n<p>Currently, it does not seem that I can use  <code>•</code> to multiply a term <code>m : M</code> by a term <code>v : V</code>, unless I separately instantiate <code>MulAction M V</code>. Would it be possible to add the ability to do this?</p>",
        "id": 425838530,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710134001
    },
    {
        "content": "<p>I would just <code>open MonoidAlgebra</code> and write <code>of g  • m</code>. If you want the <code>MulAction M V</code> temporarily you might make a local instance with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MonoidAlgebra.of#doc\">docs#MonoidAlgebra.of</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MulAction.compHom#doc\">docs#MulAction.compHom</a>. If you make it a global instance, it might not be defeq with an existing <code>MulAction M V</code> instance, but maybe this is less common than an existing <code>Module k V</code> instance ... Note that in the file containing <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearMap.conjugate#doc\">docs#LinearMap.conjugate</a> etc. the author opt to assume both <code>Module k V</code> and <code>Module (MonoidAlgebra k M) V</code> plus <code>IsScalarTower</code>, while <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=groupCohomology#doc\">docs#groupCohomology</a> is using <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Rep#doc\">docs#Rep</a> rather than <code>Module</code>.</p>",
        "id": 425971000,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1710176832
    },
    {
        "content": "<p>Thank you for the response. I see the potential issues with making a global instance here. I think I'll just use a Representation instead of a Module instance for my particular use case.</p>",
        "id": 426019077,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710195828
    }
]