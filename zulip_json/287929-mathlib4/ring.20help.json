[
    {
        "content": "<p>My understanding was that <code>ring</code> is supposed to solve goals like the following:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span>\n    <span class=\"o\">(</span><span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span>\n    <span class=\"o\">[</span><span class=\"n\">Ring</span> <span class=\"n\">B</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">f</span> <span class=\"bp\">+</span> <span class=\"mi\">5</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">ring</span>\n</code></pre></div>\n<p>But ring doesn't solve this. What is going wrong?</p>",
        "id": 417955667,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1706126982
    },
    {
        "content": "<p>It works if I change <code>Ring</code> to <code>CommRing</code></p>",
        "id": 417956255,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706127197
    },
    {
        "content": "<p>Ah yes, I forgot that it had to be commutative. Thanks.</p>",
        "id": 417956487,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1706127280
    },
    {
        "content": "<p>or <code>CommSemiring</code></p>",
        "id": 417956492,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706127283
    },
    {
        "content": "<p>There should really be an error message that <em>says</em> you are doing it wrong when your equation is not over a CommSemiring.</p>",
        "id": 417956660,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1706127361
    },
    {
        "content": "<p>i'm surprised the <code>AddCommMonoidWithOne</code> part of of <code>ring</code> can't handle this. I actually think this is a bug.</p>",
        "id": 417979677,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1706137864
    },
    {
        "content": "<p>ah, apparently <code>noncomm_ring</code> exists. This works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span>\n    <span class=\"o\">(</span><span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span>\n    <span class=\"o\">[</span><span class=\"n\">Ring</span> <span class=\"n\">B</span><span class=\"o\">]</span>\n    <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">f</span> <span class=\"bp\">+</span> <span class=\"mi\">5</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">noncomm_ring</span>\n</code></pre></div>",
        "id": 418702284,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706555391
    },
    {
        "content": "<p>It does, but it's very stupid. See the implementation to realize it's just a bunch of simp lemmas (and <code>abel</code>)</p>",
        "id": 418717777,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1706561329
    }
]