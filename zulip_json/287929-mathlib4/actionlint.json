[
    {
        "content": "<p>After discovering a stupid mistake in a CI script I wrote, I tried adding <code>actionlint</code> to our CI in <a href=\"https://github.com/leanprover-community/mathlib4/pull/11471\">#11471</a>.</p>\n<p>It successfully noticed my stupid mistake, which is good.</p>\n<p>However it also has many other suggestions, and until we act on these it will fail CI. If anyone would be interested in looking into these, I think it would be a good investment in our CI to clean these all up.</p>",
        "id": 427380749,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710749512
    },
    {
        "content": "<p>Are we going to lint the lint? <span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span></p>",
        "id": 427381210,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1710749607
    },
    {
        "content": "<p>Is it ok to simply push to the branch for \"accepting the style change\"?</p>",
        "id": 427383954,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710750179
    },
    {
        "content": "<p>I just did... <span aria-label=\"speak no evil\" class=\"emoji emoji-1f64a\" role=\"img\" title=\"speak no evil\">:speak_no_evil:</span></p>",
        "id": 427386124,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710750608
    },
    {
        "content": "<p>The only remaining error is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">property</span> <span class=\"s2\">\"test\"</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">defined</span> <span class=\"k\">in</span> <span class=\"n\">object</span> <span class=\"n\">type</span> <span class=\"o\">{</span><span class=\"n\">archive</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">conclusion</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outcome</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outputs</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">string</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">string</span><span class=\"o\">}}</span><span class=\"bp\">;</span> <span class=\"n\">build</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">conclusion</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outcome</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outputs</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">string</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">string</span><span class=\"o\">}}</span><span class=\"bp\">;</span> <span class=\"n\">counterexamples</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">conclusion</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outcome</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outputs</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">string</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">string</span><span class=\"o\">}}</span><span class=\"bp\">;</span> <span class=\"n\">hash_commands</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">conclusion</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outcome</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outputs</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">string</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">string</span><span class=\"o\">}}</span><span class=\"bp\">;</span> <span class=\"n\">lean4checker</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">conclusion</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outcome</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outputs</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">string</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">string</span><span class=\"o\">}}</span><span class=\"bp\">;</span> <span class=\"n\">lint</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">conclusion</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outcome</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outputs</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">string</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">string</span><span class=\"o\">}}</span><span class=\"bp\">;</span> <span class=\"n\">noisy</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">conclusion</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outcome</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outputs</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">string</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">string</span><span class=\"o\">}}</span><span class=\"bp\">;</span> <span class=\"n\">shake</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">conclusion</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outcome</span><span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"bp\">;</span> <span class=\"n\">outputs</span><span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">string</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">string</span><span class=\"o\">}}}</span>\n</code></pre></div>\n<p>in three files.<br>\nI failed in diagnosing what the issue is.</p>",
        "id": 427437227,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710760133
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span>, your fix for the noisy stdout linter seems to have broken it.</p>",
        "id": 427445860,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710761759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span>, I fixed that one (it's a missing <code>id: test</code> in the test step). But it seems someone force pushed over my changes?</p>",
        "id": 427446450,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710761863
    },
    {
        "content": "<p>e.g. it's still there in my commit 828aaf8. Could you recover my changes from the history?</p>",
        "id": 427446665,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710761903
    },
    {
        "content": "<p>Oh, sorry, I'll look into these issues!</p>",
        "id": 427451172,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710762766
    },
    {
        "content": "<p>Ok, the <code>id: test</code> fixed the linting.</p>",
        "id": 427453108,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710763180
    },
    {
        "content": "<p>As for the noisy test, I wanted to make it print the output of both <code>stderr</code> and <code>stdout</code>.  I simply checked the opposite of what I meant.  I should have fixed this, but I am testing it right now.</p>",
        "id": 427454193,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710763398
    },
    {
        "content": "<p>I think that I fixed the test for noisiness.  Now it should report both outputs, not just the one of the first successful grep.</p>",
        "id": 427476870,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710767425
    },
    {
        "content": "<p>(CI on the PR is now only missing lint and lean4checker.)</p>",
        "id": 427477406,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710767523
    },
    {
        "content": "<p>... and CI is happy!</p>",
        "id": 427484627,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710768732
    },
    {
        "content": "<p>(I also had a branch with a noisy master and noisy failed on it, as it should)</p>",
        "id": 427484757,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710768749
    },
    {
        "content": "<p>Okay, lets see if there is another maintainer around who can review this for us. :-)</p>",
        "id": 427485847,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710769048
    },
    {
        "content": "<p>I feel like this was a combination of some tedious-and-probably-unnecessary changes, but also catching some real bugs, so overall I think it is quite valuable to have actionlint turned on. CI is hard to get right.</p>",
        "id": 427486031,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1710769096
    },
    {
        "content": "<p>Maybe we should run shellcheck also on the linting files written in bash.</p>",
        "id": 427486065,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710769102
    },
    {
        "content": "<p>(I think that it was useful and it will be useful in the future, if/when CI changes)</p>",
        "id": 427486340,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710769185
    },
    {
        "content": "<p>In fact, shouldn't there be tests for CI?</p>",
        "id": 427486476,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1710769213
    }
]