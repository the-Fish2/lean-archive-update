[
    {
        "content": "<p>Following <a href=\"#narrow/stream/287929-mathlib4/topic/.E2.9C.94.20.60integral_Icc_eq_integral_Ioo.60.20typo.3F/near/419151616\">the issue spotted</a> by <span class=\"user-mention\" data-user-id=\"256383\">@Enrico Borba</span>, I tried to see if I could detect those kind of issues automatically, namely instances of a theorem name mentionning something that is neither in its arguments nor in its return type.<br>\nI first tried to parse the code manually, to extract a list of  theorems and their arguments, but it turns out that we already have this, through <a href=\"https://leanprover-community.github.io/mathlib4_docs/\">https://leanprover-community.github.io/mathlib4_docs/</a> :)<br>\nMy code is temporarily hosted <a href=\"https://gist.github.com/adri326/310ec4b9220fa4ac8cc1c6c9ead8aa63\">here</a>. You can also find <a href=\"https://gist.github.com/adri326/9ab7c42a302511b15b5fdcbc5c0bf743\">the output of my code</a>, though it is quite noisy because of the reasons listed below.</p>\n<p>So, there are several things I uncovered that way:</p>\n<ul>\n<li>there are a lot of places in mathlib that use <code>≥</code> instead of <code>≤</code></li>\n<li><code>inv</code> seems to have more meanings that I can count: it's used to refer to <code>symm</code>, <code>comp</code>, to multiplicative inverses, to refer to cancellation, etc. The more meanings <code>inv</code> has, the less it means anything, so maybe something should be done about it</li>\n<li>since types are erased in the docs,  theorems like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddCircle.norm_neg_period#doc\">docs#AddCircle.norm_neg_period</a> or <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ZMod.isSquare_neg_one_mul#doc\">docs#ZMod.isSquare_neg_one_mul</a> visually look tautological</li>\n<li><code>pos</code> also has ambiguous meaning: in some places it means <code>0 &lt; x</code>, but in other places like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.integral_norm_eq_pos_sub_neg#doc\">docs#MeasureTheory.integral_norm_eq_pos_sub_neg</a> it's used to refer to <code>0 ≤ x</code>. It also means \"is true\", like in <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=iInf_pos#doc\">docs#iInf_pos</a></li>\n<li>and, as expected, there is a handful of theorems whose name mention things that their return types and arguments don't contain. There are too many of them to fit here, and I am certainly missing a lot, but here are a few interesting ones:<ul>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=HasDerivWithinAt.liminf_right_slope_le#doc\">docs#HasDerivWithinAt.liminf_right_slope_le</a> — uses both <code>Ioi</code> and <code>&lt;</code></li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=PNat.pos_of_div_pos#doc\">docs#PNat.pos_of_div_pos</a> — should be <code>pos_of_dvd_pos</code></li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Zsqrtd.nonneg_smul#doc\">docs#Zsqrtd.nonneg_smul</a> — should be <code>nonneg_mul</code></li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=nhds_basis_zero_abs_sub_lt#doc\">docs#nhds_basis_zero_abs_sub_lt</a> — I don't know where the <code>sub</code> comes from</li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Right.pow_neg#doc\">docs#Right.pow_neg</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Left.pow_neg#doc\">docs#Left.pow_neg</a> — should be <code>nsmul_neg</code>, there are a lot of similar issues in that file</li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsClosed.Icc_subset_of_forall_exists_gt#doc\">docs#IsClosed.Icc_subset_of_forall_exists_gt</a> — looks quite odd, the <code>y ∈ Set.Ioi x</code> is not simp-normal, and <code>gt</code> here refers to <code>Set.Ioc</code></li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsPrimitiveRoot.pow_sub_one_eq#doc\">docs#IsPrimitiveRoot.pow_sub_one_eq</a> — I'm not sure why <code>Nat.pred</code> is used here</li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=HasDerivWithinAt.limsup_slope_le#doc\">docs#HasDerivWithinAt.limsup_slope_le</a> — should be <code>limsup_slope_lt</code>, several other lemmas in this file have this issue</li>\n<li><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Monotone.convex_lt#doc\">docs#Monotone.convex_lt</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Monotone.convex_gt#doc\">docs#Monotone.convex_gt</a> — the opposite issue, the first one should be <code>convex_le</code>, and the second one seems to be an exact copy of the former</li>\n</ul>\n</li>\n</ul>",
        "id": 419470961,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1706884982
    },
    {
        "content": "<p>What's the issue with <code>Complex.not_lt_zero_iff</code>?</p>",
        "id": 419471984,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1706885310
    },
    {
        "content": "<p>Hmm, you're right, the order has a different meaning than what I thought</p>",
        "id": 419472657,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1706885529
    },
    {
        "content": "<p>But most of these are great! Thanks a lot!</p>",
        "id": 419481839,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1706888201
    },
    {
        "content": "<p>This looks like a fantastic effort!</p>\n<p><span class=\"user-mention silent\" data-user-id=\"380890\">Emilie (Shad Amethyst)</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Heuristically.20searching.20for.20incorrect.20theorem.20names/near/419470961\">said</a>:</p>\n<blockquote>\n<p>since types are erased in the docs, theorems like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AddCircle.norm_neg_period#doc\">docs#AddCircle.norm_neg_period</a> or <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ZMod.isSquare_neg_one_mul#doc\">docs#ZMod.isSquare_neg_one_mul</a> visually look tautological</p>\n</blockquote>\n<p>Autoparam erasure also makes theorems like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=MeasureTheory.integrableOn_def#doc\">docs#MeasureTheory.integrableOn_def</a> harder to read, (I can't tell what measure <code>Integrable f</code> is over.</p>",
        "id": 419487256,
        "sender_full_name": "Enrico Borba",
        "timestamp": 1706889774
    }
]