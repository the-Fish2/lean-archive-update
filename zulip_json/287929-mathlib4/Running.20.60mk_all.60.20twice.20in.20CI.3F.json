[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span>, why do we have two separate steps running <code>mk_all</code> in CI?</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"w\">      </span><span class=\"bp\">#</span><span class=\"w\"> </span><span class=\"n\">We</span><span class=\"w\"> </span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"ss\">`Mathlib.lean</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">as</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">convenience</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"o\">,</span>\n<span class=\"w\">      </span><span class=\"bp\">#</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">verify</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">didn't</span><span class=\"w\"> </span><span class=\"n\">change</span><span class=\"w\"> </span><span class=\"n\">anything</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"ss\">`check_imported</span><span class=\"bp\">`</span><span class=\"w\"> </span><span class=\"n\">job</span><span class=\"bp\">.</span>\n<span class=\"w\">      </span><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">Mathlib</span><span class=\"bp\">.</span><span class=\"n\">lean</span>\n<span class=\"w\">        </span><span class=\"n\">run</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">|</span>\n<span class=\"w\">          </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">mk_all</span><span class=\"w\"> </span><span class=\"c1\">--lib Mathlib</span>\n\n<span class=\"w\">      </span><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">If</span><span class=\"w\"> </span><span class=\"kn\">using</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">pr</span><span class=\"bp\">-</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"n\">toolchain</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">uninstall</span>\n<span class=\"w\">        </span><span class=\"n\">run</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">|</span>\n<span class=\"w\">          </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">[[</span><span class=\"w\"> </span><span class=\"bp\">$</span><span class=\"o\">(</span><span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">toolchain</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=~</span><span class=\"w\"> </span><span class=\"bp\">^</span><span class=\"n\">leanprover</span><span class=\"bp\">/</span><span class=\"n\">lean4</span><span class=\"bp\">-</span><span class=\"n\">pr</span><span class=\"bp\">-</span><span class=\"n\">releases</span><span class=\"o\">:</span><span class=\"n\">pr</span><span class=\"bp\">-</span><span class=\"n\">release</span><span class=\"bp\">-</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"mi\">9</span><span class=\"o\">]</span><span class=\"bp\">+$</span><span class=\"w\"> </span><span class=\"o\">]]</span><span class=\"bp\">;</span><span class=\"w\"> </span><span class=\"k\">then</span>\n<span class=\"w\">            </span><span class=\"n\">printf</span><span class=\"w\"> </span><span class=\"bp\">'</span><span class=\"n\">Uninstalling</span><span class=\"w\"> </span><span class=\"n\">transient</span><span class=\"w\"> </span><span class=\"n\">toolchain</span><span class=\"w\"> </span><span class=\"bp\">%</span><span class=\"n\">s</span><span class=\"bp\">\\</span><span class=\"n\">n'</span><span class=\"w\"> </span><span class=\"s2\">\"$(cat lean-toolchain)\"</span>\n<span class=\"w\">            </span><span class=\"n\">elan</span><span class=\"w\"> </span><span class=\"n\">toolchain</span><span class=\"w\"> </span><span class=\"n\">uninstall</span><span class=\"w\"> </span><span class=\"s2\">\"$(cat lean-toolchain)\"</span>\n<span class=\"w\">          </span><span class=\"n\">fi</span>\n\n<span class=\"w\">      </span><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"w\"> </span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">versions</span>\n<span class=\"w\">        </span><span class=\"n\">run</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"bp\">|</span>\n<span class=\"w\">          </span><span class=\"n\">lean</span><span class=\"w\"> </span><span class=\"c1\">--version</span>\n<span class=\"w\">          </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"c1\">--version</span>\n\n<span class=\"w\">      </span><span class=\"bp\">-</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">Mathlib</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Tactic</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Counterexamples</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Archive</span><span class=\"o\">}</span><span class=\"bp\">.</span><span class=\"n\">lean</span>\n<span class=\"w\">        </span><span class=\"n\">run</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">lake</span><span class=\"w\"> </span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">mk_all</span>\n</code></pre></div>",
        "id": 444567973,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1718314807
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13667\">#13667</a></p>",
        "id": 444569018,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718315347
    },
    {
        "content": "<p>I do not know why there are two such steps, but I do remember <em>preserving</em> them, since I did not feel confident enough with CI to simply remove one.</p>\n<p>I think that the Michael's PR linked by Ruben is good, and it could probably also remove the <code>git diff</code> step that follows the remaining <code>lake exe mk_all</code> step, since the exit code of <code>mk_all</code> is the number of updated/modified files, so it will fail when the \"import all\" files are not up to date.</p>\n<p>I'll leave this comment on the PR as well.</p>",
        "id": 444583850,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718322959
    }
]