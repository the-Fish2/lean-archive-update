[
    {
        "content": "<p>Hello, I am looking for a proof that ℚ is dense in ℝ and I was wondering if such a proof exists in Mathlib (I could not find it using Moogle nor the regular doc)?</p>",
        "id": 425577401,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1709925347
    },
    {
        "content": "<p>I found <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=dense_irrational#doc\">docs#dense_irrational</a> for example</p>",
        "id": 425577670,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1709925474
    },
    {
        "content": "<p>Dense in what sense? We should have somewhere that R is the (uniform) completion of Q, for example. Can you formulate the precise assertion you want in lean?</p>",
        "id": 425578708,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1709925924
    },
    {
        "content": "<p>a quick search found <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Rat.denseEmbedding_coe_real#doc\">docs#Rat.denseEmbedding_coe_real</a></p>",
        "id": 425579015,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1709926035
    },
    {
        "content": "<p>Here's one formulation, before I saw Adam's message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Dense</span> <span class=\"o\">{(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)}</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">dense_of_exists_between</span>\n  <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">h</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Set.mem_setOf_eq</span><span class=\"o\">,</span> <span class=\"n\">exists_exists_eq_and</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">exists_rat_btwn</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 425579267,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1709926133
    },
    {
        "content": "<p>Using the lemma Adam pointed out, this is just</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">Dense</span> <span class=\"o\">{(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)}</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Rat.denseEmbedding_coe_real.dense</span>\n</code></pre></div>",
        "id": 425579473,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1709926207
    },
    {
        "content": "<p>You can also state the conclusion as <code>Dense (Set.range ((↑) : ℚ → ℝ))</code>, which is definitionally equal.</p>",
        "id": 425579659,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1709926290
    },
    {
        "content": "<p>Thanks a lot! <span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span>, I want to use the fact that, for any real, it exists a sequence of rationals that tends to it. I guess the definition of Dense in Mathlib should allow me to prove this quickly. <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> thank you for the examples.</p>\n<p>I definitely need to check on definition of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=DenseEmbedding#doc\">docs#DenseEmbedding</a>.<br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=dense_of_exists_between#doc\">docs#dense_of_exists_between</a> is very handy tho.</p>",
        "id": 425580308,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1709926541
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Proof.20of.20.E2.84.9A.20dense.20in.20.E2.84.9D.20.3F/near/425579659\">said</a>:</p>\n<blockquote>\n<p>You can also state the conclusion as <code>Dense (Set.range ((↑) : ℚ → ℝ))</code>, which is definitionally equal.</p>\n</blockquote>\n<p>Could you enlighten me on the meaning of  <code>(↑)</code>?</p>",
        "id": 425580626,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1709926673
    },
    {
        "content": "<p>Nevermind, I think I got it. Subsidiary question, why would we use <code>Dense (Set.range ((↑) : ℚ → ℝ))</code> instead of <code>Dense {(x : ℝ) | (x : ℚ)}</code>?</p>",
        "id": 425581277,
        "sender_full_name": "Gaëtan Serré",
        "timestamp": 1709926940
    },
    {
        "content": "<p><del>Because what you wrote doesn't typecheck</del>(edit: apparently incorrect --apologies)</p>",
        "id": 425638257,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1709953834
    },
    {
        "content": "<p>Kevin, I think it does. In fact, those things are defeq.</p>",
        "id": 425640513,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1709955732
    }
]