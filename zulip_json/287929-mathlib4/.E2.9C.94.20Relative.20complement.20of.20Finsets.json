[
    {
        "content": "<p>I am attempting to formulate a splitting lemma of the form \"if I have a finite collection of sets with a certain property and specify some element of that collection, I can find two disjoint subsets of the collection such that replacing the original set with these two subsets preserves the property of the entire collection,\" and I'm currently having trouble formulating the \"replacing part\".</p>\n<p>Here's what I have:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.Polish</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.Polish</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.CantorScheme</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Bases</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">defs</span>\n\n<span class=\"c1\">-- Set variables:</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">tα</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">mα</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">pα</span> <span class=\"o\">:</span> <span class=\"n\">PolishSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">bα</span> <span class=\"o\">:</span> <span class=\"n\">BorelSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">tβ</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">mβ</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">pβ</span> <span class=\"o\">:</span> <span class=\"n\">PolishSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">bβ</span> <span class=\"o\">:</span> <span class=\"n\">BorelSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span>  <span class=\"o\">(</span><span class=\"n\">fcont</span> <span class=\"o\">:</span> <span class=\"n\">Continuous</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)}</span> <span class=\"o\">(</span><span class=\"n\">Fdisj</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">C₁</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">C₂</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">C₁</span> <span class=\"bp\">∩</span> <span class=\"n\">C₂</span> <span class=\"bp\">=</span> <span class=\"bp\">∅</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">Fclosed</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">C</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Filter</span> <span class=\"n\">Classical</span>\n\n<span class=\"c1\">-- Important definitions:</span>\n<span class=\"kd\">def</span> <span class=\"n\">BorelPartialSection</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">MeasurableSet</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">A.InjOn</span> <span class=\"n\">f</span>\n<span class=\"kd\">def</span> <span class=\"n\">IDual₀</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">BorelPartialSection</span> <span class=\"n\">f</span> <span class=\"n\">A</span><span class=\"bp\">ᶜ</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">IDual</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Filter</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">countableGenerate</span> <span class=\"o\">(</span><span class=\"n\">IDual₀</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">I</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">A</span><span class=\"bp\">ᶜ</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">IDual</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sets</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">FBorelCover</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">⋃</span> <span class=\"n\">C</span> <span class=\"bp\">∈</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"bp\">=</span> <span class=\"n\">Set.univ</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">C</span> <span class=\"bp\">∈</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">MeasurableSet</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">BorelCover</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">⋃</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">Set.univ</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">MeasurableSet</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">IsNull</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">β</span><span class=\"o\">,</span> <span class=\"n\">FBorelCover</span> <span class=\"n\">B</span> <span class=\"n\">G</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">C</span> <span class=\"bp\">∈</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">C</span> <span class=\"bp\">∩</span> <span class=\"n\">f</span> <span class=\"bp\">⁻¹'</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">I</span> <span class=\"n\">f</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">defs</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">MetricSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MetricSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">MeasurableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">//</span> <span class=\"bp\">¬</span><span class=\"n\">IsNull</span> <span class=\"n\">f</span> <span class=\"n\">F</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s1</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s2</span> <span class=\"bp\">∈</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">s1</span> <span class=\"bp\">≠</span> <span class=\"n\">s2</span> <span class=\"bp\">→</span> <span class=\"n\">Disjoint</span> <span class=\"n\">s1</span> <span class=\"n\">s2</span><span class=\"o\">)}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">splitting_one</span> <span class=\"o\">{</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">f</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hu</span> <span class=\"o\">:</span> <span class=\"n\">u</span> <span class=\"bp\">∈</span> <span class=\"n\">H.val</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ENNReal</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">εpos</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">t1</span> <span class=\"n\">t2</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">IsClosed</span> <span class=\"n\">t1</span> <span class=\"bp\">∧</span> <span class=\"n\">t1</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span> <span class=\"bp\">∧</span> <span class=\"n\">EMetric.diam</span> <span class=\"n\">t1</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n  <span class=\"o\">(</span><span class=\"n\">IsClosed</span> <span class=\"n\">t2</span> <span class=\"bp\">∧</span> <span class=\"n\">t2</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span> <span class=\"bp\">∧</span> <span class=\"n\">EMetric.diam</span> <span class=\"n\">t2</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">Disjoint</span> <span class=\"n\">t1</span> <span class=\"n\">t2</span> <span class=\"bp\">∧</span>\n  <span class=\"bp\">¬</span><span class=\"n\">IsNull</span> <span class=\"n\">f</span> <span class=\"o\">{</span><span class=\"n\">H.1</span> <span class=\"bp\">\\</span> <span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"bp\">∪</span> <span class=\"o\">{</span><span class=\"n\">t1</span><span class=\"o\">,</span> <span class=\"n\">t2</span><span class=\"o\">}}</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Which is yielding the errors</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">MWE.lean</span><span class=\"o\">:</span><span class=\"mi\">44</span><span class=\"o\">:</span><span class=\"mi\">13</span>\n<span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"kd\">instance</span>\n  <span class=\"n\">SDiff</span> <span class=\"o\">(</span><span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span>\n\n<span class=\"n\">MWE.lean</span><span class=\"o\">:</span><span class=\"mi\">44</span><span class=\"o\">:</span><span class=\"mi\">25</span>\n<span class=\"n\">overloaded</span><span class=\"o\">,</span> <span class=\"n\">errors</span>\n  <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"kd\">instance</span>\n    <span class=\"n\">Insert</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span>\n\n  <span class=\"mi\">44</span><span class=\"o\">:</span><span class=\"mi\">26</span> <span class=\"bp\">'</span><span class=\"n\">t1'</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">field</span> <span class=\"n\">of</span> <span class=\"kd\">structure</span> <span class=\"bp\">'</span><span class=\"n\">Finset'</span>\n\n<span class=\"n\">MWE.lean</span><span class=\"o\">:</span><span class=\"mi\">44</span><span class=\"o\">:</span><span class=\"mi\">13</span>\n<span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"kd\">instance</span>\n  <span class=\"n\">Union</span> <span class=\"o\">(</span><span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span>\n\n<span class=\"n\">MWE.lean</span><span class=\"o\">:</span><span class=\"mi\">44</span><span class=\"o\">:</span><span class=\"mi\">12</span>\n<span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"kd\">instance</span>\n  <span class=\"n\">Singleton</span> <span class=\"o\">(</span><span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">Finset</span> <span class=\"o\">(</span><span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>Any idea what's going on?</p>",
        "id": 427489553,
        "sender_full_name": "Connor Gordon",
        "timestamp": 1710770011
    },
    {
        "content": "<p>You're missing <code>[DecidableEq (Set α)</code>. You can use the tactic <code>classical</code> to access this</p>",
        "id": 427490308,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1710770207
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"530359\">Connor Gordon</span> has marked this topic as resolved.</p>",
        "id": 427503705,
        "sender_full_name": "Notification Bot",
        "timestamp": 1710773632
    }
]