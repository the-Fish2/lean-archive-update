[
    {
        "content": "<p>Short version.<br>\nHow can I have a different <code>set_option</code> default between local builds and CI?  I just defined a new <code>Lean.Option</code> in <code>Mathlib</code> and would like it to be quiet locally and chatty in CI.</p>\n<p>Longer version.<br>\nI am writing a linter for making sure that <code>#</code>-commands are not allowed in <code>Mathlib</code> files.</p>\n<p>Currently, setting it to <code>true</code> logs a warning when a <code>#</code>-command is used.  However, I would like the default behaviour to be to do nothing and only turning it on for CI.  I tried modifying the <code>lakefile.lean</code> as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">weakLeanArgs</span> <span class=\"o\">:=</span>\n    <span class=\"k\">if</span> <span class=\"n\">get_config</span><span class=\"bp\">?</span> <span class=\"n\">CI</span> <span class=\"bp\">|&gt;.</span><span class=\"n\">isSome</span> <span class=\"k\">then</span>\n      <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-DwarningAsError=true\"</span><span class=\"o\">,</span> <span class=\"s2\">\"-Dlinter.hashCommand=true\"</span><span class=\"o\">]</span> <span class=\"c1\">-- added here and below, to test locally</span>\n    <span class=\"k\">else</span>\n      <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"s2\">\"-Dlinter.hashCommand=true\"</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>However, when I run <code>lake build Mathlib.mwe</code> (<code>Mathlib/mwe.lean</code> is my current test file that imports the file with the linter and has an eval command) I get the error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">lake</span> <span class=\"n\">build</span> <span class=\"n\">Mathlib.mwe</span>\n<span class=\"o\">[</span><span class=\"mi\">303</span><span class=\"bp\">/</span><span class=\"mi\">304</span><span class=\"o\">]</span> <span class=\"n\">Building</span> <span class=\"n\">Mathlib.mwe</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"bp\">&gt;</span> <span class=\"n\">LEAN_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">std</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Qq</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">aesop</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">proofwidgets</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">Cli</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">packages</span><span class=\"bp\">/</span><span class=\"n\">importGraph</span><span class=\"bp\">/.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span><span class=\"o\">:</span><span class=\"bp\">./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"n\">LD_LIBRARY_PATH</span><span class=\"bp\">=./.</span><span class=\"n\">lake</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">lib</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">damiano</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.6.0-rc1/bin/lean -Dlinter.hashCommand=true -Dpp.unicode.fun=true -Dpp.proofs.withType=false -DautoImplicit=false -DrelaxedAutoImplicit=false ./././Mathlib/mwe.lean -R ././. -o ./.lake/build/lib/Mathlib/mwe.olean -i ./.lake/build/lib/Mathlib/mwe.ilean -c ./.lake/build/ir/Mathlib/mwe.c</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">stderr</span><span class=\"o\">:</span>\n<span class=\"n\">invalid</span> <span class=\"bp\">-</span><span class=\"n\">D</span> <span class=\"kd\">parameter</span><span class=\"o\">,</span> <span class=\"n\">unknown</span> <span class=\"n\">configuration</span> <span class=\"n\">option</span> <span class=\"bp\">'</span><span class=\"n\">linter.hashCommand'</span>\n<span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"bp\">`/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">damiano</span><span class=\"bp\">/.</span><span class=\"n\">elan</span><span class=\"bp\">/</span><span class=\"n\">toolchains</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"c1\">--lean4---v4.6.0-rc1/bin/lean` exited with code 1</span>\n</code></pre></div>\n<p>Am I doing something wrong?  It seems like <code>lean</code> does not know about <code>linter.hashCommand</code>, which is fair enough, since I just defined it.  But I do not know how to make <code>lean</code> aware of its existence...</p>\n<p>Ref: <a href=\"https://github.com/leanprover-community/mathlib4/pull/11019\">#11019</a></p>",
        "id": 423932142,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709169829
    },
    {
        "content": "<p>This does not currently seem to be possible. See <a class=\"stream-topic\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4/topic/register_option.20or.20EnvExtension.3F\">#lean4 &gt; register_option or EnvExtension?</a> and <a href=\"https://github.com/leanprover/lean4/pull/3403\">lean4#3403</a>.</p>",
        "id": 424008823,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1709209697
    },
    {
        "content": "<p><span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span> you are right: I knew of both those discussions, but somehow I was hoping that they would not apply to me... <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 424021244,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1709214109
    }
]