[
    {
        "content": "<p>I'm suddenly getting a timeout by the instance solver in <code>hasIntegral_iff</code> in <code>Mathlib.Analysis.BoxIntegral.Basic</code>, in my branch <code>adri326/rubin</code>: <a href=\"http://error%20in%20the%20CI\">https://github.com/leanprover-community/mathlib4/actions/runs/7595165373/job/20687438795#step:12:2129</a></p>\n<p>The CI worked in the previous commit, and <a href=\"https://github.com/leanprover-community/mathlib4/commit/5fbc183ac3ee97d8b5558350041af0b6084211c9#diff-2b2b27965508983325d23ab5f18accb52bfe41d0d2d1099a6b915be272d2ab43R827-R833\">I only introduced one instance</a> for <code>Infinite X</code> in the offending commit</p>\n<p>Taking a closer look at the theorem in question, it contains a tail <code>simp</code> call which can easily be replaced with a <code>simp only</code>, which solves the timeout. The trace is unfortunately unreadable with <code>simp</code> alone.<br>\nIncreasing the maximum number of heartbeats makes the theorem pass, although it takes ~4s to do so.<br>\nWhen using <code>simp only</code>, it drops to <code>0.2s</code> and doesn't require the number of heartbeats to be increased.</p>\n<p>Is this worth opening a PR for? I can always remove the new instance introduced by my offending commit, but I doubt that this complex <code>simp</code> call won't get over the threshold again in the future as new instances get introduced here and there if it is left as-is.</p>",
        "id": 417009834,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1705772525
    },
    {
        "content": "<p>Ah well I'm getting another timeout in <code>Counterexamples/Phillips.lean</code> this time, over a tail <code>simpa</code> this time</p>",
        "id": 417016210,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1705778536
    },
    {
        "content": "<p>Ah, this one leads to a small MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.ContinuousFunction.Bounded</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Topology</span>\n<span class=\"kn\">open</span> <span class=\"n\">Set</span> <span class=\"n\">BoundedContinuousFunction</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">NoIsolatedPoints</span> <span class=\"o\">(</span><span class=\"n\">Œ±</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n  <span class=\"n\">not_isolated'</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">,</span> <span class=\"n\">Filter.NeBot</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span><span class=\"o\">[</span><span class=\"bp\">‚â†</span><span class=\"o\">]</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">Œ±</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">T1Space</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NoIsolatedPoints</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Nonempty</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Infinite</span> <span class=\"n\">Œ±</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">causes_timeout</span> <span class=\"o\">{</span><span class=\"n\">Œ±</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">DiscreteTopology</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Nontrivial</span> <span class=\"o\">(</span><span class=\"n\">Œ±</span> <span class=\"bp\">‚Üí·µá</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">infer_instance</span>\n</code></pre></div>",
        "id": 417016764,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1705779064
    },
    {
        "content": "<p>Did you try setting priority of the new instance to (a) 100; (b) 50?</p>",
        "id": 417025319,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705786135
    }
]