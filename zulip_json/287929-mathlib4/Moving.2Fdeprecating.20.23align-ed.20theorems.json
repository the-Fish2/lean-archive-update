[
    {
        "content": "<p>I'm implementing <code>MulAction.period g a</code>, which is a wrapper around <code>Function.minimalPeriod (fun x =&gt; g • x) a</code>, that allows for cleaner proofs (while remaining definitionally equal to the latter).<br>\nHowever, I only just noticed that <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Dynamics/PeriodicPts.html#AddAction.nsmul_vadd_mod_minimalPeriod\"><code>MulAction.pow_smul_eq_iff_minimalPeriod_dvd</code></a> is defined directly in <code>Mathlib.Dynamics.PeriodicPts</code>, and is already <code>#align</code>-ed.</p>\n<p>I would like to know if it's possible to:</p>\n<ul>\n<li>move those theorems to the new module I created for that topic, <code>Mathlib.GroupTheory.GroupAction.Period</code> (breaking change, although the fix for it is easy)</li>\n<li>deprecate it (minor change, but an inconvenient one when relying on semver)</li>\n<li>move the <code>#align</code> over to the new versions of those theorems that use <code>MulAction.period</code> instead</li>\n</ul>\n<p>Beyond that, is it acceptable to switch over more theorems using <code>Function.minimalPeriod (fun x =&gt; g • x) a</code> to <code>MulAction.period g a</code>? I'll be making these changes in a separate PR anyway.</p>",
        "id": 411451311,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1704499215
    },
    {
        "content": "<p>The policy around breaking changes in mathlib is usually \"fix any breakages within mathlib itself and you're good!\" There's some discussion about being a bit more harsh than this around very core parts, but I don't think it's an issue here.</p>\n<p>Increasing the import requirements of things is seen a bit more harshly, so that depends. Mathlib doesn't really use semver, as far as I'm aware.</p>\n<p>I think you can toy with replacing it fully and see what happens.</p>",
        "id": 411454099,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1704500693
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Moving.2Fdeprecating.20.23align-ed.20theorems/near/411454099\">said</a>:</p>\n<blockquote>\n<p>The policy around breaking changes in mathlib is usually \"fix any breakages within mathlib itself and you're good!\"<br>\n&lt;snip&gt;<br>\nI think you can toy with replacing it fully and see what happens.</p>\n</blockquote>\n<p>To be clear, this means \"make the PR with a breaking change, and CI will tell you if you have to fix anything\".</p>",
        "id": 411456749,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1704501965
    },
    {
        "content": "<p>Of course, it's often a good plan to discuss the idea first as you are doing in this thread; there's no point fixing CI if the consensus from review is that it's not a good change!</p>",
        "id": 411456786,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1704501985
    }
]