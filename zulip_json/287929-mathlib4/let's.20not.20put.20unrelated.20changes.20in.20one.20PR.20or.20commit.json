[
    {
        "content": "<p>Two weeks ago, I moved the theorem <code>Function.id_def</code> from Mathlib to Std. Then a week ago, I opened <a href=\"https://github.com/leanprover-community/mathlib4/pull/12539\">#12539</a>, which removed it from <code>Mathlib.Logic.Function.Basic</code>. <span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> merged <a href=\"https://github.com/leanprover/std4/pull/755\">std#755</a> three days ago, which brought the theorem into Std.</p>\n<p>I've just found out <a href=\"https://github.com/leanprover-community/mathlib4/pull/12539\">#12539</a> hasn't been merged, but <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> included the removal of the theorem in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12660\">#12660</a> two days ago, and <span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> merged it a couple of hours ago. It seemed that the work in his PR wasn't directly related to <code>Function.id_def</code>.</p>\n<p>I'm not upset or anything, but I think it's better not to put some unrelated changes into a single PR or commit.</p>",
        "id": 437253709,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1714998969
    },
    {
        "content": "<p>I think this is a rather special case, and what actually is going on here is that Std bumps should ideally be merged in order</p>",
        "id": 437254042,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714999109
    },
    {
        "content": "<p>Maybe something we can learn from this is that if you have a PR open to bump Std, you should insist a bit on zulip that it's merged asap</p>",
        "id": 437254159,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714999159
    },
    {
        "content": "<p>Neither of you tagged your PR with <code>dependency-bump</code>, which probably doesn't help with spotting that</p>",
        "id": 437254165,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714999161
    },
    {
        "content": "<p>(TIL about the dependency-bump label)</p>",
        "id": 437254188,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714999174
    },
    {
        "content": "<p>Similarly, if you are <em>making</em> an Std dependency bump, you should search for open dependency PRs first, and mark yours as depending on it</p>",
        "id": 437254288,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714999205
    },
    {
        "content": "<p>Just to be super clear for <span class=\"user-mention\" data-user-id=\"417769\">@Bulhwi Cha</span>'s benefit: Yury had only two options here:</p>\n<ul>\n<li>Make the change in their PR</li>\n<li>Be aware that your PR already existed and mark it as a dependency</li>\n</ul>\n<p>The path you imply of:</p>\n<ul>\n<li>Don't make this change in their PR, but keep all the other changes</li>\n</ul>\n<p>would result in a CI failure, because you can't pick and choose which parts of Std to bump</p>",
        "id": 437254577,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714999322
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/let's.20not.20put.20unrelated.20changes.20in.20one.20PR.20or.20commit/near/437254159\">said</a>:</p>\n<blockquote>\n<p>Maybe something we can learn from this is that if you have a PR open to bump Std, you should insist a bit on zulip that it's merged asap</p>\n</blockquote>\n<p>I guess you're right. I thought Kim would've spotted <a href=\"https://github.com/leanprover-community/mathlib4/pull/12539\">#12539</a> when merging <a href=\"https://github.com/leanprover/std4/pull/755\">std#755</a> because <a href=\"user_uploads/3121/BTFdZEN_0l_1L6eD3fu_Yebz/20240506_21h45m33s_grim.png\">GitHub</a> let us know <a href=\"https://github.com/leanprover/std4/pull/755\">std#755</a> was mentioned in my Mathlib PR.</p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/3121/BTFdZEN_0l_1L6eD3fu_Yebz/20240506_21h45m33s_grim.png\" title=\"GitHub\"><img src=\"user_uploads/3121/BTFdZEN_0l_1L6eD3fu_Yebz/20240506_21h45m33s_grim.png\"></a></div>",
        "id": 437257273,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1715000291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/let's.20not.20put.20unrelated.20changes.20in.20one.20PR.20or.20commit/near/437254188\">said</a>:</p>\n<blockquote>\n<p>(TIL about the dependency-bump label)</p>\n</blockquote>\n<p>Me too. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> I've been moving stuff from Mathlib to Std several times. I'll use the tag whenever I do it again from now on.</p>",
        "id": 437257807,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1715000509
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/let's.20not.20put.20unrelated.20changes.20in.20one.20PR.20or.20commit/near/437254577\">said</a>:</p>\n<blockquote>\n<p>Just to be super clear for <span class=\"user-mention silent\" data-user-id=\"417769\">Bulhwi Cha</span>'s benefit: Yury had only two options here:</p>\n<ul>\n<li>Make the change in their PR</li>\n<li>Be aware that your PR already existed and mark it as a dependency</li>\n</ul>\n<p>The path you imply of:</p>\n<ul>\n<li>Don't make this change in their PR, but keep all the other changes</li>\n</ul>\n<p>would result in a CI failure, because you can't pick and choose which parts of Std to bump</p>\n</blockquote>\n<p>In the case where there hasn't been any open dependency bump PR, one can make it themselves and mark it as a dependency. I think that's better.</p>\n<p>If you choose to make the change in your PR, it'd be nice to mention the change in your commit message and PR comment.</p>",
        "id": 437260314,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1715001406
    },
    {
        "content": "<p>If you expect me to find your mathlib adaptation PRs for Std bumps, please make sure they are linked from the Std PR! I try to merge the mathlib adaptation bumps immediately after I merge the Std PRs. However if others are merging the Std PRs, ideally the author of that PR will try to get their mathlib adaptation PR merged expeditously, e.g. by posting about it on zulip (<a class=\"stream\" data-stream-id=\"144837\" href=\"/#narrow/stream/144837-PR-reviews\">#PR reviews</a>, or #std4, or here)</p>",
        "id": 437270527,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715004533
    },
    {
        "content": "<p>I added the following comment to my another Std PR, <a href=\"https://github.com/leanprover/std4/pull/756\">std#756</a>:</p>\n<blockquote>\n<p>Std bump PR in Mathlib: <a href=\"https://github.com/leanprover-community/mathlib4/pull/12540\">https://github.com/leanprover-community/mathlib4/pull/12540</a></p>\n</blockquote>\n<p>I guess I've been too quiet. I didn't want to make duplicated notifications, but now I understand that I should mention my PRs on Zulip.</p>",
        "id": 437273458,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1715005403
    },
    {
        "content": "<p>I'm sorry for missing your PR. I was preparing a bump PR for my std/batteries PR and fixed the build.</p>",
        "id": 438072800,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1715395676
    },
    {
        "content": "<p>It's okay!</p>",
        "id": 438072908,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1715395733
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  What do you think about making \"Mathlib adaptation PR\" a requirement for a Batteries PR? In the case if Mathlib doesn't cleanly compile with this PR.</p>",
        "id": 438075982,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1715399162
    },
    {
        "content": "<p>Prior to considering it a requirement would be setting up CI to do automatic testing, i.e. to automatically create a <code>batteries-pr-testing-NNNN</code> branch at Mathlib, and then reporting back to the batteries PR about the results of Mathlib CI on that branch.</p>\n<p>(i.e. isomorphic to what we do for Lean PRs already)</p>\n<p>We need to have the reporting before it's possible to require the successful build.</p>\n<p>I don't think I'll have availability to set this up, however. If someone else would like to that would be great.</p>",
        "id": 438087042,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715412212
    }
]