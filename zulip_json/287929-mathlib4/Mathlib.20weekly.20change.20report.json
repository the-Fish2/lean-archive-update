[
    {
        "content": "<hr>\n<h2>Weekly stats (<a href=\"https://github.com/leanprover-community/mathlib4/compare/3f8be61e1cfb12e7c067d481bc44b7d75bfeedc3...d874bdffd15c8aeb3e8bb150dcff8feaac40e4e4\">2024-05-12...2024-05-19</a>)</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: center;\">Type</th>\n<th style=\"text-align: center;\">Total</th>\n<th style=\"text-align: center;\">%</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center;\">Theorems</td>\n<td style=\"text-align: center;\">168,073 (+772 -90)</td>\n<td style=\"text-align: center;\">0.41%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Data</td>\n<td style=\"text-align: center;\">60,131 (+320 -19)</td>\n<td style=\"text-align: center;\">0.50%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Predicates</td>\n<td style=\"text-align: center;\">4,150 (+31 -2)</td>\n<td style=\"text-align: center;\">0.70%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Types</td>\n<td style=\"text-align: center;\">3,325 (+8 -0)</td>\n<td style=\"text-align: center;\">0.24%</td>\n</tr>\n</tbody>\n</table>\n<p>895 files changed (+42 -11 ~839), 7725 lines changed (+20466 -12741)</p>\n<p>Reference commits: old <a href=\"https://github.com/leanprover-community/mathlib4/commit/3f8be61e1cfb12e7c067d481bc44b7d75bfeedc3\">3f8be61e1c</a>, new <a href=\"https://github.com/leanprover-community/mathlib4/commit/d874bdffd15c8aeb3e8bb150dcff8feaac40e4e4\">d874bdffd1</a>.</p>\n<p>Take also a look at the <a href=\"https://leanprover-community.github.io/mathlib_stats.html\"><code>Mathlib</code> stats page</a>.</p>",
        "id": 439443648,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716130017
    },
    {
        "content": "<p>Automatic post, triggered by a label!</p>",
        "id": 439443667,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716130046
    },
    {
        "content": "<p>Ok, the next step is to check that I can get this to work on a schedule with a cron job.</p>",
        "id": 439443686,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716130081
    },
    {
        "content": "<p>(The bot even created the topic: it was not clear to me that this would happen!)</p>",
        "id": 439443766,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716130144
    },
    {
        "content": "<hr>\n<h2>Weekly stats (<a href=\"https://github.com/leanprover-community/mathlib4/compare/cec3ec0be2b624a38a6d59dd8f51f2377e946144...b2214f73182429f000eb67735bfac87889f1abf1\">2024-05-13...2024-05-20</a>)</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: center;\">Type</th>\n<th style=\"text-align: center;\">Total</th>\n<th style=\"text-align: center;\">%</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center;\">Theorems</td>\n<td style=\"text-align: center;\">160,386 (+765 -104)</td>\n<td style=\"text-align: center;\">0.41%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Definitions-Data</td>\n<td style=\"text-align: center;\">57,821 (+306 -31)</td>\n<td style=\"text-align: center;\">0.48%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Data</td>\n<td style=\"text-align: center;\">8,121 (+354 -29)</td>\n<td style=\"text-align: center;\">0.62%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Definitions-Props</td>\n<td style=\"text-align: center;\">7,760 (+43 -3)</td>\n<td style=\"text-align: center;\">0.52%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Types</td>\n<td style=\"text-align: center;\">1,264 (+1 -0)</td>\n<td style=\"text-align: center;\">0.00%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Definitions-Types</td>\n<td style=\"text-align: center;\">411 (+1 -0)</td>\n<td style=\"text-align: center;\">0.24%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Predicates</td>\n<td style=\"text-align: center;\">5 (+0 -0)</td>\n<td style=\"text-align: center;\">0.00%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Definitions-Predicates</td>\n<td style=\"text-align: center;\">3 (+0 -0)</td>\n<td style=\"text-align: center;\">0.00%</td>\n</tr>\n</tbody>\n</table>\n<p>866 files changed (+43 -10 ~805), 7508 lines changed (+19972 -12464)</p>\n<p>Reference commits: old <a href=\"https://github.com/leanprover-community/mathlib4/commit/cec3ec0be2b624a38a6d59dd8f51f2377e946144\">cec3ec0be2</a>, new <a href=\"https://github.com/leanprover-community/mathlib4/commit/b2214f73182429f000eb67735bfac87889f1abf1\">b2214f7318</a>.</p>\n<p>Take also a look at the <a href=\"https://leanprover-community.github.io/mathlib_stats.html\"><code>Mathlib</code> stats page</a>.</p>",
        "id": 439545153,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1716200868
    },
    {
        "content": "<p>If, like me, you are wondering about those 5+3 predicates, they are</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">pred</span><span class=\"o\">:</span>   <span class=\"n\">FermatLastTheorem</span>\n<span class=\"kd\">def</span> <span class=\"n\">pred</span><span class=\"o\">:</span>   <span class=\"n\">UnivLE</span>\n<span class=\"kd\">def</span> <span class=\"n\">pred</span><span class=\"o\">:</span>   <span class=\"n\">RiemannHypothesis</span>\n<span class=\"n\">other</span> <span class=\"n\">pred</span><span class=\"o\">:</span> <span class=\"n\">True</span>\n<span class=\"n\">other</span> <span class=\"n\">pred</span><span class=\"o\">:</span> <span class=\"n\">PEmpty</span>\n<span class=\"n\">other</span> <span class=\"n\">pred</span><span class=\"o\">:</span> <span class=\"n\">False</span>\n<span class=\"n\">other</span> <span class=\"n\">pred</span><span class=\"o\">:</span> <span class=\"n\">FirstOrder.Language</span>\n<span class=\"n\">other</span> <span class=\"n\">pred</span><span class=\"o\">:</span> <span class=\"n\">PUnit</span>\n</code></pre></div>",
        "id": 439545430,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716200987
    },
    {
        "content": "<p>Comparing the two, it seems that most declarations that are in <code>Prop</code> are <code>theorem</code>s and most declarations that are <code>data</code> are <code>def</code>s.</p>",
        "id": 439545852,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716201167
    },
    {
        "content": "<p>I'm sorry, I still don't understand the row labels at all. :-) Are the <code>-</code> minus signs? Indicating subcategories?</p>",
        "id": 439546515,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716201473
    },
    {
        "content": "<p>The <code>-</code> signs indicate numbers of declarations that were lost, and <code>+</code> are new declarations.</p>",
        "id": 439546923,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716201669
    },
    {
        "content": "<p>However, \"lost\" or \"new\" is just by looking at the <code>Name</code>s, so a rename of a declaration would have <code>+1 -1</code>.</p>",
        "id": 439546998,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716201713
    },
    {
        "content": "<p>No, I mean in \"Definitions-Data\"</p>",
        "id": 439547070,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716201727
    },
    {
        "content": "<p>It is intended to be the analogue of Git's \"insertions/deletions\".</p>",
        "id": 439547079,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716201731
    },
    {
        "content": "<p>Ah, the split is as follows: for <code>def</code>s on the one hand and for everything else on the other hand, we compute 4 categories: <code>Prop</code>s, <code>Type</code>s, predicates and data.</p>",
        "id": 439547254,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716201791
    },
    {
        "content": "<p>Oh, but in one place you write \"Theorems\" and in the other you write \"Props\"?</p>",
        "id": 439547370,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716201840
    },
    {
        "content": "<p>I.e. there is a function that classifies a declaration into the 4 kinds above and a further \"pre\"-filter on whether the declaration is a <code>defnInfo</code> or not.</p>",
        "id": 439547371,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716201840
    },
    {
        "content": "<p>That is confusing.</p>",
        "id": 439547392,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716201843
    },
    {
        "content": "<p>I'm confused that <code>Definitions-Predicates</code> and <code>Predicates</code> both appear, can they be merged?</p>",
        "id": 439547455,
        "sender_full_name": "Utensil Song",
        "timestamp": 1716201857
    },
    {
        "content": "<p>You should change the <code>-</code> to <code>: </code> in that case.</p>",
        "id": 439547462,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716201861
    },
    {
        "content": "<p>Ah, I see, that is left-over from the previous naming!</p>",
        "id": 439547480,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716201868
    },
    {
        "content": "<p>Ok, I am going to replace <code>-</code> by <code>:</code> first (and update the post above).</p>",
        "id": 439547600,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716201931
    },
    {
        "content": "<p>Oh, I cannot update the post above, since I have not posted it...  <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span></p>",
        "id": 439547718,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716201965
    },
    {
        "content": "<p>Anyway, I will do the replacement on the PR.</p>",
        "id": 439547740,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716201980
    },
    {
        "content": "<p>As for <code>Definition-Predicates</code> and <code>Predicates</code>, those are counting slightly different things (though I am tempted to just remove those from the list altogether, since everyone is going to wonder about what they are and the answer is somewhat boring).</p>",
        "id": 439547863,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716202043
    },
    {
        "content": "<p>Is anyone opposed to simply omitting <code>Predicates</code>, whether in <code>def</code>initions or elsewhere?</p>",
        "id": 439549264,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716202608
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib.20weekly.20change.20report/near/439545852\">said</a>:</p>\n<blockquote>\n<p>Comparing the two, it seems that most declarations that are in <code>Prop</code> are <code>theorem</code>s and most declarations that are <code>data</code> are <code>def</code>s.</p>\n</blockquote>\n<p>I don't think counting whether things are declared with <code>def</code> or <code>theorem</code> is interesting at all. What is interesting is whether the declations are \"functions\" or \"proofs\"</p>",
        "id": 439549969,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716202885
    },
    {
        "content": "<p>Which is to say; I think the one at the top of this thread is much better than the recent one, after replacing \"data\" with some better word like \"definitions\" or \"operations\" or \"functions\"</p>",
        "id": 439550459,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716203049
    },
    {
        "content": "<p>Ok, however I made the change thinking that this was in the direction of what Mario was suggesting in the other thread.  I may very well have misunderstood what Mario meant, though.</p>",
        "id": 439550664,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716203136
    },
    {
        "content": "<p>There could be just Theorems, Definitions, Types, Predicates .</p>",
        "id": 439559028,
        "sender_full_name": "Utensil Song",
        "timestamp": 1716206511
    },
    {
        "content": "<p>Unless more meaningful categories can be extracted as how people perceive them.</p>",
        "id": 439559339,
        "sender_full_name": "Utensil Song",
        "timestamp": 1716206623
    },
    {
        "content": "<p>Ok, I reverted to 4 fields, and I have change <code>Theorems</code> to <code>Propositions</code> and <code>Data</code> to <code>Definitions</code>.</p>",
        "id": 439560264,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716206965
    },
    {
        "content": "<hr>\n<h2>Weekly stats (<a href=\"https://github.com/leanprover-community/mathlib4/compare/7131ad0791a62abed4aaa7dc6d54f5cd30f4f652...c1ec143cbfaa533f6b8e074b4f703836a5ea493b\">2024-05-13...2024-05-20</a>)</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: center;\">Type</th>\n<th style=\"text-align: center;\">Total</th>\n<th style=\"text-align: center;\">%</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center;\">Propositions</td>\n<td style=\"text-align: center;\">168,073 (+697 -83)</td>\n<td style=\"text-align: center;\">0.37%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Definitions</td>\n<td style=\"text-align: center;\">60,130 (+306 -19)</td>\n<td style=\"text-align: center;\">0.48%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Predicates</td>\n<td style=\"text-align: center;\">4,150 (+27 -2)</td>\n<td style=\"text-align: center;\">0.60%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Types</td>\n<td style=\"text-align: center;\">3,325 (+8 -0)</td>\n<td style=\"text-align: center;\">0.24%</td>\n</tr>\n</tbody>\n</table>\n<p>830 files changed (+42 -10 ~775), 7411 lines changed (+18922 -11511)</p>\n<p>Reference commits: old <a href=\"https://github.com/leanprover-community/mathlib4/commit/7131ad0791a62abed4aaa7dc6d54f5cd30f4f652\">7131ad0791</a>, new <a href=\"https://github.com/leanprover-community/mathlib4/commit/c1ec143cbfaa533f6b8e074b4f703836a5ea493b\">c1ec143cbf</a>.</p>\n<p>Take also a look at the <a href=\"https://leanprover-community.github.io/mathlib_stats.html\"><code>Mathlib</code> stats page</a>.</p>",
        "id": 439560273,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716206968
    },
    {
        "content": "<p>I think that using both <code>Theorems</code> <em>and</em> <code>Definitions</code> may give the impression that those are literally counting the number of declarations introduced by <code>theorem</code> and by <code>def</code>.</p>",
        "id": 439560428,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716207022
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib.20weekly.20change.20report/near/439550664\">said</a>:</p>\n<blockquote>\n<p>Ok, however I made the change thinking that this was in the direction of what Mario was suggesting in the other thread.  I may very well have misunderstood what Mario meant, though.</p>\n</blockquote>\n<p>My suggestion was to only split up \"definitions\" into \"def (prop)\", \"def (type)\", \"def (other)\". I suppose inductive can also be separated into (prop) and (type) classes. Everything else should go in an \"other\" category. More precisely:</p>\n<ul>\n<li>theorems</li>\n<li>defs (prop)</li>\n<li>defs (type)</li>\n<li>defs (other)</li>\n<li>inductives (prop)</li>\n<li>inductives (type)</li>\n<li>structures (prop)</li>\n<li>structures (type)</li>\n<li>other</li>\n</ul>\n<p>I'm not sure I fully understand how your categorization works, but I think it predicates and props are both binned as \"prop\" in my categorization, and on the other hand the \"Data\", \"Types\", \"Predicates\" categories for non-definitions (which are almost certainly structures) are categorized into inductive and structure categories in my categorization.</p>",
        "id": 439669584,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716235089
    },
    {
        "content": "<p>The actual decision tree for the categories:</p>\n<ul>\n<li><code>thmDecl</code></li>\n<li><code>defnDecl</code><ul>\n<li>forallTelescope -&gt; is Sort? is Prop?</li>\n</ul>\n</li>\n<li><code>inductiveDecl</code><ul>\n<li><code>isStructure</code></li>\n<li>forallTelescope -&gt; is Sort? is Prop?</li>\n</ul>\n</li>\n<li>other</li>\n</ul>",
        "id": 439670789,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716235547
    },
    {
        "content": "<p>Mario, thanks for the detailed description: this is indeed quite different from what I had guessed!  I'll try to implement it, though I'm not sure that I'll have time tomorrow.</p>\n<p>Also, I will have to see how to get a <code>Declaration</code> out of a <code>ConstantInfo</code>: I am not sure that I ever worked with a <code>Declaration</code>...</p>",
        "id": 439675219,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716237334
    },
    {
        "content": "<p>you don't need to get a declaration from a constantinfo</p>",
        "id": 439676621,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716237877
    },
    {
        "content": "<p>and you can't anyway, <code>Declaration</code> is the input to the kernel, <code>ConstantInfo</code> is the output</p>",
        "id": 439676654,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716237894
    },
    {
        "content": "<p>Ok, so is it good enough if I replace <code>Decl</code> with <code>Info</code> in your decision tree?</p>",
        "id": 439676757,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716237938
    },
    {
        "content": "<p>oh, yeah I just forgot the names of the constructors</p>",
        "id": 439677120,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716238086
    },
    {
        "content": "<p>I may end up producing it as an additional report, so that both get printed: the coarser one above and then the more refined information.</p>",
        "id": 439677769,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716238327
    },
    {
        "content": "<p>The bot could also \"randomize\" which report to post each week.</p>",
        "id": 439677814,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716238345
    },
    {
        "content": "<p>Anyway, the first step is to get the setup working.  More statistics can come later.</p>",
        "id": 439677964,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716238413
    },
    {
        "content": "<p>you could also hide the more refined information behind a spoiler tag. But I think it's okay even if this report is a full page, people can still mute the thread if they don't want to hear it</p>",
        "id": 439678102,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716238453
    },
    {
        "content": "<p>if your concern is that the more aggregate statistics are missing you can throw those in too, making it a more hierarchical breakdown</p>",
        "id": 439678192,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716238488
    },
    {
        "content": "<p>(<a href=\"https://github.com/leanprover-community/mathlib4/blob/24bf571bfba40dc5892a6b6b5f25567677a23c5d/scripts/mathlib_stats.sh#L13-L31\">Here</a> are the suggestions that came up in this post.)</p>",
        "id": 439678227,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716238500
    },
    {
        "content": "<p>Well, I think that which statistics are useful will probably change with time and it is very easy to change anyway, so I am not too concerned.</p>",
        "id": 439678366,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716238559
    },
    {
        "content": "<p>I'd rather have as many stats up front as possible so that we get nice long time series information from the beginning of the report</p>",
        "id": 439678477,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716238591
    },
    {
        "content": "<p>I think that having a regular report is useful and interesting, so at the moment I would like it to happen more than what I actually pushing for anything in particular to be displayed at the beginning.</p>",
        "id": 439678594,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716238630
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib.20weekly.20change.20report/near/439678477\">said</a>:</p>\n<blockquote>\n<p>I'd rather have as many stats up front as possible so that we get nice long time series information from the beginning of the report</p>\n</blockquote>\n<p>Oh, I had not thought of the \"historical value\" of this.</p>",
        "id": 439678644,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716238651
    },
    {
        "content": "<p>I can add more statistics, I was simply worried that people would find a long report not too useful, because of the amount of info that it contained.</p>",
        "id": 439678762,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716238687
    },
    {
        "content": "<p>(I still think that the PR as is already has a lot of fluff related to setting up the cron job and a little of the infrastructure and it would probably not simplify review if I made it longer still.)</p>",
        "id": 439678907,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716238746
    },
    {
        "content": "<p>I was wondering about commenting on the PR \"why not write this in lean\"</p>",
        "id": 439678974,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716238772
    },
    {
        "content": "<p>Write what in lean?  The CI workflow?</p>",
        "id": 439679084,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716238806
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib.20weekly.20change.20report/near/439678644\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib.20weekly.20change.20report/near/439678477\">said</a>:</p>\n<blockquote>\n<p>I'd rather have as many stats up front as possible so that we get nice long time series information from the beginning of the report</p>\n</blockquote>\n<p>Oh, I had not thought of the \"historical value\" of this.</p>\n</blockquote>\n<p>I think we should aim to have historical data elsewhere, like we do with mathlib stats; zulip isn't a great platform for structured time -series data.</p>",
        "id": 439680207,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716239243
    },
    {
        "content": "<p>On that note, it would be great to write this script in a way that uses as few Lean features as possible, so that we can run it on old commits without issue</p>",
        "id": 439680342,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716239285
    },
    {
        "content": "<p>(which is perhaps an argument for the script living outside of mathlib, so that it can easily be versioned separately)</p>",
        "id": 439680409,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716239317
    },
    {
        "content": "<p>I don't think we need to worry about moving the script elsewhere for now</p>",
        "id": 439680692,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716239424
    },
    {
        "content": "<hr>\n<h2>Weekly stats (<a href=\"https://github.com/leanprover-community/mathlib4/compare/4072ed9348f54aa781f3eea78b24fcb39e78a285...36a9da67e9f7d861837f652aba6820e33328a0df\">2024-05-23...2024-05-29</a>)</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: center;\">Type</th>\n<th style=\"text-align: center;\">Total</th>\n<th style=\"text-align: center;\">%</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center;\">Theorems</td>\n<td style=\"text-align: center;\">169,367 (+989 -103)</td>\n<td style=\"text-align: center;\">0.52%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Data</td>\n<td style=\"text-align: center;\">60,653 (+269 -56)</td>\n<td style=\"text-align: center;\">0.35%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Predicates</td>\n<td style=\"text-align: center;\">4,182 (+18 -0)</td>\n<td style=\"text-align: center;\">0.43%</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">Types</td>\n<td style=\"text-align: center;\">3,363 (+12 -3)</td>\n<td style=\"text-align: center;\">0.27%</td>\n</tr>\n</tbody>\n</table>\n<p>2197 files changed (+38 -2 ~2141), 7435 lines changed (+26022 -18587)</p>\n<p>Reference commits: old <a href=\"https://github.com/leanprover-community/mathlib4/commit/4072ed9348f54aa781f3eea78b24fcb39e78a285\">4072ed9348</a>, new <a href=\"https://github.com/leanprover-community/mathlib4/commit/36a9da67e9f7d861837f652aba6820e33328a0df\">36a9da67e9</a>.</p>\n<p>Take also a look at the <a href=\"https://leanprover-community.github.io/mathlib_stats.html\"><code>Mathlib</code> stats page</a>.</p>",
        "id": 441339399,
        "sender_full_name": "github mathlib4 bot",
        "timestamp": 1717025165
    },
    {
        "content": "<p>Oh, has the PR been merged?  Does the cron job run from a non-merged PR?</p>",
        "id": 441343007,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1717026481
    },
    {
        "content": "<p>Could the bot tell us how many PRs were merged?</p>",
        "id": 441373310,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1717041837
    },
    {
        "content": "<p>I can do that.  I was also planning to get the statistics that Mario wanted.  I was not expecting a post though: I suspect that this post has been set off by... <span class=\"user-mention\" data-user-id=\"634338\">@Michael Rothgang</span> ?  (Sorry for flagging you!)</p>",
        "id": 441374214,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1717042442
    },
    {
        "content": "<p>(the cron job is set for Sunday, I believe, and I think that it should not run on PRs anyway)</p>",
        "id": 441374283,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1717042480
    },
    {
        "content": "<p>Oh I'm noticing that it doesn't show the total number of files. I think that's a cool statistic.</p>",
        "id": 441384626,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717047579
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Mathlib.20weekly.20change.20report/near/441374214\">said</a>:</p>\n<blockquote>\n<p>I can do that.  I was also planning to get the statistics that Mario wanted.  I was not expecting a post though: I suspect that this post has been set off by... <span class=\"user-mention silent\" data-user-id=\"634338\">Michael Rothgang</span> ?  (Sorry for flagging you!)</p>\n</blockquote>\n<p>Yes, that was me. Oh no, did I set off the bot? Sorry for that.</p>",
        "id": 441395322,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717052619
    },
    {
        "content": "<p>(This happened in <a href=\"https://github.com/leanprover-community/mathlib4/pull/13359\">#13359</a>, where I tried to use the \"re-run a workflow using a label\" trick. I copy-pasted the example you mentioned, but forgot to my local change of that workflow at first.)</p>",
        "id": 441395464,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1717052673
    },
    {
        "content": "<p>Maybe also adding some sort of EWMA would be interesting to see for those who only see these numbers occasionally and wonder whether a particular week is abnormal or not</p>",
        "id": 441896494,
        "sender_full_name": "Julian Berman",
        "timestamp": 1717243426
    }
]