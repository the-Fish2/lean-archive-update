[
    {
        "content": "<p>I wonder about the order in which some linters are executed when mathlib is built in branches. For example, after a 30 min long compilation (on github), I get the following  error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Run</span> <span class=\"bp\">!</span> <span class=\"n\">grep</span> <span class=\"c1\">--after-context=1 \"stdout:\" stdout.log</span>\n<span class=\"n\">stdout</span><span class=\"o\">:</span>\n<span class=\"bp\">./././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">Unitization.lean</span><span class=\"o\">:</span><span class=\"mi\">739</span><span class=\"o\">:</span><span class=\"mi\">4</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"bp\">`</span><span class=\"n\">Function.comp.left_id</span><span class=\"bp\">`</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">deprecated</span><span class=\"o\">,</span> <span class=\"n\">use</span> <span class=\"bp\">`</span><span class=\"n\">Function.id_comp</span><span class=\"bp\">`</span> <span class=\"n\">instead</span>\n</code></pre></div>\n<p>and I feel it is a waste of computation to have this checked only after <code>mathlib</code> has been compiled in full.</p>",
        "id": 420793338,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707565223
    },
    {
        "content": "<p>that error message would have stopped the build if we had warning-as-error enabled</p>",
        "id": 420794854,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707566707
    },
    {
        "content": "<p>I think we actually want log-as-error in mathlib, because noisy files are not allowed so there is no point in building more oleans based on a noisy file since it can't be merged anyway</p>",
        "id": 420794903,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707566762
    },
    {
        "content": "<p>I don't think there is a way to get lake to do this though, unless we added a shim over the <code>lean</code> called by lake</p>",
        "id": 420795014,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707566852
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/linter/near/420794903\">said</a>:</p>\n<blockquote>\n<p>I think we actually want log-as-error in mathlib, because noisy files are not allowed so there is no point in building more oleans based on a noisy file since it can't be merged anyway</p>\n</blockquote>\n<p>I don't agree with this; if I'm trying to work out if a refactor works, I want to find out about as much fallout as possible before having to think about linter complaints.</p>",
        "id": 420795577,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707567381
    },
    {
        "content": "<p>Of course, maybe those PRs should just adjust the flags if they want that behavior, but I think it is worth documenting that approach before we change the default behavior.</p>",
        "id": 420795599,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707567415
    },
    {
        "content": "<p>Yeah, I almost never want warnings as errors while I'm working on something, because that limits how many issues I can fix per ci run, especially since those have quite a bit of overhead</p>",
        "id": 420796801,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707568630
    },
    {
        "content": "<p>I understand. Is there a place where the settings are documented and where I could guess how to change them if I wish to?</p>",
        "id": 420797086,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707568939
    }
]