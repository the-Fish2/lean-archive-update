[
    {
        "content": "<p>Do we want (an appropriate generalization of) this lemma (and its symmetric versions)?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">sumType_zeroFun_dotProduct</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Fintype</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n    <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g'</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">Sum.elim</span> <span class=\"n\">f</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"o\">(</span><span class=\"n\">Sum.elim</span> <span class=\"n\">g</span> <span class=\"n\">g'</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Matrix.sum_elim_dotProduct_sum_elim</span><span class=\"o\">,</span> <span class=\"n\">zero_dotProduct</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 420630276,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1707476940
    },
    {
        "content": "<p>I think if we wanted it it would be called <code>sum_elim_zero_right_dotProduct_sum_elim</code></p>",
        "id": 420646935,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707483285
    },
    {
        "content": "<p>Sure, the current code is horrible. But do we want them at all? If yes, I'll write a good code for them.</p>",
        "id": 420647059,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1707483340
    },
    {
        "content": "<p>I think probably we don't want the four versions of that lemma</p>",
        "id": 420647080,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707483353
    },
    {
        "content": "<p>And two?</p>",
        "id": 420647239,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1707483419
    },
    {
        "content": "<p>We don't have the 64 lemmas for the special cases of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Matrix.fromBlocks_multiply#doc\">docs#Matrix.fromBlocks_multiply</a> (misnamed!) with a zero at each position</p>",
        "id": 420647245,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707483422
    },
    {
        "content": "<p>But do we have automation for the lack of them?</p>",
        "id": 420647460,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1707483499
    },
    {
        "content": "<p>Sure, <code>simp [sumElim_dotProduct_sumElim]</code></p>",
        "id": 420647558,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707483535
    },
    {
        "content": "<p>For future readers:<br>\n<code>simp [Matrix.sum_elim_dotProduct_sum_elim]</code><br>\nOr simply <code>simp</code> also works.</p>",
        "id": 420647870,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1707483642
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 420647911,
        "sender_full_name": "Notification Bot",
        "timestamp": 1707483657
    }
]