[
    {
        "content": "<p>The statement of ExistsUnique.unique (in Mathlib.Init.Logic) is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">ExistsUnique.unique</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃!</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">y₁</span> <span class=\"n\">y₂</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">py₁</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"n\">y₁</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">py₂</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"n\">y₂</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">y₁</span> <span class=\"bp\">=</span> <span class=\"n\">y₂</span>\n</code></pre></div>\n<p>Wouldn't it be better to use <code>{{y₁ y₂ : α}}</code> rather than <code>{y₁ y₂ : α}</code>?  At the moment, the following example produces a \"don't know how to synthesize implicit argument\" error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃!</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">True</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:=</span> <span class=\"n\">ExistsUnique.unique</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>With <code>{{y₁ y₂ : α}}</code>, there would be no error.</p>",
        "id": 411800562,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1704741095
    },
    {
        "content": "<p>Is there a lemma with implicit arguments your argument does <strong>not</strong> apply to?</p>",
        "id": 411801101,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1704741354
    },
    {
        "content": "<p>Perhaps not.  I guess I was just thinking of <code>ExistsUnique.unique</code> as a way of extracting the uniqueness half from a statement that starts with <code>∃!</code>.  But it doesn't work that way--it lets you <em>use</em> the uniqueness half, but it doesn't let you extract the uniqueness half as a new hypothesis.</p>",
        "id": 411802566,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1704742030
    },
    {
        "content": "<p>Probably not important.</p>",
        "id": 411802765,
        "sender_full_name": "Dan Velleman",
        "timestamp": 1704742120
    }
]