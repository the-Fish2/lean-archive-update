[
    {
        "content": "<p>The following gives me a <code>no goals</code> error on the french brackets </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Normed.Field.Basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">[</span><span class=\"n\">NonUnitalRing</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NonUnitalSeminormedRing</span> <span class=\"n\">S</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">NonUnitalRingHomClass</span> <span class=\"n\">F</span> <span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">NonUnitalSeminormedRing</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"o\">‹</span><span class=\"n\">NonUnitalRing</span> <span class=\"n\">R</span><span class=\"o\">›,</span> <span class=\"n\">SeminormedAddCommGroup.induced</span> <span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"n\">f</span> <span class=\"k\">with</span>\n    <span class=\"n\">norm_mul</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n      <span class=\"k\">show</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"bp\">‖</span> <span class=\"bp\">*</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"bp\">‖</span>\n      <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">map_mul</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">norm_mul_le</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>has this kind of behavior been seen before?</p>",
        "id": 419946936,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1707175612
    },
    {
        "content": "<p>Does <code>Mathlib.Normed</code> exist?</p>",
        "id": 420026002,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707218616
    },
    {
        "content": "<p>This works fine on mathlib master:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Analysis.Normed.Field.Basic</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">autoImplicit</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">[</span><span class=\"n\">NonUnitalRing</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">NonUnitalSeminormedRing</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">FunLike</span> <span class=\"n\">F</span> <span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">NonUnitalRingHomClass</span> <span class=\"n\">F</span> <span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">NonUnitalSeminormedRing</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"o\">‹</span><span class=\"n\">NonUnitalRing</span> <span class=\"n\">R</span><span class=\"o\">›,</span> <span class=\"n\">SeminormedAddCommGroup.induced</span> <span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"n\">f</span> <span class=\"k\">with</span>\n    <span class=\"n\">norm_mul</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=&gt;</span> <span class=\"kd\">by</span>\n      <span class=\"k\">show</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">‖</span> <span class=\"bp\">≤</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"bp\">‖</span> <span class=\"bp\">*</span> <span class=\"bp\">‖</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"bp\">‖</span>\n      <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">map_mul</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">norm_mul_le</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 420032858,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1707221244
    },
    {
        "content": "<p>I can confirm it didn't work and now it works on mathlib master -- <span class=\"user-mention\" data-user-id=\"306577\">@Matthew Ballard</span> I suspect the difference is <a href=\"https://github.com/leanprover/lean4/pull/2478\">lean4#2478</a>?</p>",
        "id": 420108895,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1707244130
    },
    {
        "content": "<p>It might have been working with an old toolchain…</p>",
        "id": 420109729,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1707244396
    },
    {
        "content": "<p>I thought it didn’t work on anything</p>",
        "id": 420109822,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1707244429
    },
    {
        "content": "<p>Huh, must have been on the wrong toolchain when I thought I was testing current master</p>",
        "id": 420112526,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1707245308
    },
    {
        "content": "<p>By the way, what \"no goals\" means for french brackets is that unification solved for this metavariable. It's because it's defined by</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">macro_rules</span> <span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(‹</span><span class=\"bp\">$</span><span class=\"n\">type</span><span class=\"o\">›)</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">`</span><span class=\"o\">((</span><span class=\"kd\">by</span> <span class=\"n\">assumption</span> <span class=\"o\">:</span> <span class=\"bp\">$</span><span class=\"n\">type</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>and \"no goals\" is what a tactic like <code>assumption</code> reports if there's no main goal.</p>\n<p>I've seen the error for plain <code>by</code> notation too. I feel like this should probably not happen, since I thought <code>by</code> was supposed to set up a synthetic opaque metavariable, which can't be solved for by unification by default.</p>",
        "id": 420112664,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1707245353
    }
]