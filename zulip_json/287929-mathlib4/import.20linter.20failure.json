[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13960\">#13960</a> is failing the unused imports linter, which is flagging a redundant import that isn't actually redundant. The file is importing <code>Data.Set.Subset</code> in order to use the down-arrow notation for coercion preimage of sets. But (probably because I'm not using any theorems from that file) it's being flagged as a warning - see <br>\n<a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9586738790/job/26435306567?pr=13960\">https://github.com/leanprover-community/mathlib4/actions/runs/9586738790/job/26435306567?pr=13960</a></p>",
        "id": 445679679,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1718823342
    },
    {
        "content": "<p>So, then \"<code>lake exe shake --update</code> to ignore\" is the way to go!</p>",
        "id": 445680389,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718823602
    },
    {
        "content": "<p>I can do that, but shouldn't the linter be fixed so this doesn't happen?</p>",
        "id": 445681926,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1718824087
    },
    {
        "content": "<p>It's really quite hard to improve the linter here</p>",
        "id": 445688608,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1718826167
    },
    {
        "content": "<p>So much that it isn’t worth doing?</p>",
        "id": 445719330,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1718839194
    },
    {
        "content": "<p>I've just encountered this problem again with a different PR that imports <code>Data.Set.Subset</code> for the notation. I suspect that a good number of imports of this file will have the same issue. By the time the linter makes the suggestion, it adds up to an hour or so of extra waiting to sort out the PR. </p>\n<p>Would it be possible for the <code>lake exe shake</code> to include global exceptions for usual suspects like <code>Data.Set.Subset</code>? Could it in some cases try building with the suggested change to see if things break before issuing the suggestion? I don't know how technically feasible this last suggestion is.</p>",
        "id": 447475491,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1719494166
    },
    {
        "content": "<p>I think there's a part of noshake.json for that, yeah</p>",
        "id": 447475968,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1719494315
    },
    {
        "content": "<p>Did I do this right? <a href=\"https://github.com/leanprover-community/mathlib4/pull/14196\">#14196</a></p>",
        "id": 447477223,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1719494690
    },
    {
        "content": "<p>I think so</p>",
        "id": 447487906,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1719497098
    }
]