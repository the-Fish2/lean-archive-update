[
    {
        "content": "<p>Working in the web editor, I get an error on the following simple goal:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">â„š</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">polyrith</span> <span class=\"c1\">-- polyrith did not find any relevant hypotheses and the goal is not provable by ring</span>\n</code></pre></div>\n<p>Is there something wrong going on here?</p>",
        "id": 437559193,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1715132068
    },
    {
        "content": "<p>It succeeds if you undo <del>#12258.</del></p>",
        "id": 437560208,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715132886
    },
    {
        "content": "<p>Really? How did you discover that? I don't see anything <code>polyrith</code> relevant there.</p>",
        "id": 437560357,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715133010
    },
    {
        "content": "<p>Sorry! <a href=\"https://github.com/leanprover-community/mathlib4/pull/12285\">#12285</a>, the last change to Polyrith.lean</p>",
        "id": 437560411,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715133060
    },
    {
        "content": "<p>As a workaround, you can say <code>polyrith only</code> when you mean <code>polyrith</code>, and vice versa.<br>\n<span class=\"user-mention\" data-user-id=\"452637\">@Cedric Holle</span>, could you have a look?</p>",
        "id": 437603138,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715157045
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12754\">#12754</a></p>",
        "id": 437620509,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1715163635
    },
    {
        "content": "<p>Oh, didn't expect that. Added/uncommented some test: <a href=\"https://github.com/leanprover-community/mathlib4/pull/12756\">https://github.com/leanprover-community/mathlib4/pull/12756</a>.<br>\nAll the tests from Lean 3 just got copied and commented. This should be changed. I have currently not enough time to do that. I would have more time in ~two months.</p>",
        "id": 437645858,
        "sender_full_name": "Cedric Holle",
        "timestamp": 1715173285
    },
    {
        "content": "<p>They look like Lean 4 (<code>by</code>, not <code>begin</code>/<code>end</code>), but they're mostly commented out for the reasons in the comments: to avoid overwhelming the sagecell server.</p>",
        "id": 437646264,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715173403
    },
    {
        "content": "<p>It might be ok to uncomment a small number of tests, but it should be considered.</p>",
        "id": 437646563,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715173489
    },
    {
        "content": "<p>There are some <code>meta def</code> and <code>setup_tactic_parser</code>, ... uncommented. The changes to <code>by</code> are probably made by a bot.</p>",
        "id": 437647728,
        "sender_full_name": "Cedric Holle",
        "timestamp": 1715173867
    },
    {
        "content": "<p>Oh, thanks.</p>",
        "id": 437647986,
        "sender_full_name": "Richard Copley",
        "timestamp": 1715173944
    }
]