[
    {
        "content": "<p>For <a href=\"https://github.com/leanprover-community/mathlib4/pull/9940\">#9940</a>, which is almost ready, how should we name the following definition?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/--</span>\n<span class=\"sd\">Given two sets `A` and `B`, `setRestrict A B` is the set of `↑A` formed by the elements</span>\n<span class=\"sd\">whose value is in `B`.</span>\n<span class=\"sd\">-/</span>\n<span class=\"kn\">open</span> <span class=\"n\">Set</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Subset</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">setRestrict</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"bp\">↑</span><span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">)</span> <span class=\"bp\">⁻¹'</span> <span class=\"n\">B</span>\n</code></pre></div>",
        "id": 419128345,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1706737410
    },
    {
        "content": "<p><a href=\"#narrow/stream/287929-mathlib4/topic/Help.20name.20this.20def/near/419128345\">A message</a> was moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/Should.20Sets.20be.20coerced.3F\">#mathlib4 &gt; Should Sets be coerced?</a> by <span class=\"user-mention silent\" data-user-id=\"416472\">Winston Yin (尹維晨)</span>.</p>",
        "id": 419128482,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706737463
    },
    {
        "content": "<p>For reference, the most similar existing definition is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Subgroup.subgroupOf#doc\">docs#Subgroup.subgroupOf</a></p>",
        "id": 419128795,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706737607
    },
    {
        "content": "<p>I think we can have <code>Set.restrictSet</code>, so as to suggest a specialisation of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.restrict#doc\">docs#Set.restrict</a> to <code>Set</code>. Other options are <code>Set.restrictTo</code> or <code>Set.setOf</code>, but the latter risks confusion with set builder lemmas.</p>",
        "id": 419128911,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1706737678
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"461731\">@Miguel Marco</span></p>",
        "id": 419128996,
        "sender_full_name": "Winston Yin (尹維晨)",
        "timestamp": 1706737706
    },
    {
        "content": "<p>I don't think the connection with <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.restrict#doc\">docs#Set.restrict</a> is one we want to emphasize, just as we don't try to emphasize that <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Set.preimage#doc\">docs#Set.preimage</a> is a \"specialization\" of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Function.comp#doc\">docs#Function.comp</a> ! The fact that sets are functions should be considered an implementation detail</p>",
        "id": 419129800,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706738046
    },
    {
        "content": "<p>In that case I think the restriction wording is perfectly fine independently of the implementation detail though. Anything that corresponds to some pullback along an inclusion can reasonably be called a restriction imo</p>",
        "id": 419137449,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1706741271
    },
    {
        "content": "<p>If we use <code>Set.restrictSet</code>(which I agree is ok), then we should probably rename <code>Subgroup.subgroupOf</code> to <code>Subgroup.restrictSubgroup</code></p>",
        "id": 419138384,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1706741664
    }
]