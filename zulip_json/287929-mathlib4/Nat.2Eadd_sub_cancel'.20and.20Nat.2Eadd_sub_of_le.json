[
    {
        "content": "<p>These two theorems seem to be identical. I noticed that <code>__root__.add_sub_cancel'</code> was deprecated, so I'm assuming <code>Nat.add_sub_cancel'</code> should be deprecated as well?</p>",
        "id": 438476487,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1715647520
    },
    {
        "content": "<p>Ok, looking at <a href=\"https://github.com/leanprover-community/mathlib4/pull/11530\">#11530</a>, it seems as the <code>Nat</code> version of these lemmas don't always agree with the <code>Group</code> versions. <code>Nat.add_sub_cancel</code> should be <code>add_sub_cancel_right</code>?</p>",
        "id": 438477212,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1715648021
    },
    {
        "content": "<p>There's much more to it, eg all the <code>tsub</code> lemmas. I'm planning on fixing all of this, but juggling the three different repos across which the lemmas are spread is exceeding my pre-exams capacity.</p>",
        "id": 438509681,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715668574
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> can tell us whether renames to align with mathlib naming conventions are welcome to Core/Std.</p>",
        "id": 438509834,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715668652
    },
    {
        "content": "<p>Yes, I'm happy to merge renaming PRs within the Nat/Int/List/Array namespaces, as long as there's no bikeshedding in sight and obviously following the conventions as written. :-)</p>",
        "id": 438513971,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715670728
    },
    {
        "content": "<p><code>alias</code> is not available in Lean, so deprecations are usually best done as <code>abbrev X := @Y</code>.</p>",
        "id": 438514039,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715670765
    },
    {
        "content": "<p>Ah, I totally missed that these were in Core. I can look into submitting a PR for all the lemmas that don't include <code>m ≤ n</code> hypotheses. Is there a consensus on what the names should be for the lemmas which require <code>m ≤ n</code>? <code>Nat.sub_add_cancel</code> doesn't mention the additional hypothesis whereas <code>Nat.add_sub_of_le</code> and <code>add_tsub_cancel_of_le</code> do mention it.</p>",
        "id": 438565269,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1715689722
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Nat.2Eadd_sub_cancel'.20and.20Nat.2Eadd_sub_of_le/near/438514039\">said</a>:</p>\n<blockquote>\n<p><code>alias</code> is not available in Lean, so deprecations are usually best done as <code>abbrev X := @Y</code>.</p>\n</blockquote>\n<p>Can we do something about this? I know that it was skipped during the initial upstreaming due to the iff-handling part, but it is easily possible to just skip that part and only upstream the main command. I think there are many many uses of <code>alias</code> and <code>@[deprecated] alias</code> in lean core and making it easier to deprecate will help core to do it more rather than cold-turkey renames</p>",
        "id": 438881549,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715805550
    },
    {
        "content": "<p>This got stuck on the objection that there are too many ways to say the same thing, and we don't want both <code>alias</code> and <code>abbrev</code>, without a clear story to users about when to use each.</p>",
        "id": 438902532,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715815675
    }
]