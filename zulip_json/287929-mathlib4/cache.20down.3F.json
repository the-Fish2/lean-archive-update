[
    {
        "content": "<p>I'm seeing no cache available on mathlib master at the moment. Anyone else?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">%</span> <span class=\"n\">git</span> <span class=\"n\">describe</span>\n<span class=\"n\">v2024</span><span class=\"bp\">-</span><span class=\"mi\">405</span><span class=\"bp\">-</span><span class=\"n\">ge808ef0e67</span>\n<span class=\"bp\">%</span> <span class=\"n\">lake</span> <span class=\"n\">exe</span> <span class=\"n\">cache</span> <span class=\"n\">get</span>\n<span class=\"n\">Attempting</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"mi\">4149</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">Downloaded</span><span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"n\">file</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">attempted</span> <span class=\"mi\">4149</span><span class=\"bp\">/</span><span class=\"mi\">4149</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span><span class=\"bp\">%</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"bp\">%</span> <span class=\"n\">success</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 417370017,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1705985019
    },
    {
        "content": "<p>Same here</p>",
        "id": 417379296,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705991247
    },
    {
        "content": "<p>It looks like uploads fail, not downloads: cache works for 69a8f62cf1</p>",
        "id": 417379442,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705991348
    },
    {
        "content": "<p>99315bf71cec8eb94c2cc14e8198a032a7d9b12c <a href=\"https://github.com/leanprover-community/mathlib4/pull/9725\">#9725</a> is the first commit w/o a cache</p>",
        "id": 417379838,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705991610
    },
    {
        "content": "<p>Nothing suspicious in the log but I'm not sure that \"Attempting to upload N file(s)\" reports an error if it happens.</p>",
        "id": 417379949,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1705991679
    },
    {
        "content": "<p>I note that GitHub is rolling out a new behaviour for CI – it now always shows you the last 1000 lines of log. And the build times for our repository are now <strong>even slower than before</strong> – building counterexamples used to take less than a minute, now it takes 3+ minutes</p>",
        "id": 417380446,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1705992027
    },
    {
        "content": "<p>The reason we don't seem to notice this is that currently the \"check the cache\" steps are toothless - the files are already in place so they're not redownloaded in  CI to make sure stuff is working properly. I will push a fix for this.</p>",
        "id": 417430007,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706011060
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/9933\">#9933</a>, I expect the run to fail</p>",
        "id": 417431095,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706011391
    },
    {
        "content": "<p>It looks to me like maybe the upload curl command does not check the HTTP status code of the response. <a href=\"https://github.com/leanprover-community/mathlib4/blob/2475f305cecbfdf1fb57959e0634db06563c985a/Cache/Requests.lean#L206-L208\">https://github.com/leanprover-community/mathlib4/blob/2475f305cecbfdf1fb57959e0634db06563c985a/Cache/Requests.lean#L206-L208</a></p>",
        "id": 417439262,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706014358
    },
    {
        "content": "<p>The <code>--fail-with-body</code> flag might help: <a href=\"https://curl.se/docs/manpage.html#--fail-with-body\">https://curl.se/docs/manpage.html#--fail-with-body</a></p>",
        "id": 417439416,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706014430
    },
    {
        "content": "<p>(Lean's static curl is new enough to support that flag: <a href=\"https://github.com/leanprover-community/static-curl/releases/tag/v7.88.1\">https://github.com/leanprover-community/static-curl/releases/tag/v7.88.1</a> )</p>",
        "id": 417439731,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706014546
    },
    {
        "content": "<p>My hypothesis is that the upload is returning a 4XX or 5XX HTTP response code (maybe Bad Request because it's too big somehow, or maybe something auth-related), and then we don't get to see what the error is because we ignore stderr (we set <code>stderrAsErr := false</code> : <a href=\"https://github.com/leanprover-community/mathlib4/blob/2475f305cecbfdf1fb57959e0634db06563c985a/Cache/IO.lean#L159-L165\">https://github.com/leanprover-community/mathlib4/blob/2475f305cecbfdf1fb57959e0634db06563c985a/Cache/IO.lean#L159-L165</a></p>",
        "id": 417441306,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706015074
    },
    {
        "content": "<p>David, could you make a patch to the CI that runs this and outputs the error code in order to see what the issue is? One thing I do worry about is that it may accidentaly leak the secrets if this is done</p>",
        "id": 417442008,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706015315
    },
    {
        "content": "<p>I submitted <a href=\"https://github.com/leanprover-community/mathlib4/pull/9934\">#9934</a> to try <code>--fail-with-body</code>, but looks like that CI run isn't going to be so informative, because the machine seems to already have the cache locally.</p>",
        "id": 417442355,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706015450
    },
    {
        "content": "<p>Maybe I should make a trivial change inside of mathlib, so that it needs to upload something</p>",
        "id": 417442391,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706015466
    },
    {
        "content": "<blockquote>\n<p>One thing I do worry about is that it may accidentaly leak the secrets if this is done</p>\n</blockquote>\n<p>Makes me want a Lean binding to libcurl, so that we would have tighter control.</p>",
        "id": 417442501,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706015515
    },
    {
        "content": "<p>For fast CI running, you could in theory just clear most of Mathlib I think?</p>",
        "id": 417442892,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1706015636
    },
    {
        "content": "<p>Aha, we got ~4000 lines of</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">curl</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">22</span><span class=\"o\">)</span> <span class=\"n\">The</span> <span class=\"n\">requested</span> <span class=\"n\">URL</span> <span class=\"n\">returned</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"mi\">403</span>\n</code></pre></div>",
        "id": 417445512,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706016529
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7626176854/job/20772003823\">https://github.com/leanprover-community/mathlib4/actions/runs/7626176854/job/20772003823</a></p>",
        "id": 417445558,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706016546
    },
    {
        "content": "<p>403 means authorization failure (\"forbidden\").</p>",
        "id": 417446410,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706016846
    },
    {
        "content": "<p>I wonder if we need to refresh <code>secrets.MATHLIB_CACHE_SAS</code>. I don't know how that stuff is set up.</p>",
        "id": 417446460,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706016867
    },
    {
        "content": "<p>In the meantime, 5a0540a5b1 is the last revision with cache.</p>",
        "id": 417459889,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1706020832
    },
    {
        "content": "<p>Does the FRO cache also have a secrets problem?</p>",
        "id": 417497242,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1706031826
    },
    {
        "content": "<p>It looks to me like the FRO/R2 code puts the secret token in a command-line argument, which potentially gets printed on error.</p>",
        "id": 417498045,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706032130
    },
    {
        "content": "<p>The Azure codepath (currently active) puts the token in a config file, which does not get printed.</p>",
        "id": 417498115,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706032159
    },
    {
        "content": "<p>Does the FRO code path error?</p>",
        "id": 417498271,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1706032211
    },
    {
        "content": "<p>If the <code>curl</code> subprocess exits with a non-zero code (and we should assume that can happen), then it prints out the args: <a href=\"https://github.com/leanprover-community/mathlib4/blob/e53e613abdea8d5b8863cbfb93014b9493e719d1/Cache/IO.lean#L161-L162\">https://github.com/leanprover-community/mathlib4/blob/e53e613abdea8d5b8863cbfb93014b9493e719d1/Cache/IO.lean#L161-L162</a></p>",
        "id": 417498585,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706032327
    },
    {
        "content": "<p>It's possible that Github actions has some smart logic that will redact the token from logs, but I wouldn't count on it.</p>",
        "id": 417498723,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706032386
    },
    {
        "content": "<p>I'm also a bit confused about why the Cloudflare R2 code path is being referred to as the \"FRO\" path (e.g. the <code>useFROCache</code> variable name). My understanding is that the FRO is footing the bill under both configurations?</p>",
        "id": 417499314,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706032599
    },
    {
        "content": "<p>I've added a new <code>MATHLIB_CACHE_SAS</code>. If someone who is using CI could report whether uploads work now that would be helpful</p>",
        "id": 417502768,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706033878
    },
    {
        "content": "<p>I rebased <a href=\"https://github.com/leanprover-community/mathlib4/pull/9934\">#9934</a>, triggering a job.</p>",
        "id": 417503207,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706034065
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7629919600/job/20784442819#step:17:1\">This</a> seems to work</p>",
        "id": 417503610,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1706034240
    },
    {
        "content": "<p>on <a href=\"https://github.com/leanprover-community/mathlib4/pull/9939\">#9939</a> (based on an older commit) we get</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">curl</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">22</span><span class=\"o\">)</span> <span class=\"n\">The</span> <span class=\"n\">requested</span> <span class=\"n\">URL</span> <span class=\"n\">returned</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"mi\">409</span>\n</code></pre></div>",
        "id": 417505297,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706034831
    },
    {
        "content": "<p>maybe that's the expected error for cache files that have already been uploaded?</p>",
        "id": 417505514,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706034895
    },
    {
        "content": "<p>seems likely</p>",
        "id": 417507901,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706035672
    },
    {
        "content": "<p>I think there are ways to make curl treat specific http response codes as a success</p>",
        "id": 417508021,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706035707
    },
    {
        "content": "<p>I got the HTTP 409 error also on <a href=\"https://github.com/leanprover-community/mathlib4/pull/9934\">#9934</a>, -- but less than 1000 instances of it.</p>",
        "id": 417513745,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706037923
    },
    {
        "content": "<p>And then when I do <code>lake exe cache get</code> locally for that branch, it succeeds.</p>",
        "id": 417513792,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706037944
    },
    {
        "content": "<p>So I think this confirms</p>\n<ol>\n<li>Mario's token update fixed things</li>\n<li>the 409 response indicates cache files that have already been uploaded (typically  from other commits)</li>\n</ol>",
        "id": 417513950,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706038007
    },
    {
        "content": "<p>I suppose we'll really see whether things are fixed once the next commit lands on master</p>",
        "id": 417514046,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706038048
    },
    {
        "content": "<p>actually, cache for the latest master commit seems to be working now too. <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 417515482,
        "sender_full_name": "David Renshaw",
        "timestamp": 1706038647
    },
    {
        "content": "<p>Yes, but why are tests still taking 3+ minutes rather than about 1?<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7631758536/job/20790451359#step:22:8\">https://github.com/leanprover-community/mathlib4/actions/runs/7631758536/job/20790451359#step:22:8</a></p>",
        "id": 417547250,
        "sender_full_name": "Jeremy Tan",
        "timestamp": 1706052433
    },
    {
        "content": "<p>this has nothing to do with cache</p>",
        "id": 417548089,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706052909
    },
    {
        "content": "<p>you may need to bisect to find when this happened</p>",
        "id": 417548148,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1706052948
    },
    {
        "content": "<p>(The slowdown discussion here continues at <a href=\"#narrow/stream/287929-mathlib4/topic/Testing.20slowdown\">https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Testing.20slowdown</a>)</p>",
        "id": 417622724,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1706094547
    }
]