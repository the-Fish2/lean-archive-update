[
    {
        "content": "<p>Hi all, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=PadicInt.lift#doc\">docs#PadicInt.lift</a> implemented the universal property of <code>Z[p]</code> as a ring but I need the result for groups. Is there an easy way to go about this?</p>",
        "id": 425827590,
        "sender_full_name": "Qi Ge",
        "timestamp": 1710124899
    },
    {
        "content": "<p><del>Never mind! I just checked the code and <code>PadicInt.lift</code> is very modular. Getting a makeshift <code>lift</code> should be easy!</del></p>",
        "id": 425828028,
        "sender_full_name": "Qi Ge",
        "timestamp": 1710125320
    },
    {
        "content": "<p>The functor from the category of commutative rings to the category of abelian groups preserves limits. I’m quite sure we have that in one way or another in the category theory library. So if you can state the assertion the the p-adic ints are a certain limit in the category of commutative rings, using the categorical machinery, then you could use this categorical result to get what you want.</p>",
        "id": 425828298,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1710125604
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Universal.20Property.20of.20Z.5Bp.5D.20as.20a.20Group/near/425828298\">said</a>:</p>\n<blockquote>\n<p>The functor from the category of commutative rings to the category of abelian groups preserves limits. I’m quite sure we have that in one way or another in the category theory library. So if you can state the assertion the the p-adic ints are a certain limit in the category of commutative rings, using the categorical machinery, then you could use this categorical result to get what you want.</p>\n</blockquote>\n<p>I'm worried it can be complicated to get from type theory statement to category theory and then getting back... Is something like this done somewhere I can can reference?</p>",
        "id": 425828722,
        "sender_full_name": "Qi Ge",
        "timestamp": 1710125934
    },
    {
        "content": "<p>Let’s do it when we meet tomorrow :)</p>",
        "id": 425828774,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1710125962
    }
]