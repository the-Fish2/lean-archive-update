[
    {
        "content": "<p>Are these 2 theorems in SetTheory/Cardinal/Ordinal.lean named wrong?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">add_nat_le_add_nat_iff_of_lt_aleph_0</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">Cardinal</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">β</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">↔</span> <span class=\"n\">α</span> <span class=\"bp\">≤</span> <span class=\"n\">β</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">add_one_le_add_one_iff_of_lt_aleph_0</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">Cardinal</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">β</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">↔</span> <span class=\"n\">α</span> <span class=\"bp\">≤</span> <span class=\"n\">β</span>\n</code></pre></div>\n<p>I think they should be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">add_nat_le_add_nat_iff</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">Cardinal</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">β</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">↔</span> <span class=\"n\">α</span> <span class=\"bp\">≤</span> <span class=\"n\">β</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">add_one_le_add_one_iff</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">Cardinal</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">β</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">↔</span> <span class=\"n\">α</span> <span class=\"bp\">≤</span> <span class=\"n\">β</span>\n</code></pre></div>\n<p>Just wanted to make sure I'm not missing something before changing them.</p>",
        "id": 421063501,
        "sender_full_name": "Nir Paz",
        "timestamp": 1707752226
    },
    {
        "content": "<p>Yes, the names look wrong.</p>",
        "id": 421065526,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1707752721
    },
    {
        "content": "<p>These were added by <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> in <a href=\"https://github.com/leanprover-community/mathlib/pull/16262\">!3#16262</a>. I guess, draft versions had extra assumptions. Could you please submit a PR that</p>\n<ul>\n<li>fixes the names;</li>\n<li>adds <code>@[deprecated] alias old_name := new_name</code>?</li>\n</ul>",
        "id": 421075505,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707755253
    },
    {
        "content": "<p>Yea I'll do that.</p>",
        "id": 421076015,
        "sender_full_name": "Nir Paz",
        "timestamp": 1707755395
    },
    {
        "content": "<p>I think that these were copy-pasted from their brothers <code>add_le_add_iff_of_lt_aleph_0</code> that really had the <code>lt_aleph_0</code> assumption.  I must have added <code>nat</code> to the name, but left in the <code>lt_aleph_0</code>.</p>\n<p>Thanks for catching this!</p>",
        "id": 421079735,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707756400
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/10465\">#10465</a></p>",
        "id": 421085021,
        "sender_full_name": "Nir Paz",
        "timestamp": 1707757891
    },
    {
        "content": "<p>I hope it's ok I made a pr before CI finished</p>",
        "id": 421085197,
        "sender_full_name": "Nir Paz",
        "timestamp": 1707757931
    },
    {
        "content": "<p>There is also an <code>awaiting-CI</code> tag, in case you want to use it, but I do not think that it is necessary.</p>",
        "id": 421086102,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1707758170
    },
    {
        "content": "<p>Delegated to <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span></p>",
        "id": 421086645,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707758324
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"565854\">Nir Paz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Wrong.20cardinal.20theorem.20names/near/421085197\">said</a>:</p>\n<blockquote>\n<p>I hope it's ok I made a pr before CI finished</p>\n</blockquote>\n<p>This is not only totally fine, but often the preferred thing to do</p>",
        "id": 421091084,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707759552
    }
]