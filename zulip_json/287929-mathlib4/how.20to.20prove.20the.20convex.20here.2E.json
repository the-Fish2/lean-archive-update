[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">K_polar_convex</span><span class=\"o\">:</span> <span class=\"n\">Convex</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">K_polar</span> <span class=\"n\">vmatrix</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Convex</span><span class=\"o\">]</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">hx</span>\n  <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">K_polar</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span>\n  <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">hx</span>\n</code></pre></div>\n<p><strong>⊢</strong> StarConvex ℝ x (K_polar vmatrix)</p>",
        "id": 438879942,
        "sender_full_name": "Katherine Wei",
        "timestamp": 1715804869
    },
    {
        "content": "<p>Kinda hard to say without knowing what <code>K_polar</code> is</p>",
        "id": 438880035,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715804896
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">K_polar</span><span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"o\">(</span><span class=\"n\">Fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"bp\">|</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">K</span> <span class=\"n\">vmatrix</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"bp\">⬝ᵥ</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 438880062,
        "sender_full_name": "Katherine Wei",
        "timestamp": 1715804916
    },
    {
        "content": "<p>(Posting questions as an <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> makes it much more likely to get a good answer!)</p>",
        "id": 438904680,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715817105
    }
]