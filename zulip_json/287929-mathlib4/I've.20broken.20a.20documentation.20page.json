[
    {
        "content": "<p>I recently merged in a pull request that affected <code>Mathlib.GroupTheory.Coxeter.Basic</code>.<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/blob/03b471425ef6894a1385678605489d7ef289754b/Mathlib/GroupTheory/Coxeter/Basic.lean#L74-L74\">https://github.com/leanprover-community/mathlib4/blob/03b471425ef6894a1385678605489d7ef289754b/Mathlib/GroupTheory/Coxeter/Basic.lean#L74-L74</a></p>\n<p>Unfortunately, it seems to have broken the documentation page.<br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/Coxeter/Basic.html\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/Coxeter/Basic.html</a></p>\n<p>Somehow, the expression <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>M</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><msup><mi>i</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></msub><msub><mo stretchy=\"false\">)</mo><mrow><mi>i</mi><mo separator=\"true\">,</mo><msup><mi>i</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>∈</mo><mi>B</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">M = (M_{i,i&#x27;})_{i, i&#x27; \\in B}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> is not treated as math mode, and it has some very strange italicization. A similar issue occurs multiple times throughout the page. Also, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>s</mi><mi>i</mi></msub><mo>:</mo><mi>i</mi><mo>∈</mo><mi>B</mi><mo stretchy=\"false\">}</mo><mo>⊆</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">S = \\{s_i : i \\in B\\} \\subseteq W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6986em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> is rendered without the curly braces.</p>\n<p>The page looks just fine in the Lean doc preview (<a href=\"https://observablehq.com/@bryangingechen/github-lean-doc-preview\">https://observablehq.com/@bryangingechen/github-lean-doc-preview</a>). How can I fix this?</p>",
        "id": 434963119,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1713871733
    },
    {
        "content": "<p>This is a bug in docgen4, the fix is to teach docgen4 to  parse LaTeX correctly: <a href=\"https://github.com/leanprover/doc-gen4/issues/178\">https://github.com/leanprover/doc-gen4/issues/178</a></p>",
        "id": 434966304,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1713872881
    },
    {
        "content": "<p>Underscores and other conflicting syntax in LaTeX will confuse most markdown parsers, include the markdown parser that docgen4 is using. </p>\n<p>IIUC, github-lean-doc-preview avoided this issue by replacing everything between single/double dollar pairs  with placeholders, running the markdown doc through markdown parser, then putting them back where they were in the resulting HTML.</p>\n<p>If you are working on a mathlib PR, and you have some formulas that render fine with lean doc preview, I'm told that in this situation, you can safely leave the \"broken\" formulas there for the PR merge, so that once docgen4 has fixed the issue, all \"broken\" formulas will be rendered correctly like they were in docgen 3.</p>",
        "id": 434967752,
        "sender_full_name": "Utensil Song",
        "timestamp": 1713873431
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 434980855,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1713877679
    },
    {
        "content": "<p>Recently I became aware of how they did it in Hugo as <a href=\"https://github.com/gohugoio/hugo-goldmark-extensions\">hugo-goldmark-extensions</a>, see <a href=\"https://github.com/gohugoio/hugo/pull/10894\">gohugoio/hugo#10894</a> for more background.</p>\n<p>This seems simple and robust enough.</p>",
        "id": 435310784,
        "sender_full_name": "Utensil Song",
        "timestamp": 1714019760
    },
    {
        "content": "<p>I think the issue is that doc-gen uses the (C code) reference implementation of the commonmark spec, which is not really extensible</p>",
        "id": 435373694,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1714046679
    }
]