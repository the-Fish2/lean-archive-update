[
    {
        "content": "<p>Is there real closed field defined in mathlib? Not that I have a deep understanding on the subject, but I just got curious.</p>",
        "id": 441896500,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1717243431
    },
    {
        "content": "<p>No we don't have them. <span class=\"user-mention\" data-user-id=\"400289\">@Artem Khovanov</span> expressed interest in porting their formalisation of Puiseux series from Isabelle to Lean</p>",
        "id": 441896807,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1717243602
    },
    {
        "content": "<p>Actually, defining the real (closed) field itself should be easy, according to Real Algebraic Geometry by Bochnak, Coste, and Roy. It takes only three pages (7, 8, 9) introducing the necessary definitions to define it. So it really seems like anyone (including me) can try to 'only define' it..</p>",
        "id": 441897490,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1717244020
    },
    {
        "content": "<p>Yeah, specifically I want to formalise Thom encoding and also that Puiseux series over an RCF form an RCF. Going to have some time this summer to do this. Would be very happy to collaborate on this, especially because my Lean skills are not that good!</p>",
        "id": 441898189,
        "sender_full_name": "Artie Khovanov",
        "timestamp": 1717244418
    },
    {
        "content": "<p>I struggled a bit reading the book, but it seems like <code>RealClosedField</code> is just</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">class</span><span class=\"w\"> </span><span class=\"n\">RealClosedField</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"kn\">extends</span><span class=\"w\"> </span><span class=\"n\">LinearOrderedField</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"n\">no_nontrivial_real_algebraic_extension</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">LinearOrderedField</span><span class=\"w\"> </span><span class=\"n\">L</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Algebra</span><span class=\"w\"> </span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">F</span>\n</code></pre></div>\n<p>It should be correct if <code>Algebra L F</code> implies the field extension <code>L/F</code>.</p>",
        "id": 441918784,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1717255071
    },
    {
        "content": "<p>Strictly speaking, you also need to specify that the ordering on the extension extends the ordering on your original field. However, this definition is equivalent, since an RCF can be characterised as \"an ordered field of index 2 in its own algebraic closure\", and algebraically closed fields can never be ordered.</p>\n<p>There are about 4 equivalent definitions of RCF sthat are useful in different contexts; I'd say proving their equivalence is one of the important things to do, for my purposes.</p>\n<p>I think the most concrete/useful definition is the one that says roots of odd-degree polynomials and square roots of positive elements both exist.</p>",
        "id": 441921269,
        "sender_full_name": "Artie Khovanov",
        "timestamp": 1717256118
    },
    {
        "content": "<p>Then I'll set proving those equivalences as the first goal. But you should keep in mind that I'm new to this subject..</p>",
        "id": 441922091,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1717256467
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"574112\">Jihoon Hyun</span> <a href=\"#narrow/stream/287929-mathlib4/topic/real.20closed.20field.20in.20mathlib.3F/near/441918784\">said</a>:</p>\n<blockquote>\n<p>It should be correct if <code>Algebra L F</code> implies the field extension <code>L/F</code>.</p>\n</blockquote>\n<p><code>Algebra</code> does not imply that the extension is algebraic, though. (There are transcendental real-closed extensions of the reals, I would think.)</p>",
        "id": 441924853,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1717257658
    },
    {
        "content": "<p>Thanks for notifying <span class=\"user-mention\" data-user-id=\"479359\">@Michael Stoll</span> ! With additional search I could find <code>Algebra.IsAlgebraic</code>, and I guess this is the right thing to use?</p>",
        "id": 441925583,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1717257992
    },
    {
        "content": "<p>Where do you plan to work on this? I'd be interested in contributing</p>",
        "id": 441925659,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1717258037
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">class</span><span class=\"w\"> </span><span class=\"n\">RealClosedField</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"kn\">extends</span><span class=\"w\"> </span><span class=\"n\">LinearOrderedField</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"kn\">where</span>\n<span class=\"w\">  </span><span class=\"n\">no_nontrivial_real_algebraic_extension</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">LinearOrderedField</span><span class=\"w\"> </span><span class=\"n\">L</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Algebra</span><span class=\"w\"> </span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">IsAlgebraic</span><span class=\"w\"> </span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">F</span>\n</code></pre></div>",
        "id": 441925674,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1717258046
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Algebra.IsAlgebraic#doc\">docs#Algebra.IsAlgebraic</a> (this produces a link to the declaration in the Mathlib documentation) -- yes, this looks like it should be the correct condition.</p>",
        "id": 441925718,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1717258076
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"466290\">@Luigi Massacci</span> We just started (at least in my perspective), and nothing is set up (also in my perspective), yet. Since I'm new to this subject, it is likely that those who know real algebraic geometry well should manage the project. But if you don't mind, I'd be happy to create a repository for this.</p>",
        "id": 441926101,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1717258295
    },
    {
        "content": "<p>Don't you need to assume the field extension is compatible with the ordering?</p>",
        "id": 441926208,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717258339
    },
    {
        "content": "<p>Yes, if you create a fork of mathlib that would be cool. Unfortunately I won't be able to help until the 21st (exams :( but if you still have stuff left to do by then I'll jump in</p>",
        "id": 441926247,
        "sender_full_name": "Luigi Massacci",
        "timestamp": 1717258368
    },
    {
        "content": "<p>Also using equality between <code>L</code> and <code>F</code> is not what you want. Rather you would want to say that the map <code>F  -&gt; L</code> is an isomorphism.</p>",
        "id": 441926260,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717258377
    },
    {
        "content": "<p>If you ask me, I would say that real closed fields should be defined in terms of saying that any positive element has a square root and any odd degree polynomial has a root.</p>",
        "id": 441926619,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717258565
    },
    {
        "content": "<p>Or by assuming the intermediate value theorem for polynomials.</p>",
        "id": 441926739,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717258655
    },
    {
        "content": "<p>Yes, I think the definition should be the first order logic version of the four equivalent defs that Artie was talking about. The other 3 should be both consequences and alternative constructors.</p>",
        "id": 441930503,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1717260367
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"513540\">@Flo (Florent Schaffhauser)</span> is interested in this I think</p>",
        "id": 441936464,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1717262790
    },
    {
        "content": "<p>How do you think about this formulation? The second prop which I believe everyone is talking about looks ugly as I couldn't find a better way to denote a unique ordering.</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"n\">real_closed_tfae</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Field</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">List</span><span class=\"bp\">.</span><span class=\"n\">TFAE</span><span class=\"w\"> </span><span class=\"o\">[</span>\n<span class=\"w\">  </span><span class=\"o\">[</span><span class=\"n\">LinearOrderedField</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">LinearOrderedField</span><span class=\"w\"> </span><span class=\"n\">K</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Algebra</span><span class=\"w\"> </span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Algebra</span><span class=\"bp\">.</span><span class=\"n\">IsAlgebraic</span><span class=\"w\"> </span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">]</span>\n<span class=\"w\">    </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Ï</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"bp\">â+*</span><span class=\"w\"> </span><span class=\"n\">K</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">fâ</span><span class=\"w\"> </span><span class=\"n\">fâ</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">fâ</span><span class=\"w\"> </span><span class=\"bp\">â¤</span><span class=\"w\"> </span><span class=\"n\">fâ</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">Ï</span><span class=\"w\"> </span><span class=\"n\">fâ</span><span class=\"w\"> </span><span class=\"bp\">â¤</span><span class=\"w\"> </span><span class=\"n\">Ï</span><span class=\"w\"> </span><span class=\"n\">fâ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">Function</span><span class=\"bp\">.</span><span class=\"n\">Bijective</span><span class=\"w\"> </span><span class=\"n\">Ï</span><span class=\"o\">,</span>\n<span class=\"w\">  </span><span class=\"bp\">â!</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">ord</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"kt\">Prop</span><span class=\"o\">),</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">ord</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">ord</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"bp\">+</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"bp\">â§</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">ord</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">ord</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">ord</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">))</span>\n<span class=\"w\">    </span><span class=\"bp\">â§</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">ord</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Set</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=&gt;</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"bp\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"bp\">*</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"bp\">â§</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Polynomial</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Odd</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">degree</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">roots</span><span class=\"o\">),</span>\n<span class=\"w\">  </span><span class=\"o\">(</span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">Type</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Field</span><span class=\"w\"> </span><span class=\"n\">K</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Algebra</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"n\">K</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">IsCyclotomicExtension</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"mi\">2</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"n\">K</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"bp\">â</span><span class=\"w\"> </span><span class=\"n\">IsAlgClosed</span><span class=\"w\"> </span><span class=\"n\">K</span>\n<span class=\"w\">  </span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 441942117,
        "sender_full_name": "Jihoon Hyun",
        "timestamp": 1717265560
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/real.20closed.20field.20in.20mathlib.3F/near/441926208\">said</a>:</p>\n<blockquote>\n<p>Don't you need to assume the field extension is compatible with the ordering?</p>\n</blockquote>\n<p>It's an equivalent condition (but ofc it's better to include this assumption).</p>",
        "id": 441956157,
        "sender_full_name": "Artie Khovanov",
        "timestamp": 1717272117
    },
    {
        "content": "<p>Equivalent in what sense?</p>",
        "id": 441965352,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717276596
    },
    {
        "content": "<p>Itâs certainly not true that a field theoretic embedding of ordered fields is an ordered embedding. For example <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span> has many nonisomorphic field orderings.</p>",
        "id": 441966036,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717277040
    },
    {
        "content": "<p>Of course I understand that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> is real closed then the only proper algebraic extension is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo stretchy=\"false\">[</mo><msqrt><mrow><mo>â</mo><mn>1</mn></mrow></msqrt><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">K[\\sqrt{-1}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1156em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mopen\">[</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8656em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">â</span><span class=\"mord\">1</span></span></span><span style=\"top:-2.8256em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"1.08em\" viewBox=\"0 0 400000 1080\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z\"/></svg></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1744em;\"><span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> which canât be ordered, so you can deduce that some condition is equivalent to the characterization of RCF, but this feels very circular.</p>",
        "id": 441966341,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717277224
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/287929-mathlib4/topic/real.20closed.20field.20in.20mathlib.3F/near/441966341\">said</a>:</p>\n<blockquote>\n<p>Of course I understand that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> is real closed then the only proper algebraic extension is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo stretchy=\"false\">[</mo><msqrt><mrow><mo>â</mo><mn>1</mn></mrow></msqrt><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">K[\\sqrt{-1}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1156em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mopen\">[</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8656em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">â</span><span class=\"mord\">1</span></span></span><span style=\"top:-2.8256em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"1.08em\" viewBox=\"0 0 400000 1080\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z\"/></svg></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1744em;\"><span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> which canât be ordered, so you can deduce that some condition is equivalent to the characterization of RCF, but this feels very circular.</p>\n</blockquote>\n<p>Yes, this is what I meant. I agree it would not be a sensible definition. Maybe I should have said \"turns out to be equivalent\".</p>",
        "id": 441967521,
        "sender_full_name": "Artie Khovanov",
        "timestamp": 1717277926
    },
    {
        "content": "<p>Oh I just saw your earlier message Artie. Yes I agree with all that as well :)</p>",
        "id": 441971977,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717279398
    },
    {
        "content": "<p>Related to all of this, I would be very happy to see a proof of the Artin-Schreier theorem in mathlib (as well as its p-adic analog)</p>",
        "id": 441972549,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1717279623
    }
]