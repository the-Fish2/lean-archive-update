[
    {
        "content": "<p>I'd like to import and use various functions which are provided in <code>Mathlib.Order.Bounds.Basic</code>. ( <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/Bounds/Basic.html\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/Bounds/Basic.html</a> )</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Order.CompleteLattice</span> <span class=\"c1\">-- Mathlib.Order.Bounds.Basic is imported by this</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">bounded_above</span> <span class=\"o\">:=</span> <span class=\"n\">Mathlib.Order.Bounds.Basic.BddAbove</span>\n</code></pre></div>\n<p>gets me \"unknown identifier\" for <code>Mathlib.Order.Bounds.Basic.BddAbove</code>. I have also tried importing <code>Mathlib.Order.Bounds.Basic</code> directly, and referring to <code>BddAbove</code> with various levels of qualification, though it's hard to guess what might be appropriate.</p>\n<ol>\n<li>How do I correctly import and then refer to this function?</li>\n<li>How do I learn, from the documentation at <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/Bounds/Basic.html\">https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/Bounds/Basic.html</a> , how to correctly import and use the functionality there?</li>\n</ol>",
        "id": 422939083,
        "sender_full_name": "Michael",
        "timestamp": 1708655072
    },
    {
        "content": "<p>you should be able to reference it as <code>BddAbove</code>... there's no need to prefix it with anything</p>",
        "id": 422940189,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1708655817
    },
    {
        "content": "<p>as long as it's imported, either directly or indirectly via another import, it should be accessible by the name with which it appears in the docs (whatever's next to <strong>def</strong> or <strong>theorem</strong>)</p>",
        "id": 422940261,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1708655876
    },
    {
        "content": "<p>you're right; with no prefix, I get an error tooltip that plainly indicates that Lean knows what I mean, including the documentation comment and the name of the file. But my <code>def</code> doesn't work (\"typeclass instance problem is stuck\") -- is there some other syntax for making my name <code>bounded_above</code> synonymous with the library name <code>BddAbove</code>?</p>",
        "id": 422940606,
        "sender_full_name": "Michael",
        "timestamp": 1708656076
    },
    {
        "content": "<p>I think <code>abbrev bounded_above := @BddAbove</code> might be the best way to add a synonym</p>",
        "id": 422940745,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1708656152
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"686884\">Michael</span> has marked this topic as resolved.</p>",
        "id": 422940770,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708656179
    },
    {
        "content": "<p>thanks!</p>",
        "id": 422940791,
        "sender_full_name": "Michael",
        "timestamp": 1708656195
    },
    {
        "content": "<p>FYI the <code>@</code> symbol tells Lean to make all arguments explicit, which prevents it from trying to fill in the implicit arguments (which it doesn't know how to do, hence the error)</p>",
        "id": 422940894,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1708656245
    },
    {
        "content": "<p>Something I didn't know until a few days ago: if you have an identifier in your document, and don't even have the right imports open, you can hit meta-t (cmd-t on mac), and VSCode will find the file in which is is defined. <span aria-label=\"mind blown\" class=\"emoji emoji-1f92f\" role=\"img\" title=\"mind blown\">:mind_blown:</span></p>",
        "id": 422946430,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1708660776
    },
    {
        "content": "<p>The downside: if you're attempting to minimise a problem so remove an import and replace a now-not-imported declaration with your own local version, meta-t now behaves randomly because you can't switch this off.</p>",
        "id": 422967856,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1708675936
    }
]