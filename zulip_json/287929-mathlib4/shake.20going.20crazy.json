[
    {
        "content": "<p>Consider <a href=\"https://github.com/leanprover-community/mathlib4/pull/12974/commits/e7b3c20ab6cbb135599ce14f6e7a96744687bf5a\">https://github.com/leanprover-community/mathlib4/pull/12974/commits/e7b3c20ab6cbb135599ce14f6e7a96744687bf5a</a>. If you run <code>lake exe shake</code>, it prints</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">The</span> <span class=\"n\">following</span> <span class=\"n\">changes</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">made</span> <span class=\"n\">automatically</span><span class=\"o\">:</span>\n<span class=\"bp\">././././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">Algebra</span><span class=\"bp\">/</span><span class=\"n\">BigOperators</span><span class=\"bp\">/</span><span class=\"k\">Pi</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span>\n  <span class=\"n\">remove</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">Mathlib.Algebra.GroupWithZero.Prod</span><span class=\"o\">]</span>\n<span class=\"bp\">././././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">GroupTheory</span><span class=\"bp\">/</span><span class=\"n\">Congruence.lean</span><span class=\"o\">:</span>\n  <span class=\"n\">remove</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">Mathlib.Algebra.GroupWithZero.Prod</span><span class=\"o\">]</span>\n  <span class=\"n\">add</span> <span class=\"bp\">#</span><span class=\"o\">[</span><span class=\"n\">Mathlib.Combinatorics.SimpleGraph.Basic</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>then hangs (see <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/9125890114/job/25093012981?pr=12974\">https://github.com/leanprover-community/mathlib4/actions/runs/9125890114/job/25093012981?pr=12974</a>, although the output is shown there. I got the output by running <code>lake exe shake --fix</code> locally).</p>",
        "id": 439219903,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715951518
    },
    {
        "content": "<ol>\n<li>It's really surprising that shake hangs</li>\n<li>The last line <code>add #[Mathlib.Combinatorics.SimpleGraph.Basic]</code> is definitely wrong since simple graphs are not even <em>imported</em> in <code>GroupTheory.Congruence</code></li>\n</ol>",
        "id": 439220236,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715951615
    },
    {
        "content": "<p>Consider <a href=\"https://github.com/leanprover-community/mathlib4/pull/12964\">#12964</a>. I know shake can technically be non-idempotent on correct grounds (an import is needed only because TC search went along a non-optimal path, removing an earlier makes TC search suddenly use a more optimal path), however I suspect that's not the case here because the first shake commit did not change files upstream of the files touched by the second shake commit.</p>",
        "id": 439221664,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715952038
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 439221678,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715952044
    }
]