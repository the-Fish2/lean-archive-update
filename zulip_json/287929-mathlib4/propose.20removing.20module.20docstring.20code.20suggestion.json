[
    {
        "content": "<p>I propose removing the module docstring code suggestion that Mathlib adds in <a href=\"https://github.com/leanprover-community/mathlib4/blob/nightly-testing-2024-04-21/.vscode/module-docstring.code-snippets?rgh-link-date=2024-04-22T14%3A09%3A02Z\">https://github.com/leanprover-community/mathlib4/blob/nightly-testing-2024-04-21/.vscode/module-docstring.code-snippets?rgh-link-date=2024-04-22T14%3A09%3A02Z</a></p>\n<p>It is nice, I guess, but I have had this <a href=\"https://github.com/leanprover/lean4/issues/3623#issuecomment-2069320734\">trigger on <code>do</code>&lt;enter&gt;</a> 100x times as often as it has been useful to me.</p>",
        "id": 437550749,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715125917
    },
    {
        "content": "<p>Do you know you can tell VSCode to not apply suggestions on enter? This is the first thing I set when I see a new VSCode, even before disabling the minimap.</p>",
        "id": 437558661,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715131684
    },
    {
        "content": "<p>I don't like setting any customisations, personally, so as to dog food the new user experience. </p>\n<p>That prompts the question --- should we include \"no suggestions on enter\" in Mathlib's VSCode settings file?</p>",
        "id": 437560029,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715132754
    },
    {
        "content": "<p>(Further question -- should <code>lake new</code> create such a file??)</p>",
        "id": 437560082,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715132776
    },
    {
        "content": "<p>no suggestions on enter is also the first thing I do after getting Lean up and running on a new computer</p>",
        "id": 437563912,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715135422
    },
    {
        "content": "<p>Note that I don’t care about the module docstring snippet, I’m only astonished that anyone can use VSCode without setting this option in the first few minutes (and without having to buy a new computer per day because of rage destruction entailed by not setting this option).</p>",
        "id": 437568225,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715137892
    },
    {
        "content": "<p>It sounds like you are advocating for including this in Mathlib's <code>.vscode/settings.json</code>! :-)</p>",
        "id": 437568332,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715137940
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/12749\">#12749</a></p>",
        "id": 437568615,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715138147
    },
    {
        "content": "<p>What other things are you doing with Lean on a new computer that everyone should be sharing in? (I think we'll leave the minimap, I agree, but that feels like a personal choice.)</p>",
        "id": 437568685,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1715138178
    },
    {
        "content": "<p>The mini map is a completely different kind of setting. I think it is useless and wastes space but it doesn't make VSCode unusable like accepting suggestions on enter.</p>",
        "id": 437642935,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715172360
    },
    {
        "content": "<p>The minimap is the only other global config change I make as well (probably out of habit more than anything else) (assuming autoImplicit etc is being done in my lakefile).</p>",
        "id": 438077174,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715400474
    },
    {
        "content": "<p>I would like us to revert <a href=\"https://github.com/leanprover-community/mathlib4/pull/12749\">#12749</a>. I wasn't sure about it at the time, but this is messing with my muscle memory and the choice to put it in <code>.vscode/settings.json</code> makes it impossible to disable locally AFAICT without hitting conflicts on this file</p>",
        "id": 439229009,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715954248
    },
    {
        "content": "<p>I agree. It's really bad to my muscle memory as well</p>",
        "id": 439229255,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715954322
    },
    {
        "content": "<p>Please don't. It's definitely an improvement, and we will all be used to it in a few days.</p>",
        "id": 439229379,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1715954373
    },
    {
        "content": "<p>perhaps we should instead put it in the new user setup instructions</p>",
        "id": 439229448,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715954392
    },
    {
        "content": "<p>this is a personal choice</p>",
        "id": 439229470,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715954398
    },
    {
        "content": "<p>the people who advocated for it are AFAICT all people who had it on already beforehand</p>",
        "id": 439229617,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715954423
    },
    {
        "content": "<p>If you like it and find it to be an improvement you can put it in your user settings. The converse doesn't work - putting this in the project settings means there is no opt out</p>",
        "id": 439230074,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715954543
    },
    {
        "content": "<p>I just learned about this option now, and the default behavior has annoyed me for four years.</p>",
        "id": 439230159,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1715954570
    },
    {
        "content": "<p>I have no problem with having this be a default option. But that's not what <code>.vscode/settings.json</code> is</p>",
        "id": 439230298,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715954611
    },
    {
        "content": "<p>(unless I missed something)</p>",
        "id": 439230361,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715954629
    },
    {
        "content": "<p>I didn't have it either, I didn't know the option, and it had been annoying me for years.</p>",
        "id": 439230550,
        "sender_full_name": "Sébastien Gouëzel",
        "timestamp": 1715954687
    },
    {
        "content": "<p>I would like it to stay off for the web editor if this affects it.</p>",
        "id": 439232409,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1715955310
    },
    {
        "content": "<p>There is clearly a VSCode deficiency here, so we need a trade-off. And I think that making sure new (and not so new from what I read here) users get the sane behavior is clearly the right decision. Maybe there is something that can be done in the Lean extension but I guess this is pretty low priority.</p>",
        "id": 439234145,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1715955900
    },
    {
        "content": "<p>Wait, why is <code>.vscode</code> tracked by Git at all?</p>",
        "id": 439235058,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1715956172
    },
    {
        "content": "<p>Here's an idea: the Lean 4 extension can be responsible for adding a default <code>.vscode/settings.json</code> <em>if</em> that file doesn't exist yet. There can be a configuration to opt out of that so the extension does nothing.</p>\n<p>Either way, <code>.vscode</code> is for local preferences and git tracking it will likely lead to diverse members committing to preferences they don't like. This should be a complete non-issue</p>\n<p>Edit: what Patrick said</p>",
        "id": 439236582,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1715956632
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/439236582\">said</a>:</p>\n<blockquote>\n<p>Either way, <code>.vscode</code> is for local preferences and git tracking it will likely lead to diverse members committing to preferences they don't like. This should be a complete non-issue</p>\n</blockquote>\n<p>Right, this is my argument. <code>.vscode/settings.json</code> should only include project wide settings like line lengths, tabs/spaces, etc. There is a fundamental issue with storing any user preferences here which are not unanimously approved, which is that you can't override them. As long as they aren't mentioned in the file it's possible for people to pick their preference. I think it would be better to have a page for suggested preference options which people can copy into their <em>user</em> settings if they agree.</p>",
        "id": 439301876,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715986163
    },
    {
        "content": "<p>I was not aware that these settings are not overrideable by individual users. That makes this issue more complicated. I would <em>really</em> like to make this the default behavior without any set-up from new users. Is there any way to do that while making it overridable?</p>",
        "id": 439343939,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1716027333
    },
    {
        "content": "<p>I just saw: <a href=\"https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence\">https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence</a><br>\nThere seems to a long list of items that have a higher precedence than the workspace settings. Can you use <code>Language-specific user settings</code> to override the workspace setting?</p>",
        "id": 439344012,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1716027382
    },
    {
        "content": "<p>Thirding that it's bad to have this kind of setting be a project default period. I would go further and say it's strange to have .vscode/settings.json tracked at all! Things like 100 column lines or tab count can be caught by the linter or code review</p>",
        "id": 439461662,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1716147559
    },
    {
        "content": "<p>I'm finding this change very disruptive, I constantly use enter-autocomplete</p>",
        "id": 439461744,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1716147624
    },
    {
        "content": "<blockquote>\n<p>Things like 100 column lines or tab count can be caught by the linter or code review</p>\n</blockquote>\n<p>well yes, we have linters and code review for that, but the reason they are in the settings is to catch the issues <em>before</em> they are PR'd</p>",
        "id": 439461762,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716147647
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/439344012\">said</a>:</p>\n<blockquote>\n<p>I just saw: <a href=\"https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence\">https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence</a><br>\nThere seems to a long list of items that have a higher precedence than the workspace settings. Can you use <code>Language-specific user settings</code> to override the workspace setting?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"110401\">@Brendan Seamas Murphy</span> Does this <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span> work?</p>",
        "id": 439511262,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716187528
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/439234145\">said</a>:</p>\n<blockquote>\n<p>There is clearly a VSCode deficiency here, so we need a trade-off. And I think that making sure new (and not so new from what I read here) users get the sane behavior is clearly the right decision. Maybe there is something that can be done in the Lean extension but I guess this is pretty low priority.</p>\n</blockquote>\n<p>I disagree, expecially about the \"clearly\". Why can't we let everybody do what they prefer with their keyboard?</p>",
        "id": 440328265,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716472428
    },
    {
        "content": "<p>Yes please. Pushing editor settings like this is highly intrusive. Every user has their own muscle memory and we tune our settings accordingly. Changing them can be jarring</p>",
        "id": 440329099,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716472650
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/437568225\">said</a>:</p>\n<blockquote>\n<p>Note that I don’t care about the module docstring snippet, I’m only astonished that anyone can use VSCode without setting this option in the first few minutes (and without having to buy a new computer per day because of rage destruction entailed by not setting this option).</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> I find your comment a bit hard. I am happy with the old option, and you are happy with the new one. It takes both of us 2 sec to set our VSCode as we prefer, and we would both be happy. In this way (or in the reverse one), one would be happy and the other would be sad. What are we gaining here?</p>",
        "id": 440330372,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716472971
    },
    {
        "content": "<p>I suspect Patrick's argument is that for <em>beginners</em> this is typically a bad option, so we want it off by default and then experts can turn it on. Unfortunately it seems that the method we used to do this is not good because experts are having trouble turning it on without making git upset.</p>",
        "id": 440338730,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716475374
    },
    {
        "content": "<p>The problem I see is that beginners might be <em>lean</em> beginners, but not VSCode beginners, so they might already be using VSCode with another setting. And using the same program with two different muscle memories according to what kind of work you are doing can be really painful. Imagine if your TeX shortcuts depended on whether you are typing an assessment or a research paper...</p>",
        "id": 440338872,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716475426
    },
    {
        "content": "<p>Hi I came across from <a href=\"#narrow/stream/113489-new-members/topic/MIL.20set.20acceptSuggestionOnEnter.20off.20in.20vsocde\">here</a>. Yeah VSCode's auto suggest is not very intelligent and sometimes suffers from performance issues. But turning it on can make typing long variable names and lemmas some kind easier, and avoid some typos I think.  A way to customize this may be per user per workspace config in vscode, but sadly it seems still not supported yet <a href=\"https://github.com/Microsoft/vscode/issues/15909\">vscode#15909</a></p>",
        "id": 440340680,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1716475973
    },
    {
        "content": "<p>I agree that VSCode has a really serious issue here, and there does not seem to be a nice solution. So this change should probably be reverted after making sure that the Lean extension displays a very clear message when it installs, hopefully even a button to set sane defaults for the user. Something like: we will now update your VSCode settings to make it usable, please check this box if you do not want this.</p>",
        "id": 440343844,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716476940
    },
    {
        "content": "<p>Yes, this seems to be a very reasonable way to go.</p>",
        "id": 440343954,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716476976
    },
    {
        "content": "<p>And I’ll be very curious to see someone using VSCode without being allowed to use the Enter key. What is the workflow? Did you train your muscles to hit Escape and then Enter every time you want a new line?</p>",
        "id": 440344085,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716477009
    },
    {
        "content": "<p>But wouldn't this take a while to be implemented?</p>",
        "id": 440344088,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716477009
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440344085\">said</a>:</p>\n<blockquote>\n<p>And I’ll be very curious to see someone using VSCode without being allowed to use the Enter key. What is the workflow? Did you train your muscles to hit Escape and then Enter every time you want a new line?</p>\n</blockquote>\n<p>Yes, whenever I have a suggestion, I type esc+enter; if there is no suggestion, enter alone works.</p>",
        "id": 440344191,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716477045
    },
    {
        "content": "<p>I don’t think it would take a while. <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> is really really good at VSCode extension writing now.</p>",
        "id": 440344196,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716477047
    },
    {
        "content": "<p>Remember that many users actually look at their keyboard when typing, so they would have to use Esc-Enter everytime. And also the suggestion can popup a fraction of seconds before you hit enter.</p>",
        "id": 440344506,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716477139
    },
    {
        "content": "<p>I see, and I can even go as far as agreeing with you that one might want to <em>suggest</em> not to do this; but imposing it seems a bit too much, especially for users who might have developed this habit either from a long time or from a different language.</p>",
        "id": 440344718,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716477215
    },
    {
        "content": "<p>I understand. When Kim pushed that commit I did not realize this was impossible to override by users. Again this is a very weird decision from VSCode to make it impossible to have project default settings.</p>",
        "id": 440345031,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716477313
    },
    {
        "content": "<p>My brain agrees that enter isn't great, but my fingers don't :(</p>",
        "id": 440346008,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716477620
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440344085\">发言道</a>：</p>\n<blockquote>\n<p>And I’ll be very curious to see someone using VSCode without being allowed to use the Enter key. What is the workflow? Did you train your muscles to hit Escape and then Enter every time you want a new line?</p>\n</blockquote>\n<p>Oh for me I am using the <code>vscodevim</code> extension and hence I hit <code>esc</code> all the times.</p>",
        "id": 440346689,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1716477847
    },
    {
        "content": "<p>Do you hit esc to create a new line while typing?</p>",
        "id": 440346937,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716477949
    },
    {
        "content": "<p>Nope I find that mainly I am using <code>vim</code>'s shortkeys for creating new line, first pressing <code>esc</code> to normal mode, and then pressing <code>o</code>... And my <code>esc/ctrl</code> is bound to the <code>capslock</code>: tapping capslock for <code>esc</code> and holding capslock and in the same time for ctrl  (maybe this is quite personal though...) Yeah without this the <code>enter/esc</code> issue may be annoying...</p>",
        "id": 440347359,
        "sender_full_name": "Shanghe Chen",
        "timestamp": 1716478083
    },
    {
        "content": "<p><del>Just to remind people in this thread of Eric's comment above saying that it would be better not to revert the commit which made the change (because that commit did other things too) and just make a new commit which undid the specific change which has upset the esc-lovers amongst us.</del> (edit: this is nonsense)</p>",
        "id": 440351240,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716479347
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/439511262\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/439344012\">said</a>:</p>\n<blockquote>\n<p>I just saw: <a href=\"https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence\">https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence</a><br>\nThere seems to a long list of items that have a higher precedence than the workspace settings. Can you use <code>Language-specific user settings</code> to override the workspace setting?</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <span class=\"user-mention silent\" data-user-id=\"110401\">Brendan Seamas Murphy</span> Does this <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span> work?</p>\n</blockquote>\n<p>Did anybody test this?</p>",
        "id": 440359453,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716482029
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440343844\">said</a>:</p>\n<blockquote>\n<p>I agree that VSCode has a really serious issue here, and there does not seem to be a nice solution. So this change should probably be reverted after making sure that the Lean extension displays a very clear message when it installs, hopefully even a button to set sane defaults for the user. Something like: we will now update your VSCode settings to make it usable, please check this box if you do not want this.</p>\n</blockquote>\n<p>I generally don't consider these kinds of one-off notifications to be a good idea. The <a href=\"https://github.com/leanprover/vscode-lean4/pull/453\">manual</a> will mention this setting, but I also don't think that all users are as bothered by the default behavior as you are. </p>\n<p>To me, the main culprit here was the module docstring suggestion that got in the way whenever you were just about to press Enter. </p>\n<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440359453\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/439511262\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/439344012\">said</a>:</p>\n<blockquote>\n<p>I just saw: <a href=\"https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence\">https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence</a><br>\nThere seems to a long list of items that have a higher precedence than the workspace settings. Can you use <code>Language-specific user settings</code> to override the workspace setting?</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <span class=\"user-mention silent\" data-user-id=\"110401\">Brendan Seamas Murphy</span> Does this <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span> work?</p>\n</blockquote>\n<p>Did anybody test this?</p>\n</blockquote>\n<p>It probably does, but I still don't think that it's a good idea to mess with user settings in a way that is difficult to opt-out of.</p>",
        "id": 440359793,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716482142
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440351240\">said</a>:</p>\n<blockquote>\n<p>Just to remind people in this thread of Eric's comment above saying that it would be better not to revert the commit which made the change (because that commit did other things too) and just make a new commit which undid the specific change which has upset the esc-lovers amongst us.</p>\n</blockquote>\n<p>Which comment? (Or maybe, which Eric?)</p>",
        "id": 440402317,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716499969
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440344085\">said</a>:</p>\n<blockquote>\n<p>Did you train your muscles to hit Escape and then Enter every time you want a new line?</p>\n</blockquote>\n<p>I hit Ctrl+Z if I trigger a suggestion by accident</p>",
        "id": 440402514,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716500059
    },
    {
        "content": "<p>Sorry Eric, I must have conflated this with another issue. Clearly the PR just makes the one change and can be reverted if necessary</p>",
        "id": 440406512,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716502171
    },
    {
        "content": "<p>I claim that at some point recently you said \"don't revert the PR, it does several other things too\" and I assumed we were talking about this one</p>",
        "id": 440406619,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716502218
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440359793\">said</a>:</p>\n<blockquote>\n<p>To me, the main culprit here was the module docstring suggestion that got in the way whenever you were just about to press Enter.</p>\n</blockquote>\n<p>Can we fix this by adding a snippet for <code>do</code>? Or by having the language server offer it as a keyword completion?</p>",
        "id": 440407009,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716502452
    },
    {
        "content": "<p>All in al, is it OK if I open a PR reverting this change? <span class=\"user-mention\" data-user-id=\"110087\">@Kim Morrison</span> <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> ?</p>",
        "id": 440457435,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716536596
    },
    {
        "content": "<p>I mean, I'm personally opposed to reverting because it is so disruptive to have enter keep pasting in nonsense in my file, and I would like to save others from this experience, but by all means open a PR. :-)</p>",
        "id": 440457648,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716536693
    },
    {
        "content": "<p>Also -- if we decide that this is something that needs to be voted on, we have to make sure that we properly sample from beginners, rather than from loud people on zulip. :-)</p>",
        "id": 440457700,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716536718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440457700\">said</a>:</p>\n<blockquote>\n<p>Also -- if we decide that this is something that needs to be voted on, we have to make sure that we properly sample from beginners, rather than from loud people on zulip. :-)</p>\n</blockquote>\n<p>Yes, this I very much agree with. What I find somewhat unbalanced is that by reverting every user will be entitled to set up VSCode as they wish, whereas as it is now we are all obliged to follow a common rule</p>",
        "id": 440457869,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716536785
    },
    {
        "content": "<p>Whereas I would spin it as: where we are now, beginners (who would obviously never touch the default settings) get a usable experience, whereas if we revert experts can avoid changing their habits. :-)</p>",
        "id": 440458033,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716536878
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440407009\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440359793\">said</a>:</p>\n<blockquote>\n<p>To me, the main culprit here was the module docstring suggestion that got in the way whenever you were just about to press Enter.</p>\n</blockquote>\n<p>Can we fix this by adding a snippet for <code>do</code>? Or by having the language server offer it as a keyword completion?</p>\n</blockquote>\n<p>The keyword completion approach with keyword snippets being at the top of the list would be my preferred solution for <a href=\"https://github.com/leanprover-community/mathlib4/pull/3623\">#3623</a>, but it's difficult to do right now due to how the completion mechanism works at the moment. I want to eventually rework it in the future.</p>\n<p>Adding a couple of built-in keyword snippets for keywords that are typically used to terminate lines in Mathlib would definitely be worth an experiment.</p>",
        "id": 440458176,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716536929
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440458033\">said</a>:</p>\n<blockquote>\n<p>Whereas I would spin it as: where we are now, beginners (who would obviously never touch the default settings) get a usable experience, whereas if we revert experts can avoid changing their habits. :-)</p>\n</blockquote>\n<p>I see, on the other hand there might very well be <em>experienced</em> VSCode users who are new to mathlib and are used to that setting. This would mean that they have to use VSCode depending on what they are coding....</p>",
        "id": 440458287,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716536993
    },
    {
        "content": "<p>Moreover, it seems to me that it should be important to keep things pertaining to mathlib (eg. the 100 characters limit, which is a library thing) from users' experience: they are unrelated, no?</p>",
        "id": 440458516,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716537080
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440458033\">said</a>:</p>\n<blockquote>\n<p>Whereas I would spin it as: where we are now, beginners (who would obviously never touch the default settings) get a usable experience, whereas if we revert experts can avoid changing their habits. :-)</p>\n</blockquote>\n<p>By the way, I'm very skeptical of this claim. In my mind, with the default setting off, a total beginner who is not used to IDEs will see the completion popup panel, try to select an entry with the arrow keys and Enter because that's the universal button to make progress in user interfaces, see that it doesn't work and then fall back to selecting entries by taking the hands off the keyboard and using the mouse. <br>\nI don't think that Tab is at all an intuitive shortcut for beginners, and I suspect that this is probably why most IDEs use Enter for completions, despite the fact that it sometimes gets in the way.</p>",
        "id": 440458816,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716537212
    },
    {
        "content": "<p><span aria-label=\"this\" class=\"emoji emoji-1f446\" role=\"img\" title=\"this\">:this:</span> I have witnessed this before</p>",
        "id": 440459143,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716537331
    },
    {
        "content": "<p>Okay, I can see that I am outvoted here. If we can separately fix the <code>do&lt;enter&gt;</code> issue I will be completely happy.</p>",
        "id": 440459324,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716537407
    },
    {
        "content": "<p>Does adding a snippet that triggers on <code>do</code> that pastes <code>do</code> work?</p>",
        "id": 440459559,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1716537515
    },
    {
        "content": "<p>As I said, I think we should have a page for suggested settings, and the extension can even guide people to it. I don't think it should change settings just by installing it though, I know a lot of people (on the \"linux power-user\" side of the spectrum) who find that kind of behavior to be distasteful</p>",
        "id": 440459565,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716537518
    },
    {
        "content": "<p>having keyword completions in general would help I think</p>",
        "id": 440459645,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716537549
    },
    {
        "content": "<p>I want a solution that ensures that the vanilla install of the VSCode extension allows you to type <code>do&lt;enter&gt;</code>.</p>",
        "id": 440459683,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716537573
    },
    {
        "content": "<p>what even causes the autocomplete to trigger in this example?</p>",
        "id": 440459863,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716537621
    },
    {
        "content": "<p>I just tried typing <code>def foo := do&lt;enter&gt;</code> and no autocomplete was triggered</p>",
        "id": 440459956,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716537657
    },
    {
        "content": "<p>I think it was changed to \"module docstring\" instead of \"docstring\"?</p>",
        "id": 440460015,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1716537679
    },
    {
        "content": "<p>that doesn't help, it still has <code>d</code> and <code>o</code> in that order</p>",
        "id": 440460076,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716537703
    },
    {
        "content": "<p>oh, but enter no longer selects it!</p>",
        "id": 440460103,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716537715
    },
    {
        "content": "<p>module docstring appears in the dropdown, but perhaps enter only works if you're typing a prefix?</p>",
        "id": 440460173,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716537730
    },
    {
        "content": "<p>So maybe problem solved at this point. (after we revert)</p>",
        "id": 440460197,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716537744
    },
    {
        "content": "<p>my understanding was that autocomplete only auto-triggers on things like <code>.</code></p>",
        "id": 440460204,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716537746
    },
    {
        "content": "<p>if you manually trigger autocomplete I think it's fine if &lt;enter&gt; selects the result</p>",
        "id": 440460274,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716537777
    },
    {
        "content": "<p>it's only the auto-autocomplete that is disruptive for people just typing with their eyes off the screen</p>",
        "id": 440460341,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716537803
    },
    {
        "content": "<p>No, with what I think I default settings, typing <code>def foo := do&lt;enter&gt;</code> gives me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"kn\">def</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"c\">/-</span><span class=\"cm\">!</span>\n<span class=\"cm\"># CategoryTheory</span>\n\n<span class=\"cm\">## Main definitions</span>\n\n<span class=\"cm\">* `FooBar`</span>\n\n<span class=\"cm\">## Main statements</span>\n\n<span class=\"cm\">* `fooBar_unique`</span>\n\n<span class=\"cm\">## Notation</span>\n\n\n\n<span class=\"cm\">## Implementation details</span>\n\n\n\n<span class=\"cm\">## References</span>\n\n<span class=\"cm\">* [F. Bar, *Quuxes*][bibkey]</span>\n\n<span class=\"cm\">## Tags</span>\n\n<span class=\"cm\">Foobars, barfoos</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 440460526,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716537877
    },
    {
        "content": "<p>(requires a slight pause before the &lt;enter&gt;)</p>",
        "id": 440460582,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716537910
    },
    {
        "content": "<p>did you test that? I can't replicate (I haven't changed things from the mathlib current default but that should only affect the selection key), no popup appears</p>",
        "id": 440460790,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716537994
    },
    {
        "content": "<p>Yes, just did it several times.</p>",
        "id": 440460822,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716538011
    },
    {
        "content": "<p>what character causes the popup?</p>",
        "id": 440460889,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716538032
    },
    {
        "content": "<p>As soon as I type the <code>d</code> a pop-up appears, once I type <code>o</code> \"module docstring\" is at the top of the list, and then enter pastes a screen full of garbage...</p>",
        "id": 440461063,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716538099
    },
    {
        "content": "<p>aha, I think this is the reason I'm not seeing those popups</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"w\">  </span><span class=\"s2\">\"editor.quickSuggestions\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">    </span><span class=\"s2\">\"comments\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"off\"</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"s2\">\"strings\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"off\"</span><span class=\"o\">,</span>\n<span class=\"w\">    </span><span class=\"s2\">\"other\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"off\"</span>\n<span class=\"w\">  </span><span class=\"o\">},</span>\n</code></pre></div>\n<p>maybe we should put this in the suggestions...</p>",
        "id": 440461486,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716538281
    },
    {
        "content": "<p>Suggestions won't solve anything for most people?</p>",
        "id": 440461521,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716538306
    },
    {
        "content": "<p>(I don't set any custom settings specifically to make sure I'm not hiding bad experiences for new users.)</p>",
        "id": 440461642,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716538358
    },
    {
        "content": "<p>Is it possible to have language-specific default settings for lean4 lang?</p>",
        "id": 440461670,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716538379
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"439483\">Andrew Yang</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440459559\">said</a>:</p>\n<blockquote>\n<p>Does adding a snippet that triggers on <code>do</code> that pastes <code>do</code> work?</p>\n</blockquote>\n<p>Does changing the start of <code>module-docstring.code-snippets</code> to the following work? (It works for me)</p>\n<div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"o\">{</span>\n<span class=\"w\">    </span><span class=\"s2\">\"Do notation\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">        </span><span class=\"s2\">\"scope\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lean4\"</span><span class=\"o\">,</span>\n<span class=\"w\">        </span><span class=\"s2\">\"prefix\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"do\"</span><span class=\"o\">,</span>\n<span class=\"w\">        </span><span class=\"s2\">\"body\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"s2\">\"do\"</span><span class=\"o\">]</span>\n<span class=\"w\">    </span><span class=\"o\">},</span>\n<span class=\"w\">    </span><span class=\"s2\">\"Module docstring for mathlib\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">{</span>\n</code></pre></div>",
        "id": 440462033,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1716538555
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440458816\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440458033\">said</a>:</p>\n<blockquote>\n<p>Whereas I would spin it as: where we are now, beginners (who would obviously never touch the default settings) get a usable experience, whereas if we revert experts can avoid changing their habits. :-)</p>\n</blockquote>\n<p>By the way, I'm very skeptical of this claim. In my mind, with the default setting off, a total beginner who is not used to IDEs will see the completion popup panel, try to select an entry with the arrow keys and Enter because that's the universal button to make progress in user interfaces, see that it doesn't work and then fall back to selecting entries by taking the hands off the keyboard and using the mouse. <br>\nI don't think that Tab is at all an intuitive shortcut for beginners, and I suspect that this is probably why most IDEs use Enter for completions, despite the fact that it sometimes gets in the way.</p>\n</blockquote>\n<p>I just encountered this exact problem last week (trying to use enter for suggestions - with Mario sitting next to me and telling me to use tab). I can re-train my brain, but let me state that I found this behaviour surprising.<br>\n(I don't use suggestions much so far, so at the moment I don't have a horse in this race.)</p>",
        "id": 440462768,
        "sender_full_name": "Michael Rothgang",
        "timestamp": 1716538878
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440461670\">said</a>:</p>\n<blockquote>\n<p>Is it possible to have language-specific default settings for lean4 lang?</p>\n</blockquote>\n<p>Yes this is possible, but note that this would disable all automatic identifier completions and (outside of dot completion) users would always have to use Ctrl+Space to trigger completion.</p>",
        "id": 440463077,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716538993
    },
    {
        "content": "<p>What I find surprising is mixing user settings with library settings. Even if we fix this very problem at hand, I would like that in a year time we don't find that setting a dark theme, for instance, is graved in stone in the json \"since it is better for your eyes\". It is very fine to propose suggestions, but there are things that should be free even for new users, who are adults (or almost...), after all.</p>",
        "id": 440463511,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716539163
    },
    {
        "content": "<p>I don't remember setting this setting but I guess I must have found it unhelpful, at least with the state of identifier completion at the time (it's really slow, so having it automatically pop up too late is kind of the worst possible situation)</p>",
        "id": 440463679,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716539228
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440463679\">said</a>:</p>\n<blockquote>\n<p>I don't remember setting this setting but I guess I must have found it unhelpful, at least with the state of identifier completion at the time (it's really slow, so having it automatically pop up too late is kind of the worst possible situation)</p>\n</blockquote>\n<p>I made it <a href=\"https://github.com/leanprover/lean4/pull/3460#issue-2149303999\">a bit faster</a> a while ago.</p>",
        "id": 440464167,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716539423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> It is still possible to override these settings as a user, right? Floris pointed to docs on how to do this.</p>",
        "id": 440465469,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716539962
    },
    {
        "content": "<p>In general, I don't care too much where this lands. Exactly because people can still customize however they want.</p>\n<p>I think I lean slightly towards the Massot-Morrison camp in this debate.</p>",
        "id": 440465611,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716540015
    },
    {
        "content": "<p>Certainly, if it wasn't possible to override this setting, then I would think it is a bad move. But expert VScode users can do whatever they want... so I don't see why this is a big deal.</p>",
        "id": 440465687,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716540056
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440465469\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> It is still possible to override these settings as a user, right? Floris pointed to docs on how to do this.</p>\n</blockquote>\n<p>Do you mean the list <a href=\"https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence\">https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence</a>? This would need to be at any rate inserted in the json, right?</p>",
        "id": 440465931,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716540179
    },
    {
        "content": "<p>At any rate my point would rather be to avoid interfering with users' setting in the mathlib json, the two things look unrelated.</p>",
        "id": 440466031,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716540234
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440465931\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440465469\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> It is still possible to override these settings as a user, right? Floris pointed to docs on how to do this.</p>\n</blockquote>\n<p>Do you mean the list <a href=\"https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence\">https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence</a>? This would need to be at any rate inserted in the json, right?</p>\n</blockquote>\n<p>Yes... but all VScode settings are handled by json, so I don't see why this is a problem</p>",
        "id": 440467694,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716540858
    },
    {
        "content": "<p>Ah, I probably understand Floris' suggestion better: to specify as user-specific language setting the behaviour of enter, that will override global workspace settings.</p>",
        "id": 440468537,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716541138
    },
    {
        "content": "<p>Yes. Users can always override any \"community setting\".</p>",
        "id": 440468809,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716541222
    },
    {
        "content": "<p>This might fix locally, but I insist with my idea that the json contained in the mathlib library should not mess up with users' settings concerning VSCode experience.</p>",
        "id": 440468846,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716541233
    },
    {
        "content": "<p>I still think this would be better as a language-specific default rather than a mathlib-specific workspace setting. Currently, the new user experience is that &lt;enter&gt; accepts autocomplete in other languages and in lean projects other than mathlib, but in mathlib this doesn't work, and this is not good for people who switch between mathlib and other (lean) projects.</p>",
        "id": 440468948,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716541278
    },
    {
        "content": "<p>That seems sensible to me.</p>",
        "id": 440469548,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716541507
    },
    {
        "content": "<p>But this would break Floris' workaround, as language-specific workspace settings overridd user's ones and are at the top of the priority list...</p>",
        "id": 440470597,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716541865
    },
    {
        "content": "<p>no, the list is read the other way around, high priority is at the bottom</p>",
        "id": 440470681,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716541901
    },
    {
        "content": "<p>Yes, I agree and Language-specific workspace settings is almost at the end.</p>",
        "id": 440470824,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716541947
    },
    {
        "content": "<p>but it does mean that the user would have to edit these settings as language-specific, i.e. in <code>\"[lean4]\": { ... }</code></p>",
        "id": 440470839,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716541956
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440468948\">said</a>:</p>\n<blockquote>\n<p>I still think this would be better as a language-specific default rather than a mathlib-specific workspace setting. Currently, the new user experience is that &lt;enter&gt; accepts autocomplete in other languages and in lean projects other than mathlib, but in mathlib this doesn't work, and this is not good for people who switch between mathlib and other (lean) projects.</p>\n</blockquote>\n<p>I won't disable 'Enter' as a shortcut to accept completions globally for all Lean users, and I'm not interested in globally removing regular completions from auto-triggering at this point.</p>\n<p>To override a language default that is provided by the VS Code extension, users need to know:</p>\n<ul>\n<li>That there is a precedence of settings, and what that precedence is</li>\n<li>That the Lean 4 VS Code extension is meddling with their regular user settings</li>\n<li>That there is a notion of a language user setting distinct from regular user settings that can override the language default setting</li>\n<li>How to set the language user setting, either by using special syntax in the (nowadays for most users obscure) <code>settings.json</code>, or by using the tiny \"Filter settings\" button in the settings UI that actually doesn't filter but switches the settings editor into an entirely different language-specific mode (I had to look this up because I couldn't find it in the UI myself)</li>\n</ul>\n<p>I don't consider this to be a reasonable UX to provide to users.</p>",
        "id": 440470883,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716541977
    },
    {
        "content": "<p>(To be clear I meant it would be better than having mathlib alone do it. I would prefer it's not done at all)</p>",
        "id": 440470937,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716542007
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Just to be sure, do you prefer to set it as Language-defult setting (that is overridden by User language-specific setting) or as Workspace language-specific setting, which is not?</p>",
        "id": 440471196,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716542133
    },
    {
        "content": "<p>My specific suggestion for mathlib would be to change the prefix of the module docstring snippet, or to try out adding additional keyword snippets that do the right thing when pressing Enter.</p>",
        "id": 440471206,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716542138
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440471196\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> Just to be sure, do you prefer to set it as Language-defult setting (that is overridden by User language-specific setting) or as Workspace language-specific setting, which is not?</p>\n</blockquote>\n<p>A workspace language-specific setting would be like mathlib adding a <code>\"[lean4]\": { ... }</code> block in the settings.json file. There is no need for this since mathlib is basically all lean code anyway, and it would make the problem here even worse, so no I'm not suggesting that.</p>",
        "id": 440471570,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1716542283
    },
    {
        "content": "<p>I just want to reiterate that whichever solution involves git tracking local/personal preferences for any software, VS Code clearly included, can't possibly be on the right path.</p>\n<p>Even a Lake script that just spits out those (ideally gitignored) settings would be a better solution IMO. There goes a <code>lake run vscode_settings</code></p>",
        "id": 440473985,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1716543206
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"439483\">Andrew Yang</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440462033\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"439483\">Andrew Yang</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440459559\">said</a>:</p>\n<blockquote>\n<p>Does adding a snippet that triggers on <code>do</code> that pastes <code>do</code> work?</p>\n</blockquote>\n<p>Does changing the start of <code>module-docstring.code-snippets</code> to the following work? (It works for me)</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean4\"><pre><span></span><code><span class=\"o\">{</span>\n<span class=\"w\">    </span><span class=\"s2\">\"Do notation\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">        </span><span class=\"s2\">\"scope\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"lean4\"</span><span class=\"o\">,</span>\n<span class=\"w\">        </span><span class=\"s2\">\"prefix\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"do\"</span><span class=\"o\">,</span>\n<span class=\"w\">        </span><span class=\"s2\">\"body\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"s2\">\"do\"</span><span class=\"o\">]</span>\n<span class=\"w\">    </span><span class=\"o\">},</span>\n<span class=\"w\">    </span><span class=\"s2\">\"Module docstring for mathlib\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">{</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Can someone PR this? It seems like a fine solution.</p>",
        "id": 440475467,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716543780
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Kim Morrison</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440475467\">said</a>:</p>\n<blockquote>\n<p>Can someone PR this? It seems like a fine solution.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/13163\">#13163</a></p>",
        "id": 440477162,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1716544463
    },
    {
        "content": "<p>Any objections?</p>",
        "id": 440483849,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716547415
    },
    {
        "content": "<p>Does it work? I'd be slightly worried that you would have to write <code>do\\n\\n</code> to get <code>do\\n</code></p>",
        "id": 440486107,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716548387
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440473985\">said</a>:</p>\n<blockquote>\n<p>I just want to reiterate that whichever solution involves git tracking local/personal preferences for any software, VS Code clearly included, can't possibly be on the right path.</p>\n<p>Even a Lake script that just spits out those (ideally gitignored) settings would be a better solution IMO. There goes a <code>lake run vscode_settings</code></p>\n</blockquote>\n<p>In emacs, you can have project preferences in (git-tracked) <code>.dir-locals.el</code> and overrides in a separate (non-git-tracked) <code>.dir-locals-2.el</code> in the same directory. Project preferences are fine, VS Code just didn't think this through very well.</p>",
        "id": 440487081,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1716548765
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440486107\">said</a>:</p>\n<blockquote>\n<p>Does it work? I'd be slightly worried that you would have to write <code>do\\n\\n</code> to get <code>do\\n</code></p>\n</blockquote>\n<p>Works for me! Just one enter, which does select from the drop down, but seems to give the same net experience as if the drop down weren't there.</p>",
        "id": 440489468,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716549706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> There are project preferences (like spaces vs tabs) and interaction preferences, let me call them that way (like how you choose to interact with the LSP, your shortcuts etc). One kind of settings results in concretely different files, and the other is just about how you interact with your coding tool. So while your points are valid to attest that emacs is superior in this aspect, the analogy doesn't fit 100%</p>",
        "id": 440489647,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1716549773
    },
    {
        "content": "<p>I see your point, sorry for not getting it at first. I guess Mathlib blurs this distinction a bit because the \"stereotypical Mathlib user\" is a mathematician that doesn't use VS Code for anything else.</p>",
        "id": 440490174,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1716549976
    },
    {
        "content": "<p>Can we please have <a href=\"http://live.lean-lang.org\">live.lean-lang.org</a> NOT use <code>Enter</code> for completions? I find it silly to expect someone to type <code>Esc, Enter</code> to type a newline. I understand using <code>Enter</code> for completions is fine in many languages, but it's totally unpredictable when lean's language server will suggest completions.</p>",
        "id": 440496548,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1716552533
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"560559\">Richard Osborn</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440496548\">said</a>:</p>\n<blockquote>\n<p>Can we please have <a href=\"http://live.lean-lang.org\">live.lean-lang.org</a> NOT use <code>Enter</code> for completions? I find it silly to expect someone to type <code>Esc, Enter</code> to type a newline. I understand using <code>Enter</code> for completions is fine in many languages, but it's totally unpredictable when lean's language server will suggest completions.</p>\n</blockquote>\n<p>Other languages offer completions in a very similar manner to the Lean language server, so I'm not sure what you're getting at here. For example, when I enter a <code>W</code> in a Typescript file and wait for a moment, it offers me all identifiers starting with <code>W</code>.</p>",
        "id": 440497502,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716552974
    },
    {
        "content": "<p>It seems Richard is in the Massot-Morrison camp, also staring across of gulf of mutual incomprehension at how &lt;enter&gt; is meant to work. :-)</p>",
        "id": 440497881,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716553161
    },
    {
        "content": "<p>Typescript has <code>;</code> delimited expressions. This means the autocompletion will never trigger when you want to type a newline. Lean doesn't have a syntax which allows for this separation.<br>\nPersonally, I don't care about the <code>.vscode</code> file, but making <a href=\"http://live.lean-lang.org\">live.lean-lang.org</a> hard to use seems counterproductive.</p>",
        "id": 440498073,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1716553239
    },
    {
        "content": "<p>Is there an upstream tracking issue in vscode? If the behavior is truly incomprehensible to some of us, it seems like this should be raised upstream</p>",
        "id": 440498106,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1716553253
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"560559\">Richard Osborn</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440498073\">said</a>:</p>\n<blockquote>\n<p>Typescript has <code>;</code> delimited expressions. This means the autocompletion will never trigger when you want to type a newline. Lean doesn't have a syntax which allows for this separation.<br>\nPersonally, I don't care about the <code>.vscode</code> file, but making <a href=\"http://live.lean-lang.org\">live.lean-lang.org</a> hard to use seems counterproductive.</p>\n</blockquote>\n<p>Huh? My Typescript files certainly don't contain any semicolons. My pretty-printer ensures that those get removed, and this is true for many Typescript projects.</p>\n<p>It's true however that most languages (including Typescript) have keyword completions or keyword snippets at the top of the completion list, and we have already established that this would be the desired solution for this issue.</p>",
        "id": 440498711,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716553498
    },
    {
        "content": "<blockquote>\n<p>but making <a href=\"http://live.lean-lang.org/\">live.lean-lang.org</a> hard to use seems counterproductive</p>\n</blockquote>\n<p>As you can see in this very thread, I don't think it is at all established that exclusively using Tab for completions will make the web editor easier to use, so I find this claim confusing. People who have used a regular IDE in the past will be confused because it does not match their muscle memory and absolute beginners will be confused as well because they don't know what key to use to accept completions.</p>",
        "id": 440499361,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1716553708
    },
    {
        "content": "<p>Personally, I believe you should be able to type what you want without having to visually parse what the editor is doing. That isn't the case if lean uses <code>Enter</code> for completions. Plenty of programming languages are designed syntactically so that autocompletions won't trigger when you want to type a newline. Lean isn't one of those languages.</p>",
        "id": 440499849,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1716553882
    },
    {
        "content": "<p>I am a little embarrassed to confess that, until I read this thread, I did not know that Tab would have done what I got used to do with Enter.  This makes the change slightly less troublesome for me: in the meantime, I have been living with a modified, Git-tracked settings.json file and trying not to commit it in my PRs...</p>",
        "id": 440500001,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1716553930
    },
    {
        "content": "<p>I don't remember the last time I used <code>&lt;enter&gt;</code> to start a newline</p>",
        "id": 440500314,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716554048
    },
    {
        "content": "<p>I<br>\ndo</p>",
        "id": 440500350,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1716554066
    },
    {
        "content": "<p>Wait, what do you use?</p>",
        "id": 440500454,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716554117
    },
    {
        "content": "<p>Word wrap</p>",
        "id": 440500469,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716554123
    },
    {
        "content": "<p>In  code? This is just a silly claim, sorry.</p>",
        "id": 440500522,
        "sender_full_name": "Kim Morrison",
        "timestamp": 1716554158
    },
    {
        "content": "<p>In code</p>",
        "id": 440500599,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716554173
    },
    {
        "content": "<p>I have been writing programs for 10 years now, and at least since I used sublime and atom, the word wrap has been doing a perfectly fine job</p>",
        "id": 440500780,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716554239
    },
    {
        "content": "<p>We're talking about VSCode</p>",
        "id": 440500847,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1716554269
    },
    {
        "content": "<p>In vscode, it  is better, especially with code formatting tools</p>",
        "id": 440500870,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716554279
    },
    {
        "content": "<p>Lean doesn't have a code formatter. This is an unproductive tangent.</p>",
        "id": 440501004,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1716554316
    },
    {
        "content": "<p>The point is most newcomers who have used a recent text editor are not used to hitting enter at every line.</p>",
        "id": 440501064,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716554336
    },
    {
        "content": "<p>Maybe when formatting code or using some languages like haskell.</p>",
        "id": 440501089,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716554346
    },
    {
        "content": "<p>Anyway, I'm not sure this is the most productive direction for the conversion :)</p>",
        "id": 440501292,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716554405
    },
    {
        "content": "<p>Okay, maybe I subconsciously use enter without thinking, but for many people accustomed to modern editors and IDEs, we are also conscious about not hitting &lt;enter&gt; if we don't want an autocompletion. Unlike some users here, I use <code>&lt;space&gt; + &lt;backspace&gt;</code> in quick succession.</p>",
        "id": 440502115,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716554737
    },
    {
        "content": "<p>Right. Needing silly workarounds to just type <code>Enter</code> is exactly the problem. Again, I realize plenty of languages don't have this problem, but lean certainly does.</p>",
        "id": 440502748,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1716554999
    },
    {
        "content": "<p>What makes it worse, is that you essentially have to type <code>Esc, Enter</code> or  some other keyboard incantation every time or wait a second at the end of each line to check if autocompletion has something to say.</p>",
        "id": 440503500,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1716555275
    },
    {
        "content": "<p>That being said, if you have been using editors for sometime, there are quite a few such workarounds that are muscle memory. Ctrl + Z, Alt + Z, Esc, Ctrl + ~,  Ctrl + S, etc, so this is not unique to lean. As a long time vscode user, when there is an autocompletion menu and I can't hit enter to use it, I am going to find that a stumbling block. I am not exactly an expert as far as lean is concerned (far from it), so I would say this is definitely not an experts vs beginners issue.</p>",
        "id": 440503527,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716555284
    },
    {
        "content": "<p>I think leaving it to users with an option makes sense, both for the extension and the web editor (for which the option could be persisted with a cookie).</p>",
        "id": 440504126,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716555492
    },
    {
        "content": "<p>This conversation makes me really sad. I wish half the energy spent defending VSCode’s crazy UX could be spent on improving Lean support in actual editors like emacs or vi.</p>",
        "id": 440514497,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716558886
    },
    {
        "content": "<p>Since I was somewhat part if this conversation, let me stress that I am not personally defending VSCode UX, I was simply advocating for everyone being free to chose what they want.</p>",
        "id": 440514816,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716558990
    },
    {
        "content": "<p>Filippo, I think you typed your answer while I was editing my message.</p>",
        "id": 440515249,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716559127
    },
    {
        "content": "<p>I edited it because I realized it was not saying what I wanted to say.</p>",
        "id": 440515367,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716559156
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440515249\">said</a>:</p>\n<blockquote>\n<p>Filippo, I think you typed your answer while I was editing my message.</p>\n</blockquote>\n<p>True, and I apologize. Let me modify my message accordingly.</p>",
        "id": 440515431,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716559178
    },
    {
        "content": "<p>No need to apologize, it’s my mistake.</p>",
        "id": 440515884,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1716559299
    },
    {
        "content": "<p>If the web editor can be changed to allow people to choose their preference and have that persist, then great. Until then, I believe it should turn off <code>Enter</code> for autocomplete (and realistically it should be the default for new users too). I do have sympathy for those who learned to code in VSCode with its impractical defaults, but it would be nice if we didn't indoctrinate new users with bad habits.</p>",
        "id": 440517558,
        "sender_full_name": "Richard Osborn",
        "timestamp": 1716559783
    },
    {
        "content": "<p>Firstly, I don't think there is any consensus that this is a bad VSCode default. UX preferences can be highly personal choices. Secondly, the best person to answer questions about the web editor might be <span class=\"user-mention\" data-user-id=\"385895\">@Jon Eugster</span>.</p>",
        "id": 440518083,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716559950
    },
    {
        "content": "<p>sorry, this is a long thread and I've only skimmed it. Here are the available editor options: <a href=\"https://microsoft.github.io/monaco-editor/typedoc/variables/editor.EditorOptions.html\">monaco editor options</a>, and they are set <a href=\"https://github.com/leanprover-community/lean4web/blob/52dcd80505b04b4672394e3ed31abe77e0905c4d/client/src/Editor.tsx#L70-L91\">here for lean4web</a>. What's the name of the option to disable Enter as accepting suggestions?</p>",
        "id": 440532198,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1716564873
    },
    {
        "content": "<p>ah <code>acceptSuggestionOnEnter</code></p>",
        "id": 440532386,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1716564940
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"385895\">@Jon Eugster</span> :  I would <del>suggest</del> request making it a configurable persistent option.</p>",
        "id": 440532532,
        "sender_full_name": "Shreyas Srinivas",
        "timestamp": 1716564993
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean4web/commit/295261a98f1311d66cb0a6576795d73b8226f58d\">295261</a> and <a href=\"https://github.com/leanprover-community/lean4web/commit/1ed09cf5521421b7f2107220770c35d44db58ef8\">1ed09c</a> should turn <code>acceptSuggestionOnEnter</code> off by default and add an option to turn it on in the settings.</p>\n<p>If you have other suggestions how the default experience should be, I'm very open to tweak any of the settings from the link above.</p>\n<p>(I'll read the entire thread later to see people's opinions, but I feel having it turned off by default is the more natural choice, especially because on a mobile, it's almost impossible to type otherwise)</p>",
        "id": 440535783,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1716566297
    },
    {
        "content": "<p>If we're going to prevent <code>do</code> from autocompleting to <code>module docstring</code>, can we also prevent <code>by</code> from autocompleting to <code>Bornology</code>?</p>",
        "id": 440550409,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1716572010
    },
    {
        "content": "<p>Or <code>Asymptotics.IsBigO.trans_eventuallyEq</code> or whatever it is nowadays</p>",
        "id": 440554844,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1716573782
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/440346937\">said</a>:</p>\n<blockquote>\n<p>Do you hit esc to create a new line while typing?</p>\n</blockquote>\n<p>Do you hit Ctrl + Z on every single one-letter word you type? That's a genuine question: Since tab is also used for moving inside code snippets, I find myself having my <code>\\left(\\frac kn\\right)</code> (almost silently) turned into <code>\\left(\\frac kN\\right)</code> because vscode decided to \"autocomplete\" <code>n</code> to <code>N</code>.</p>",
        "id": 441408892,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717057957
    },
    {
        "content": "<p>Why would you type that in VSCode? It looks like TeX code.</p>",
        "id": 441519780,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1717091723
    },
    {
        "content": "<p>I'm looking really hard and those two strings are the same; is that a typo, or am I blind?</p>",
        "id": 441530472,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717095128
    },
    {
        "content": "<p>I was working under the assumption that the second one should be <code>frac kN</code></p>",
        "id": 441531888,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1717095583
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/441519780\">said</a>:</p>\n<blockquote>\n<p>Why would you type that in VSCode? It looks like TeX code.</p>\n</blockquote>\n<p>I use VSCode as my editor for writing TeX, maybe Yaël does too?</p>",
        "id": 441532243,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1717095686
    },
    {
        "content": "<p>(for what it's worth, lean turns <code>\\frac </code> into <code>¼</code>...)</p>",
        "id": 441532460,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1717095746
    },
    {
        "content": "<p>Yep, Brendan is exactly right</p>",
        "id": 441533016,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717095925
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/287929-mathlib4/topic/propose.20removing.20module.20docstring.20code.20suggestion/near/441533016\">said</a>:</p>\n<blockquote>\n<p>Yep, Brendan is exactly right</p>\n</blockquote>\n<p>Me too, when especially when I want a smooth git interaction</p>",
        "id": 441632555,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1717139182
    },
    {
        "content": "<p>It took a while, but I'm getting used to &lt;tab&gt; for autocompletion</p>",
        "id": 444084010,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1718134666
    },
    {
        "content": "<p>Same for me, actually.</p>",
        "id": 444098515,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1718139034
    }
]