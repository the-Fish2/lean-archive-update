[
    {
        "content": "<p>Hello, everyone!<br>\nI'm currently trying to prove some basic facts about conditional convergence and I'm currently stuck with some error.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">maxHeartbeats</span> <span class=\"mi\">500000</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Classical</span> <span class=\"n\">BigOperators</span> <span class=\"n\">Topology</span> <span class=\"n\">Filter</span> <span class=\"n\">Nat</span> <span class=\"n\">Finset</span> <span class=\"n\">Metric</span> <span class=\"n\">Real</span> <span class=\"n\">ENNReal</span> <span class=\"n\">NNReal</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">CondConvergesTo</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Tendsto</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">‚àë</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">atTop</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">HasCondSum</span> <span class=\"o\">[</span><span class=\"n\">AddCommMonoid</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">‚àÉ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">CondConvergesTo</span> <span class=\"n\">f</span> <span class=\"n\">a</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">epsilon_def</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">CondConvergesTo</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">‚Üî</span> <span class=\"bp\">‚àÄ</span> <span class=\"o\">(</span><span class=\"n\">Œµ</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">Œµ</span> <span class=\"bp\">‚Üí</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"bp\">‚â§</span> <span class=\"n\">n</span> <span class=\"bp\">‚Üí</span> <span class=\"bp\">‚Äñ</span><span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"bp\">‚àë</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"bp\">‚Äñ</span> <span class=\"bp\">&lt;</span> <span class=\"n\">Œµ</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">let</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">‚àë</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span>\n  <span class=\"k\">have</span> <span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"bp\">‚àë</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">‚Üê</span> <span class=\"n\">hg</span><span class=\"o\">]</span>\n  <span class=\"n\">exact</span> <span class=\"n\">NormedAddCommGroup.tendsto_atTop</span>\n\n<span class=\"kd\">theorem</span>  <span class=\"n\">cauchy_criterion</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">TopologicalSpace</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Ring</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">IsAbsoluteValue</span> <span class=\"o\">(</span><span class=\"n\">norm</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)]</span> <span class=\"o\">[</span><span class=\"n\">CauSeq.IsComplete</span> <span class=\"n\">Œ±</span> <span class=\"n\">norm</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">HasCondSum</span> <span class=\"n\">f</span> <span class=\"bp\">‚Üî</span> <span class=\"n\">IsCauSeq</span> <span class=\"n\">norm</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">=&gt;</span> <span class=\"o\">(</span><span class=\"bp\">‚àë</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">HasCondSum</span><span class=\"o\">]</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">IsCauSeq</span><span class=\"o\">]</span>\n  <span class=\"n\">constructor</span>\n  <span class=\"bp\">¬∑</span> <span class=\"n\">intro</span> <span class=\"o\">‚ü®</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">ha</span><span class=\"o\">‚ü©</span>\n    <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:=</span> <span class=\"n\">epsilon_def.1</span> <span class=\"n\">ha</span>\n</code></pre></div>\n<p>Last line in this code (which is where I'm currently trying to make progress) gives this error:<br>\n<code>(deterministic) timeout at 'whnf', maximum number of heartbeats (500000) has been reached (use 'set_option maxHeartbeats &lt;num&gt;' to set the limit)</code><br>\nAm I doing anything wrong?</p>",
        "id": 411835651,
        "sender_full_name": "Alex Nekrasov",
        "timestamp": 1704757442
    },
    {
        "content": "<p>Lean is probably utterly confused by your <code>[NormedAddCommGroup Œ±] [Ring Œ±]</code> combination which endows <code>Œ±</code>with two totally unrelated additions.</p>",
        "id": 411836168,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1704757761
    },
    {
        "content": "<p>Or maybe it is utterly confused by your <code>[NormedAddCommGroup Œ±] [TopologicalSpace Œ±]</code> combination which endows <code>Œ±</code>with two totally unrelated topologies.</p>",
        "id": 411836738,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1704758107
    },
    {
        "content": "<p>Oh, thanks! Turns out it was both. Replacing this three instances with <code>[NormedRing Œ±]</code> fixed everything.</p>",
        "id": 411836949,
        "sender_full_name": "Alex Nekrasov",
        "timestamp": 1704758261
    },
    {
        "content": "<p>We should probably make the warning on top of <code>Mathlib/Data/Real/CauSeq.lean</code> even more frightening. Something like: this is not the file you want to use if you are not refactoring our construction of real or p-adic numbers.</p>",
        "id": 411836957,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1704758271
    },
    {
        "content": "<p>I am pretty sure you wanted to state and prove:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span>  <span class=\"n\">cauchy_criterion</span> <span class=\"o\">[</span><span class=\"n\">NormedAddCommGroup</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">CompleteSpace</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">HasCondSum</span> <span class=\"n\">f</span> <span class=\"bp\">‚Üî</span> <span class=\"n\">CauchySeq</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">s</span> <span class=\"bp\">‚Ü¶</span> <span class=\"bp\">‚àë</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 411837045,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1704758317
    },
    {
        "content": "<p>And I am pretty sure this is already in Mathlib (but still a nice exercise if your want to learn).</p>",
        "id": 411837087,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1704758352
    },
    {
        "content": "<p>I looked at CauchySeq and it looked a little bit scary. CauSeq seemed more similar to what I had learned at university. That's why I decided to prove this statement. <br>\nAlso I couldn't find many theorems that used series convergence instead of <code>Summable</code>.  None of them used CauchySeq or CauSeq.</p>",
        "id": 411838264,
        "sender_full_name": "Alex Nekrasov",
        "timestamp": 1704758972
    },
    {
        "content": "<p><a href=\"https://www.moogle.ai/search/raw?q=a%20cauchy%20sequence%20over%20the%20naturals%20is%20one%20in%20which%20above%20a%20threshold%2C%20the%20norm%20is%20less%20than%20epsilon\">https://www.moogle.ai/search/raw?q=a%20cauchy%20sequence%20over%20the%20naturals%20is%20one%20in%20which%20above%20a%20threshold%2C%20the%20norm%20is%20less%20than%20epsilon</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=cauchySeq_bdd#doc\">docs#cauchySeq_bdd</a></p>",
        "id": 411840030,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1704759731
    },
    {
        "content": "<p>which brought me to <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=cauchySeq_iff_le_tendsto_0#doc\">docs#cauchySeq_iff_le_tendsto_0</a>, <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Metric.cauchySeq_iff#doc\">docs#Metric.cauchySeq_iff</a> also</p>",
        "id": 411840183,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1704759801
    }
]