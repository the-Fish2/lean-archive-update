[
    {
        "content": "<p>In case anyone is interested, here is my progress on the properties of Coxeter groups.</p>\n<p><a href=\"https://github.com/trivial1711/mathlib4/blob/trivial1711-reduced-words-in-coxeter-groups/Mathlib/GroupTheory/SpecificGroups/Coxeter.lean\">https://github.com/trivial1711/mathlib4/blob/trivial1711-reduced-words-in-coxeter-groups/Mathlib/GroupTheory/SpecificGroups/Coxeter.lean</a></p>\n<p>I have proved the basic properties of the length function (defined on any <code>CoxeterSystem</code>). I also have an outline for the basic properties of the standard geometric representation and the associated roots and an outline for the (strong) left and right exchange properties and the deletion property.</p>\n<p>There are a few important goals that will be in reach once these proofs are completed: Matsumoto's theorem, the classification of finite irreducible Coxeter groups (which may be a little easier once the representation theory of finite groups is more developed), and the combinatorial descriptions of Coxeter groups of type A, B, and D.</p>\n<p>The code is reasonably well-documented, though some of the docstrings are currently broken. I plan to move a lot of this material into separate files soon.</p>\n<ul>\n<li>Does anyone have any feedback on my code? I am still relatively new to Lean, so it is possible that I have done some things wrong.</li>\n<li>Does this seem like something that could potentially make it into Mathlib?</li>\n<li>Is anyone interested in helping to fill in some of the proofs?</li>\n</ul>",
        "id": 426061335,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710224684
    },
    {
        "content": "<blockquote>\n<p>Does this seem like something that could potentially make it into Mathlib?</p>\n</blockquote>\n<p>Yes, certainly! Start with PRs of small chunks!</p>",
        "id": 426073258,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1710231303
    },
    {
        "content": "<p>Hello, I've just started a pull request. <a href=\"https://github.com/leanprover-community/mathlib4/pull/11387\">https://github.com/leanprover-community/mathlib4/pull/11387</a></p>\n<p>For now, it doesn't contain anything about the standard geometric representation. It just contains the basic properties of length, inversions, reflections, and inversion sequences.</p>\n<p>Thanks for the help.</p>",
        "id": 426664485,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710470847
    },
    {
        "content": "<p>At first glance, this looks great! I would suggest splitting this in a few dependent PRs:<br>\n1) the mostly straightforward refactor part (addition of the <code>isCoxeter</code> field to <code>CoxeterSystem</code>) -- actually I favored more the design with <code>IsCoxeter</code> as a typeclass, I think it was originally a mistake to change it to a structure only.<br>\n2) the very basic API about words in Coxeter systems (1 + 2 could be a single PR).<br>\n3) the more advanced results on words and the length (this could be further split in at least 2 PRs).</p>",
        "id": 426757866,
        "sender_full_name": "Joël Riou",
        "timestamp": 1710513836
    },
    {
        "content": "<p>Thank you for the feedback. Should I change IsCoxeter to a typeclass (maybe renaming it to CoxeterMatrix) then?</p>",
        "id": 426785060,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710521834
    },
    {
        "content": "<p>The name <code>IsCoxeter</code> is fine.</p>",
        "id": 426820846,
        "sender_full_name": "Joël Riou",
        "timestamp": 1710536256
    },
    {
        "content": "<p>I've split it into two pull requests:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/11406\">https://github.com/leanprover-community/mathlib4/pull/11406</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib4/pull/11408\">https://github.com/leanprover-community/mathlib4/pull/11408</a></p>",
        "id": 426824009,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710537769
    },
    {
        "content": "<p>I'll work on rewriting the proofs to satisfy the linter (and make them more readable) now</p>",
        "id": 426827898,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710539574
    },
    {
        "content": "<p>We actually have a group working on Coxeter groups  here.</p>\n<p><a href=\"https://gitee.com/hoxide/coxeter4/tree/master/Coxeter\">https://gitee.com/hoxide/coxeter4/tree/master/Coxeter</a> </p>\n<p>We are almost done with the strong exchange properties and basic definitions of Hecke algebras. We are currently setting  up the Blueprint as well. The short term goals aim for the El-shellability of Bruhat intervals, defining R polynomials and Kazhdan-Lusztig polynomials.  </p>\n<p>We do not work on the  classification though.</p>",
        "id": 426887207,
        "sender_full_name": "Huanchen Bao",
        "timestamp": 1710591915
    },
    {
        "content": "<p>Thank you for telling me about this. I think I am going to continue trying to build on the Coxeter groups in Mathlib, working toward the goals I outlined at the beginning of this topic. I am currently working on proving that the standard geometric representation is well-defined. However, please tell me if this would make things more difficult for you or unnecessarily duplicate work.</p>",
        "id": 426915346,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710616992
    },
    {
        "content": "<p>Hello, I would like to give an update on my current progress on this. I currently have six pull requests in the queue.</p>\n<ol>\n<li><del>#11493:</del> Prove that the generators of any presented group generate the presented group. (That is, the <code>Subgroup.closure</code> of the set of generators is equal to <code>⊤</code>.) This is a small pull request and not specific to Coxeter groups.</li>\n<li><del>#11436:</del> Prove some general theorems about Antiperiodic functions; you can shift by an integer multiple <code>n</code> of the period by multiplying by <code>n.negOnePow</code>. Also specialize them to <code>Real.sin</code> and <code>Real.cos</code>. This isn't specific to Coxeter groups either, but it is a little more involved.</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/11406\">#11406</a>: The basic theory of Coxeter groups, built on Newell Jensen's earlier work. Define simple reflections and words. Add some API for lifting homomorphisms. Also, improve the documentation. <del>Depends on <a href=\"https://github.com/leanprover-community/mathlib4/pull/11493\">#11493</a></del>.</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/11465\">#11465</a>: Define the length function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">ℓ</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>W</mi><mo>→</mo><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\ell \\colon W \\to \\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">ℓ</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span>. Use the length function to define reduced words and descents. Prove their basic properties. Depends on <a href=\"https://github.com/leanprover-community/mathlib4/pull/11406\">#11406</a>.</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/11466\">#11466</a>: Define reflections, inversions, and the inversion sequence of a word. Depends on <a href=\"https://github.com/leanprover-community/mathlib4/pull/11465\">#11465</a>.</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib4/pull/11526\">#11526</a>: Define the standard geometric representation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding=\"application/x-tex\">\\rho</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span></span></span></span> and the simple roots <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. Prove that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding=\"application/x-tex\">\\rho</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span></span></span></span> is faithful and that it preserves the standard bilinear form. Depends on <a href=\"https://github.com/leanprover-community/mathlib4/pull/11465\">#11465</a>, <del>#11436</del> (but not <a href=\"https://github.com/leanprover-community/mathlib4/pull/11466\">#11466</a>).</li>\n</ol>\n<p>I know this is a very large amount to review, so I understand if it takes a while. I'm happy to discuss any of it whenever.</p>\n<p>Also, I want to apologize for revising some of these pull requests so much after already having requested reviews for them. I'm  going to step back for now so that the reviewers can take a look and not worry about anything changing.</p>",
        "id": 427883133,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710926496
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span>  for reviewing <a href=\"https://github.com/leanprover-community/mathlib4/pull/11493\">#11493</a>!</p>",
        "id": 428054267,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1710993749
    },
    {
        "content": "<p>Hi, thanks so much to <span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> for helping me with <a href=\"https://github.com/leanprover-community/mathlib4/pull/11406\">#11406</a>. I've decided to split it into two PRs. The first is <a href=\"https://github.com/leanprover-community/mathlib4/pull/11836\">#11836</a>, which refactors the existing Coxeter groups file. The second is <a href=\"https://github.com/leanprover-community/mathlib4/pull/11406\">#11406</a>, which adds some basic theorems about simple reflections, lifting homomorphisms, and words.</p>\n<p>I think <span class=\"user-mention\" data-user-id=\"443984\">@Newell Jensen</span>, the author of the existing Coxeter groups file, may be interested in looking at <a href=\"https://github.com/leanprover-community/mathlib4/pull/11836\">#11836</a> in particular.</p>",
        "id": 430705615,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1712029847
    },
    {
        "content": "<p>Hey Mitchell.  I have been too tied up with other work lately to be of much help (no Lean for me for the past 1.5 months unfortunately <span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span> ).   I just left a quick review for <a href=\"https://github.com/leanprover-community/mathlib4/pull/11836\">#11836</a> (in which the below is repeated some).</p>\n<p>I took a quick glance and I like the idea of breaking out the matrix parts to its own separate file.  One thing I did notice though is that even though <code>M.coxeterMatrix</code> might adhere to naming conventions, I would think (I haven't checked with other parts of mathlib and I don't remember off the top of my head) that since Coxeter is a name of someone we sould keep it capitalized.  If this is not done in mathlib I would argue that it should be that way!  Coxeter and the other greats deserve this respect IMHO! :)</p>\n<p>Thanks for giving Coxeter Groups some love and maybe sometime in the future I will have more time to work on it some more myself.  Thanks!</p>",
        "id": 430709513,
        "sender_full_name": "Newell Jensen",
        "timestamp": 1712032646
    },
    {
        "content": "<p>Thank you for the review!</p>",
        "id": 430713278,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1712034687
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"443984\">Newell Jensen</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Progress.20on.20Coxeter.20groups/near/430709513\">said</a>:</p>\n<blockquote>\n<p>even though <code>M.coxeterMatrix</code> might adhere to naming conventions, I would think (I haven't checked with other parts of mathlib and I don't remember off the top of my head) that since Coxeter is a name of someone we sould keep it capitalized.</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=gaussSum#doc\">docs#gaussSum</a> would like to disagree</p>",
        "id": 430722613,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712040454
    },
    {
        "content": "<p>I think that so many mathematical objects are named after people that it would render the new naming convention mostly useless if we tried to capitalise them</p>",
        "id": 430722739,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1712040501
    },
    {
        "content": "<p>Hello, I just realized that all the naming can be a whole lot cleaner if we get rid of <code>IsCoxeter</code> and just create a subtype <code>CoxeterMatrix B</code> of <code>Matrix B B \\N</code> with its own API</p>",
        "id": 430868832,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1712090109
    },
    {
        "content": "<p>This avoids cluttering the <code>Matrix</code> namespace with Coxeter stuff and it reduces the number of variables that need to be carried around everywhere</p>",
        "id": 430869095,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1712090215
    },
    {
        "content": "<p>This also gets around the current issue that <code>Matrix.coxeterGroup</code> can fail to be a Coxeter group; I will replace it with <code>CoxeterMatrix.coxeterGroup</code></p>",
        "id": 430871040,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1712091015
    },
    {
        "content": "<p>Actually, can I just call it <code>CoxeterMatrix.group</code>?</p>",
        "id": 430904310,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1712109754
    },
    {
        "content": "<p>Okay, I've done it: <a href=\"https://github.com/leanprover-community/mathlib4/pull/11836\">#11836</a>. I am reasonably happy with how everything is named now.</p>",
        "id": 430908381,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1712112491
    },
    {
        "content": "<p>Apparently there is a <a href=\"https://www.majiajun.org/formalizing-coxeter-group-hecke-algebra-and-kazhdan-lusztig-theory-in-lean/\">separate project</a> (and a presentation <a href=\"https://www.majiajun.org/talks-and-conferences/\">here</a> as well). (found through <a href=\"#narrow/stream/287929-mathlib4/topic/Xiamen.20University.20Malaysia.20LEAN.20Group.3A.20Seeking.20to.20Contribute/near/433830965\">this thread</a> on Dr. Ma Jiajun's homepage.</p>",
        "id": 433861765,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1713382698
    },
    {
        "content": "<p>I have talked to the organizers of that project and I am about to fly to Singapore, where we will discuss how to best combine our two approaches.</p>",
        "id": 433863609,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1713383418
    },
    {
        "content": "<p>Will you be around on Monday? I'm giving a talk in Singapore!</p>",
        "id": 433864619,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713383814
    },
    {
        "content": "<p>Yeah, I'm going to the workshop</p>",
        "id": 433864652,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1713383830
    },
    {
        "content": "<p>I'm looking forward to meeting you!</p>",
        "id": 433864713,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1713383849
    },
    {
        "content": "<p>Hello everyone! I am currently at the <a href=\"https://ims.nus.edu.sg/events/formalproofslean/\">Workshop on Formal Proofs and Lean</a> at the National University of Singapore.</p>\n<p>In case anyone is curious, here is a summary of the current situation regarding the formalization of the theory of Coxeter groups.</p>\n<p>Currently, there are two separate projects.</p>\n<ul>\n<li>Project A: The project initiated by <span class=\"user-mention\" data-user-id=\"443984\">@Newell Jensen</span> and continued by me. This is aimed at building the basic theory of Coxeter groups. It contains some foundational results about the length function, reduced words, descents, inversions, and the standard geometric representation. Some of this project is already on the master branch of mathlib (see <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">here</a>). The rest is contained within the mathlib pull requests <a href=\"https://github.com/leanprover-community/mathlib4/pull/11406\">#11406</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/11465\">#11465</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/11466\">#11466</a>, and <a href=\"https://github.com/leanprover-community/mathlib4/pull/11526\">#11526</a>. Branch <a href=\"https://github.com/leanprover-community/mathlib4/tree/trivial1711-coxeter-groups-all\">mathlib4/trivial1711-coxeter-groups-all</a> contains the contents of all of these pull requests. This project was set up with a view toward Matsumoto's theorem and the classification of finite irreducible Coxeter groups, but it is not actively being worked on.</li>\n<li>Project B: The Xiamen University/National University of Singapore/Renmin University project. This is currently separate from mathlib and can be found <a href=\"https://github.com/NUS-Math-Formalization/coxeter\">here</a>. The team consists primarily of undergraduates and the project is overseen by Professor <span class=\"user-mention\" data-user-id=\"701607\">@Huanchen Bao</span> at NUS. The primary current goal is to define the Bruhat order on a Coxeter group and to establish the basic properties of Bruhat intervals. There are some other stretch goals, such as the theory of Hecke algebras.</li>\n</ul>\n<p>We are currently working on making these two projects compatible, and we have decided to do so by refactoring project B to build upon the definitions and theorems from project A. This is a sizable amount of work, but we agreed that project B was in need of a refactor anyway, in part to align it more closely to the conventions of mathlib. The team has been handling this new work very well and making an impressive amount of progress. (Fortunately, much of project B is completely independent from project A, and that part doesn't need to be changed at all.)</p>\n<p>Pull requests <a href=\"https://github.com/leanprover-community/mathlib4/pull/11406\">#11406</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/11465\">#11465</a>, <a href=\"https://github.com/leanprover-community/mathlib4/pull/11466\">#11466</a>, and <a href=\"https://github.com/leanprover-community/mathlib4/pull/11526\">#11526</a> are still open. Now, the contents of these pull requests are actively being used, so any feedback on how to make the API friendlier is highly appreciated.</p>\n<p>P.S. Thanks so much, Professor Bao, for inviting me to this workshop. I've been having a great time.</p>",
        "id": 435160706,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1713955431
    },
    {
        "content": "<p>Did someone already prove that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (aka <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Equiv.Perm#doc\">docs#Equiv.Perm</a>) is a Coxeter group?</p>",
        "id": 439825902,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716300206
    },
    {
        "content": "<p>I just showed it has the proper generators <a href=\"https://github.com/leanprover-community/mathlib4/pull/13057/files#diff-002a81ca713a90bca12e53df852318e06fb825b04c9224353a4952eb445a5a75R128-R129\">here</a> :)</p>",
        "id": 439846269,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1716306108
    },
    {
        "content": "<p>Nice!</p>",
        "id": 439886088,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716319082
    },
    {
        "content": "<p>I haven't formalized the proof that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is a Coxeter group, and I think the NUS group has not either. I believe the easiest way to do so is by proving the following lemma (or something similar), which can be used to combinatorially describe every finite irreducible Coxeter group.</p>\n<h2>Lemma.</h2>\n<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> be a group, let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> be a real inner product space, and let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>W</mi><mo>→</mo><mi>G</mi><mi>L</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\rho \\colon W \\to GL(V)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">L</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">)</span></span></span></span> be a representation. Suppose that there exists a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mo lspace=\"0em\" rspace=\"0em\">∙</mo></msub><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>B</mi><mo>→</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">s_{\\bullet} \\colon B \\to W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1611em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∙</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span>, and a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mo lspace=\"0em\" rspace=\"0em\">∙</mo></msub><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>B</mi><mo>→</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha_{\\bullet} \\colon B \\to V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1611em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∙</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> such that:</p>\n<ul>\n<li>For all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">i \\in B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6986em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, we have that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\rho(s_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> is the orthogonal reflection in the vector <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</li>\n<li>The <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> are linearly independent.</li>\n<li>The <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> generate <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span>.</li>\n<li>For all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo separator=\"true\">,</mo><msup><mi>i</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>∈</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">i, i&#x27; \\in B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, there exists <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>m</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><msup><mi>i</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></msub><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi><mo>∪</mo><mo stretchy=\"false\">{</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">m  = m_{i, i&#x27;} \\in \\mathbb{N} \\cup \\{\\infty\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8252em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">∞</span><span class=\"mclose\">}</span></span></span></span> such that the inner product <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><msub><mi>α</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>α</mi><msup><mi>i</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></msub><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle \\alpha_i, \\alpha_{i&#x27;} \\rangle</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">⟩</span></span></span></span> evaluates to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>2</mn><mi>cos</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>π</mi><mi mathvariant=\"normal\">/</mi><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">-2\\cos(\\pi / m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span>.</li>\n</ul>\n<p>Then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> is a Coxeter group with simple reflections <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and Coxeter matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>m</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><msup><mi>i</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></msub><msub><mo stretchy=\"false\">)</mo><mrow><mi>i</mi><mo separator=\"true\">,</mo><msup><mi>i</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>∈</mo><mi>B</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">(m_{i, i&#x27;})_{i, i&#x27; \\in B}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>.</p>\n<p>This lemma is an easy consequence of the fact that the standard geometric representation of a Coxeter group is faithful. One can show that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is a Coxeter group by taking <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo>=</mo><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">W = S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo>=</mo><msup><mi mathvariant=\"double-struck\">R</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">V = \\mathbb{R}^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">B = \\{1, \\ldots, n-1\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">s_i = (i, i+1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub><mo>=</mo><msub><mi>e</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha_i = e_{i + 1} - e_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7917em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 439931813,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1716337048
    },
    {
        "content": "<p>That sounds like the correct mathlib way of doing things, but what's a reference for the faithfulness? For this particular example (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>) though, it's possible to use <a href=\"https://groupprops.subwiki.org/wiki/Symmetric_group_on_a_finite_set_is_a_Coxeter_group#The_size_of_the_Coxeter_group_is_at_most\">this argument</a> by induction and counting cosets.</p>",
        "id": 440370710,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1716486444
    },
    {
        "content": "<p>It's proved faithful in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12880\">#12880</a>, but you might need to wait a bit for that.</p>",
        "id": 440370903,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1716486546
    },
    {
        "content": "<p>Hi, I decided that it was important to redo all the code about geometric representations in a way that works over any commutative ring, and which allows defining \"a\" geometric representation rather than merely \"the\" geometric representation. So that's what I'm working on right now. It's quite involved, but I just finished what I think is probably the hardest part: <a href=\"https://github.com/leanprover-community/mathlib4/pull/13270\">#13270</a>.</p>\n<p>My approach is certainly unorthodox, so I would be very happy with feedback; not only on the code, but also on whether what I'm trying to do is even worthwhile.</p>\n<p>See also this older comment: <a href=\"https://github.com/leanprover-community/mathlib4/pull/11526#issuecomment-2123707628\">https://github.com/leanprover-community/mathlib4/pull/11526#issuecomment-2123707628</a></p>",
        "id": 440788952,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1716793686
    },
    {
        "content": "<p>What's proved in <a href=\"https://github.com/leanprover-community/mathlib4/pull/13270\">#13270</a> is a formula for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>r</mi><mn>1</mn></msub><msub><mi>r</mi><mn>2</mn></msub><msup><mo stretchy=\"false\">)</mo><mi>m</mi></msup><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">(r_1 r_2)^m z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">r_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">r_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> are any reflections on a module <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> is an element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>.</p>\n<p>This formula works over any ring, so it can be used (for example) to construct reflection representations of crystallographic Coxeter groups over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span>, which I am sure will eventually be of interest.</p>\n<p>Unfortunately, it is rather messy. It involves the Cheybshev <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>-polynomials <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S_n(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>, which are related to the usual Cheybshev polynomials of the second kind by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mn>2</mn><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>U</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S_n(2x) = U_n(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 440790126,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1716794159
    },
    {
        "content": "<p>That's a massive effort! But it looks like you've already split it up into three PRs. I'll try to review them</p>",
        "id": 440869441,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716820934
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"701607\">@Huanchen Bao</span> Do you have any thoughts on this? I don't want to go forward with this if it would make it more difficult for the NUS group. I think this material is disjoint from what the NUS group is doing, but this does mean that the exchange properties are going to be proved by <code>sorry</code> in <a href=\"https://github.com/NUS-Math-Formalization/coxeter\">https://github.com/NUS-Math-Formalization/coxeter</a> for a little while longer.</p>",
        "id": 440909748,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1716838633
    },
    {
        "content": "<p>I think your work is quite helpful for classifying finite type root systems over characteristic zero fields.  I had been trying, without success, to find a non-messy but general description of powers of pairs of reflections.</p>",
        "id": 440964157,
        "sender_full_name": "Scott Carnahan",
        "timestamp": 1716871977
    },
    {
        "content": "<p>Thanks for the checking. I think the issue is minor. I currently have a student working the shelling of posets. But this is independent of your work here. We are going to resume the Coxeter group part most likely in the fall semester later. I can check with you on the status then.</p>",
        "id": 441444921,
        "sender_full_name": "Huanchen Bao",
        "timestamp": 1717071480
    },
    {
        "content": "<p>Probably stupid remark, but is this related to <span class=\"user-mention\" data-user-id=\"318709\">@Sophie Morel</span>'s shellability of ASC?</p>",
        "id": 441446179,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1717071951
    },
    {
        "content": "<p>Can you be more specific?</p>",
        "id": 441448576,
        "sender_full_name": "Huanchen Bao",
        "timestamp": 1717072831
    },
    {
        "content": "<p>I only defined the Bruhat order on the symmetric group, in order to show shellability of its Coxeter complex.</p>",
        "id": 441452148,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1717074139
    },
    {
        "content": "<p>I see. We are trying to formalized the EL-shellability on Bruhat intervals. This has been the joint effort of  many groups as mentioned in Mitchell's earlier message. On one side, one needs to show the EL-labelling implies the shelling. This part is purely about posets. Then one needs to show the Bruhat intervals admit EL-labellings. This is much harder. Which method you used to show shelling? Can you share the link to the lean code, or it is in mathlib?</p>",
        "id": 441454787,
        "sender_full_name": "Huanchen Bao",
        "timestamp": 1717074998
    },
    {
        "content": "<p>It's not in mathlib, as I am quite slow about PRing. The whole project including applications to the Coxeter complex and stuff about the category of simplicial complexes (and also some useless files) is there:<br>\n<a href=\"https://github.com/smorel394/ASC\">https://github.com/smorel394/ASC</a><br>\nThere is also a mathlib branch with the basics of abstract simplicial complexes there:<br>\n<a href=\"https://github.com/leanprover-community/mathlib4/tree/AbstractSimplicialComplex\">https://github.com/leanprover-community/mathlib4/tree/AbstractSimplicialComplex</a></p>",
        "id": 441457855,
        "sender_full_name": "Sophie Morel",
        "timestamp": 1717075987
    }
]