[
    {
        "content": "<p>MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Set.Pointwise.Basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">OrderedCommGroup</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">BddBelow</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">BddAbove</span> <span class=\"o\">(</span><span class=\"n\">s</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span><span class=\"bp\">?</span> <span class=\"c1\">-- Try this: simp only [_private.Mathlib.Data.Set.Pointwise.Basic.0.Set.involutiveInv._eq_1]</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 410443294,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1703863616
    },
    {
        "content": "<p>I think this is the same lemma as <a href=\"#narrow/stream/270676-lean4/topic/simp.20tracing.20suggests.20private.20simp.20theorems/near/406552591\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/simp.20tracing.20suggests.20private.20simp.20theorems/near/406552591</a></p>",
        "id": 410445157,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1703864764
    }
]