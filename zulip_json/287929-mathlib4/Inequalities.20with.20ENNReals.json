[
    {
        "content": "<p>I'm trying to prove some <code>edist</code> inequalities in a metric space, and I'm having some trouble getting <code>ENNReal</code>s to cooperate. In particular, with this code</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.Polish</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.Polish</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.CantorScheme</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Bases</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Pairing</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">mα</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">tα</span> <span class=\"o\">:</span> <span class=\"n\">MetricSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">sα</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace.SeparableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">mβ</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">tβ</span> <span class=\"o\">:</span> <span class=\"n\">MetricSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">sβ</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace.SeparableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">fmeas</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">sq_minus_diag</span> <span class=\"o\">(</span><span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">x.1</span> <span class=\"bp\">∈</span> <span class=\"n\">U</span> <span class=\"bp\">∧</span> <span class=\"n\">x.2</span> <span class=\"bp\">∈</span> <span class=\"n\">U</span> <span class=\"bp\">∧</span> <span class=\"n\">x.1</span> <span class=\"bp\">≠</span> <span class=\"n\">x.2</span><span class=\"o\">}</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">TopologicalSpace</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">decomp_of_sq_minus_diag</span> <span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ENNReal</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">uclosed</span> <span class=\"o\">:</span> <span class=\"n\">IsClosed</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">unonempty</span> <span class=\"o\">:</span> <span class=\"n\">Set.Nonempty</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">εpos</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n  <span class=\"n\">sq_minus_diag</span> <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"bp\">⋃</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">w</span> <span class=\"n\">n</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">))</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">EMetric.diam</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">EMetric.diam</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"c1\">-- Prove u is separable</span>\n    <span class=\"k\">have</span> <span class=\"n\">Usep</span> <span class=\"o\">:</span> <span class=\"n\">SeparableSpace</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">apply</span> <span class=\"n\">IsSeparable.separableSpace</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">IsSeparable</span><span class=\"o\">]</span>\n      <span class=\"n\">choose</span> <span class=\"n\">D</span> <span class=\"n\">Dctbl</span> <span class=\"n\">Ddense</span> <span class=\"n\">using</span> <span class=\"n\">exists_countable_dense</span> <span class=\"n\">α</span>\n      <span class=\"n\">use</span> <span class=\"n\">D</span>\n      <span class=\"n\">constructor</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Dctbl</span>\n      <span class=\"n\">unfold</span> <span class=\"n\">Dense</span> <span class=\"n\">at</span> <span class=\"n\">Ddense</span>\n      <span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">_</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Ddense</span> <span class=\"n\">x</span>\n    <span class=\"c1\">-- Pick a dense sequence from u</span>\n    <span class=\"k\">have</span> <span class=\"n\">unonempty</span> <span class=\"o\">:</span> <span class=\"n\">Nonempty</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.nonempty_iff_ne_empty'</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">Set.nonempty_iff_ne_empty</span><span class=\"o\">]</span>\n      <span class=\"n\">exact</span> <span class=\"n\">unonempty</span>\n    <span class=\"n\">choose</span> <span class=\"n\">D</span> <span class=\"n\">Ddense</span> <span class=\"n\">using</span> <span class=\"n\">exists_dense_seq</span> <span class=\"n\">u</span>\n    <span class=\"c1\">-- Define v and w</span>\n    <span class=\"k\">let</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"bp\">∅</span> <span class=\"k\">else</span>\n      <span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">EMetric.closedBall</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)))</span>\n    <span class=\"k\">let</span> <span class=\"n\">w</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"n\">u</span> <span class=\"k\">else</span>\n      <span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">EMetric.closedBall</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)))</span>\n    <span class=\"c1\">-- Prove the decomposition works</span>\n    <span class=\"k\">have</span> <span class=\"n\">hdecomp</span> <span class=\"o\">:</span> <span class=\"bp\">⋃</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">w</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">sq_minus_diag</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">ext</span> <span class=\"n\">x</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span>\n      <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">hx</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_iUnion</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span>\n        <span class=\"n\">cases'</span> <span class=\"n\">hx</span> <span class=\"k\">with</span> <span class=\"n\">i</span> <span class=\"n\">hi</span>\n        <span class=\"n\">dsimp</span> <span class=\"n\">at</span> <span class=\"n\">hi</span><span class=\"bp\">;</span> <span class=\"n\">split</span> <span class=\"n\">at</span> <span class=\"n\">hi</span>\n        <span class=\"bp\">.</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Set.empty_prod</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_empty_iff_false</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hi</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ge_iff_le</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_prod</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_inter_iff</span><span class=\"o\">,</span>\n          <span class=\"n\">EMetric.mem_closedBall</span><span class=\"o\">,</span> <span class=\"n\">le_min_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hi</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">sq_minus_diag</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_setOf_eq</span><span class=\"o\">]</span>\n        <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hi.1.1</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hi.2.1</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">edist_eq_zero</span><span class=\"o\">]</span>\n        <span class=\"n\">intro</span> <span class=\"n\">hdist</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">edist_triangle4</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">i.1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">i.2</span><span class=\"o\">)</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hdist</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont2</span> <span class=\"o\">:=</span> <span class=\"n\">add_le_add</span> <span class=\"n\">hi.1.2.2</span> <span class=\"n\">hi.2.2.2</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">add_zero</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont</span> <span class=\"n\">hcont2</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">edist_comm</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont2</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont3</span> <span class=\"o\">:=</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span> <span class=\"n\">hcont2</span>\n        <span class=\"n\">ring_nf</span> <span class=\"n\">at</span> <span class=\"n\">hcont3</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- This one</span>\n      <span class=\"gr\">sorry</span>\n    <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I've managed to reduce my first goal (the marked <code>sorry</code>) to proving that it's a problem that <code>edist x y ≤ (1/3) * edist x y * 2</code> when we know <code>edist x y ≠ 0</code>. When I initially proved this for <code>dist</code>, <code>​le_mul_iff_one_le_left</code> was very useful, but it doesn't work for <code>ENNReals</code>. Any ideas what I could do?</p>",
        "id": 430108276,
        "sender_full_name": "Connor Gordon",
        "timestamp": 1711642535
    },
    {
        "content": "<p>In the web-browser, the <code>dsimp</code> on line 54 makes no progress.</p>",
        "id": 430108866,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1711642682
    },
    {
        "content": "<p>BTW, I spent most of today implementing <code>ENNRat</code>:<br>\n<a href=\"https://github.com/madvorak/vcsp/blob/main/VCSP/ENNRationals.lean\">https://github.com/madvorak/vcsp/blob/main/VCSP/ENNRationals.lean</a></p>\n<p>I wasn't planning to contribute them to Mathlib, but I wanted them for some side quests in my project.</p>",
        "id": 430140266,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1711650568
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Inequalities.20with.20ENNReals/near/430108866\">said</a>:</p>\n<blockquote>\n<p>In the web-browser, the <code>dsimp</code> on line 54 makes no progress.</p>\n</blockquote>\n<p>That's really weird, it does on my end (in vscode). It's meant to unpack the definition of <code>v</code> and <code>w</code>, and <code>unfold</code> was getting mad at me.</p>",
        "id": 430174870,
        "sender_full_name": "Connor Gordon",
        "timestamp": 1711666984
    },
    {
        "content": "<p>That difference is down to a relatively recent change in <code>dsimp</code> (and <code>simp</code>). You can use <code>dsimp [v, w]</code> or <code>unfold_let v w</code>.</p>",
        "id": 430176088,
        "sender_full_name": "Richard Copley",
        "timestamp": 1711667718
    },
    {
        "content": "<p>I've done a lot more work, and I've reduced the problem to a bunch of <code>sorry</code>s that feel like they should be immediate/fast, but I don't know how to do them. I've annotated each one with what needs to be proved. If anyone has any ideas on how I could accomplish some or all of these they would be greatly appreciated. (Also needed to sorry out some things to meet the character limit; also annotated those.)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.Polish</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.Polish</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.CantorScheme</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Bases</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Pairing</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">mα</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">tα</span> <span class=\"o\">:</span> <span class=\"n\">MetricSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">sα</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace.SeparableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">mβ</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">tβ</span> <span class=\"o\">:</span> <span class=\"n\">MetricSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">sβ</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace.SeparableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">fmeas</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">sq_minus_diag</span> <span class=\"o\">(</span><span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">x.1</span> <span class=\"bp\">∈</span> <span class=\"n\">U</span> <span class=\"bp\">∧</span> <span class=\"n\">x.2</span> <span class=\"bp\">∈</span> <span class=\"n\">U</span> <span class=\"bp\">∧</span> <span class=\"n\">x.1</span> <span class=\"bp\">≠</span> <span class=\"n\">x.2</span><span class=\"o\">}</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">TopologicalSpace</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">denseRange_aux</span> <span class=\"o\">{</span><span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MetricSpace</span> <span class=\"n\">γ</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">DenseRange</span> <span class=\"n\">f</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ENNReal</span><span class=\"o\">,</span>\n  <span class=\"n\">r</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">edist</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span> <span class=\"c1\">-- Done; removed for length</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">decomp_of_sq_minus_diag</span> <span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ENNReal</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">uclosed</span> <span class=\"o\">:</span> <span class=\"n\">IsClosed</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">unonempty</span> <span class=\"o\">:</span> <span class=\"n\">Set.Nonempty</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">εpos</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n  <span class=\"n\">sq_minus_diag</span> <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"bp\">⋃</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">w</span> <span class=\"n\">n</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">))</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">EMetric.diam</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">EMetric.diam</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"c1\">-- Pick a point in u (to be used later)</span>\n    <span class=\"k\">have</span> <span class=\"n\">unonempty'</span> <span class=\"o\">:=</span> <span class=\"n\">unonempty</span>\n    <span class=\"n\">choose</span> <span class=\"n\">x0</span> <span class=\"n\">hx0</span> <span class=\"n\">using</span> <span class=\"n\">unonempty'</span>\n    <span class=\"c1\">-- Prove u is separable</span>\n    <span class=\"k\">have</span> <span class=\"n\">Usep</span> <span class=\"o\">:</span> <span class=\"n\">SeparableSpace</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">apply</span> <span class=\"n\">IsSeparable.separableSpace</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">IsSeparable</span><span class=\"o\">]</span>\n      <span class=\"n\">choose</span> <span class=\"n\">D</span> <span class=\"n\">Dctbl</span> <span class=\"n\">Ddense</span> <span class=\"n\">using</span> <span class=\"n\">exists_countable_dense</span> <span class=\"n\">α</span>\n      <span class=\"n\">use</span> <span class=\"n\">D</span>\n      <span class=\"n\">constructor</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Dctbl</span>\n      <span class=\"n\">unfold</span> <span class=\"n\">Dense</span> <span class=\"n\">at</span> <span class=\"n\">Ddense</span>\n      <span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">_</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Ddense</span> <span class=\"n\">x</span>\n    <span class=\"c1\">-- Pick a dense sequence from u</span>\n    <span class=\"k\">have</span> <span class=\"n\">unonempty</span> <span class=\"o\">:</span> <span class=\"n\">Nonempty</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.nonempty_iff_ne_empty'</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">Set.nonempty_iff_ne_empty</span><span class=\"o\">]</span>\n      <span class=\"n\">exact</span> <span class=\"n\">unonempty</span>\n    <span class=\"n\">choose</span> <span class=\"n\">D</span> <span class=\"n\">Ddense</span> <span class=\"n\">using</span> <span class=\"n\">exists_dense_seq</span> <span class=\"n\">u</span>\n    <span class=\"c1\">-- Define v and w</span>\n    <span class=\"k\">let</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"bp\">∅</span> <span class=\"k\">else</span>\n      <span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">EMetric.closedBall</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)))</span>\n    <span class=\"k\">let</span> <span class=\"n\">w</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"o\">{</span><span class=\"n\">x0</span><span class=\"o\">}</span> <span class=\"k\">else</span>\n      <span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">EMetric.closedBall</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)))</span>\n    <span class=\"c1\">-- Prove the decomposition works</span>\n    <span class=\"k\">have</span> <span class=\"n\">hdecomp</span> <span class=\"o\">:</span> <span class=\"bp\">⋃</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">w</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">sq_minus_diag</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">ext</span> <span class=\"n\">x</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span>\n      <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">hx</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_iUnion</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span>\n        <span class=\"n\">cases'</span> <span class=\"n\">hx</span> <span class=\"k\">with</span> <span class=\"n\">i</span> <span class=\"n\">hi</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"n\">at</span> <span class=\"n\">hi</span><span class=\"bp\">;</span> <span class=\"n\">split</span> <span class=\"n\">at</span> <span class=\"n\">hi</span>\n        <span class=\"bp\">.</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Set.empty_prod</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_empty_iff_false</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hi</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ge_iff_le</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_prod</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_inter_iff</span><span class=\"o\">,</span>\n          <span class=\"n\">EMetric.mem_closedBall</span><span class=\"o\">,</span> <span class=\"n\">le_min_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hi</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">sq_minus_diag</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_setOf_eq</span><span class=\"o\">]</span>\n        <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hi.1.1</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hi.2.1</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">edist_eq_zero</span><span class=\"o\">]</span>\n        <span class=\"n\">intro</span> <span class=\"n\">hdist</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">edist_triangle4</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">i.1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">i.2</span><span class=\"o\">)</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hdist</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont2</span> <span class=\"o\">:=</span> <span class=\"n\">add_le_add</span> <span class=\"n\">hi.1.2.2</span> <span class=\"n\">hi.2.2.2</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">add_zero</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont</span> <span class=\"n\">hcont2</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">edist_comm</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont2</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont3</span> <span class=\"o\">:=</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span> <span class=\"n\">hcont2</span>\n        <span class=\"n\">ring_nf</span> <span class=\"n\">at</span> <span class=\"n\">hcont3</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont3</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x ≤ 2/3 * x is a contradiction for nonzero, non-infinity x</span>\n      <span class=\"n\">intro</span> <span class=\"n\">hx</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">sq_minus_diag</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_setOf_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span>\n      <span class=\"n\">rcases</span> <span class=\"n\">hx</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">hx1</span><span class=\"o\">,</span> <span class=\"n\">hx2</span><span class=\"o\">,</span> <span class=\"n\">hne</span><span class=\"o\">⟩</span>\n      <span class=\"n\">set</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">)</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">apply</span> <span class=\"n\">lt_min</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ENNReal.div_pos_iff</span><span class=\"o\">,</span> <span class=\"n\">and_true</span><span class=\"o\">]</span>\n        <span class=\"n\">exact</span> <span class=\"n\">ne_of_gt</span> <span class=\"n\">εpos</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ENNReal.div_pos_iff</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">edist_eq_zero</span><span class=\"o\">,</span> <span class=\"n\">and_true</span><span class=\"o\">]</span>\n        <span class=\"n\">exact</span> <span class=\"n\">hne</span>\n      <span class=\"n\">choose</span> <span class=\"n\">a</span> <span class=\"n\">ha</span> <span class=\"n\">using</span> <span class=\"n\">denseRange_aux</span> <span class=\"n\">Ddense</span> <span class=\"o\">⟨</span><span class=\"n\">x.1</span><span class=\"o\">,</span> <span class=\"n\">hx1</span><span class=\"o\">⟩</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">))</span> <span class=\"n\">this</span>\n      <span class=\"n\">choose</span> <span class=\"n\">b</span> <span class=\"n\">hb</span> <span class=\"n\">using</span> <span class=\"n\">denseRange_aux</span> <span class=\"n\">Ddense</span> <span class=\"o\">⟨</span><span class=\"n\">x.2</span><span class=\"o\">,</span> <span class=\"n\">hx2</span><span class=\"o\">⟩</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">))</span> <span class=\"n\">this</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_iUnion</span><span class=\"o\">]</span>\n      <span class=\"n\">use</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span><span class=\"n\">b</span><span class=\"o\">)</span>\n      <span class=\"k\">have</span> <span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">D</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">intro</span> <span class=\"n\">heq</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">zero_eq_edist</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">heq</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">edist_triangle4</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">x.2</span>\n        <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span> <span class=\"n\">_</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux1</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">ha</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux2</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">le_of_eq</span> <span class=\"n\">heq.symm</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux3</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">edist_comm</span><span class=\"o\">]</span>\n            <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hb</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n          <span class=\"k\">have</span> <span class=\"n\">ineq2</span> <span class=\"o\">:=</span> <span class=\"n\">add_le_add</span> <span class=\"o\">(</span><span class=\"n\">add_le_add</span> <span class=\"n\">aux1</span> <span class=\"n\">aux2</span><span class=\"o\">)</span> <span class=\"n\">aux3</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">ineq2</span> <span class=\"n\">_</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_of_eq</span>\n          <span class=\"n\">ring_nf</span>\n          <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x/6 * 2 = (2/6) * x</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x ≤ 2/6 * x is a contradiction for nonzero, non-infinity x</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">edist_eq_zero</span><span class=\"o\">,</span> <span class=\"n\">ge_iff_le</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_prod</span><span class=\"o\">,</span>\n        <span class=\"n\">Set.mem_ite_empty_left</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_inter_iff</span><span class=\"o\">,</span>\n        <span class=\"n\">EMetric.mem_closedBall</span><span class=\"o\">,</span> <span class=\"n\">le_min_iff</span><span class=\"o\">]</span>\n      <span class=\"n\">constructor</span>\n      <span class=\"bp\">.</span> <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hab</span>\n        <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hx1</span>\n        <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">ha</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_left</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n        <span class=\"n\">apply</span> <span class=\"n\">le_of_not_gt</span>\n        <span class=\"n\">intro</span> <span class=\"n\">hdist</span><span class=\"bp\">;</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">gt_iff_lt</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hdist</span>\n        <span class=\"k\">have</span> <span class=\"n\">hdist</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"gr\">sorry</span> <span class=\"c1\">-- need to multiply both sides of the old hdist by 3</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">edist_triangle4</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">x.2</span>\n        <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux1</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">ha</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux2</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">hdist</span>\n            <span class=\"gr\">sorry</span> <span class=\"c1\">-- need to multiply both sides of aux1 by 3</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux3</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">edist_comm</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hb</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n          <span class=\"k\">have</span> <span class=\"n\">ineq2</span> <span class=\"o\">:=</span> <span class=\"n\">add_le_add</span> <span class=\"o\">(</span><span class=\"n\">add_le_add</span> <span class=\"n\">aux1</span> <span class=\"n\">aux2</span><span class=\"o\">)</span> <span class=\"n\">aux3</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">ineq2</span> <span class=\"n\">_</span>\n          <span class=\"n\">ring_nf</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_of_eq</span>\n          <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x/6 * 2 + x*3/6 = 5/6 * x</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x ≤ 5/6 * x is a contradiction for nonzero, non-infinity x</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">edist_eq_zero</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hab</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">if_neg</span> <span class=\"n\">hab</span><span class=\"o\">]</span>\n      <span class=\"n\">apply</span> <span class=\"n\">Set.mem_inter</span>\n      <span class=\"n\">exact</span> <span class=\"n\">hx2</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">EMetric.mem_closedBall</span><span class=\"o\">]</span>\n      <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hb</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n      <span class=\"n\">apply</span> <span class=\"n\">min_le_min</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Eq.ge</span> <span class=\"n\">rfl</span>\n      <span class=\"n\">apply</span> <span class=\"n\">le_of_not_gt</span>\n      <span class=\"n\">intro</span> <span class=\"n\">hdist</span><span class=\"bp\">;</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">gt_iff_lt</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hdist</span>\n      <span class=\"k\">have</span> <span class=\"n\">hdist</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- need to multiply both sides of the old hdist by 3</span>\n      <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">edist_triangle4</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">x.2</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span>\n        <span class=\"k\">have</span> <span class=\"n\">aux1</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">ha</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n        <span class=\"k\">have</span> <span class=\"n\">aux2</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">hdist</span>\n          <span class=\"gr\">sorry</span> <span class=\"c1\">-- need to multiply both sides of aux1 by 3</span>\n        <span class=\"k\">have</span> <span class=\"n\">aux3</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">edist_comm</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hb</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n        <span class=\"k\">have</span> <span class=\"n\">ineq2</span> <span class=\"o\">:=</span> <span class=\"n\">add_le_add</span> <span class=\"o\">(</span><span class=\"n\">add_le_add</span> <span class=\"n\">aux1</span> <span class=\"n\">aux2</span><span class=\"o\">)</span> <span class=\"n\">aux3</span>\n        <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">ineq2</span> <span class=\"n\">_</span>\n        <span class=\"n\">ring_nf</span>\n        <span class=\"n\">apply</span> <span class=\"n\">le_of_eq</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x/6 * 2 + x*3/6 = 5/6 * x</span>\n      <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x ≤ 5/6 * x is a contradiction for nonzero, non-infinity x</span>\n    <span class=\"k\">let</span> <span class=\"n\">v'</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n    <span class=\"k\">let</span> <span class=\"n\">w'</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">w</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n    <span class=\"n\">use</span> <span class=\"n\">v'</span>\n    <span class=\"n\">use</span> <span class=\"n\">w'</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove the decomposition works</span>\n    <span class=\"bp\">.</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">hdecomp</span><span class=\"o\">]</span>\n      <span class=\"n\">ext</span> <span class=\"n\">x</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span>\n      <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">hx</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_iUnion</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span> <span class=\"bp\">⊢</span>\n        <span class=\"n\">cases'</span> <span class=\"n\">hx</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">hn</span>\n        <span class=\"n\">use</span> <span class=\"n\">Nat.pair</span> <span class=\"n\">n.1</span> <span class=\"n\">n.2</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Nat.unpair_pair</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hn</span> <span class=\"bp\">⊢</span>\n        <span class=\"n\">exact</span> <span class=\"n\">hn</span>\n      <span class=\"n\">intro</span> <span class=\"n\">hx</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_iUnion</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span> <span class=\"bp\">⊢</span>\n      <span class=\"n\">cases'</span> <span class=\"n\">hx</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">hn</span>\n      <span class=\"n\">use</span> <span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove v n is a subset of u</span>\n    <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span><span class=\"bp\">;</span> <span class=\"n\">split</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Set.empty_subset</span> <span class=\"n\">u</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Set.inter_subset_left</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove w n in a subset of u</span>\n    <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span><span class=\"bp\">;</span> <span class=\"n\">split</span>\n      <span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"bp\">;</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_singleton_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hx</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hx0</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Set.inter_subset_left</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove v n is closed</span>\n    <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span><span class=\"bp\">;</span> <span class=\"n\">split</span>\n      <span class=\"n\">exact</span> <span class=\"n\">isClosed_empty</span>\n      <span class=\"n\">apply</span> <span class=\"n\">IsClosed.inter</span>\n      <span class=\"n\">exact</span> <span class=\"n\">uclosed</span>\n      <span class=\"n\">exact</span> <span class=\"n\">EMetric.isClosed_ball</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove w n is closed</span>\n    <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span><span class=\"bp\">;</span> <span class=\"n\">split</span>\n      <span class=\"n\">exact</span> <span class=\"n\">T1Space.t1</span> <span class=\"n\">x0</span>\n      <span class=\"n\">apply</span> <span class=\"n\">IsClosed.inter</span>\n      <span class=\"n\">exact</span> <span class=\"n\">uclosed</span>\n      <span class=\"n\">exact</span> <span class=\"n\">EMetric.isClosed_ball</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove v n has small diameter</span>\n    <span class=\"bp\">.</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Done; removed for length</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove w n has small diameter</span>\n    <span class=\"bp\">.</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Done; removed for length</span>\n    <span class=\"c1\">-- Prove v n ≠ w n</span>\n    <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span><span class=\"bp\">;</span> <span class=\"n\">split</span>\n    <span class=\"bp\">.</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">Set.singleton_nonempty</span> <span class=\"n\">x0</span>\n      <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">Set.Nonempty.ne_empty</span> <span class=\"n\">this</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">∉</span> <span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">EMetric.closedBall</span>\n      <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">snd</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span>\n      <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"o\">)))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">intro</span> <span class=\"n\">hcont</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_inter_iff</span><span class=\"o\">,</span> <span class=\"n\">EMetric.mem_closedBall</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont</span>\n      <span class=\"n\">rcases</span> <span class=\"n\">hcont</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">hcont</span><span class=\"o\">⟩</span>\n      <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n      <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x ≤ 1/3 * x is a contradiction for nonzero, non-infinity x</span>\n    <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">subset_antisymm_iff</span><span class=\"o\">,</span> <span class=\"n\">not_and_or</span><span class=\"o\">]</span>\n    <span class=\"n\">apply</span> <span class=\"n\">Or.inl</span>\n    <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.not_subset</span><span class=\"o\">]</span>\n    <span class=\"n\">use</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"bp\">.</span> <span class=\"n\">apply</span> <span class=\"n\">Set.mem_inter</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Subtype.mem</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"o\">)</span>\n      <span class=\"n\">exact</span> <span class=\"n\">EMetric.mem_closedBall_self</span>\n    <span class=\"n\">exact</span> <span class=\"n\">this</span>\n</code></pre></div>",
        "id": 430292552,
        "sender_full_name": "Connor Gordon",
        "timestamp": 1711734088
    },
    {
        "content": "<p>When I open this in Lean 4 Playground, I get a bunch of errors, such as <code>tactic 'split' failed</code> at line 62.</p>",
        "id": 430296217,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1711735449
    },
    {
        "content": "<p>That's rather unfortunate, it seems that I may have an outdated version of lean/mathlib even though I thought I updated it, because it's all fine on my end. I'll see what I can do and try to fix it</p>",
        "id": 430298790,
        "sender_full_name": "Connor Gordon",
        "timestamp": 1711736529
    },
    {
        "content": "<p>I suggest trying to see if your code runs successfully <a href=\"https://live.lean-lang.org/\">here</a> first, that way you verify that it will work on our side too.</p>",
        "id": 430299080,
        "sender_full_name": "Rida Hamadani",
        "timestamp": 1711736657
    },
    {
        "content": "<p>Ah, thank you for the link; I'd never heard of that before. Will test there going forward. In any case, here's a correct version that works on the website; seems like the <code>simp</code> issue persisted, although it should be good now.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.Polish</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.MeasureTheory.Constructions.Polish</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.MetricSpace.CantorScheme</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Topology.Bases</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.Data.Nat.Pairing</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">mα</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">tα</span> <span class=\"o\">:</span> <span class=\"n\">MetricSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">sα</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace.SeparableSpace</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">mβ</span> <span class=\"o\">:</span> <span class=\"n\">MeasurableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">tβ</span> <span class=\"o\">:</span> <span class=\"n\">MetricSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">sβ</span> <span class=\"o\">:</span> <span class=\"n\">TopologicalSpace.SeparableSpace</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">fmeas</span> <span class=\"o\">:</span> <span class=\"n\">Measurable</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">sq_minus_diag</span> <span class=\"o\">(</span><span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">x.1</span> <span class=\"bp\">∈</span> <span class=\"n\">U</span> <span class=\"bp\">∧</span> <span class=\"n\">x.2</span> <span class=\"bp\">∈</span> <span class=\"n\">U</span> <span class=\"bp\">∧</span> <span class=\"n\">x.1</span> <span class=\"bp\">≠</span> <span class=\"n\">x.2</span><span class=\"o\">}</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">TopologicalSpace</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">denseRange_aux</span> <span class=\"o\">{</span><span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">MetricSpace</span> <span class=\"n\">γ</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">DenseRange</span> <span class=\"n\">f</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ENNReal</span><span class=\"o\">,</span>\n  <span class=\"n\">r</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">edist</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"gr\">sorry</span> <span class=\"c1\">-- Done</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">decomp_of_sq_minus_diag</span> <span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ENNReal</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">uclosed</span> <span class=\"o\">:</span> <span class=\"n\">IsClosed</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">unonempty</span> <span class=\"o\">:</span> <span class=\"n\">Set.Nonempty</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">εpos</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n  <span class=\"n\">sq_minus_diag</span> <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"bp\">⋃</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">w</span> <span class=\"n\">n</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">IsClosed</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">))</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">EMetric.diam</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">EMetric.diam</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n  <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"n\">w</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n    <span class=\"c1\">-- Pick a point in u (to be used later)</span>\n    <span class=\"k\">have</span> <span class=\"n\">unonempty'</span> <span class=\"o\">:=</span> <span class=\"n\">unonempty</span>\n    <span class=\"n\">choose</span> <span class=\"n\">x0</span> <span class=\"n\">hx0</span> <span class=\"n\">using</span> <span class=\"n\">unonempty'</span>\n    <span class=\"c1\">-- Prove u is separable</span>\n    <span class=\"k\">have</span> <span class=\"n\">Usep</span> <span class=\"o\">:</span> <span class=\"n\">SeparableSpace</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">apply</span> <span class=\"n\">IsSeparable.separableSpace</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">IsSeparable</span><span class=\"o\">]</span>\n      <span class=\"n\">choose</span> <span class=\"n\">D</span> <span class=\"n\">Dctbl</span> <span class=\"n\">Ddense</span> <span class=\"n\">using</span> <span class=\"n\">exists_countable_dense</span> <span class=\"n\">α</span>\n      <span class=\"n\">use</span> <span class=\"n\">D</span>\n      <span class=\"n\">constructor</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Dctbl</span>\n      <span class=\"n\">unfold</span> <span class=\"n\">Dense</span> <span class=\"n\">at</span> <span class=\"n\">Ddense</span>\n      <span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">_</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Ddense</span> <span class=\"n\">x</span>\n    <span class=\"c1\">-- Pick a dense sequence from u</span>\n    <span class=\"k\">have</span> <span class=\"n\">unonempty</span> <span class=\"o\">:</span> <span class=\"n\">Nonempty</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.nonempty_iff_ne_empty'</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">Set.nonempty_iff_ne_empty</span><span class=\"o\">]</span>\n      <span class=\"n\">exact</span> <span class=\"n\">unonempty</span>\n    <span class=\"n\">choose</span> <span class=\"n\">D</span> <span class=\"n\">Ddense</span> <span class=\"n\">using</span> <span class=\"n\">exists_dense_seq</span> <span class=\"n\">u</span>\n    <span class=\"c1\">-- Define v and w</span>\n    <span class=\"k\">let</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"bp\">∅</span> <span class=\"k\">else</span>\n      <span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">EMetric.closedBall</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)))</span>\n    <span class=\"k\">let</span> <span class=\"n\">w</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"o\">{</span><span class=\"n\">x0</span><span class=\"o\">}</span> <span class=\"k\">else</span>\n      <span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">EMetric.closedBall</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">n.2</span><span class=\"o\">)))</span>\n    <span class=\"c1\">-- Prove the decomposition works</span>\n    <span class=\"k\">have</span> <span class=\"n\">hdecomp</span> <span class=\"o\">:</span> <span class=\"bp\">⋃</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"n\">n</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">w</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">sq_minus_diag</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">ext</span> <span class=\"n\">x</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span>\n      <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">hx</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_iUnion</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span>\n        <span class=\"n\">cases'</span> <span class=\"n\">hx</span> <span class=\"k\">with</span> <span class=\"n\">i</span> <span class=\"n\">hi</span>\n        <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">v</span><span class=\"o\">,</span><span class=\"n\">w</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hi</span><span class=\"bp\">;</span> <span class=\"n\">split</span> <span class=\"n\">at</span> <span class=\"n\">hi</span>\n        <span class=\"bp\">.</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">Set.empty_prod</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_empty_iff_false</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hi</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ge_iff_le</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_prod</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_inter_iff</span><span class=\"o\">,</span>\n          <span class=\"n\">EMetric.mem_closedBall</span><span class=\"o\">,</span> <span class=\"n\">le_min_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hi</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">sq_minus_diag</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_setOf_eq</span><span class=\"o\">]</span>\n        <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hi.1.1</span><span class=\"bp\">;</span> <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hi.2.1</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">edist_eq_zero</span><span class=\"o\">]</span>\n        <span class=\"n\">intro</span> <span class=\"n\">hdist</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">edist_triangle4</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">i.1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">i.2</span><span class=\"o\">)</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hdist</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont2</span> <span class=\"o\">:=</span> <span class=\"n\">add_le_add</span> <span class=\"n\">hi.1.2.2</span> <span class=\"n\">hi.2.2.2</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">add_zero</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont</span> <span class=\"n\">hcont2</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">edist_comm</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont2</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont3</span> <span class=\"o\">:=</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span> <span class=\"n\">hcont2</span>\n        <span class=\"n\">ring_nf</span> <span class=\"n\">at</span> <span class=\"n\">hcont3</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">mul_assoc</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont3</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x ≤ 2/3 * x is a contradiction for nonzero, non-infinity x</span>\n      <span class=\"n\">intro</span> <span class=\"n\">hx</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">sq_minus_diag</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_setOf_eq</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span>\n      <span class=\"n\">rcases</span> <span class=\"n\">hx</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">hx1</span><span class=\"o\">,</span> <span class=\"n\">hx2</span><span class=\"o\">,</span> <span class=\"n\">hne</span><span class=\"o\">⟩</span>\n      <span class=\"n\">set</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">)</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">apply</span> <span class=\"n\">lt_min</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ENNReal.div_pos_iff</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">ENNReal.two_ne_top</span><span class=\"o\">,</span> <span class=\"n\">not_false_eq_true</span><span class=\"o\">,</span> <span class=\"n\">and_true</span><span class=\"o\">]</span>\n        <span class=\"n\">exact</span> <span class=\"n\">ne_of_gt</span> <span class=\"n\">εpos</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ENNReal.div_pos_iff</span><span class=\"o\">,</span> <span class=\"n\">ne_eq</span><span class=\"o\">]</span>\n        <span class=\"n\">constructor</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">edist_eq_zero</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hne</span>\n        <span class=\"n\">exact</span> <span class=\"n\">ne_of_beq_false</span> <span class=\"n\">rfl</span>\n      <span class=\"n\">choose</span> <span class=\"n\">a</span> <span class=\"n\">ha</span> <span class=\"n\">using</span> <span class=\"n\">denseRange_aux</span> <span class=\"n\">Ddense</span> <span class=\"o\">⟨</span><span class=\"n\">x.1</span><span class=\"o\">,</span> <span class=\"n\">hx1</span><span class=\"o\">⟩</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">))</span> <span class=\"n\">this</span>\n      <span class=\"n\">choose</span> <span class=\"n\">b</span> <span class=\"n\">hb</span> <span class=\"n\">using</span> <span class=\"n\">denseRange_aux</span> <span class=\"n\">Ddense</span> <span class=\"o\">⟨</span><span class=\"n\">x.2</span><span class=\"o\">,</span> <span class=\"n\">hx2</span><span class=\"o\">⟩</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span><span class=\"o\">))</span> <span class=\"n\">this</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_iUnion</span><span class=\"o\">]</span>\n      <span class=\"n\">use</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span><span class=\"n\">b</span><span class=\"o\">)</span>\n      <span class=\"k\">have</span> <span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">D</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">intro</span> <span class=\"n\">heq</span>\n        <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">zero_eq_edist</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">heq</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">edist_triangle4</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">x.2</span>\n        <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span> <span class=\"n\">_</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux1</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">ha</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux2</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">le_of_eq</span> <span class=\"n\">heq.symm</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux3</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">edist_comm</span><span class=\"o\">]</span>\n            <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hb</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n          <span class=\"k\">have</span> <span class=\"n\">ineq2</span> <span class=\"o\">:=</span> <span class=\"n\">add_le_add</span> <span class=\"o\">(</span><span class=\"n\">add_le_add</span> <span class=\"n\">aux1</span> <span class=\"n\">aux2</span><span class=\"o\">)</span> <span class=\"n\">aux3</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">ineq2</span> <span class=\"n\">_</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_of_eq</span>\n          <span class=\"n\">ring_nf</span>\n          <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x/6 * 2 = (2/6) * x</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x ≤ 2/6 * x is a contradiction for nonzero, non-infinity x</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">edist_eq_zero</span><span class=\"o\">,</span> <span class=\"n\">one_div</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_prod</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_ite_empty_left</span><span class=\"o\">,</span> <span class=\"n\">Set.mem_inter_iff</span><span class=\"o\">,</span>\n        <span class=\"n\">EMetric.mem_closedBall</span><span class=\"o\">,</span> <span class=\"n\">le_min_iff</span><span class=\"o\">,</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">w</span><span class=\"o\">]</span>\n      <span class=\"n\">constructor</span>\n      <span class=\"bp\">.</span> <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hab</span>\n        <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hx1</span>\n        <span class=\"n\">constructor</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">ha</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_left</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n        <span class=\"n\">apply</span> <span class=\"n\">le_of_not_gt</span>\n        <span class=\"n\">intro</span> <span class=\"n\">hdist</span><span class=\"bp\">;</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">gt_iff_lt</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hdist</span>\n        <span class=\"k\">have</span> <span class=\"n\">hdist</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"gr\">sorry</span> <span class=\"c1\">-- need to multiply both sides of the old hdist by 3</span>\n        <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">edist_triangle4</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">x.2</span>\n        <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux1</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">ha</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux2</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">hdist</span>\n            <span class=\"gr\">sorry</span> <span class=\"c1\">-- need to multiply both sides of aux1 by 3</span>\n          <span class=\"k\">have</span> <span class=\"n\">aux3</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n            <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">edist_comm</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hb</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n          <span class=\"k\">have</span> <span class=\"n\">ineq2</span> <span class=\"o\">:=</span> <span class=\"n\">add_le_add</span> <span class=\"o\">(</span><span class=\"n\">add_le_add</span> <span class=\"n\">aux1</span> <span class=\"n\">aux2</span><span class=\"o\">)</span> <span class=\"n\">aux3</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">ineq2</span> <span class=\"n\">_</span>\n          <span class=\"n\">ring_nf</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_of_eq</span>\n          <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x/6 * 2 + x*3/6 = 5/6 * x</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x ≤ 5/6 * x is a contradiction for nonzero, non-infinity x</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">edist_eq_zero</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hab</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">if_neg</span> <span class=\"n\">hab</span><span class=\"o\">]</span>\n      <span class=\"n\">apply</span> <span class=\"n\">Set.mem_inter</span>\n      <span class=\"n\">exact</span> <span class=\"n\">hx2</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">EMetric.mem_closedBall</span><span class=\"o\">]</span>\n      <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hb</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n      <span class=\"n\">apply</span> <span class=\"n\">min_le_min</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Eq.ge</span> <span class=\"n\">rfl</span>\n      <span class=\"n\">apply</span> <span class=\"n\">le_of_not_gt</span>\n      <span class=\"n\">intro</span> <span class=\"n\">hdist</span><span class=\"bp\">;</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">gt_iff_lt</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hdist</span>\n      <span class=\"k\">have</span> <span class=\"n\">hdist</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- need to multiply both sides of the old hdist by 3</span>\n      <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">edist_triangle4</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">x.2</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"n\">x.2</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n        <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span>\n        <span class=\"k\">have</span> <span class=\"n\">aux1</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"n\">x.1</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">ha</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n        <span class=\"k\">have</span> <span class=\"n\">aux2</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">hdist</span>\n          <span class=\"gr\">sorry</span> <span class=\"c1\">-- need to multiply both sides of aux1 by 3</span>\n        <span class=\"k\">have</span> <span class=\"n\">aux3</span> <span class=\"o\">:</span> <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">x.2</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"bp\">/</span><span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n          <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">edist_comm</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hb</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n        <span class=\"k\">have</span> <span class=\"n\">ineq2</span> <span class=\"o\">:=</span> <span class=\"n\">add_le_add</span> <span class=\"o\">(</span><span class=\"n\">add_le_add</span> <span class=\"n\">aux1</span> <span class=\"n\">aux2</span><span class=\"o\">)</span> <span class=\"n\">aux3</span>\n        <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"n\">ineq2</span> <span class=\"n\">_</span>\n        <span class=\"n\">ring_nf</span>\n        <span class=\"n\">apply</span> <span class=\"n\">le_of_eq</span>\n        <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x/6 * 2 + x*3/6 = 5/6 * x</span>\n      <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x ≤ 5/6 * x is a contradiction for nonzero, non-infinity x</span>\n    <span class=\"k\">let</span> <span class=\"n\">v'</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">v</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n    <span class=\"k\">let</span> <span class=\"n\">w'</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">w</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n    <span class=\"n\">use</span> <span class=\"n\">v'</span>\n    <span class=\"n\">use</span> <span class=\"n\">w'</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove the decomposition works</span>\n    <span class=\"bp\">.</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Done</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove v n is a subset of u</span>\n    <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">v'</span><span class=\"o\">,</span> <span class=\"n\">v</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">split</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Set.empty_subset</span> <span class=\"n\">u</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Set.inter_subset_left</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove w n in a subset of u</span>\n    <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">w'</span><span class=\"o\">,</span> <span class=\"n\">w</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">split</span>\n      <span class=\"n\">intro</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"bp\">;</span> <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_singleton_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hx</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hx</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hx0</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Set.inter_subset_left</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove v n is closed</span>\n    <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">v'</span><span class=\"o\">,</span> <span class=\"n\">v</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">split</span>\n      <span class=\"n\">exact</span> <span class=\"n\">isClosed_empty</span>\n      <span class=\"n\">apply</span> <span class=\"n\">IsClosed.inter</span>\n      <span class=\"n\">exact</span> <span class=\"n\">uclosed</span>\n      <span class=\"n\">exact</span> <span class=\"n\">EMetric.isClosed_ball</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove w n is closed</span>\n    <span class=\"bp\">.</span> <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">w'</span><span class=\"o\">,</span> <span class=\"n\">w</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">split</span>\n      <span class=\"n\">exact</span> <span class=\"n\">T1Space.t1</span> <span class=\"n\">x0</span>\n      <span class=\"n\">apply</span> <span class=\"n\">IsClosed.inter</span>\n      <span class=\"n\">exact</span> <span class=\"n\">uclosed</span>\n      <span class=\"n\">exact</span> <span class=\"n\">EMetric.isClosed_ball</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove v n has small diameter</span>\n    <span class=\"bp\">.</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Done</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"c1\">-- Prove w n has small diameter</span>\n    <span class=\"bp\">.</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Done</span>\n    <span class=\"c1\">-- Prove v n ≠ w n</span>\n    <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">v'</span><span class=\"o\">,</span> <span class=\"n\">w'</span><span class=\"o\">,</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"n\">w</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">split</span>\n    <span class=\"bp\">.</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">Set.singleton_nonempty</span> <span class=\"n\">x0</span>\n      <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">Set.Nonempty.ne_empty</span> <span class=\"n\">this</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">∉</span> <span class=\"n\">u</span> <span class=\"bp\">∩</span> <span class=\"n\">EMetric.closedBall</span>\n      <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">snd</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span>\n      <span class=\"n\">edist</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"o\">)))</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n      <span class=\"n\">intro</span> <span class=\"n\">hcont</span>\n      <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.mem_inter_iff</span><span class=\"o\">,</span> <span class=\"n\">EMetric.mem_closedBall</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hcont</span>\n      <span class=\"n\">rcases</span> <span class=\"n\">hcont</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">hcont</span><span class=\"o\">⟩</span>\n      <span class=\"k\">have</span> <span class=\"n\">hcont</span> <span class=\"o\">:=</span> <span class=\"n\">le_trans</span> <span class=\"n\">hcont</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n      <span class=\"gr\">sorry</span> <span class=\"c1\">-- need x ≤ 1/3 * x is a contradiction for nonzero, non-infinity x</span>\n    <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">ne_eq</span><span class=\"o\">,</span> <span class=\"n\">subset_antisymm_iff</span><span class=\"o\">,</span> <span class=\"n\">not_and_or</span><span class=\"o\">]</span>\n    <span class=\"n\">apply</span> <span class=\"n\">Or.inl</span>\n    <span class=\"n\">rw</span><span class=\"o\">[</span><span class=\"n\">Set.not_subset</span><span class=\"o\">]</span>\n    <span class=\"n\">use</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n    <span class=\"n\">constructor</span>\n    <span class=\"bp\">.</span> <span class=\"n\">apply</span> <span class=\"n\">Set.mem_inter</span>\n      <span class=\"n\">exact</span> <span class=\"n\">Subtype.mem</span> <span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">Nat.unpair</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"o\">)</span>\n      <span class=\"n\">exact</span> <span class=\"n\">EMetric.mem_closedBall_self</span>\n    <span class=\"n\">exact</span> <span class=\"n\">this</span>\n</code></pre></div>",
        "id": 430300705,
        "sender_full_name": "Connor Gordon",
        "timestamp": 1711737340
    },
    {
        "content": "<p>This proof is way too complicated. You should try to reorganize it instead of trying to fill in the sorries.</p>",
        "id": 430301207,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1711737563
    },
    {
        "content": "<p>The first thing to do is to get rid of U and first prove an absolute version, and then deduce the relative one.</p>",
        "id": 430301394,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1711737646
    },
    {
        "content": "<p>The next step is probably to abstract this is term of filter bases and first countable topologies. We don’t care that the result will become more general, the point is to focus on the relevant things by getting rid of extra structures.</p>",
        "id": 430301493,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1711737710
    }
]