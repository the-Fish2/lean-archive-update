[
    {
        "content": "<p>Seems like <a href=\"https://github.com/leanprover-community/mathlib4/pull/9811\">#9811</a> likely caused the failure in <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7884007422/job/21512091078\">https://github.com/leanprover-community/mathlib4/actions/runs/7884007422/job/21512091078</a> ; can we move it off the queue?</p>",
        "id": 421210788,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707818424
    },
    {
        "content": "<p>Done</p>",
        "id": 421211477,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1707818656
    },
    {
        "content": "<p>Seems like bors is down.</p>",
        "id": 421322582,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707857110
    },
    {
        "content": "<p>I don't know what to do to help, but bors is failing repeatedly for reasons I can't understand, in several instances, each time in a file related to <a href=\"https://github.com/leanprover-community/mathlib4/pull/9309\">#9309</a>.</p>\n<p>See, for example, <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7891418515/job/21535716237\">https://github.com/leanprover-community/mathlib4/actions/runs/7891418515/job/21535716237</a></p>",
        "id": 421322643,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707857134
    },
    {
        "content": "<p>There are clear errors in this run:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"bp\">./././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">RingTheory</span><span class=\"bp\">/</span><span class=\"n\">PowerSeries</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">854</span><span class=\"o\">:</span><span class=\"mi\">68</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"kd\">constant</span> <span class=\"bp\">'</span><span class=\"n\">FunLike.congr_fun'</span>\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"bp\">./././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">RingTheory</span><span class=\"bp\">/</span><span class=\"n\">PowerSeries</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">2072</span><span class=\"o\">:</span><span class=\"mi\">42</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">token</span> <span class=\"sc\">'|'</span><span class=\"bp\">;</span> <span class=\"n\">expected</span> <span class=\"sc\">')'</span><span class=\"o\">,</span> <span class=\"sc\">','</span> <span class=\"n\">or</span> <span class=\"sc\">':'</span>\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"bp\">./././</span><span class=\"n\">Mathlib</span><span class=\"bp\">/</span><span class=\"n\">RingTheory</span><span class=\"bp\">/</span><span class=\"n\">PowerSeries</span><span class=\"bp\">/</span><span class=\"n\">Basic.lean</span><span class=\"o\">:</span><span class=\"mi\">2070</span><span class=\"o\">:</span><span class=\"mi\">92</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unsolved</span> <span class=\"n\">goals</span>\n</code></pre></div>",
        "id": 421322803,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1707857199
    },
    {
        "content": "<p>However they come from interactions with other PRs in the same batch.</p>",
        "id": 421322900,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1707857233
    },
    {
        "content": "<p>I wonder what will happen to the current batch</p>",
        "id": 421322914,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707857240
    },
    {
        "content": "<p>It's <a href=\"https://github.com/leanprover-community/mathlib4/pull/9309\">#9309</a></p>",
        "id": 421322946,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707857254
    },
    {
        "content": "<p>With <a href=\"https://mathlib-bors-ca18eefec4cb.herokuapp.com/repositories/16\">#bors</a> down, presumably we can't tell what the current batch is!</p>",
        "id": 421322969,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707857261
    },
    {
        "content": "<p>Yes, but this file (for which Maria Ines and I are responsible) worked well in our PR.</p>",
        "id": 421322999,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707857275
    },
    {
        "content": "<p>Can someone take that off the queue?</p>",
        "id": 421323003,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707857276
    },
    {
        "content": "<p>This is not your fault</p>",
        "id": 421323064,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707857288
    },
    {
        "content": "<p>OK, thanks.</p>",
        "id": 421323087,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707857300
    },
    {
        "content": "<p>Bors takes a bunch of PRs and tests them all together; one of the others is broken</p>",
        "id": 421323133,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707857315
    },
    {
        "content": "<p>Unfortunately, <a href=\"https://mathlib-bors-ca18eefec4cb.herokuapp.com/repositories/16\">#bors</a> is down so we can't see what the batches are!</p>",
        "id": 421323168,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707857335
    },
    {
        "content": "<p>I think that you didn't merge <code>master</code> for a while</p>",
        "id": 421323176,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707857340
    },
    {
        "content": "<p>Because <code>FunLike.congr_fun</code> is called <code>DFunLike.congr_fun</code> now.</p>",
        "id": 421323209,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707857361
    },
    {
        "content": "<p>OK, so I'll merge, and we'll start again.</p>",
        "id": 421323236,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707857379
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/compare/master...staging\">https://github.com/leanprover-community/mathlib4/compare/master...staging</a></p>",
        "id": 421323245,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707857382
    },
    {
        "content": "<p>(Fortunately, our PR doesn't touch many files)</p>",
        "id": 421323336,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707857408
    },
    {
        "content": "<p>The batch that caused this error is <a href=\"https://github.com/leanprover-community/mathlib4/compare/master...d3d63b1e42072cec7fc45588761af9991aaffcf3\">https://github.com/leanprover-community/mathlib4/compare/master...d3d63b1e42072cec7fc45588761af9991aaffcf3</a></p>",
        "id": 421323388,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707857436
    },
    {
        "content": "<p>Did we hit another limit?</p>",
        "id": 421323480,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707857478
    },
    {
        "content": "<p>Oh, I feel like I've only been confusing things more in this thread. Yeah, Antoine, it is your PR and merging master will make the error show up</p>",
        "id": 421323514,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707857491
    },
    {
        "content": "<p>Mergin' and fixin'â€¦</p>",
        "id": 421324184,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707857769
    },
    {
        "content": "<p>More annoyingly, the last batch seems to have succeeded 10 minutes ago but hasn't been merged: <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7891867398/job/21539499674\">https://github.com/leanprover-community/mathlib4/actions/runs/7891867398/job/21539499674</a></p>",
        "id": 421325786,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707858489
    },
    {
        "content": "<p>bors is up but it lost connection to the batch. Can we make it rerun the same batch?</p>",
        "id": 421325902,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707858556
    },
    {
        "content": "<p>If we're lucky it will just happen</p>",
        "id": 421325999,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707858602
    },
    {
        "content": "<p>It looks like bors merged the batch.</p>",
        "id": 421326591,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707858853
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 421326727,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707858924
    },
    {
        "content": "<p>Just kicked <a href=\"https://github.com/leanprover-community/mathlib4/pull/10032\">#10032</a> off the queue, that should resolve the failure in <a href=\"https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1590\">batch 1590</a>.</p>",
        "id": 421327902,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1707859496
    },
    {
        "content": "<p>merged and fixed.</p>",
        "id": 421327976,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707859523
    },
    {
        "content": "<p>I applied your suggestion in that PR (<span class=\"user-mention\" data-user-id=\"488648\">@Xavier Roblot</span>, I hope you don't mind).</p>",
        "id": 421328165,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707859605
    },
    {
        "content": "<p>Also, I merged <code>master</code> branch there.</p>",
        "id": 421328280,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707859655
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Bors.20batch.20failing/near/421210788\">said</a>:</p>\n<blockquote>\n<p>Seems like <a href=\"https://github.com/leanprover-community/mathlib4/pull/9811\">#9811</a> likely caused the failure in <a href=\"https://github.com/leanprover-community/mathlib4/actions/runs/7884007422/job/21512091078\">https://github.com/leanprover-community/mathlib4/actions/runs/7884007422/job/21512091078</a> ; can we move it off the queue?</p>\n</blockquote>\n<p>Perhaps worth noting that <code>lake exe shake</code> now increases the chance of a batch failing due to compounding PRs</p>",
        "id": 421344382,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707867874
    },
    {
        "content": "<p>(though I suspect this was just caused by a stale master before shake was introduced)</p>",
        "id": 421344409,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707867899
    },
    {
        "content": "<p>Yeah, idk how expensive that would be, but the CI could run on a rebased version before BORS tries to batch them together, so that it can alert that despite git not complaining about a merge conflict, there's still a virtual merge conflict because of some breaking change not being taken into account in the current PR state</p>",
        "id": 421353617,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1707873671
    },
    {
        "content": "<p>Or maybe treat breaking changes differently</p>",
        "id": 421353827,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1707873793
    },
    {
        "content": "<p>That would be more expensive than the batching that already happens</p>",
        "id": 421354645,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1707874327
    },
    {
        "content": "<p>Could BORS otherwise bisect the batch, by only attempting to merge half of the PRs after a failure, and keeping track of the PRs that it put aside? I don't know how often the build fails as a fluke</p>",
        "id": 421354917,
        "sender_full_name": "Emilie (Shad Amethyst)",
        "timestamp": 1707874545
    },
    {
        "content": "<p><code>bors</code> does bisecting.</p>",
        "id": 421355026,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707874610
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Bors.20batch.20failing/near/421328165\">said</a>:</p>\n<blockquote>\n<p>I applied your suggestion in that PR (<span class=\"user-mention silent\" data-user-id=\"488648\">Xavier Roblot</span>, I hope you don't mind).</p>\n</blockquote>\n<p>Oh, I am sorry this PR caused so much problem. Thanks for the fix!</p>",
        "id": 421381813,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1707894122
    },
    {
        "content": "<p>No worries Xavier, we had a large number of PRs approved yesterday (&gt; 50), of which several ended up failing, so bors had a lot of work to do</p>",
        "id": 421386466,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1707896496
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Bors.20batch.20failing/near/421344382\">said</a>:</p>\n<blockquote>\n<p>Perhaps worth noting that <code>lake exe shake</code> now increases the chance of a batch failing due to compounding PRs</p>\n</blockquote>\n<p>Yeah, I was thinking about this. Since shaking is not vital to the build, would it be worth making it a daily cron job rather than running it on every PR?</p>",
        "id": 421393176,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1707899117
    },
    {
        "content": "<p>Or even weekly...</p>",
        "id": 421393936,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707899409
    },
    {
        "content": "<p>It can create a PR with the output of <code>lake exe shake --fix</code></p>",
        "id": 421393978,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707899421
    },
    {
        "content": "<p>I'd rather not apply fixes automatically, it's not that trustworthy</p>",
        "id": 421394465,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707899612
    },
    {
        "content": "<p>I also disagree with the idea of delaying shake applications, from my experience with the first two shake PRs. Mathlib moves way too fast for this if PRs aren't applying shake fixes as they go, and preparing the PR is very computationally intensive (because making the PR actually compile involves tweaks to files and then receiving errors 1000 files later)</p>",
        "id": 421394745,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707899750
    },
    {
        "content": "<p>This was the reason I pushed for it to be a CI step in the first place, if you let it slide then it becomes almost impossible to keep up</p>",
        "id": 421395310,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707899990
    },
    {
        "content": "<p>It's hard to tell without making an experiment. I expect that shaking the tree after a day or a week of merged PRs is much easier than the initial run, and most of the time <code>lake exe shake --fix</code> will create a PR that will compile.</p>",
        "id": 421395885,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707900187
    },
    {
        "content": "<p>OTOH, I'm not ready to be the person responsible for fixing it if it fails.</p>",
        "id": 421395928,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707900211
    },
    {
        "content": "<p>And it will slide unless we have a designated person or we force it on every PR.</p>",
        "id": 421396119,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1707900284
    },
    {
        "content": "<p>The problem is that a lot of the time the shake PR will have conflicts, and by the time you've fixed the conflicts there are more conflicts</p>",
        "id": 421396175,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707900305
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Bors.20batch.20failing/near/421396119\">said</a>:</p>\n<blockquote>\n<p>And it will slide unless we have a designated person or we force it on every PR.</p>\n</blockquote>\n<p>which is why we force it on every PR</p>",
        "id": 421396283,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707900348
    },
    {
        "content": "<p>I don't see a reason it is any worse than any other kind of lint here, it's not even a particularly global analysis and AFAIK it's rare for two PRs to cause a shake error where neither one individually has one</p>",
        "id": 421396468,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707900417
    },
    {
        "content": "<p>I wake up and see that it sufficed! Thank y'all and sorry for the mess.</p>",
        "id": 421396476,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1707900419
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Bors.20batch.20failing/near/421395885\">said</a>:</p>\n<blockquote>\n<p>I expect that shaking the tree after a day or a week of merged PRs is much easier than the initial run, </p>\n</blockquote>\n<p>It's a smaller diff, but just as much work to prepare</p>",
        "id": 421396680,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707900494
    },
    {
        "content": "<p>shake results on individual PRs are generally just one file or a few, this is where shake has the highest success rate. When there are a few dozen PRs mashed together the results contain many files and the suggestions overlap, and these cause shake results to be lower quality and/or cause errors</p>",
        "id": 421396982,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1707900619
    },
    {
        "content": "<p>Should we rename and/or merge the two active bors threads by the way? Maybe this can become \"Bors failure investigation\" and the other can become \"Optimizing bors batch size\".</p>",
        "id": 421447903,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1707918397
    },
    {
        "content": "<p>19 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4/topic/bors.20failing\">#mathlib4 &gt; bors failing</a> by <span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span>.</p>",
        "id": 421448792,
        "sender_full_name": "Notification Bot",
        "timestamp": 1707918692
    }
]