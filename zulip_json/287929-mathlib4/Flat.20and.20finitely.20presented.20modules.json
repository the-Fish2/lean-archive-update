[
    {
        "content": "<p>It is a classic result of commutative algebra that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is a finitely presented module over a commutative ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is flat over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> if and only if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is locally free over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> (<a href=\"https://stacks.math.columbia.edu/tag/00NV\">https://stacks.math.columbia.edu/tag/00NV</a>). This result is part of the blueprint for Fermat's last theorem (<a href=\"https://imperialcollegelondon.github.io/FLT/blueprint/sect0003.html#finite_flat_group_scheme\">https://imperialcollegelondon.github.io/FLT/blueprint/sect0003.html#finite_flat_group_scheme</a>).</p>\n<p>Note: The blueprint for FLT only uses this result in the case that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> is Noetherian and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is a finite Hopf algebra over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>. But I think it isn't any more difficult to prove it in greater generality than that. I am not going to worry, for now, about proving that a finitely presented flat module is projective.</p>\n<p>I opened a pull request to the FLT repository that states this result (<a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/32/files\">https://github.com/ImperialCollegeLondon/FLT/pull/32/files</a>). However, I now think that it would be better to close that pull request and try to add this result to mathlib directly. My current idea is to start by defining a version of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LocalizationPreserves#doc\">docs#LocalizationPreserves</a> for modules instead of algebras, and then to define what it means for a predicate on modules to hold locally at a prime <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.713em;vertical-align:-0.1891em;\"></span><span class=\"mord mathfrak\">p</span></span></span></span>, locally, or stalkwise.</p>\n<p>However, I am very unfamiliar with the commutative algebra and algebraic geometry part of mathlib, so I would welcome some advice.</p>\n<p>Here is my outline in way too much detail. For now, it seems best to entirely avoid category theory.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Outline</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<ul>\n<li>Define <code>FinitelyPresented</code> as a predicate.</li>\n<li>Define localization of a homomorphism of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-modules.</li>\n<li>Let <code>f</code> be a homomorphism of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-modules. Then the kernel of its localization equals the localization of its kernel. (This is really an equality and not just an isomorphism. The \"localization\" on the right hand side of this equation is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Submodule.localized#doc\">docs#Submodule.localized</a>.)</li>\n<li>Also, the image of its localization equals the localization of its image. (Again, this is really an equality.)</li>\n<li>Localization of tensor product is tensor product of localizations. (I am not sure how best to even state this.)</li>\n<li>Make a version of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LocalizationPreserves#doc\">docs#LocalizationPreserves</a> for modules instead of algebras.</li>\n<li>Localization preserves <code>Trivial</code>.</li>\n<li>Localization preserves <code>Free</code>.</li>\n<li>Localization preserves <code>Flat</code>.</li>\n<li>Localization preserves <code>Finite</code>.</li>\n<li>Localization preserves <code>FinitelyPresented</code>.</li>\n<li>For any predicate <code>P</code> on modules, let us say that <code>Locally P R M</code> if there is an open cover of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Spec</mi><mo>‚Å°</mo><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\operatorname{Spec}(R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">Spec</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span> by basic open sets <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">D(f_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> such that for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>, we have that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><msub><mi>f</mi><mi>i</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">M_{f_i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> satisfies the predicate <code>P</code> as an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><msub><mi>f</mi><mi>i</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">R_{f_i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>-module.</li>\n<li>Equivalently, every prime ideal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.713em;vertical-align:-0.1891em;\"></span><span class=\"mord mathfrak\">p</span></span></span></span> is contained in a basic open set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">D(f_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><msub><mi>f</mi><mi>i</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">M_{f_i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> satisfies the predicate <code>P</code> as an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><msub><mi>f</mi><mi>i</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">R_{f_i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>-module.</li>\n<li>For any predicate <code>P</code> on modules, let us say that <code>Stalkwise P R M</code> if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi mathvariant=\"fraktur\">p</mi></msub></mrow><annotation encoding=\"application/x-tex\">M_{\\mathfrak{p}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9657em;vertical-align:-0.2823em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2168em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathfrak mtight\">p</span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2823em;\"><span></span></span></span></span></span></span></span></span></span> satisfies the predicate <code>P</code> as a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><mi mathvariant=\"fraktur\">p</mi></msub></mrow><annotation encoding=\"application/x-tex\">R_{\\mathfrak{p}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9657em;vertical-align:-0.2823em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2168em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathfrak mtight\">p</span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2823em;\"><span></span></span></span></span></span></span></span></span></span>-module for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">p</mi><mo>‚àà</mo><mi mathvariant=\"normal\">Spec</mi><mo>‚Å°</mo><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{p} \\in \\operatorname{Spec}(R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7282em;vertical-align:-0.1891em;\"></span><span class=\"mord mathfrak\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚àà</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">Spec</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span>.</li>\n<li>Also make a predicate similar to the above that only deals with the localization at maximal ideals. Not sure what to call it.</li>\n<li>If localizations preserve a predicate <code>P</code>, then <code>P</code> implies <code>Locally P</code> which implies <code>Stalkwise P</code>.</li>\n<li><code>Stalkwise (P ‚àß Q)</code> is equivalent to <code>Stalkwise P ‚àß Stalkwise Q</code>.</li>\n<li>If localizations preserve <code>P</code> and <code>Q</code>, then <code>Locally (P ‚àß Q)</code> is equivalent to <code>Locally P ‚àß Locally Q</code>.</li>\n<li><code>Stalkwise Trivial</code> implies <code>Trivial</code>.</li>\n<li><code>Stalkwise Finite</code> implies <code>Finite</code>.</li>\n<li><code>Stalkwise FinitelyPresented</code> implies <code>FinitelyPresented</code>.</li>\n<li><code>Stalkwise Flat</code> implies <code>Flat</code>.</li>\n<li>If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is finite and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi mathvariant=\"fraktur\">p</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">M_{\\mathfrak{p}} = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9657em;vertical-align:-0.2823em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2168em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathfrak mtight\">p</span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2823em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>, then there exists a basic open set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>‚àã</mo><mi mathvariant=\"fraktur\">p</mi></mrow><annotation encoding=\"application/x-tex\">D(f) \\ni \\mathfrak{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚àã</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.713em;vertical-align:-0.1891em;\"></span><span class=\"mord mathfrak\">p</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi>f</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">M_{f} = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>.</li>\n<li>A homomorphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>R</mi><mi mathvariant=\"fraktur\">p</mi><mrow><mo>‚äï</mo><mi>m</mi></mrow></msubsup><mo>‚Üí</mo><msub><mi>M</mi><mi mathvariant=\"fraktur\">p</mi></msub></mrow><annotation encoding=\"application/x-tex\">R^{\\oplus m}_{\\mathfrak{p}} \\to M_{\\mathfrak{p}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1507em;vertical-align:-0.3793em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathfrak mtight\">p</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">‚äï</span><span class=\"mord mathnormal mtight\">m</span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3793em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9657em;vertical-align:-0.2823em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2168em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathfrak mtight\">p</span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2823em;\"><span></span></span></span></span></span></span></span></span></span> can be lifted to a basic open neighborhood of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.713em;vertical-align:-0.1891em;\"></span><span class=\"mord mathfrak\">p</span></span></span></span>.</li>\n<li><code>FinitelyPresented</code> and <code>Stalkwise Free</code> imply <code>Locally Free</code></li>\n<li>In a local ring, <code>Flat</code> and <code>Finite</code> imply <code>Free</code>.</li>\n</ul>\n</div></div>",
        "id": 436609694,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714620408
    },
    {
        "content": "<p>(step -4 seems to require that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is finitely generated)</p>",
        "id": 436619949,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1714628299
    },
    {
        "content": "<p>Yes, thanks.</p>",
        "id": 436619987,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714628335
    },
    {
        "content": "<p>Iirc, the analogue of stalkwise for maximal ideals is sometimes called punctually. (Eg, by Daniel Lazard)</p>",
        "id": 436620101,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1714628410
    },
    {
        "content": "<p>One thing that might being worthwhile is stating/proving this result in the language of algebraic geometry, to make use (and simultaneously develop) the API for schemes. In this direction, step -3 says something about morphisms of of quasi coherent sheaves.</p>",
        "id": 436620439,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1714628685
    },
    {
        "content": "<p>But one can wish to go in the opposite direction and prove these results as fast as possible.</p>",
        "id": 436620481,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1714628716
    },
    {
        "content": "<p>In a yet different direction, thinking of including the noncommutative case is also interesting (and possibly enlightening).</p>",
        "id": 436620672,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1714628848
    },
    {
        "content": "<p>Do you have a reference for the noncommutative case?</p>",
        "id": 436620784,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714628920
    },
    {
        "content": "<p>I'd have a look at Lam's book.</p>",
        "id": 436621368,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1714629323
    },
    {
        "content": "<p>Also, I mostly just figured that you had to prove most of this stuff for modules over a ring first, and then you can deduce the corresponding facts about quasicoherent sheaves from that. But maybe that's not true.</p>",
        "id": 436621519,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714629456
    },
    {
        "content": "<p>There is a way to take opportunity of the language of schemes to prove the results for rings. I don't know whether mathlib knows about qcoh sheaves yet, even on affine schemes.</p>",
        "id": 436621736,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1714629606
    },
    {
        "content": "<p>I think that the focus could be first on the equivalence between flat + finitely presented and projective. (And for this, the standard proof uses the <code>Hom(-, Q/Z)</code> duality.) Then, of course, the stabilitiy of these notions with localization is important, as well as flat iff the stalks are flat. Yet, some of the statement should be formulated in the language of schemes (but we do not have the API for this yet).</p>",
        "id": 436622431,
        "sender_full_name": "Jo√´l Riou",
        "timestamp": 1714630016
    },
    {
        "content": "<p>For the first two bullet points: see  <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Module.FinitePresentation#doc\">docs#Module.FinitePresentation</a> and <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=IsLocalizedModule.map#doc\">docs#IsLocalizedModule.map</a>. For localizations and tensorproduct there is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=isLocalizedModule_iff_isBaseChange#doc\">docs#isLocalizedModule_iff_isBaseChange</a> which might cover some of what you want and might serve as an example how to state it.</p>",
        "id": 436622527,
        "sender_full_name": "Christian Merten",
        "timestamp": 1714630068
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459699\">Jo√´l Riou</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Flat.20and.20finitely.20presented.20modules/near/436622431\">said</a>:</p>\n<blockquote>\n<p>I think that the focus could be first on the equivalence between flat + finitely presented and projective. (And for this, the standard proof uses the <code>Hom(-, Q/Z)</code> duality.) Then, of course, the stabilitiy of these notions with localization is important, as well as flat iff the stalks are flat. Yet, some of the statement should be formulated in the language of schemes (but we do not have the API for this yet).</p>\n</blockquote>\n<p>Is there anything general to say about when a property of a morphism of schemes (say defined in terms of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=AlgebraicGeometry.affineLocally#doc\">docs#AlgebraicGeometry.affineLocally</a>) can be checked on stalks?</p>",
        "id": 436623525,
        "sender_full_name": "Christian Merten",
        "timestamp": 1714630683
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459699\">Jo√´l Riou</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Flat.20and.20finitely.20presented.20modules/near/436622431\">said</a>:</p>\n<blockquote>\n<p>I think that the focus could be first on the equivalence between flat + finitely presented and projective. (And for this, the standard proof uses the <code>Hom(-, Q/Z)</code> duality.) Then, of course, the stabilitiy of these notions with localization is important, as well as flat iff the stalks are flat. Yet, some of the statement should be formulated in the language of schemes (but we do not have the API for this yet).</p>\n</blockquote>\n<p>Rather than prove that flat and finitely presented implies projective directly, it seems to me that it'd be easier to prove that flat and finitely presented implies locally free, and then prove that locally free implies projective (as the Stacks project does). Is the issue that this doesn't work over a noncommutative ring?</p>",
        "id": 436625725,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714631866
    },
    {
        "content": "<p>(just to say that it's definitely a good idea to put this directly into mathlib rather than via the FLT repo! I would like to minimise the size of FLT)</p>",
        "id": 436628008,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714632945
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"695266\">Mitchell Lee</span> <a href=\"#narrow/stream/287929-mathlib4/topic/Flat.20and.20finitely.20presented.20modules/near/436625725\">said</a>:</p>\n<blockquote>\n<p>Rather than prove that flat and finitely presented implies projective directly, it seems to me that it'd be easier to prove that flat and finitely presented implies locally free, and then prove that locally free implies projective (as the Stacks project does). Is the issue that this doesn't work over a noncommutative ring?</p>\n</blockquote>\n<p>I suggest not to follow the Stacks project here (which is consistent with Antoine's suggestion about thinking about the noncommutative case). If we denote <code>*</code> the Pontrjagin duality <code>Hom(-, Q/Z)</code>, then if <code>M</code> and <code>N</code> are modules, with <code>M</code> of finite presentation, there is a natural iso <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>‚äó</mo><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mo>‚àó</mo></msup><mo stretchy=\"false\">)</mo><mo>‚âÖ</mo><mi>H</mi><mi>o</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mo separator=\"true\">,</mo><mi>N</mi><msup><mo stretchy=\"false\">)</mo><mo>‚àó</mo></msup></mrow><annotation encoding=\"application/x-tex\">M ‚äó (N^*) ‚âÖ Hom(M,N)^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">‚äó</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">‚àó</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚âÖ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">Ho</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">‚àó</span></span></span></span></span></span></span></span></span></span></span>. As we want to show <code>M</code> is projective, we need to show that <code>Hom(M,-)</code> is exact, but as Pontrjagin duality reflects exact sequences, it suffices to show <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mi>o</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mo separator=\"true\">,</mo><mo>‚àí</mo><msup><mo stretchy=\"false\">)</mo><mo>‚àó</mo></msup></mrow><annotation encoding=\"application/x-tex\">Hom(M,-)^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">Ho</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">‚àí</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">‚àó</span></span></span></span></span></span></span></span></span></span></span> is exact, which follows from the iso, the fact <code>M</code> is flat and the exactness of <code>*</code>.</p>\n<p>Then, the rest would fit more in general algebraic geometry statements about quasi-coherent sheaves <code>F</code>: if <code>F</code> is finitely presented and the stalk at <code>x</code> is free, there exists a neighbourhood of <code>x</code> where <code>F</code> identifies to a direct sum of copies of the structure sheaf. (This would follow from a more general statement that if <code>F</code> and <code>G</code> are both finitely presented quasi-coherent sheaves, then an isomorphism between the stalks at <code>x</code> extends to an isomorphism in a neighbourhood of <code>x</code>. This is related to the computation of the stalks of the internal <code>Hom(F,G)</code> sheaf.)</p>",
        "id": 436652712,
        "sender_full_name": "Jo√´l Riou",
        "timestamp": 1714642225
    },
    {
        "content": "<p>The criterion \"flat iff flat for fg-modules\" is proved in mathlib using Pontrjagin duality and baer's criterion so we might have something similar already?</p>",
        "id": 436653427,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1714642497
    },
    {
        "content": "<p>One reason I think it could be nice to go from \"flat\" to \"locally free\" without going through \"projective\" first is the following: It can be proved that finite module is flat if and only if it is stalkwise free. There is no need to assume that the module is finitely presented in this step.</p>",
        "id": 436759552,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714676976
    },
    {
        "content": "<p>If you also show Lazard's theorem (<a href=\"https://stacks.math.columbia.edu/tag/058G\">https://stacks.math.columbia.edu/tag/058G</a>) <em>en passant</em>, that would be great.</p>",
        "id": 436782405,
        "sender_full_name": "Jo√´l Riou",
        "timestamp": 1714686637
    },
    {
        "content": "<p>I'll start by showing that a finite flat module over a commutative local ring is free. As far as I can see, this, or something like it, should be necessary regardless of how much scheme theory is used in the rest of the proof.</p>\n<p>I'll think about Lazard's theorem.</p>\n<p>There already seems to be a PR that includes some homological properties of flat modules (<a href=\"https://github.com/leanprover-community/mathlib4/pull/12438\">#12438</a>), but I think it's independent for now.</p>",
        "id": 436809592,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714705490
    },
    {
        "content": "<p>After working on this for a few hours, I have realized that it's quite a bit harder to prove that a finite flat module over a local ring is free than to prove that a finitely presented flat module over a local ring is free. But I'm getting there.</p>",
        "id": 436840330,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714725244
    },
    {
        "content": "<p>Yes, it seems the proof uses the \"equational criterion\" for flatness. (This is the reason why I asked about Lazard's theorem the proof of which also uses that criteria AFAIK.)</p>",
        "id": 436872277,
        "sender_full_name": "Jo√´l Riou",
        "timestamp": 1714738832
    },
    {
        "content": "<p>I'm very close to proving the equational criterion for flatness. My progress is that I have proved the \"equational criterion for vanishing\": <a href=\"https://github.com/leanprover-community/mathlib4/pull/12647\">#12647</a>.</p>\n<p>I will try to finish the proof tomorrow.</p>",
        "id": 437000440,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714807737
    },
    {
        "content": "<p>I hope that the proof that a finite flat module over a local ring is free will not take too long after that. Then, I guess the next step, if we want to do everything the \"right way\", is to define quasicoherent sheaves.</p>\n<p>(I think Lazard's theorem should wait for <a href=\"https://github.com/leanprover-community/mathlib4/pull/12438\">#12438</a>.) </p>\n<p>(As for the noncommutative case, unfortunately tensor products of modules over noncommutative rings aren't even defined yet. Should this be a priority?)</p>",
        "id": 437002097,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714809531
    },
    {
        "content": "<p>I think it's becoming one!</p>",
        "id": 437011638,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714819471
    },
    {
        "content": "<p>I proved the equational criterion for flatness: <a href=\"https://github.com/leanprover-community/mathlib4/pull/12666\">#12666</a></p>",
        "id": 437065361,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1714871372
    },
    {
        "content": "<p>Great! <span class=\"user-mention\" data-user-id=\"695266\">@Mitchell Lee</span> I left some comments on <a href=\"https://github.com/leanprover-community/mathlib4/pull/12647\">#12647</a></p>",
        "id": 437224959,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1714987263
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 437368632,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1715049883
    }
]