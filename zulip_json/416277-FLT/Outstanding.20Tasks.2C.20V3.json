[
    {
        "content": "<p>See <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V2/near/437156084\">here</a> for V2.</p>\n<h2>Outstanding Tasks, V3.</h2>\n<h3>Overview of where we're going</h3>\n<p>OK so the FLT project seems to have found its first goal: to <em>state</em> the modularity lifting theorem we're going to prove. Mario argues that this could be done in one week flat if we just got on with it, but some things will need thought and organisation, and I don't have time for that right now because I'm in marking hell (remember the grant hasn't started yet!).</p>\n<p>But something which is turning out to be much easier to run is the construction of an example of a Galois representation and an automorphic form which match up in accordance with the Langlands Philosophy. This is a great sub-goal because working out the example will inform what kinds of API for the things we're making. </p>\n<h3>The V3 tasks:</h3>\n<p>1) We need the Hurwitz quaternions, the lattice <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo>⊕</mo><mi mathvariant=\"double-struck\">Z</mi><mi>i</mi><mo>⊕</mo><mi mathvariant=\"double-struck\">Z</mi><mi>j</mi><mo>⊕</mo><mi mathvariant=\"double-struck\">Z</mi><mfrac><mrow><mn>1</mn><mo>+</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo>+</mo><mi>k</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\Z\\oplus\\Z i\\oplus\\Z j\\oplus\\Z \\frac{1+i+j+k}{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7722em;vertical-align:-0.0833em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7722em;vertical-align:-0.0833em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;vertical-align:-0.1944em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2772em;vertical-align:-0.345em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9322em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>. This could be made as a standalone structure like <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=QuaternionAlgebra#doc\">docs#QuaternionAlgebra</a> , in which case you need to make all the API for the ring structure. Alternatively you can make it as a subring of the usual quaternions, and here I'd recommend defining it as the ring closure of {1,i,j,omega} (which I think is defined to be the mul closure of the add group closure) and then proving it's the add group closure.</p>\n<p>If we go down the structure route (and possibly any route) then my guess is that the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span>-basis <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>ω</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>ω</mi><mi>i</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{1,\\omega,i,\\omega i\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">ωi</span><span class=\"mclose\">}</span></span></span></span> will be nicest to work with I think, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mi>ω</mi><mo>=</mo><mover accent=\"true\"><mrow><mi>ω</mi><mi>i</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">i\\omega=\\overline{\\omega i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">iω</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8595em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8595em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ωi</span></span></span><span style=\"top:-3.7795em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>. </p>\n<p>Whichever route we go down, we also need the definitions of trace and norm. For bonus points you can prove <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mi>t</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>x</mi><mo>+</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">x^2-t(x)x+N(x)=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> because we'll probably need it at some point.</p>\n<p>2) However they're made, we need to be good enough at arithmetic to push this argument through: if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a,b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> are Hurwitz quaternions and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>≠</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">b\\not=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> then we can write <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>=</mo><mi>q</mi><mi>b</mi><mo>+</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">a=qb+r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo stretchy=\"false\">)</mo><mo>&lt;</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">N(r)&lt;N(b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>, and we can also write <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>=</mo><mi>b</mi><msup><mi>q</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><msup><mi>r</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">a=bq&#x27;+r&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo stretchy=\"false\">(</mo><msup><mi>r</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>&lt;</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">N(r&#x27;)&lt;N(b).</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mord\">.</span></span></span></span> Maths proof: do the division in the usual quaternions and let q be the nearest Hurwitz integer to the answer; there is always one whose distance less than one away.</p>\n<p>3) Using this, prove that all left and right orders of the Hurwitz quaternions are principal. Proof: choose an element of smallest norm and use 2.</p>\n<p>4) (the big one): Prove that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> is the Hurwitz quaternions and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>=</mo><mi>R</mi><mo>⊗</mo><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">D=R\\otimes\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mover accent=\"true\"><mi>D</mi><mo stretchy=\"true\">^</mo></mover><mo>×</mo></msup><mo>=</mo><msup><mi>D</mi><mo>×</mo></msup><msup><mover accent=\"true\"><mi>R</mi><mo stretchy=\"true\">^</mo></mover><mo>×</mo></msup><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\widehat{D}^\\times=D^\\times \\widehat{R}^\\times.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9233em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9233em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.1111em);margin-left:0.1111em;top:-3.6833em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"0.24em\" viewBox=\"0 0 1062 239\" preserveAspectRatio=\"none\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"/></svg></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">×</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9233em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">×</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9233em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.1667em);margin-left:0.1667em;top:-3.6833em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"0.24em\" viewBox=\"0 0 1062 239\" preserveAspectRatio=\"none\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"/></svg></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">×</span></span></span></span></span></span></span></span><span class=\"mord\">.</span></span></span></span> Proof forthcoming in LaTeX.</p>",
        "id": 437825539,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715263714
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 437825837,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715263838
    },
    {
        "content": "<p>I tried to work out the multiplication in <a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/74\">FLT#74</a></p>",
        "id": 437959997,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715336782
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V3/near/437959997\">said</a>:</p>\n<blockquote>\n<p>I tried to work out the multiplication in <a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/74\">FLT#74</a></p>\n</blockquote>\n<p>I tried to convince myself that I got the details right in <a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/75\">FLT#75</a></p>",
        "id": 438134511,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715461526
    },
    {
        "content": "<p>Hello, can I finish the proof that matrix rings are central simple algebras?</p>",
        "id": 438242933,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1715575973
    },
    {
        "content": "<p>That would be great!</p>",
        "id": 438246354,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715578163
    },
    {
        "content": "<p><a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/77\">https://github.com/ImperialCollegeLondon/FLT/pull/77</a></p>",
        "id": 438287314,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1715583598
    },
    {
        "content": "<p>Hi all, I'm new to this Lean and am interested to contributing to section 7.2, <br>\n<a href=\"https://imperialcollegelondon.github.io/FLT/blueprint/ch_bestiary.html#a0000000036\">https://imperialcollegelondon.github.io/FLT/blueprint/ch_bestiary.html#a0000000036</a> <br>\nI wonder if this is possible?</p>",
        "id": 438382729,
        "sender_full_name": "Milton Lin",
        "timestamp": 1715612011
    },
    {
        "content": "<p>Correct me if I'm wrong, but I think there's no lean code at all for that chapter yet. If you're new, it might be best to try to fill in a proof for a theorem whose statement is already formalized and where you've got an English proof to follow</p>",
        "id": 438384700,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715612484
    },
    {
        "content": "<p>Hi Ruben,  thanks ! Ok, I suppose <a href=\"https://imperialcollegelondon.github.io/FLT/blueprint/sect0005.html#IsCentralSimple\">6.1</a>  <br>\nis a good place to start?</p>",
        "id": 438386518,
        "sender_full_name": "Milton Lin",
        "timestamp": 1715612963
    },
    {
        "content": "<p>I agree, starting with the open tasks is probably a good idea if you are new to lean.  the stuff in chapter 7 is probably still a ways off.</p>",
        "id": 438386526,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1715612965
    },
    {
        "content": "<p>Doesn’t 6.1 already have a leanok?</p>",
        "id": 438388910,
        "sender_full_name": "Josha Dekker",
        "timestamp": 1715613664
    },
    {
        "content": "<p>Sorry, I meant 6.2*</p>",
        "id": 438390034,
        "sender_full_name": "Milton Lin",
        "timestamp": 1715614005
    },
    {
        "content": "<p>6.2 has an open pull request</p>",
        "id": 438391522,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715614399
    },
    {
        "content": "<p><a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/77\">FLT#77</a></p>",
        "id": 438391642,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715614435
    },
    {
        "content": "<p>Ah sorry, so is the procedure to contribute here :</p>\n<ol>\n<li>search for a statement that is not yet formalized</li>\n<li>check the pull requests</li>\n<li>ask in this chat? <br>\nJust to clarify , as I don't see this documented</li>\n</ol>",
        "id": 438392839,
        "sender_full_name": "Milton Lin",
        "timestamp": 1715614787
    },
    {
        "content": "<p>These threads also contain lists of tasks that are ready + people reacting that they \"claim\" one of those tasks.</p>",
        "id": 438395394,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715615553
    },
    {
        "content": "<p>So keeping an eye on these zulip threads is likely helpful</p>",
        "id": 438395436,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1715615567
    },
    {
        "content": "<p>Nice, as of now I dont see anyone working on  <a href=\"https://imperialcollegelondon.github.io/FLT/blueprint/sect0004.html#Qhat.rat_meet_zHat\">5.16</a> , could I work on this? Edit: if anyone searches this in future, feel free to take it - I wanted to argue Q is flat over Z, but now maybe it better first workout localization of rings is flat.</p>",
        "id": 438399216,
        "sender_full_name": "Milton Lin",
        "timestamp": 1715616697
    },
    {
        "content": "<p>The morally correct way to prove that one is to figure out whether mathlib has flat iff torsion-free for Z-modules and that tensoring by a flat module preserves injectively , but there's probably a low-level approach as well</p>",
        "id": 438405549,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715618751
    },
    {
        "content": "<p>Sorry, I'm not really able to run the project right now because I have marking to worry about</p>",
        "id": 438405693,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715618786
    },
    {
        "content": "<p>But yes, asking here is the safest approach</p>",
        "id": 438409801,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715620138
    },
    {
        "content": "<p>Another approach is to use <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Localization/BaseChange.html#isLocalizedModule_iff_isBaseChange\">isLocalizedModule_iff_isBaseChange</a> to show that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"true\">^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\widehat{\\mathbb{Q}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0956em;vertical-align:-0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9289em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Q</span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.1667em);margin-left:0.1667em;top:-3.6889em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"0.24em\" viewBox=\"0 0 1062 239\" preserveAspectRatio=\"none\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1667em;\"><span></span></span></span></span></span></span></span></span>, as a ℚ-module, is the localization of the ℤ-module <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"true\">^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\widehat{\\mathbb{Z}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9289em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9289em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.1667em);margin-left:0.1667em;top:-3.6889em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"0.24em\" viewBox=\"0 0 1062 239\" preserveAspectRatio=\"none\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"/></svg></span></span></span></span></span></span></span></span></span> w.r.t. the submonoid <code>nonZeroDivisors ℤ</code>. The localization map is injective because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"true\">^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\widehat{\\mathbb{Z}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9289em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9289em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.1667em);margin-left:0.1667em;top:-3.6889em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"0.24em\" viewBox=\"0 0 1062 239\" preserveAspectRatio=\"none\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"/></svg></span></span></span></span></span></span></span></span></span> is torsion-free by <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Module/LocalizedModule.html#IsLocalizedModule.eq_zero_iff\">IsLocalizedModule.eq_zero_iff</a>. As a bonus, you also get that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"true\">^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\widehat{\\mathbb{Q}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0956em;vertical-align:-0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9289em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Q</span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.1667em);margin-left:0.1667em;top:-3.6889em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"0.24em\" viewBox=\"0 0 1062 239\" preserveAspectRatio=\"none\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1667em;\"><span></span></span></span></span></span></span></span></span> is the localization of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"true\">^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\widehat{\\mathbb{Z}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9289em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9289em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.1667em);margin-left:0.1667em;top:-3.6889em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"0.24em\" viewBox=\"0 0 1062 239\" preserveAspectRatio=\"none\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"/></svg></span></span></span></span></span></span></span></span></span> w.r.t. the image of the submonoid <code>nonZeroDivisors ℤ</code> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"true\">^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\widehat{\\mathbb{Z}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9289em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9289em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.1667em);margin-left:0.1667em;top:-3.6889em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"0.24em\" viewBox=\"0 0 1062 239\" preserveAspectRatio=\"none\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"/></svg></span></span></span></span></span></span></span></span></span> by <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Module/LocalizedModule.html#isLocalizedModule_iff_isLocalization'\">isLocalizedModule_iff_isLocalization'</a>.</p>",
        "id": 438434286,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1715629185
    },
    {
        "content": "<p>Is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>j</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>c</mi><mi>o</mi><mi>n</mi><mi>j</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>c</mi><mi>o</mi><mi>n</mi><mi>j</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">conj (xy) = conj(x) conj(y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">nj</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">nj</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">nj</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> actually supposed to be true for quaternions?</p>",
        "id": 438448108,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715634308
    },
    {
        "content": "<p>Does <code>conj</code> negate all the imaginaries? (yes)</p>",
        "id": 438448346,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715634391
    },
    {
        "content": "<p>if so then no, <code>-k = conj(k) = conj(ij) != conj(i)conj(j) = (-i)(-j) = ij = k</code></p>",
        "id": 438448531,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715634467
    },
    {
        "content": "<p>I believe it is true with a commutation, <code>conj(xy) = conj(y)conj(x)</code></p>",
        "id": 438448807,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1715634578
    },
    {
        "content": "<p>Okay, that explains why lean didn't believe me</p>",
        "id": 438449556,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715634854
    },
    {
        "content": "<p>Should we use <code>star</code> instead of <code>conj</code>? <a href=\"https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Star/Basic.html#StarRing\">StarRing</a> has <code>star_mul : ∀ (r s : R), star (r * s) = star s * star r</code> as a field.</p>",
        "id": 438450226,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1715635061
    },
    {
        "content": "<p>Sounds like a much better fit then!</p>",
        "id": 438450368,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715635103
    },
    {
        "content": "<p>Done in <a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/79\">FLT#79</a> for when you get out of grading</p>",
        "id": 438454659,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715636547
    },
    {
        "content": "<p>Hi, I strongly feel that it would be easier to develop the Hurwitz quaternions as a subtype of the (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span>)-quaternions than to develop them as a standalone structure. This gets you the coercions for free, and you don't have to redefine multiplication and star. Rather, you only have to prove that the set is closed under multiplication and star, and you can use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=StarSubalgebra#doc\">docs#StarSubalgebra</a>, which automatically gives it the structure of a star ring.</p>",
        "id": 438474816,
        "sender_full_name": "Mitchell Lee",
        "timestamp": 1715646368
    },
    {
        "content": "<p>Maybe a parallel development could be informative</p>",
        "id": 438508294,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1715667770
    },
    {
        "content": "<p>I'd happily have both in FLT so we can experiment.</p>",
        "id": 438525659,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715675198
    },
    {
        "content": "<p>In fact I think that probably the correct thing to do is to fix the definition of <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=QuaternionAlgebra#doc\">docs#QuaternionAlgebra</a> so that it follows Bourbaki's notation in Algebra, i.e. instead of having <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>i</mi><mn>2</mn></msup><mo>∈</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">i^2\\in R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8532em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>, instead have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>i</mi><mn>2</mn></msup><mo>=</mo><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">i^2=ai+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7429em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">ai</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>, and have quaternion algebras paramatrised by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">a,b,c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>j</mi><mn>2</mn></msup><mo>=</mo><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">j^2=c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span>. This would give the correct definition of a quaternion algebra over an arbitrary field. I would imagine that this would meet with some resistance because the current definition is so \"nice\" and works in the classical case. Here are the formulas, from Bourbaki Algebra Chapter III:</p>\n<p><a href=\"/user_uploads/3121/niaL9m5tJyULQzOEFtof-90M/Screenshot-from-2024-05-14-10-35-27.png\">Screenshot-from-2024-05-14-10-35-27.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/niaL9m5tJyULQzOEFtof-90M/Screenshot-from-2024-05-14-10-35-27.png\" title=\"Screenshot-from-2024-05-14-10-35-27.png\"><img src=\"/user_uploads/3121/niaL9m5tJyULQzOEFtof-90M/Screenshot-from-2024-05-14-10-35-27.png\"></a></div>",
        "id": 438537590,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715679338
    },
    {
        "content": "<p>I agree, I think  that we need to fix the definition of quaternion algebra either this way or by the CSA of dimension 4 definition.</p>",
        "id": 438538119,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1715679555
    },
    {
        "content": "<p>The problem is that the literature is full of the definition in mathlib because it works fine in char not 2, like defining an elliptic curve to be y^2=cubic.</p>",
        "id": 438538361,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715679646
    },
    {
        "content": "<p>FWIW the wikipedia definition is the CSA one.</p>",
        "id": 438539605,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1715680101
    },
    {
        "content": "<p>Voight has this approach for general char (including 2)<br>\n<a href=\"/user_uploads/3121/5ewnr0zuziVrO5QitLhqo-8f/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/5ewnr0zuziVrO5QitLhqo-8f/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/5ewnr0zuziVrO5QitLhqo-8f/image.png\"></a></div>",
        "id": 438540724,
        "sender_full_name": "Ross Bowden",
        "timestamp": 1715680502
    },
    {
        "content": "<p>Right: the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><msup><mi>i</mi><mn>2</mn></msup><mo>−</mo><mi>a</mi><mi>i</mi><mo>−</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">K[i]/(i^2-ai-b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7429em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">ai</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span> is the quadratic algebra. In fact arguably the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><msqrt><mi>d</mi></msqrt><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\Z[\\sqrt{d}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1822em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9322em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-2.8922em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"1.08em\" viewBox=\"0 0 400000 1080\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1078em;\"><span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> definition <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Zsqrtd#doc\">docs#Zsqrtd</a> should be generalised to take a commutative (semi?)ring and a,b as above.</p>",
        "id": 438551697,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715684762
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"695266\">Mitchell Lee</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V3/near/438474816\">said</a>:</p>\n<blockquote>\n<p>Hi, I strongly feel that it would be easier to develop the Hurwitz quaternions as a subtype of the (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span>)-quaternions than to develop them as a standalone structure. This gets you the coercions for free, and you don't have to redefine multiplication and star. Rather, you only have to prove that the set is closed under multiplication and star, and you can use <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=StarSubalgebra#doc\">docs#StarSubalgebra</a>, which automatically gives it the structure of a star ring.</p>\n</blockquote>\n<p>The problem with this approach is that it might lead to troubles related to \"subtypes\" as the one adressed in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12386\">#12386</a>. My suggestion would be</p>\n<ul>\n<li>if you plan to only use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span>-valued quaternions, to proceed as you suggest</li>\n<li>if we will eventually need to replace <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span> by a number field and work with the corresponding <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mi>K</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{O}_K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>-quaternions, to rather define it as a stand-alone structure.</li>\n</ul>",
        "id": 438553384,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1715685299
    },
    {
        "content": "<p>The only reason we need this integer lattice is because we're doing an example; my guess is that it's not used at all in the proof of FLT (and my guess is that the definition of quat alg in mathlib is fine for FLT).</p>",
        "id": 438553669,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1715685411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V3/near/438553384\">said</a>:</p>\n<blockquote>\n<p>The problem with this approach is that it might lead to troubles related to \"subtypes\" as the one adressed in <a href=\"https://github.com/leanprover-community/mathlib4/pull/12386\">#12386</a>.</p>\n</blockquote>\n<p>People keep bringing up <a href=\"https://github.com/leanprover-community/mathlib4/pull/12386\">#12386</a> as an argument against implementing concrete types as subobjects, but this really is not what the PR is saying. What it says is that you should not define <code>concreteType : Subobject := blah</code> but instead <code>concreteType : Type _ := (blah : Subobject)</code>.</p>",
        "id": 438590290,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715697329
    },
    {
        "content": "<p>Importantly, the benefits Mitchell is mentioning apply to both versions indiscriminately.</p>",
        "id": 438590560,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1715697403
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Good point, I agree.</p>",
        "id": 438591257,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1715697622
    },
    {
        "content": "<p>Hi has anyone claimed 6.3 before I take a look?</p>",
        "id": 439483167,
        "sender_full_name": "Steven Rossi",
        "timestamp": 1716170168
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 439509866,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716186918
    },
    {
        "content": "<p>I've been in marking hell so I've not really been keeping track, but I guess one algorithm is to check this thread and check the PRs and if there's nothing there then go for it :-)</p>",
        "id": 439520352,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716191415
    },
    {
        "content": "<p>I've got a couple of days in Wales this week and might be able to catch up</p>",
        "id": 439520390,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716191435
    },
    {
        "content": "<p>Great, I checked for PRs and messages but just wanted to be sure I didn't miss anything</p>",
        "id": 439614246,
        "sender_full_name": "Steven Rossi",
        "timestamp": 1716224353
    },
    {
        "content": "<p>I'm looking and maybe interested in contributing, but my number theory is not great. Is filling in sorries in <a href=\"https://github.com/ImperialCollegeLondon/FLT/blob/main/FLT/AutomorphicRepresentation/Example.lean\">https://github.com/ImperialCollegeLondon/FLT/blob/main/FLT/AutomorphicRepresentation/Example.lean</a> a useful thing to do?</p>",
        "id": 440544335,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1716569549
    },
    {
        "content": "<p>Sure! In fact it's about the only thing available right now. Currently I am involved in making more API for the finite adeles (e.g. <a href=\"https://github.com/leanprover-community/mathlib4/pull/13021\">#13021</a> ) which we need to even state the definition of a quaternionic modular form in the general case. In fact right now I'm a bit hung up on topology; this example you link to is going to turn into an example of a space of such forms, but I need to figure out how the topology on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"true\">^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\widehat{\\Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9289em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9289em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.1667em);margin-left:0.1667em;top:-3.6889em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"0.24em\" viewBox=\"0 0 1062 239\" preserveAspectRatio=\"none\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"/></svg></span></span></span></span></span></span></span></span></span> turns into a topology on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi><mo>⊗</mo><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"true\">^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}\\otimes\\widehat{\\Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9289em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9289em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.1667em);margin-left:0.1667em;top:-3.6889em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.24em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"0.24em\" viewBox=\"0 0 1062 239\" preserveAspectRatio=\"none\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"/></svg></span></span></span></span></span></span></span></span></span> and it's not true in general that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> are topological rings then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>⊗</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">R\\otimes S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> inherits one natural topology (it might get more than one). So I'm a bit bogged down with that theoretically, and I'm a bit bogged down with work admin as well (term ends in a month) and this is why things are stagnant right now. I'll remark again that things will really get going by October, and actually in practice by July.</p>",
        "id": 440545408,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716569958
    },
    {
        "content": "<p>Makes sense. ... Quick question, is ZHat a flat module over Z? Or just QHat? ... and is ZHat free? I'm getting all tripped up here. (If needing to ask these questions mean that I probably cannot contribute usefully, let me know.)</p>",
        "id": 440545923,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1716570159
    },
    {
        "content": "<p>An abelian group is flat over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> iff it's torsion-free, and we've already proved that it's torsion-free IIRC. I don't know whether we have this result in mathlib though.</p>",
        "id": 440546075,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716570230
    },
    {
        "content": "<p>ZHat isn't free though, because ZHat/pZHat = Z/pZ so if it were free it would have to be free on one generator, which can't be right because it's uncountable.</p>",
        "id": 440546252,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716570303
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V3/near/440546252\">said</a>:</p>\n<blockquote>\n<p>ZHat isn't free though, because ZHat/pZHat = Z/pZ so if it were free it would have to be free on one generator, which can't be right because it's uncountable.</p>\n</blockquote>\n<p>I agree with your conclusion, but the only way I can see it is a  topological Nakayama lemma. Is there a more direct way of proving that if it were free it would be free on one gen?</p>",
        "id": 440547426,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716570779
    },
    {
        "content": "<p>I don't think any version of Nakayama is needed. If you have a basis <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9523em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9523em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span style=\"top:-3.2579em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo>^</mo></mover><mi mathvariant=\"normal\">/</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\hat\\Z/p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2023em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9523em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span style=\"top:-3.2579em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span></span></span></span> must be isomorphic to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">Z</mi><mrow><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow></msup><mi mathvariant=\"normal\">/</mi><mi>p</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mi>p</mi><msup><mo stretchy=\"false\">)</mo><mrow><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\Z^{(S)}/p = (\\Z/p)^{(S)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.138em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.138em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>, but since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo>^</mo></mover><mi mathvariant=\"normal\">/</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\hat\\Z/p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2023em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9523em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span style=\"top:-3.2579em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span></span></span></span> is isomorphic to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\Z/p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span></span></span></span> it would follow that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> is a singleton.</p>",
        "id": 440550349,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1716571988
    },
    {
        "content": "<p>Alternative argument: ZHat has nonzero infinitely 2-divisible elements.</p>",
        "id": 440550406,
        "sender_full_name": "Scott Carnahan",
        "timestamp": 1716572011
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V3/near/440550349\">said</a>:</p>\n<blockquote>\n<p>I don't think any version of Nakayama is needed. If you have a basis <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9523em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9523em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span style=\"top:-3.2579em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo>^</mo></mover><mi mathvariant=\"normal\">/</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\hat\\Z/p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2023em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9523em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span style=\"top:-3.2579em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span></span></span></span> must be isomorphic to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">Z</mi><mrow><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow></msup><mi mathvariant=\"normal\">/</mi><mi>p</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mi>p</mi><msup><mo stretchy=\"false\">)</mo><mrow><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\Z^{(S)}/p = (\\Z/p)^{(S)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.138em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.138em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>, but since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">Z</mi><mo>^</mo></mover><mi mathvariant=\"normal\">/</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\hat\\Z/p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2023em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9523em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathbb\">Z</span></span><span style=\"top:-3.2579em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span></span></span></span> is isomorphic to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\Z/p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span></span></span></span> it would follow that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> is a singleton.</p>\n</blockquote>\n<p>Oh sure, thanks.</p>",
        "id": 440550889,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716572218
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"630477\">Scott Carnahan</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V3/near/440550406\">said</a>:</p>\n<blockquote>\n<p>Alternative argument: ZHat has nonzero infinitely 2-divisible elements.</p>\n</blockquote>\n<p>Yes yes, I agree, I was looking for an easy proof of the implication \"if free then free on one gen\", but I was already OK with the fact that it is not free.</p>",
        "id": 440550948,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1716572251
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  Just take the tensor product as condensed abelian groups <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 440551865,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1716572643
    },
    {
        "content": "<p>I don't know what topology to put on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span>. As a subring of the finite adeles I think it has some crazy topology</p>",
        "id": 440571211,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716581534
    },
    {
        "content": "<p>Basically I'm totally confused right now about whether I should just do what the books do (\"Z-hat is open with its usual topology and it all works\") or do something more conceptual.</p>",
        "id": 440571324,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716581619
    },
    {
        "content": "<p>If you identify Q with the colimit of copies of Z w.r.t. the inclusions x -&gt; nx as n varies, is this not the right topology?</p>",
        "id": 440571338,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1716581629
    },
    {
        "content": "<p>Yes probably.</p>",
        "id": 440571410,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716581651
    },
    {
        "content": "<p>Oh wait, what topology are you putting on Z?</p>",
        "id": 440571460,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716581684
    },
    {
        "content": "<p>The one coming from Zhat?</p>",
        "id": 440571519,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716581708
    },
    {
        "content": "<p>No, what I mean is identify Q \\otimes Zhat with the colimit of Zhats</p>",
        "id": 440571525,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1716581712
    },
    {
        "content": "<p>(I’m identifying Z otimes Zhat with Zhat)</p>",
        "id": 440571576,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1716581736
    },
    {
        "content": "<p>Right, my guess is that this is the correct topology. I then have to prove that multiplication is continuous</p>",
        "id": 440571664,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716581773
    },
    {
        "content": "<p>Yeah I think that will be more challenging with this approach</p>",
        "id": 440571733,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1716581816
    },
    {
        "content": "<p>Does the product preserve this colimit separately in each slot?</p>",
        "id": 440582296,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1716587669
    },
    {
        "content": "<p>I don't really understand David's question. I'm worried that proving that multiplication is continuous will be a pain whatever method I use.</p>",
        "id": 440588232,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716591463
    },
    {
        "content": "<p>Mapping out of a colimit means you only need to check continuity on the objects of the colimit diagarm. And showing that a binary operation on a colimit is continuous is easier when you know that the product commutes (at least on each side separately) with the colimit. But this is mathematics, not Lean, so I don't know what I'm blithely waving away in the above description.</p>",
        "id": 440600809,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1716604614
    },
    {
        "content": "<p>Are there any concerns with upgrading the mathlib version and using simp in proofs? Having RingCon.coe_bot is very nice</p>",
        "id": 440681451,
        "sender_full_name": "Steven Rossi",
        "timestamp": 1716693159
    },
    {
        "content": "<p>As in <a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/82\">FLT#82</a>?</p>",
        "id": 440687161,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716700588
    },
    {
        "content": "<p>Ah great, missed that. Had the same changes locally</p>",
        "id": 440687278,
        "sender_full_name": "Steven Rossi",
        "timestamp": 1716700717
    },
    {
        "content": "<p>Sorry, I'll try to merge today</p>",
        "id": 440697217,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716712380
    },
    {
        "content": "<p>Thanks for the merge, I did another one for good measure at <a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/89\">FLT#89</a> :)</p>",
        "id": 440819080,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1716803663
    },
    {
        "content": "<p>I'm going to spend the afternoon on FLT so hopefully I'll get it merged</p>",
        "id": 440825313,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1716805892
    },
    {
        "content": "<p>I have a half-finished proof for <code>exists_near</code> that I'll look into some more tomorrow</p>",
        "id": 441334480,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1717023591
    }
]