[
    {
        "content": "<p>Just to give an update on FLT: although the grant doesn't kick in until October, I am currently working on the blueprint (in private) and the project is definitely going public in April (by which I probably mean \"the very end of April\" -- basically the more material I work on in private the better the project looks at release). </p>\n<p>Over the last couple of weeks I've been working on the initial reductions of FLT to questions about elliptic curves, and I am not entirely surprised to discover that I need the theory of the Weierstrass P-function. In fact I can be completely precise about what I need; it is a purely algebraic statement which I write down <a href=\"https://mathoverflow.net/questions/469021/low-level-proof-of-identity-related-to-weierstrass-p-function\">here</a> (mathoverflow). But I think that question is the wrong question; I think that the question shouldn't be \"can we avoid using the Weierstrass P-function in a proof of FLT\", I think that instead the conclusion should be \"shall we use FLT as motivation to define the Weierstrass P-function?\".</p>\n<p>So if anyone is looking for an FLT-related project then I can offer the following: (1) define the meromorphic function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo separator=\"true\">,</mo><mi>τ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(z,\\tau)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\">)</span></span></span></span>; (2) prove the standard relationship between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>P</mi><mi mathvariant=\"normal\">/</mi><mi>d</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">dP/dz</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>, namely <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mrow><mo mathvariant=\"normal\">′</mo><mn>2</mn></mrow></msup><mo>=</mo><mn>4</mn><msup><mi>P</mi><mn>3</mn></msup><mo>+</mo><msub><mi>a</mi><mn>4</mn></msub><mi>P</mi><mo>+</mo><msub><mi>a</mi><mn>6</mn></msub></mrow><annotation encoding=\"application/x-tex\">P&#x27;^2=4P^3+a_4P+a_6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (<span class=\"user-mention\" data-user-id=\"389019\">@Chris Birkbeck</span> do you have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">E_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mn>6</mn></msub></mrow><annotation encoding=\"application/x-tex\">E_6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> somewhere?) and (3) compute the power series representing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> as a function of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi><mo>:</mo><mo>=</mo><msup><mi>e</mi><mrow><mn>2</mn><mi>π</mi><mi>i</mi><mi>τ</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">q:=e^{2\\pi i\\tau}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">πi</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo>:</mo><mo>=</mo><msup><mi>e</mi><mrow><mn>2</mn><mi>π</mi><mi>i</mi><mi>z</mi></mrow></msup><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">u:=e^{2\\pi i z}.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">πi</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></span></span></span></span><span class=\"mord\">.</span></span></span></span></p>",
        "id": 433244232,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713174002
    },
    {
        "content": "<p>We do have E4 and E6, the PRs showing they are mod forms (i.e. holomorphic and bounded at infinity are in the queue). I also have their q-expansions done, also needing PRing. After next week I should have some time to get these PRs done hopefully.</p>",
        "id": 433244755,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1713174133
    },
    {
        "content": "<p>I'm also interested in having these defined for the modular forms stuff, so I am happy to help work on this :)</p>",
        "id": 433244874,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1713174168
    },
    {
        "content": "<p>I'm sorry I can't supply a coherent blueprint at this point; on the other hand I suspect that people interested in this sort of thing will know well where to look. One reference for the basics is Silverman \"arithmetic of elliptic curves\", section VI.3, and all this stuff should really just go directly into mathlib.</p>",
        "id": 433247251,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713174949
    },
    {
        "content": "<p>Diamond--Shurman also has some bits of this.</p>",
        "id": 433247596,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1713175056
    },
    {
        "content": "<p>(<a href=\"https://github.com/leanprover-community/mathlib4/pull/10377\">#10377</a> just caught a trivial merge conflict)</p>",
        "id": 433249069,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1713175540
    },
    {
        "content": "<p>In case it may help, I just recently recorded some lectures on the construction of P, E4, E6, and these properties... see Lecture 30 here: <a href=\"https://sites.math.rutgers.edu/~alexk/2020F503/lectures.html\">https://sites.math.rutgers.edu/~alexk/2020F503/lectures.html</a></p>",
        "id": 433309862,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1713192190
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"389019\">Chris Birkbeck</span> <a href=\"#narrow/stream/416277-FLT/topic/Weierstrass.20P-function/near/433244755\">said</a>:</p>\n<blockquote>\n<p>We do have E4 and E6, the PRs showing they are mod forms (i.e. holomorphic and bounded at infinity are in the queue). I also have their q-expansions done, also needing PRing. After next week I should have some time to get these PRs done hopefully.</p>\n</blockquote>\n<p>How are you making the sum of the k-1st powers of the divisors of a positive natural?</p>",
        "id": 433365049,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713207799
    },
    {
        "content": "<p>I don't need them to be a positive natural, since its only showing up in the q-expansion whose terms are complex numbers so they get coerced automatically from <code>Nat</code>.</p>",
        "id": 433366630,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1713208328
    },
    {
        "content": "<p>basically all the things I have look like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Eisenstein_Series_q_expansion_Bernoulli</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hk</span> <span class=\"o\">:</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">hk2</span> <span class=\"o\">:</span> <span class=\"n\">Even</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℍ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">eisensteinSeriesOfWt_</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"bp\">=</span>\n   <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">bernoulli</span> <span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"n\">k</span> <span class=\"bp\">!</span><span class=\"o\">)</span> <span class=\"bp\">+</span>\n     <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">!</span><span class=\"o\">)</span> <span class=\"bp\">*</span>\n       <span class=\"bp\">∑'</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">,</span> <span class=\"n\">sigma</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">Complex.exp</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">π</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span><span class=\"bp\">...</span>\n</code></pre></div>\n<p>(ignore the old names)</p>",
        "id": 433367005,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1713208459
    },
    {
        "content": "<p>Is this your own <code>sigma</code>?</p>",
        "id": 433374110,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713210731
    },
    {
        "content": "<p>There is <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=ArithmeticFunction.sigma#doc\">docs#ArithmeticFunction.sigma</a> .</p>",
        "id": 433374456,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1713210843
    },
    {
        "content": "<p>No its the one we have</p>",
        "id": 433374522,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1713210868
    },
    {
        "content": "<p>Why do you want them to be positive naturals and not just naturals?</p>",
        "id": 433379848,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1713212638
    },
    {
        "content": "<p>Here is the algebraic result I want, modulo the problem that I am not sure of a computationally efficient way to proceed to see if I can check a few more terms of the power series.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.PowerSeries.Basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.RingTheory.Localization.FractionRing</span>\n<span class=\"kn\">import</span> <span class=\"n\">Mathlib.NumberTheory.Divisors</span>\n\n<span class=\"c\">/-</span>\n\n<span class=\"cm\"># An algebraic identity</span>\n\n\n\n<span class=\"cm\">## Uniformising elliptic curves</span>\n\n<span class=\"cm\">Every (algebro-geometric) elliptic curve over ℂ is (as compact Riemann surface and</span>\n<span class=\"cm\">abelian Lie group), `ℂ` modulo a lattice; the proof of this uses integration. Note</span>\n<span class=\"cm\">that you can scale the lattice to make it of the form `Λ(τ) := ℤ + τℤ` for some `τ`</span>\n<span class=\"cm\">in the upper half-plane, without changing the isomorphism class of the curve.</span>\n\n<span class=\"cm\">We can form this quotient `ℂ / Λ(τ)` via a two-stage process: we first quotient out</span>\n<span class=\"cm\">by `ℤ` and then by `τℤ`. Let's analyse both steps in turn.</span>\n\n<span class=\"cm\">## Quotienting out by `ℤ`.</span>\n\n<span class=\"cm\">The additive quotient `ℂ / ℤ` can be identified with the multiplicative group `ℂˣ`, via the</span>\n<span class=\"cm\">function `z ↦ u := e ^ {2πiz}`.</span>\n\n<span class=\"cm\">Note that at the point the notation for the group law changed, an interesting power series</span>\n<span class=\"cm\">appeared. Indeed, modulo the \"twist\" `2πi`, the dictionary is a function `e^x`. This is</span>\n<span class=\"cm\">`∑ₙ(1/n!)x^n`, the generating function of the sequence whose `n`'th term is the size of the</span>\n<span class=\"cm\">algebraic stack of sets of size `n`. The theorem `e^(x+y)=e^x*e^y` can be proved by</span>\n<span class=\"cm\">translating it into a statement about power series and verifying it using the binomial theorem.</span>\n\n<span class=\"cm\">Conversely, sometimes it's possible to prove identities in power series involving `e^x` using</span>\n<span class=\"cm\">complex analysis. For example, proving that `log(e^x)=x` for `x` close to `0`, just by</span>\n<span class=\"cm\">using power series, turns into a real mess; it is easier to define the complex log in a</span>\n<span class=\"cm\">neighbourhood of 1, prove the result using analysis and deduce the algebraic result by</span>\n<span class=\"cm\">working out the power series of everything.</span>\n\n<span class=\"cm\">The main conjecture of this file can be proved in the same way; it is a combinatorial</span>\n<span class=\"cm\">identity in the multiplicative `(q,u)` coordinates defined entirely over the rationals</span>\n<span class=\"cm\">(and even over the integers in some precise sense), which can be proved by observing that it</span>\n<span class=\"cm\">suffices to prove it for all pairs of complex numbers in a small ball and then deduce it from</span>\n<span class=\"cm\">a standard fact relating `P'²` and `4P³`, via the result that a holomorphic</span>\n<span class=\"cm\">function on a compact Riemann surface which vanishes at some point must be identically zero.</span>\n\n<span class=\"cm\">## Quotienting out by `τℤ`</span>\n\n<span class=\"cm\">The second stage is to quotient out `ℂˣ` by the subgroup `&lt;q&gt;` generated by `q := e ^ {2πiτ}`.</span>\n<span class=\"cm\">At this point we are regarding `q` as fixed, and we would like to write down meromorphic functions</span>\n<span class=\"cm\">`f` in one nonzero complex variable `u` with the property that they satisfy `f(qu)=f(u)`</span>\n<span class=\"cm\">for all `u` and thus descend to the curve. One example is `F_q(u) := ∑_{n∈ℤ} uq^n/(1-uq^n)^2`</span>\n<span class=\"cm\">(which for a fixed `q` converges for all non-zero `u` other than those in the subgroup `&lt;q&gt;`,</span>\n<span class=\"cm\">where there is a double pole.</span>\n\n<span class=\"cm\">Expanding `F_q(u)` as a power series in `q` (deal with the three cases `n&lt;0,n=0,n&gt;0` separately)</span>\n<span class=\"cm\">we get `F_q(u) = u/(1-u)^2+∑_{n&gt;=1}(uq^n/(1-uq^n)^2+u^{-1}q^n/(1-u^{-1}q^n)^2),`</span>\n<span class=\"cm\">This descends to a meromorphic function on `ℂˣ/&lt;q&gt;=ℂ/Λ(τ)` with a pole of order 2 at `z=0`</span>\n<span class=\"cm\">and no other poles. We also know that the Weierstrass P-function `P_τ(z)`, considered as a function</span>\n<span class=\"cm\">on the curve, has a pole of order 2 at `0` and no other poles, so some linear combination</span>\n<span class=\"cm\">of these functions will have a pole of order at most 1 at `0` and no other poles.</span>\n<span class=\"cm\">An explicit analysis of the power series in `z` shows that the</span>\n<span class=\"cm\">difference `P_τ(z)-(2πi)²F_q(u)`, or if you like `P_τ(z) - (2πi)²F_{2^{2πiq}}(e^{2πiz})`,</span>\n<span class=\"cm\">is the linear combination where the order 2 poles cancel, and one can check explicitly</span>\n<span class=\"cm\">that in fact the order 1 poles cancel too, so this difference is holomorphic everywhere</span>\n<span class=\"cm\">and must thus be constant. An explicit calculation gives that this constaint</span>\n<span class=\"cm\">is `- 1/12 + 2∑_{n≥1}q^n/(1-q^n)^2`, sometimes known as `(-1/12)*E₂`. Note of course that</span>\n<span class=\"cm\">this is a function of `q` only.</span>\n\n<span class=\"cm\">## A proof of the algebraic identity</span>\n\n<span class=\"cm\">Step 1) Prove the standard result about X=P and Y=dP/dz satisfying a cubic equation</span>\n<span class=\"cm\">`Y^2=4X^3+g₄X+g₆` where `g₄` and `g₆` are Eisenstein series.</span>\n\n<span class=\"cm\">Step 2) Translate into a statement involving `F`, with `u` and `q` variables,</span>\n<span class=\"cm\">then note that all the `π`s cancel and what comes out is the result we seek.</span>\n\n<span class=\"cm\">Step 3) Argue that a certain meromorphic function of two variables being zero at lots</span>\n<span class=\"cm\">of complex points implies that it must be identically zero.</span>\n\n<span class=\"cm\">## Notation</span>\n\n<span class=\"cm\">Notation plays an important part in this game, where there are several copies of the complex</span>\n<span class=\"cm\">numbers floating around. `τ` will be in the upper half plane and it will parametrise the</span>\n<span class=\"cm\">lattice `Λ(τ)`. `z` will be the complex number which is a parameter for the `ℂ` which gets</span>\n<span class=\"cm\">quotiented out by `Λ(τ)`. `u := e^{2πiz}` is the parameter on `ℂˣ`, and `q := e^{2πiτ}` will</span>\n<span class=\"cm\">be a complex number with `0&lt;|q|&lt;1`.</span>\n\n<span class=\"cm\">-/</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">UniversalEllipticCurve.AlgebraicUniformisation</span>\n<span class=\"c1\">-- The point of this namespace is simply to state the combinatorial identity.</span>\n\n<span class=\"n\">suppress_compilation</span> <span class=\"c1\">-- maybe should be removed</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Polynomial</span> <span class=\"n\">PowerSeries</span>  <span class=\"c1\">-- to get `R[X]` and `R⟦X⟧` notation</span>\n\n<span class=\"c1\">-- let `K` be `ℚ(u)`, the field of fractions of `ℤ[u]`.</span>\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">Field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">Algebra</span> <span class=\"n\">ℤ</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">IsFractionRing</span> <span class=\"n\">ℤ</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n<span class=\"c1\">-- When we say `u` we mean the one in `K`</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">K</span> <span class=\"o\">:=</span> <span class=\"n\">algebraMap</span> <span class=\"n\">ℤ</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"n\">K</span> <span class=\"n\">X</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">BigOperators</span> <span class=\"n\">Finset</span> <span class=\"c1\">-- to get `∑` notation and `range`</span>\n\n<span class=\"c1\">-- Can I rely on the fact that that sum will be 0 if n is 0?</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">s3</span> <span class=\"o\">:=</span> <span class=\"n\">PowerSeries.mk</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">n.divisors</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">3</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- it's true</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">PowerSeries.coeff</span> <span class=\"n\">K</span> <span class=\"mi\">0</span> <span class=\"n\">s3</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">s5</span> <span class=\"o\">:=</span> <span class=\"n\">PowerSeries.mk</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">n.divisors</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">5</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- check junk value</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">PowerSeries.coeff</span> <span class=\"n\">K</span> <span class=\"mi\">0</span> <span class=\"n\">s5</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n\n<span class=\"n\">scoped</span> <span class=\"kd\">notation</span><span class=\"o\">:</span><span class=\"mi\">9001</span> <span class=\"n\">R</span> <span class=\"s2\">\"⟦q⟧\"</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">PowerSeries</span> <span class=\"n\">R</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">a4</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"bp\">⟦</span><span class=\"n\">q</span><span class=\"bp\">⟧</span> <span class=\"o\">:=</span> <span class=\"n\">PowerSeries.C</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">5</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">s3</span>\n\n<span class=\"c1\">-- remark: just like the others above, this descends to ℤ⟦q⟧</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">a6</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"bp\">⟦</span><span class=\"n\">q</span><span class=\"bp\">⟧</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">PowerSeries.C</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">5</span><span class=\"bp\">/</span><span class=\"mi\">12</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">s3</span> <span class=\"bp\">+</span> <span class=\"n\">PowerSeries.C</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">7</span><span class=\"bp\">/</span><span class=\"mi\">12</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">s5</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- this one really is now in `K⟦q⟧`, it involves `u`. It is related to the power series</span>\n<span class=\"c1\">-- of the Weierstraß P-function.</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">X₀</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"bp\">⟦</span><span class=\"n\">q</span><span class=\"bp\">⟧</span> <span class=\"o\">:=</span> <span class=\"n\">PowerSeries.C</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">u</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">+</span>\n  <span class=\"n\">PowerSeries.mk</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"bp\">∑</span> <span class=\"n\">d</span> <span class=\"k\">in</span> <span class=\"n\">n.divisors</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">^</span><span class=\"n\">d</span> <span class=\"bp\">+</span> <span class=\"n\">u</span><span class=\"bp\">⁻¹^</span><span class=\"n\">d</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span><span class=\"o\">))</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">PowerSeries.coeff</span> <span class=\"n\">K</span> <span class=\"mi\">0</span> <span class=\"n\">X₀</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">u</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n\n<span class=\"c1\">-- This is also a true power series, related to the derivative of P.</span>\n<span class=\"n\">abbrev</span> <span class=\"n\">Y₀</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"bp\">⟦</span><span class=\"n\">q</span><span class=\"bp\">⟧</span> <span class=\"o\">:=</span> <span class=\"n\">PowerSeries.C</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">u</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"bp\">+</span>\n  <span class=\"n\">PowerSeries.mk</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"bp\">↦</span> <span class=\"bp\">∑</span> <span class=\"n\">d</span> <span class=\"k\">in</span> <span class=\"n\">n.divisors</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">u</span> <span class=\"bp\">^</span> <span class=\"n\">d</span> <span class=\"bp\">-</span>\n    <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">u</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">^</span> <span class=\"n\">d</span> <span class=\"bp\">+</span> <span class=\"n\">d</span><span class=\"o\">))</span>\n\n<span class=\"c1\">-- if I got it right then</span>\n\n<span class=\"n\">abbrev</span> <span class=\"n\">ShouldBeZeroIfICopiedCorrectly</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"bp\">⟦</span><span class=\"n\">q</span><span class=\"bp\">⟧</span> <span class=\"o\">:=</span> <span class=\"n\">Y₀</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">+</span><span class=\"n\">X₀</span><span class=\"bp\">*</span><span class=\"n\">Y₀</span><span class=\"bp\">-</span><span class=\"n\">X₀</span><span class=\"bp\">^</span><span class=\"mi\">3</span><span class=\"bp\">-</span><span class=\"n\">a4</span><span class=\"bp\">*</span><span class=\"n\">X₀</span><span class=\"bp\">-</span><span class=\"n\">a6</span>\n<span class=\"c1\">-- Proof: see Silverman 2 theorem V.1.1</span>\n\n<span class=\"c1\">-- the main goal</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">uniformisation</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ShouldBeZeroIfICopiedCorrectly</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"bp\">⟦</span><span class=\"n\">q</span><span class=\"bp\">⟧</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"c1\">-- missing?</span>\n<span class=\"kd\">@[</span><span class=\"n\">simp</span><span class=\"kd\">]</span> <span class=\"kd\">lemma</span> <span class=\"n\">PowerSeries.constantCoeff_mk</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">K</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">PowerSeries.constantCoeff</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"n\">PowerSeries.mk</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"c1\">-- unit tests</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">PowerSeries.coeff</span> <span class=\"n\">K</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"n\">ShouldBeZeroIfICopiedCorrectly</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"k\">have</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- not sure which tactic to use</span>\n  <span class=\"n\">field_simp</span>\n  <span class=\"n\">ring</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">PowerSeries.coeff</span> <span class=\"n\">K</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">ShouldBeZeroIfICopiedCorrectly</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">simp</span>\n  <span class=\"c1\">-- not sure I should be solving this with simp lemmas any more</span>\n  <span class=\"gr\">sorry</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Can we get up to ten like Pari does in a fraction of a second?</span>\n\n<span class=\"cm\">```pari</span>\n<span class=\"cm\">q</span>\n<span class=\"cm\">u</span>\n<span class=\"cm\">s3=sum(n=1,10,sigma(n,3)*q^n)+O(q^11)</span>\n<span class=\"cm\">s5=sum(n=1,10,sigma(n,5)*q^n)+O(q^11)</span>\n<span class=\"cm\">a4=-5*s3</span>\n<span class=\"cm\">a6=-(5*s3+7*s5)/12</span>\n<span class=\"cm\">X=u/(1-u)^2+sum(n=1,10,sumdiv(n,d,d*(u^d+u^(-d)-2))*q^n)+O(q^11)</span>\n<span class=\"cm\">Y=u^2/(1-u)^3+sum(n=1,10,sumdiv(n,d,d*(d-1)/2*u^d-d*(d+1)/2*u^(-d)+d)*q^n)+O(q^11)</span>\n<span class=\"cm\">Y^2+X*Y-X^3-a4*X-a6</span>\n</code></pre></div>\n<p>The result is <code>O(q^11)</code> i.e. zero up until degree 11 at least.<br>\n-/</p>\n<p>end UniversalEllipticCurve.AlgebraicUniformisation</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>\n</code></pre></div>",
        "id": 433383221,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713213864
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"389019\">Chris Birkbeck</span> <a href=\"#narrow/stream/416277-FLT/topic/Weierstrass.20P-function/near/433374522\">said</a>:</p>\n<blockquote>\n<p>No its the one we have</p>\n</blockquote>\n<p><a href=\"/user_uploads/3121/ifXyzkzuLNVZpYhBaSqzVrco/sigma.png\">sigma.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ifXyzkzuLNVZpYhBaSqzVrco/sigma.png\" title=\"sigma.png\"><img src=\"/user_uploads/3121/ifXyzkzuLNVZpYhBaSqzVrco/sigma.png\"></a></div><p>Well that didn't go well (it's what I did before I asked)</p>",
        "id": 433383428,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1713213945
    },
    {
        "content": "<p>I am not able to fully understand the relation, but is not it possible to relate the expected differential equation to the identities obtained by Ramanujan in <em>On certain arithmetical functions</em>, Transaction of the Cambridge Philosophical Society, XXII, No. 9, 1916, 159--184. (The series <code>s3</code> and <code>s5</code> are closely related to the series denoted <code>Q</code> and <code>R</code> in the paper, and there is a remark about the expansion of the Weierstrass function.)</p>",
        "id": 433838056,
        "sender_full_name": "Joël Riou",
        "timestamp": 1713374272
    }
]