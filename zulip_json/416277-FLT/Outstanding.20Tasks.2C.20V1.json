[
    {
        "content": "<p>So let me stress that I still have a day job, with exam invigilation and marking, supervising undergraduate projects etc etc; term finishes at the end of June and then we'll really be able to get started. I have opened the project because basically more and more people were telling me that I had to open it, not because I'm ready to run it! But I will attempt to run it :-) </p>\n<p>The rules: if anyone wants to \"claim\" any of the below tasks, make themselves known on this thread.</p>\n<p>I am still getting the hang of the colour scheme on the <a href=\"https://imperialcollegelondon.github.io/FLT/blueprint/dep_graph_document.html\">blueprint graph</a>. Right now ignore border colours of everything. As for interior colours, green means \"done\", blue means \"could well be ready although feel free to ask\" and no colour means \"unlikely to be ready\".</p>\n<p>So let's go through the blue nodes.</p>\n<p>1) <code>fermatLastTheoremThree</code>: this is FLT for p=3 and it's being worked on by the LFTCM team e.g. <span class=\"user-mention\" data-user-id=\"556875\">@Pietro Monticone</span> . My impression is that it's all under control; the node will go green when the result is in mathlib.</p>\n<p>2) <code>FLT.FreyPackage.of_not_FermatLastTheorem</code>: this is elementary but long. The sorrys are in <code>of_not_FermatLastTheorem_coprime_p_ge_5</code>. The goal is \"this algorithm which obviously works, works\". The algorithm is \"given a,b,c a counterexample, cast out divisors and swap them around a bit (possibly changing signs) and you can obviously guarantee that b is even and a is 3 mod 4\" and then the goal is to prove that the algorithm works.</p>\n<p>3) <code>FLT.FreyCurve</code>: this is filling in the sorries here <a href=\"https://imperialcollegelondon.github.io/FLT/docs/FLT/Basic/Reductions.html#FLT.FreyPackage.FreyCurve\">https://imperialcollegelondon.github.io/FLT/docs/FLT/Basic/Reductions.html#FLT.FreyPackage.FreyCurve</a> . This involves knowing how to compute the discriminant of a plane cubic, perhaps spotting some factorization of a denominator, and basically verifying that the curve I've written down is nonsingular.</p>\n<p>4) <code>group_theory_lemma</code>. The work that <span class=\"user-mention\" data-user-id=\"464700\">@David Ang</span> and <span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span> are doing will ultimately show that if A is the abelian group corresponding to the points of an elliptic curve over an alg closed field of char 0, then the n-torsion in A has size <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">n^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n\\geq1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>. I claim that it follows from this that the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>-torsion must in fact be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mi>n</mi><mi mathvariant=\"double-struck\">Z</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">(\\Z/n\\Z)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathbb\">Z</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> and I've abstracted out the lemma which proves this. I haven't even formalised the statement in Lean yet so this is what needs doing for starters, and then the proof might be quite fun/challenging.</p>\n<p>5) <code>EllipticCurve.Points.map</code>: This is the claim that if E/k is an elliptic curve, and K,L are k-algebras (and fields) and we have a map between them, then the induced map E(K) -&gt; E(L) is a group homomorphism. The proof should just be \"take a look at the gory details of the definition and note that it's defined by ratios of polynomials with coefficients in k\". Note that right now there is some sorried data (defining the map itself) (this may or may not be in mathlib already, I didn't look). Once this is done, <code>map_id</code> and <code>map_comp</code> should hopefully be very easy.</p>\n<p>I think that most other blue things still need some input on my end before they're viable, but there are five starters.</p>",
        "id": 436488903,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714565025
    },
    {
        "content": "<p>4 is already done by <span class=\"user-mention\" data-user-id=\"258845\">@Peiran Wu</span> (who's not subscribed to this stream). 5 is already done a while ago in my local branch.</p>",
        "id": 436489118,
        "sender_full_name": "David Ang",
        "timestamp": 1714565163
    },
    {
        "content": "<p>Please check my open PRs :)</p>",
        "id": 436489129,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714565164
    },
    {
        "content": "<p>OK <span class=\"user-mention\" data-user-id=\"464700\">@David Ang</span> can you PR 5 to mathlib? Great to hear about 4! Probably mathlib is also the home for this, as although it's a random lemma in group theory it's used (as far as I can see) to analyse the torsion points of elliptic curves.</p>",
        "id": 436489678,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714565505
    },
    {
        "content": "<p>It can be generalized to other exponents than 2; I image one can use the more general version to show the corresponding statement for general abelian varieties (and for the multiplicative group, but this will already exist).</p>",
        "id": 436489818,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1714565592
    },
    {
        "content": "<p>He has the more general version, I think</p>",
        "id": 436489840,
        "sender_full_name": "David Ang",
        "timestamp": 1714565608
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479359\">Michael Stoll</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V1/near/436489818\">said</a>:</p>\n<blockquote>\n<p>It can be generalized to other exponents than 2; I image one can use the more general version to show the corresponding statement for general abelian varieties (and for the multiplicative group, but this will already exist).</p>\n</blockquote>\n<p>Yes -- I write the more general version in the blueprint.</p>",
        "id": 436489860,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714565632
    },
    {
        "content": "<p>Seems like I already made a <a href=\"https://github.com/leanprover-community/mathlib4/pull/10142\">PR</a> for 5, but I was working on other things since January... I'll come back to this asap</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V1/near/436489678\">said</a>:</p>\n<blockquote>\n<p>OK <span class=\"user-mention silent\" data-user-id=\"464700\">David Ang</span> can you PR 5 to mathlib? Great to hear about 4! Probably mathlib is also the home for this, as although it's a random lemma in group theory it's used (as far as I can see) to analyse the torsion points of elliptic curves.</p>\n</blockquote>",
        "id": 436490315,
        "sender_full_name": "David Ang",
        "timestamp": 1714565933
    },
    {
        "content": "<p>A message was moved from this topic to <a class=\"stream-topic\" data-stream-id=\"416277\" href=\"/#narrow/stream/416277-FLT/topic/p.20.3D.203.20case\">#FLT &gt; p = 3 case</a> by <span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span>.</p>",
        "id": 436512131,
        "sender_full_name": "Notification Bot",
        "timestamp": 1714573970
    },
    {
        "content": "<p>I'd like to work on 2, cleaning up and simplifying the path from no Frey Package to FLT.</p>",
        "id": 436523020,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714577679
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V1/near/436523020\">said</a>:</p>\n<blockquote>\n<p>I'd like to work on 2, cleaning up and simplifying the path from no Frey Package to FLT.</p>\n</blockquote>\n<p>Already done</p>",
        "id": 436524837,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714578340
    },
    {
        "content": "<p>I know the proof is done, I want to clean it up</p>",
        "id": 436525083,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714578424
    },
    {
        "content": "<p>I'll start from your version in <a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/29\">FLT#29</a></p>",
        "id": 436525426,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714578560
    },
    {
        "content": "<p>^ this now linkifies FYI</p>",
        "id": 436526103,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714578785
    },
    {
        "content": "<p>I have to go learn more lean to contribute, but 3 feels pretty squarely in my wheelhouse mathematically/just a calculation? Depends on how much of the theory of nonsingular we still need/can specialize to hyperelliptic. (That said don't take this as a blocker from tackling it yourself as might take too long)</p>",
        "id": 436553665,
        "sender_full_name": "Watson Bernard Ladd",
        "timestamp": 1714589025
    },
    {
        "content": "<p>3 is done</p>",
        "id": 436559847,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714591853
    },
    {
        "content": "<p>1/ under control<br>\n2/ PR open<br>\n3/ done<br>\n4/ done<br>\n5/ done</p>",
        "id": 436559955,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714591903
    },
    {
        "content": "<p>As far as I can tell, so time for a V2 thread, <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> :)</p>",
        "id": 436559989,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714591922
    },
    {
        "content": "<p>Extrapolating from this pace with outstanding tasks, it looks like the completion announcement of the 5-year project is due to appear in a thread called <strong>Outstanding Tasks, V1826</strong>. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 436566636,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1714594884
    },
    {
        "content": "<p>I think we should extrapolate in a different axis and conclude that the project will be done by October and Kevin gets to spend the next five years on a beach</p>",
        "id": 436568634,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714595823
    },
    {
        "content": "<p>I'm in the process of adding some j-invariant tasks. Another thing we can do is start on Weierstrass P-function and quaternion algebras. I have some time tomorrow to work on this but then I've got a busy Friday. I'm sorry I'm not really able to lead the project properly right now.</p>",
        "id": 436570144,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714596403
    },
    {
        "content": "<p>No worries, we're just all excited to get started (and speaking for myself, trying to get some contributions in while I can still understand more than one word in three of the blueprint)</p>",
        "id": 436572547,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714597457
    },
    {
        "content": "<p>OK so <code>FLT.FreyCurve</code> is green, so now <code>Frey_curve_j</code> is blue and also <code>FLT.FreyPackage.FreyCurve.j_valuation_of_bad_prime</code> (which uses it) is also morally blue (I don't really understand why it's not blue -- if something uses a theorem which isn't proved does that make it not blue?)</p>",
        "id": 436575099,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714598572
    },
    {
        "content": "<p>They're both relatively straightforward; should I make issues for them or just allow people here to claim them?</p>",
        "id": 436575165,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714598604
    },
    {
        "content": "<p>IMHO it's up to how you want to run the project. Making an issue is free, even for small ones, so I'd get started using that if that's the eventual destination just to keep moving people that way. (I used to do much math. Now I do more CS and manage things via github issues reasonably often)</p>",
        "id": 436577628,
        "sender_full_name": "Watson Bernard Ladd",
        "timestamp": 1714599727
    },
    {
        "content": "<p>Right now I'm going to be using my traditional approach of not managing anything at all well and just hoping that things will turn out OK. When running this project is my actual job I will hopefully do a better job of it.</p>\n<p><span class=\"user-mention\" data-user-id=\"258845\">@Peiran Wu</span> I added the <a href=\"https://imperialcollegelondon.github.io/FLT/docs/FLT/EllipticCurve/Torsion.html#group_theory_lemma\">group theory lemma</a> as a sorry. Fancy making a PR?</p>",
        "id": 436577848,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714599876
    },
    {
        "content": "<p>How sure are you that <code>FreyCurve.j</code> is correct? :)</p>",
        "id": 436577967,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714599956
    },
    {
        "content": "<p>The algorithm was: I copied the definition from Serre, then set p=37 and then made a Frey curve in pari-gp and checked that the answer was correct, and then attempted to copy the result into Lean. So I have some confidence but not a whole lot. It should be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup><mo stretchy=\"false\">(</mo><msup><mi>C</mi><mn>2</mn></msup><mo>−</mo><mi>A</mi><mi>B</mi><msup><mo stretchy=\"false\">)</mo><mn>3</mn></msup><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mi>B</mi><mi>C</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^8(C^2-AB)^3/(ABC)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">BC</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><msup><mi>a</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">A=a^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span> etc.</p>",
        "id": 436578160,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714600081
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>PARI/GP is free software, covered by the GNU General Public License, and comes\nWITHOUT ANY WARRANTY WHATSOEVER.\n\nType ? for help, \\q to quit.\nType ?17 for how to get moral (and possibly technical) support.\n\nparisize = 8000000, primelimit = 500000, nbthreads = 20\n? p=37\n%1 = 37\n? e=ellinit([1,(b^p-1-a^p)/4,0,-a^p*b^p/16,0])\n%2 = [1, 1/4*b^37 + (-1/4*a^37 - 1/4), 0, -1/16*a^37*b^37, 0, b^37 - a^37, -1/8*a^37*b^37, 0, -1/256*a^74*b^74, b^74 + a^37*b^37 + a^74, -b^111 - 3/2*a^37*b^74 + 3/2*a^74*b^37 + a^111, 1/256*a^74*b^148 + 1/128*a^111*b^111 + 1/256*a^148*b^74, (256*b^222 + 768*a^37*b^185 + 1536*a^74*b^148 + 1792*a^111*b^111 + 1536*a^148*b^74 + 768*a^185*b^37 + 256*a^222)/(a^74*b^148 + 2*a^111*b^111 + a^148*b^74), Vecsmall([0]), [Vecsmall([128, 0])], [0, 0, 0, 0]]\n? e.j\n%3 = (256*b^222 + 768*a^37*b^185 + 1536*a^74*b^148 + 1792*a^111*b^111 + 1536*a^148*b^74 + 768*a^185*b^37 + 256*a^222)/(a^74*b^148 + 2*a^111*b^111 + a^148*b^74)\n? 2^8*((a^37+b^37)^2-a^37*b^37)^3/a^74/b^74/(a^37+b^37)^2\n%4 = (256*b^222 + 768*a^37*b^185 + 1536*a^74*b^148 + 1792*a^111*b^111 + 1536*a^148*b^74 + 768*a^185*b^37 + 256*a^222)/(a^74*b^148 + 2*a^111*b^111 + a^148*b^74)\n? %3-%4\n%5 = 0\n</code></pre></div>",
        "id": 436578318,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714600175
    },
    {
        "content": "<p>I got it to the point where I expected <code>ring</code> to finish, but it didn't. I'll stare at the expression for a little longer</p>",
        "id": 436578545,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714600319
    },
    {
        "content": "<p>Unless it's just that I forgot to substitute out the <code>c</code></p>",
        "id": 436578661,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714600374
    },
    {
        "content": "<p>The <code>^ 3</code> got lost</p>",
        "id": 436583565,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714602956
    },
    {
        "content": "<p><a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/38\">FLT#38</a></p>",
        "id": 436583725,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714603028
    },
    {
        "content": "<p>Sorry!</p>",
        "id": 436585139,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714603902
    },
    {
        "content": "<p>I ran out of time on <code>j_valuation_of_bad_prime</code>, but wip is in <a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/39\">FLT#39</a></p>",
        "id": 436633151,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714635092
    },
    {
        "content": "<p>If someone wants to pick it up, go ahead</p>",
        "id": 436633169,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714635105
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V1/near/436577848\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"258845\">Peiran Wu</span> I added the <a href=\"https://imperialcollegelondon.github.io/FLT/docs/FLT/EllipticCurve/Torsion.html#group_theory_lemma\">group theory lemma</a> as a sorry. Fancy making a PR?</p>\n</blockquote>\n<p>I will make one this weekend. Some of the <code>def</code>s are Mathlib-worthy, but I'll dump everything in the PR first.</p>",
        "id": 436664797,
        "sender_full_name": "Peiran Wu",
        "timestamp": 1714646742
    },
    {
        "content": "<p>Yeah if we could get it all into FLT then we can think about getting it into mathlib later.</p>",
        "id": 436665547,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714647001
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V1/near/436633169\">said</a>:</p>\n<blockquote>\n<p>If someone wants to pick it up, go ahead</p>\n</blockquote>\n<p>Nearly done here</p>",
        "id": 436698021,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714657567
    },
    {
        "content": "<p>I've begun a new chapter 5 working towards the definitions of the automorphic forms of interest to us in the modularity lifting theorem. There's a new blue node <code>MatrixRing.isCentralSimple</code> : matrix rings are central simple algebras. Not too hard. See <a href=\"https://github.com/ImperialCollegeLondon/FLT/issues/47\">https://github.com/ImperialCollegeLondon/FLT/issues/47</a> (I am not yet clear about whether I should make an issue for a proof this short).</p>",
        "id": 436803916,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714701150
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V1/near/436803916\">said</a>:</p>\n<blockquote>\n<p>I've begun a new chapter 5 working towards the definitions of the automorphic forms of interest to us in the modularity lifting theorem. There's a new blue node <code>MatrixRing.isCentralSimple</code> : matrix rings are central simple algebras. Not too hard. See <a href=\"https://github.com/ImperialCollegeLondon/FLT/issues/47\">https://github.com/ImperialCollegeLondon/FLT/issues/47</a> (I am not yet clear about whether I should make an issue for a proof this short).</p>\n</blockquote>\n<p>Pushed half at <a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/50\">FLT#50</a></p>",
        "id": 436943208,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714763233
    },
    {
        "content": "<p>My proof of (2) is up at <a href=\"https://github.com/ImperialCollegeLondon/FLT/pull/51\">FLT#51</a></p>",
        "id": 437031355,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1714838356
    }
]