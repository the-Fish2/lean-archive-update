[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/416277-FLT/topic/Outstanding.20Tasks.2C.20V1/near/436488903\">said</a>:</p>\n<blockquote>\n<p>1) <code>fermatLastTheoremThree</code>: this is FLT for p=3 and it's being worked on by the LFTCM team e.g. <span class=\"user-mention silent\" data-user-id=\"556875\">Pietro Monticone</span> . My impression is that it's all under control; the node will go green when the result is in mathlib.</p>\n</blockquote>\n<p>Yes, this is exactly right. </p>\n<p>For those interested, here you can find all the relevant resources: </p>\n<ul>\n<li><a href=\"#narrow/stream/429416-LFTCM-2024/topic/Project.20idea.3A.20FLT3\">Zulip Topic</a>.</li>\n<li><a href=\"https://github.com/riccardobrasca/flt3\">Original repository</a> we worked in at LFTCM2024 and from which the porting to Mathlib is happening. Once a PR is merged into Mathlib, the related code is removed from this repository (e.g. <a href=\"https://github.com/leanprover-community/mathlib4/pull/11767\">#11767</a>).</li>\n<li><a href=\"https://github.com/pitmonticone/FLT3\">Forked repository</a> containing the full project including <a href=\"https://pitmonticone.github.io/FLT3/\">Github page</a>, <a href=\"https://pitmonticone.github.io/FLT3/docs/\">documentation</a> and <a href=\"https://pitmonticone.github.io/FLT3/blueprint/dep_graph_document.html\">blueprint</a>.</li>\n</ul>",
        "id": 436505148,
        "sender_full_name": "Pietro Monticone",
        "timestamp": 1714572322
    },
    {
        "content": "<p>What's the situation re: landing it in mathlib?</p>",
        "id": 436519471,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1714576287
    },
    {
        "content": "<p>First of all I think we need <a href=\"https://github.com/leanprover-community/mathlib4/pull/12386\">#12386</a></p>",
        "id": 436525821,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714578690
    },
    {
        "content": "<p>It is ready to go in my opinion</p>",
        "id": 436525857,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714578703
    },
    {
        "content": "<p>If I'm not mistaken <a href=\"https://github.com/leanprover-community/mathlib4/pull/11767\">#11767</a> is the only PR that has been merged so far.</p>",
        "id": 436525878,
        "sender_full_name": "Pietro Monticone",
        "timestamp": 1714578715
    },
    {
        "content": "<p>Yes, then we realized that rings<br>\n of integers can be much faster and we focused on that</p>",
        "id": 436526018,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714578760
    },
    {
        "content": "<p>BTW if someone has time to review <a href=\"https://github.com/leanprover-community/mathlib4/pull/12386\">#12386</a> it would be great... <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 436548941,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714587097
    },
    {
        "content": "<p>There seems to be an open question about whether the map from O_K to K should be a coercion?</p>",
        "id": 436550195,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714587613
    },
    {
        "content": "<p>It now is. Having it as a coercion I don't think can hurt. The problem is that there are two \"natural\" ways of moving from <code>ùìû K</code> to <code>K</code> (using the coercion and <code>algebraMap</code>, of course those are defeq). Making the coercion an <code>abbrev</code> works well and there not that much friction.</p>",
        "id": 436553414,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714588898
    },
    {
        "content": "<p>I think it is fine to cut off the features for that PR and push some things to follow-ons.</p>",
        "id": 436553829,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1714589095
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> do you want flt3 in the FLT repo or are you happy to wait for it to be merged in mathlib?</p>",
        "id": 436666510,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714647347
    },
    {
        "content": "<p>I <em>definitely</em> want it in mathlib!</p>\n<p>The FLT repo will have some stuff which is too full of sorries to go into mathlib, but my vision is that it's just used as a sandbox for getting things ready for mathlib (e.g. my students' work on families of Galois reps and on Frobenius elements). The smaller the repo, the better!</p>",
        "id": 436668028,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1714647906
    },
    {
        "content": "<p>OK, it will stay in my repo. Don't worry, we will take care of having it in mathlib soon.</p>",
        "id": 436682729,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1714653117
    }
]